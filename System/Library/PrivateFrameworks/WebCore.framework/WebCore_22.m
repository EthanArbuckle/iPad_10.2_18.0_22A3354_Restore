uint64_t WebCore::JSCustomEvent::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v4 = a2[11];
  if (v4 && *(_BYTE *)(v4 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    v5 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 80);
    if (!v5 || (v5[1] & 3) != 0)
      v6 = 0;
    else
      v6 = *v5;
    (*(void (**)(_QWORD *, uint64_t))(*a2 + 24))(a2, v6);
    v7 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 96);
    if (!v7 || (v7[1] & 3) != 0)
      v8 = 0;
    else
      v8 = *v7;
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*a2 + 24))(a2, v8);
  }
  return result;
}

void (***WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2))(WebCore::CustomEvent *__hidden this)
{
  void (***v2)(WebCore::CustomEvent *__hidden);
  JSC::VM *v4;
  uint64_t v5;
  WebCore::JSCustomEvent ***FunctionRealm;
  int v7;
  JSC::JSCell *v8;
  uint64_t Object;
  JSC::Structure *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  _BOOL4 v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WebCore::JSDOMGlobalObject *v18;
  WTF::StringImpl *v19;
  JSC::JSCell *v20;
  JSC::JSGlobalObject *v21;
  JSC::JSObject *v22;
  void (***v23)(WebCore::CustomEvent *__hidden);
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  JSC::VM *v29;
  double v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  JSC::VM *v33;
  double v34;
  WTF::StringImpl *v35;
  JSValue v36;
  WebCore::JSDOMGlobalObject *v37;
  JSC::JSObject *v38;
  JSC::Structure *v39;
  unint64_t SubclassStructure;
  BOOL v41;
  int v42;
  uint64_t v43;
  int *v44;
  int v45;
  BOOL v46;
  int v47;
  uint64_t v48;
  int *v49;
  int v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  int *v54;
  int v55;
  WebCore::JSCustomEvent ***v56;
  JSC::VM *v57;
  WTF::StringImpl *v58[2];
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  int v61;
  void (***v62)(WebCore::CustomEvent *__hidden);

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (void (***)(WebCore::CustomEvent *__hidden))JSC::VM::throwException(v4, a1, v36);
  }
  v5 = a2;
  FunctionRealm = *(WebCore::JSCustomEvent ****)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v60);
  v7 = v61;
  if (!v61)
  {
    v57 = v4;
    if ((unint64_t)(*(int *)(v5 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_14;
    }
    v8 = *(JSC::JSCell **)(v5 + 56);
    v2 = (void (***)(WebCore::CustomEvent *__hidden))*((_QWORD *)a1 + 7);
    v62 = v2;
    if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_14;
    }
    if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v8)) == 0)
    {
      JSC::throwTypeError();
      goto LABEL_68;
    }
    v10 = (JSC::Structure *)Object;
    v56 = FunctionRealm;
    WTF::AtomStringImpl::addLiteral();
    v12 = JSC::JSObject::get(v10, a1, (unint64_t)v58[0]);
    if (v58[0])
    {
      if (*(_DWORD *)v58[0] == 2)
        WTF::StringImpl::destroy(v58[0], v11);
      else
        *(_DWORD *)v58[0] -= 2;
    }
    if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
      goto LABEL_68;
    if (v12 == 10)
    {
      v13 = 0;
      goto LABEL_34;
    }
    v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v12 >= 0xFFFE000000000000)
    {
      v41 = (_DWORD)v12 == 0;
    }
    else
    {
      *(_QWORD *)&v26 = v12 - 0x2000000000000;
      if (v12 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v13 = v26 > 0.0 || v26 < 0.0;
LABEL_33:
        if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
          goto LABEL_68;
LABEL_34:
        WTF::AtomStringImpl::addLiteral();
        v28 = JSC::JSObject::get(v10, a1, (unint64_t)v58[0]);
        if (v58[0])
        {
          if (*(_DWORD *)v58[0] == 2)
            WTF::StringImpl::destroy(v58[0], v27);
          else
            *(_DWORD *)v58[0] -= 2;
        }
        if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
          goto LABEL_68;
        if (v28 == 10)
        {
          v14 = 0;
          goto LABEL_45;
        }
        v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v28 >= 0xFFFE000000000000)
        {
          v46 = (_DWORD)v28 == 0;
          goto LABEL_113;
        }
        *(_QWORD *)&v30 = v28 - 0x2000000000000;
        if (v28 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v30 <= 0.0)
          {
            v14 = v30 < 0.0;
            goto LABEL_44;
          }
        }
        else
        {
          if ((v28 & 0xFFFE000000000002) != 0)
          {
            v14 = v28 == 7;
            goto LABEL_44;
          }
          v47 = *(unsigned __int8 *)(v28 + 5);
          if (v47 == 3)
          {
            v50 = *(_DWORD *)(v28 + 8);
LABEL_143:
            v46 = v50 == 0;
            goto LABEL_113;
          }
          if (v47 == 2)
          {
            v48 = *(_QWORD *)(v28 + 8);
            if ((v48 & 1) != 0)
              v49 = (int *)(v28 + 16);
            else
              v49 = (int *)(v48 + 4);
            v50 = *v49;
            goto LABEL_143;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v46 = *(_QWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_113:
            v14 = !v46;
LABEL_44:
            if (*((_DWORD *)v29 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) != 0)
              goto LABEL_68;
LABEL_45:
            WTF::AtomStringImpl::addLiteral();
            v32 = JSC::JSObject::get(v10, a1, (unint64_t)v58[0]);
            if (v58[0])
            {
              if (*(_DWORD *)v58[0] == 2)
                WTF::StringImpl::destroy(v58[0], v31);
              else
                *(_DWORD *)v58[0] -= 2;
            }
            if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
              goto LABEL_68;
            if (v32 == 10)
            {
              v15 = 0;
              goto LABEL_56;
            }
            v33 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v32 >= 0xFFFE000000000000)
            {
              v51 = (_DWORD)v32 == 0;
              goto LABEL_125;
            }
            *(_QWORD *)&v34 = v32 - 0x2000000000000;
            if (v32 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              if (v34 <= 0.0)
              {
                v15 = v34 < 0.0;
                goto LABEL_55;
              }
            }
            else
            {
              if ((v32 & 0xFFFE000000000002) != 0)
              {
                v15 = v32 == 7;
                goto LABEL_55;
              }
              v52 = *(unsigned __int8 *)(v32 + 5);
              if (v52 == 3)
              {
                v55 = *(_DWORD *)(v32 + 8);
LABEL_147:
                v51 = v55 == 0;
                goto LABEL_125;
              }
              if (v52 == 2)
              {
                v53 = *(_QWORD *)(v32 + 8);
                if ((v53 & 1) != 0)
                  v54 = (int *)(v32 + 16);
                else
                  v54 = (int *)(v53 + 4);
                v55 = *v54;
                goto LABEL_147;
              }
              if ((*(_BYTE *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v51 = *(_QWORD *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_125:
                v15 = !v51;
LABEL_55:
                if (!*((_DWORD *)v33 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) == 0)
                {
LABEL_56:
                  WTF::AtomStringImpl::addLiteral();
                  v16 = JSC::JSObject::get(v10, a1, (unint64_t)v58[0]);
                  if (v58[0])
                  {
                    if (*(_DWORD *)v58[0] == 2)
                      WTF::StringImpl::destroy(v58[0], v35);
                    else
                      *(_DWORD *)v58[0] -= 2;
                  }
                  if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
                    goto LABEL_68;
                  FunctionRealm = v56;
                  if (v16 != 10)
                  {
LABEL_15:
                    if (v61)
                    {
                      std::__throw_bad_variant_access[abi:sn180100]();
                    }
                    else
                    {
                      v59 = v60;
                      v60 = 0;
                      v58[0] = (WTF::StringImpl *)(v13 | ((unint64_t)v14 << 8) | ((unint64_t)v15 << 16));
                      v58[1] = (WTF::StringImpl *)v16;
                      WebCore::CustomEvent::create(&v59, (unsigned __int8 *)v58, 0, (uint64_t *)&v62);
                      v19 = v59;
                      v59 = 0;
                      v13 = (uint64_t)v57;
                      if (v19)
                      {
                        if (*(_DWORD *)v19 == 2)
                          WTF::StringImpl::destroy(v19, v17);
                        else
                          *(_DWORD *)v19 -= 2;
                      }
                      if (*v62 != off_1E33A1910)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x194964A50);
                      }
                      v2 = (void (***)(WebCore::CustomEvent *__hidden))WebCore::createWrapper<WebCore::CustomEvent,WebCore::CustomEvent>(FunctionRealm[5], (uint64_t *)&v62, v18);
                      v20 = *(JSC::JSCell **)(v5 + 40);
                      if (((unint64_t)v20 & 0xFFFE000000000002) != 0)
                        goto LABEL_23;
                      v21 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v20);
                      if (!v21)
                        goto LABEL_23;
                      v16 = (uint64_t)v21;
                      if (v21 == *(JSC::JSGlobalObject **)(v5 + 24))
                        goto LABEL_23;
                      v5 = *((_QWORD *)a1 + 7);
                      FunctionRealm = (WebCore::JSCustomEvent ***)JSC::getFunctionRealm(a1, v21, v22);
                      if (!*(_DWORD *)(v5 + 80))
                        goto LABEL_89;
                    }
                    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
                    {
LABEL_23:
                      if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
                        v2 = 0;
                      v23 = v62;
                      v62 = 0;
                      if (v23)
                      {
                        if (*((_DWORD *)v23 + 4) == 1)
                          (*v23)[1]((WebCore::CustomEvent *)v23);
                        else
                          --*((_DWORD *)v23 + 4);
                      }
                      goto LABEL_25;
                    }
LABEL_89:
                    v38 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSCustomEvent>((WebCore::JSCustomEvent *)v5, (JSC::VM *)FunctionRealm, v37);
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, (JSC::JSGlobalObject *)v16, v38, v39);
                    if (!*(_DWORD *)(v5 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)v2, (JSC::VM *)v5, SubclassStructure);
                    goto LABEL_23;
                  }
LABEL_14:
                  v16 = 2;
                  goto LABEL_15;
                }
LABEL_68:
                v2 = 0;
LABEL_25:
                v7 = v61;
                goto LABEL_26;
              }
            }
            v15 = 1;
            goto LABEL_55;
          }
        }
        v14 = 1;
        goto LABEL_44;
      }
      if ((v12 & 0xFFFE000000000002) != 0)
      {
        v13 = v12 == 7;
        goto LABEL_33;
      }
      v42 = *(unsigned __int8 *)(v12 + 5);
      if (v42 == 3)
      {
        v45 = *(_DWORD *)(v12 + 8);
      }
      else
      {
        if (v42 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v13 = 1;
            goto LABEL_33;
          }
          v41 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_100;
        }
        v43 = *(_QWORD *)(v12 + 8);
        if ((v43 & 1) != 0)
          v44 = (int *)(v12 + 16);
        else
          v44 = (int *)(v43 + 4);
        v45 = *v44;
      }
      v41 = v45 == 0;
    }
LABEL_100:
    v13 = !v41;
    goto LABEL_33;
  }
  v2 = 0;
LABEL_26:
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FCB0[v7])(v58, &v60);
  return v2;
}

uint64_t WebCore::JSCustomEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCustomEvent::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSCustomEvent::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSCustomEvent::visitChildren(WebCore::JSCustomEvent *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];
  uint64_t v12;
  char v13;

  v11[0] = a2;
  v11[1] = this;
  v13 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v12 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v11;
    JSC::JSObject::visitChildren();
    v6 = *(uint64_t **)(*((_QWORD *)this + 3) + 80);
    if (!v6 || (v6[1] & 3) != 0)
      v7 = 0;
    else
      v7 = *v6;
    (*(void (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 24))(a2, v7);
    v8 = *(uint64_t **)(*((_QWORD *)this + 3) + 96);
    if (!v8 || (v8[1] & 3) != 0)
      v9 = 0;
    else
      v9 = *v8;
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 24))(a2, v9);
    *(_QWORD *)(v11[0] + 88) = v12;
  }
  return result;
}

unint64_t WebCore::jsCustomEventConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCustomEventPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 3392);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(v2, v3);
    Structure = WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::createStructure((uint64_t *)v2, v3, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 3392) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v7 = (JSC::Heap *)(v2 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)v3);
        return v8;
      }
    }
  }
  return result;
}

uint64_t WebCore::jsCustomEvent_detail(JSC::JSGlobalObject *a1, WebCore::JSCustomEvent *a2)
{
  return WebCore::JSCustomEvent::detail(a2, a1);
}

uint64_t WebCore::JSCustomEvent::subspaceForImpl(WebCore::JSCustomEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3472);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 3472);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 3472);
    *(_QWORD *)(v9 + 3472) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 3472);
  *(_QWORD *)(v3 + 3472) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

void WebCore::JSClipboardOwner::~JSClipboardOwner(WebCore::JSClipboardOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSClipboardItemOwner::~JSClipboardItemOwner(WebCore::JSClipboardItemOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCompressionStreamEncoderOwner::~JSCompressionStreamEncoderOwner(WebCore::JSCompressionStreamEncoderOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSConstantSourceNodeOwner::~JSConstantSourceNodeOwner(WebCore::JSConstantSourceNodeOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSContactsManagerOwner::~JSContactsManagerOwner(WebCore::JSContactsManagerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCookieStoreOwner::~JSCookieStoreOwner(WebCore::JSCookieStoreOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCookieStoreManagerOwner::~JSCookieStoreManagerOwner(WebCore::JSCookieStoreManagerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSCreateHTMLCallback::hasCallback(WebCore::JSCreateHTMLCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

BOOL WebCore::JSCreateScriptCallback::hasCallback(WebCore::JSCreateScriptCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

BOOL WebCore::JSCreateScriptURLCallback::hasCallback(WebCore::JSCreateScriptURLCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSCredentialsContainerOwner::~JSCredentialsContainerOwner(WebCore::JSCredentialsContainerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCryptoOwner::~JSCryptoOwner(WebCore::JSCryptoOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCryptoKeyOwner::~JSCryptoKeyOwner(WebCore::JSCryptoKeyOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSCustomEffectCallback::hasCallback(WebCore::JSCustomEffectCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSCustomElementRegistryOwner::~JSCustomElementRegistryOwner(WebCore::JSCustomElementRegistryOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_substringData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  JSValue v15;
  JSC::VM *v16;
  _QWORD v17[2];
  int v18;
  unsigned int v19[2];
  unsigned int v20[2];
  JSC::VM *v21;
  char v22;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "CharacterData", "substringData");
  v8 = *(_QWORD *)(v6 + 24);
  v21 = v5;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v15);
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v20);
  if (v20[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v19);
  if (v19[1])
    return 0;
  v9 = *(WTF::StringImpl **)(v8 + 80);
  if (v9)
  {
    v10 = *((_DWORD *)v9 + 1);
    if (v10 < v20[0])
    {
LABEL_7:
      LOBYTE(v17[0]) = 0;
      v17[1] = 0;
      v11 = 1;
      goto LABEL_12;
    }
    if (v20[0] || v10 > v19[0])
    {
      WTF::StringImpl::substring(v9);
      v9 = (WTF::StringImpl *)v17[0];
    }
    else
    {
      *(_DWORD *)v9 += 2;
    }
  }
  else
  {
    if (v20[0])
      goto LABEL_7;
    v9 = 0;
  }
  v11 = 0;
  v17[0] = v9;
LABEL_12:
  v18 = v11;
  v12 = WebCore::toJS<WebCore::IDLDOMString,WebCore::ExceptionOr<WTF::String>>(this, (WTF::StringImpl *)&v21, (unsigned __int8 *)v17);
  if (v18 != -1)
    ((void (*)(char *, _QWORD *))off_1E324FB70[v18])(&v22, v17);
  return (_BYTE *)v12;
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_appendData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v21;
  uint64_t v22;
  int v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "CharacterData", "appendData");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v18);
  }
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *((_QWORD *)a2 + 6);
  v25 = (WTF::StringImpl *)v9;
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v9 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v24 = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v25, this);
LABEL_9:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v11 = v24;
    if (hasExceptionsAfterHandlingTraps)
    {
      v23 = 1;
      v24 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v19);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    v11 = v24;
  }
  v23 = 0;
  v22 = 0;
  v25 = v11;
  WebCore::CharacterData::appendData(v8, (const WTF::String *)&v25);
  v13 = v25;
  v25 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 10;
LABEL_15:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E324FDC0[v14])(&v25, &v22);
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_insertData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  JSValue v19;
  WTF::StringImpl *v20;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  uint64_t v27;
  int v28;
  unsigned int v29[2];
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  int v32[2];
  WTF::StringImpl *v33;
  char v34;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "CharacterData", "insertData");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v19);
  }
  v8 = *(_QWORD *)(v6 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v29);
  if (v29[1])
    return 0;
  v9 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v32 = v9;
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v11 = *(WTF::StringImpl **)(v9 + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v11)
        goto LABEL_9;
    }
    else if (!v11)
    {
LABEL_9:
      v30 = v11;
      goto LABEL_10;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v32, this);
LABEL_10:
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v12 = v30;
    if (hasExceptionsAfterHandlingTraps)
    {
      v28 = 1;
      v30 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v20);
        else
          *(_DWORD *)v12 -= 2;
      }
      v15 = 0;
      v16 = 1;
      goto LABEL_18;
    }
  }
  else
  {
    v12 = v30;
  }
  v28 = 0;
  v27 = 0;
  v30 = v12;
  WebCore::CharacterData::insertData(v8, (const WTF::String *)&v30, v29[0], (uint64_t)v32);
  v14 = v30;
  v30 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v13);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (v34)
  {
    v22 = (WTF::StringImpl *)LOBYTE(v32[0]);
    LOBYTE(v30) = v32[0];
    v23 = v33;
    v33 = 0;
    v31 = v23;
    if (!*((_QWORD *)v5 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v32[0]), (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException(v5, this, v24);
      v23 = v31;
    }
    v31 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v34)
    {
      v25 = v33;
      v33 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 != 2)
        {
          v15 = 0;
          *(_DWORD *)v25 -= 2;
          goto LABEL_17;
        }
        WTF::StringImpl::destroy(v25, v22);
      }
    }
    v15 = 0;
    goto LABEL_17;
  }
  v15 = 10;
LABEL_17:
  v16 = 0;
LABEL_18:
  ((void (*)(int *, uint64_t *))off_1E324FDC0[v16])(v32, &v27);
  return (_BYTE *)v15;
}

uint64_t WebCore::jsCharacterDataPrototypeFunction_deleteData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unsigned int v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v20;
  JSC::VM *v21;
  _DWORD v22[2];
  WTF::String *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "CharacterData", "deleteData");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v20);
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v23);
    if (HIDWORD(v23))
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v22);
      if (v22[1])
        return 0;
      v9 = v23;
      v10 = *(_QWORD *)(v8 + 80);
      if (v10)
      {
        v11 = *(_DWORD *)(v10 + 4);
        if (v11 < v23)
        {
LABEL_7:
          LOBYTE(v24) = 0;
          v25 = 0;
          if (!*((_QWORD *)v5 + 2))
          {
            v12.super.isa = (Class)WebCore::createDOMException(this, 0, (JSC::JSGlobalObject *)&v25);
            JSC::VM::throwException(v5, this, v12);
            v14 = v25;
            v25 = 0;
            if (v14)
            {
              if (*(_DWORD *)v14 == 2)
                WTF::StringImpl::destroy(v14, v13);
              else
                *(_DWORD *)v14 -= 2;
            }
          }
          return 0;
        }
      }
      else
      {
        if ((_DWORD)v23)
          goto LABEL_7;
        v11 = 0;
      }
      v16 = v11 - (_DWORD)v23;
      if (v16 >= v22[0])
        v17 = v22[0];
      else
        v17 = v16;
      WTF::makeStringByRemoving((WTF *)(v8 + 80), (const WTF::String *)v23);
      (*(void (**)(uint64_t, WTF::StringImpl **, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)v8 + 376))(v8, &v24, v9, v17, 0, 1);
      v19 = v24;
      v24 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v18);
        else
          *(_DWORD *)v19 -= 2;
      }
      return 10;
    }
  }
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_replaceData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  JSValue v19;
  WTF::StringImpl *v20;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  uint64_t v27;
  int v28;
  unsigned int v29[2];
  unsigned int v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33[2];
  WTF::StringImpl *v34;
  char v35;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "CharacterData", "replaceData");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v19);
  }
  v8 = *(WTF::StringImpl **)(v6 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v30);
  if (v30[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v29);
  if (v29[1])
    return 0;
  v9 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v33 = v9;
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v11 = *(WTF::StringImpl **)(v9 + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v11)
        goto LABEL_10;
    }
    else if (!v11)
    {
LABEL_10:
      v31 = v11;
      goto LABEL_11;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_10;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v33, this);
LABEL_11:
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v12 = v31;
    if (hasExceptionsAfterHandlingTraps)
    {
      v28 = 1;
      v31 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v20);
        else
          *(_DWORD *)v12 -= 2;
      }
      v15 = 0;
      v16 = 1;
      goto LABEL_19;
    }
  }
  else
  {
    v12 = v31;
  }
  v28 = 0;
  v27 = 0;
  v31 = v12;
  WebCore::CharacterData::replaceData(v8, (const WTF::String *)&v31, v30[0], v29[0], (uint64_t)v33);
  v14 = v31;
  v31 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v13);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (v35)
  {
    v22 = (WTF::StringImpl *)LOBYTE(v33[0]);
    LOBYTE(v31) = v33[0];
    v23 = v34;
    v34 = 0;
    v32 = v23;
    if (!*((_QWORD *)v5 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v33[0]), (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(v5, this, v24);
      v23 = v32;
    }
    v32 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v35)
    {
      v25 = v34;
      v34 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 != 2)
        {
          v15 = 0;
          *(_DWORD *)v25 -= 2;
          goto LABEL_18;
        }
        WTF::StringImpl::destroy(v25, v22);
      }
    }
    v15 = 0;
    goto LABEL_18;
  }
  v15 = 10;
LABEL_18:
  v16 = 0;
LABEL_19:
  ((void (*)(int *, uint64_t *))off_1E324FDC0[v16])(v33, &v27);
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_before(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  unint64_t v6;
  unsigned int *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF *v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  char v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  char v35;

  v5 = *((_QWORD *)this + 7);
  v24 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CharacterData", "before");
  v7 = *(unsigned int **)(v6 + 24);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>((uint64_t)this, (uint64_t)a2, 0, &v25);
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_43;
  WebCore::Node::before(v7, (unsigned int **)&v25, &v33);
  if (v35)
  {
    v8 = (WTF::StringImpl *)v33;
    v31 = v33;
    v21 = v34;
    v34 = 0;
    v32 = v21;
    if (!*(_QWORD *)(v5 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v33, (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException((JSC::VM *)v5, this, v22);
      v21 = v32;
    }
    v32 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v8);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v35)
    {
      v23 = v34;
      v34 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 != 2)
        {
          v9 = 0;
          *(_DWORD *)v23 -= 2;
          goto LABEL_5;
        }
        WTF::StringImpl::destroy(v23, v8);
      }
    }
LABEL_43:
    v9 = 0;
    goto LABEL_5;
  }
  v9 = 10;
LABEL_5:
  v10 = v25;
  v25 = 0;
  if (v10)
  {
    v12 = (char *)v10 + 8;
    v11 = *(unsigned int *)v10;
    if ((_DWORD)v11)
    {
      v13 = 16 * v11;
      do
      {
        v14 = *((unsigned int *)v12 + 2);
        if ((_DWORD)v14 != -1)
          ((void (*)(uint64_t *, char *))off_1E324FB80[v14])(&v33, v12);
        *((_DWORD *)v12 + 2) = -1;
        v12 += 16;
        v13 -= 16;
      }
      while (v13);
    }
    WTF::fastFree(v10, v8);
  }
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v18 = v26;
      v19 = 8 * HIDWORD(v27);
      do
      {
        v20 = *(_QWORD *)v18;
        *(_QWORD *)v18 = 0;
        if (v20)
        {
          if (*(_DWORD *)(v20 + 24) == 2)
          {
            if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v20, v8);
          }
          else
          {
            *(_DWORD *)(v20 + 24) -= 2;
          }
        }
        v18 = (WTF *)((char *)v18 + 8);
        v19 -= 8;
      }
      while (v19);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v15 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v15, v8);
  }
  return (_BYTE *)v9;
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_after(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  unint64_t v6;
  unsigned int *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF *v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  char v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  char v35;

  v5 = *((_QWORD *)this + 7);
  v24 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CharacterData", "after");
  v7 = *(unsigned int **)(v6 + 24);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>((uint64_t)this, (uint64_t)a2, 0, &v25);
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_43;
  WebCore::Node::after(v7, (unsigned int **)&v25, &v33);
  if (v35)
  {
    v8 = (WTF::StringImpl *)v33;
    v31 = v33;
    v21 = v34;
    v34 = 0;
    v32 = v21;
    if (!*(_QWORD *)(v5 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v33, (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException((JSC::VM *)v5, this, v22);
      v21 = v32;
    }
    v32 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v8);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v35)
    {
      v23 = v34;
      v34 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 != 2)
        {
          v9 = 0;
          *(_DWORD *)v23 -= 2;
          goto LABEL_5;
        }
        WTF::StringImpl::destroy(v23, v8);
      }
    }
LABEL_43:
    v9 = 0;
    goto LABEL_5;
  }
  v9 = 10;
LABEL_5:
  v10 = v25;
  v25 = 0;
  if (v10)
  {
    v12 = (char *)v10 + 8;
    v11 = *(unsigned int *)v10;
    if ((_DWORD)v11)
    {
      v13 = 16 * v11;
      do
      {
        v14 = *((unsigned int *)v12 + 2);
        if ((_DWORD)v14 != -1)
          ((void (*)(uint64_t *, char *))off_1E324FB80[v14])(&v33, v12);
        *((_DWORD *)v12 + 2) = -1;
        v12 += 16;
        v13 -= 16;
      }
      while (v13);
    }
    WTF::fastFree(v10, v8);
  }
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v18 = v26;
      v19 = 8 * HIDWORD(v27);
      do
      {
        v20 = *(_QWORD *)v18;
        *(_QWORD *)v18 = 0;
        if (v20)
        {
          if (*(_DWORD *)(v20 + 24) == 2)
          {
            if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v20, v8);
          }
          else
          {
            *(_DWORD *)(v20 + 24) -= 2;
          }
        }
        v18 = (WTF *)((char *)v18 + 8);
        v19 -= 8;
      }
      while (v19);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v15 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v15, v8);
  }
  return (_BYTE *)v9;
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_replaceWith(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  unint64_t v6;
  unsigned int *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF *v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  char v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  char v35;

  v5 = *((_QWORD *)this + 7);
  v24 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCharacterData>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CharacterData", "replaceWith");
  v7 = *(unsigned int **)(v6 + 24);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>((uint64_t)this, (uint64_t)a2, 0, &v25);
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_43;
  WebCore::Node::replaceWith(v7, (unsigned int **)&v25, &v33);
  if (v35)
  {
    v8 = (WTF::StringImpl *)v33;
    v31 = v33;
    v21 = v34;
    v34 = 0;
    v32 = v21;
    if (!*(_QWORD *)(v5 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v33, (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException((JSC::VM *)v5, this, v22);
      v21 = v32;
    }
    v32 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v8);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v35)
    {
      v23 = v34;
      v34 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 != 2)
        {
          v9 = 0;
          *(_DWORD *)v23 -= 2;
          goto LABEL_5;
        }
        WTF::StringImpl::destroy(v23, v8);
      }
    }
LABEL_43:
    v9 = 0;
    goto LABEL_5;
  }
  v9 = 10;
LABEL_5:
  v10 = v25;
  v25 = 0;
  if (v10)
  {
    v12 = (char *)v10 + 8;
    v11 = *(unsigned int *)v10;
    if ((_DWORD)v11)
    {
      v13 = 16 * v11;
      do
      {
        v14 = *((unsigned int *)v12 + 2);
        if ((_DWORD)v14 != -1)
          ((void (*)(uint64_t *, char *))off_1E324FB80[v14])(&v33, v12);
        *((_DWORD *)v12 + 2) = -1;
        v12 += 16;
        v13 -= 16;
      }
      while (v13);
    }
    WTF::fastFree(v10, v8);
  }
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v18 = v26;
      v19 = 8 * HIDWORD(v27);
      do
      {
        v20 = *(_QWORD *)v18;
        *(_QWORD *)v18 = 0;
        if (v20)
        {
          if (*(_DWORD *)(v20 + 24) == 2)
          {
            if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v20, v8);
          }
          else
          {
            *(_DWORD *)(v20 + 24) -= 2;
          }
        }
        v18 = (WTF *)((char *)v18 + 8);
        v19 -= 8;
      }
      while (v19);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v15 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v15, v8);
  }
  return (_BYTE *)v9;
}

_BYTE *WebCore::jsCharacterDataPrototypeFunction_remove(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Node *v10;
  uint64_t v11;
  uint64_t v12;
  WTF *v13;
  __int16 v17;
  __int16 v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF *v21;
  uint64_t v22;
  uint64_t v23;
  JSC::VM *v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  JSC::VM *v30;
  unsigned __int8 v31[8];
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  uint64_t v35;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CharacterData", "remove");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCharacterData::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCharacterData::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CharacterData", "remove");
  v10 = *(WebCore::Node **)(v4 + 24);
  v30 = v5;
  v25 = (WTF *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  v11 = *((_QWORD *)v10 + 4);
  if (v11)
  {
    *(_DWORD *)(v11 + 24) += 2;
    WebCore::ContainerNode::removeChild((WebCore::ContainerNode *)v11, v10, &v33);
    if (*(_DWORD *)(v11 + 24) == 2)
    {
      v17 = *(_WORD *)(v11 + 30);
      if ((v17 & 0x400) == 0)
      {
        v18 = *(_WORD *)(v11 + 28);
        if ((v18 & 0xF000) == 0x9000)
        {
          WebCore::Document::removedLastRef((WebCore::Document *)v11, v10);
        }
        else
        {
          if ((v18 & 0x20) != 0)
          {
            (*(void (**)(_QWORD))(**(_QWORD **)(v11 + 160) + 16))(*(_QWORD *)(v11 + 160));
            v17 = *(_WORD *)(v11 + 30);
          }
          *(_WORD *)(v11 + 30) = v17 | 0x400;
          (*(void (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11);
        }
      }
    }
    else
    {
      *(_DWORD *)(v11 + 24) -= 2;
    }
  }
  else
  {
    v33 = 0;
    v34 = 0;
    v35 = 0;
  }
  if ((_BYTE)v35)
  {
    v31[0] = v33;
    v19 = v34;
    v34 = 0;
    v32 = v19;
    if (!*((_QWORD *)v5 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v30, v31);
      v19 = v32;
    }
    v32 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v10);
      else
        *(_DWORD *)v19 -= 2;
    }
    if ((_BYTE)v35)
    {
      v20 = v34;
      v34 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 != 2)
        {
          v12 = 0;
          *(_DWORD *)v20 -= 2;
          goto LABEL_13;
        }
        WTF::StringImpl::destroy(v20, v10);
      }
    }
    v12 = 0;
    goto LABEL_13;
  }
  v12 = 10;
LABEL_13:
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v21 = v25;
      v22 = 8 * HIDWORD(v26);
      do
      {
        v23 = *(_QWORD *)v21;
        *(_QWORD *)v21 = 0;
        if (v23)
        {
          if (*(_DWORD *)(v23 + 24) == 2)
          {
            if ((*(_WORD *)(v23 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v23, v10);
          }
          else
          {
            *(_DWORD *)(v23 + 24) -= 2;
          }
        }
        v21 = (WTF *)((char *)v21 + 8);
        v22 -= 8;
      }
      while (v22);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v13 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v13, v10);
  }
  return (_BYTE *)v12;
}

unint64_t WebCore::IDLOperation<WebCore::JSCharacterData>::cast(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSCharacterData::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSCharacterData::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::toJS<WebCore::IDLDOMString,WebCore::ExceptionOr<WTF::String>>(JSC *this, WTF::StringImpl *a2, unsigned __int8 *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  JSC::JSGlobalObject *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  WTF **v21;
  WTF::StringImpl *v22;

  v4 = *((_DWORD *)a3 + 4);
  if (!v4)
  {
    v5 = *(_QWORD *)a3;
    *(_QWORD *)a3 = 0;
    v6 = *((_QWORD *)this + 7);
    v7 = (uint64_t *)(v6 + 41968);
    if (!v5)
      return *v7;
    v8 = *(_DWORD *)(v5 + 4);
    if (v8)
    {
      if (v8 != 1)
      {
LABEL_5:
        v9 = *(_QWORD *)(v6 + 64760);
        if (!v9 || v5 != *(_QWORD *)(v9 + 8))
          v9 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_8;
      }
      v11 = *(unsigned __int8 **)(v5 + 8);
      if ((*(_BYTE *)(v5 + 16) & 4) != 0)
      {
        v12 = *v11;
      }
      else
      {
        v13 = *(unsigned __int16 *)v11;
        if (v13 > 0xFF)
          goto LABEL_5;
        v12 = v13;
      }
      v9 = *(_QWORD *)(v6 + 8 * v12 + 42216);
    }
    else
    {
      v9 = *v7;
    }
LABEL_8:
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
    else
      *(_DWORD *)v5 -= 2;
    return v9;
  }
  if (v4 == 1)
  {
    v15 = (JSC::JSGlobalObject *)*a3;
    v16 = (WTF::StringImpl *)*((_QWORD *)a3 + 1);
    *((_QWORD *)a3 + 1) = 0;
    v22 = v16;
    if (!*(_QWORD *)(*(_QWORD *)a2 + 16))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, v15, (JSC::JSGlobalObject *)&v22);
      JSC::VM::throwException(*(JSC::VM **)a2, this, v17);
      v16 = v22;
    }
    v22 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    return 0;
  }
  v18 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>(v18, v19, v20, v21);
}

uint64_t WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, WTF **a4@<X8>)
{
  unint64_t v5;
  int v6;
  WTF *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  JSC::VM *v19;
  unint64_t v20;
  char v21;

  v19 = *(JSC::VM **)(result + 56);
  v20 = a3;
  v5 = *(int *)(a2 + 32) - 1;
  v6 = v5 - a3;
  if (v5 <= a3)
  {
    *a4 = 0;
  }
  else
  {
    v18[0] = result;
    v18[1] = a2;
    v18[2] = &v20;
    v18[3] = &v19;
    v7 = (WTF *)WTF::fastMalloc((WTF *)((16 * (v5 - a3)) | 8));
    v9 = *WTF::TrailingArray<WTF::EmbeddedFixedVector<std::variant<WTF::RefPtr<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>,WTF::String,WTF::RefPtr<WebCore::TrustedScript,WTF::RawPtrTraits<WebCore::TrustedScript>,WTF::DefaultRefDerefTraits<WebCore::TrustedScript>>>>,std::variant<WTF::RefPtr<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>,WTF::String,WTF::RefPtr<WebCore::TrustedScript,WTF::RawPtrTraits<WebCore::TrustedScript>,WTF::DefaultRefDerefTraits<WebCore::TrustedScript>>>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>::Item> WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(v7, v6, (uint64_t)v18);
    if ((_DWORD)v9 != v6)
    {
      if ((_DWORD)v9)
      {
        v15 = (_DWORD *)((char *)v7 + 8);
        v16 = 16 * v9;
        do
        {
          v17 = v15[2];
          if ((_DWORD)v17 != -1)
            ((void (*)(char *, _DWORD *))off_1E324FB80[v17])(&v21, v15);
          v15[2] = -1;
          v15 += 4;
          v16 -= 16;
        }
        while (v16);
      }
      WTF::fastFree(v7, v8);
      v7 = 0;
    }
    result = (uint64_t)v19;
    if (*((_DWORD *)v19 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v19), (result & 1) != 0))
    {
      *a4 = 0;
      if (v7)
      {
        v12 = (_DWORD *)((char *)v7 + 8);
        v11 = *(unsigned int *)v7;
        if ((_DWORD)v11)
        {
          v13 = 16 * v11;
          do
          {
            v14 = v12[2];
            if ((_DWORD)v14 != -1)
              ((void (*)(_QWORD *, _DWORD *))off_1E324FB80[v14])(v18, v12);
            v12[2] = -1;
            v12 += 4;
            v13 -= 16;
          }
          while (v13);
        }
        return WTF::fastFree(v7, v10);
      }
    }
    else
    {
      *a4 = v7;
    }
  }
  return result;
}

_DWORD *WTF::TrailingArray<WTF::EmbeddedFixedVector<std::variant<WTF::RefPtr<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>,WTF::String,WTF::RefPtr<WebCore::TrustedScript,WTF::RawPtrTraits<WebCore::TrustedScript>,WTF::DefaultRefDerefTraits<WebCore::TrustedScript>>>>,std::variant<WTF::RefPtr<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>,WTF::String,WTF::RefPtr<WebCore::TrustedScript,WTF::RawPtrTraits<WebCore::TrustedScript>,WTF::DefaultRefDerefTraits<WebCore::TrustedScript>>>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>::Item> WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  _DWORD *i;
  JSC::VM *v7;
  int v8;
  int v9;
  int v10;
  char v12[8];
  int v13;
  unsigned __int8 v14;
  char v15[8];
  int v16;
  char v17;
  char v18;

  *a1 = a2;
  if (a2)
  {
    v5 = 0;
    for (i = a1 + 2; ; i += 4)
    {
      WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>::convert(*(uint64_t **)a3, *(_QWORD *)(*(_QWORD *)(a3 + 8)+ ((uint64_t)(((unint64_t)(v5 + **(_DWORD **)(a3 + 16)) << 32) + 0x600000000) >> 29)), (uint64_t)v15);
      v7 = **(JSC::VM ***)(a3 + 24);
      if (*((_DWORD *)v7 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v7))
      {
        v9 = 0;
        v12[0] = 0;
      }
      else
      {
        v12[0] = 0;
        v14 = 0;
        if (!v17)
          break;
        v13 = -1;
        v8 = v16;
        if (v16 != -1)
        {
          ((void (*)(char *, char *, char *))off_1E324FBB0[v16])(&v18, v12, v15);
          v13 = v8;
        }
        v9 = 1;
      }
      v14 = v9;
      if (v17 && v16 != -1)
      {
        ((void (*)(char *, char *))off_1E324FB80[v16])(&v18, v15);
        v9 = v14;
      }
      if (!v9)
        break;
      *(_BYTE *)i = 0;
      i[2] = -1;
      v10 = v13;
      if (v13 != -1)
      {
        ((void (*)(char *, _DWORD *, char *))off_1E324FBB0[v13])(v15, i, v12);
        i[2] = v10;
        if (v14)
        {
          if (v13 != -1)
            ((void (*)(char *, char *))off_1E324FB80[v13])(v15, v12);
        }
      }
      if (++v5 >= (unint64_t)*a1)
        return a1;
    }
    *a1 = v5;
  }
  return a1;
}

uint64_t WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>::convert@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v5;
  unsigned int v6;
  uint64_t (*v7)();
  uint64_t v8;
  char v9[8];
  unsigned int v10;
  char v11;
  char v12[8];
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>::convert(a1, a2, (uint64_t)v12);
  v5 = v15;
  if (v15)
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 16) = 0;
  }
  else
  {
    v9[0] = 0;
    v10 = -1;
    v6 = v14;
    if (v14 == -1)
    {
      *(_BYTE *)a3 = 0;
      *(_DWORD *)(a3 + 8) = -1;
      *(_BYTE *)(a3 + 16) = 1;
    }
    else
    {
      v7 = off_1E324FBB0[v14];
      ((void (*)(char *, char *, uint64_t *))v7)(&v11, v9, &v13);
      v10 = v6;
      *(_BYTE *)a3 = 0;
      *(_DWORD *)(a3 + 8) = -1;
      result = ((uint64_t (*)(char *, uint64_t, char *))v7)(&v11, a3, v9);
      *(_DWORD *)(a3 + 8) = v6;
      v8 = v10;
      *(_BYTE *)(a3 + 16) = 1;
      if ((_DWORD)v8 != -1)
        result = ((uint64_t (*)(char *, char *))off_1E324FB80[v8])(&v11, v9);
    }
    v5 = v15;
  }
  if (v5 != -1)
    return ((uint64_t (*)(char *, uint64_t *))off_1E324FBA0[v5])(v9, &v13);
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>::convert@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  uint64_t v12;
  JSC::VM *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  int v16;
  uint64_t v17;
  JSC::VM *v18;
  WTF::StringImpl **v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v23;
  int v24;
  unsigned __int8 v25;
  WTF::StringImpl *v26;
  uint64_t v27;

  v6 = a2 & 0xFFFE000000000002;
  if ((a2 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a2 + 5) >= 0xF0u)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7)
    {
      v8 = 0;
      *(_DWORD *)(v7 + 24) += 2;
      v23 = v7;
      v24 = 0;
      goto LABEL_5;
    }
  }
  v12 = WebCore::JSTrustedScript::toWrapped(a1[7], a2);
  if (!v12)
  {
    v27 = a2;
    v13 = (JSC::VM *)a1[7];
    if (v6 || *(_BYTE *)(a2 + 5) != 2)
    {
      v20 = (JSC::VM *)a1[7];
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, (JSC::JSGlobalObject *)a1);
      v13 = v20;
    }
    else
    {
      v14 = *(WTF::StringImpl **)(a2 + 8);
      if ((v14 & 1) != 0)
      {
        v18 = (JSC::VM *)a1[7];
        v19 = (WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)a2, (JSC::JSGlobalObject *)a1);
        v13 = v18;
        v14 = *v19;
      }
      if (v14)
        *(_DWORD *)v14 += 2;
      v26 = v14;
    }
    if (*((_DWORD *)v13 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
      v15 = v26;
      if (hasExceptionsAfterHandlingTraps)
      {
        v24 = 1;
        v26 = 0;
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v21);
          else
            *(_DWORD *)v15 -= 2;
        }
        v16 = 1;
        v17 = 1;
        goto LABEL_21;
      }
    }
    else
    {
      v15 = v26;
    }
    v16 = 0;
    v17 = 0;
    v24 = 0;
    v23 = 0;
    *(_QWORD *)(a3 + 8) = v15;
    *(_DWORD *)(a3 + 16) = 1;
LABEL_21:
    *(_DWORD *)(a3 + 24) = v16;
    return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E324FDC0[v17])(&v27, &v23);
  }
  ++*(_DWORD *)(v12 + 8);
  v23 = v12;
  v8 = 2;
  v24 = 2;
LABEL_5:
  v25 = 1;
  *(_BYTE *)(a3 + 8) = 0;
  v9 = a3 + 8;
  *(_DWORD *)(v9 + 8) = -1;
  result = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t *))off_1E324FBB0[v8])(&v27, v9, &v23);
  *(_DWORD *)(v9 + 8) = v8;
  v11 = v25;
  *(_DWORD *)(v9 + 16) = 0;
  if (v11)
  {
    if (v24 != -1)
      return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E324FB80[v24])(&v27, &v23);
  }
  return result;
}

WTF::StringImpl *WebCore::Converter<WebCore::IDLDOMString>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *result;
  WTF::StringImpl *v7;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v9;
  unint64_t v10;

  v10 = this;
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v10, a1);
  }
  else
  {
    v5 = *(WTF::StringImpl **)(this + 8);
    if ((v5 & 1) != 0)
      v5 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
    if (v5)
      *(_DWORD *)v5 += 2;
    v9 = v5;
  }
  if (!*((_DWORD *)v4 + 20))
  {
    result = v9;
LABEL_10:
    *(_QWORD *)a3 = result;
    *(_DWORD *)(a3 + 8) = 0;
    return result;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  result = v9;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0)
    goto LABEL_10;
  *(_DWORD *)(a3 + 8) = 1;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_13TrustedScriptENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_13TrustedScriptENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_13TrustedScriptENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  _DWORD *v2;
  WTF::StringImpl *v3;

  v2 = *(_DWORD **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (v2[2] == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      if (*(_QWORD *)v2)
      {
        *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
        *(_QWORD *)v2 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v2, a2);
    }
    else
    {
      --v2[2];
    }
  }
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore4NodeENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringENSA_INSB_13TrustedScriptENSD_ISJ_EENSF_ISJ_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E324FB80[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_13TrustedScriptENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_13TrustedScriptENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_13TrustedScriptENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

unint64_t WebCore::jsClipboardPrototypeFunction_read(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194967560);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSClipboard::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSClipboard::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Clipboard", "read", v16);
    v27 = 0;
  }
  else
  {
    WebCore::Clipboard::read(*(_QWORD *)(v17 + 24), &v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsClipboardPrototypeFunction_readText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1949677A8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSClipboard::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSClipboard::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Clipboard", "readText", v16);
    v27 = 0;
  }
  else
  {
    WebCore::Clipboard::readText(*(_QWORD *)(v17 + 24), (uint64_t *)&v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsClipboardPrototypeFunction_write(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  int i;
  unsigned int v29;
  uint64_t IndexQuickly;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v39;
  unint64_t v40;
  WTF *v41;
  void *v42;
  WTF *v43;
  uint64_t v44;
  WebCore::ClipboardItem *v45;
  WTF *v46;
  void *v47;
  WTF *v48;
  uint64_t v49;
  objc_class *v51;
  WTF::StringImpl *v52;
  JSValue v53;
  int v54;
  void *v55;
  uint64_t v56;
  WTF *v57;
  WebCore::ClipboardItem *v58;
  WTF *v59;
  void *v60;
  WebCore::DOMGuardedObject *v61;
  WTF::StringImpl *v62[2];
  int v63;
  uint64_t v64;
  WTF *v65;
  uint64_t v66;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194967CB0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v61 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_80;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSClipboard::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSClipboard::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_80:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Clipboard", "write", v17);
  }
  else
  {
    v24 = *((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v64 = *((_QWORD *)this + 7);
      if ((v26 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v26 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v32 = v62[0];
        v62[0] = 0;
        if (v32)
        {
          if (*(_DWORD *)v32 == 2)
            WTF::StringImpl::destroy(v32, v31);
          else
            *(_DWORD *)v32 -= 2;
        }
        v33 = 1;
        v63 = 1;
      }
      else
      {
        v65 = 0;
        v66 = 0;
        if (JSC::getIterationMode() == 2)
        {
          for (i = 1; ; ++i)
          {
            v29 = (*(_BYTE *)(v26 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v26 + 8) - 8) : 0;
            if (i - 1 >= v29)
              break;
            IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v26, i - 1, 0);
            if (!IndexQuickly)
              IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v26, this, (i - 1));
            if (*(_DWORD *)(v24 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) != 0)
              break;
            WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::ClipboardItem>>::convert((WebCore::ClipboardItem **)this, IndexQuickly, (uint64_t)&v65);
            if (*(_QWORD *)(v24 + 16))
            {
              v39 = JSC::JSArrayIterator::create();
              v40 = i | 0xFFFE000000000000;
              if (i < 0)
                v40 = COERCE__INT64((double)i) + 0x2000000000000;
              *(_QWORD *)(v39 + 16) = v40;
              goto LABEL_59;
            }
          }
        }
        else
        {
          JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v26, v27);
          if (!*(_DWORD *)(v24 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) == 0)
          {
            while (1)
            {
              v34 = JSC::iteratorStep();
              if (*(_QWORD *)(v24 + 16) || v34 == 6)
                break;
              v36 = JSC::iteratorValue();
              if (*(_DWORD *)(v24 + 80))
              {
                v37 = v36;
                hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24);
                v36 = v37;
                if ((hasExceptionsAfterHandlingTraps & 1) != 0)
                  break;
              }
              WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::ClipboardItem>>::convert((WebCore::ClipboardItem **)this, v36, (uint64_t)&v65);
              if (*(_QWORD *)(v24 + 16))
              {
LABEL_59:
                JSC::iteratorClose();
                break;
              }
            }
          }
        }
        if (!*(_DWORD *)(v24 + 80))
        {
          v41 = v65;
LABEL_62:
          v63 = 0;
          v62[0] = 0;
          v62[1] = 0;
          v65 = v41;
          WebCore::Clipboard::write(v25, (uint64_t)&v65, (uint64_t *)&v61);
          if (HIDWORD(v66))
          {
            v43 = v65;
            v44 = 8 * HIDWORD(v66);
            do
            {
              v45 = *(WebCore::ClipboardItem **)v43;
              *(_QWORD *)v43 = 0;
              if (v45)
              {
                if (*(_DWORD *)v45 == 1)
                {
                  WebCore::ClipboardItem::~ClipboardItem(v45, v42);
                  WTF::fastFree(v46, v47);
                }
                else
                {
                  --*(_DWORD *)v45;
                }
              }
              v43 = (WTF *)((char *)v43 + 8);
              v44 -= 8;
            }
            while (v44);
          }
          v48 = v65;
          if (v65)
          {
            v65 = 0;
            LODWORD(v66) = 0;
            WTF::fastFree(v48, v42);
          }
          v33 = 0;
          goto LABEL_73;
        }
        v54 = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24);
        v41 = v65;
        if (!v54)
          goto LABEL_62;
        v63 = 1;
        if (HIDWORD(v66))
        {
          v56 = 8 * HIDWORD(v66);
          v57 = v65;
          do
          {
            v58 = *(WebCore::ClipboardItem **)v57;
            *(_QWORD *)v57 = 0;
            if (v58)
            {
              if (*(_DWORD *)v58 == 1)
              {
                WebCore::ClipboardItem::~ClipboardItem(v58, v55);
                WTF::fastFree(v59, v60);
              }
              else
              {
                --*(_DWORD *)v58;
              }
            }
            v57 = (WTF *)((char *)v57 + 8);
            v56 -= 8;
          }
          while (v56);
        }
        if (v41)
          WTF::fastFree(v41, v55);
        v33 = 1;
      }
LABEL_73:
      ((void (*)(WTF **, WTF::StringImpl **))off_1E324FC90[v33])(&v65, v62);
      v14 = v61;
      v61 = 0;
      if (!v14)
        goto LABEL_76;
      goto LABEL_74;
    }
    v53.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException((JSC::VM *)v24, this, v53);
  }
  v61 = 0;
LABEL_74:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_76:
  v49 = *(_QWORD *)(v10 + 16);
  if (v49)
  {
    if (*(_QWORD *)(v10 + 24) != v49)
    {
      v51 = *(objc_class **)(v49 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, v62);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v62[0], v51, 0);
      v52 = v62[0];
      v62[0] = 0;
      if (v52)
      {
        if (*((_DWORD *)v52 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v52 + 16))(v52);
        else
          --*((_DWORD *)v52 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsClipboardPrototypeFunction_writeText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  JSValue v34;
  WTF::StringImpl *v35;
  int hasExceptionsAfterHandlingTraps;
  objc_class *v37;
  WebCore::DOMGuardedObject *v38;
  WebCore::DOMGuardedObject *v39;
  WebCore::DOMGuardedObject *v40;
  int v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194968084);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v39 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_49;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSClipboard::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSClipboard::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_49:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Clipboard", "writeText", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v43 = (WTF::StringImpl *)v26;
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v43, this);
LABEL_32:
        if (*((_DWORD *)v24 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v28 = v42;
          if (hasExceptionsAfterHandlingTraps)
          {
            v41 = 1;
            v42 = 0;
            if (v28)
            {
              if (*(_DWORD *)v28 == 2)
                WTF::StringImpl::destroy(v28, v35);
              else
                *(_DWORD *)v28 -= 2;
            }
            v31 = 1;
LABEL_38:
            ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E324FDC0[v31])(&v43, &v40);
            v14 = v39;
            v39 = 0;
            if (!v14)
              goto LABEL_41;
            goto LABEL_39;
          }
        }
        else
        {
          v28 = v42;
        }
        v41 = 0;
        v40 = 0;
        v43 = v28;
        WebCore::Clipboard::writeText(v25, (_DWORD **)&v43, (const WTF::StringImpl *)&v39);
        v30 = v43;
        v43 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 2)
            WTF::StringImpl::destroy(v30, v29);
          else
            *(_DWORD *)v30 -= 2;
        }
        v31 = 0;
        goto LABEL_38;
      }
      v27 = *(WTF::StringImpl **)(v26 + 8);
      if ((v27 & 1) != 0)
      {
        v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v27)
          goto LABEL_31;
      }
      else if (!v27)
      {
LABEL_31:
        v42 = v27;
        goto LABEL_32;
      }
      *(_DWORD *)v27 += 2;
      goto LABEL_31;
    }
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v34);
  }
  v39 = 0;
LABEL_39:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_41:
  v32 = *(_QWORD *)(v10 + 16);
  if (v32)
  {
    if (*(_QWORD *)(v10 + 24) != v32)
    {
      v37 = *(objc_class **)(v32 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v40);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v40, v37, 0);
      v38 = v40;
      v40 = 0;
      if (v38)
      {
        if (*((_DWORD *)v38 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v38 + 16))(v38);
        else
          --*((_DWORD *)v38 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WebCore::ClipboardItem **WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::ClipboardItem>>::convert(WebCore::ClipboardItem **result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  WebCore::ClipboardItem *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  WebCore::ClipboardItem *v18;

  v18 = result[7];
  if ((a2 & 0xFFFE000000000002) != 0)
    return (WebCore::ClipboardItem **)JSC::throwTypeError();
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSClipboardItem::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSClipboardItem::s_info && v6 != 0);
  }
  if (!v5)
    return (WebCore::ClipboardItem **)JSC::throwTypeError();
  v9 = *(WebCore::ClipboardItem **)(a2 + 24);
  if (!v9)
    return (WebCore::ClipboardItem **)JSC::throwTypeError();
  ++*(_DWORD *)v9;
  v18 = v9;
  v10 = *(unsigned int *)(a3 + 12);
  if ((_DWORD)v10 == *(_DWORD *)(a3 + 8))
  {
    v11 = WTF::Vector<WTF::Ref<WebCore::AcceleratedEffect,WTF::RawPtrTraits<WebCore::AcceleratedEffect>,WTF::DefaultRefDerefTraits<WebCore::AcceleratedEffect>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)a3, v10 + 1, (unint64_t)&v18);
    v13 = *(unsigned int *)(a3 + 12);
    v14 = *(char **)a3;
    v15 = *(_QWORD *)v11;
    *(_QWORD *)v11 = 0;
    *(_QWORD *)&v14[8 * v13] = v15;
    result = (WebCore::ClipboardItem **)v18;
    *(_DWORD *)(a3 + 12) = v13 + 1;
    v18 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 1)
      {
        WebCore::ClipboardItem::~ClipboardItem((WebCore::ClipboardItem *)result, v12);
        return (WebCore::ClipboardItem **)WTF::fastFree(v16, v17);
      }
      else
      {
        --*(_DWORD *)result;
      }
    }
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)a3 + 8 * v10) = v9;
    *(_DWORD *)(a3 + 12) = v10 + 1;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_3RefIN7WebCore13ClipboardItemENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  WebCore::ClipboardItem **v4;
  uint64_t v5;
  WebCore::ClipboardItem *v6;
  WTF *v7;
  void *v8;
  WTF *result;

  v3 = a2[3];
  if ((_DWORD)v3)
  {
    v4 = *(WebCore::ClipboardItem ***)a2;
    v5 = 8 * v3;
    do
    {
      v6 = *v4;
      *v4 = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 1)
        {
          WebCore::ClipboardItem::~ClipboardItem(v6, a2);
          WTF::fastFree(v7, v8);
        }
        else
        {
          --*(_DWORD *)v6;
        }
      }
      ++v4;
      v5 -= 8;
    }
    while (v5);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    a2[2] = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WebCore::DataTransfer *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14ClipboardEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _QWORD *a2)
{
  WebCore::DataTransfer *result;
  WTF *v3;
  void *v4;

  result = (WebCore::DataTransfer *)a2[1];
  a2[1] = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::DataTransfer::~DataTransfer(result, a2);
      return (WebCore::DataTransfer *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_12KeyValuePairINS8_6StringENS8_3RefIN7WebCore10DOMPromiseENS8_12RawPtrTraitsISE_EENS8_21DefaultRefDerefTraitsISE_EEEEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSD_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t v4;
  _DWORD **v5;
  _DWORD *v6;
  WTF::StringImpl *v7;
  WTF *result;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = 16 * v3;
    v5 = (_DWORD **)(*(_QWORD *)a2 + 8);
    do
    {
      v6 = *v5;
      *v5 = 0;
      if (v6)
      {
        if (v6[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
        else
          --v6[4];
      }
      v7 = (WTF::StringImpl *)*(v5 - 1);
      *(v5 - 1) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v5 += 2;
      v4 -= 16;
    }
    while (v4);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

unint64_t WebCore::jsClipboardItemPrototypeFunction_getType(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  JSValue v34;
  WTF::StringImpl *v35;
  int hasExceptionsAfterHandlingTraps;
  objc_class *v37;
  WebCore::DOMGuardedObject *v38;
  WebCore::DOMGuardedObject *v39;
  WebCore::DOMGuardedObject *v40;
  int v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1949686C8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v39 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_49;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSClipboardItem::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSClipboardItem::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_49:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"ClipboardItem", "getType", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v43 = (WTF::StringImpl *)v26;
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v43, this);
LABEL_32:
        if (*((_DWORD *)v24 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v28 = v42;
          if (hasExceptionsAfterHandlingTraps)
          {
            v41 = 1;
            v42 = 0;
            if (v28)
            {
              if (*(_DWORD *)v28 == 2)
                WTF::StringImpl::destroy(v28, v35);
              else
                *(_DWORD *)v28 -= 2;
            }
            v31 = 1;
LABEL_38:
            ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E324FDC0[v31])(&v43, &v40);
            v14 = v39;
            v39 = 0;
            if (!v14)
              goto LABEL_41;
            goto LABEL_39;
          }
        }
        else
        {
          v28 = v42;
        }
        v41 = 0;
        v40 = 0;
        v43 = v28;
        (*(void (**)(_QWORD, WTF::StringImpl **, WebCore::DOMGuardedObject **))(**(_QWORD **)(v25 + 24) + 24))(*(_QWORD *)(v25 + 24), &v43, &v39);
        v30 = v43;
        v43 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 2)
            WTF::StringImpl::destroy(v30, v29);
          else
            *(_DWORD *)v30 -= 2;
        }
        v31 = 0;
        goto LABEL_38;
      }
      v27 = *(WTF::StringImpl **)(v26 + 8);
      if ((v27 & 1) != 0)
      {
        v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v27)
          goto LABEL_31;
      }
      else if (!v27)
      {
LABEL_31:
        v42 = v27;
        goto LABEL_32;
      }
      *(_DWORD *)v27 += 2;
      goto LABEL_31;
    }
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v34);
  }
  v39 = 0;
LABEL_39:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_41:
  v32 = *(_QWORD *)(v10 + 16);
  if (v32)
  {
    if (*(_QWORD *)(v10 + 24) != v32)
    {
      v37 = *(objc_class **)(v32 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v40);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v40, v37, 0);
      v38 = v40;
      v40 = 0;
      if (v38)
      {
        if (*((_DWORD *)v38 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v38 + 16))(v38);
        else
          --*((_DWORD *)v38 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

void WebCore::CloseEvent::~CloseEvent(WebCore::CloseEvent *this, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;

  v3 = (WTF::StringImpl *)*((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  WebCore::Event::~Event(this, a2);
}

{
  WTF::StringImpl *v3;
  bmalloc::api *v4;
  void *v5;

  v3 = (WTF::StringImpl *)*((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  WebCore::Event::~Event(this, a2);
  bmalloc::api::isoDeallocate(v4, v5);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore10CloseEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsCommandLineAPIHostPrototypeFunction_copyText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  uint64_t v19;
  JSValue v22;
  WTF::StringImpl *v23;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v25;
  uint64_t v26;
  int v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CommandLineAPIHost", "copyText");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 76);
  v8 = *(_DWORD *)(v6 + 76) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCommandLineAPIHost::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CommandLineAPIHost", "copyText");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v22);
  }
  v12 = *((_QWORD *)a2 + 6);
  v30 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v29 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v30, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v29;
    if (hasExceptionsAfterHandlingTraps)
    {
      v27 = 1;
      v29 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v23);
        else
          *(_DWORD *)v14 -= 2;
      }
      v19 = 0;
      v18 = 1;
      goto LABEL_27;
    }
  }
  else
  {
    v14 = v29;
  }
  v27 = 0;
  v26 = 0;
  v28 = v14;
  v29 = 0;
  WebCore::Pasteboard::createForCopyAndPaste((PAL *)&v29, &v30);
  v15 = v30;
  (*(void (**)(uint64_t, WTF::StringImpl **, uint64_t))(*(_QWORD *)v30 + 208))(v30, &v28, 1);
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  if (v29)
    (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v29 + 8))(v29);
  v17 = v28;
  v28 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v16);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = 0;
  v19 = 10;
LABEL_27:
  ((void (*)(uint64_t *, uint64_t *))off_1E324FDC0[v18])(&v30, &v26);
  return (_BYTE *)v19;
}

uint64_t WebCore::jsCommandLineAPIHostPrototypeFunction_inspect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSValue v11;
  JSValue v13;
  JSC::VM *v14;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "CommandLineAPIHost", "inspect");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCommandLineAPIHost::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "CommandLineAPIHost", "inspect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11.super.isa = (Class)*((_QWORD *)a2 + 6);
    WebCore::CommandLineAPIHost::inspect(*(_QWORD *)(v5 + 24), this, v11, *((JSC::JSGlobalObject **)a2 + 7));
    return 10;
  }
}

uint64_t WebCore::jsCommandLineAPIHostPrototypeFunction_inspectedObject(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[8];

  v4 = *((_QWORD *)a2 + 5);
  v14 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "CommandLineAPIHost", "inspectedObject");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCommandLineAPIHost::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "CommandLineAPIHost", "inspectedObject");
  v10 = *(_QWORD *)(v4 + 24);
  if (!*(_QWORD *)(v10 + 16))
    return 10;
  JSC::JSLockHolder::JSLockHolder();
  v11 = (***(uint64_t (****)(_QWORD, WebCore *))(v10 + 16))(*(_QWORD *)(v10 + 16), this);
  if (v11)
    v12 = v11;
  else
    v12 = 10;
  MEMORY[0x19AEA32A0](v15);
  return v12;
}

unsigned __int8 *WebCore::jsCommandLineAPIHostPrototypeFunction_getEventListeners(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  char **v18;
  BOOL v19;
  WebCore::EventTarget **v20;
  uint64_t v21;
  WebCore::EventTarget *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  size_t v27;
  unint64_t v28;
  int v29;
  void *v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  size_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t *v43;
  uint64_t v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  uint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  uint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  int v56;
  JSValue v57;
  unint64_t v58;
  void *v59;
  uint64_t SlowCase;
  JSC::VM *v61;
  uint64_t v62;
  uint64_t *v63;
  WTF::StringImpl *v64;
  int v65;
  _QWORD *v66;
  WTF *v67;
  uint64_t v68;
  WTF *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  WTF::StringImpl *v76;
  char **v78;
  JSValue v82;
  WTF::StringImpl **v83;
  JSC::VM *v84;
  unsigned __int8 *v85;
  WTF::StringImpl **v86;
  JSC::VM *v87;
  JSC::VM *v89;
  WTF *v90;
  int v91;
  unsigned int v92;
  JSC::VM *v93;
  uint64_t v94;
  WTF *v95;
  uint64_t *v96[10];
  WTF *v97;
  unint64_t v98;
  int v99;
  int v100;
  uint64_t v101;

  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  v89 = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v89, "CommandLineAPIHost", "getEventListeners");
  v10 = 16 * (*(_DWORD *)v9 & 0xFFFFFFFE);
  v11 = *(unsigned int *)(v10 + 0x4C);
  v12 = *(_DWORD *)(v10 + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCommandLineAPIHost::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v89, "CommandLineAPIHost", "getEventListeners");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v82.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (unsigned __int8 *)JSC::VM::throwException(v8, this, v82);
  }
  v16 = *((_QWORD *)a2 + 6);
  v93 = v8;
  if ((v16 & 0xFFFE000000000002) != 0)
  {
LABEL_14:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v93, 0, "target", 7, "CommandLineAPIHost", 19, a8, "getEventListeners", 18, "EventTarget", 12);
    return 0;
  }
  v17 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
  v18 = (char **)(16 * v17);
  if ((char **)(16 * v17) == &WebCore::JSWindowProxy::s_info)
  {
    v20 = (WebCore::EventTarget **)(*(_QWORD *)(v16 + 16) + 3408);
    goto LABEL_31;
  }
  if ((_DWORD)v17)
    v19 = v18 == &WebCore::JSDOMWindow::s_info;
  else
    v19 = 1;
  if (v19)
  {
    if (!(_DWORD)v17)
      goto LABEL_14;
    goto LABEL_30;
  }
  v21 = 16 * v17;
  do
    v21 = *(_QWORD *)(v21 + 16);
  while ((char **)v21 != &WebCore::JSDOMWindow::s_info && v21 != 0);
  if (v21)
  {
LABEL_30:
    v20 = (WebCore::EventTarget **)(v16 + 3408);
    goto LABEL_31;
  }
  if (v18 != &WebCore::JSWorkerGlobalScope::s_info)
  {
    v78 = v18;
    do
      v78 = (char **)v78[2];
    while (v78 != &WebCore::JSWorkerGlobalScope::s_info && v78 != 0);
    if (!v78)
    {
      if (v18 != &WebCore::JSEventTarget::s_info)
      {
        do
          v18 = (char **)v18[2];
        while (v18 != &WebCore::JSEventTarget::s_info && v18 != 0);
        if (!v18)
          goto LABEL_14;
      }
      v20 = (WebCore::EventTarget **)(v16 + 24);
LABEL_31:
      v23 = *v20;
      if (!*v20)
        goto LABEL_14;
      goto LABEL_32;
    }
  }
  v23 = (WebCore::EventTarget *)(*(_QWORD *)(v16 + 3400) + 320);
LABEL_32:
  v24 = *(_QWORD *)(v10 + 40);
  WebCore::CommandLineAPIHost::getEventListeners(this, v23, &v90);
  v25 = *((_QWORD *)this + 7);
  v26 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v27 = 8 * *(unsigned __int8 *)(v26 + 14);
  v28 = JSC::allocateCell<JSC::JSFinalObject>(v25, v27 + 16);
  v29 = *(_DWORD *)(v26 + 8);
  *(_DWORD *)v28 = v26 >> 4;
  *(_DWORD *)(v28 + 4) = v29;
  *(_QWORD *)(v28 + 8) = 0;
  v85 = (unsigned __int8 *)v28;
  bzero((void *)(v28 + 16), v27);
  v84 = (JSC::VM *)v25;
  if (*(_BYTE *)(v25 + 755))
    __dmb(0xAu);
  v31 = v90;
  if (!v92)
  {
LABEL_143:
    if (!v31)
      return v85;
LABEL_144:
    v90 = 0;
    v91 = 0;
    WTF::fastFree(v31, v30);
    return v85;
  }
  v83 = (WTF::StringImpl **)((char *)v90 + 24 * v92);
  do
  {
    v87 = (JSC::VM *)*((_QWORD *)this + 7);
    v96[9] = (uint64_t *)v87;
    LOBYTE(v93) = 0;
    v94 = 0x800000000;
    v95 = (WTF *)&v96[1];
    memset(v96, 0, 72);
    v32 = *((unsigned int *)v31 + 5);
    v86 = (WTF::StringImpl **)v31;
    if (v32 >= 9)
    {
      LOBYTE(v93) = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v94) == 1;
      v32 = *((unsigned int *)v31 + 5);
      if (!*((_DWORD *)v31 + 5))
        goto LABEL_102;
LABEL_38:
      v33 = 16 * v32;
      v34 = (_BYTE *)(*((_QWORD *)v31 + 1) + 10);
      while (1)
      {
        v35 = v24;
        v36 = *((_QWORD *)this + 7);
        v37 = JSC::StructureCache::emptyObjectStructureForPrototype();
        v38 = 8 * *(unsigned __int8 *)(v37 + 14);
        v39 = *(_QWORD *)(v36 + (((v38 + 31) >> 1) & 0x7F8) + 15024);
        if (v39)
        {
          v40 = *(unsigned int *)(v39 + 60);
          v41 = *(_QWORD *)(v39 + 24);
          if (v41 < *(_QWORD *)(v39 + 32))
            goto LABEL_41;
          v41 = *(_QWORD *)(v39 + 40);
          if ((v41 & 1) == 0)
          {
            v58 = *(_QWORD *)(v41 + 8) ^ *(_QWORD *)(v39 + 48);
            *(_QWORD *)(v39 + 32) = v41 + HIDWORD(v58);
            *(_QWORD *)(v39 + 40) = v41 + (int)v58;
LABEL_41:
            *(_QWORD *)(v39 + 24) = v41 + v40;
            goto LABEL_42;
          }
          JSC::sanitizeStackForVM();
          SlowCase = JSC::LocalAllocator::allocateSlowCase();
        }
        else
        {
          SlowCase = JSC::CompleteSubspace::allocateSlow();
        }
        v41 = SlowCase;
LABEL_42:
        *(_DWORD *)v41 = 0;
        v42 = *(_DWORD *)(v37 + 8);
        *(_DWORD *)v41 = v37 >> 4;
        *(_DWORD *)(v41 + 4) = v42;
        *(_QWORD *)(v41 + 8) = 0;
        bzero((void *)(v41 + 16), v38);
        if (*(_BYTE *)(v36 + 755))
          __dmb(0xAu);
        v43 = *(uint64_t **)(v34 - 10);
        if (v43)
          v44 = *v43;
        else
          v44 = 0;
        if (*(_DWORD *)(v36 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v36) & 1) != 0)
          goto LABEL_95;
        WTF::AtomStringImpl::addLiteral();
        v45 = v97;
        v97 = 0;
        v98 = v41;
        v99 = -1;
        v100 = 0x1000000;
        v101 = 0;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v41, (JSC::VM *)v36, (unint64_t)v45, v44, 0, (uint64_t)&v97);
        if (v45)
        {
          if (*(_DWORD *)v45 == 2)
            WTF::StringImpl::destroy(v45, v46);
          else
            *(_DWORD *)v45 -= 2;
        }
        v47 = *v34 ? 7 : 6;
        if (*(_DWORD *)(v36 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v36) & 1) != 0)
          goto LABEL_95;
        WTF::AtomStringImpl::addLiteral();
        v48 = v97;
        v97 = 0;
        v98 = v41;
        v99 = -1;
        v100 = 0x1000000;
        v101 = 0;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v41, (JSC::VM *)v36, (unint64_t)v48, v47, 0, (uint64_t)&v97);
        if (v48)
        {
          if (*(_DWORD *)v48 == 2)
            WTF::StringImpl::destroy(v48, v49);
          else
            *(_DWORD *)v48 -= 2;
        }
        v50 = *(v34 - 1) ? 7 : 6;
        if (*(_DWORD *)(v36 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v36) & 1) != 0)
          goto LABEL_95;
        WTF::AtomStringImpl::addLiteral();
        v51 = v97;
        v97 = 0;
        v98 = v41;
        v99 = -1;
        v100 = 0x1000000;
        v101 = 0;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v41, (JSC::VM *)v36, (unint64_t)v51, v50, 0, (uint64_t)&v97);
        if (v51)
        {
          if (*(_DWORD *)v51 == 2)
            WTF::StringImpl::destroy(v51, v52);
          else
            *(_DWORD *)v51 -= 2;
        }
        v53 = *(v34 - 2) ? 7 : 6;
        if (*(_DWORD *)(v36 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v36) & 1) != 0)
        {
LABEL_95:
          v41 = 0;
        }
        else
        {
          WTF::AtomStringImpl::addLiteral();
          v54 = v97;
          v97 = 0;
          v98 = v41;
          v99 = -1;
          v100 = 0x1000000;
          v101 = 0;
          JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v41, (JSC::VM *)v36, (unint64_t)v54, v53, 0, (uint64_t)&v97);
          if (v54)
          {
            v24 = v35;
            if (*(_DWORD *)v54 == 2)
              WTF::StringImpl::destroy(v54, v55);
            else
              *(_DWORD *)v54 -= 2;
            goto LABEL_71;
          }
        }
        v24 = v35;
LABEL_71:
        if (*((_DWORD *)v87 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v87) & 1) != 0)
          goto LABEL_124;
        v56 = v94;
        if ((_DWORD)v94 == HIDWORD(v94) || v95 != (WTF *)&v96[1] && v95)
        {
          v57.super.isa = (Class)v41;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v94, v57) == 1)
            LOBYTE(v93) = 1;
        }
        else
        {
          *((_QWORD *)v95 + v94) = v41;
          LODWORD(v94) = v56 + 1;
        }
        v34 += 16;
        v33 -= 16;
        if (!v33)
          goto LABEL_102;
      }
    }
    if (*((_DWORD *)v31 + 5))
      goto LABEL_38;
LABEL_102:
    if ((_BYTE)v93)
    {
      JSC::throwOutOfMemoryError();
    }
    else
    {
      v97 = v95;
      LODWORD(v98) = v94;
      v61 = *(JSC::VM **)(v24 + 56);
      if (!*((_DWORD *)v61 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) == 0)
      {
        v62 = JSC::constructArray();
        goto LABEL_105;
      }
    }
LABEL_124:
    v62 = 0;
LABEL_105:
    v63 = v96[0];
    if (v96[0])
    {
      v97 = (WTF *)&v94;
      v66 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(v96[0], (uint64_t *)&v97);
      WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v63, v66);
    }
    if (v95 != (WTF *)&v96[1] && v95)
      WTF::fastFree(v95, v59);
    v64 = *v86;
    if (*v86)
    {
      if ((*((_BYTE *)v64 + 16) & 0x10) != 0)
      {
        *(_DWORD *)v64 += 2;
      }
      else
      {
        WTF::AtomStringImpl::addSlowCase();
        v64 = v93;
      }
    }
    v65 = *(_DWORD *)v64;
    *(_DWORD *)v64 += 2;
    if (v65)
      *(_DWORD *)v64 = v65;
    else
      WTF::StringImpl::destroy(v64, (WTF::StringImpl *)v59);
    v93 = 0;
    v94 = (uint64_t)v85;
    v95 = (WTF *)0x1000000FFFFFFFFLL;
    v96[0] = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>(v85, v84, (unint64_t)v64, v62, 0, (uint64_t)&v93);
    if (*(_DWORD *)v64 == 2)
      WTF::StringImpl::destroy(v64, (WTF::StringImpl *)v30);
    else
      *(_DWORD *)v64 -= 2;
    v31 = (WTF *)(v86 + 3);
  }
  while (v86 + 3 != v83);
  v31 = v90;
  if (v92)
  {
    v67 = (WTF *)((char *)v90 + 24 * v92);
    do
    {
      v68 = *((unsigned int *)v31 + 5);
      v69 = (WTF *)*((_QWORD *)v31 + 1);
      if ((_DWORD)v68)
      {
        v70 = 16 * v68;
        do
        {
          v71 = *(_QWORD *)v69;
          if (*(_QWORD *)v69)
          {
            v72 = (uint64_t *)(v71 - 16);
            v73 = *(_QWORD *)(((v71 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v74 = *(uint64_t **)(v71 - 8);
            if (v74)
            {
              v75 = *v72;
              *v74 = *v72;
              *(_QWORD *)(v75 + 8) = v74;
              *v72 = 0;
              v72[1] = 0;
            }
            *v72 = *(_QWORD *)(v73 + 40);
            *(_QWORD *)(v73 + 40) = v72;
            *(_QWORD *)v69 = 0;
          }
          v69 = (WTF *)((char *)v69 + 16);
          v70 -= 16;
        }
        while (v70);
        v69 = (WTF *)*((_QWORD *)v31 + 1);
      }
      if (v69)
      {
        *((_QWORD *)v31 + 1) = 0;
        *((_DWORD *)v31 + 4) = 0;
        WTF::fastFree(v69, v30);
      }
      v76 = *(WTF::StringImpl **)v31;
      *(_QWORD *)v31 = 0;
      if (v76)
      {
        if (*(_DWORD *)v76 == 2)
          WTF::StringImpl::destroy(v76, (WTF::StringImpl *)v30);
        else
          *(_DWORD *)v76 -= 2;
      }
      v31 = (WTF *)((char *)v31 + 24);
    }
    while (v31 != v67);
    v31 = v90;
    goto LABEL_143;
  }
  if (v90)
    goto LABEL_144;
  return v85;
}

_BYTE *WebCore::jsCommandLineAPIHostPrototypeFunction_gatherRTCLogs(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  unint64_t v17;
  WebCore::JSDOMGlobalObject *v18;
  unsigned int v19;
  WebCore::JSRTCLogsCallback *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  JSValue v27;
  JSC::VM *v28;
  JSC::VM *v29;
  int v30;
  JSC::VM *v31;
  int v32;
  char v33;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CommandLineAPIHost", "gatherRTCLogs");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCommandLineAPIHost::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CommandLineAPIHost", "gatherRTCLogs");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v27);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v9 = 0;
    v30 = 0;
LABEL_20:
    v29 = 0;
    v31 = v9;
    WebCore::CommandLineAPIHost::gatherRTCLogs(v16, this, (uint64_t *)&v31);
    if (v31)
    {
      if (*((_DWORD *)v31 + 4) == 1)
        (*(void (**)(void))(*(_QWORD *)v31 + 16))();
      else
        --*((_DWORD *)v31 + 4);
    }
    v23 = 0;
    v24 = 10;
    goto LABEL_24;
  }
  v18 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v29 = v9;
  if ((v17 & 0xFFFE000000000002) == 0
    && (v19 = *(unsigned __int8 *)(v17 + 5), v19 >= 0x17)
    && ((v19 & 0xFE) == 0x1A
     || (*(_BYTE *)(v17 + 6) & 4) != 0
     && ((*(void (**)(JSC::VM **__return_ptr, unint64_t))(16
                                                                          * *(unsigned int *)(16
                                                                                            * (*(_DWORD *)v17 & 0xFFFFFFFE)
                                                                                            + 0x4C)
                                                                          + 0x38))(&v31, v17), (_BYTE)v31)))
  {
    v9 = (JSC::VM *)WTF::fastMalloc((WTF *)0x20);
    v20 = WebCore::JSRTCLogsCallback::JSRTCLogsCallback(v9, v17, v18);
    v21 = 0;
    v32 = 0;
    v31 = 0;
    v22 = 1;
    v29 = v20;
  }
  else
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v29, 0, "callback", 9, "CommandLineAPIHost", 19, a8, "gatherRTCLogs", 14);
    v22 = 0;
    v21 = 1;
    v32 = 1;
  }
  v30 = v21;
  ((void (*)(char *, JSC::VM **))off_1E324FF98[v21])(&v33, &v31);
  if (v22)
    goto LABEL_20;
  v24 = 0;
  v23 = 1;
LABEL_24:
  ((void (*)(JSC::VM **, JSC::VM **))off_1E324FFA8[v23])(&v31, &v29);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsCommandLineAPIHostPrototypeFunction_databaseId(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *i;
  uint64_t *v33;
  uint64_t v34;
  int v35;
  int v36;
  JSValue v38;
  unsigned __int8 *v39;
  unsigned int v40;
  unsigned int v41;
  JSC::VM *v42;
  JSC::VM *v43;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v42 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "CommandLineAPIHost", "databaseId");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCommandLineAPIHost::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "CommandLineAPIHost", "databaseId");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v38.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v38);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v43 = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSDatabase::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSDatabase::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(_QWORD *)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v43, 0, "database", 9, "CommandLineAPIHost", 19, a8, "databaseId", 11, "Database", 9);
    return 0;
  }
  v25 = (uint64_t *)((char *)v9 + 41968);
  v26 = *(_QWORD *)(v16 + 8);
  if (!v26)
    return (_BYTE *)*v25;
  v27 = *(_QWORD *)(v26 + 120);
  if (!v27 || !*(_DWORD *)(v27 + 68))
    return (_BYTE *)*v25;
  v28 = *(_QWORD *)(v27 + 56);
  v29 = *(unsigned int *)(v27 + 64);
  if ((_DWORD)v29)
  {
    v30 = 16 * v29;
    for (i = *(uint64_t **)(v27 + 56); !*i; i += 2)
    {
      v30 -= 16;
      if (!v30)
        return (_BYTE *)*v25;
    }
  }
  else
  {
    i = *(uint64_t **)(v27 + 56);
  }
  v33 = (uint64_t *)(v28 + 16 * v29);
LABEL_37:
  if (i == v33)
    return (_BYTE *)*v25;
  if (*(_QWORD *)(i[1] + 8) != v24)
  {
    while (1)
    {
      i += 2;
      if (i == v33)
        return (_BYTE *)*v25;
      if (*i)
        goto LABEL_37;
    }
  }
  v34 = *i;
  if (!*i)
    return (_BYTE *)*v25;
  v35 = *(_DWORD *)v34;
  v36 = *(_DWORD *)(v34 + 4);
  *(_DWORD *)v34 += 2;
  if (v36)
  {
    if (v36 != 1)
    {
LABEL_45:
      v23 = *((_QWORD *)v9 + 8095);
      if (!v23 || v34 != *(_QWORD *)(v23 + 8))
      {
        v23 = JSC::jsStringWithCacheSlowCase();
        v35 = *(_DWORD *)v34 - 2;
      }
      goto LABEL_48;
    }
    v39 = *(unsigned __int8 **)(v34 + 8);
    if ((*(_BYTE *)(v34 + 16) & 4) != 0)
    {
      v40 = *v39;
    }
    else
    {
      v41 = *(unsigned __int16 *)v39;
      if (v41 > 0xFF)
        goto LABEL_45;
      v40 = v41;
    }
    v23 = *((_QWORD *)v9 + v40 + 5277);
  }
  else
  {
    v23 = *v25;
  }
LABEL_48:
  if (v35)
    *(_DWORD *)v34 = v35;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v34, a2);
  return (_BYTE *)v23;
}

_BYTE *WebCore::jsCommandLineAPIHostPrototypeFunction_storageId(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  unint64_t v13;
  WebCore::Storage *v14;
  uint64_t v15;
  WebCore::InspectorDOMStorageAgent *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v24;
  JSValue v26;
  JSC::VM *v27;
  JSC::VM *v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CommandLineAPIHost", "storageId");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 76);
  v8 = *(_DWORD *)(v6 + 76) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCommandLineAPIHost::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCommandLineAPIHost::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CommandLineAPIHost", "storageId");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v26);
  }
  v12 = *((_QWORD *)a2 + 6);
  v28 = v4;
  v13 = JSC::jsDynamicCast<WebCore::JSStorage *>(v12);
  if (!v13 || (v16 = *(WebCore::InspectorDOMStorageAgent **)(v13 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v28, 0, "storage", 8, "CommandLineAPIHost", 19, v15, "storageId", 10, "Storage", 8);
    return 0;
  }
  WebCore::InspectorDOMStorageAgent::storageId((uint64_t *)&v28, v16, v14);
  v17 = *((_QWORD *)this + 7);
  v18 = v28;
  if (!v28 || (v19 = *((_DWORD *)v28 + 1)) == 0)
  {
    v20 = *(_QWORD *)(v17 + 41968);
LABEL_21:
    v28 = 0;
    if (!v18)
      return (_BYTE *)v20;
    goto LABEL_29;
  }
  if (v19 != 1)
    goto LABEL_18;
  v21 = (unsigned __int8 *)*((_QWORD *)v28 + 1);
  if ((*((_BYTE *)v28 + 16) & 4) != 0)
  {
    v22 = *v21;
LABEL_27:
    v20 = *(_QWORD *)(v17 + 8 * v22 + 42216);
    goto LABEL_28;
  }
  v24 = *(unsigned __int16 *)v21;
  if (v24 <= 0xFF)
  {
    v22 = v24;
    goto LABEL_27;
  }
LABEL_18:
  v20 = *(_QWORD *)(v17 + 64760);
  if (!v20 || v28 != *(JSC::VM **)(v20 + 8))
  {
    v20 = JSC::jsStringWithCacheSlowCase();
    v18 = v28;
    goto LABEL_21;
  }
LABEL_28:
  v28 = 0;
LABEL_29:
  if (*(_DWORD *)v18 == 2)
    WTF::StringImpl::destroy(v18, v18);
  else
    *(_DWORD *)v18 -= 2;
  return (_BYTE *)v20;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17JSRTCLogsCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore17JSRTCLogsCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16CompositionEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;
  WTF *v4;
  uint64_t *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  v4 = (WTF *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 1)
    {
      v5 = (uint64_t *)*((_QWORD *)v4 + 2);
      *((_QWORD *)v4 + 2) = 0;
      if (v5)
      {
        if (*v5)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v5, a2);
        WTF::fastFree((WTF *)v5, a2);
      }
      v6 = (unsigned int *)*((_QWORD *)v4 + 1);
      *((_QWORD *)v4 + 1) = 0;
      if (v6)
      {
        do
        {
          v7 = __ldaxr(v6);
          v8 = v7 - 1;
        }
        while (__stlxr(v8, v6));
        if (!v8)
        {
          atomic_store(1u, v6);
          WTF::fastFree((WTF *)v6, a2);
        }
      }
      return (WTF::StringImpl *)WTF::fastFree(v4, a2);
    }
    else
    {
      --*(_DWORD *)v4;
    }
  }
  return result;
}

_BYTE *WebCore::jsCompositionEventPrototypeFunction_initCompositionEvent(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  unint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  int v21;
  uint64_t v22;
  int *v23;
  int v24;
  _BOOL4 i;
  unint64_t v26;
  JSC::VM *v27;
  int v28;
  uint64_t v29;
  int *v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  JSC::VM *v35;
  WebCore *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  uint64_t *v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  _BOOL4 v47;
  JSC::JSGlobalObject *v48;
  _BOOL4 v49;
  WebCore **v50;
  JSC::JSGlobalObject *v51;
  _BOOL4 v52;
  JSValue v54;
  _BOOL4 v55;
  _BOOL4 v56;
  int hasExceptionsAfterHandlingTraps;
  BOOL v58;
  BOOL v59;
  _BOOL4 v60;
  JSC::VM *v61;
  uint64_t v62;
  int v63;
  WTF::StringImpl *v64;
  int v65;
  WebCore *v66;
  WTF::StringImpl *v67;

  v3 = (WebCore *)this;
  v4 = 0xFFFE000000000002;
  v5 = this[7];
  v61 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v61, "CompositionEvent", "initCompositionEvent");
  v7 = (uint64_t)a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCompositionEvent::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCompositionEvent::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v61, "CompositionEvent", "initCompositionEvent");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v54.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, v3, v54);
  }
  v13 = *(_QWORD *)(v6 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v64);
  v16 = v65;
  if (v65)
  {
    v34 = 0;
    goto LABEL_83;
  }
  v17 = *(int *)(v7 + 32);
  if ((unint64_t)(v17 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v19 = (JSC::VM *)*((_QWORD *)v3 + 7);
    v18 = 10;
    goto LABEL_25;
  }
  v18 = *(_QWORD *)(v7 + 56);
  v19 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v18 >= 0xFFFE000000000000)
    goto LABEL_123;
  *(_QWORD *)&v20 = v18 - 0x2000000000000;
  if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v18 & 0xFFFE000000000002) == 0)
    {
      v21 = *(unsigned __int8 *)(v18 + 5);
      if (v21 == 3)
      {
        v24 = *(_DWORD *)(v18 + 8);
      }
      else
      {
        if (v21 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            i = 1;
LABEL_143:
            v4 = 0xFFFE000000000002;
            goto LABEL_26;
          }
          v58 = *(_QWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x28) == (_QWORD)v3;
LABEL_140:
          i = !v58;
          goto LABEL_143;
        }
        v22 = *(_QWORD *)(v18 + 8);
        if ((v22 & 1) != 0)
          v23 = (int *)(v18 + 16);
        else
          v23 = (int *)(v22 + 4);
        v24 = *v23;
      }
      v58 = v24 == 0;
      goto LABEL_140;
    }
LABEL_25:
    i = v18 == 7;
    goto LABEL_26;
  }
  for (i = v20 > 0.0 || v20 < 0.0; ; i = v18 != 0)
  {
LABEL_26:
    if (*((_DWORD *)v19 + 20))
    {
      v55 = i;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
      {
        v34 = 0;
        goto LABEL_82;
      }
      v17 = *(int *)(v7 + 32);
      i = v55;
    }
    if ((unint64_t)(v17 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v27 = (JSC::VM *)*((_QWORD *)v3 + 7);
      v26 = 10;
LABEL_38:
      v32 = v26 == 7;
      goto LABEL_39;
    }
    v26 = *(_QWORD *)(v7 + 64);
    v27 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v26 >= 0xFFFE000000000000)
    {
      v32 = v26 != 0;
      goto LABEL_39;
    }
    if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v26 & v4) != 0)
        goto LABEL_38;
      v28 = *(unsigned __int8 *)(v26 + 5);
      if (v28 == 3)
      {
        v31 = *(_DWORD *)(v26 + 8);
      }
      else
      {
        if (v28 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v32 = 1;
LABEL_148:
            v4 = 0xFFFE000000000002;
            goto LABEL_39;
          }
          v59 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)v3;
LABEL_145:
          v32 = !v59;
          goto LABEL_148;
        }
        v29 = *(_QWORD *)(v26 + 8);
        if ((v29 & 1) != 0)
          v30 = (int *)(v26 + 16);
        else
          v30 = (int *)(v29 + 4);
        v31 = *v30;
      }
      v59 = v31 == 0;
      goto LABEL_145;
    }
    v32 = COERCE_DOUBLE(v26 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v26 - 0x2000000000000) < 0.0;
LABEL_39:
    if (!*((_DWORD *)v27 + 20))
      goto LABEL_40;
    v56 = i;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
      break;
    v17 = *(int *)(v7 + 32);
    i = v56;
LABEL_40:
    if ((unint64_t)(v17 - 5) > 0xFFFFFFFFFFFFFFFBLL)
    {
      v4 = 0;
    }
    else
    {
      v33 = *(_QWORD *)(v7 + 72);
      if ((v33 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v4 = 0;
      }
      else
      {
        v62 = *((_QWORD *)v3 + 7);
        if ((v33 & v4) != 0
          || *(unsigned __int8 *)(v33 + 5) < 0x17u
          || &WebCore::JSWindowProxy::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C))
          || (v46 = *(_QWORD *)(*(_QWORD *)(v33 + 16) + 3408),
              v47 = i,
              !(*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 104))(v46))
          || (v4 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 104))(v46) + 112)) == 0)
        {
          WebCore::throwArgumentTypeError((uint64_t)v3, (uint64_t)&v62, 3, "viewArg", 8, "CompositionEvent", 17, v15, "initCompositionEvent", 21, "WindowProxy", 12);
          v34 = 0;
          goto LABEL_82;
        }
        i = v47;
        v17 = *(int *)(v7 + 32);
      }
    }
    if ((unint64_t)(v17 - 6) >= 0xFFFFFFFFFFFFFFFBLL || (v7 = *(_QWORD *)(v7 + 80), v7 == 10))
    {
      v3 = (WebCore *)*MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v3 += 2;
      v63 = 0;
      v7 = 10;
      goto LABEL_62;
    }
    v67 = (WTF::StringImpl *)v7;
    v35 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if ((v7 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v7 + 5) != 2)
    {
      v51 = v3;
      v52 = i;
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v67, v51);
      i = v52;
      goto LABEL_59;
    }
    v36 = *(WebCore **)(v7 + 8);
    if ((v36 & 1) != 0)
    {
      v48 = v3;
      v49 = i;
      v50 = (WebCore **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, v48);
      i = v49;
      v36 = *v50;
      if (!*v50)
        goto LABEL_58;
LABEL_57:
      *(_DWORD *)v36 += 2;
      goto LABEL_58;
    }
    if (v36)
      goto LABEL_57;
LABEL_58:
    v66 = v36;
LABEL_59:
    if (*((_DWORD *)v35 + 20))
    {
      v60 = i;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v35);
      v3 = v66;
      if (hasExceptionsAfterHandlingTraps)
      {
        v63 = 1;
        v66 = 0;
        if (v3)
        {
          if (*(_DWORD *)v3 == 2)
            WTF::StringImpl::destroy(v3, v14);
          else
            *(_DWORD *)v3 -= 2;
        }
        v34 = 0;
        v40 = 1;
        goto LABEL_81;
      }
      i = v60;
    }
    else
    {
      v3 = v66;
    }
    v63 = 0;
LABEL_62:
    if (!v65)
    {
      v37 = v64;
      v64 = 0;
      v67 = v37;
      if (v4)
        ++*(_DWORD *)v4;
      v66 = (WebCore *)v4;
      v62 = 0;
      if ((*(_BYTE *)(v13 + 21) & 0x30) == 0)
      {
        WebCore::UIEvent::initUIEvent(v13, (const WTF::AtomString *)&v67, i, v32, (_DWORD **)&v66, 0);
        if (v3)
          *(_DWORD *)v3 += 2;
        v38 = *(WTF::StringImpl **)(v13 + 88);
        *(_QWORD *)(v13 + 88) = v3;
        if (v38)
        {
          if (*(_DWORD *)v38 == 2)
          {
            WTF::StringImpl::destroy(v38, v14);
            if (v3)
            {
LABEL_72:
              if (*(_DWORD *)v3 == 2)
              {
                WTF::StringImpl::destroy(v3, v14);
                v4 = (unint64_t)v66;
              }
              else
              {
                *(_DWORD *)v3 -= 2;
              }
            }
LABEL_74:
            v66 = 0;
            if (v4)
            {
              if (*(_DWORD *)v4 == 1)
              {
                v42 = *(uint64_t **)(v4 + 16);
                *(_QWORD *)(v4 + 16) = 0;
                if (v42)
                {
                  if (*v42)
                    WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v42, v14);
                  WTF::fastFree((WTF *)v42, v14);
                }
                v43 = *(unsigned int **)(v4 + 8);
                *(_QWORD *)(v4 + 8) = 0;
                if (v43)
                {
                  do
                  {
                    v44 = __ldaxr(v43);
                    v45 = v44 - 1;
                  }
                  while (__stlxr(v45, v43));
                  if (!v45)
                  {
                    atomic_store(1u, v43);
                    WTF::fastFree((WTF *)v43, v14);
                  }
                }
                WTF::fastFree((WTF *)v4, v14);
              }
              else
              {
                --*(_DWORD *)v4;
              }
            }
            v39 = v67;
            v67 = 0;
            if (v39)
            {
              if (*(_DWORD *)v39 == 2)
                WTF::StringImpl::destroy(v39, v14);
              else
                *(_DWORD *)v39 -= 2;
            }
            v40 = 0;
            v34 = 10;
LABEL_81:
            ((void (*)(WTF::StringImpl **, uint64_t *))off_1E324FDC0[v40])(&v67, &v62);
            goto LABEL_82;
          }
          *(_DWORD *)v38 -= 2;
        }
      }
      if (v3)
        goto LABEL_72;
      goto LABEL_74;
    }
    v19 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_123:
    ;
  }
  v34 = 0;
LABEL_82:
  v16 = v65;
LABEL_83:
  if (v16 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E324FCB0[v16])(&v62, &v64);
  return (_BYTE *)v34;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC21GenericTypedArrayViewINSA_12Uint8AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC21GenericTypedArrayViewINSA_12Uint8AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsContactsManagerPrototypeFunction_getProperties(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  WTF *v24;
  void *v25;
  WTF *v26;
  uint64_t v27;
  objc_class *v29;
  WTF *v30;
  WTF *v31;
  uint64_t v32;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496A83CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = 16 * (*(_DWORD *)v17 & 0xFFFFFFFE);
  v19 = *(unsigned int *)(v18 + 76);
  v20 = *(_DWORD *)(v18 + 76) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSContactsManager::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSContactsManager::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"ContactsManager", "getProperties", v16);
  }
  else
  {
    v24 = (WTF *)WTF::fastMalloc((WTF *)3);
    v31 = v24;
    *(_WORD *)v24 = 256;
    *((_BYTE *)v24 + 2) = 2;
    v32 = 0x300000003;
    WebCore::DeferredPromise::resolve<WebCore::IDLSequence<WebCore::IDLEnumeration<WebCore::ContactProperty>>>((uint64_t)v14, (unsigned __int8 **)&v31);
    v26 = v31;
    if (v31)
    {
      v31 = 0;
      LODWORD(v32) = 0;
      WTF::fastFree(v26, v25);
    }
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v31);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v31, v29, 0);
      v30 = v31;
      v31 = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WTF *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsContactsManagerPrototypeFunction_select(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  WTF::StringImpl *v28;
  unsigned int v29;
  unsigned int i;
  unsigned int v31;
  unint64_t IndexQuickly;
  WTF::StringImpl *v33;
  unsigned __int16 v34;
  char *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  unint64_t v45;
  WTF::StringImpl *v46;
  unsigned __int16 v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  JSC::JSCell *v52;
  JSC::VM *v53;
  uint64_t Object;
  JSC::Structure *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unint64_t v58;
  BOOL v59;
  JSC::VM *v60;
  double v61;
  void *v62;
  WTF *v63;
  uint64_t v64;
  objc_class *v66;
  WTF::StringImpl *v67;
  JSValue v68;
  void *v69;
  BOOL v70;
  int v71;
  uint64_t v72;
  int *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  WebCore::DOMGuardedObject *v78;
  WTF::StringImpl *v79;
  unint64_t v80;
  int v81;
  WTF *v82;
  unint64_t v83;
  JSC::VM *v84;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496AF24);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v78 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_109;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSContactsManager::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSContactsManager::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_109:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"ContactsManager", "select", v17);
  }
  else
  {
    v24 = *((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v84 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v26 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v26 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v37 = v79;
        v79 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v36);
          else
            *(_DWORD *)v37 -= 2;
        }
        v38 = 1;
        v81 = 1;
        goto LABEL_101;
      }
      v82 = 0;
      v83 = 0;
      v76 = v25;
      v77 = v13;
      if (JSC::getIterationMode() == 2)
      {
        v28 = 0;
        v29 = 0;
        for (i = 1; ; ++i)
        {
          v31 = (*(_BYTE *)(v26 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v26 + 8) - 8) : 0;
          if (i - 1 >= v31)
            break;
          IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v26, i - 1, 0);
          if (!IndexQuickly)
            IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v26, this, i - 1);
          if (*(_DWORD *)(v24 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) != 0)
            break;
          v79 = (WTF::StringImpl *)*((_QWORD *)this + 7);
          v33 = v79;
          v34 = WebCore::parseEnumeration<WebCore::ContactProperty>(this, IndexQuickly);
          if (!*((_DWORD *)v33 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) == 0)
          {
            if (v34 <= 0xFFu)
            {
              JSC::throwTypeError();
            }
            else
            {
              LOBYTE(v79) = v34;
              if (v29 == (_DWORD)v83)
              {
                v35 = WTF::Vector<WebCore::VideoFacingMode,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)&v82, (WTF *)(v29 + 1), (unint64_t)&v79);
                v29 = HIDWORD(v83);
                v28 = v82;
                *((_BYTE *)v82 + HIDWORD(v83)) = *v35;
              }
              else
              {
                *((_BYTE *)v28 + v29) = v34;
              }
              HIDWORD(v83) = ++v29;
            }
          }
          if (*(_QWORD *)(v24 + 16))
          {
            v49 = JSC::JSArrayIterator::create();
            if ((i & 0x80000000) != 0)
              v50 = COERCE__INT64((double)i) + 0x2000000000000;
            else
              v50 = i | 0xFFFE000000000000;
            *(_QWORD *)(v49 + 16) = v50;
            goto LABEL_79;
          }
        }
        goto LABEL_80;
      }
      v39 = JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v26, v27);
      v41 = v40;
      if (*(_DWORD *)(v24 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) != 0)
      {
        v28 = 0;
        v29 = 0;
LABEL_80:
        if (!*(_DWORD *)(v24 + 80))
        {
          v28 = v82;
          goto LABEL_82;
        }
        if (!JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24))
        {
LABEL_82:
          v79 = v28;
          v51 = v83;
          v80 = __PAIR64__(v29, v83);
          v81 = 0;
          if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
          {
            v59 = 0;
            goto LABEL_98;
          }
          v52 = (JSC::JSCell *)*((_QWORD *)a2 + 7);
          v53 = (JSC::VM *)*((_QWORD *)this + 7);
          v84 = v53;
          if (((unint64_t)v52 & 0xFFFFFFFFFFFFFFF7) == 2)
          {
LABEL_91:
            v59 = 0;
            goto LABEL_98;
          }
          if (((unint64_t)v52 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v52)) == 0)
          {
            JSC::throwTypeError();
LABEL_100:
            v13 = v77;
            v38 = 0;
            goto LABEL_101;
          }
          v55 = (JSC::Structure *)Object;
          WTF::AtomStringImpl::addLiteral();
          v56 = v82;
          v58 = JSC::JSObject::get(v55, this, (unint64_t)v82);
          if (v56)
          {
            if (*(_DWORD *)v56 == 2)
              WTF::StringImpl::destroy(v56, v57);
            else
              *(_DWORD *)v56 -= 2;
          }
          if (*((_DWORD *)v53 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v53) & 1) != 0)
            goto LABEL_100;
          if (v58 == 10)
            goto LABEL_91;
          v60 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v58 >= 0xFFFE000000000000)
          {
            v70 = (_DWORD)v58 == 0;
            goto LABEL_146;
          }
          *(_QWORD *)&v61 = v58 - 0x2000000000000;
          if (v58 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            if (v61 <= 0.0)
            {
              v59 = v61 < 0.0;
              goto LABEL_97;
            }
          }
          else
          {
            if ((v58 & 0xFFFE000000000002) != 0)
            {
              v59 = v58 == 7;
              goto LABEL_97;
            }
            v71 = *(unsigned __int8 *)(v58 + 5);
            if (v71 == 3)
            {
              v74 = *(_DWORD *)(v58 + 8);
LABEL_142:
              v70 = v74 == 0;
              goto LABEL_146;
            }
            if (v71 == 2)
            {
              v72 = *(_QWORD *)(v58 + 8);
              if ((v72 & 1) != 0)
                v73 = (int *)(v58 + 16);
              else
                v73 = (int *)(v72 + 4);
              v74 = *v73;
              goto LABEL_142;
            }
            if ((*(_BYTE *)(16 * (*(_DWORD *)v58 & 0xFFFFFFFE) + 0xA) & 1) != 0)
            {
              v70 = *(_QWORD *)(16 * (*(_DWORD *)v58 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_146:
              v59 = !v70;
LABEL_97:
              if (*((_DWORD *)v60 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v60))
                goto LABEL_100;
LABEL_98:
              v79 = 0;
              v80 = 0;
              v82 = v28;
              v83 = __PAIR64__(v29, v51);
              LOBYTE(v84) = v59;
              WebCore::ContactsManager::select(v76, (uint64_t)&v82, (char *)&v84, (uint64_t *)&v78);
              v63 = v82;
              if (v82)
              {
                v82 = 0;
                LODWORD(v83) = 0;
                WTF::fastFree(v63, v62);
              }
              goto LABEL_100;
            }
          }
          v59 = 1;
          goto LABEL_97;
        }
        v81 = 1;
        if (v28)
        {
          v82 = 0;
          LODWORD(v83) = 0;
          WTF::fastFree(v28, v69);
        }
        v38 = 1;
        v13 = v77;
LABEL_101:
        ((void (*)(WTF **, WTF::StringImpl **))off_1E3250210[v38])(&v82, &v79);
        v14 = v78;
        v78 = 0;
        if (!v14)
          goto LABEL_104;
        goto LABEL_102;
      }
      v28 = 0;
      v29 = 0;
      while (1)
      {
        v42 = JSC::iteratorStep();
        if (*(_QWORD *)(v24 + 16))
          v43 = 1;
        else
          v43 = v42 == 6;
        if (v43)
          goto LABEL_80;
        v75 = v41;
        v44 = v39;
        v45 = JSC::iteratorValue();
        if (*(_DWORD *)(v24 + 80))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) != 0)
            goto LABEL_80;
        }
        v79 = (WTF::StringImpl *)*((_QWORD *)this + 7);
        v46 = v79;
        v47 = WebCore::parseEnumeration<WebCore::ContactProperty>(this, v45);
        if (!*((_DWORD *)v46 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) == 0)
        {
          if (v47 > 0xFFu)
          {
            LOBYTE(v79) = v47;
            if (v29 == (_DWORD)v83)
            {
              v48 = WTF::Vector<WebCore::VideoFacingMode,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)&v82, (WTF *)(v29 + 1), (unint64_t)&v79);
              v29 = HIDWORD(v83);
              v28 = v82;
              *((_BYTE *)v82 + HIDWORD(v83)) = *v48;
            }
            else
            {
              *((_BYTE *)v28 + v29) = v47;
            }
            v39 = v44;
            v41 = v75;
            HIDWORD(v83) = ++v29;
            goto LABEL_67;
          }
          JSC::throwTypeError();
        }
        v39 = v44;
        v41 = v75;
LABEL_67:
        if (*(_QWORD *)(v24 + 16))
        {
LABEL_79:
          JSC::iteratorClose();
          goto LABEL_80;
        }
      }
    }
    v68.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException((JSC::VM *)v24, this, v68);
  }
  v78 = 0;
LABEL_102:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_104:
  v64 = *(_QWORD *)(v10 + 16);
  if (v64)
  {
    if (*(_QWORD *)(v10 + 24) != v64)
    {
      v66 = *(objc_class **)(v64 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v79);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v79, v66, 0);
      v67 = v79;
      v79 = 0;
      if (v67)
      {
        if (*((_DWORD *)v67 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v67 + 16))(v67);
        else
          --*((_DWORD *)v67 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore15ContactPropertyELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WTF **_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16ConvolverOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, _QWORD *a2)
{
  WTF **result;

  result = (WTF **)a2[3];
  a2[3] = 0;
  if (result)
    return WTF::RefCounted<WebCore::AudioBuffer>::deref(result, a2);
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21CookieChangeEventInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  WTF *v4;
  unsigned int v5;
  WTF *result;

  v3 = *(_DWORD *)(a2 + 36);
  if (v3)
    WTF::VectorDestructor<true,WebCore::CookieListItem>::destruct(*(WTF::StringImpl **)(a2 + 24), (WTF::StringImpl *)(*(_QWORD *)(a2 + 24) + 56 * v3));
  v4 = *(WTF **)(a2 + 24);
  if (v4)
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_DWORD *)(a2 + 32) = 0;
    WTF::fastFree(v4, (void *)a2);
  }
  v5 = *(_DWORD *)(a2 + 20);
  if (v5)
    WTF::VectorDestructor<true,WebCore::CookieListItem>::destruct(*(WTF::StringImpl **)(a2 + 8), (WTF::StringImpl *)(*(_QWORD *)(a2 + 8) + 56 * v5));
  result = *(WTF **)(a2 + 8);
  if (result)
  {
    *(_QWORD *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 16) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore14CookieListItemELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  WTF *result;

  v3 = *(_DWORD *)(a2 + 12);
  if (v3)
    WTF::VectorDestructor<true,WebCore::CookieListItem>::destruct(*(WTF::StringImpl **)a2, (WTF::StringImpl *)(*(_QWORD *)a2 + 56 * v3));
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

unint64_t WebCore::jsCookieStorePrototypeFunction_get(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::DOMGuardedObject *v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  objc_class *v33;
  WTF::StringImpl *v34;
  WebCore::DOMGuardedObject *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496B488);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v35 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSCookieStore::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSCookieStore::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_51:
    WebCore::rejectPromiseWithThisTypeError(v15, (WebCore::DeferredPromise *)"CookieStore", "get", v16);
  }
  else if (*((_DWORD *)a2 + 8) == 1
         || (v23 = *((_QWORD *)a2 + 6), v23 == 10)
         || (v23 & 0xFFFFFFFFFFFFFFF7) == 2
         || (v23 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v23 + 5) >= 0x17u)
  {
    WebCore::jsCookieStorePrototypeFunction_get2Body(this, (uint64_t)a2, *(_QWORD *)(v17 + 24), (uint64_t *)&v35);
  }
  else
  {
    v27 = *(_QWORD *)(v17 + 24);
    WebCore::valueToUSVString(this, v23, (uint64_t)&v36);
    v28 = v37;
    if (!v37)
    {
      v29 = v36;
      v36 = 0;
      v38 = v29;
      v39 = 0;
      WebCore::CookieStore::get(v27, (WTF::StringImpl *)&v38, (uint64_t *)&v35);
      v31 = v39;
      v39 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v30);
        else
          *(_DWORD *)v31 -= 2;
      }
      v32 = v38;
      v38 = 0;
      if (v32)
      {
        if (*(_DWORD *)v32 == 2)
          WTF::StringImpl::destroy(v32, v30);
        else
          *(_DWORD *)v32 -= 2;
      }
      v28 = v37;
    }
    if (v28 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v28])(&v38, &v36);
  }
  v24 = v35;
  v35 = 0;
  if (v24)
  {
    if (*((_DWORD *)v24 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v24 + 16))(v24);
    else
      --*((_DWORD *)v24 + 4);
  }
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v33 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v38);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v38, v33, 0);
      v34 = v38;
      v38 = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCookieStorePrototypeFunction_getAll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::DOMGuardedObject *v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  objc_class *v33;
  WTF::StringImpl *v34;
  WebCore::DOMGuardedObject *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496B7B0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v35 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSCookieStore::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSCookieStore::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_51:
    WebCore::rejectPromiseWithThisTypeError(v15, (WebCore::DeferredPromise *)"CookieStore", "getAll", v16);
  }
  else if (*((_DWORD *)a2 + 8) == 1
         || (v23 = *((_QWORD *)a2 + 6), v23 == 10)
         || (v23 & 0xFFFFFFFFFFFFFFF7) == 2
         || (v23 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v23 + 5) >= 0x17u)
  {
    WebCore::jsCookieStorePrototypeFunction_getAll2Body(this, (uint64_t)a2, *(_QWORD *)(v17 + 24), (uint64_t *)&v35);
  }
  else
  {
    v27 = *(_QWORD *)(v17 + 24);
    WebCore::valueToUSVString(this, v23, (uint64_t)&v36);
    v28 = v37;
    if (!v37)
    {
      v29 = v36;
      v36 = 0;
      v38 = v29;
      v39 = 0;
      WebCore::CookieStore::getAll(v27, (WTF::StringImpl *)&v38, (uint64_t *)&v35);
      v31 = v39;
      v39 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v30);
        else
          *(_DWORD *)v31 -= 2;
      }
      v32 = v38;
      v38 = 0;
      if (v32)
      {
        if (*(_DWORD *)v32 == 2)
          WTF::StringImpl::destroy(v32, v30);
        else
          *(_DWORD *)v32 -= 2;
      }
      v28 = v37;
    }
    if (v28 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v28])(&v38, &v36);
  }
  v24 = v35;
  v35 = 0;
  if (v24)
  {
    if (*((_DWORD *)v24 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v24 + 16))(v24);
    else
      --*((_DWORD *)v24 + 4);
  }
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v33 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v38);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v38, v33, 0);
      v34 = v38;
      v38 = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCookieStorePrototypeFunction_set(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  unint64_t v25;
  JSC::JSCell *v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  JSValue v30;
  uint64_t v31;
  int v32;
  int v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  uint64_t Object;
  JSC::Structure *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  unint64_t v43;
  char v44;
  double v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  int v52;
  int v53;
  __int128 v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  uint64_t v60;
  int v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  uint64_t v65;
  WTF::StringImpl *v66;
  int v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  unint64_t v70;
  unsigned __int16 v71;
  JSC::VM *v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  uint64_t v75;
  uint64_t v76;
  objc_class *v77;
  _DWORD *v78;
  WTF::StringImpl *v79;
  double v80;
  WebCore *v81;
  JSC::JSGlobalObject *v82;
  JSC::CallFrame *v83;
  char v84;
  uint64_t v85;
  uint64_t v86[2];
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;
  int v91;
  WTF::StringImpl *v92[2];
  __int128 v93;
  __int128 v94;
  char v95;
  uint64_t v96;
  int v97;
  WTF::StringImpl *v98;
  int v99;
  WTF::StringImpl *v100;
  int v101;
  _BYTE v102[7];
  JSC::VM *v103;
  char v104[17];

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496C2D4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v86[0] = (uint64_t)v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_168;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSCookieStore::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSCookieStore::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_168:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CookieStore", "set", v17);
    v86[0] = 0;
LABEL_104:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_106;
  }
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  v86[1] = (uint64_t)v24;
  v25 = *((int *)a2 + 8) - 1;
  if (v25 >= 2)
    v25 = 2;
  if (!v25)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v30);
    goto LABEL_103;
  }
  if (v25 == 2)
  {
    v31 = *(_QWORD *)(v18 + 24);
    WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v87);
    v32 = DWORD2(v87);
    if (!DWORD2(v87))
    {
      WebCore::valueToUSVString(this, *((_QWORD *)a2 + 7), (uint64_t)v92);
      v33 = (int)v92[1];
      if (!LODWORD(v92[1]))
      {
        if (DWORD2(v87))
        {
          v81 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
          return WebCore::jsCookieStorePrototypeFunction_delete(v81, v82, v83);
        }
        v34 = (WTF::StringImpl *)v87;
        *(_QWORD *)&v87 = 0;
        v100 = v34;
        v35 = v92[0];
        v92[0] = 0;
        v98 = v35;
        WebCore::CookieStore::set(v31, &v100, &v98, v86);
        if (v98)
        {
          if (*(_DWORD *)v98 == 2)
            WTF::StringImpl::destroy(v98, v36);
          else
            *(_DWORD *)v98 -= 2;
        }
        if (v100)
        {
          if (*(_DWORD *)v100 == 2)
            WTF::StringImpl::destroy(v100, v36);
          else
            *(_DWORD *)v100 -= 2;
        }
        v33 = (int)v92[1];
      }
      if (v33 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v33])(&v100, v92);
      v32 = DWORD2(v87);
    }
    if (v32 != -1)
      ((void (*)(WTF::StringImpl **, __int128 *))off_1E324FDC0[v32])(v92, &v87);
    goto LABEL_103;
  }
  v26 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v27 = *(_QWORD *)(v18 + 24);
  v103 = v24;
  if (((unint64_t)v26 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v28 = 0;
    v29 = (WTF::StringImpl *)v87;
    v92[0] = 0;
    LODWORD(v92[1]) = 0;
LABEL_75:
    WebCore::throwRequiredMemberTypeError((int)this, (int)&v103, "name", 5, "CookieInit", 11, "USVString", 10);
    v51 = 0;
    v91 = 1;
LABEL_76:
    v52 = (int)v92[1];
    goto LABEL_77;
  }
  v85 = v27;
  if (((unint64_t)v26 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v26)) == 0)
  {
    JSC::throwTypeError();
    v53 = 1;
    v91 = 1;
    goto LABEL_102;
  }
  v38 = (JSC::Structure *)Object;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v29 = (WTF::StringImpl *)v87;
  WTF::AtomStringImpl::addLiteral();
  v40 = JSC::JSObject::get(v38, this, v87);
  if ((_QWORD)v87)
  {
    if (*(_DWORD *)v87 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v87, v39);
    else
      *(_DWORD *)v87 -= 2;
  }
  if (*((_DWORD *)v103 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v103))
  {
    v28 = 0;
    v51 = 0;
    v91 = 1;
    v27 = v85;
    if (!v29)
      goto LABEL_82;
    goto LABEL_80;
  }
  if (v40 == 10 || (v40 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v28 = 0;
    v92[0] = 0;
    LODWORD(v92[1]) = 0;
    goto LABEL_57;
  }
  WebCore::valueToUSVString(this, v40, (uint64_t)&v87);
  LOBYTE(v92[0]) = 0;
  LODWORD(v92[1]) = -1;
  v52 = DWORD2(v87);
  if (DWORD2(v87) == -1)
  {
    v52 = -1;
  }
  else
  {
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **, __int128 *))off_1E3250AA8[DWORD2(v87)])(&v100, v92, &v87);
    LODWORD(v92[1]) = v52;
    if (DWORD2(v87) != -1)
    {
      ((void (*)(WTF::StringImpl **, __int128 *))off_1E324FDC0[DWORD2(v87)])(&v100, &v87);
      v52 = (int)v92[1];
    }
    if (!v52)
    {
      v28 = v92[0];
      v92[0] = 0;
LABEL_57:
      WTF::AtomStringImpl::addLiteral();
      v41 = (WTF::StringImpl *)v87;
      v43 = JSC::JSObject::get(v38, this, v87);
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v42);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (*((_DWORD *)v103 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v103))
        goto LABEL_200;
      if ((v43 | 8) == 0xA)
      {
        v44 = 0;
        v45 = 0.0;
        goto LABEL_69;
      }
      *(_QWORD *)&v87 = v43;
      v46 = (WTF::StringImpl *)*((_QWORD *)this + 7);
      v100 = v46;
      if (v43 >= 0xFFFE000000000000)
      {
        v45 = (double)(int)v43;
      }
      else if (v43 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v79 = v46;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v87, this);
        v46 = v79;
        v45 = v80;
      }
      else
      {
        *(_QWORD *)&v45 = v43 - 0x2000000000000;
      }
      if (!*((_DWORD *)v46 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) == 0)
      {
        if ((*(_QWORD *)&v45 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
        {
          v44 = 1;
LABEL_69:
          WTF::AtomStringImpl::addLiteral();
          v47 = (WTF::StringImpl *)v87;
          v49 = JSC::JSObject::get(v38, this, v87);
          if (v47)
          {
            if (*(_DWORD *)v47 == 2)
              WTF::StringImpl::destroy(v47, v48);
            else
              *(_DWORD *)v47 -= 2;
          }
          if (*((_DWORD *)v103 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v103))
            goto LABEL_200;
          if (v49 == 10)
          {
            v27 = v85;
            goto LABEL_75;
          }
          v84 = v44;
          WebCore::valueToUSVString(this, v49, (uint64_t)&v100);
          v62 = v101;
          if (v101)
          {
            v51 = 0;
            v91 = 1;
            v27 = v85;
LABEL_143:
            if (v62 != -1)
              ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v62])(&v98, &v100);
            goto LABEL_76;
          }
          v51 = v100;
          v100 = 0;
          WTF::AtomStringImpl::addLiteral();
          v63 = (WTF::StringImpl *)v87;
          v65 = JSC::JSObject::get(v38, this, v87);
          if (v63)
          {
            if (*(_DWORD *)v63 == 2)
              WTF::StringImpl::destroy(v63, v64);
            else
              *(_DWORD *)v63 -= 2;
          }
          if (*((_DWORD *)v103 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v103))
          {
            v91 = 1;
            v27 = v85;
LABEL_142:
            v62 = v101;
            goto LABEL_143;
          }
          if (v65 == 10)
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v66 = (WTF::StringImpl *)v87;
            v99 = 0;
          }
          else
          {
            WebCore::valueToUSVString(this, v65, (uint64_t)&v98);
            v67 = v99;
            if (v99)
            {
              v91 = 1;
              v27 = v85;
LABEL_140:
              if (v67 != -1)
                ((void (*)(uint64_t *, WTF::StringImpl **))off_1E324FDC0[v67])(&v96, &v98);
              goto LABEL_142;
            }
            v66 = v98;
          }
          v98 = 0;
          if (v29)
          {
            if (*(_DWORD *)v29 == 2)
              WTF::StringImpl::destroy(v29, v50);
            else
              *(_DWORD *)v29 -= 2;
          }
          WTF::AtomStringImpl::addLiteral();
          v68 = (WTF::StringImpl *)v87;
          v70 = JSC::JSObject::get(v38, this, v87);
          if (v68)
          {
            if (*(_DWORD *)v68 == 2)
              WTF::StringImpl::destroy(v68, v69);
            else
              *(_DWORD *)v68 -= 2;
          }
          if (*((_DWORD *)v103 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v103))
            goto LABEL_135;
          if (v70 == 10)
          {
            LOBYTE(v71) = 0;
          }
          else
          {
            *(_QWORD *)&v87 = *((_QWORD *)this + 7);
            v72 = (JSC::VM *)v87;
            v71 = WebCore::parseEnumeration<WebCore::CookieSameSite>(this, v70);
            if (*((_DWORD *)v72 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v72) & 1) != 0)
              goto LABEL_135;
            if (v71 <= 0xFFu)
            {
              JSC::throwTypeError();
              goto LABEL_135;
            }
          }
          WTF::AtomStringImpl::addLiteral();
          v73 = (WTF::StringImpl *)v87;
          v75 = JSC::JSObject::get(v38, this, v87);
          if (v73)
          {
            if (*(_DWORD *)v73 == 2)
              WTF::StringImpl::destroy(v73, v74);
            else
              *(_DWORD *)v73 -= 2;
          }
          if (!*((_DWORD *)v103 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v103))
          {
            if (v75 != 10)
            {
              WebCore::valueToUSVString(this, v75, (uint64_t)&v96);
              if (v97)
              {
                v91 = 1;
                v27 = v85;
                if (v97 == -1)
                  goto LABEL_139;
              }
              else
              {
                v76 = v96;
                v96 = 0;
                *(_QWORD *)&v87 = v51;
                *((_QWORD *)&v87 + 1) = v76;
                *(double *)&v88 = v45;
                BYTE8(v88) = v84;
                *(_DWORD *)((char *)&v88 + 9) = *(_DWORD *)v102;
                HIDWORD(v88) = *(_DWORD *)&v102[3];
                *(_QWORD *)&v89 = v28;
                *((_QWORD *)&v89 + 1) = v66;
                v90 = v71;
                v91 = 0;
                v51 = 0;
                v66 = 0;
                v28 = 0;
                v27 = v85;
              }
              ((void (*)(char *, uint64_t *))off_1E324FDC0[v97])(v104, &v96);
LABEL_139:
              v67 = v99;
              v29 = v66;
              goto LABEL_140;
            }
            WebCore::throwRequiredMemberTypeError((int)this, (int)&v103, "value", 6, "CookieInit", 11, "USVString", 10);
          }
LABEL_135:
          v91 = 1;
          v27 = v85;
          goto LABEL_139;
        }
        JSC::throwTypeError();
      }
LABEL_200:
      v51 = 0;
      v91 = 1;
      v27 = v85;
      goto LABEL_76;
    }
  }
  v28 = 0;
  v51 = 0;
  v91 = 1;
  v27 = v85;
LABEL_77:
  if (v52 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v52])(&v100, v92);
  if (v29)
  {
LABEL_80:
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v50);
    else
      *(_DWORD *)v29 -= 2;
  }
LABEL_82:
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
    {
      WTF::StringImpl::destroy(v28, v50);
      if (!v51)
        goto LABEL_88;
      goto LABEL_86;
    }
    *(_DWORD *)v28 -= 2;
  }
  if (!v51)
    goto LABEL_88;
LABEL_86:
  if (*(_DWORD *)v51 == 2)
    WTF::StringImpl::destroy(v51, v50);
  else
    *(_DWORD *)v51 -= 2;
LABEL_88:
  v53 = v91;
  if (!v91)
  {
    *(_OWORD *)v92 = v87;
    v93 = v88;
    v54 = v89;
    v87 = 0u;
    v89 = 0u;
    v94 = v54;
    v95 = v90;
    WebCore::CookieStore::set(v27, (uint64_t)v92, v86);
    v56 = (WTF::StringImpl *)*((_QWORD *)&v94 + 1);
    *((_QWORD *)&v94 + 1) = 0;
    if (v56)
    {
      if (*(_DWORD *)v56 == 2)
        WTF::StringImpl::destroy(v56, v55);
      else
        *(_DWORD *)v56 -= 2;
    }
    v57 = (WTF::StringImpl *)v94;
    *(_QWORD *)&v94 = 0;
    if (v57)
    {
      if (*(_DWORD *)v57 == 2)
        WTF::StringImpl::destroy(v57, v55);
      else
        *(_DWORD *)v57 -= 2;
    }
    v58 = v92[1];
    v92[1] = 0;
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v55);
      else
        *(_DWORD *)v58 -= 2;
    }
    v59 = v92[0];
    v92[0] = 0;
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v55);
      else
        *(_DWORD *)v59 -= 2;
    }
    v53 = 0;
    goto LABEL_102;
  }
  if (v91 != -1)
LABEL_102:
    ((void (*)(WTF::StringImpl **, __int128 *))off_1E32504A0[v53])(v92, &v87);
LABEL_103:
  v14 = (WebCore::DOMGuardedObject *)v86[0];
  v86[0] = 0;
  if (v14)
    goto LABEL_104;
LABEL_106:
  v60 = *(_QWORD *)(v10 + 16);
  if (v60)
  {
    if (*(_QWORD *)(v10 + 24) != v60)
    {
      v77 = *(objc_class **)(v60 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, (WebCore::DOMGuardedObject **)&v87);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>(v87, v77, 0);
      v78 = (_DWORD *)v87;
      *(_QWORD *)&v87 = 0;
      if (v78)
      {
        if (v78[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v78 + 16))(v78);
        else
          --v78[4];
      }
    }
  }
  if (*(_DWORD *)(v10 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      return 10;
  }
  return v13;
}

unint64_t WebCore::jsCookieStorePrototypeFunction_delete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  JSValue v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WebCore::DOMGuardedObject *v31;
  uint64_t v32;
  objc_class *v34;
  WebCore::DOMGuardedObject *v35;
  WebCore::DOMGuardedObject *v36;
  WebCore::DOMGuardedObject *v37;
  int v38;
  WTF::StringImpl *v39;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496C724);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v36 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_46;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSCookieStore::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSCookieStore::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_46:
    WebCore::rejectPromiseWithThisTypeError(v15, (WebCore::DeferredPromise *)"CookieStore", "delete", v17);
  }
  else if (*((_DWORD *)a2 + 8) == 1)
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v25);
  }
  else
  {
    v26 = *((_QWORD *)a2 + 6);
    if ((v26 & 0xFFFFFFFFFFFFFFF7) != 2
      && ((v26 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v26 + 5) < 0x17u))
    {
      v27 = *(_QWORD *)(v18 + 24);
      WebCore::valueToUSVString(this, v26, (uint64_t)&v37);
      v28 = v38;
      if (!v38)
      {
        v29 = v37;
        v37 = 0;
        v39 = v29;
        WebCore::CookieStore::remove(v27, &v39, (uint64_t *)&v36);
        if (v39)
        {
          if (*(_DWORD *)v39 == 2)
            WTF::StringImpl::destroy(v39, v30);
          else
            *(_DWORD *)v39 -= 2;
        }
        v28 = v38;
      }
      if (v28 != -1)
        ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E324FDC0[v28])(&v39, &v37);
    }
    else
    {
      WebCore::jsCookieStorePrototypeFunction_delete2Body(this, (JSC::JSCell *)v26, *(_QWORD *)(v18 + 24), (uint64_t *)&v36);
    }
  }
  v31 = v36;
  v36 = 0;
  if (v31)
  {
    if (*((_DWORD *)v31 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v31 + 16))(v31);
    else
      --*((_DWORD *)v31 + 4);
  }
  v32 = *(_QWORD *)(v10 + 16);
  if (v32)
  {
    if (*(_QWORD *)(v10 + 24) != v32)
    {
      v34 = *(objc_class **)(v32 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v37);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v37, v34, 0);
      v35 = v37;
      v37 = 0;
      if (v35)
      {
        if (*((_DWORD *)v35 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v35 + 16))(v35);
        else
          --*((_DWORD *)v35 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsCookieStorePrototypeFunction_get2Body(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  __int128 v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  __int128 v13;
  unsigned int v14;
  WTF::StringImpl *v15[2];

  if (*(_DWORD *)(a2 + 32) == 1)
    v6 = 10;
  else
    v6 = *(_QWORD *)(a2 + 48);
  result = WebCore::convertDictionary<WebCore::CookieStoreGetOptions>((uint64_t)&v13, a1, (JSC::JSCell *)v6);
  v8 = v14;
  if (!v14)
  {
    v9 = v13;
    v13 = 0uLL;
    *(_OWORD *)v15 = v9;
    WebCore::CookieStore::get(a3, (WTF::StringImpl *)v15, a4);
    v11 = v15[1];
    v15[1] = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v12 = v15[0];
    v15[0] = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v10);
      else
        *(_DWORD *)v12 -= 2;
    }
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E3250490[v8])(v15, &v13);
  }
  if (v14 != -1)
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E3250490[v8])(v15, &v13);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21CookieStoreGetOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsCookieStorePrototypeFunction_getAll2Body(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  __int128 v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  __int128 v13;
  unsigned int v14;
  WTF::StringImpl *v15[2];

  if (*(_DWORD *)(a2 + 32) == 1)
    v6 = 10;
  else
    v6 = *(_QWORD *)(a2 + 48);
  result = WebCore::convertDictionary<WebCore::CookieStoreGetOptions>((uint64_t)&v13, a1, (JSC::JSCell *)v6);
  v8 = v14;
  if (!v14)
  {
    v9 = v13;
    v13 = 0uLL;
    *(_OWORD *)v15 = v9;
    WebCore::CookieStore::getAll(a3, (WTF::StringImpl *)v15, a4);
    v11 = v15[1];
    v15[1] = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v12 = v15[0];
    v15[0] = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v10);
      else
        *(_DWORD *)v12 -= 2;
    }
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E3250490[v8])(v15, &v13);
  }
  if (v14 != -1)
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E3250490[v8])(v15, &v13);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore10CookieInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 5);
  *((_QWORD *)a2 + 5) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 4);
  *((_QWORD *)a2 + 4) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsCookieStorePrototypeFunction_delete2Body(JSC::JSGlobalObject *a1, JSC::JSCell *this, uint64_t a3, uint64_t *a4)
{
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t Object;
  JSC::Structure *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t result;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  int v19;
  uint64_t v20;
  __int128 v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  int v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  int v31;
  WTF::StringImpl *v32;
  int v33;
  __int128 v34;
  WTF::StringImpl *v35;
  unsigned int v36;
  WTF::StringImpl *v37[2];
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  int v40;
  WTF::StringImpl *v41;
  int v42;
  JSC::VM *v43;
  char v44;

  v43 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v7 = 0;
    v8 = (WTF::StringImpl *)v34;
    v37[0] = 0;
    LODWORD(v37[1]) = 0;
    goto LABEL_17;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    v36 = 1;
    goto LABEL_31;
  }
  v10 = (JSC::Structure *)Object;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = (WTF::StringImpl *)v34;
  WTF::AtomStringImpl::addLiteral();
  v12 = JSC::JSObject::get(v10, a1, v34);
  if ((_QWORD)v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v34, v11);
    else
      *(_DWORD *)v34 -= 2;
  }
  if (*((_DWORD *)v43 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v43);
    if ((_DWORD)result)
    {
      v7 = 0;
      v18 = 0;
      v36 = 1;
      if (!v8)
        goto LABEL_25;
      goto LABEL_23;
    }
  }
  if (v12 == 10 || (v12 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v7 = 0;
    v37[0] = 0;
    LODWORD(v37[1]) = 0;
    goto LABEL_12;
  }
  result = WebCore::valueToUSVString(a1, v12, (uint64_t)&v34);
  LOBYTE(v37[0]) = 0;
  LODWORD(v37[1]) = -1;
  v19 = DWORD2(v34);
  if (DWORD2(v34) == -1)
  {
    v19 = -1;
  }
  else
  {
    result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **, __int128 *))off_1E3250AA8[DWORD2(v34)])(&v41, v37, &v34);
    LODWORD(v37[1]) = v19;
    if (DWORD2(v34) != -1)
    {
      result = ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E324FDC0[DWORD2(v34)])(&v41, &v34);
      v19 = (int)v37[1];
    }
    if (!v19)
    {
      v7 = v37[0];
      v37[0] = 0;
LABEL_12:
      WTF::AtomStringImpl::addLiteral();
      v13 = (WTF::StringImpl *)v34;
      v15 = JSC::JSObject::get(v10, a1, v34);
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v14);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (*((_DWORD *)v43 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v43);
        if ((_DWORD)result)
          goto LABEL_18;
      }
      if (v15 == 10)
      {
LABEL_17:
        result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a1, (int)&v43, "name", 5, "CookieStoreDeleteOptions", 25, "USVString", 10);
LABEL_18:
        v18 = 0;
        v36 = 1;
LABEL_19:
        v19 = (int)v37[1];
        goto LABEL_20;
      }
      result = WebCore::valueToUSVString(a1, v15, (uint64_t)&v41);
      v27 = v42;
      if (v42)
      {
        v18 = 0;
        v36 = 1;
LABEL_58:
        if (v27 != -1)
          result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v27])(&v39, &v41);
        goto LABEL_19;
      }
      v18 = v41;
      v41 = 0;
      WTF::AtomStringImpl::addLiteral();
      v28 = (WTF::StringImpl *)v34;
      v30 = JSC::JSObject::get(v10, a1, v34);
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v29);
        else
          *(_DWORD *)v28 -= 2;
      }
      if (*((_DWORD *)v43 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v43);
        if ((_DWORD)result)
        {
          v36 = 1;
LABEL_57:
          v27 = v42;
          goto LABEL_58;
        }
      }
      if (v30 == 10)
      {
        result = WTF::StringImpl::createWithoutCopyingNonEmpty();
        v40 = 0;
      }
      else
      {
        result = WebCore::valueToUSVString(a1, v30, (uint64_t)&v39);
        v31 = v40;
        if (v40)
        {
          v33 = 1;
          goto LABEL_55;
        }
      }
      v32 = v39;
      v39 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
        {
          result = WTF::StringImpl::destroy(v8, v17);
          v31 = v40;
        }
        else
        {
          v31 = 0;
          *(_DWORD *)v8 -= 2;
        }
      }
      else
      {
        v31 = 0;
      }
      v33 = 0;
      v8 = 0;
      *(_QWORD *)&v34 = v18;
      *((_QWORD *)&v34 + 1) = v7;
      v35 = v32;
      v7 = 0;
      v18 = 0;
LABEL_55:
      v36 = v33;
      if (v31 != -1)
        result = ((uint64_t (*)(char *, WTF::StringImpl **))off_1E324FDC0[v31])(&v44, &v39);
      goto LABEL_57;
    }
  }
  v7 = 0;
  v18 = 0;
  v36 = 1;
LABEL_20:
  if (v19 != -1)
    result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v19])(&v41, v37);
  if (v8)
  {
LABEL_23:
    if (*(_DWORD *)v8 == 2)
      result = WTF::StringImpl::destroy(v8, v17);
    else
      *(_DWORD *)v8 -= 2;
  }
LABEL_25:
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
    {
      result = WTF::StringImpl::destroy(v7, v17);
      if (!v18)
        goto LABEL_31;
      goto LABEL_29;
    }
    *(_DWORD *)v7 -= 2;
  }
  if (!v18)
    goto LABEL_31;
LABEL_29:
  if (*(_DWORD *)v18 == 2)
    result = WTF::StringImpl::destroy(v18, v17);
  else
    *(_DWORD *)v18 -= 2;
LABEL_31:
  v20 = v36;
  if (!v36)
  {
    v21 = v34;
    v34 = 0uLL;
    *(_OWORD *)v37 = v21;
    v22 = v35;
    v35 = 0;
    v38 = v22;
    WebCore::CookieStore::remove(a3, (uint64_t)v37, a4);
    v24 = v38;
    v38 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v23);
      else
        *(_DWORD *)v24 -= 2;
    }
    v25 = v37[1];
    v37[1] = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v23);
      else
        *(_DWORD *)v25 -= 2;
    }
    v26 = v37[0];
    v37[0] = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v23);
      else
        *(_DWORD *)v26 -= 2;
    }
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E32504B0[v20])(v37, &v34);
  }
  if (v36 != -1)
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E32504B0[v20])(v37, &v34);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24CookieStoreDeleteOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsCookieStoreManagerPrototypeFunction_subscribe(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;
  uint64_t v26;
  int v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  WTF::StringImpl **v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  JSValue v40;
  objc_class *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  uint64_t v44;
  int v45;
  WTF::StringImpl *v46;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496D3ECLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_60;
  v19 = 16 * (*(_DWORD *)v18 & 0xFFFFFFFE);
  v20 = *(unsigned int *)(v19 + 76);
  v21 = *(_DWORD *)(v19 + 76) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSCookieStoreManager::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSCookieStoreManager::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_60:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CookieStoreManager", "subscribe", v17);
  }
  else
  {
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v26 = *((_QWORD *)a2 + 6);
      v46 = (WTF::StringImpl *)*((_QWORD *)this + 7);
      if ((v26 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v26 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v37 = v43;
        v43 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v36);
          else
            *(_DWORD *)v37 -= 2;
        }
        v27 = 1;
        v45 = 1;
LABEL_53:
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3250560[v27])(&v46, &v43);
        goto LABEL_54;
      }
      WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieStoreGetOptions>>>::convert((uint64_t)&v43, this, v26);
      v27 = v45;
      if (v45)
      {
LABEL_52:
        if (v27 == -1)
          goto LABEL_54;
        goto LABEL_53;
      }
      v28 = v43;
      v29 = HIDWORD(v44);
      v43 = 0;
      v44 = 0;
      v46 = 0;
      WebCore::DeferredPromise::reject((uint64_t)v14, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v46, 0);
      v31 = v46;
      v46 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
        {
          WTF::StringImpl::destroy(v31, v30);
          if ((_DWORD)v29)
          {
LABEL_33:
            v32 = 16 * v29;
            v33 = (WTF::StringImpl **)((char *)v28 + 8);
            do
            {
              v34 = *v33;
              *v33 = 0;
              if (v34)
              {
                if (*(_DWORD *)v34 == 2)
                  WTF::StringImpl::destroy(v34, v30);
                else
                  *(_DWORD *)v34 -= 2;
              }
              v35 = *(v33 - 1);
              *(v33 - 1) = 0;
              if (v35)
              {
                if (*(_DWORD *)v35 == 2)
                  WTF::StringImpl::destroy(v35, v30);
                else
                  *(_DWORD *)v35 -= 2;
              }
              v33 += 2;
              v32 -= 16;
            }
            while (v32);
          }
LABEL_50:
          if (v28)
            WTF::fastFree(v28, v30);
          goto LABEL_52;
        }
        *(_DWORD *)v31 -= 2;
      }
      if ((_DWORD)v29)
        goto LABEL_33;
      goto LABEL_50;
    }
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v25, this, v40);
  }
LABEL_54:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v38 = *(_QWORD *)(v10 + 16);
  if (v38)
  {
    if (*(_QWORD *)(v10 + 24) != v38)
    {
      v41 = *(objc_class **)(v38 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v43);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v43, v41, 0);
      v42 = v43;
      v43 = 0;
      if (v42)
      {
        if (*((_DWORD *)v42 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v42 + 16))(v42);
        else
          --*((_DWORD *)v42 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCookieStoreManagerPrototypeFunction_getSubscriptions(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  objc_class *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496D66CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_35;
  v18 = 16 * (*(_DWORD *)v17 & 0xFFFFFFFE);
  v19 = *(unsigned int *)(v18 + 76);
  v20 = *(_DWORD *)(v18 + 76) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSCookieStoreManager::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSCookieStoreManager::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_35:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CookieStoreManager", "getSubscriptions", v16);
  }
  else
  {
    v30 = 0;
    WebCore::DeferredPromise::reject((uint64_t)v14, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v30, 0);
    v25 = v30;
    v30 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v26 = *(_QWORD *)(v10 + 16);
  if (v26)
  {
    if (*(_QWORD *)(v10 + 24) != v26)
    {
      v28 = *(objc_class **)(v26 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCookieStoreManagerPrototypeFunction_unsubscribe(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;
  uint64_t v26;
  int v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  WTF::StringImpl **v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  JSValue v40;
  objc_class *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  uint64_t v44;
  int v45;
  WTF::StringImpl *v46;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496DA1CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_60;
  v19 = 16 * (*(_DWORD *)v18 & 0xFFFFFFFE);
  v20 = *(unsigned int *)(v19 + 76);
  v21 = *(_DWORD *)(v19 + 76) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSCookieStoreManager::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSCookieStoreManager::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_60:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CookieStoreManager", "unsubscribe", v17);
  }
  else
  {
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v26 = *((_QWORD *)a2 + 6);
      v46 = (WTF::StringImpl *)*((_QWORD *)this + 7);
      if ((v26 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v26 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v37 = v43;
        v43 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v36);
          else
            *(_DWORD *)v37 -= 2;
        }
        v27 = 1;
        v45 = 1;
LABEL_53:
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3250560[v27])(&v46, &v43);
        goto LABEL_54;
      }
      WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieStoreGetOptions>>>::convert((uint64_t)&v43, this, v26);
      v27 = v45;
      if (v45)
      {
LABEL_52:
        if (v27 == -1)
          goto LABEL_54;
        goto LABEL_53;
      }
      v28 = v43;
      v29 = HIDWORD(v44);
      v43 = 0;
      v44 = 0;
      v46 = 0;
      WebCore::DeferredPromise::reject((uint64_t)v14, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v46, 0);
      v31 = v46;
      v46 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
        {
          WTF::StringImpl::destroy(v31, v30);
          if ((_DWORD)v29)
          {
LABEL_33:
            v32 = 16 * v29;
            v33 = (WTF::StringImpl **)((char *)v28 + 8);
            do
            {
              v34 = *v33;
              *v33 = 0;
              if (v34)
              {
                if (*(_DWORD *)v34 == 2)
                  WTF::StringImpl::destroy(v34, v30);
                else
                  *(_DWORD *)v34 -= 2;
              }
              v35 = *(v33 - 1);
              *(v33 - 1) = 0;
              if (v35)
              {
                if (*(_DWORD *)v35 == 2)
                  WTF::StringImpl::destroy(v35, v30);
                else
                  *(_DWORD *)v35 -= 2;
              }
              v33 += 2;
              v32 -= 16;
            }
            while (v32);
          }
LABEL_50:
          if (v28)
            WTF::fastFree(v28, v30);
          goto LABEL_52;
        }
        *(_DWORD *)v31 -= 2;
      }
      if ((_DWORD)v29)
        goto LABEL_33;
      goto LABEL_50;
    }
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v25, this, v40);
  }
LABEL_54:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v38 = *(_QWORD *)(v10 + 16);
  if (v38)
  {
    if (*(_QWORD *)(v10 + 24) != v38)
    {
      v41 = *(objc_class **)(v38 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v43);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v43, v41, 0);
      v42 = v43;
      v43 = 0;
      if (v42)
      {
        if (*((_DWORD *)v42 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v42 + 16))(v42);
        else
          --*((_DWORD *)v42 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieStoreGetOptions>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  JSC::JSCell *IndexQuickly;
  JSC::JSCell *v13;
  uint64_t v14;
  unint64_t v15;
  WTF *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl **v20;
  WTF::StringImpl *v21;
  WTF *v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  v6 = *((_QWORD *)a2 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(a3 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a3 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a3, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a3, a2, (i - 1));
      if (*(_DWORD *)(v6 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        if ((result & 1) != 0)
          break;
      }
      result = WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CookieStoreGetOptions>>::convert(a2, IndexQuickly, (unsigned int *)&v22);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        v15 = i | 0xFFFE000000000000;
        if (i < 0)
          v15 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        goto LABEL_27;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a2, (JSC::JSGlobalObject *)a3, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v13 = (JSC::JSCell *)JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          if ((result & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CookieStoreGetOptions>>::convert(a2, v13, (unsigned int *)&v22);
        if (*(_QWORD *)(v6 + 16))
        {
LABEL_27:
          result = JSC::iteratorClose();
          break;
        }
      }
    }
  }
  if (!*(_DWORD *)(v6 + 80))
  {
    v16 = v22;
LABEL_30:
    *(_QWORD *)a1 = v16;
    *(_QWORD *)(a1 + 8) = v23;
    *(_DWORD *)(a1 + 16) = 0;
    return result;
  }
  result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
  v16 = v22;
  if ((result & 1) == 0)
    goto LABEL_30;
  v18 = HIDWORD(v23);
  *(_DWORD *)(a1 + 16) = 1;
  if ((_DWORD)v18)
  {
    v19 = 16 * v18;
    v20 = (WTF::StringImpl **)((char *)v16 + 8);
    do
    {
      v21 = *v20;
      *v20 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v17);
        else
          *(_DWORD *)v21 -= 2;
      }
      result = (uint64_t)*(v20 - 1);
      *(v20 - 1) = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v17);
        else
          *(_DWORD *)result -= 2;
      }
      v20 += 2;
      v19 -= 16;
    }
    while (v19);
  }
  if (v16)
    return WTF::fastFree(v16, v17);
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CookieStoreGetOptions>>::convert(JSC::JSGlobalObject *a1, JSC::JSCell *this, unsigned int *a3)
{
  uint64_t result;
  WTF::StringImpl *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17[2];
  __int128 v18;
  unsigned int v19;

  result = WebCore::convertDictionary<WebCore::CookieStoreGetOptions>((uint64_t)&v18, a1, this);
  v6 = v19;
  if (!v19)
  {
    v7 = v18;
    v18 = 0uLL;
    *(_OWORD *)v17 = v7;
    v8 = a3[3];
    if ((_DWORD)v8 == a3[2])
    {
      v9 = (uint64_t *)WTF::Vector<WebCore::CookieStoreGetOptions,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v8 + 1, (unint64_t)v17);
      v10 = a3[3];
      v11 = (_QWORD *)(*(_QWORD *)a3 + 16 * v10);
      v12 = *v9;
      *v9 = 0;
      *v11 = v12;
      v13 = v9[1];
      v9[1] = 0;
      v11[1] = v13;
      v14 = v17[1];
      a3[3] = v10 + 1;
      v17[1] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v5);
        else
          *(_DWORD *)v14 -= 2;
      }
    }
    else
    {
      v15 = *(_QWORD *)a3;
      v17[0] = 0;
      *(_OWORD *)(v15 + 16 * v8) = v7;
      a3[3] = v8 + 1;
      v17[1] = 0;
    }
    v16 = v17[0];
    v17[0] = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v5);
      else
        *(_DWORD *)v16 -= 2;
    }
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E3250490[v6])(v17, &v18);
  }
  if (v19 != -1)
    return ((uint64_t (*)(WTF::StringImpl **, __int128 *))off_1E3250490[v6])(v17, &v18);
  return result;
}

unint64_t WTF::Vector<WebCore::CookieStoreGetOptions,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 16 * (unint64_t)a1[3] <= a3)
  {
    v9 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<WebCore::CookieStoreGetOptions,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<WebCore::CookieStoreGetOptions,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

unsigned int *WTF::Vector<WebCore::CookieStoreGetOptions,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  unsigned int v2;
  unsigned int *v3;
  WTF *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  unsigned int *v7;
  unsigned int **v8;
  unsigned int **v9;
  unsigned int *v10;
  unsigned int *v11;
  WTF::StringImpl *v12;

  if (result[2] < a2)
  {
    v2 = a2;
    if (a2 >> 28)
    {
      __break(0xC471u);
    }
    else
    {
      v3 = result;
      v4 = *(WTF **)result;
      v5 = result[3];
      result = (unsigned int *)WTF::fastMalloc((WTF *)(16 * a2));
      v3[2] = v2;
      *(_QWORD *)v3 = result;
      if ((_DWORD)v5)
      {
        v7 = result;
        v8 = (unsigned int **)((char *)v4 + 16 * v5);
        v9 = (unsigned int **)v4;
        do
        {
          v10 = *v9;
          *v9 = 0;
          *(_QWORD *)v7 = v10;
          v11 = v9[1];
          v9[1] = 0;
          *((_QWORD *)v7 + 1) = v11;
          v12 = (WTF::StringImpl *)v9[1];
          v9[1] = 0;
          if (v12)
          {
            if (*(_DWORD *)v12 == 2)
              WTF::StringImpl::destroy(v12, v6);
            else
              *(_DWORD *)v12 -= 2;
          }
          result = *v9;
          *v9 = 0;
          if (result)
          {
            if (*result == 2)
              result = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v6);
            else
              *result -= 2;
          }
          v9 += 2;
          v7 += 4;
        }
        while (v9 != v8);
      }
      if (v4)
      {
        if (*(WTF **)v3 == v4)
        {
          *(_QWORD *)v3 = 0;
          v3[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v4, v6);
      }
    }
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore21CookieStoreGetOptionsELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl **v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF *result;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = 16 * v3;
    v5 = (WTF::StringImpl **)(*(_QWORD *)a2 + 8);
    do
    {
      v6 = *v5;
      *v5 = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, a2);
        else
          *(_DWORD *)v6 -= 2;
      }
      v7 = *(v5 - 1);
      *(v5 - 1) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v5 += 2;
      v4 -= 16;
    }
    while (v4);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

uint64_t WebCore::PublicKeyCredentialCreationOptions::PublicKeyCredentialCreationOptions(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v18;
  char v19;

  v4 = *a2;
  *a2 = 0;
  *(_QWORD *)a1 = v4;
  v5 = a2[1];
  a2[1] = 0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v6 = a2[2];
    a2[2] = 0;
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = 1;
  }
  v7 = a2[4];
  a2[4] = 0;
  *(_QWORD *)(a1 + 32) = v7;
  v8 = a2[5];
  a2[5] = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 56) = -1;
  v9 = *((unsigned int *)a2 + 14);
  if ((_DWORD)v9 != -1)
  {
    ((void (*)(char *))off_1E3250118[v9])(&v18);
    *(_DWORD *)(a1 + 56) = v9;
  }
  v10 = a2[8];
  a2[8] = 0;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 80) = -1;
  v11 = *((unsigned int *)a2 + 20);
  if ((_DWORD)v11 != -1)
  {
    ((void (*)(char *))off_1E3250118[v11])(&v19);
    *(_DWORD *)(a1 + 80) = v11;
  }
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  v12 = a2[11];
  a2[11] = 0;
  *(_QWORD *)(a1 + 88) = v12;
  LODWORD(v12) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = 0;
  *(_DWORD *)(a1 + 96) = v12;
  LODWORD(v12) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = 0;
  *(_DWORD *)(a1 + 100) = v12;
  v13 = a2[13];
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 104) = v13;
  v14 = a2[14];
  a2[14] = 0;
  *(_QWORD *)(a1 + 112) = v14;
  LODWORD(v14) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = 0;
  *(_DWORD *)(a1 + 120) = v14;
  LODWORD(v14) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = 0;
  *(_DWORD *)(a1 + 124) = v14;
  v15 = a2[16];
  v16 = *((_BYTE *)a2 + 136);
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 136) = v16;
  *(_QWORD *)(a1 + 128) = v15;
  *(_BYTE *)(a1 + 288) = 0;
  if (*((_BYTE *)a2 + 288))
  {
    WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs(a1 + 144, (uint64_t)(a2 + 18));
    *(_BYTE *)(a1 + 288) = 1;
  }
  return a1;
}

uint64_t WebCore::PublicKeyCredentialCreationOptions::UserEntity::operator=(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  v5 = *(WTF::StringImpl **)a1;
  *(_QWORD *)a1 = v4;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  v7 = *(WTF::StringImpl **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, a2);
    else
      *(_DWORD *)v7 -= 2;
  }
  v8 = (WTF::StringImpl *)(a1 + 16);
  v9 = *(unsigned int *)(a1 + 24);
  v10 = *((unsigned int *)a2 + 6);
  if ((_DWORD)v9 == -1)
  {
    if ((_DWORD)v10 == -1)
      goto LABEL_12;
  }
  else if ((_DWORD)v10 == -1)
  {
    ((void (*)(char *, WTF::StringImpl *))off_1E3250108[v9])(&v15, v8);
    *(_DWORD *)(a1 + 24) = -1;
    goto LABEL_12;
  }
  v14 = a1 + 16;
  ((void (*)(uint64_t *))off_1E32505E8[v10])(&v14);
LABEL_12:
  v11 = *((_QWORD *)a2 + 4);
  *((_QWORD *)a2 + 4) = 0;
  v12 = *(WTF::StringImpl **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v8);
    else
      *(_DWORD *)v12 -= 2;
  }
  return a1;
}

void std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs,false>>(WTF::StringImpl **this, _BYTE *a2)
{
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;

  if (*((unsigned __int8 *)this + 144) == a2[144])
  {
    if (*((_BYTE *)this + 144))
    {
      v4 = *(WTF::StringImpl **)a2;
      *(_QWORD *)a2 = 0;
      v5 = *this;
      *this = v4;
      if (v5)
      {
        if (*(_DWORD *)v5 == 2)
          WTF::StringImpl::destroy(v5, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v5 -= 2;
      }
      *((_BYTE *)this + 8) = a2[8];
      std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>>((uint64_t)(this + 2), (WTF::StringImpl *)(a2 + 16));
      std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>>((uint64_t)(this + 8), (uint64_t)(a2 + 64));
    }
  }
  else if (*((_BYTE *)this + 144))
  {
    WebCore::AuthenticationExtensionsClientInputs::~AuthenticationExtensionsClientInputs((WebCore::AuthenticationExtensionsClientInputs *)this);
    *((_BYTE *)this + 144) = 0;
  }
  else
  {
    WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)this, (uint64_t)a2);
    *((_BYTE *)this + 144) = 1;
  }
}

uint64_t std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>>(uint64_t result, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = result;
  if (*(unsigned __int8 *)(result + 40) == *((unsigned __int8 *)a2 + 40))
  {
    if (*(_BYTE *)(result + 40))
      return WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs::operator=(result, a2);
  }
  else if (*(_BYTE *)(result + 40))
  {
    if (*(_BYTE *)(result + 32))
    {
      v3 = *(unsigned int *)(result + 24);
      if ((_DWORD)v3 != -1)
        ((void (*)(char *, uint64_t))off_1E3250108[v3])(&v7, result + 16);
      *(_DWORD *)(v2 + 24) = -1;
    }
    result = *(_QWORD *)v2;
    *(_QWORD *)v2 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = WTF::StringImpl::destroy((WTF::StringImpl *)result, a2);
      else
        *(_DWORD *)result -= 2;
    }
    *(_BYTE *)(v2 + 40) = 0;
  }
  else
  {
    v4 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)result = v4;
    v5 = *((_WORD *)a2 + 4);
    *(_BYTE *)(result + 16) = 0;
    *(_WORD *)(result + 8) = v5;
    *(_BYTE *)(result + 32) = 0;
    if (*((_BYTE *)a2 + 32))
    {
      *(_DWORD *)(result + 24) = -1;
      v6 = *((unsigned int *)a2 + 6);
      if ((_DWORD)v6 != -1)
      {
        result = ((uint64_t (*)(char *, uint64_t, char *))off_1E3250118[v6])(&v8, result + 16, (char *)a2 + 16);
        *(_DWORD *)(v2 + 24) = v6;
      }
      *(_BYTE *)(v2 + 32) = 1;
    }
    *(_BYTE *)(v2 + 40) = 1;
  }
  return result;
}

uint64_t std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>>(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = result;
  if (*(unsigned __int8 *)(result + 72) == *(unsigned __int8 *)(a2 + 72))
  {
    if (*(_BYTE *)(result + 72))
    {
      std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::PRFValues,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::PRFValues,false>>(result, a2);
      return std::__optional_storage_base<WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::AuthenticationExtensionsClientInputs::PRFValues>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::AuthenticationExtensionsClientInputs::PRFValues>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,false>>(v3 + 48, (WTF::StringImpl *)(a2 + 48));
    }
  }
  else if (*(_BYTE *)(result + 72))
  {
    if (*(_BYTE *)(result + 64))
      result = WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::AuthenticationExtensionsClientInputs::PRFValues>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector(result + 48);
    if (*(_BYTE *)(v3 + 40))
    {
      if (*(_BYTE *)(v3 + 32))
      {
        v4 = *(unsigned int *)(v3 + 24);
        if ((_DWORD)v4 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E3250108[v4])(&v9, v3 + 16);
        *(_DWORD *)(v3 + 24) = -1;
      }
      v5 = *(unsigned int *)(v3 + 8);
      if ((_DWORD)v5 != -1)
        result = ((uint64_t (*)(char *, uint64_t))off_1E3250108[v5])(&v10, v3);
      *(_DWORD *)(v3 + 8) = -1;
    }
    *(_BYTE *)(v3 + 72) = 0;
  }
  else
  {
    *(_BYTE *)result = 0;
    *(_BYTE *)(result + 40) = 0;
    if (*(_BYTE *)(a2 + 40))
    {
      *(_DWORD *)(result + 8) = -1;
      v6 = *(unsigned int *)(a2 + 8);
      if ((_DWORD)v6 != -1)
      {
        result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E3250118[v6])(&v11, result, a2);
        *(_DWORD *)(v3 + 8) = v6;
      }
      *(_BYTE *)(v3 + 16) = 0;
      *(_BYTE *)(v3 + 32) = 0;
      if (*(_BYTE *)(a2 + 32))
      {
        *(_DWORD *)(v3 + 24) = -1;
        v7 = *(unsigned int *)(a2 + 24);
        if ((_DWORD)v7 != -1)
        {
          result = ((uint64_t (*)(char *))off_1E3250118[v7])(&v12);
          *(_DWORD *)(v3 + 24) = v7;
        }
        *(_BYTE *)(v3 + 32) = 1;
      }
      *(_BYTE *)(v3 + 40) = 1;
    }
    *(_BYTE *)(v3 + 48) = 0;
    *(_BYTE *)(v3 + 64) = 0;
    if (*(_BYTE *)(a2 + 64))
    {
      *(_QWORD *)(v3 + 48) = 0;
      *(_QWORD *)(v3 + 56) = 0;
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a2 + 48) = 0;
      *(_QWORD *)(v3 + 48) = v8;
      LODWORD(v8) = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a2 + 56) = 0;
      *(_DWORD *)(v3 + 56) = v8;
      LODWORD(v8) = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a2 + 60) = 0;
      *(_DWORD *)(v3 + 60) = v8;
      *(_BYTE *)(v3 + 64) = 1;
    }
    *(_BYTE *)(v3 + 72) = 1;
  }
  return result;
}

void WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions(WebCore::PublicKeyCredentialCreationOptions *this, void *a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  unsigned int *v6;
  WTF *v7;
  uint64_t v8;
  WTF *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  char v18;
  char v19;
  char v20;

  if (*((_BYTE *)this + 288))
    WebCore::AuthenticationExtensionsClientInputs::~AuthenticationExtensionsClientInputs((WebCore::PublicKeyCredentialCreationOptions *)((char *)this + 144));
  v3 = *((unsigned int *)this + 31);
  v4 = (WTF *)*((_QWORD *)this + 14);
  if ((_DWORD)v3)
  {
    v5 = 40 * v3;
    v6 = (unsigned int *)((char *)v4 + 16);
    do
    {
      v7 = (WTF *)*((_QWORD *)v6 + 1);
      if (v7)
      {
        *((_QWORD *)v6 + 1) = 0;
        v6[4] = 0;
        WTF::fastFree(v7, a2);
      }
      v8 = *v6;
      if ((_DWORD)v8 != -1)
        ((void (*)(char *, unsigned int *))off_1E3250108[v8])(&v18, v6 - 2);
      *v6 = -1;
      v6 += 10;
      v5 -= 40;
    }
    while (v5);
    v4 = (WTF *)*((_QWORD *)this + 14);
  }
  if (v4)
  {
    *((_QWORD *)this + 14) = 0;
    *((_DWORD *)this + 30) = 0;
    WTF::fastFree(v4, a2);
  }
  v9 = (WTF *)*((_QWORD *)this + 11);
  if (v9)
  {
    *((_QWORD *)this + 11) = 0;
    *((_DWORD *)this + 24) = 0;
    WTF::fastFree(v9, a2);
  }
  v10 = *((unsigned int *)this + 20);
  if ((_DWORD)v10 != -1)
    ((void (*)(char *, char *))off_1E3250108[v10])(&v19, (char *)this + 72);
  *((_DWORD *)this + 20) = -1;
  v11 = (WTF::StringImpl *)*((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v11 -= 2;
  }
  v12 = *((unsigned int *)this + 14);
  if ((_DWORD)v12 != -1)
    ((void (*)(char *, char *))off_1E3250108[v12])(&v20, (char *)this + 48);
  *((_DWORD *)this + 14) = -1;
  v13 = (WTF::StringImpl *)*((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = (WTF::StringImpl *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (*((_BYTE *)this + 24))
  {
    v15 = (WTF::StringImpl *)*((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, (WTF::StringImpl *)a2);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  v16 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = *(WTF::StringImpl **)this;
  *(_QWORD *)this = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v17 -= 2;
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore34PublicKeyCredentialCreationOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::PublicKeyCredentialCreationOptions *this)
{
  WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions(this, this);
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore31DigitalCredentialRequestOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t v2;
  WTF *result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v2 = *((unsigned int *)a2 + 3);
  result = *a2;
  if ((_DWORD)v2)
  {
    v4 = 16 * v2;
    v5 = (uint64_t *)((char *)result + 8);
    do
    {
      v6 = *v5;
      if (*v5)
      {
        v7 = (uint64_t *)(v6 - 16);
        v8 = *(_QWORD *)(((v6 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
        v9 = *(uint64_t **)(v6 - 8);
        if (v9)
        {
          v10 = *v7;
          *v9 = *v7;
          *(_QWORD *)(v10 + 8) = v9;
          *v7 = 0;
          v7[1] = 0;
        }
        *v7 = *(_QWORD *)(v8 + 40);
        *(_QWORD *)(v8 + 40) = v7;
        *v5 = 0;
      }
      v5 += 2;
      v4 -= 16;
    }
    while (v4);
    result = *a2;
  }
  if (result)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

void WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions(WebCore::PublicKeyCredentialRequestOptions *this, void *a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  unsigned int *v6;
  WTF *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  char v11;
  char v12;

  if (*((_BYTE *)this + 200))
    WebCore::AuthenticationExtensionsClientInputs::~AuthenticationExtensionsClientInputs((WebCore::PublicKeyCredentialRequestOptions *)((char *)this + 56));
  v3 = *((unsigned int *)this + 11);
  v4 = (WTF *)*((_QWORD *)this + 4);
  if ((_DWORD)v3)
  {
    v5 = 40 * v3;
    v6 = (unsigned int *)((char *)v4 + 16);
    do
    {
      v7 = (WTF *)*((_QWORD *)v6 + 1);
      if (v7)
      {
        *((_QWORD *)v6 + 1) = 0;
        v6[4] = 0;
        WTF::fastFree(v7, a2);
      }
      v8 = *v6;
      if ((_DWORD)v8 != -1)
        ((void (*)(char *, unsigned int *))off_1E3250108[v8])(&v11, v6 - 2);
      *v6 = -1;
      v6 += 10;
      v5 -= 40;
    }
    while (v5);
    v4 = (WTF *)*((_QWORD *)this + 4);
  }
  if (v4)
  {
    *((_QWORD *)this + 4) = 0;
    *((_DWORD *)this + 10) = 0;
    WTF::fastFree(v4, a2);
  }
  v9 = (WTF::StringImpl *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = *((unsigned int *)this + 2);
  if ((_DWORD)v10 != -1)
    ((void (*)(char *, WebCore::PublicKeyCredentialRequestOptions *))off_1E3250108[v10])(&v12, this);
  *((_DWORD *)this + 2) = -1;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore33PublicKeyCredentialRequestOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::PublicKeyCredentialRequestOptions *this)
{
  WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions(this, this);
}

unint64_t WebCore::jsCredentialsContainerPrototypeFunction_get(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  void (***v23)(_QWORD, char *, WTF::StringImpl **);
  JSC::JSCell *v24;
  JSC::VM *v25;
  JSC::Structure *v26;
  char v27;
  uint64_t Object;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  JSC::JSCell *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  unsigned __int16 v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  JSC::JSCell *v40;
  unsigned int v41;
  int v42;
  __int128 v43;
  int v44;
  int v45;
  WTF *v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  WTF *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  void (***v58)(_QWORD, char *, WTF::StringImpl **);
  unsigned int v59;
  unsigned int v60;
  int v61;
  __int128 v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  WTF *v65;
  uint64_t v66;
  unsigned int *v67;
  WTF *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  WTF::StringImpl *v72;
  uint64_t v73;
  WebCore::AbortSignal *v74;
  int v75;
  __int128 v76;
  int v77;
  WTF *v78;
  unint64_t v79;
  uint64_t v80;
  _BOOL4 v81;
  char **v82;
  BOOL v83;
  WTF *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  WebCore::AbortSignal *v93;
  int v94;
  WebCore::AbortSignal *v95;
  int v96;
  __int128 v97;
  unint64_t v98;
  void *v99;
  WTF::StringImpl *v100;
  WTF *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  WebCore::AbortSignal *v109;
  uint64_t v110;
  bmalloc::api *v112;
  void *v113;
  bmalloc::api *v114;
  void *v115;
  objc_class *v116;
  WebCore::DOMGuardedObject *v117;
  WebCore::AbortSignal *v118;
  WebCore::AbortSignal *v119;
  bmalloc::api *v120;
  void *v121;
  uint64_t v122;
  unint64_t v123;
  WebCore::DOMGuardedObject *v124;
  WebCore::AbortSignal *v125;
  char v126[8];
  int v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  char v131;
  _BYTE v132[144];
  char v133;
  __int16 v134;
  char v135;
  WTF *v136;
  unint64_t v137;
  char v138;
  int v139;
  char v140[8];
  int v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  char v145;
  _BYTE v146[144];
  unsigned __int8 v147;
  __int16 v148;
  char v149[8];
  WebCore::AbortSignal *v150;
  char v151[8];
  int v152;
  uint64_t v153;
  __int128 v154;
  uint64_t v155;
  char v156;
  WTF::StringImpl *v157[18];
  char v158;
  __int16 v159;
  char v160;
  WTF *v161;
  unint64_t v162;
  unsigned __int8 v163;
  JSC::VM *v164;
  char *v165;
  WTF::StringImpl *v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  __int128 v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  unsigned __int8 v174;
  __int16 v175;
  unsigned int v176;
  uint64_t v177;

  v177 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496F770);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) == 0)
  {
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSCredentialsContainer::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSCredentialsContainer::s_info && v20 != 0);
    }
    if (v19)
    {
      v23 = *(void (****)(_QWORD, char *, WTF::StringImpl **))(v17 + 24);
      v123 = v13;
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v26 = 0;
        v25 = (JSC::VM *)*((_QWORD *)this + 7);
        v164 = v25;
        v27 = 1;
      }
      else
      {
        v24 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
        v25 = (JSC::VM *)*((_QWORD *)this + 7);
        v164 = v25;
        if (((unint64_t)v24 & 0xFFFFFFFFFFFFFFF7) == 2)
        {
          v26 = 0;
          v27 = 1;
        }
        else
        {
          if (((unint64_t)v24 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v24)) == 0)
          {
            JSC::throwTypeError();
            v94 = 1;
            v139 = 1;
            goto LABEL_180;
          }
          v26 = (JSC::Structure *)Object;
          v27 = 0;
        }
      }
      v150 = 0;
      v151[0] = 0;
      v160 = 0;
      LOBYTE(v161) = 0;
      v163 = 0;
      v29 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
      if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 136))(v29) + 440) & 0x1000000000000) == 0)
        goto LABEL_33;
      if ((v27 & 1) != 0)
        goto LABEL_36;
      WTF::AtomStringImpl::addLiteral();
      v32 = (JSC::JSCell *)JSC::JSObject::get(v26, this, (unint64_t)v166);
      if (v166)
      {
        if (*(_DWORD *)v166 == 2)
          WTF::StringImpl::destroy(v166, v31);
        else
          *(_DWORD *)v166 -= 2;
      }
      if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
        goto LABEL_132;
      if (v32 == (JSC::JSCell *)10)
      {
LABEL_42:
        WTF::AtomStringImpl::addLiteral();
        v33 = v166;
        v35 = JSC::JSObject::get(v26, this, (unint64_t)v166);
        if (v33)
        {
          if (*(_DWORD *)v33 == 2)
            WTF::StringImpl::destroy(v33, v34);
          else
            *(_DWORD *)v33 -= 2;
        }
        if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
          goto LABEL_132;
        if (v35 == 10)
        {
          LOBYTE(v36) = 1;
        }
        else
        {
          v166 = (WTF::StringImpl *)*((_QWORD *)this + 7);
          v37 = v166;
          v36 = WebCore::parseEnumeration<WebCore::MediationRequirement>(this, v35);
          if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
            goto LABEL_132;
          if (v36 <= 0xFFu)
          {
LABEL_131:
            JSC::throwTypeError();
LABEL_132:
            v77 = 1;
LABEL_133:
            v139 = v77;
            goto LABEL_134;
          }
        }
        v149[0] = v36;
        WTF::AtomStringImpl::addLiteral();
        v38 = v166;
        v40 = (JSC::JSCell *)JSC::JSObject::get(v26, this, (unint64_t)v166);
        if (v38)
        {
          if (*(_DWORD *)v38 == 2)
            WTF::StringImpl::destroy(v38, v39);
          else
            *(_DWORD *)v38 -= 2;
        }
        if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
          goto LABEL_132;
        if (v40 == (JSC::JSCell *)10)
        {
LABEL_107:
          WTF::AtomStringImpl::addLiteral();
          v72 = v166;
          v73 = JSC::JSObject::get(v26, this, (unint64_t)v166);
          if (v72)
          {
            if (*(_DWORD *)v72 == 2)
              WTF::StringImpl::destroy(v72, v30);
            else
              *(_DWORD *)v72 -= 2;
          }
          if (*((_DWORD *)v164 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v164) & 1) != 0)
            goto LABEL_132;
          if (v73 == 10)
          {
LABEL_112:
            LOBYTE(v124) = v149[0];
            v74 = v150;
            v150 = 0;
            v125 = v74;
            v126[0] = 0;
            v135 = 0;
            if (v160)
            {
              v127 = -1;
              v75 = v152;
              if (v152 != -1)
              {
                ((void (*)(WTF::StringImpl **, char *, char *))off_1E3250118[v152])(&v166, v126, v151);
                v127 = v75;
              }
              v128 = v153;
              v76 = v154;
              v154 = 0uLL;
              v129 = v76;
              *(_QWORD *)&v76 = v155;
              v155 = 0;
              v130 = v76;
              v131 = v156;
              v132[0] = 0;
              v133 = 0;
              if (v158)
              {
                WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)v132, (uint64_t)v157);
                v133 = 1;
              }
              v134 = v159;
              v135 = 1;
            }
            LOBYTE(v136) = 0;
            v138 = 0;
            v77 = v163;
            if (v163)
            {
              v77 = 0;
              v78 = v161;
              v161 = 0;
              v136 = v78;
              v79 = v162;
              v162 = 0;
              v137 = v79;
              v138 = 1;
            }
            goto LABEL_133;
          }
          v166 = (WTF::StringImpl *)*((_QWORD *)this + 7);
          if ((v73 & 0xFFFE000000000002) == 0)
          {
            v80 = *(unsigned int *)(16 * (*(_DWORD *)v73 & 0xFFFFFFFE) + 0x4C);
            v81 = *(_DWORD *)(16 * (*(_DWORD *)v73 & 0xFFFFFFFE) + 0x4C) != 0;
            v82 = (char **)(16 * v80);
            if ((_DWORD)v80)
              v83 = v82 == &WebCore::JSAbortSignal::s_info;
            else
              v83 = 1;
            if (!v83)
            {
              do
              {
                v82 = (char **)v82[2];
                v81 = v82 != 0;
              }
              while (v82 != &WebCore::JSAbortSignal::s_info && v82 != 0);
            }
            if (v81)
            {
              v118 = *(WebCore::AbortSignal **)(v73 + 24);
              if (v118)
              {
                ++*((_DWORD *)v118 + 6);
                v119 = v150;
                v150 = v118;
                if (v119)
                {
                  if (*((_DWORD *)v119 + 6) == 1)
                  {
                    WebCore::AbortSignal::~AbortSignal(v119, v30);
                    bmalloc::api::isoDeallocate(v120, v121);
                  }
                  else
                  {
                    --*((_DWORD *)v119 + 6);
                  }
                }
                goto LABEL_112;
              }
            }
          }
          goto LABEL_131;
        }
        WebCore::convertDictionary<WebCore::PublicKeyCredentialRequestOptions>(v40, (WTF::StringImpl **)this, (uint64_t)&v166);
        v41 = v176;
        if (v176)
        {
          v139 = 1;
          v71 = v176;
LABEL_104:
          if (v71 != -1)
            (*(&off_1E3250618 + v71))((int)v140, (WebCore::PublicKeyCredentialRequestOptions *)&v167);
          if (v41)
          {
LABEL_134:
            if (v163)
            {
              v85 = v161;
              if (HIDWORD(v162))
              {
                v86 = 16 * HIDWORD(v162);
                v87 = (uint64_t *)((char *)v161 + 8);
                do
                {
                  v88 = *v87;
                  if (*v87)
                  {
                    v89 = (uint64_t *)(v88 - 16);
                    v90 = *(_QWORD *)(((v88 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                    v91 = *(uint64_t **)(v88 - 8);
                    if (v91)
                    {
                      v92 = *v89;
                      *v91 = *v89;
                      *(_QWORD *)(v92 + 8) = v91;
                      *v89 = 0;
                      v89[1] = 0;
                    }
                    *v89 = *(_QWORD *)(v90 + 40);
                    *(_QWORD *)(v90 + 40) = v89;
                    *v87 = 0;
                  }
                  v87 += 2;
                  v86 -= 16;
                }
                while (v86);
                v85 = v161;
              }
              if (v85)
              {
                v161 = 0;
                LODWORD(v162) = 0;
                WTF::fastFree(v85, v30);
              }
            }
            if (v160)
              WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions((WebCore::PublicKeyCredentialRequestOptions *)v151, v30);
            v93 = v150;
            v150 = 0;
            if (v93)
            {
              if (*((_DWORD *)v93 + 6) == 1)
              {
                WebCore::AbortSignal::~AbortSignal(v93, v30);
                bmalloc::api::isoDeallocate(v112, v113);
              }
              else
              {
                --*((_DWORD *)v93 + 6);
              }
            }
            v94 = v139;
            if (v139)
            {
              v13 = v123;
            }
            else
            {
              v149[0] = (char)v124;
              v95 = v125;
              v125 = 0;
              v150 = v95;
              v151[0] = 0;
              v160 = 0;
              if (v135)
              {
                v152 = -1;
                v96 = v127;
                if (v127 != -1)
                {
                  ((void (*)(WTF::StringImpl **, char *, char *))off_1E3250118[v127])(&v166, v151, v126);
                  v152 = v96;
                }
                v153 = v128;
                v97 = v129;
                v129 = 0uLL;
                v154 = v97;
                *(_QWORD *)&v97 = v130;
                v130 = 0;
                v155 = v97;
                v156 = v131;
                LOBYTE(v157[0]) = 0;
                v158 = 0;
                if (v133)
                {
                  WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)v157, (uint64_t)v132);
                  v158 = 1;
                }
                v159 = v134;
                v160 = 1;
              }
              LOBYTE(v161) = 0;
              v163 = 0;
              if (v138)
              {
                v161 = v136;
                v98 = v137;
                v136 = 0;
                v137 = 0;
                v162 = v98;
                v163 = 1;
              }
              v166 = v14;
              (**v23)(v23, v149, &v166);
              v100 = v166;
              v166 = 0;
              if (v100)
              {
                if (*((_DWORD *)v100 + 4) == 1)
                  (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v100 + 16))(v100);
                else
                  --*((_DWORD *)v100 + 4);
              }
              if (v163)
              {
                v101 = v161;
                if (HIDWORD(v162))
                {
                  v102 = 16 * HIDWORD(v162);
                  v103 = (uint64_t *)((char *)v161 + 8);
                  do
                  {
                    v104 = *v103;
                    if (*v103)
                    {
                      v105 = (uint64_t *)(v104 - 16);
                      v106 = *(_QWORD *)(((v104 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                      v107 = *(uint64_t **)(v104 - 8);
                      if (v107)
                      {
                        v108 = *v105;
                        *v107 = *v105;
                        *(_QWORD *)(v108 + 8) = v107;
                        *v105 = 0;
                        v105[1] = 0;
                      }
                      *v105 = *(_QWORD *)(v106 + 40);
                      *(_QWORD *)(v106 + 40) = v105;
                      *v103 = 0;
                    }
                    v103 += 2;
                    v102 -= 16;
                  }
                  while (v102);
                  v101 = v161;
                }
                if (v101)
                {
                  v161 = 0;
                  LODWORD(v162) = 0;
                  WTF::fastFree(v101, v99);
                }
              }
              if (v160)
                WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions((WebCore::PublicKeyCredentialRequestOptions *)v151, v99);
              v109 = v150;
              v150 = 0;
              v13 = v123;
              if (v109)
              {
                if (*((_DWORD *)v109 + 6) == 1)
                {
                  WebCore::AbortSignal::~AbortSignal(v109, v99);
                  bmalloc::api::isoDeallocate(v114, v115);
                }
                else
                {
                  --*((_DWORD *)v109 + 6);
                }
              }
              v14 = 0;
              v94 = v139;
            }
            if (v94 == -1)
            {
LABEL_181:
              if (!v14)
                goto LABEL_184;
              goto LABEL_182;
            }
LABEL_180:
            ((void (*)(char *, WebCore::DOMGuardedObject **))off_1E32506F0[v94])(v149, &v124);
            goto LABEL_181;
          }
          goto LABEL_107;
        }
        v140[0] = 0;
        v141 = -1;
        v42 = v168;
        if (v168 != -1)
        {
          ((void (*)(char **, char *, uint64_t *))off_1E3250118[v168])(&v165, v140, &v167);
          v141 = v42;
        }
        v142 = v169;
        v43 = v170;
        v170 = 0uLL;
        v143 = v43;
        *(_QWORD *)&v43 = v171;
        v171 = 0;
        v144 = v43;
        v145 = v172;
        v146[0] = 0;
        v147 = 0;
        v44 = v174;
        if (v174)
        {
          WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)v146, (uint64_t)&v173);
          v44 = 1;
          v147 = 1;
        }
        v148 = v175;
        if (!v160)
        {
          v151[0] = 0;
          v152 = -1;
          v61 = v141;
          if (v141 != -1)
          {
            ((void (*)(char **, char *, char *))off_1E3250118[v141])(&v165, v151, v140);
            v152 = v61;
            v44 = v147;
          }
          v153 = v142;
          v62 = v143;
          v143 = 0uLL;
          v154 = v62;
          *(_QWORD *)&v62 = v144;
          v144 = 0;
          v155 = v62;
          v156 = v145;
          LOBYTE(v157[0]) = 0;
          v158 = 0;
          if (v44)
          {
            WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)v157, (uint64_t)v146);
            v158 = 1;
          }
          v159 = v148;
          v160 = 1;
          goto LABEL_103;
        }
        if (v152 == -1)
        {
          if (v141 == -1)
            goto LABEL_89;
        }
        else if (v141 == -1)
        {
          ((void (*)(char **, char *))off_1E3250108[v152])(&v165, v151);
          v152 = -1;
LABEL_89:
          LODWORD(v153) = v142;
          BYTE4(v153) = BYTE4(v142);
          v63 = v143;
          *(_QWORD *)&v143 = 0;
          v64 = (WTF::StringImpl *)v154;
          *(_QWORD *)&v154 = v63;
          if (v64)
          {
            if (*(_DWORD *)v64 == 2)
              WTF::StringImpl::destroy(v64, v30);
            else
              *(_DWORD *)v64 -= 2;
          }
          v65 = (WTF *)*((_QWORD *)&v154 + 1);
          if (HIDWORD(v155))
          {
            v66 = 40 * HIDWORD(v155);
            v67 = (unsigned int *)(*((_QWORD *)&v154 + 1) + 16);
            do
            {
              v68 = (WTF *)*((_QWORD *)v67 + 1);
              if (v68)
              {
                *((_QWORD *)v67 + 1) = 0;
                v67[4] = 0;
                WTF::fastFree(v68, v30);
              }
              v69 = *v67;
              if ((_DWORD)v69 != -1)
                ((void (*)(char **, unsigned int *))off_1E3250108[v69])(&v165, v67 - 2);
              *v67 = -1;
              v67 += 10;
              v66 -= 40;
            }
            while (v66);
            v65 = (WTF *)*((_QWORD *)&v154 + 1);
          }
          if (v65)
          {
            *((_QWORD *)&v154 + 1) = 0;
            LODWORD(v155) = 0;
            WTF::fastFree(v65, v30);
          }
          *((_QWORD *)&v154 + 1) = *((_QWORD *)&v143 + 1);
          v70 = v144;
          *((_QWORD *)&v143 + 1) = 0;
          v144 = 0;
          v155 = v70;
          v156 = v145;
          std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs,false>>(v157, v146);
          v159 = v148;
LABEL_103:
          WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions((WebCore::PublicKeyCredentialRequestOptions *)v140, v30);
          v71 = v176;
          goto LABEL_104;
        }
        v165 = v151;
        ((void (*)(char **))off_1E32505E8[v141])(&v165);
        goto LABEL_89;
      }
      WebCore::convertDictionary<WebCore::DigitalCredentialRequestOptions>(v32, (JSC::VM **)this, (uint64_t)&v166);
      v45 = v168;
      if (v168)
      {
        v139 = 1;
        v49 = v168;
LABEL_76:
        if (v49 == -1)
        {
          if (v45)
            goto LABEL_134;
          goto LABEL_33;
        }
LABEL_85:
        ((void (*)(char *, WTF::StringImpl **))off_1E3250608[v49])(v140, &v166);
        if (v45)
          goto LABEL_134;
LABEL_33:
        if ((v27 & 1) == 0)
          goto LABEL_42;
LABEL_36:
        v149[0] = 1;
        goto LABEL_112;
      }
      v46 = v166;
      v166 = 0;
      v47 = v167;
      v48 = HIDWORD(v167);
      v167 = 0;
      v49 = v163;
      if (!v163)
      {
        v161 = v46;
        v162 = __PAIR64__(v48, v47);
        v163 = 1;
        goto LABEL_85;
      }
      v50 = v161;
      v122 = v10;
      if (HIDWORD(v162))
      {
        v51 = 16 * HIDWORD(v162);
        v52 = (uint64_t *)((char *)v161 + 8);
        do
        {
          v53 = *v52;
          if (*v52)
          {
            v54 = (uint64_t *)(v53 - 16);
            v55 = *(_QWORD *)(((v53 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v56 = *(uint64_t **)(v53 - 8);
            if (v56)
            {
              v57 = *v54;
              *v56 = *v54;
              *(_QWORD *)(v57 + 8) = v56;
              *v54 = 0;
              v54[1] = 0;
            }
            *v54 = *(_QWORD *)(v55 + 40);
            *(_QWORD *)(v55 + 40) = v54;
            *v52 = 0;
          }
          v52 += 2;
          v51 -= 16;
        }
        while (v51);
        v58 = v23;
        v50 = v161;
        if (!v161)
          goto LABEL_75;
      }
      else
      {
        v58 = v23;
        if (!v161)
          goto LABEL_75;
      }
      v161 = 0;
      LODWORD(v162) = 0;
      v59 = v48;
      v60 = v47;
      WTF::fastFree(v50, v30);
      v47 = v60;
      v48 = v59;
LABEL_75:
      v161 = v46;
      v162 = __PAIR64__(v48, v47);
      v49 = v168;
      v23 = v58;
      v10 = v122;
      goto LABEL_76;
    }
  }
  WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CredentialsContainer", "get", v16);
LABEL_182:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_184:
  v110 = *(_QWORD *)(v10 + 16);
  if (v110)
  {
    if (*(_QWORD *)(v10 + 24) != v110)
    {
      v116 = *(objc_class **)(v110 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v124);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v124, v116, 0);
      v117 = v124;
      v124 = 0;
      if (v117)
      {
        if (*((_DWORD *)v117 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v117 + 16))(v117);
        else
          --*((_DWORD *)v117 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCredentialsContainerPrototypeFunction_store(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  char **v30;
  BOOL v31;
  uint64_t v33;
  uint64_t v34;
  JSValue v36;
  objc_class *v37;
  WebCore::DOMGuardedObject *v38;
  WebCore::DOMGuardedObject *v39;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19496FB5CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v19 = *((_QWORD *)a2 + 5);
  if ((v19 & 0xFFFE000000000002) != 0)
    goto LABEL_48;
  v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
  v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSCredentialsContainer::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSCredentialsContainer::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_48:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CredentialsContainer", "store", v17);
  }
  else
  {
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) == 1)
    {
      v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
      JSC::VM::throwException(v25, this, v36);
    }
    else
    {
      v26 = *(_QWORD *)(v19 + 24);
      v27 = *((_QWORD *)a2 + 6);
      v39 = (WebCore::DOMGuardedObject *)*((_QWORD *)this + 7);
      if ((v27 & 0xFFFE000000000002) == 0)
      {
        v28 = *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C);
        v29 = *(_DWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C) != 0;
        v30 = (char **)(16 * v28);
        if ((_DWORD)v28)
          v31 = v30 == &WebCore::JSBasicCredential::s_info;
        else
          v31 = 1;
        if (!v31)
        {
          do
          {
            v30 = (char **)v30[2];
            v29 = v30 != 0;
          }
          while (v30 != &WebCore::JSBasicCredential::s_info && v30 != 0);
        }
        if (v29)
        {
          v33 = *(_QWORD *)(v27 + 24);
          if (v33)
          {
            v39 = v14;
            WebCore::CredentialsContainer::store(v26, v33, (uint64_t *)&v39);
            if (*((_DWORD *)v14 + 4) != 1)
            {
              --*((_DWORD *)v14 + 4);
              goto LABEL_43;
            }
LABEL_46:
            (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
            goto LABEL_43;
          }
        }
      }
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v39, 0, "credential", 11, "CredentialsContainer", 21, v18, "store", 6, "BasicCredential", 16);
    }
  }
  if (*((_DWORD *)v14 + 4) == 1)
    goto LABEL_46;
  --*((_DWORD *)v14 + 4);
LABEL_43:
  v34 = *(_QWORD *)(v10 + 16);
  if (v34)
  {
    if (*(_QWORD *)(v10 + 24) != v34)
    {
      v37 = *(objc_class **)(v34 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v39);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v39, v37, 0);
      v38 = v39;
      v39 = 0;
      if (v38)
      {
        if (*((_DWORD *)v38 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v38 + 16))(v38);
        else
          --*((_DWORD *)v38 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCredentialsContainerPrototypeFunction_create(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  JSC::JSCell *v25;
  JSC::VM *v26;
  uint64_t Object;
  JSC::Structure *v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  unsigned __int16 v31;
  WebCore::AbortSignal *v32;
  int v33;
  WebCore::AbortSignal *v34;
  int v35;
  WebCore::AbortSignal *v36;
  void *v37;
  WTF::StringImpl *v38;
  WebCore::AbortSignal *v39;
  uint64_t v40;
  WTF::StringImpl *v42;
  JSC::JSCell *v43;
  unsigned int v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  bmalloc::api *v52;
  void *v53;
  bmalloc::api *v54;
  void *v55;
  void *v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  uint64_t *v59;
  WTF *v60;
  uint64_t v61;
  WTF *v62;
  uint64_t v63;
  unsigned int *v64;
  WTF *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  unint64_t v69;
  WTF::StringImpl *v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL4 v73;
  char **v74;
  BOOL v75;
  objc_class *v77;
  WebCore::DOMGuardedObject *v78;
  WebCore::AbortSignal *v79;
  WebCore::AbortSignal *v80;
  bmalloc::api *v81;
  void *v82;
  JSC::Structure *v83;
  WebCore::DOMGuardedObject *v84;
  WebCore::AbortSignal *v85;
  uint64_t v86[37];
  char v87;
  int v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  WTF::StringImpl *v91;
  char v92;
  uint64_t v93;
  int v94;
  WTF *v95;
  uint64_t v96;
  int v97;
  char v98;
  WTF *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  _BYTE v103[152];
  WTF::StringImpl *v104[37];
  unsigned int v105;
  char v106[8];
  WebCore::AbortSignal *v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  WTF::StringImpl *v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  WTF *v115;
  uint64_t v116;
  int v117;
  char v118;
  WTF *v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  WTF::StringImpl *v123;
  unsigned __int8 v124;
  JSC::VM *v125;
  _QWORD v126[2];

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194970468);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) == 0)
  {
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSCredentialsContainer::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSCredentialsContainer::s_info && v21 != 0);
    }
    if (v20)
    {
      v24 = *(_QWORD *)(v18 + 24);
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v125 = (JSC::VM *)*((_QWORD *)this + 7);
      }
      else
      {
        v25 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
        v26 = (JSC::VM *)*((_QWORD *)this + 7);
        v125 = v26;
        if (((unint64_t)v25 & 0xFFFFFFFFFFFFFFF7) != 2)
        {
          if (((unint64_t)v25 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v25)) == 0)
          {
            JSC::throwTypeError();
            v35 = 1;
            v88 = 1;
            goto LABEL_58;
          }
          v28 = (JSC::Structure *)Object;
          v107 = 0;
          LOBYTE(v108) = 0;
          v124 = 0;
          WTF::AtomStringImpl::addLiteral();
          v83 = v28;
          v30 = JSC::JSObject::get(v28, this, (unint64_t)v104[0]);
          if (v104[0])
          {
            if (*(_DWORD *)v104[0] == 2)
              WTF::StringImpl::destroy(v104[0], v29);
            else
              *(_DWORD *)v104[0] -= 2;
          }
          if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
            goto LABEL_166;
          if (v30 == 10)
          {
            LOBYTE(v31) = 1;
            goto LABEL_67;
          }
          v104[0] = *((WTF::StringImpl **)this + 7);
          v31 = WebCore::parseEnumeration<WebCore::MediationRequirement>(this, v30);
          if (!*((_DWORD *)v104[0] + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v104[0]) & 1) == 0)
          {
            if (v31 > 0xFFu)
            {
LABEL_67:
              v106[0] = v31;
              WTF::AtomStringImpl::addLiteral();
              v43 = (JSC::JSCell *)JSC::JSObject::get(v83, this, (unint64_t)v104[0]);
              if (v104[0])
              {
                if (*(_DWORD *)v104[0] == 2)
                  WTF::StringImpl::destroy(v104[0], v42);
                else
                  *(_DWORD *)v104[0] -= 2;
              }
              if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
                goto LABEL_166;
              if (v43 == (JSC::JSCell *)10)
                goto LABEL_120;
              WebCore::convertDictionary<WebCore::PublicKeyCredentialCreationOptions>(v43, (JSC::VM **)this, (uint64_t)v104);
              v44 = v105;
              if (v105)
              {
                v88 = 1;
                v68 = v105;
LABEL_117:
                if (v68 != -1)
                  (*(&off_1E32505F8 + v68))((int)&v89, (WebCore::PublicKeyCredentialCreationOptions *)v104);
                if (v44)
                {
LABEL_40:
                  if (v124)
                    WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions((WebCore::PublicKeyCredentialCreationOptions *)&v108, v16);
                  v34 = v107;
                  v107 = 0;
                  if (v34)
                  {
                    if (*((_DWORD *)v34 + 6) == 1)
                    {
                      WebCore::AbortSignal::~AbortSignal(v34, v16);
                      bmalloc::api::isoDeallocate(v52, v53);
                    }
                    else
                    {
                      --*((_DWORD *)v34 + 6);
                    }
                  }
                  v35 = v88;
                  if (!v88)
                  {
                    v106[0] = (char)v84;
                    v36 = v85;
                    v85 = 0;
                    v107 = v36;
                    LOBYTE(v108) = 0;
                    v124 = 0;
                    if (v87)
                    {
                      WebCore::PublicKeyCredentialCreationOptions::PublicKeyCredentialCreationOptions((uint64_t)&v108, v86);
                      v124 = 1;
                    }
                    v104[0] = v14;
                    (*(void (**)(uint64_t, char *, WTF::StringImpl **))(*(_QWORD *)v24 + 8))(v24, v106, v104);
                    v38 = v104[0];
                    v104[0] = 0;
                    if (v38)
                    {
                      if (*((_DWORD *)v38 + 4) == 1)
                        (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v38 + 16))(v38);
                      else
                        --*((_DWORD *)v38 + 4);
                    }
                    if (v124)
                      WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions((WebCore::PublicKeyCredentialCreationOptions *)&v108, v37);
                    v39 = v107;
                    v107 = 0;
                    if (v39)
                    {
                      if (*((_DWORD *)v39 + 6) == 1)
                      {
                        WebCore::AbortSignal::~AbortSignal(v39, v37);
                        bmalloc::api::isoDeallocate(v54, v55);
                      }
                      else
                      {
                        --*((_DWORD *)v39 + 6);
                      }
                    }
                    v14 = 0;
                    v35 = v88;
                  }
                  if (v35 == -1)
                  {
LABEL_59:
                    if (!v14)
                      goto LABEL_62;
                    goto LABEL_60;
                  }
LABEL_58:
                  ((void (*)(char *, WebCore::DOMGuardedObject **))off_1E3250700[v35])(v106, &v84);
                  goto LABEL_59;
                }
LABEL_120:
                v69 = v13;
                WTF::AtomStringImpl::addLiteral();
                v70 = v104[0];
                v71 = JSC::JSObject::get(v83, this, (unint64_t)v104[0]);
                if (v70)
                {
                  if (*(_DWORD *)v70 == 2)
                    WTF::StringImpl::destroy(v70, (WTF::StringImpl *)v16);
                  else
                    *(_DWORD *)v70 -= 2;
                }
                if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
                  goto LABEL_138;
                if (v71 == 10)
                  goto LABEL_125;
                v104[0] = *((WTF::StringImpl **)this + 7);
                if ((v71 & 0xFFFE000000000002) != 0)
                  goto LABEL_137;
                v72 = *(unsigned int *)(16 * (*(_DWORD *)v71 & 0xFFFFFFFE) + 0x4C);
                v73 = *(_DWORD *)(16 * (*(_DWORD *)v71 & 0xFFFFFFFE) + 0x4C) != 0;
                v74 = (char **)(16 * v72);
                if ((_DWORD)v72)
                  v75 = v74 == &WebCore::JSAbortSignal::s_info;
                else
                  v75 = 1;
                if (!v75)
                {
                  do
                  {
                    v74 = (char **)v74[2];
                    v73 = v74 != 0;
                  }
                  while (v74 != &WebCore::JSAbortSignal::s_info && v74 != 0);
                }
                if (!v73 || (v79 = *(WebCore::AbortSignal **)(v71 + 24)) == 0)
                {
LABEL_137:
                  JSC::throwTypeError();
LABEL_138:
                  v33 = 1;
                  v13 = v69;
LABEL_39:
                  v88 = v33;
                  goto LABEL_40;
                }
                ++*((_DWORD *)v79 + 6);
                v80 = v107;
                v107 = v79;
                if (!v80)
                {
LABEL_125:
                  v13 = v69;
                }
                else
                {
                  v13 = v69;
                  if (*((_DWORD *)v80 + 6) == 1)
                  {
                    WebCore::AbortSignal::~AbortSignal(v80, v16);
                    bmalloc::api::isoDeallocate(v81, v82);
                  }
                  else
                  {
                    --*((_DWORD *)v80 + 6);
                  }
                }
LABEL_37:
                LOBYTE(v84) = v106[0];
                v32 = v107;
                v107 = 0;
                v85 = v32;
                LOBYTE(v86[0]) = 0;
                v87 = 0;
                v33 = v124;
                if (v124)
                {
                  WebCore::PublicKeyCredentialCreationOptions::PublicKeyCredentialCreationOptions((uint64_t)v86, (uint64_t *)&v108);
                  v33 = 0;
                  v87 = 1;
                }
                goto LABEL_39;
              }
              WebCore::PublicKeyCredentialCreationOptions::PublicKeyCredentialCreationOptions((uint64_t)&v89, (uint64_t *)v104);
              if (!v124)
              {
                WebCore::PublicKeyCredentialCreationOptions::PublicKeyCredentialCreationOptions((uint64_t)&v108, (uint64_t *)&v89);
                v124 = 1;
LABEL_116:
                WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions((WebCore::PublicKeyCredentialCreationOptions *)&v89, v56);
                v68 = v105;
                goto LABEL_117;
              }
              v46 = v89;
              v89 = 0;
              v47 = v108;
              v108 = v46;
              if (v47)
              {
                if (*(_DWORD *)v47 == 2)
                  WTF::StringImpl::destroy(v47, v45);
                else
                  *(_DWORD *)v47 -= 2;
              }
              v48 = v90;
              v90 = 0;
              v49 = v109;
              v109 = v48;
              if (v49)
              {
                if (*(_DWORD *)v49 == 2)
                  WTF::StringImpl::destroy(v49, v45);
                else
                  *(_DWORD *)v49 -= 2;
              }
              if (v111 == v92)
              {
                if (v111)
                {
                  v50 = v91;
                  v91 = 0;
                  v51 = v110;
                  v110 = v50;
                  if (v51)
                  {
                    if (*(_DWORD *)v51 == 2)
                      WTF::StringImpl::destroy(v51, v45);
                    else
                      *(_DWORD *)v51 -= 2;
                  }
                }
              }
              else if (v111)
              {
                v57 = v110;
                v110 = 0;
                if (v57)
                {
                  if (*(_DWORD *)v57 == 2)
                    WTF::StringImpl::destroy(v57, v45);
                  else
                    *(_DWORD *)v57 -= 2;
                }
                v111 = 0;
              }
              else
              {
                v58 = v91;
                v91 = 0;
                v110 = v58;
                v111 = 1;
              }
              WebCore::PublicKeyCredentialCreationOptions::UserEntity::operator=((uint64_t)&v112, (WTF::StringImpl *)&v93);
              v59 = &v113;
              if (v114 == -1)
              {
                if (v94 == -1)
                  goto LABEL_103;
              }
              else if (v94 == -1)
              {
                ((void (*)(_QWORD *, uint64_t *))off_1E3250108[v114])(v126, &v113);
                v114 = -1;
LABEL_103:
                v60 = v115;
                if (v115)
                {
                  v115 = 0;
                  LODWORD(v116) = 0;
                  WTF::fastFree(v60, v59);
                }
                v115 = v95;
                v61 = v96;
                v95 = 0;
                v96 = 0;
                v116 = v61;
                v117 = v97;
                v118 = v98;
                v62 = v119;
                if (HIDWORD(v120))
                {
                  v63 = 40 * HIDWORD(v120);
                  v64 = (unsigned int *)((char *)v119 + 16);
                  do
                  {
                    v65 = (WTF *)*((_QWORD *)v64 + 1);
                    if (v65)
                    {
                      *((_QWORD *)v64 + 1) = 0;
                      v64[4] = 0;
                      WTF::fastFree(v65, v59);
                    }
                    v66 = *v64;
                    if ((_DWORD)v66 != -1)
                      ((void (*)(_QWORD *, unsigned int *))off_1E3250108[v66])(v126, v64 - 2);
                    *v64 = -1;
                    v64 += 10;
                    v63 -= 40;
                  }
                  while (v63);
                  v62 = v119;
                  v44 = 0;
                }
                if (v62)
                {
                  v119 = 0;
                  LODWORD(v120) = 0;
                  WTF::fastFree(v62, v59);
                }
                v119 = v99;
                v67 = v100;
                v99 = 0;
                v100 = 0;
                v121 = v101;
                v122 = v102;
                v120 = v67;
                std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs,false>>(&v123, v103);
                goto LABEL_116;
              }
              v126[0] = &v113;
              ((void (*)(_QWORD *))off_1E32505E8[v94])(v126);
              goto LABEL_103;
            }
            JSC::throwTypeError();
          }
LABEL_166:
          v33 = 1;
          goto LABEL_39;
        }
      }
      v107 = 0;
      LOBYTE(v108) = 0;
      v124 = 0;
      v106[0] = 1;
      goto LABEL_37;
    }
  }
  WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CredentialsContainer", "create", v17);
LABEL_60:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_62:
  v40 = *(_QWORD *)(v10 + 16);
  if (v40)
  {
    if (*(_QWORD *)(v10 + 24) != v40)
    {
      v77 = *(objc_class **)(v40 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v84);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v84, v77, 0);
      v78 = v84;
      v84 = 0;
      if (v78)
      {
        if (*((_DWORD *)v78 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v78 + 16))(v78);
        else
          --*((_DWORD *)v78 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsCredentialsContainerPrototypeFunction_preventSilentAccess(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  objc_class *v26;
  WebCore::DOMGuardedObject *v27;
  WebCore::DOMGuardedObject *v28;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194970748);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSCredentialsContainer::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSCredentialsContainer::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CredentialsContainer", "preventSilentAccess", v16);
  }
  else
  {
    v23 = *(_QWORD *)(v17 + 24);
    v28 = v14;
    WebCore::CredentialsContainer::preventSilentAccess(v23, (uint64_t *)&v28);
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v26 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v28);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v28, v26, 0);
      v27 = v28;
      v28 = 0;
      if (v27)
      {
        if (*((_DWORD *)v27 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v27 + 16))(v27);
        else
          --*((_DWORD *)v27 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WebCore::AbortSignal *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24CredentialRequestOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  WebCore::AbortSignal *result;
  bmalloc::api *v13;
  void *v14;

  if (*(_BYTE *)(a2 + 256))
  {
    v3 = *(unsigned int *)(a2 + 252);
    v4 = *(WTF **)(a2 + 240);
    if ((_DWORD)v3)
    {
      v5 = 16 * v3;
      v6 = (uint64_t *)((char *)v4 + 8);
      do
      {
        v7 = *v6;
        if (*v6)
        {
          v8 = (uint64_t *)(v7 - 16);
          v9 = *(_QWORD *)(((v7 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v10 = *(uint64_t **)(v7 - 8);
          if (v10)
          {
            v11 = *v8;
            *v10 = *v8;
            *(_QWORD *)(v11 + 8) = v10;
            *v8 = 0;
            v8[1] = 0;
          }
          *v8 = *(_QWORD *)(v9 + 40);
          *(_QWORD *)(v9 + 40) = v8;
          *v6 = 0;
        }
        v6 += 2;
        v5 -= 16;
      }
      while (v5);
      v4 = *(WTF **)(a2 + 240);
    }
    if (v4)
    {
      *(_QWORD *)(a2 + 240) = 0;
      *(_DWORD *)(a2 + 248) = 0;
      WTF::fastFree(v4, (void *)a2);
    }
  }
  if (*(_BYTE *)(a2 + 232))
    WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions((WebCore::PublicKeyCredentialRequestOptions *)(a2 + 16), (void *)a2);
  result = *(WebCore::AbortSignal **)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::AbortSignal::~AbortSignal(result, (void *)a2);
      return (WebCore::AbortSignal *)bmalloc::api::isoDeallocate(v13, v14);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

WebCore::AbortSignal *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore25CredentialCreationOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WebCore::AbortSignal *result;
  bmalloc::api *v4;
  void *v5;

  if (*(_BYTE *)(a2 + 312))
    WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions((WebCore::PublicKeyCredentialCreationOptions *)(a2 + 16), (void *)a2);
  result = *(WebCore::AbortSignal **)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::AbortSignal::~AbortSignal(result, (void *)a2);
      return (WebCore::AbortSignal *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

_BYTE *WebCore::jsCryptoPrototypeFunction_randomUUID(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  WTF::StringImpl *v20;

  v4 = *((_QWORD *)a2 + 5);
  v19 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "Crypto", "randomUUID");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 76);
  v7 = *(_DWORD *)(v5 + 76) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCrypto::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCrypto::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "Crypto", "randomUUID");
  WTF::createVersion4UUIDString(this);
  v10 = *((_QWORD *)this + 7);
  v11 = v20;
  if (!v20 || (v12 = *((_DWORD *)v20 + 1)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
LABEL_14:
    v20 = 0;
    if (!v11)
      return (_BYTE *)v13;
    goto LABEL_15;
  }
  if (v12 != 1)
    goto LABEL_11;
  v16 = (unsigned __int8 *)*((_QWORD *)v20 + 1);
  if ((*((_BYTE *)v20 + 16) & 4) != 0)
  {
    v17 = *v16;
LABEL_27:
    v13 = *(_QWORD *)(v10 + 8 * v17 + 42216);
    goto LABEL_28;
  }
  v18 = *(unsigned __int16 *)v16;
  if (v18 <= 0xFF)
  {
    v17 = v18;
    goto LABEL_27;
  }
LABEL_11:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v20 != *(WTF::StringImpl **)(v13 + 8))
  {
    v13 = JSC::jsStringWithCacheSlowCase();
    v11 = v20;
    goto LABEL_14;
  }
LABEL_28:
  v20 = 0;
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v11);
  else
    *(_DWORD *)v11 -= 2;
  return (_BYTE *)v13;
}

JSC::JSArrayBufferView *WebCore::IDLOperation<WebCore::JSCrypto>::call<&WebCore::jsCryptoPrototypeFunction_getRandomValuesBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, uint64_t a2)
{
  unint64_t v4;
  WebCore::JSCrypto *v5;
  uint64_t v7;

  v7 = *((_QWORD *)a1 + 7);
  v4 = WebCore::IDLOperation<WebCore::JSCrypto>::cast(*(_QWORD *)(a2 + 40));
  if (v4)
    return WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(a1, (JSC::JSArrayBufferView **)a2, *(JSC::CallFrame **)(v4 + 24), v5);
  else
    return (JSC::JSArrayBufferView *)WebCore::throwThisTypeError((int)a1, (int)&v7, "Crypto", "getRandomValues");
}

JSC::JSArrayBufferView *WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(WebCore *this, JSC::JSArrayBufferView **a2, JSC::CallFrame *a3, WebCore::JSCrypto *a4)
{
  JSC::VM *v5;
  JSC::JSArrayBufferView *v7;
  int v8;
  JSC::JSArrayBufferView *v9;
  JSValue v11;
  char v12[8];
  int v13;
  JSC::VM *v14;
  char v15;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v5;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v11.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSC::JSArrayBufferView *)JSC::VM::throwException(v5, this, v11);
  }
  else
  {
    v7 = a2[6];
    WebCore::Detail::BufferSourceConverter<WebCore::IDLArrayBufferView,(WebCore::Detail::BufferSourceConverterAllowSharedMode)1>::convert<WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCrypto *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>((uint64_t)v12, (uint64_t)this, v7);
    v8 = v13;
    if (v13)
    {
      v9 = 0;
    }
    else
    {
      WebCore::invokeFunctorPropagatingExceptionIfNecessary<WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCrypto *)::{lambda(void)#1}>(this, &v14, a3, (uint64_t)v12);
      v8 = v13;
      v9 = v7;
    }
    if (v8 != -1)
      ((void (*)(char *, char *))off_1E32507B0[v8])(&v15, v12);
  }
  return v9;
}

unint64_t WebCore::IDLOperation<WebCore::JSCrypto>::cast(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSCrypto::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSCrypto::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::invokeFunctorPropagatingExceptionIfNecessary<WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCrypto *)::{lambda(void)#1}>(JSC *a1, JSC::VM **a2, WebCore::Crypto *this, uint64_t a4)
{
  WTF::StringImpl *v6;
  WTF::StringImpl *v8;
  unsigned __int8 v9[8];
  WTF::StringImpl *v10;
  unsigned __int8 v11[8];
  WTF::StringImpl *v12;
  char v13;

  WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCrypto *)::{lambda(void)#1}::operator()((uint64_t)v11, this, a4);
  if (v13)
  {
    v9[0] = v11[0];
    v8 = v12;
    v12 = 0;
    v10 = v8;
    if (!*((_QWORD *)*a2 + 2))
    {
      WebCore::propagateExceptionSlowPath(a1, a2, v9);
      v8 = v10;
    }
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v6);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  return WebCore::ExceptionOr<void>::~ExceptionOr((uint64_t)v11, v6);
}

void WebCore::Detail::BufferSourceConverter<WebCore::IDLArrayBufferView,(WebCore::Detail::BufferSourceConverterAllowSharedMode)1>::convert<WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCrypto *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(uint64_t a1, uint64_t a2, JSC::JSArrayBufferView *a3)
{
  uint64_t v5;
  JSC::ArrayBufferView *v6;
  JSC::ArrayBufferView *v7;
  uint64_t v8;

  v8 = *(_QWORD *)(a2 + 56);
  JSC::JSArrayBufferView::toWrapped(a3, &v7);
  if (v7)
  {
    *(_QWORD *)a1 = v7;
    *(_DWORD *)(a1 + 8) = 0;
  }
  else
  {
    WebCore::throwArgumentTypeError(a2, (uint64_t)&v8, 0, "array", 6, "Crypto", 7, v5, "getRandomValues", 16, "ArrayBufferView", 16);
    *(_DWORD *)(a1 + 8) = 1;
    v6 = v7;
    v7 = 0;
    if (v6)
    {
      if (*(_DWORD *)v6 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*(_DWORD *)v6;
    }
  }
}

_DWORD **WTF::Ref<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>::~Ref(_DWORD **a1)
{
  _DWORD *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*v2 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*v2;
  }
  return a1;
}

void WebCore::jsCryptoPrototypeFunction_getRandomValuesBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCrypto *)::{lambda(void)#1}::operator()(uint64_t a1, WebCore::Crypto *this, uint64_t a3)
{
  JSC::ArrayBufferView *v3;
  uint64_t v4;

  if (*(_DWORD *)(a3 + 8))
  {
    v4 = std::__throw_bad_variant_access[abi:sn180100]();
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSK_1EJSG_SI_EEEEEEDcSM_DpT0_(v4);
  }
  else
  {
    v3 = *(JSC::ArrayBufferView **)a3;
    *(_QWORD *)a3 = 0;
    WebCore::Crypto::getRandomValues(v3, a1);
    if (*(_DWORD *)v3 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)v3;
  }
}

_DWORD **_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSK_1EJSG_SI_EEEEEEDcSM_DpT0_(uint64_t a1, _DWORD **a2)
{
  return WTF::Ref<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>::~Ref(a2);
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJdN3WTF6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISA_LNS0_6_TraitE1EEEEEvOT_EUlRSG_OT0_E_JRNS0_6__baseILSE_1EJdS9_EEEOSO_EEEDcSG_DpT0_(uint64_t *a1, _QWORD *a2, double *a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  char v7;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 8);
  if ((_DWORD)v5 != -1)
  {
    if (!(_DWORD)v5)
    {
      result = *a3;
      *a2 = *(_QWORD *)a3;
      return result;
    }
    ((void (*)(char *, uint64_t))off_1E3250888[v5])(&v7, v4);
  }
  result = *a3;
  *(double *)v4 = *a3;
  *(_DWORD *)(v4 + 8) = 0;
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJdN3WTF6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISA_LNS0_6_TraitE1EEEEEvOT_EUlRSG_OT0_E_JRNS0_6__baseILSE_1EJdS9_EEEOSO_EEEDcSG_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E3250888[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJdN3WTF6StringEEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSB_SD_EEEEEEDcSH_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E3250888[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJdN7WebCore12EffectTimingEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJdS9_EEEEEEDcSD_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *result;
  uint64_t v4;
  char v5;

  result = *(WTF::StringImpl **)(a2 + 48);
  *(_QWORD *)(a2 + 48) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  v4 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v4 != -1)
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E3250888[v4])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN7WebCore12EffectTimingEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISA_LNS0_6_TraitE1EEEEEvRSB_OT_EUlRSH_OT0_E_JRNS0_6__baseILSE_1EJdS9_EEEOSP_EEEDcSH_DpT0_(uint64_t a1, _QWORD *a2, double *a3)
{
  double result;

  result = *a3;
  *a2 = *(_QWORD *)a3;
  return result;
}

__n128 _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN7WebCore12EffectTimingEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISA_LNS0_6_TraitE1EEEEEvRSB_OT_EUlRSH_OT0_E_JRNS0_6__baseILSE_1EJdS9_EEEOSP_EEEDcSH_DpT0_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 result;
  __int128 v7;
  uint64_t v8;
  char v9;

  *(_BYTE *)a2 = 0;
  *(_DWORD *)(a2 + 8) = -1;
  v5 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_1E3250898[v5])(&v9, a2, a3);
    *(_DWORD *)(a2 + 8) = v5;
  }
  result = *(__n128 *)(a3 + 16);
  v7 = *(_OWORD *)(a3 + 32);
  *(__n128 *)(a2 + 16) = result;
  *(_OWORD *)(a2 + 32) = v7;
  v8 = *(_QWORD *)(a3 + 48);
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a2 + 48) = v8;
  *(_WORD *)(a2 + 56) = *(_WORD *)(a3 + 56);
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CustomEffectENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CustomEffectENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJdN7WebCore12EffectTimingEEEEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 80))
  {
    v3 = *(unsigned int *)(a2 + 72);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32508C8[v3])(&v5, a2 + 8);
    *(_DWORD *)(a2 + 72) = -1;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore22JSCustomEffectCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_BYTE *WebCore::jsCustomElementRegistryPrototypeFunction_define(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore::JSCustomElementRegistry *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  WTF *v11;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WTF *v19;
  uint64_t v20;
  _BYTE v21[40];
  uint64_t v22;
  JSC::JSGlobalObject *v23;

  v18 = *((_QWORD *)this + 7);
  v4 = (WebCore::JSCustomElementRegistry *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomElementRegistry", "define");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCustomElementRegistry::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCustomElementRegistry::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomElementRegistry", "define");
  v19 = (WTF *)v21;
  v20 = 4;
  v21[32] = 0;
  v22 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v23 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v19;
  v10 = WebCore::JSCustomElementRegistry::define(v4, this, a2);
  if (HIDWORD(v20))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v19, v23);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v22;
    if (HIDWORD(v20))
    {
      v15 = v19;
      v16 = 8 * HIDWORD(v20);
      do
      {
        v17 = *(_QWORD *)v15;
        *(_QWORD *)v15 = 0;
        if (v17)
        {
          if (*(_DWORD *)(v17 + 24) == 2)
          {
            if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v17, v9);
          }
          else
          {
            *(_DWORD *)(v17 + 24) -= 2;
          }
        }
        v15 = (WTF *)((char *)v15 + 8);
        v16 -= 8;
      }
      while (v16);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v22;
  }
  v11 = v19;
  if (v21 != (_BYTE *)v19 && v19 != 0)
  {
    v19 = 0;
    LODWORD(v20) = 0;
    WTF::fastFree(v11, v9);
  }
  return (_BYTE *)v10;
}

_BYTE *WebCore::jsCustomElementRegistryPrototypeFunction_get(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  JSValue v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  int v25;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "CustomElementRegistry", "get");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomElementRegistry::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomElementRegistry::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "CustomElementRegistry", "get");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v24);
  v12 = v25;
  if (!v25)
  {
    v23 = v24;
    v24 = 0;
    v13 = WTF::HashMap<WTF::AtomString,WTF::Ref<WebCore::JSCustomElementInterface,WTF::RawPtrTraits<WebCore::JSCustomElementInterface>,WTF::DefaultRefDerefTraits<WebCore::JSCustomElementInterface>>,WTF::DefaultHash<WTF::AtomString>,WTF::HashTraits<WTF::AtomString>,WTF::HashTraits<WTF::Ref<WebCore::JSCustomElementInterface,WTF::RawPtrTraits<WebCore::JSCustomElementInterface>,WTF::DefaultRefDerefTraits<WebCore::JSCustomElementInterface>>>,WTF::HashTableTraits>::get((uint64_t *)(v11 + 32), (uint64_t)&v23);
    if (!v13)
    {
      v17 = 10;
      goto LABEL_19;
    }
    v15 = *(_DWORD *)(v13 + 16);
    *(_DWORD *)(v13 + 16) = v15 + 1;
    v16 = *(_QWORD *)(v13 + 32);
    if (!v16 || (*(_BYTE *)(v16 + 8) & 3) != 0)
    {
      v17 = 0;
      if (v15)
        goto LABEL_18;
    }
    else
    {
      v17 = *(_QWORD *)v16;
      if (v15)
      {
LABEL_18:
        *(_DWORD *)(v13 + 16) = v15;
LABEL_19:
        v18 = v23;
        v23 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v14);
          else
            *(_DWORD *)v18 -= 2;
        }
        v12 = v25;
        goto LABEL_23;
      }
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
    goto LABEL_19;
  }
  v17 = 0;
LABEL_23:
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FCB0[v12])(&v23, &v24);
  return (_BYTE *)v17;
}

uint64_t WebCore::jsCustomElementRegistryPrototypeFunction_getName(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  const JSC::JSObject *Object;
  WTF::StringImpl *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v23;
  JSValue v25;
  JSC::VM *v26;
  uint64_t v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CustomElementRegistry", "getName");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomElementRegistry::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomElementRegistry::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CustomElementRegistry", "getName");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v25);
  }
  if ((*((_QWORD *)a2 + 6) & 0xFFFE000000000002) != 0)
    return 2;
  v11 = *(_QWORD *)(v5 + 24);
  Object = (const JSC::JSObject *)JSC::JSCell::getObject(*((JSC::JSCell **)a2 + 6));
  if (!Object)
    return 2;
  WebCore::CustomElementRegistry::findInterface(v11, Object, &v27);
  v14 = (_DWORD *)v27;
  if (!v27)
    return 2;
  v15 = *(_QWORD *)(*(_QWORD *)(v27 + 24) + 24);
  if (v15)
    *(_DWORD *)v15 += 2;
  if (v14[4] != 1)
  {
    --v14[4];
    if (v15)
      goto LABEL_20;
    return 2;
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)v14 + 16))(v14);
  if (!v15)
    return 2;
LABEL_20:
  v16 = *((_QWORD *)this + 7);
  v17 = (uint64_t *)(v16 + 41968);
  v18 = *(_DWORD *)(v15 + 4);
  if (v18)
  {
    if (v18 != 1)
    {
LABEL_22:
      v19 = *(_QWORD *)(v16 + 64760);
      if (!v19 || v15 != *(_QWORD *)(v19 + 8))
        v19 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_25;
    }
    v21 = *(unsigned __int8 **)(v15 + 8);
    if ((*(_BYTE *)(v15 + 16) & 4) != 0)
    {
      v22 = *v21;
    }
    else
    {
      v23 = *(unsigned __int16 *)v21;
      if (v23 > 0xFF)
        goto LABEL_22;
      v22 = v23;
    }
    v17 = (uint64_t *)(v16 + 8 * v22 + 42216);
  }
  v19 = *v17;
LABEL_25:
  if (*(_DWORD *)v15 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v15, v13);
  else
    *(_DWORD *)v15 -= 2;
  return v19;
}

_BYTE *WebCore::jsCustomElementRegistryPrototypeFunction_whenDefined(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, const char *a4)
{
  WebCore::JSCustomElementRegistry *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;

  v5 = (WebCore::JSCustomElementRegistry *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::rejectPromiseWithThisTypeError(this, (JSC::JSGlobalObject *)"CustomElementRegistry", "whenDefined", a4);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomElementRegistry::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomElementRegistry::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::rejectPromiseWithThisTypeError(this, (JSC::JSGlobalObject *)"CustomElementRegistry", "whenDefined", a4);
  else
    return (_BYTE *)WebCore::JSCustomElementRegistry::whenDefined(v5, this, a2);
}

_BYTE *WebCore::jsCustomElementRegistryPrototypeFunction_upgrade(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  WTF *v21;
  JSValue v24;
  WTF *v25;
  uint64_t v26;
  uint64_t v27;
  JSC::VM *v28;
  WTF *v29;
  uint64_t v30;
  _BYTE v31[40];
  uint64_t v32;
  JSC::JSGlobalObject *v33;
  JSC::VM *v34;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CustomElementRegistry", "upgrade");
  v11 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
  v12 = *(unsigned int *)(v11 + 76);
  v13 = *(_DWORD *)(v11 + 76) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSCustomElementRegistry::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSCustomElementRegistry::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CustomElementRegistry", "upgrade");
  v29 = (WTF *)v31;
  v30 = 4;
  v31[32] = 0;
  v32 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v33 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v29;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v20 = JSC::VM::throwException(v9, this, v24);
  }
  else
  {
    v17 = *((_QWORD *)a2 + 6);
    v34 = v9;
    if ((v17 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v17 + 5) < 0xF0u
      || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v34, 0, "root", 5, "CustomElementRegistry", 22, a8, "upgrade", 8, "Node", 5);
      v20 = 0;
    }
    else
    {
      v19 = *(_WORD *)(v18 + 28);
      if ((v19 & 4) != 0)
      {
        if ((v19 & 8) != 0 && (*(_QWORD *)(v18 + 72) & 0x3000000000000000) == 0x1000000000000000)
          WebCore::CustomElementReactionQueue::tryToUpgradeElement(*(WebCore::Element **)(v17 + 24), a2);
        WebCore::upgradeElementsInShadowIncludingDescendants((_QWORD *)v18, a2);
      }
      v20 = 10;
    }
  }
  if (HIDWORD(v30))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v29, v33);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v32;
    if (HIDWORD(v30))
    {
      v25 = v29;
      v26 = 8 * HIDWORD(v30);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, a2);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v32;
  }
  v21 = v29;
  if (v31 != (_BYTE *)v29 && v29 != 0)
  {
    v29 = 0;
    LODWORD(v30) = 0;
    WTF::fastFree(v21, a2);
  }
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsCustomEventPrototypeFunction_initCustomEvent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  unint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  int i;
  JSC::VM *v18;
  double v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  JSValue v28;
  JSC::VM *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;

  v3 = (uint64_t)this;
  v4 = 0xFFFE000000000002;
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "CustomEvent", "initCustomEvent");
  v7 = (uint64_t)a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCustomEvent::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCustomEvent::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "CustomEvent", "initCustomEvent");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, (JSC::JSGlobalObject *)v3, v28);
  }
  v12 = *(_QWORD *)(v6 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v30);
  v13 = v31;
  if (v31)
  {
    v24 = 0;
    goto LABEL_31;
  }
  if ((unint64_t)(*(int *)(v7 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v15 = *(_QWORD *)(v3 + 56);
    v14 = 10;
LABEL_14:
    i = v14 == 7;
    goto LABEL_15;
  }
  v14 = *(_QWORD *)(v7 + 56);
  v15 = *(_QWORD *)(v3 + 56);
  if (v14 >= 0xFFFE000000000000)
    goto LABEL_51;
  *(_QWORD *)&v16 = v14 - 0x2000000000000;
  if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v14 & 0xFFFE000000000002) == 0)
    {
      i = JSC::JSCell::toBoolean(*(_QWORD *)(v7 + 56), v3);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  for (i = v16 > 0.0 || v16 < 0.0; ; i = v14 != 0)
  {
LABEL_15:
    if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
    {
      v24 = 0;
      goto LABEL_30;
    }
    if ((unint64_t)(*(int *)(v7 + 32) - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v18 = *(JSC::VM **)(v3 + 56);
      v15 = 10;
LABEL_20:
      v3 = v15 == 7;
      goto LABEL_21;
    }
    v15 = *(_QWORD *)(v7 + 64);
    v18 = *(JSC::VM **)(v3 + 56);
    if (v15 >= 0xFFFE000000000000)
    {
      v3 = (_DWORD)v15 != 0;
      goto LABEL_21;
    }
    *(_QWORD *)&v19 = v15 - 0x2000000000000;
    if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v15 & v4) == 0)
      {
        v4 = *(_QWORD *)(v3 + 56);
        v3 = JSC::JSCell::toBoolean(*(_QWORD *)(v7 + 64), v3);
        v18 = (JSC::VM *)v4;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    v3 = v19 > 0.0 || (unint64_t)(v19 < 0.0);
LABEL_21:
    if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
    {
      v24 = 0;
      goto LABEL_30;
    }
    if ((unint64_t)(*(int *)(v7 + 32) - 5) > 0xFFFFFFFFFFFFFFFBLL
      || (v7 = *(_QWORD *)(v7 + 72), v20 = v7, v7 == 10))
    {
      v20 = 2;
      v7 = 10;
    }
    if (!v31)
      break;
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_51:
    ;
  }
  v21 = v30;
  v30 = 0;
  v32 = v21;
  WebCore::CustomEvent::initCustomEvent(v12, (const WTF::AtomString *)&v32, i, v3, v20);
  v23 = v32;
  v32 = 0;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v22);
    else
      *(_DWORD *)v23 -= 2;
  }
  v24 = 10;
LABEL_30:
  v13 = v31;
LABEL_31:
  if (v13 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FCB0[v13])(&v32, &v30);
  return (_BYTE *)v24;
}

uint64_t WebCore::JSChannelMergerNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSChannelMergerNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSChannelMergerNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSChannelMergerNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSChannelMergerNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSChannelSplitterNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSChannelSplitterNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSChannelSplitterNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSChannelSplitterNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSChannelSplitterNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSClipboard::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

void WebCore::DOMPromise::~DOMPromise(WebCore::DOMPromise *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E3392210;
  WebCore::DOMGuardedObject::removeFromGlobalObject((uint64_t)this);
  v3 = *((_QWORD *)this + 3);
  if (v3)
  {
    *(_QWORD *)(v3 + 8) = 3;
    *((_QWORD *)this + 3) = 0;
  }
  v4 = *((_QWORD *)this + 4);
  if (v4)
  {
    *(_QWORD *)(v4 + 8) = 3;
    *((_QWORD *)this + 4) = 0;
  }
  WebCore::ContextDestructionObserver::~ContextDestructionObserver(this, v2);
}

{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  void *v6;

  *(_QWORD *)this = &off_1E3392210;
  WebCore::DOMGuardedObject::removeFromGlobalObject((uint64_t)this);
  v3 = *((_QWORD *)this + 3);
  if (v3)
  {
    *(_QWORD *)(v3 + 8) = 3;
    *((_QWORD *)this + 3) = 0;
  }
  v4 = *((_QWORD *)this + 4);
  if (v4)
  {
    *(_QWORD *)(v4 + 8) = 3;
    *((_QWORD *)this + 4) = 0;
  }
  WebCore::ContextDestructionObserver::~ContextDestructionObserver(this, v2);
  WTF::fastFree(v5, v6);
}

unint64_t WTF::Vector<WTF::KeyValuePair<WTF::String,WTF::Ref<WebCore::DOMPromise,WTF::RawPtrTraits<WebCore::DOMPromise>,WTF::DefaultRefDerefTraits<WebCore::DOMPromise>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 16 * (unint64_t)a1[3] <= a3)
  {
    v9 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<WTF::KeyValuePair<WTF::String,WTF::Ref<WebCore::DOMPromise,WTF::RawPtrTraits<WebCore::DOMPromise>,WTF::DefaultRefDerefTraits<WebCore::DOMPromise>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<WTF::KeyValuePair<WTF::String,WTF::Ref<WebCore::DOMPromise,WTF::RawPtrTraits<WebCore::DOMPromise>,WTF::DefaultRefDerefTraits<WebCore::DOMPromise>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

unsigned int *WTF::Vector<WTF::KeyValuePair<WTF::String,WTF::Ref<WebCore::DOMPromise,WTF::RawPtrTraits<WebCore::DOMPromise>,WTF::DefaultRefDerefTraits<WebCore::DOMPromise>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  unsigned int v2;
  unsigned int *v3;
  WTF *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  unsigned int *v7;
  unsigned int **v8;
  unsigned int **v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;

  if (result[2] < a2)
  {
    v2 = a2;
    if (a2 >> 28)
    {
      __break(0xC471u);
    }
    else
    {
      v3 = result;
      v4 = *(WTF **)result;
      v5 = result[3];
      result = (unsigned int *)WTF::fastMalloc((WTF *)(16 * a2));
      v3[2] = v2;
      *(_QWORD *)v3 = result;
      if ((_DWORD)v5)
      {
        v7 = result;
        v8 = (unsigned int **)((char *)v4 + 16 * v5);
        v9 = (unsigned int **)v4;
        do
        {
          v10 = *v9;
          *v9 = 0;
          *(_QWORD *)v7 = v10;
          v11 = v9[1];
          v9[1] = 0;
          *((_QWORD *)v7 + 1) = v11;
          v12 = v9[1];
          v9[1] = 0;
          if (v12)
          {
            if (v12[4] == 1)
              (*(void (**)(unsigned int *))(*(_QWORD *)v12 + 16))(v12);
            else
              --v12[4];
          }
          result = *v9;
          *v9 = 0;
          if (result)
          {
            if (*result == 2)
              result = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v6);
            else
              *result -= 2;
          }
          v9 += 2;
          v7 += 4;
        }
        while (v9 != v8);
      }
      if (v4)
      {
        if (*(WTF **)v3 == v4)
        {
          *(_QWORD *)v3 = 0;
          v3[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v4, v6);
      }
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10DOMPromiseENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSClipboardItem::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(JSC *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v6;
  unsigned int v7;
  uint64_t *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  int v12;
  objc_class *v13;
  int v14;
  unsigned __int8 *v15;
  unsigned int v16;
  JSC::VM *v17;
  JSC::JSObject *v18;
  JSC::JSGlobalObject *v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  unsigned int v24;
  JSValue v25;
  _QWORD *v26;
  WTF *v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  WTF *v31;
  _OWORD v32[4];
  uint64_t v33;
  JSC::VM *v34;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v34 = v6;
  v29 = 0;
  v30 = 0x800000000;
  v31 = (WTF *)((char *)v32 + 8);
  memset(v32, 0, sizeof(v32));
  v33 = 0;
  v7 = *(_DWORD *)(a3 + 12);
  if (v7 >= 9)
  {
    v29 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v30) == 1;
    v7 = *(_DWORD *)(a3 + 12);
  }
  if (v7)
  {
    v8 = *(uint64_t **)a3;
    for (i = 8 * v7; i; i -= 8)
    {
      v10 = *((_QWORD *)a1 + 7);
      v11 = *v8;
      if (*v8 && (v12 = *(_DWORD *)(v11 + 4)) != 0)
      {
        if (v12 != 1)
          goto LABEL_8;
        v15 = *(unsigned __int8 **)(v11 + 8);
        if ((*(_BYTE *)(v11 + 16) & 4) != 0)
        {
          v16 = *v15;
        }
        else
        {
          v24 = *(unsigned __int16 *)v15;
          if (v24 > 0xFF)
          {
LABEL_8:
            v13 = *(objc_class **)(v10 + 64760);
            if (!v13 || v11 != *((_QWORD *)v13 + 1))
              v13 = (objc_class *)JSC::jsStringWithCacheSlowCase();
            goto LABEL_11;
          }
          v16 = v24;
        }
        v13 = *(objc_class **)(v10 + 8 * v16 + 42216);
      }
      else
      {
        v13 = *(objc_class **)(v10 + 41968);
      }
LABEL_11:
      if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        goto LABEL_40;
      v14 = v30;
      if ((_DWORD)v30 == HIDWORD(v30) || v31 != (WTF *)((char *)v32 + 8) && v31)
      {
        v25.super.isa = v13;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v30, v25) == 1)
          v29 = 1;
      }
      else
      {
        *((_QWORD *)v31 + v30) = v13;
        LODWORD(v30) = v14 + 1;
      }
      ++v8;
    }
  }
  if (v29)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v27 = v31;
    v28 = v30;
    v17 = *(JSC::VM **)(a2 + 56);
    if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
      v19 = 0;
    else
      v19 = (JSC::JSGlobalObject *)JSC::constructArray();
    if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
    {
      v21 = JSC::objectConstructorFreeze(a1, v19, v18);
      goto LABEL_26;
    }
  }
LABEL_40:
  v21 = 0;
LABEL_26:
  v22 = *(uint64_t **)&v32[0];
  if (*(_QWORD *)&v32[0])
  {
    v27 = (WTF *)&v30;
    v26 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v32[0], (uint64_t *)&v27);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v22, v26);
  }
  if (v31 != (WTF *)((char *)v32 + 8) && v31)
    WTF::fastFree(v31, v20);
  return v21;
}

uint64_t WebCore::JSCommandLineAPIHost::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCommandLineAPIHost::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCommandLineAPIHost *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;

  v5 = (WebCore::JSCommandLineAPIHost *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCommandLineAPIHost::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  v9 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v9;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSComment>(WebCore::JSCharacterData *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *v6;
  unint64_t Structure;
  JSC::Structure *v8;
  JSC::JSCell *v9;
  uint64_t v10;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSComment::s_info);
  if (!result)
  {
    v6 = (JSC::JSCell *)WebCore::JSCharacterData::prototype(a1, a2, v5);
    Structure = WebCore::JSCommentPrototype::createStructure((uint64_t *)a1, (uint64_t)a2, v6);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v9 = (JSC::JSCell *)WebCore::JSCommentPrototype::create(a1, a2, Structure, v8);
    v10 = WebCore::JSComment::createStructure((uint64_t *)a1, (uint64_t)a2, v9);
    return WebCore::cacheDOMStructure((JSCell *)a2, v10, (uint64_t)&WebCore::JSComment::s_info);
  }
  return result;
}

uint64_t WebCore::JSComment::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSComment::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSComment *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSComment *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSComment::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCompressionStream::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  JSC::Heap *v7;
  unint64_t SlowCase;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  uint64_t v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  WTF::StringImpl *v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;

  v5 = (_QWORD *)(a1 + 41456);
  v6 = *(_QWORD **)(a1 + 41456);
  v7 = (JSC::Heap *)(a1 + 192);
  SlowCase = v6[2835];
  if (SlowCase >= v6[2836])
  {
    SlowCase = v6[2837];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v31 = *(_QWORD *)(SlowCase + 8) ^ v6[2838];
    v6[2836] = SlowCase + HIDWORD(v31);
    v6[2837] = SlowCase + (int)v31;
  }
  v6[2835] = SlowCase + 64;
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  JSC::InternalFunction::InternalFunction();
  *(_QWORD *)(SlowCase + 48) = 0;
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::CompressionStreamBuiltinsWrapper::compressionStreamInitializeCompressionStreamCodeExecutable((WebCore::CompressionStreamBuiltinsWrapper *)(*v5 + 32));
  JSC::UnlinkedFunctionExecutable::link();
  *(_QWORD *)(SlowCase + 48) = JSC::JSFunction::create();
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(SlowCase + 7))
    JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)SlowCase);
  v9 = *(_QWORD *)(v5[62] + 1768);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v9, 0xFFFE000000000001, 6, (uint64_t)&v32);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create(a1, &v32);
  v12 = v32;
  v32 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  *(_QWORD *)(SlowCase + 32) = v11;
  if (v11 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(SlowCase + 7))
    JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)SlowCase);
  v13 = *(_QWORD *)(v5[62] + 1968);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v13, v11, 6, (uint64_t)&v32);
  v14 = *(_QWORD *)(v5[62] + 2160);
  v15 = *(_QWORD *)(a3 + 3296);
  if (!v15)
    goto LABEL_15;
  v16 = *(_DWORD *)(v15 - 8);
  v17 = ((unint64_t)&WebCore::JSCompressionStream::s_info + ~((_QWORD)&WebCore::JSCompressionStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompressionStream::s_info + ~((_QWORD)&WebCore::JSCompressionStream::s_info << 32)) >> 22);
  v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
  v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
  v20 = v16 & ((v19 >> 31) ^ v19);
  v21 = *(char ***)(v15 + 16 * v20);
  if (v21 != &WebCore::JSCompressionStream::s_info)
  {
    v22 = 1;
    while (v21)
    {
      v20 = ((_DWORD)v20 + v22) & v16;
      v21 = *(char ***)(v15 + 16 * v20);
      ++v22;
      if (v21 == &WebCore::JSCompressionStream::s_info)
        goto LABEL_14;
    }
    goto LABEL_15;
  }
LABEL_14:
  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
  if (!v23)
  {
LABEL_15:
    Structure = WebCore::JSCompressionStreamPrototype::createStructure((uint64_t *)a1, a3, *(JSC::JSCell **)(a3 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v27 = (JSC::JSCell *)WebCore::JSCompressionStreamPrototype::create((WebCore::JSCompressionStreamPrototype *)a1, Structure, v25, v26);
    v28 = WebCore::JSCompressionStream::createStructure((uint64_t *)a1, a3, v27);
    v23 = WebCore::cacheDOMStructure((JSCell *)a3, v28, (uint64_t)&WebCore::JSCompressionStream::s_info);
  }
  v29 = *(_QWORD *)(v23 + 48);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v14, v29, 14, (uint64_t)&v32);
  return SlowCase;
}

uint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::createStructure(uint64_t *a1, int a2, JSC::JSCell *this)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(this);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

unint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::construct(JSC *this, uint64_t a2, JSC::JSObject *a3)
{
  uint64_t *v5;
  JSC::JSGlobalObject *v6;
  JSC::VM *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t SubclassStructure;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  unint64_t SlowCase;
  JSC::Structure *v42;
  uint64_t FunctionRealm;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  JSC::JSObject *v52;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v54;
  JSC::Structure *v55;
  JSC::JSCell *v56;
  uint64_t v57;
  unint64_t v58;
  WTF *v59;
  int v60;
  uint64_t v61;

  v5 = *(uint64_t **)(a2 + 24);
  v6 = *(JSC::JSGlobalObject **)(a2 + 40);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v6 != (JSC::JSGlobalObject *)v5)
  {
    FunctionRealm = JSC::getFunctionRealm(this, *(JSC::JSGlobalObject **)(a2 + 40), a3);
    if (*((_DWORD *)v7 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) != 0)
      return 0;
    v44 = *(_QWORD *)(FunctionRealm + 3296);
    if (v44)
    {
      v45 = *(_DWORD *)(v44 - 8);
      v46 = ((unint64_t)&WebCore::JSCompressionStream::s_info
           + ~((_QWORD)&WebCore::JSCompressionStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompressionStream::s_info
                                                                       + ~((_QWORD)&WebCore::JSCompressionStream::s_info << 32)) >> 22);
      v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
      v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
      v49 = v45 & ((v48 >> 31) ^ v48);
      v50 = *(char ***)(v44 + 16 * v49);
      if (v50 == &WebCore::JSCompressionStream::s_info)
      {
LABEL_44:
        v52 = *(JSC::JSObject **)(v44 + 16 * v49 + 8);
        if (v52)
        {
LABEL_46:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v6, v52, v42);
          goto LABEL_9;
        }
      }
      else
      {
        v51 = 1;
        while (v50)
        {
          v49 = ((_DWORD)v49 + v51) & v45;
          v50 = *(char ***)(v44 + 16 * v49);
          ++v51;
          if (v50 == &WebCore::JSCompressionStream::s_info)
            goto LABEL_44;
        }
      }
    }
    Structure = WebCore::JSCompressionStreamPrototype::createStructure((uint64_t *)v7, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v56 = (JSC::JSCell *)WebCore::JSCompressionStreamPrototype::create(v7, Structure, v54, v55);
    v57 = WebCore::JSCompressionStream::createStructure((uint64_t *)v7, FunctionRealm, v56);
    v52 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v57, (uint64_t)&WebCore::JSCompressionStream::s_info);
    goto LABEL_46;
  }
  v8 = v5[5];
  v9 = *(_QWORD *)(v8 + 3296);
  if (v9)
  {
    v10 = *(_DWORD *)(v9 - 8);
    v11 = ((unint64_t)&WebCore::JSCompressionStream::s_info
         + ~((_QWORD)&WebCore::JSCompressionStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompressionStream::s_info
                                                                     + ~((_QWORD)&WebCore::JSCompressionStream::s_info << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = *(char ***)(v9 + 16 * v14);
    if (v15 == &WebCore::JSCompressionStream::s_info)
    {
LABEL_7:
      v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (v17)
        goto LABEL_11;
    }
    else
    {
      v16 = 1;
      while (v15)
      {
        v14 = ((_DWORD)v14 + v16) & v10;
        v15 = *(char ***)(v9 + 16 * v14);
        ++v16;
        if (v15 == &WebCore::JSCompressionStream::s_info)
          goto LABEL_7;
      }
    }
  }
  v18 = WebCore::JSCompressionStreamPrototype::createStructure(*((uint64_t **)this + 7), v5[5], *(JSC::JSCell **)(v8 + 656));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSCompressionStreamPrototype::create(v7, v18, v19, v20);
  v22 = WebCore::JSCompressionStream::createStructure((uint64_t *)v7, v8, v21);
  SubclassStructure = WebCore::cacheDOMStructure((JSCell *)v8, v22, (uint64_t)&WebCore::JSCompressionStream::s_info);
LABEL_9:
  v17 = SubclassStructure;
  if (!SubclassStructure)
    return 0;
  v8 = v5[5];
LABEL_11:
  v24 = *(_QWORD *)(v8 + 56);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 512);
  if (v27)
    goto LABEL_31;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_16;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_16:
  v30 = *(_QWORD *)(v28 + 2824);
  if (!*(_QWORD *)(v30 + 512))
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v59, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v59, v24 + 192, v24 + 1872, 24, 8, &v61);
    v33 = v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v59;
    v59 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v35 = *(_QWORD *)(v30 + 512);
    *(_QWORD *)(v30 + 512) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v26 + 512);
  *(_QWORD *)(v26 + 512) = v27;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v28);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_31:
  SlowCase = v27[3];
  if (SlowCase >= v27[4])
  {
    SlowCase = v27[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_33;
    }
    v58 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v58);
    v27[5] = SlowCase + (int)v58;
  }
  v27[3] = SlowCase + 32;
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v17);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v59 = (WTF *)(a2 + 48);
  v60 = *(_DWORD *)(a2 + 32) - 1;
  JSC::call();
  return SlowCase;
}

uint64_t WebCore::JSCompressionStreamEncoder::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

__n128 _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_21IDLUnrestrictedDoubleENS_12IDLDOMStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6StringEEEEEUlTyvE_JNSD_17integral_constantIlLl0EEENSL_IlLl1EEEEEET_SO_@<Q0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  double i;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  __n128 result;
  __int128 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;

  v4 = **a1;
  if (v4)
    goto LABEL_13;
  v5 = a1[4];
  if (*((_DWORD *)v5 + 2))
    goto LABEL_31;
  for (i = *(double *)v5; ; i = NAN)
  {
    if ((*(_QWORD *)&i & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v7 = (int)i, i == (double)(int)v7)
      && ((_DWORD)v7 || (*(_QWORD *)&i & 0x8000000000000000) == 0))
    {
      v8 = v7 | 0xFFFE000000000000;
    }
    else
    {
      v8 = *(_QWORD *)&i + 0x2000000000000;
    }
    v9 = a1[1];
    if (!*((_BYTE *)v9 + 8))
      *((_BYTE *)v9 + 8) = 1;
    *v9 = v8;
    v4 = **a1;
LABEL_13:
    if (v4 != 1)
      break;
    v10 = a1[4];
    if (*((_DWORD *)v10 + 2) == 1)
    {
      v11 = a1[2][7];
      v12 = *v10;
      if (*v10 && (v13 = *(_DWORD *)(v12 + 4)) != 0)
      {
        if (v13 != 1)
          goto LABEL_18;
        v18 = *(unsigned __int8 **)(v12 + 8);
        if ((*(_BYTE *)(v12 + 16) & 4) != 0)
        {
          v19 = *v18;
          goto LABEL_28;
        }
        v20 = *(unsigned __int16 *)v18;
        if (v20 > 0xFF)
        {
LABEL_18:
          v14 = *(_QWORD *)(v11 + 64760);
          if (!v14 || v12 != *(_QWORD *)(v14 + 8))
            v14 = JSC::jsStringWithCacheSlowCase();
        }
        else
        {
          v19 = v20;
LABEL_28:
          v14 = *(_QWORD *)(v11 + 8 * v19 + 42216);
        }
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 41968);
      }
      v15 = a1[1];
      if (!*((_BYTE *)v15 + 8))
        *((_BYTE *)v15 + 8) = 1;
      *v15 = v14;
      break;
    }
LABEL_31:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  result = *(__n128 *)a1;
  v17 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 32) = a1[4];
  return result;
}

uint64_t WebCore::JSConstantSourceNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConstantSourceNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSConstantSourceNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSConstantSourceNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSConstantSourceNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

_QWORD *WebCore::cacheWrapper<WebCore::ConstantSourceNode,WebCore::JSConstantSourceNode>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *Allocator;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v18;
  uint64_t v19;

  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::ConstantSourceNode *)::owner = (uint64_t)&off_1E3251540;
  }
  v3 = (_QWORD *)(a2 + 8);
  if (!a2)
    v3 = 0;
  if (*(_DWORD *)(a1 + 48))
  {
    v6 = (uint64_t *)(a1 + 32);
    v19 = a2;
    if (a3)
    {
      v13 = (uint64_t *)(a1 + 32);
      if ((a3 & 8) != 0)
        v10 = (a3 - 112) | 1;
      else
        v10 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v10 & 1) != 0)
        v11 = v10 + 47;
      else
        v11 = *(_QWORD *)v10 + 32;
      Allocator = *(_QWORD **)(v11 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v11 + 16) = *Allocator;
      *Allocator = a3;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::ConstantSourceNode *)::owner;
      Allocator[2] = a1;
      v6 = v13;
    }
    else
    {
      Allocator = 0;
    }
    v18 = Allocator;
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v6, &v19, (uint64_t *)&v18);
    if (v18)
      v18[1] = 3;
  }
  else
  {
    if (a3)
    {
      v12 = v3;
      if ((a3 & 8) != 0)
        v8 = (a3 - 112) | 1;
      else
        v8 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v8 & 1) != 0)
        v9 = v8 + 47;
      else
        v9 = *(_QWORD *)v8 + 32;
      result = *(_QWORD **)(v9 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v9 + 16) = *result;
      *result = a3;
      result[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::ConstantSourceNode *)::owner;
      result[2] = a1;
      v3 = v12;
    }
    else
    {
      result = 0;
    }
    v5 = *v3;
    *v3 = result;
    if (v5)
      *(_QWORD *)(v5 + 8) = 3;
  }
  return result;
}

uint64_t WebCore::JSContactsManager::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConvolverNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConvolverNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSConvolverNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSConvolverNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSConvolverNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

WTF::StringImpl *WTF::VectorDestructor<true,WebCore::CookieListItem>::destruct(WTF::StringImpl *result, WTF::StringImpl *a2)
{
  WTF::StringImpl **v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;

  if (result != a2)
  {
    v3 = (WTF::StringImpl **)result;
    do
    {
      v4 = v3[3];
      v3[3] = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      v5 = v3[2];
      v3[2] = 0;
      if (v5)
      {
        if (*(_DWORD *)v5 == 2)
          WTF::StringImpl::destroy(v5, a2);
        else
          *(_DWORD *)v5 -= 2;
      }
      v6 = v3[1];
      v3[1] = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, a2);
        else
          *(_DWORD *)v6 -= 2;
      }
      result = *v3;
      *v3 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v3 += 7;
    }
    while (v3 != (WTF::StringImpl **)a2);
  }
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert<WebCore::CookieListItem,0ul>(JSC *a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  JSC::VM *v6;
  unsigned int v7;
  double *v8;
  uint64_t v9;
  objc_class *v10;
  int v11;
  BOOL v12;
  JSValue v13;
  void *v14;
  JSC::VM *v15;
  JSC::JSObject *v16;
  JSC::JSGlobalObject *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v21;
  WTF *v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  WTF *v26;
  _OWORD v27[4];
  uint64_t v28;
  JSC::VM *v29;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v29 = v6;
  v24 = 0;
  v25 = 0x800000000;
  v26 = (WTF *)((char *)v27 + 8);
  memset(v27, 0, sizeof(v27));
  v28 = 0;
  v7 = *(_DWORD *)(a3 + 12);
  if (v7 >= 9)
  {
    v24 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v25) == 1;
    v7 = *(_DWORD *)(a3 + 12);
    if (v7)
    {
LABEL_3:
      v8 = *(double **)a3;
      v9 = 56 * v7;
      do
      {
        v10 = (objc_class *)WebCore::convertDictionaryToJS((uint64_t)a1, a2, v8);
        if (*((_DWORD *)v6 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            goto LABEL_34;
        }
        v11 = v25;
        if ((_DWORD)v25 != HIDWORD(v25) && (v26 != (WTF *)((char *)v27 + 8) ? (v12 = v26 == 0) : (v12 = 1), v12))
        {
          *((_QWORD *)v26 + v25) = v10;
          LODWORD(v25) = v11 + 1;
        }
        else
        {
          v13.super.isa = v10;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v25, v13) == 1)
            v24 = 1;
        }
        v8 += 7;
        v9 -= 56;
      }
      while (v9);
    }
  }
  else if (v7)
  {
    goto LABEL_3;
  }
  if (v24)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v22 = v26;
    v23 = v25;
    v15 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
      v17 = 0;
    else
      v17 = (JSC::JSGlobalObject *)JSC::constructArray();
    if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
    {
      v18 = JSC::objectConstructorFreeze(a1, v17, v16);
      goto LABEL_24;
    }
  }
LABEL_34:
  v18 = 0;
LABEL_24:
  v19 = *(uint64_t **)&v27[0];
  if (*(_QWORD *)&v27[0])
  {
    v22 = (WTF *)&v25;
    v21 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v27[0], (uint64_t *)&v22);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v19, v21);
  }
  if (v26 != (WTF *)((char *)v27 + 8) && v26)
    WTF::fastFree(v26, v14);
  return v18;
}

uint64_t WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  uint64_t result;
  WTF::StringImpl *v6;
  void *v7;
  unsigned int v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  WTF::StringImpl **v11;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    result = (uint64_t)v9;
    v9 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v6);
      else
        *(_DWORD *)result -= 2;
    }
    *(_DWORD *)(a3 + 16) = 1;
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = &v9;
    result = JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::CookieListItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a1, a2, (uint64_t *)&v11);
    if (*((_DWORD *)v4 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v4), (result & 1) != 0))
    {
      v8 = HIDWORD(v10);
      result = (uint64_t)v9;
      *(_DWORD *)(a3 + 16) = 1;
      if (v8)
      {
        WTF::VectorDestructor<true,WebCore::CookieListItem>::destruct((WTF::StringImpl *)result, (WTF::StringImpl *)(result + 56 * v8));
        result = (uint64_t)v9;
      }
      if (result)
      {
        v9 = 0;
        LODWORD(v10) = 0;
        return WTF::fastFree((WTF *)result, v7);
      }
    }
    else
    {
      *(_QWORD *)a3 = v9;
      *(_QWORD *)(a3 + 8) = v10;
      *(_DWORD *)(a3 + 16) = 0;
    }
  }
  return result;
}

uint64_t JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::CookieListItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  JSC::JSCell *IndexQuickly;
  JSC::JSCell *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = *((_QWORD *)a1 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a2, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a2, a1, (i - 1));
      if (*(_DWORD *)(v6 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        if ((result & 1) != 0)
          break;
      }
      v16 = v6;
      result = WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CookieListItem>>::convert((int)&v16, a1, IndexQuickly, *a3);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        v15 = i | 0xFFFE000000000000;
        if (i < 0)
          v15 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        return JSC::iteratorClose();
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v13 = (JSC::JSCell *)JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          if ((result & 1) != 0)
            break;
        }
        v16 = v6;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CookieListItem>>::convert((int)&v16, a1, v13, *a3);
        if (*(_QWORD *)(v6 + 16))
          return JSC::iteratorClose();
      }
    }
  }
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CookieListItem>>::convert(int a1, WebCore::JSDOMGlobalObject *this, JSC::JSCell *a3, uint64_t a4)
{
  uint64_t result;
  WTF::StringImpl *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  __int128 v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int16 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int16 v30;
  unsigned int v31;

  result = WebCore::convertDictionary<WebCore::CookieListItem>(this, a3, (uint64_t)&v27);
  v7 = v31;
  if (!v31)
  {
    v8 = v27;
    v23 = v27;
    v9 = v28;
    v27 = 0u;
    v28 = 0u;
    v24 = v9;
    v25 = v29;
    v26 = v30;
    v10 = *(unsigned int *)(a4 + 12);
    if ((_DWORD)v10 == *(_DWORD *)(a4 + 8))
    {
      v11 = WTF::Vector<WebCore::CookieListItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a4, v10 + 1, (unint64_t)&v23);
      v12 = *(_QWORD *)a4 + 56 * *(unsigned int *)(a4 + 12);
      v13 = *(_QWORD *)v11;
      *(_QWORD *)v11 = 0;
      *(_QWORD *)v12 = v13;
      v14 = *((_QWORD *)v11 + 1);
      *((_QWORD *)v11 + 1) = 0;
      *(_QWORD *)(v12 + 8) = v14;
      v15 = *((_QWORD *)v11 + 2);
      *((_QWORD *)v11 + 2) = 0;
      *(_QWORD *)(v12 + 16) = v15;
      v16 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v11 + 3) = 0;
      *(_QWORD *)(v12 + 24) = v16;
      LOWORD(v16) = *((_WORD *)v11 + 24);
      *(_OWORD *)(v12 + 32) = *((_OWORD *)v11 + 2);
      *(_WORD *)(v12 + 48) = v16;
      v17 = (WTF::StringImpl *)*((_QWORD *)&v24 + 1);
      ++*(_DWORD *)(a4 + 12);
      *((_QWORD *)&v24 + 1) = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v6);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
    else
    {
      v18 = *(_QWORD *)a4 + 56 * v10;
      *(_QWORD *)&v23 = 0;
      *(_QWORD *)v18 = v8;
      *((_QWORD *)&v23 + 1) = 0;
      *(_QWORD *)(v18 + 8) = *((_QWORD *)&v8 + 1);
      *(_QWORD *)&v24 = 0;
      *(_OWORD *)(v18 + 16) = v9;
      v19 = v25;
      *(_WORD *)(v18 + 48) = v26;
      *(_OWORD *)(v18 + 32) = v19;
      ++*(_DWORD *)(a4 + 12);
      *((_QWORD *)&v24 + 1) = 0;
    }
    v20 = (WTF::StringImpl *)v24;
    *(_QWORD *)&v24 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v6);
      else
        *(_DWORD *)v20 -= 2;
    }
    v21 = (WTF::StringImpl *)*((_QWORD *)&v23 + 1);
    *((_QWORD *)&v23 + 1) = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v6);
      else
        *(_DWORD *)v21 -= 2;
    }
    v22 = (WTF::StringImpl *)v23;
    *(_QWORD *)&v23 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v6);
      else
        *(_DWORD *)v22 -= 2;
    }
    return ((uint64_t (*)(__int128 *, __int128 *))off_1E3250AC8[v7])(&v23, &v27);
  }
  if (v31 != -1)
    return ((uint64_t (*)(__int128 *, __int128 *))off_1E3250AC8[v7])(&v23, &v27);
  return result;
}

char *WTF::Vector<WebCore::CookieListItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  unsigned int v18;
  uint64_t v19;
  void *v20;

  v3 = a3;
  v5 = *(WTF::StringImpl **)a1;
  if (*(_QWORD *)a1 > a3
    || (v6 = (WTF::StringImpl *)((char *)v5 + 56 * *(unsigned int *)(a1 + 12)), (unint64_t)v6 <= a3))
  {
    v14 = *(unsigned int *)(a1 + 8);
    v15 = v14 + (v14 >> 2);
    if (v15 >= 0x10)
      v16 = v15 + 1;
    else
      v16 = 16;
    if (v16 <= a2)
      v16 = a2;
    if (v16 > v14)
    {
      if (v16 >= 0x4924925)
      {
        __break(0xC471u);
        JUMPOUT(0x1949748B4);
      }
      v17 = (WTF::StringImpl *)((char *)v5 + 56 * *(unsigned int *)(a1 + 12));
      v18 = 56 * v16;
      v19 = WTF::fastMalloc((WTF *)(56 * v16));
      *(_DWORD *)(a1 + 8) = v18 / 0x38;
      *(_QWORD *)a1 = v19;
      WTF::VectorMover<false,WebCore::CookieListItem>::move(v5, v17, v19);
      if (v5)
      {
        if (*(WTF::StringImpl **)a1 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v20);
      }
    }
  }
  else
  {
    v7 = *(unsigned int *)(a1 + 8);
    v8 = v7 + (v7 >> 2);
    if (v8 >= 0x10)
      v9 = v8 + 1;
    else
      v9 = 16;
    if (v9 <= a2)
      v9 = a2;
    if (v9 <= v7)
    {
      v13 = *(WTF::StringImpl **)a1;
    }
    else
    {
      if (v9 >= 0x4924925)
      {
        __break(0xC471u);
        JUMPOUT(0x1949748BCLL);
      }
      v10 = 56 * v9;
      v11 = WTF::fastMalloc((WTF *)(56 * v9));
      *(_DWORD *)(a1 + 8) = v10 / 0x38;
      *(_QWORD *)a1 = v11;
      WTF::VectorMover<false,WebCore::CookieListItem>::move(v5, v6, v11);
      v13 = *(WTF::StringImpl **)a1;
      if (v5)
      {
        if (v13 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v12);
        v13 = *(WTF::StringImpl **)a1;
      }
    }
    return (char *)v13 + 8 * ((uint64_t)(v3 - (_QWORD)v5) >> 3);
  }
  return (char *)v3;
}

WTF::StringImpl *WTF::VectorMover<false,WebCore::CookieListItem>::move(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t a3)
{
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;

  if (result != a2)
  {
    v5 = result;
    do
    {
      v6 = *(WTF::StringImpl **)v5;
      *(_QWORD *)v5 = 0;
      *(_QWORD *)a3 = v6;
      v7 = *((_QWORD *)v5 + 1);
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a3 + 8) = v7;
      v8 = *((_QWORD *)v5 + 2);
      *((_QWORD *)v5 + 2) = 0;
      *(_QWORD *)(a3 + 16) = v8;
      v9 = *((_QWORD *)v5 + 3);
      *((_QWORD *)v5 + 3) = 0;
      *(_QWORD *)(a3 + 24) = v9;
      v10 = *((_OWORD *)v5 + 2);
      *(_WORD *)(a3 + 48) = *((_WORD *)v5 + 24);
      *(_OWORD *)(a3 + 32) = v10;
      v11 = (WTF::StringImpl *)*((_QWORD *)v5 + 3);
      *((_QWORD *)v5 + 3) = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, a2);
        else
          *(_DWORD *)v11 -= 2;
      }
      v12 = (WTF::StringImpl *)*((_QWORD *)v5 + 2);
      *((_QWORD *)v5 + 2) = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, a2);
        else
          *(_DWORD *)v12 -= 2;
      }
      v13 = (WTF::StringImpl *)*((_QWORD *)v5 + 1);
      *((_QWORD *)v5 + 1) = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, a2);
        else
          *(_DWORD *)v13 -= 2;
      }
      result = *(WTF::StringImpl **)v5;
      *(_QWORD *)v5 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v5 = (WTF::StringImpl *)((char *)v5 + 56);
      a3 += 56;
    }
    while (v5 != a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14CookieListItemENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCookieStore::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCookieStoreManager::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCountQueuingStrategy::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  JSC::Heap *v7;
  unint64_t SlowCase;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  uint64_t v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  WTF::StringImpl *v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;

  v5 = (_QWORD *)(a1 + 41456);
  v6 = *(_QWORD **)(a1 + 41456);
  v7 = (JSC::Heap *)(a1 + 192);
  SlowCase = v6[2835];
  if (SlowCase >= v6[2836])
  {
    SlowCase = v6[2837];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v31 = *(_QWORD *)(SlowCase + 8) ^ v6[2838];
    v6[2836] = SlowCase + HIDWORD(v31);
    v6[2837] = SlowCase + (int)v31;
  }
  v6[2835] = SlowCase + 64;
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  JSC::InternalFunction::InternalFunction();
  *(_QWORD *)(SlowCase + 48) = 0;
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::ByteLengthQueuingStrategyBuiltinsWrapper::byteLengthQueuingStrategyInitializeByteLengthQueuingStrategyCodeExecutable((WebCore::ByteLengthQueuingStrategyBuiltinsWrapper *)(*v5 + 512));
  JSC::UnlinkedFunctionExecutable::link();
  *(_QWORD *)(SlowCase + 48) = JSC::JSFunction::create();
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(SlowCase + 7))
    JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)SlowCase);
  v9 = *(_QWORD *)(v5[62] + 1768);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v9, 0xFFFE000000000001, 6, (uint64_t)&v32);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create(a1, &v32);
  v12 = v32;
  v32 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  *(_QWORD *)(SlowCase + 32) = v11;
  if (v11 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(SlowCase + 7))
    JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)SlowCase);
  v13 = *(_QWORD *)(v5[62] + 1968);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v13, v11, 6, (uint64_t)&v32);
  v14 = *(_QWORD *)(v5[62] + 2160);
  v15 = *(_QWORD *)(a3 + 3296);
  if (!v15)
    goto LABEL_15;
  v16 = *(_DWORD *)(v15 - 8);
  v17 = ((unint64_t)&WebCore::JSCountQueuingStrategy::s_info
       + ~((_QWORD)&WebCore::JSCountQueuingStrategy::s_info << 32)) ^ (((unint64_t)&WebCore::JSCountQueuingStrategy::s_info
                                                                      + ~((_QWORD)&WebCore::JSCountQueuingStrategy::s_info << 32)) >> 22);
  v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
  v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
  v20 = v16 & ((v19 >> 31) ^ v19);
  v21 = *(char ***)(v15 + 16 * v20);
  if (v21 != &WebCore::JSCountQueuingStrategy::s_info)
  {
    v22 = 1;
    while (v21)
    {
      v20 = ((_DWORD)v20 + v22) & v16;
      v21 = *(char ***)(v15 + 16 * v20);
      ++v22;
      if (v21 == &WebCore::JSCountQueuingStrategy::s_info)
        goto LABEL_14;
    }
    goto LABEL_15;
  }
LABEL_14:
  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
  if (!v23)
  {
LABEL_15:
    Structure = WebCore::JSCountQueuingStrategyPrototype::createStructure((uint64_t *)a1, a3, *(JSC::JSCell **)(a3 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v27 = (JSC::JSCell *)WebCore::JSCountQueuingStrategyPrototype::create((WebCore::JSCountQueuingStrategyPrototype *)a1, Structure, v25, v26);
    v28 = WebCore::JSCountQueuingStrategy::createStructure((uint64_t *)a1, a3, v27);
    v23 = WebCore::cacheDOMStructure((JSCell *)a3, v28, (uint64_t)&WebCore::JSCountQueuingStrategy::s_info);
  }
  v29 = *(_QWORD *)(v23 + 48);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v14, v29, 14, (uint64_t)&v32);
  return SlowCase;
}

uint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::createStructure(uint64_t *a1, int a2, JSC::JSCell *this)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(this);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

unint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::construct(JSC *this, uint64_t a2, JSC::JSObject *a3)
{
  uint64_t *v5;
  JSC::JSGlobalObject *v6;
  JSC::VM *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t SubclassStructure;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  unint64_t SlowCase;
  JSC::Structure *v42;
  uint64_t FunctionRealm;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  JSC::JSObject *v52;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v54;
  JSC::Structure *v55;
  JSC::JSCell *v56;
  uint64_t v57;
  unint64_t v58;
  WTF *v59;
  int v60;
  uint64_t v61;

  v5 = *(uint64_t **)(a2 + 24);
  v6 = *(JSC::JSGlobalObject **)(a2 + 40);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v6 != (JSC::JSGlobalObject *)v5)
  {
    FunctionRealm = JSC::getFunctionRealm(this, *(JSC::JSGlobalObject **)(a2 + 40), a3);
    if (*((_DWORD *)v7 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) != 0)
      return 0;
    v44 = *(_QWORD *)(FunctionRealm + 3296);
    if (v44)
    {
      v45 = *(_DWORD *)(v44 - 8);
      v46 = ((unint64_t)&WebCore::JSCountQueuingStrategy::s_info
           + ~((_QWORD)&WebCore::JSCountQueuingStrategy::s_info << 32)) ^ (((unint64_t)&WebCore::JSCountQueuingStrategy::s_info
                                                                          + ~((_QWORD)&WebCore::JSCountQueuingStrategy::s_info << 32)) >> 22);
      v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
      v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
      v49 = v45 & ((v48 >> 31) ^ v48);
      v50 = *(char ***)(v44 + 16 * v49);
      if (v50 == &WebCore::JSCountQueuingStrategy::s_info)
      {
LABEL_44:
        v52 = *(JSC::JSObject **)(v44 + 16 * v49 + 8);
        if (v52)
        {
LABEL_46:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v6, v52, v42);
          goto LABEL_9;
        }
      }
      else
      {
        v51 = 1;
        while (v50)
        {
          v49 = ((_DWORD)v49 + v51) & v45;
          v50 = *(char ***)(v44 + 16 * v49);
          ++v51;
          if (v50 == &WebCore::JSCountQueuingStrategy::s_info)
            goto LABEL_44;
        }
      }
    }
    Structure = WebCore::JSCountQueuingStrategyPrototype::createStructure((uint64_t *)v7, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v56 = (JSC::JSCell *)WebCore::JSCountQueuingStrategyPrototype::create(v7, Structure, v54, v55);
    v57 = WebCore::JSCountQueuingStrategy::createStructure((uint64_t *)v7, FunctionRealm, v56);
    v52 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v57, (uint64_t)&WebCore::JSCountQueuingStrategy::s_info);
    goto LABEL_46;
  }
  v8 = v5[5];
  v9 = *(_QWORD *)(v8 + 3296);
  if (v9)
  {
    v10 = *(_DWORD *)(v9 - 8);
    v11 = ((unint64_t)&WebCore::JSCountQueuingStrategy::s_info
         + ~((_QWORD)&WebCore::JSCountQueuingStrategy::s_info << 32)) ^ (((unint64_t)&WebCore::JSCountQueuingStrategy::s_info
                                                                        + ~((_QWORD)&WebCore::JSCountQueuingStrategy::s_info << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = *(char ***)(v9 + 16 * v14);
    if (v15 == &WebCore::JSCountQueuingStrategy::s_info)
    {
LABEL_7:
      v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (v17)
        goto LABEL_11;
    }
    else
    {
      v16 = 1;
      while (v15)
      {
        v14 = ((_DWORD)v14 + v16) & v10;
        v15 = *(char ***)(v9 + 16 * v14);
        ++v16;
        if (v15 == &WebCore::JSCountQueuingStrategy::s_info)
          goto LABEL_7;
      }
    }
  }
  v18 = WebCore::JSCountQueuingStrategyPrototype::createStructure(*((uint64_t **)this + 7), v5[5], *(JSC::JSCell **)(v8 + 656));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSCountQueuingStrategyPrototype::create(v7, v18, v19, v20);
  v22 = WebCore::JSCountQueuingStrategy::createStructure((uint64_t *)v7, v8, v21);
  SubclassStructure = WebCore::cacheDOMStructure((JSCell *)v8, v22, (uint64_t)&WebCore::JSCountQueuingStrategy::s_info);
LABEL_9:
  v17 = SubclassStructure;
  if (!SubclassStructure)
    return 0;
  v8 = v5[5];
LABEL_11:
  v24 = *(_QWORD *)(v8 + 56);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 1736);
  if (v27)
    goto LABEL_31;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_16;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_16:
  v30 = *(_QWORD *)(v28 + 2824);
  if (!*(_QWORD *)(v30 + 1736))
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v59, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v59, v24 + 192, v24 + 1872, 24, 8, &v61);
    v33 = v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v59;
    v59 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v35 = *(_QWORD *)(v30 + 1736);
    *(_QWORD *)(v30 + 1736) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v26 + 1736);
  *(_QWORD *)(v26 + 1736) = v27;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v28);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_31:
  SlowCase = v27[3];
  if (SlowCase >= v27[4])
  {
    SlowCase = v27[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_33;
    }
    v58 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v58);
    v27[5] = SlowCase + (int)v58;
  }
  v27[3] = SlowCase + 32;
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v17);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v59 = (WTF *)(a2 + 48);
  v60 = *(_DWORD *)(a2 + 32) - 1;
  JSC::call();
  return SlowCase;
}

uint64_t WebCore::JSCredentialsContainer::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSCrypto>(WebCore::JSCrypto *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSCrypto::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSCrypto::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSCrypto::s_info);
  }
  return result;
}

uint64_t WebCore::JSCrypto::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 5760);
  *(_QWORD *)(a1 + 5760) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSCrypto::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCrypto *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = (WebCore::JSCrypto *)*((_QWORD *)a2 + 7);
  v6 = JSC::allocateCell<WebCore::JSCrypto>(v5, a2);
  result = WebCore::JSDOMObject::JSDOMObject(v6, a1);
  v8 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t *WebCore::cacheWrapper<WebCore::Crypto,WebCore::JSCrypto>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *result;
  uint64_t v5;
  uint64_t v6;

  if ((byte_1EE334FD8 & 1) == 0)
  {
    qword_1EE334FD0 = (uint64_t)&off_1E324F850;
    byte_1EE334FD8 = 1;
  }
  v3 = (uint64_t *)(a1 + 32);
  v6 = a2;
  JSC::Weak<JSC::JSObject>::Weak(&v5, a3, (uint64_t)&qword_1EE334FD0, a1);
  result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v3, &v6, &v5);
  if (v5)
    *(_QWORD *)(v5 + 8) = 3;
  return result;
}

unint64_t JSC::allocateCell<WebCore::JSCrypto>(WebCore::JSCrypto *a1, JSC::VM *a2)
{
  _QWORD *v2;
  unint64_t result;
  unint64_t v4;

  v2 = (_QWORD *)WebCore::JSCrypto::subspaceForImpl(a1, a2);
  result = v2[3];
  if (result >= v2[4])
  {
    result = v2[5];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v4 = *(_QWORD *)(result + 8) ^ v2[6];
    v2[4] = result + HIDWORD(v4);
    v2[5] = result + (int)v4;
  }
  v2[3] = result + 32;
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

uint64_t WebCore::JSCryptoKey::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CryptoKeyAlgorithmENS8_21CryptoAesKeyAlgorithmENS8_20CryptoEcKeyAlgorithmENS8_22CryptoHmacKeyAlgorithmENS8_27CryptoRsaHashedKeyAlgorithmENS8_21CryptoRsaKeyAlgorithmEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJS9_SA_SB_SC_SD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CryptoKeyAlgorithmENS8_21CryptoAesKeyAlgorithmENS8_20CryptoEcKeyAlgorithmENS8_22CryptoHmacKeyAlgorithmENS8_27CryptoRsaHashedKeyAlgorithmENS8_21CryptoRsaKeyAlgorithmEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJS9_SA_SB_SC_SD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CryptoKeyAlgorithmENS8_21CryptoAesKeyAlgorithmENS8_20CryptoEcKeyAlgorithmENS8_22CryptoHmacKeyAlgorithmENS8_27CryptoRsaHashedKeyAlgorithmENS8_21CryptoRsaKeyAlgorithmEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJS9_SA_SB_SC_SD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CryptoKeyAlgorithmENS8_21CryptoAesKeyAlgorithmENS8_20CryptoEcKeyAlgorithmENS8_22CryptoHmacKeyAlgorithmENS8_27CryptoRsaHashedKeyAlgorithmENS8_21CryptoRsaKeyAlgorithmEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJS9_SA_SB_SC_SD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CryptoKeyAlgorithmENS8_21CryptoAesKeyAlgorithmENS8_20CryptoEcKeyAlgorithmENS8_22CryptoHmacKeyAlgorithmENS8_27CryptoRsaHashedKeyAlgorithmENS8_21CryptoRsaKeyAlgorithmEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJS9_SA_SB_SC_SD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  _DWORD *v4;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (_DWORD *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v4)
  {
    if (*v4 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*v4;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CryptoKeyAlgorithmENS8_21CryptoAesKeyAlgorithmENS8_20CryptoEcKeyAlgorithmENS8_22CryptoHmacKeyAlgorithmENS8_27CryptoRsaHashedKeyAlgorithmENS8_21CryptoRsaKeyAlgorithmEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJS9_SA_SB_SC_SD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl **a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = a2[2];
  a2[2] = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)v3;
  }
  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLEnumeration<WebCore::CryptoKeyUsage>>>::convert<WebCore::CryptoKeyUsage,0ul>(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  JSC::VM *v6;
  unsigned int v7;
  unsigned int *v8;
  uint64_t v9;
  objc_class *v10;
  int v11;
  BOOL v12;
  JSValue v13;
  void *v14;
  JSC::VM *v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v19;
  WTF *v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  WTF *v24;
  _OWORD v25[4];
  uint64_t v26;
  JSC::VM *v27;

  v6 = *(JSC::VM **)(a1 + 56);
  v27 = v6;
  v22 = 0;
  v23 = 0x800000000;
  v24 = (WTF *)((char *)v25 + 8);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  v7 = *((_DWORD *)a3 + 3);
  if (v7 >= 9)
  {
    v22 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v23) == 1;
    v7 = *((_DWORD *)a3 + 3);
    if (v7)
    {
LABEL_3:
      v8 = *a3;
      v9 = 4 * v7;
      do
      {
        v10 = (objc_class *)WebCore::convertEnumerationToJS<WebCore::CryptoKeyUsage>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*v8);
        if (*((_DWORD *)v6 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            goto LABEL_30;
        }
        v11 = v23;
        if ((_DWORD)v23 != HIDWORD(v23) && (v24 != (WTF *)((char *)v25 + 8) ? (v12 = v24 == 0) : (v12 = 1), v12))
        {
          *((_QWORD *)v24 + v23) = v10;
          LODWORD(v23) = v11 + 1;
        }
        else
        {
          v13.super.isa = v10;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v23, v13) == 1)
            v22 = 1;
        }
        ++v8;
        v9 -= 4;
      }
      while (v9);
    }
  }
  else if (v7)
  {
    goto LABEL_3;
  }
  if (v22)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v20 = v24;
    v21 = v23;
    v15 = *(JSC::VM **)(a2 + 56);
    if (!*((_DWORD *)v15 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) == 0)
    {
      v16 = JSC::constructArray();
      goto LABEL_22;
    }
  }
LABEL_30:
  v16 = 0;
LABEL_22:
  v17 = *(uint64_t **)&v25[0];
  if (*(_QWORD *)&v25[0])
  {
    v20 = (WTF *)&v23;
    v19 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v25[0], (uint64_t *)&v20);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v17, v19);
  }
  if (v24 != (WTF *)((char *)v25 + 8) && v24)
    WTF::fastFree(v24, v14);
  return v16;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDOMString>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  double v5;
  int v6;
  JSC::VM *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v14;
  int v15;
  WTF::StringImpl *v16;
  unint64_t v17;

  if (!(this >> 49))
  {
    v17 = this;
    v7 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v17, a1);
LABEL_14:
      if (*((_DWORD *)v7 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v7);
        v9 = v16;
        if (hasExceptionsAfterHandlingTraps)
        {
          v15 = 1;
          v16 = 0;
          if (v9)
          {
            if (*(_DWORD *)v9 == 2)
              WTF::StringImpl::destroy(v9, v12);
            else
              *(_DWORD *)v9 -= 2;
          }
          v10 = 1;
          v11 = 1;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = v16;
      }
      v10 = 0;
      v11 = 0;
      v15 = 0;
      v14 = 0;
      *(_QWORD *)(a3 + 8) = v9;
      *(_DWORD *)(a3 + 16) = 1;
LABEL_17:
      *(_DWORD *)(a3 + 24) = v10;
      return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E324FDC0[v11])(&v17, &v14);
    }
    v8 = *(WTF::StringImpl **)(this + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v8)
        goto LABEL_13;
    }
    else if (!v8)
    {
LABEL_13:
      v16 = v8;
      goto LABEL_14;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_13;
  }
  result = *((_QWORD *)a1 + 7);
  if (this <= 0xFFFDFFFFFFFFFFFFLL)
    *(_QWORD *)&v5 = this - 0x2000000000000;
  else
    v5 = (double)(int)this;
  if (*(_DWORD *)(result + 80)
    && (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result), (result & 1) != 0))
  {
    v6 = 1;
  }
  else
  {
    v6 = 0;
    *(double *)(a3 + 8) = v5;
    *(_DWORD *)(a3 + 16) = 0;
  }
  *(_DWORD *)(a3 + 24) = v6;
  return result;
}

WTF::StringImpl *WebCore::Detail::ConversionResultStorage<std::variant<double,WebCore::EffectTiming>>::ConversionResultStorage<WebCore::EffectTiming>(WebCore::Detail::ConversionResultStorage<WebCore::EffectTiming> &&)::{lambda(void)#1}::operator()(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v4;
  __int128 v5;
  WTF::StringImpl *v6;
  __int16 v7;
  WTF::StringImpl *v8;
  int v9;
  __int128 v10;
  _BYTE v11[8];
  int v12;
  __int128 v13;
  __int128 v14;
  WTF::StringImpl *v15;
  __int16 v16;
  char v17;
  _BYTE v18[8];
  _BYTE v19[8];
  int v20;
  __int128 v21;
  __int128 v22;
  WTF::StringImpl *v23;
  __int16 v24;
  int v25;
  uint64_t v26;

  v2 = result;
  v26 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(a2 + 72))
  {
    *((_DWORD *)result + 22) = 1;
  }
  else
  {
    v11[0] = 0;
    v12 = -1;
    v4 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v4 != -1)
    {
      ((void (*)(_BYTE *, _BYTE *, uint64_t))off_1E3250898[v4])(v18, v11, a2 + 8);
      v12 = v4;
    }
    v5 = *(_OWORD *)(a2 + 40);
    v13 = *(_OWORD *)(a2 + 24);
    v14 = v5;
    v6 = *(WTF::StringImpl **)(a2 + 56);
    *(_QWORD *)(a2 + 56) = 0;
    v15 = v6;
    v7 = *(_WORD *)(a2 + 64);
    v16 = v7;
    v19[0] = 0;
    v20 = -1;
    if ((_DWORD)v4 != -1)
    {
      ((void (*)(char *, _BYTE *, _BYTE *))off_1E3250898[v4])(&v17, v19, v11);
      v20 = v4;
      v6 = v15;
      v7 = v16;
    }
    v21 = v13;
    v22 = v14;
    v15 = 0;
    v23 = v6;
    v24 = v7;
    v25 = 1;
    *((_BYTE *)v2 + 16) = 0;
    v8 = (WTF::StringImpl *)((char *)v2 + 16);
    *((_DWORD *)v2 + 20) = -1;
    *((_DWORD *)v2 + 6) = -1;
    if ((_DWORD)v4 == -1)
    {
      v9 = 1;
    }
    else
    {
      ((void (*)(char *))off_1E3250898[v4])(&v17);
      *((_DWORD *)v2 + 6) = v4;
      v6 = v23;
      v7 = v24;
      v9 = v25;
    }
    v10 = v22;
    *((_OWORD *)v2 + 2) = v21;
    *((_OWORD *)v2 + 3) = v10;
    v23 = 0;
    *((_QWORD *)v2 + 8) = v6;
    *((_WORD *)v2 + 36) = v7;
    *((_DWORD *)v2 + 20) = 1;
    *((_DWORD *)v2 + 22) = 0;
    if (v9 != -1)
      ((void (*)(char *, _BYTE *))off_1E32508C8[v9])(&v17, v19);
    v25 = -1;
    result = v15;
    v15 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
    if (v12 != -1)
      return (WTF::StringImpl *)((uint64_t (*)(char *, _BYTE *))off_1E3250888[v12])(&v17, v11);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore12EffectTimingENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *result;
  uint64_t v4;
  char v5;

  result = *(WTF::StringImpl **)(a2 + 48);
  *(_QWORD *)(a2 + 48) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  v4 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v4 != -1)
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E3250888[v4])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJdN7WebCore12EffectTimingEEEENS9_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSE_1EJSB_SC_EEEEEEDcSG_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 72);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32508C8[v3])(&v5, a2 + 8);
  *(_DWORD *)(a2 + 72) = -1;
  return result;
}

uint64_t WebCore::JSCustomEffect::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCustomElementRegistry::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

_DWORD *WebCore::ScriptController::createScriptInstanceForWidget@<X0>(_DWORD *this@<X0>, WebCore::Widget *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;

  v4 = (void *)*((_QWORD *)a2 + 5);
  if (v4)
  {
    WebCore::ScriptController::createRootObject((uint64_t)this, *((void **)a2 + 5), (uint64_t *)&v10);
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v4, "createPluginBindingsInstance:", &v10);
    }
    else if ((objc_opt_respondsToSelector() & 1) != 0
           && (v5 = (const void *)objc_msgSend(v4, "objectForWebScript")) != 0)
    {
      v6 = (uint64_t)v10;
      v10 = 0;
      v8 = (_DWORD *)v6;
      JSC::Bindings::ObjcInstance::create(v5, (uint64_t *)&v8, &v9);
      v7 = v8;
      *a3 = v9;
      v8 = 0;
      if (v7)
      {
        if (v7[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
        else
          --v7[2];
      }
    }
    else
    {
      *a3 = 0;
    }
    this = v10;
    v10 = 0;
    if (this)
    {
      if (this[2] == 1)
        return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)this + 8))(this);
      else
        --this[2];
    }
  }
  else
  {
    *a3 = 0;
  }
  return this;
}

void sub_194976730(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _DWORD *a10, uint64_t a11, _DWORD *a12)
{
  if (a10)
  {
    if (a10[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)a10 + 8))(a10);
    else
      --a10[2];
  }
  if (a12)
  {
    if (a12[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)a12 + 8))(a12);
    else
      --a12[2];
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::ScriptController::windowScriptObject(WebCore::ScriptController *this)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t result;
  WTF::ThreadGroup ***v9;
  WTF::RunLoop *v11;
  WTF::RunLoop *v12;
  WebCore::DOMWrapperWorld *v13;
  id v14;
  id v15;
  const void *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = (_QWORD *)*((_QWORD *)this + 2);
  v3 = v2[37];
  if (v3 && (*(_BYTE *)(v3 + 268) & 0x10) != 0)
    return 0;
  v4 = v2[3];
  if (!v4 || !*(_QWORD *)(v4 + 8))
    return 0;
  v5 = *(_QWORD *)(v2[35] + 16);
  v6 = v2[17];
  v7 = *(_BYTE *)(v6 + 245) ? *(_BYTE *)(v6 + 244) != 0 : (*(_QWORD *)(v6 + 688) >> 52) & 1;
  if (!(*(unsigned int (**)(uint64_t, _BOOL8))(*(_QWORD *)v5 + 968))(v5, v7))
    return 0;
  result = *((_QWORD *)this + 8);
  if (result)
    return result;
  v9 = (WTF::ThreadGroup ***)WebCore::g_commonVMOrNull;
  if (!WebCore::g_commonVMOrNull)
  {
    WTF::RunLoop::webIfExists(0);
    JSC::VM::create();
    v9 = (WTF::ThreadGroup ***)v20;
    WebCore::g_commonVMOrNull = v20;
    if (__ldaxr((unsigned int *)(v20 + 1096)))
    {
      __clrex();
    }
    else if (!__stlxr(4u, (unsigned int *)(v20 + 1096)))
    {
LABEL_16:
      if (webThreadStarted == 1)
        *(_BYTE *)(*(_QWORD *)(v20 + 112) + 5) = 1;
      WTF::ThreadGroup::addCurrentThread(*v9[73]);
      WebCore::JSVMClientData::initNormalWorld((JSC::VM *)v9, 0);
      goto LABEL_19;
    }
    JSC::Heap::acquireAccessSlow((JSC::Heap *)(v20 + 192));
    goto LABEL_16;
  }
LABEL_19:
  MEMORY[0x19AEA3294](&v19, v9);
  v11 = (WTF::RunLoop *)WebCore::ScriptController::bindingRootObject(this);
  v12 = v11;
  {
    v17 = WebCore::g_commonVMOrNull;
    if (WebCore::g_commonVMOrNull)
    {
LABEL_35:
      v13 = *(WebCore::DOMWrapperWorld **)(*(_QWORD *)(v17 + 41456) + 16);
      WebCore::mainThreadNormalWorld(void)::cachedNormalWorld = (uint64_t)v13;
      goto LABEL_21;
    }
    WTF::RunLoop::webIfExists(v11);
    JSC::VM::create();
    v17 = v20;
    WebCore::g_commonVMOrNull = v20;
    if (__ldaxr((unsigned int *)(v20 + 1096)))
    {
      __clrex();
    }
    else if (!__stlxr(4u, (unsigned int *)(v20 + 1096)))
    {
LABEL_32:
      if (webThreadStarted == 1)
        *(_BYTE *)(*(_QWORD *)(v17 + 112) + 5) = 1;
      WTF::ThreadGroup::addCurrentThread(**(WTF::ThreadGroup ***)(v17 + 584));
      WebCore::JSVMClientData::initNormalWorld((JSC::VM *)v17, 0);
      goto LABEL_35;
    }
    JSC::Heap::acquireAccessSlow((JSC::Heap *)(v17 + 192));
    goto LABEL_32;
  }
  v13 = (WebCore::DOMWrapperWorld *)WebCore::mainThreadNormalWorld(void)::cachedNormalWorld;
LABEL_21:
  v14 = +[WebScriptObject scriptObjectForJSObject:originRootObject:rootObject:](WebScriptObject, "scriptObjectForJSObject:originRootObject:rootObject:", WebCore::WindowProxy::jsWindowProxy(*(WebCore::WindowProxy **)(*((_QWORD *)this + 2) + 112), v13), v12, v12);
  v15 = v14;
  if (v14)
    CFRetain(v14);
  v16 = (const void *)*((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = v15;
  if (v16)
    CFRelease(v16);
  MEMORY[0x19AEA32A0](&v19);
  return *((_QWORD *)this + 8);
}

uint64_t WebCore::ScriptController::javaScriptContext(WebCore::ScriptController *this)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;

  v2 = (_QWORD *)*((_QWORD *)this + 2);
  v3 = v2[37];
  if (v3 && (*(_BYTE *)(v3 + 268) & 0x10) != 0)
    return 0;
  v4 = v2[3];
  if (!v4 || !*(_QWORD *)(v4 + 8))
    return 0;
  v5 = *(_QWORD *)(v2[35] + 16);
  v6 = v2[17];
  v7 = *(_BYTE *)(v6 + 245) ? *(_BYTE *)(v6 + 244) != 0 : (*(_QWORD *)(v6 + 688) >> 52) & 1;
  if (!(*(unsigned int (**)(uint64_t, _BOOL8))(*(_QWORD *)v5 + 968))(v5, v7))
    return 0;
  v8 = (void *)MEMORY[0x1E0CBE0F0];
  v9 = *(uint64_t **)(WebCore::ScriptController::bindingRootObject(this) + 24);
  if (v9)
    v10 = *v9;
  else
    v10 = 0;
  return objc_msgSend(v8, "contextWithJSGlobalContextRef:", v10);
}

WebCore::CustomStateSet *WebCore::JSCustomStateSet::destroy(WebCore::JSCustomStateSet *this, JSC::JSCell *a2)
{
  WebCore::CustomStateSet *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::CustomStateSet *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      WebCore::CustomStateSet::~CustomStateSet(result, a2);
      return (WebCore::CustomStateSet *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

uint64_t WebCore::JSCustomStateSet::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCustomStateSetPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCustomStateSetPrototype::create(WebCore::JSCustomStateSetPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t Direct;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  JSC::Structure *v16;
  int v17;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  JSC::Structure **v24;
  int *v25;
  int v26;
  int v27;
  JSC::Structure *v28;
  int v29;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 4865) = SlowCase + (int)v19;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<10u>(this, (uint64_t)&WebCore::JSCustomStateSet::s_info, (uint64_t)&WebCore::JSCustomStateSetPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = v6[381];
  v10 = *(_QWORD *)(v9 + 2712);
  Direct = JSC::JSObject::getDirect(SlowCase, this, *(_QWORD *)(*(_QWORD *)(v9 + 48) + 3024));
  v20 = 0;
  v21 = SlowCase;
  v22 = 0x1000000FFFFFFFFLL;
  v23 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v10, Direct, 4, (uint64_t)&v20);
  v12 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create((uint64_t)this, &v20);
  v15 = v20;
  v20 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  v16 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v29 = *(_DWORD *)SlowCase;
  v28 = v16;
  v17 = JSC::Structure::outOfLineCapacity(v16);
  v26 = 0;
  v27 = v17;
  v20 = (WTF::StringImpl *)&v27;
  v21 = SlowCase;
  v22 = (uint64_t)this;
  v23 = &v29;
  v24 = &v28;
  v25 = &v26;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v16, this, v12, 6, (uint64_t)&v20);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v26, v14);
  *((_DWORD *)v16 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomStateSet>,(WebCore::DOMConstructorID)425>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3400);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomStateSet>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCustomStateSet::s_info + ~((_QWORD)&WebCore::JSCustomStateSet::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomStateSet::s_info + ~((_QWORD)&WebCore::JSCustomStateSet::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCustomStateSet::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCustomStateSet::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCustomStateSetPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCustomStateSetPrototype::create((WebCore::JSCustomStateSetPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCustomStateSet::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCustomStateSet::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3400) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCustomStateSetConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCustomStateSetPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomStateSet>,(WebCore::DOMConstructorID)425>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCustomStateSet_size(WebCore *this, JSC::JSGlobalObject *a2, JSC::JSObject *a3)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  _DWORD *v9;
  JSC::Structure *v10;
  WTF::StringImpl *v11;
  uint64_t v12;

  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCustomStateSet::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCustomStateSet::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeGetterTypeError();
  WebCore::getBackingSet((unint64_t)this, a2, a3);
  v9 = (_DWORD *)MEMORY[0x1E0CBEBC8];
  *MEMORY[0x1E0CBEBC8] += 2;
  v12 = JSC::JSObject::get(v10, this, (unint64_t)v9);
  if (*v9 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBC8], v11);
  else
    *v9 -= 2;
  return v12;
}

uint64_t WebCore::JSCustomStateSetOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSCustomStateSetOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::CustomStateSet *v3;
  int v4;
  bmalloc::api *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::CustomStateSet *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v3 = *(WebCore::CustomStateSet **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 2);
  *((_DWORD *)v3 + 2) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v7 = (uint64_t *)(a3 + 32);
    v8 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v8 - 8);
      v11 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::CustomStateSet **)(v8 + 16 * v14);
      if (v15 != v3)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::CustomStateSet **)(v8 + 16 * v14);
          ++v16;
          if (v15 == v3)
            goto LABEL_12;
        }
        v14 = *(unsigned int *)(v8 - 4);
      }
LABEL_12:
      if (v14 != *(_DWORD *)(v8 - 4))
      {
        v17 = (_QWORD *)(v8 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v7 - 16);
        v21 = *v7;
        if (*v7)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v7;
        if (*v7)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v7, v25 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 2) - 1;
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 2) = v4;
  }
  else
  {
    WebCore::CustomStateSet::~CustomStateSet(v3, a2);
    bmalloc::api::isoDeallocate(v5, v6);
  }
}

unint64_t WebCore::wrap<WebCore::CustomStateSet>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  WTF *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  WTF *v55;
  int v56;
  unint64_t v57;
  _QWORD *v58;
  WTF *v59;

  v5 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v5 + 48))
  {
    v49 = *(_QWORD *)(v5 + 32);
    if (!v49)
      goto LABEL_5;
    v50 = *(_DWORD *)(v49 - 8);
    v51 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v52 = 9 * ((v51 + ~(v51 << 13)) ^ ((v51 + ~(v51 << 13)) >> 8));
    v53 = (v52 ^ (v52 >> 15)) + ~((v52 ^ (v52 >> 15)) << 27);
    v54 = v50 & ((v53 >> 31) ^ v53);
    v55 = *(WTF **)(v49 + 16 * v54);
    if (v55 != a3)
    {
      v56 = 1;
      while (v55)
      {
        v54 = ((_DWORD)v54 + v56) & v50;
        v55 = *(WTF **)(v49 + 16 * v54);
        ++v56;
        if (v55 == a3)
          goto LABEL_62;
      }
      goto LABEL_5;
    }
LABEL_62:
    v6 = *(_QWORD *)(v49 + 16 * v54 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)a3;
    if (!*(_QWORD *)a3)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*((_DWORD *)a3 + 2);
  v8 = *(_QWORD *)(a2 + 3296);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSCustomStateSet::s_info + ~((_QWORD)&WebCore::JSCustomStateSet::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomStateSet::s_info + ~((_QWORD)&WebCore::JSCustomStateSet::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSCustomStateSet::s_info)
    {
LABEL_10:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_12;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSCustomStateSet::s_info)
          goto LABEL_10;
      }
    }
  }
  v17 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSCustomStateSetPrototype::createStructure(v17, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSCustomStateSetPrototype::create((WebCore::JSCustomStateSetPrototype *)v17, Structure, v19, v20);
  v22 = WebCore::JSCustomStateSet::createStructure(v17, a2, v21);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSCustomStateSet::s_info);
LABEL_12:
  v23 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(v23 + 41456);
  v25 = *(_QWORD *)(v24 + 23536);
  v26 = *(_QWORD **)(v25 + 3480);
  if (v26)
    goto LABEL_32;
  v27 = *(_QWORD *)(v24 + 22648);
  if (__ldaxr((unsigned __int8 *)v27))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v27))
  {
    goto LABEL_17;
  }
  MEMORY[0x19AEA534C](v27);
LABEL_17:
  v29 = *(_QWORD *)(v27 + 2824);
  if (!*(_QWORD *)(v29 + 3480))
  {
    v30 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v59, "IsoSpace T");
    v58 = 0;
    MEMORY[0x19AEA3204](v30, &v59, v23 + 192, v23 + 1872, 32, 8, &v58);
    v32 = (uint64_t)v58;
    v58 = 0;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = v59;
    v59 = 0;
    if (v33)
    {
      if (*(_DWORD *)v33 == 1)
        WTF::fastFree(v33, v31);
      else
        --*(_DWORD *)v33;
    }
    v34 = *(_QWORD *)(v29 + 3480);
    *(_QWORD *)(v29 + 3480) = v30;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  }
  v26 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v25 + 3480);
  *(_QWORD *)(v25 + 3480) = v26;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528](v36, v35);
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v27);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_31;
  }
  if (__stlxr(0, (unsigned __int8 *)v27))
LABEL_31:
    WTF::Lock::unlockSlow((WTF::Lock *)v27);
LABEL_32:
  SlowCase = v26[3];
  if (SlowCase < v26[4])
  {
LABEL_33:
    v26[3] = SlowCase + 32;
    goto LABEL_34;
  }
  SlowCase = v26[5];
  if ((SlowCase & 1) == 0)
  {
    v57 = *(_QWORD *)(SlowCase + 8) ^ v26[6];
    v26[4] = SlowCase + HIDWORD(v57);
    v26[5] = SlowCase + (int)v57;
    goto LABEL_33;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v23 + 755))
    __dmb(0xAu);
  v40 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE335058 & 1) == 0)
  {
    qword_1EE335050 = (uint64_t)&off_1E3259AD8;
    byte_1EE335058 = 1;
  }
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE335050;
    Allocator[2] = v40;
    v44 = *(_QWORD *)a3;
    *(_QWORD *)a3 = Allocator;
    if (!v44)
      return SlowCase;
LABEL_56:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v59 = a3;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &qword_1EE335050;
  v48[2] = v40;
  v58 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v59, (uint64_t *)&v58);
  v44 = (uint64_t)v58;
  if (v58)
    goto LABEL_56;
  return SlowCase;
}

WebCore::JSCustomXPathNSResolver *WebCore::JSCustomXPathNSResolver::JSCustomXPathNSResolver(WebCore::JSCustomXPathNSResolver *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *Allocator;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 2) = 1;
  *(_QWORD *)this = &unk_1E3484580;
  *((_QWORD *)this + 2) = &off_1E33A18C0;
  *((_QWORD *)this + 3) = 0;
  WebCore::ContextDestructionObserver::observeContext((WebCore::JSCustomXPathNSResolver *)((char *)this + 16), v6);
  *(_QWORD *)this = off_1E3251C70;
  *((_QWORD *)this + 2) = &unk_1E3251CA8;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  Allocator = 0;
  if (a3)
  {
    v16 = v8;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v8 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  if (a2)
  {
    v17 = v8;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v7 + 1;
    v10[2] = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 4) = v7;
  return this;
}

void WebCore::JSCustomXPathNSResolver::~JSCustomXPathNSResolver(WebCore::JSCustomXPathNSResolver *this, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  WTF *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;

  v3 = *((_QWORD *)this + 3);
  if (v3
    && (v4 = *(_QWORD *)(v3 + 8)) != 0
    && (v5 = v4 - 96, !(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v4 - 96) + 88))(v4 - 96)))
  {
    v9 = *((_QWORD *)this + 4);
    v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
    *v10 = &off_1E3226900;
    v10[1] = v9;
    v12 = v10;
    v13 = 1;
    (*(void (**)(uint64_t, _QWORD **))(*(_QWORD *)v5 + 336))(v5, &v12);
    v11 = v12;
    v12 = 0;
    if (v11)
      (*(void (**)(_QWORD *))(*v11 + 8))(v11);
  }
  else
  {
    v6 = (WTF *)*((_QWORD *)this + 4);
    if (v6)
    {
      v7 = *((_QWORD *)v6 + 2);
      if (v7)
      {
        *(_QWORD *)(v7 + 8) = 3;
        *((_QWORD *)v6 + 2) = 0;
      }
      JSC::WeakHandleOwner::~WeakHandleOwner((WTF *)((char *)v6 + 8));
      if (*(_QWORD *)v6)
      {
        *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
        *(_QWORD *)v6 = 0;
      }
      WTF::fastFree(v6, v8);
    }
  }
  WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::JSCustomXPathNSResolver *)((char *)this + 16), a2);
}

{
  WTF *v2;
  void *v3;

  WebCore::JSCustomXPathNSResolver::~JSCustomXPathNSResolver(this, a2);
  WTF::fastFree(v2, v3);
}

void `non-virtual thunk to'WebCore::JSCustomXPathNSResolver::~JSCustomXPathNSResolver(WebCore::JSCustomXPathNSResolver *this, void *a2)
{
  WebCore::JSCustomXPathNSResolver::~JSCustomXPathNSResolver((WebCore::JSCustomXPathNSResolver *)((char *)this - 16), a2);
}

{
  WTF *v2;
  void *v3;

  WebCore::JSCustomXPathNSResolver::~JSCustomXPathNSResolver((WebCore::JSCustomXPathNSResolver *)((char *)this - 16), a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSCustomXPathNSResolver::lookupNamespaceURIForBindings@<X0>(WebCore::JSCustomXPathNSResolver *this@<X0>, const WTF::AtomString *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  JSValue v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  JSC::JSGlobalObject *v20;
  uint64_t v21;
  JSC::Structure *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  uint64_t *v27;
  uint64_t result;
  unsigned int v29;
  _QWORD *v30;
  WTF::StringImpl *v31;
  unsigned int v32;
  uint64_t v33;
  char v34[8];
  uint64_t v35;
  WTF *v36;
  _OWORD v37[4];
  uint64_t v38;
  _BYTE v39[15];
  char v40;

  ++*((_DWORD *)this + 2);
  v6 = **((_QWORD **)this + 4);
  if (!v6 || (*(_BYTE *)(v6 + 8) & 3) != 0)
    v7 = 0;
  else
    v7 = *(JSC::JSGlobalObject **)v6;
  MEMORY[0x19AEA3294](v39, *((_QWORD *)v7 + 7));
  v34[0] = 0;
  v35 = 0x800000000;
  v36 = (WTF *)((char *)v37 + 8);
  memset(v37, 0, sizeof(v37));
  v38 = 0;
  v8 = *(_QWORD *)a2;
  if (!*(_QWORD *)a2)
  {
    v13 = 0;
    v12 = 2;
    goto LABEL_18;
  }
  v9 = *((_QWORD *)v7 + 7);
  v10 = (uint64_t *)(v9 + 41968);
  v11 = *(_DWORD *)(v8 + 4);
  if (!v11)
    goto LABEL_16;
  if (v11 == 1)
  {
    v15 = *(unsigned __int8 **)(v8 + 8);
    if ((*(_BYTE *)(v8 + 16) & 4) != 0)
    {
      v16 = *v15;
    }
    else
    {
      v29 = *(unsigned __int16 *)v15;
      if (v29 > 0xFF)
        goto LABEL_7;
      v16 = v29;
    }
    v10 = (uint64_t *)(v9 + 8 * v16 + 42216);
LABEL_16:
    v12 = *v10;
LABEL_17:
    v13 = 0;
    goto LABEL_18;
  }
LABEL_7:
  v12 = *(_QWORD *)(v9 + 64760);
  if (v12 && v8 == *(_QWORD *)(v12 + 8))
    goto LABEL_17;
  v12 = JSC::jsStringWithCacheSlowCase();
  v13 = v35;
  if (v36 == (WTF *)((char *)v37 + 8))
  {
LABEL_18:
    *((_QWORD *)v37 + v13 + 1) = v12;
    LODWORD(v35) = v13 + 1;
    goto LABEL_19;
  }
  v14.super.isa = (Class)v12;
  if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v35, v14) == 1)
    v34[0] = 1;
LABEL_19:
  v33 = 0;
  v17 = (uint64_t *)*((_QWORD *)this + 4);
  WTF::AtomStringImpl::addLiteral();
  v19 = *v17;
  if (!*v17 || (*(_BYTE *)(v19 + 8) & 3) != 0 || (v20 = *(JSC::JSGlobalObject **)v19) == 0)
  {
    v23 = 0;
    if (!v31)
      goto LABEL_30;
    goto LABEL_28;
  }
  v21 = v17[2];
  if (!v21 || (*(_BYTE *)(v21 + 8) & 3) != 0)
    v22 = 0;
  else
    v22 = *(JSC::Structure **)v21;
  v23 = WebCore::JSCallbackData::invokeCallback(v20, v22, 10, (uint64_t)v34, 2, v31, &v33);
  if (v31)
  {
LABEL_28:
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v18);
    else
      *(_DWORD *)v31 -= 2;
  }
LABEL_30:
  if (v33)
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*((_QWORD *)this + 4) + 16) & 0xFFFFFFFE) + 0x28), v33, 0, 0, 0);
    *a3 = 1;
    a3[2] = 1;
    goto LABEL_35;
  }
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(v7, v23, (uint64_t)&v31);
  v25 = v32;
  if (!v32)
  {
    v26 = v31;
    v31 = 0;
    *(_QWORD *)a3 = v26;
    a3[2] = 0;
LABEL_34:
    ((void (*)(char *, WTF::StringImpl **))off_1E325A258[v25])(&v40, &v31);
    goto LABEL_35;
  }
  *a3 = 1;
  a3[2] = 1;
  if ((_DWORD)v25 != -1)
    goto LABEL_34;
LABEL_35:
  v27 = *(uint64_t **)&v37[0];
  if (*(_QWORD *)&v37[0])
  {
    v31 = (WTF::StringImpl *)&v35;
    v30 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v37[0], (uint64_t *)&v31);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v27, v30);
  }
  if (v36 != (WTF *)((char *)v37 + 8) && v36)
    WTF::fastFree(v36, v24);
  result = MEMORY[0x19AEA32A0](v39);
  if (*((_DWORD *)this + 2) == 1)
    return (*(uint64_t (**)(WebCore::JSCustomXPathNSResolver *))(*(_QWORD *)this + 8))(this);
  --*((_DWORD *)this + 2);
  return result;
}

uint64_t WebCore::JSDOMApplicationCache::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMApplicationCachePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMApplicationCachePrototype::create(WebCore::JSDOMApplicationCachePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<19u>(this, (uint64_t)&WebCore::JSDOMApplicationCache::s_info, (uint64_t)&WebCore::JSDOMApplicationCachePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMApplicationCache>,(WebCore::DOMConstructorID)706>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5648);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMApplicationCache>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSDOMApplicationCache::s_info
         + ~((_QWORD)&WebCore::JSDOMApplicationCache::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMApplicationCache::s_info
                                                                       + ~((_QWORD)&WebCore::JSDOMApplicationCache::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSDOMApplicationCache::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSDOMApplicationCache::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSDOMApplicationCachePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSDOMApplicationCachePrototype::create((WebCore::JSDOMApplicationCachePrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSDOMApplicationCache::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSDOMApplicationCache::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  JSC::reifyStaticProperties<6u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMApplicationCache::s_info, &WebCore::JSDOMApplicationCacheConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5648) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMApplicationCacheConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMApplicationCachePrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMApplicationCache>,(WebCore::DOMConstructorID)706>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMApplicationCache_status(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  int v13;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (!v2)
    return 0xFFFE000000000000;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 0xFFFE000000000000;
  v4 = *(_QWORD *)(v3 + 72);
  if (!v4)
    return 0xFFFE000000000000;
  v5 = *(_QWORD *)(v4 + 8);
  if (!v5)
    return 0xFFFE000000000000;
  if (*(_BYTE *)(v5 + 178))
  {
    result = 105;
    __break(0xC471u);
    return result;
  }
  v6 = *(_QWORD *)(v5 + 240);
  if (!v6)
    return 0xFFFE000000000000;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7)
    return 0xFFFE000000000000;
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 280) + 88);
  if (!v8)
    return 0xFFFE000000000000;
  v9 = *(_QWORD *)(v8 + 2872);
  if (!v9)
    return 0xFFFE000000000000;
  v10 = *(_QWORD *)(v9 + 40);
  if (!v10)
    return 0xFFFE000000000000;
  result = 0xFFFE000000000002;
  v12 = *(_QWORD *)(*(_QWORD *)(v10 + 8) + 8);
  v13 = *(_DWORD *)(v12 + 72);
  if (v13)
  {
    if (v13 == 1)
      return result;
    if (v13 == 2)
      return 0xFFFE000000000003;
    return 0xFFFE000000000000;
  }
  if (*(_BYTE *)(v12 + 156))
    return 0xFFFE000000000005;
  if (v10 == *(_QWORD *)(v12 + 80))
    return 0xFFFE000000000001;
  return 0xFFFE000000000004;
}

uint64_t WebCore::jsDOMApplicationCache_onchecking(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 392), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_onchecking(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 392), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_onerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_onerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 784), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_onnoupdate(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 1344), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_onnoupdate(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1344), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_ondownloading(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 648), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_ondownloading(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 648), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_onprogress(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 1584), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_onprogress(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1584), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_onupdateready(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 2208), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_onupdateready(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 2208), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_oncached(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 336), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_oncached(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 336), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDOMApplicationCache_onobsolete(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (uint64_t)v5 + 24;
  ++*((_DWORD *)v5 + 6);
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v9 + 1352), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v6, v11);
  return v10;
}

uint64_t WebCore::setJSDOMApplicationCache_onobsolete(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v11 + 6);
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1352), a3, (_DWORD *)a2);
  WTF::RefCounted<WebCore::DOMApplicationCache>::deref((uint64_t)v11 + 24, v15);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::JSDOMApplicationCacheOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 32);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Window";
    a5[1] = 22;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194979B94);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

uint64_t WebCore::JSDOMApplicationCacheOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v27;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = v3 + 24;
  ++*(_DWORD *)(v3 + 24);
  v5 = v3 + 8;
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v7 = (uint64_t *)(a3 + 32);
    v8 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v8 - 8);
      v11 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(_QWORD *)(v8 + 16 * v14);
      if (v15 != v3)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(_QWORD *)(v8 + 16 * v14);
          ++v16;
          if (v15 == v3)
            goto LABEL_12;
        }
        v14 = *(unsigned int *)(v8 - 4);
      }
LABEL_12:
      if (v14 != *(_DWORD *)(v8 - 4))
      {
        v17 = (_QWORD *)(v8 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v7 - 16);
        v21 = *v7;
        if (*v7)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v7;
        if (*v7)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
          {
            v27 = v4;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v7, v25 >> 1, 0);
            v4 = v27;
          }
        }
      }
    }
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  return WTF::RefCounted<WebCore::DOMApplicationCache>::deref(v4, a2);
}

unint64_t WebCore::wrap<WebCore::DOMApplicationCache>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  WTF *v62;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v51 = *(_QWORD *)(v5 + 32);
    if (!v51)
      goto LABEL_5;
    v52 = *(_DWORD *)(v51 - 8);
    v53 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
    v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
    v56 = v52 & ((v55 >> 31) ^ v55);
    v57 = *(_QWORD *)(v51 + 16 * v56);
    if (v57 != a3)
    {
      v58 = 1;
      while (v57)
      {
        v56 = ((_DWORD)v56 + v58) & v52;
        v57 = *(_QWORD *)(v51 + 16 * v56);
        ++v58;
        if (v57 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v51 + 16 * v56 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 8);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  if (*(uint64_t (***)(WebCore::DOMApplicationCache *__hidden))a3 != off_1E33F7F90)
  {
    __break(0xC471u);
    JUMPOUT(0x19497A22CLL);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSDOMApplicationCache::s_info
         + ~((_QWORD)&WebCore::JSDOMApplicationCache::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMApplicationCache::s_info
                                                                       + ~((_QWORD)&WebCore::JSDOMApplicationCache::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSDOMApplicationCache::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSDOMApplicationCache::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSDOMApplicationCachePrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSDOMApplicationCachePrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSDOMApplicationCache::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSDOMApplicationCache::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 5728);
  if (v27)
    goto LABEL_36;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v60 = *(_QWORD *)(v30 + 5728);
  if (!v60)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v62, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v62, v24 + 192, v24 + 1872, 32, 8, &v61);
    v33 = (uint64_t)v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v62;
    v62 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v60 = v31;
    v35 = *(_QWORD *)(v30 + 5728);
    *(_QWORD *)(v30 + 5728) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      v37 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v28 + 2832, v36 + 1, (unint64_t)&v60);
      v36 = *(unsigned int *)(v28 + 2844);
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = *v37;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
    }
    *(_DWORD *)(v28 + 2844) = v36 + 1;
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v26 + 5728);
  *(_QWORD *)(v26 + 5728) = v27;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v28);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_36:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_37:
    v27[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v59 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v59);
    v27[5] = SlowCase + (int)v59;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a2 + 415);
  if ((byte_1EE335068 & 1) == 0)
  {
    qword_1EE335060 = (uint64_t)&off_1E3259B08;
    byte_1EE335068 = 1;
  }
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE335060;
    Allocator[2] = v42;
    v46 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = Allocator;
    if (!v46)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v62 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &qword_1EE335060;
  v50[2] = v42;
  v61 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v62, (uint64_t *)&v61);
  v46 = (uint64_t)v61;
  if (v61)
    goto LABEL_60;
  return SlowCase;
}

uint64_t WebCore::JSDOMAudioSession::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 32);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMAudioSessionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMAudioSessionPrototype::create(WebCore::JSDOMAudioSessionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  JSC::Structure *v25;
  int v26;
  unint64_t v28;
  WTF::StringImpl *v29[6];
  int v30;
  int v31;
  JSC::Structure *v32;
  int v33;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v28 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v28);
    *((_QWORD *)this + 4865) = SlowCase + (int)v28;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSDOMAudioSession::s_info, &WebCore::JSDOMAudioSessionPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19497A894);
  }
  v10 = (int *)((char *)this + 93124);
  v11 = v9 - 192;
  if (!v9)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 704);
  if ((v12 & 0x10000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v13 = v29[0];
    v14 = *v10;
    *v10 = 1;
    LODWORD(v29[0]) = -1;
    WORD2(v29[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v14;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v15);
      else
        *(_DWORD *)v13 -= 2;
    }
  }
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v16 && *(_BYTE *)(v16 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19497A8B4);
  }
  v17 = v16 - 192;
  if (!v16)
    v17 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v17 + 680) + 704) & 0x10000000000000) != 0)
  {
    if ((v12 & 0x10000000000000) != 0)
      goto LABEL_24;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v18 = v29[0];
    v19 = *v10;
    *v10 = 1;
    LODWORD(v29[0]) = -1;
    WORD2(v29[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v19;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v20);
      else
        *(_DWORD *)v18 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_24:
  v21 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v23 = JSC::JSString::create((uint64_t)this, v29);
  v24 = v29[0];
  v29[0] = 0;
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v22);
    else
      *(_DWORD *)v24 -= 2;
  }
  v25 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v33 = *(_DWORD *)SlowCase;
  v32 = v25;
  v26 = JSC::Structure::outOfLineCapacity(v25);
  v30 = 0;
  v31 = v26;
  v29[0] = (WTF::StringImpl *)&v31;
  v29[1] = (WTF::StringImpl *)SlowCase;
  v29[2] = this;
  v29[3] = (WTF::StringImpl *)&v33;
  v29[4] = (WTF::StringImpl *)&v32;
  v29[5] = (WTF::StringImpl *)&v30;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v25, this, v21, 6, (uint64_t)v29);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v30, v23);
  *((_DWORD *)v25 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMAudioSession>,(WebCore::DOMConstructorID)61>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 488);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMAudioSession>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSDOMAudioSession::s_info + ~((_QWORD)&WebCore::JSDOMAudioSession::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMAudioSession::s_info + ~((_QWORD)&WebCore::JSDOMAudioSession::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSDOMAudioSession::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSDOMAudioSession::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSDOMAudioSessionPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSDOMAudioSessionPrototype::create((WebCore::JSDOMAudioSessionPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSDOMAudioSession::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSDOMAudioSession::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 488) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMAudioSessionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMAudioSessionPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMAudioSession>,(WebCore::DOMConstructorID)61>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDOMAudioSession_type(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;

  v4 = WebCore::DOMAudioSession::type((WebCore::DOMAudioSession *)(*(_QWORD *)(a2 + 24) - 32));
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  if ((byte_1EE335049 & 1) == 0)
  {
    dword_1ECE77400 += 2;
    byte_1EE335049 = 1;
    qword_1EE335280 = (uint64_t)&dword_1ECE77400;
    dword_1ECE77420 += 2;
    qword_1EE335288 = (uint64_t)&dword_1ECE77420;
    dword_1ECE77440 += 2;
    qword_1EE335290 = (uint64_t)&dword_1ECE77440;
    dword_1ECE77460 += 2;
    qword_1EE335298 = (uint64_t)&dword_1ECE77460;
    dword_1ECE77480 += 2;
    qword_1EE3352A0 = (uint64_t)&dword_1ECE77480;
    dword_1ECE774A0 += 2;
    qword_1EE3352A8 = (uint64_t)&dword_1ECE774A0;
  }
  v7 = *(_QWORD *)&_MergedGlobals_3116[8 * v4 + 568];
  if (!v7)
    return *v6;
  v8 = *(_DWORD *)v7;
  v9 = *(_DWORD *)(v7 + 4);
  *(_DWORD *)v7 += 2;
  if (v9)
  {
    if (v9 != 1)
    {
LABEL_6:
      v10 = *(_QWORD *)(v5 + 64760);
      if (!v10 || v7 != *(_QWORD *)(v10 + 8))
      {
        v10 = JSC::jsStringWithCacheSlowCase();
        v8 = *(_DWORD *)v7 - 2;
      }
      goto LABEL_9;
    }
    v12 = *(unsigned __int8 **)(v7 + 8);
    if ((*(_BYTE *)(v7 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v14 = *(unsigned __int16 *)v12;
      if (v14 > 0xFF)
        goto LABEL_6;
      v13 = v14;
    }
    v10 = *(_QWORD *)(v5 + 8 * v13 + 42216);
  }
  else
  {
    v10 = *v6;
  }
LABEL_9:
  if (v8)
    *(_DWORD *)v7 = v8;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v7, v3);
  return v10;
}

BOOL WebCore::setJSDOMAudioSession_type(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const char *v13;
  int v14;
  int v16;
  int v17;
  char **v19;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  uint16x8_t v27;
  uint16x8_t v28;
  uint16x8_t v29;
  uint16x8_t v31;
  uint16x8_t v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  int v35[2];
  WTF::StringImpl *v36;
  char v37;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMAudioSession::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMAudioSession::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v35 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v11 = *(_QWORD *)(this + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v11)
      {
LABEL_17:
        if (v11)
          goto LABEL_18;
LABEL_42:
        if (*(_DWORD *)(v4 + 80))
          JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        return 0;
      }
    }
    else if (!v11)
    {
      goto LABEL_17;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v35, a1);
  v11 = v33;
  if (!v33)
    goto LABEL_42;
LABEL_18:
  v12 = *(_DWORD *)(v11 + 16);
  v13 = *(const char **)(v11 + 8);
  v14 = *(_DWORD *)(v11 + 4);
  if (v13 != "ambient" && v14 == 7)
  {
    if ((v12 & 4) != 0)
    {
      if (*v13 != 97 || *(_DWORD *)(v13 + 1) != 1701405293 || *(_DWORD *)(v13 + 3) != 1953391977)
        goto LABEL_27;
    }
    else
    {
      if (*(_WORD *)v13 != 97)
        goto LABEL_27;
      v21 = *(_QWORD *)(v13 + 2);
      v22 = *(_QWORD *)(v13 + 6);
      if (v21 != 0x6500690062006DLL || v22 != 0x74006E00650069)
        goto LABEL_27;
    }
LABEL_51:
    v19 = &WebCore::parseEnumerationFromString<WebCore::DOMAudioSessionType>(WTF::String const&)::mappings;
    goto LABEL_52;
  }
  if (v13 == "ambient" && v14 == 7)
    goto LABEL_51;
  if (v13 == "auto" || v14 != 4)
  {
    if (v13 == "auto" && v14 == 4)
      goto LABEL_38;
    if (v13 == "play-and-record" || v14 != 15)
    {
      if (v13 != "play-and-record" || v14 != 15)
      {
        if (v13 == "playback" || v14 != 8)
        {
          if (v13 != "playback" || v14 != 8)
          {
            if (v13 == "transient" || v14 != 9)
            {
              if (v13 != "transient" || v14 != 9)
              {
                if (v13 == "transient-solo" || v14 != 14)
                {
                  if (v14 != 14 || v13 != "transient-solo")
                    goto LABEL_27;
                }
                else if ((v12 & 4) != 0)
                {
                  if (*v13 != 116
                    || *(_QWORD *)(v13 + 1) != 0x746E6569736E6172
                    || *(_QWORD *)(v13 + 6) != 0x6F6C6F732D746E65)
                  {
                    goto LABEL_27;
                  }
                }
                else
                {
                  if (*(_WORD *)v13 != 116)
                    goto LABEL_27;
                  v31 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v13 + 2), (int16x8_t)xmmword_1968BD2A0);
                  v31.i16[0] = vminvq_u16(v31);
                  if (!v31.i32[0])
                    goto LABEL_27;
                  v32 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v13 + 12), (int16x8_t)xmmword_1968BD2B0);
                  v32.i16[0] = vminvq_u16(v32);
                  if (!v32.i32[0])
                    goto LABEL_27;
                }
                v19 = &off_1E3252048;
                goto LABEL_52;
              }
            }
            else if ((v12 & 4) != 0)
            {
              if (*v13 != 116 || *(_DWORD *)(v13 + 1) != 1936613746 || *(_DWORD *)(v13 + 5) != 1953391977)
                goto LABEL_27;
            }
            else
            {
              if (*(_WORD *)v13 != 116)
                goto LABEL_27;
              v29 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v13 + 2), (int16x8_t)xmmword_1968BD2A0);
              v29.i16[0] = vminvq_u16(v29);
              if (!v29.i32[0])
                goto LABEL_27;
            }
            v19 = &off_1E3252030;
            goto LABEL_52;
          }
        }
        else if ((v12 & 4) != 0)
        {
          if (*v13 != 112 || *(_DWORD *)(v13 + 1) != 1652121964 || *((_DWORD *)v13 + 1) != 1801675106)
            goto LABEL_27;
        }
        else
        {
          if (*(_WORD *)v13 != 112)
            goto LABEL_27;
          v16 = 0;
          v17 = 1;
          if (*(_QWORD *)(v13 + 2) != 0x6200790061006CLL || *((_QWORD *)v13 + 1) != 0x6B006300610062)
            goto LABEL_53;
        }
        v19 = &off_1E3252018;
        goto LABEL_52;
      }
    }
    else if ((v12 & 4) != 0)
    {
      if (*v13 != 112 || *(_QWORD *)(v13 + 1) != 0x2D646E612D79616CLL || *(_QWORD *)(v13 + 7) != 0x64726F6365722D64)
        goto LABEL_27;
    }
    else
    {
      if (*(_WORD *)v13 != 112)
        goto LABEL_27;
      v27 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v13 + 2), (int16x8_t)xmmword_1968BD280);
      v27.i16[0] = vminvq_u16(v27);
      if (!v27.i32[0])
        goto LABEL_27;
      v28 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v13 + 14), (int16x8_t)xmmword_1968BD290);
      v28.i16[0] = vminvq_u16(v28);
      if (!v28.i32[0])
        goto LABEL_27;
    }
    v19 = &off_1E3252000;
    goto LABEL_52;
  }
  if ((v12 & 4) == 0)
  {
    if (*(_WORD *)v13 == 97)
    {
      v16 = 0;
      v17 = 1;
      if (*(_DWORD *)(v13 + 2) != 7602293 || *((_DWORD *)v13 + 1) != 7274612)
        goto LABEL_53;
      goto LABEL_38;
    }
LABEL_27:
    v16 = 0;
    v17 = 1;
    goto LABEL_53;
  }
  if (*v13 != 97 || *(_WORD *)(v13 + 1) != 29813 || *((_WORD *)v13 + 1) != 28532)
    goto LABEL_27;
LABEL_38:
  v19 = &off_1E3251FE8;
LABEL_52:
  v17 = 0;
  v16 = *((unsigned __int8 *)v19 + 16);
LABEL_53:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v11, (WTF::StringImpl *)a2);
  else
    *(_DWORD *)v11 -= 2;
  if (*(_DWORD *)(v4 + 80))
  {
    if (((v17 | JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4)) & 1) == 0)
      goto LABEL_57;
    return 0;
  }
  if ((v17 & 1) != 0)
    return 0;
LABEL_57:
  WebCore::DOMAudioSession::setType((unsigned int *)(v10 - 32), v16, v35);
  if (v37)
  {
    v24 = (WTF::StringImpl *)LOBYTE(v35[0]);
    v25 = v36;
    v34 = v36;
    if (!*(_QWORD *)(v4 + 16))
    {
      v26.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v35[0]), (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, a1, v26);
      v25 = v34;
    }
    v34 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  return 1;
}

uint64_t WebCore::jsDOMAudioSession_state(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;

  v4 = WebCore::DOMAudioSession::state((WebCore::DOMAudioSession *)(*(_QWORD *)(a2 + 24) - 32));
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  if ((_MergedGlobals_3116[0] & 1) == 0)
  {
    _MergedGlobals_13 += 2;
    qword_1EE335250 = (uint64_t)&_MergedGlobals_13;
    dword_1ECE773C0 += 2;
    qword_1EE335258 = (uint64_t)&dword_1ECE773C0;
    dword_1ECE773E0 += 2;
    qword_1EE335260 = (uint64_t)&dword_1ECE773E0;
    _MergedGlobals_3116[0] = 1;
  }
  v7 = *(_QWORD *)&_MergedGlobals_3116[8 * v4 + 520];
  if (!v7)
    return *v6;
  v8 = *(_DWORD *)v7;
  v9 = *(_DWORD *)(v7 + 4);
  *(_DWORD *)v7 += 2;
  if (v9)
  {
    if (v9 != 1)
    {
LABEL_6:
      v10 = *(_QWORD *)(v5 + 64760);
      if (!v10 || v7 != *(_QWORD *)(v10 + 8))
      {
        v10 = JSC::jsStringWithCacheSlowCase();
        v8 = *(_DWORD *)v7 - 2;
      }
      goto LABEL_9;
    }
    v12 = *(unsigned __int8 **)(v7 + 8);
    if ((*(_BYTE *)(v7 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v14 = *(unsigned __int16 *)v12;
      if (v14 > 0xFF)
        goto LABEL_6;
      v13 = v14;
    }
    v10 = *(_QWORD *)(v5 + 8 * v13 + 42216);
  }
  else
  {
    v10 = *v6;
  }
LABEL_9:
  if (v8)
    *(_DWORD *)v7 = v8;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v7, v3);
  return v10;
}

WebCore::AudioSession *WebCore::jsDOMAudioSession_onstatechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::AudioSession *v9;
  WebCore::AudioSession *v10;
  WebCore::AudioSessionIOS *v12;
  void *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  void *v18;
  bmalloc::api *v19;
  void *v20;

  v5 = *(_QWORD **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = (WebCore::AudioSession *)WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1984), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28)+ 3320), a4);
  v10 = v9;
  if (*((_DWORD *)v5 - 2) == 1)
  {
    v12 = WebCore::AudioSession::sharedSession(v9);
    (*(void (**)(WebCore::AudioSessionIOS *, _QWORD *))(*(_QWORD *)v12 + 216))(v12, v5 + 3);
    v14 = v5[4];
    if (v14)
    {
      *(_QWORD *)(v14 + 8) = 0;
      v15 = (unsigned int *)v5[4];
      v5[4] = 0;
      if (v15)
      {
        do
        {
          v16 = __ldaxr(v15);
          v17 = v16 - 1;
        }
        while (__stlxr(v17, v15));
        if (!v17)
        {
          atomic_store(1u, v15);
          WTF::fastFree((WTF *)v15, v13);
        }
      }
    }
    else
    {
      v5[4] = 0;
    }
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v5, v13);
    WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)(v5 - 4), v18);
    bmalloc::api::isoDeallocate(v19, v20);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSDOMAudioSession_onstatechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::AudioSession *v15;
  WebCore::AudioSessionIOS *v17;
  void *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  void *v23;
  bmalloc::api *v24;
  void *v25;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSDOMAudioSession::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSDOMAudioSession::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(_QWORD **)(a2 + 24);
      ++*((_DWORD *)v11 - 2);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      v15 = (WebCore::AudioSession *)WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1984), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 - 2) == 1)
      {
        v17 = WebCore::AudioSession::sharedSession(v15);
        (*(void (**)(WebCore::AudioSessionIOS *, _QWORD *))(*(_QWORD *)v17 + 216))(v17, v11 + 3);
        v19 = v11[4];
        if (v19)
        {
          *(_QWORD *)(v19 + 8) = 0;
          v20 = (unsigned int *)v11[4];
          v11[4] = 0;
          if (v20)
          {
            do
            {
              v21 = __ldaxr(v20);
              v22 = v21 - 1;
            }
            while (__stlxr(v22, v20));
            if (!v22)
            {
              atomic_store(1u, v20);
              WTF::fastFree((WTF *)v20, v18);
            }
          }
        }
        else
        {
          v11[4] = 0;
        }
        WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v11, v18);
        WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)(v11 - 4), v23);
        bmalloc::api::isoDeallocate(v24, v25);
        if (!a3)
          return 1;
      }
      else
      {
        --*((_DWORD *)v11 - 2);
        if (!a3)
          return 1;
      }
      if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSDOMAudioSessionOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 24);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 16)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 32) + 64))(v5 - 32), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

unint64_t WebCore::wrap<WebCore::DOMAudioSession>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  WTF *v62;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v51 = *(_QWORD *)(v5 + 32);
    if (!v51)
      goto LABEL_5;
    v52 = *(_DWORD *)(v51 - 8);
    v53 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
    v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
    v56 = v52 & ((v55 >> 31) ^ v55);
    v57 = *(_QWORD *)(v51 + 16 * v56);
    if (v57 != a3)
    {
      v58 = 1;
      while (v57)
      {
        v56 = ((_DWORD)v56 + v58) & v52;
        v57 = *(_QWORD *)(v51 + 16 * v56);
        ++v58;
        if (v57 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v51 + 16 * v56 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 40);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E3352E68)
  {
    __break(0xC471u);
    JUMPOUT(0x19497BE90);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSDOMAudioSession::s_info + ~((_QWORD)&WebCore::JSDOMAudioSession::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMAudioSession::s_info + ~((_QWORD)&WebCore::JSDOMAudioSession::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSDOMAudioSession::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSDOMAudioSession::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSDOMAudioSessionPrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSDOMAudioSessionPrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSDOMAudioSession::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSDOMAudioSession::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 488);
  if (v27)
    goto LABEL_36;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v60 = *(_QWORD *)(v30 + 488);
  if (!v60)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v62, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v62, v24 + 192, v24 + 1872, 32, 8, &v61);
    v33 = (uint64_t)v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v62;
    v62 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v60 = v31;
    v35 = *(_QWORD *)(v30 + 488);
    *(_QWORD *)(v30 + 488) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      v37 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v28 + 2832, v36 + 1, (unint64_t)&v60);
      v36 = *(unsigned int *)(v28 + 2844);
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = *v37;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
    }
    *(_DWORD *)(v28 + 2844) = v36 + 1;
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v26 + 488);
  *(_QWORD *)(v26 + 488) = v27;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v28);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_36:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_37:
    v27[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v59 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v59);
    v27[5] = SlowCase + (int)v59;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3 + 32;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a2 + 415);
  if ((byte_1EE335078 & 1) == 0)
  {
    qword_1EE335070 = (uint64_t)&off_1E3259B38;
    byte_1EE335078 = 1;
  }
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE335070;
    Allocator[2] = v42;
    v46 = *(_QWORD *)(a3 + 40);
    *(_QWORD *)(a3 + 40) = Allocator;
    if (!v46)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v62 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &qword_1EE335070;
  v50[2] = v42;
  v61 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v62, (uint64_t *)&v61);
  v46 = (uint64_t)v61;
  if (v61)
    goto LABEL_60;
  return SlowCase;
}

unint64_t WebCore::jsDOMCSSNamespaceConstructor_highlights(WebCore::JSDOMGlobalObject *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  WebCore::HighlightRegistry *v6;
  unint64_t result;
  WTF *v8;
  void *v9;

  v2 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (!v2)
    return 10;
  v3 = v2;
  if (*(_BYTE *)(v2 + 274))
  {
    result = 96;
    __break(0xC471u);
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 2272);
    if (!v4)
    {
      v4 = WTF::fastMalloc((WTF *)0x28);
      *(_DWORD *)v4 = 1;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
      *(_QWORD *)(v4 + 8) = 0;
      *(_BYTE *)(v4 + 32) = 0;
      v6 = *(WebCore::HighlightRegistry **)(v3 + 2272);
      *(_QWORD *)(v3 + 2272) = v4;
      if (v6)
      {
        if (*(_DWORD *)v6 == 1)
        {
          WebCore::HighlightRegistry::~HighlightRegistry(v6, v5);
          WTF::fastFree(v8, v9);
          v4 = *(_QWORD *)(v3 + 2272);
        }
        else
        {
          --*(_DWORD *)v6;
        }
      }
    }
    return WebCore::wrap<WebCore::HighlightRegistry>((uint64_t)a1, (uint64_t)a1, (WebCore::HighlightRegistry *)v4);
  }
  return result;
}

unint64_t WebCore::jsDOMCSSNamespaceConstructor_paintWorklet(WebCore::JSDOMGlobalObject *a1)
{
  uint64_t v2;
  uint64_t v3;
  WebCore::Worklet *v4;
  _QWORD *v5;
  _DWORD *v6;
  unint64_t result;

  v2 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (!v2)
    return 10;
  v3 = v2;
  if (*(_BYTE *)(v2 + 274))
  {
    result = 96;
    __break(0xC471u);
  }
  else
  {
    v4 = *(WebCore::Worklet **)(v2 + 2808);
    if (!v4)
    {
      v4 = (WebCore::Worklet *)bmalloc::api::isoAllocate();
      v5 = (_QWORD *)WebCore::Worklet::Worklet(v4, (WebCore::Document *)(v3 - 192));
      *v5 = &off_1E3399440;
      WebCore::ActiveDOMObject::suspendIfNeeded(v5);
      v6 = *(_DWORD **)(v3 + 2808);
      *(_QWORD *)(v3 + 2808) = v4;
      if (v6)
      {
        if (v6[6] == 1)
        {
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
          v4 = *(WebCore::Worklet **)(v3 + 2808);
        }
        else
        {
          --v6[6];
        }
      }
    }
    return WebCore::wrap<WebCore::Worklet>((uint64_t)a1, (uint64_t)a1, (uint64_t)v4);
  }
  return result;
}

uint64_t WebCore::JSDOMCache::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  WTF::StringImpl *v7;
  WTF *v8;
  void *v9;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)(v2 + 24) == 1)
    {
      if (!*(_BYTE *)(v2 + 64))
        (*(void (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(v2 + 56) + 72))(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
      v3 = *(unsigned int **)(v2 + 56);
      *(_QWORD *)(v2 + 56) = 0;
      if (v3)
      {
        v4 = v3 + 2;
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v3 + 2);
          (*(void (**)(unsigned int *, JSC::JSCell *))(*(_QWORD *)v3 + 8))(v3, a2);
        }
      }
      v7 = *(WTF::StringImpl **)(v2 + 32);
      *(_QWORD *)(v2 + 32) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v2, a2);
      return WTF::fastFree(v8, v9);
    }
    else
    {
      --*(_DWORD *)(v2 + 24);
    }
  }
  return this;
}

uint64_t WebCore::JSDOMCache::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMCachePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMCachePrototype::create(WebCore::JSDOMCachePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSDOMCache::s_info, (uint64_t)&WebCore::JSDOMCachePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCache>,(WebCore::DOMConstructorID)62>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 496);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCache>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMCache::s_info + ~((_QWORD)&WebCore::JSDOMCache::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMCache::s_info + ~((_QWORD)&WebCore::JSDOMCache::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMCache::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMCache::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMCachePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMCachePrototype::create((WebCore::JSDOMCachePrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDOMCache::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMCache::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 496) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMCacheConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMCachePrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCache>,(WebCore::DOMConstructorID)62>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSDOMCacheOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[1];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[2] || (result = (*(uint64_t (**)(_QWORD *))(*v5 + 64))(v5), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

void WebCore::JSDOMCacheOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  WTF::StringImpl *v28;
  WTF *v29;
  void *v30;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)(v3 + 24);
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)(v3 + 24) == 1)
  {
    if (!*(_BYTE *)(v3 + 64))
      (*(void (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(v3 + 56) + 72))(*(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
    v24 = *(unsigned int **)(v3 + 56);
    *(_QWORD *)(v3 + 56) = 0;
    if (v24)
    {
      v25 = v24 + 2;
      do
      {
        v26 = __ldaxr(v25);
        v27 = v26 - 1;
      }
      while (__stlxr(v27, v25));
      if (!v27)
      {
        atomic_store(1u, v24 + 2);
        (*(void (**)(unsigned int *))(*(_QWORD *)v24 + 8))(v24);
      }
    }
    v28 = *(WTF::StringImpl **)(v3 + 32);
    *(_QWORD *)(v3 + 32) = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, a2);
      else
        *(_DWORD *)v28 -= 2;
    }
    WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v3, a2);
    WTF::fastFree(v29, v30);
  }
  else
  {
    --*(_DWORD *)(v3 + 24);
  }
}

unint64_t WebCore::wrap<WebCore::DOMCache>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 6);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E33541C8)
  {
    __break(0xC471u);
    JUMPOUT(0x19497D0A4);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSDOMCache::s_info + ~((_QWORD)&WebCore::JSDOMCache::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMCache::s_info + ~((_QWORD)&WebCore::JSDOMCache::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSDOMCache::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_17;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSDOMCache::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSDOMCachePrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMCachePrototype::create((WebCore::JSDOMCachePrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSDOMCache::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMCache::s_info);
LABEL_17:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 496);
  if (v33)
    goto LABEL_37;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_22;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_22:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 496))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 496);
    *(_QWORD *)(v36 + 496) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 496);
  *(_QWORD *)(v32 + 496) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_36;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_36:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_37:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_39;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_39:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE335088 & 1) == 0)
  {
    qword_1EE335080 = (uint64_t)&off_1E3259B68;
    byte_1EE335088 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE335080;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSDOMCacheStorage::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCacheStorage>,(WebCore::DOMConstructorID)63>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 504);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCacheStorage>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMCacheStorage::s_info + ~((_QWORD)&WebCore::JSDOMCacheStorage::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMCacheStorage::s_info + ~((_QWORD)&WebCore::JSDOMCacheStorage::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMCacheStorage::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMCacheStorage::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMCacheStoragePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMCacheStoragePrototype::create((WebCore::JSDOMCacheStoragePrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDOMCacheStorage::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMCacheStorage::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 504) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMCacheStorageConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMCacheStoragePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCacheStorage>,(WebCore::DOMConstructorID)63>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSDOMCacheStorageOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[1];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[2] || (result = (*(uint64_t (**)(_QWORD *))(*v5 + 64))(v5), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMException>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  char v20;
  JSCell *v21;
  JSC::JSCell *v22;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v24;
  JSC::JSGlobalObject *v25;
  WebCore::JSDOMException *v26;
  WebCore::JSDOMGlobalObject *v27;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v29;
  JSC::Structure *v30;
  unint64_t SubclassStructure;
  uint64_t v32;
  uint64_t v33;
  int v35;
  WTF::StringImpl *v36;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v38;
  uint64_t v39;
  JSC::VM *v40;
  uint64_t v41;
  int v42;
  WTF::StringImpl *v43;
  int v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_DWORD *)(a2 + 32) == 1 || (v6 = *(_QWORD *)(a2 + 48), v6 == 10))
  {
    v7 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v7 += 2;
    v43 = v7;
    v44 = 0;
LABEL_15:
    v40 = v4;
    v39 = v5;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v9 = *(_QWORD *)(a2 + 56), v9 == 10))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v10 = v46;
      v42 = 0;
      goto LABEL_27;
    }
    v46 = *(WTF::StringImpl **)(a2 + 56);
    v11 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if ((v9 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v9 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v46, a1);
      goto LABEL_24;
    }
    v12 = *(WTF::StringImpl **)(v9 + 8);
    if ((v12 & 1) != 0)
    {
      v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, a1);
      if (!v12)
        goto LABEL_23;
    }
    else if (!v12)
    {
LABEL_23:
      v45 = v12;
LABEL_24:
      if (*((_DWORD *)v11 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
        v10 = v45;
        if (hasExceptionsAfterHandlingTraps)
        {
          v42 = 1;
          v45 = 0;
          if (v10)
          {
            if (*(_DWORD *)v10 == 2)
              WTF::StringImpl::destroy(v10, v38);
            else
              *(_DWORD *)v10 -= 2;
          }
          v21 = 0;
          v32 = 1;
          goto LABEL_56;
        }
      }
      else
      {
        v10 = v45;
      }
      v42 = 0;
LABEL_27:
      v43 = 0;
      v41 = 0;
      v13 = WTF::fastMalloc((WTF *)0x20);
      v14 = &byte_1E33A1C90;
      while (1)
      {
        v15 = *((_QWORD *)v14 - 3);
        v16 = v14 - 32;
        v17 = v15 ? v15 - 1 : 0;
        v18 = MEMORY[0x19AEA53F4](v10, *((_QWORD *)v14 - 4), v17);
        if ((_DWORD)v18)
          break;
        v14 += 40;
        if (v16 + 40 == (char *)__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_4pairIN3WTF10AtomStringES8_EEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSE_EEEDcOSF_DpOT0____fmatrix)
        {
          v20 = 0;
          goto LABEL_35;
        }
      }
      v20 = *v14;
LABEL_35:
      *(_DWORD *)(v13 + 8) = 1;
      *(_QWORD *)v13 = off_1E334F098;
      *(_BYTE *)(v13 + 12) = v20;
      if (v10)
        *(_DWORD *)v10 += 2;
      *(_QWORD *)(v13 + 16) = v10;
      if (v7)
        *(_DWORD *)v7 += 2;
      *(_QWORD *)(v13 + 24) = v7;
      v46 = (WTF::StringImpl *)v13;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
        {
          v18 = WTF::StringImpl::destroy(v10, v19);
          if (!v7)
            goto LABEL_45;
LABEL_43:
          if (*(_DWORD *)v7 == 2)
            v18 = WTF::StringImpl::destroy(v7, v19);
          else
            *(_DWORD *)v7 -= 2;
LABEL_45:
          v21 = (JSCell *)WebCore::toJSNewlyCreated(v18, *(_QWORD *)(v39 + 40), (WebCore::JSDOMGlobalObject *)&v46);
          v22 = *(JSC::JSCell **)(a2 + 40);
          if (((unint64_t)v22 & 0xFFFE000000000002) == 0)
          {
            Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v22);
            if (Object)
            {
              v25 = Object;
              if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
              {
                v26 = (WebCore::JSDOMException *)*((_QWORD *)a1 + 7);
                FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v24);
                if (!*((_DWORD *)v26 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) == 0)
                {
                  v29 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSDOMException>(v26, FunctionRealm, v27);
                  SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v25, v29, v30);
                  if (!*((_DWORD *)v26 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) == 0)
                    JSC::JSObject::setStructure(v21, v26, SubclassStructure);
                }
              }
            }
          }
          if (*((_DWORD *)v40 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
            v21 = 0;
          if (v46)
          {
            if (*((_DWORD *)v46 + 2) == 1)
              (*(void (**)(void))(*(_QWORD *)v46 + 8))();
            else
              --*((_DWORD *)v46 + 2);
          }
          v32 = 0;
LABEL_56:
          ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v32])(&v46, &v41);
          v33 = 0;
          goto LABEL_57;
        }
        *(_DWORD *)v10 -= 2;
      }
      if (!v7)
        goto LABEL_45;
      goto LABEL_43;
    }
    *(_DWORD *)v12 += 2;
    goto LABEL_23;
  }
  v41 = *(_QWORD *)(a2 + 48);
  if ((v6 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v6 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(v6 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v6, a1);
      if (!v8)
        goto LABEL_11;
    }
    else if (!v8)
    {
LABEL_11:
      v46 = v8;
      goto LABEL_12;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_11;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, a1);
LABEL_12:
  if (!*((_DWORD *)v4 + 20))
  {
    v7 = v46;
LABEL_14:
    v43 = v7;
    v44 = 0;
    goto LABEL_15;
  }
  v35 = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  v7 = v46;
  if (!v35)
    goto LABEL_14;
  v44 = 1;
  v46 = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v36);
    else
      *(_DWORD *)v7 -= 2;
  }
  v21 = 0;
  v33 = 1;
LABEL_57:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v33])(&v41, &v43);
  return v21;
}

WTF::StringImpl *WebCore::JSDOMExceptionPrototype::finishCreation(WebCore::JSDOMExceptionPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<29u>(a2, (uint64_t)&WebCore::JSDOMException::s_info, (uint64_t)&WebCore::JSDOMExceptionPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

JSC::VM *JSC::reifyStaticProperties<29u>(JSC::VM *result, uint64_t a2, uint64_t a3, JSC::JSObject *this)
{
  JSC::VM *v7;
  uint64_t i;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v7 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 1160; i += 40)
  {
    v9 = *(_QWORD *)(a3 + i + 8);
    if (v9)
    {
      if (v9 == 2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v7 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v10 = v12;
      result = (JSC::VM *)JSC::reifyStaticProperty(v7, a2, (unint64_t *)&v12, a3 + i, (unsigned __int8 *)this);
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v10, v11);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMException::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMException::createPrototype(WebCore::JSDOMException *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  uint64_t v5;
  JSC::JSCell *v6;
  unint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  JSC::Structure *v9;

  v3 = (int)a2;
  v5 = JSC::LazyClassStructure::get((uint64_t *)a2 + 188, (uint64_t)a2);
  if (*(_QWORD *)(v5 + 48) == 2)
    v6 = 0;
  else
    v6 = *(JSC::JSCell **)(v5 + 48);
  v7 = JSC::Structure::create((uint64_t *)this, v3, v6);
  *(_DWORD *)(v7 + 16) |= 0x80000u;
  return WebCore::JSDOMExceptionPrototype::create(this, v7, v8, v9);
}

unint64_t WebCore::JSDOMExceptionPrototype::create(WebCore::JSDOMExceptionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMExceptionPrototype::finishCreation((WebCore::JSDOMExceptionPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMException>,(WebCore::DOMConstructorID)426>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3408);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v21) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v21, &WebCore::JSDOMConstructor<WebCore::JSDOMException>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v20);
    v9[2848] = v2 + (int)v20;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v21);
  v13 = v21;
  v21 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v21);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSDOMException>((WebCore::JSDOMException *)a1, (JSC::VM *)a2, v16)
                  + 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v17, 14, (uint64_t)&v21);
  JSC::reifyStaticProperties<25u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMException::s_info, (uint64_t)&WebCore::JSDOMExceptionConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3408) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMExceptionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMExceptionPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMException>,(WebCore::DOMConstructorID)426>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMException_code(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 12) | 0xFFFE000000000000;
}

uint64_t WebCore::jsDOMException_name(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 16);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsDOMException_message(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 24);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::JSDOMExceptionOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

unint64_t WebCore::wrap<WebCore::DOMException>(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  _DWORD *v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(_DWORD **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(_DWORD **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++a3[2];
  v14 = a3;
  v12 = WebCore::toJSNewlyCreated(a1, a2, (WebCore::JSDOMGlobalObject *)&v14);
  if (v14)
  {
    if (v14[2] == 1)
      (*(void (**)(void))(*(_QWORD *)v14 + 8))();
    else
      --v14[2];
  }
  return v12;
}

WebCore::DOMFileSystem *WebCore::JSDOMFileSystem::destroy(WebCore::JSDOMFileSystem *this, JSC::JSCell *a2)
{
  WebCore::DOMFileSystem *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::DOMFileSystem *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      WebCore::DOMFileSystem::~DOMFileSystem(result, a2);
      return (WebCore::DOMFileSystem *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

uint64_t WebCore::JSDOMFileSystem::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMFileSystem::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = JSC::JSObject::visitChildren();
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSDOMFileSystem::visitChildren(WebCore::JSDOMFileSystem *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = JSC::JSObject::visitChildren();
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMFileSystem>,(WebCore::DOMConstructorID)84>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 672);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMFileSystem>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMFileSystem::s_info + ~((_QWORD)&WebCore::JSDOMFileSystem::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMFileSystem::s_info + ~((_QWORD)&WebCore::JSDOMFileSystem::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMFileSystem::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMFileSystem::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMFileSystemPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMFileSystemPrototype::create((WebCore::JSDOMFileSystemPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDOMFileSystem::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMFileSystem::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 672) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMFileSystemConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMFileSystemPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMFileSystem>,(WebCore::DOMConstructorID)84>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDOMFileSystem_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsDOMFileSystem_root(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  WebCore::ScriptExecutionContext *v6;
  JSC::VM *v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v11;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
    if (v6)
    {
      v7 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
      WebCore::DOMFileSystem::root(*(WebCore::DOMFileSystem **)(a2 + 24), v6, (uint64_t *)&v11);
      v8 = v11;
      v2 = WebCore::wrap<WebCore::FileSystemEntry>((uint64_t)a1, v7, (uint64_t)v11);
      if (v8[8] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v8 + 16))(v8);
      else
        --v8[8];
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
      {
        return 0;
      }
      else
      {
        v9 = *((_QWORD *)a1 + 7);
        *(_QWORD *)(a2 + 32) = v2;
        if ((v2 & 0xFFFE000000000002) == 0
          && v2
          && *(_DWORD *)(v9 + 760) >= *(unsigned __int8 *)(a2 + 7))
        {
          JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v9 + 192), (const JSCell *)a2);
        }
      }
    }
    else
    {
      return 10;
    }
  }
  return v2;
}

uint64_t WebCore::JSDOMFileSystemOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSDOMFileSystemOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WebCore::DOMFileSystem *v3;
  int v4;
  bmalloc::api *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::DOMFileSystem *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v3 = *(WebCore::DOMFileSystem **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 2);
  *((_DWORD *)v3 + 2) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v7 = (uint64_t *)(a3 + 32);
    v8 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v8 - 8);
      v11 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::DOMFileSystem **)(v8 + 16 * v14);
      if (v15 != v3)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::DOMFileSystem **)(v8 + 16 * v14);
          ++v16;
          if (v15 == v3)
            goto LABEL_12;
        }
        v14 = *(unsigned int *)(v8 - 4);
      }
LABEL_12:
      if (v14 != *(_DWORD *)(v8 - 4))
      {
        v17 = (_QWORD *)(v8 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v7 - 16);
        v21 = *v7;
        if (*v7)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v7;
        if (*v7)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v7, v25 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 2) - 1;
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 2) = v4;
  }
  else
  {
    WebCore::DOMFileSystem::~DOMFileSystem(v3, a2);
    bmalloc::api::isoDeallocate(v5, v6);
  }
}

unint64_t WebCore::wrap<WebCore::DOMFileSystem>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  WTF *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  WTF *v55;
  int v56;
  unint64_t v57;
  _QWORD *v58;
  WTF *v59;

  v5 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v5 + 48))
  {
    v49 = *(_QWORD *)(v5 + 32);
    if (!v49)
      goto LABEL_5;
    v50 = *(_DWORD *)(v49 - 8);
    v51 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v52 = 9 * ((v51 + ~(v51 << 13)) ^ ((v51 + ~(v51 << 13)) >> 8));
    v53 = (v52 ^ (v52 >> 15)) + ~((v52 ^ (v52 >> 15)) << 27);
    v54 = v50 & ((v53 >> 31) ^ v53);
    v55 = *(WTF **)(v49 + 16 * v54);
    if (v55 != a3)
    {
      v56 = 1;
      while (v55)
      {
        v54 = ((_DWORD)v54 + v56) & v50;
        v55 = *(WTF **)(v49 + 16 * v54);
        ++v56;
        if (v55 == a3)
          goto LABEL_62;
      }
      goto LABEL_5;
    }
LABEL_62:
    v6 = *(_QWORD *)(v49 + 16 * v54 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)a3;
    if (!*(_QWORD *)a3)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*((_DWORD *)a3 + 2);
  v8 = *(_QWORD *)(a2 + 3296);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSDOMFileSystem::s_info + ~((_QWORD)&WebCore::JSDOMFileSystem::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMFileSystem::s_info + ~((_QWORD)&WebCore::JSDOMFileSystem::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSDOMFileSystem::s_info)
    {
LABEL_10:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_12;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSDOMFileSystem::s_info)
          goto LABEL_10;
      }
    }
  }
  v17 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSDOMFileSystemPrototype::createStructure(v17, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSDOMFileSystemPrototype::create((WebCore::JSDOMFileSystemPrototype *)v17, Structure, v19, v20);
  v22 = WebCore::JSDOMFileSystem::createStructure(v17, a2, v21);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSDOMFileSystem::s_info);
LABEL_12:
  v23 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(v23 + 41456);
  v25 = *(_QWORD *)(v24 + 23536);
  v26 = *(_QWORD **)(v25 + 680);
  if (v26)
    goto LABEL_32;
  v27 = *(_QWORD *)(v24 + 22648);
  if (__ldaxr((unsigned __int8 *)v27))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v27))
  {
    goto LABEL_17;
  }
  MEMORY[0x19AEA534C](v27);
LABEL_17:
  v29 = *(_QWORD *)(v27 + 2824);
  if (!*(_QWORD *)(v29 + 680))
  {
    v30 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v59, "IsoSpace T");
    v58 = 0;
    MEMORY[0x19AEA3204](v30, &v59, v23 + 192, v23 + 1872, 40, 8, &v58);
    v32 = (uint64_t)v58;
    v58 = 0;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = v59;
    v59 = 0;
    if (v33)
    {
      if (*(_DWORD *)v33 == 1)
        WTF::fastFree(v33, v31);
      else
        --*(_DWORD *)v33;
    }
    v34 = *(_QWORD *)(v29 + 680);
    *(_QWORD *)(v29 + 680) = v30;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  }
  v26 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v25 + 680);
  *(_QWORD *)(v25 + 680) = v26;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528](v36, v35);
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v27);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_31;
  }
  if (__stlxr(0, (unsigned __int8 *)v27))
LABEL_31:
    WTF::Lock::unlockSlow((WTF::Lock *)v27);
LABEL_32:
  SlowCase = v26[3];
  if (SlowCase < v26[4])
  {
LABEL_33:
    v26[3] = SlowCase + 48;
    goto LABEL_34;
  }
  SlowCase = v26[5];
  if ((SlowCase & 1) == 0)
  {
    v57 = *(_QWORD *)(SlowCase + 8) ^ v26[6];
    v26[4] = SlowCase + HIDWORD(v57);
    v26[5] = SlowCase + (int)v57;
    goto LABEL_33;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v23 + 755))
    __dmb(0xAu);
  v40 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3350A8 & 1) == 0)
  {
    qword_1EE3350A0 = (uint64_t)&off_1E3259BC8;
    byte_1EE3350A8 = 1;
  }
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE3350A0;
    Allocator[2] = v40;
    v44 = *(_QWORD *)a3;
    *(_QWORD *)a3 = Allocator;
    if (!v44)
      return SlowCase;
LABEL_56:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v59 = a3;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &qword_1EE3350A0;
  v48[2] = v40;
  v58 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v59, (uint64_t *)&v58);
  v44 = (uint64_t)v58;
  if (v58)
    goto LABEL_56;
  return SlowCase;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMFormData>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v4;
  WebCore::DOMFormData *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::ScriptExecutionContext *v9;
  WebCore::HTMLFormElement *v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  JSCell *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  JSC::VM *v23;
  uint64_t v24;
  WTF *v25;
  JSC::JSCell *v26;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v28;
  JSC::JSGlobalObject *v29;
  JSC::VM *v30;
  JSC::Structure *v31;
  uint64_t FunctionRealm;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char **v39;
  int v40;
  JSC::JSObject *v41;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v43;
  JSC::Structure *v44;
  JSC::JSCell *v45;
  uint64_t v46;
  unint64_t SubclassStructure;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  JSValue v51;
  int v52[2];
  WTF::StringImpl *v53;
  int v54;
  JSC::VM *v55;
  WTF *v56;
  WTF::StringImpl *v57;

  v55 = a1[7];
  v4 = *(_QWORD *)(a2 + 24);
  v5 = (WebCore::DOMFormData *)WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v4 + 40));
  if (!v5)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError((JSC *)a1, &v55, (uint64_t)"FormData", 9);
  v7 = *(int *)(a2 + 32);
  if ((_DWORD)v7 == 1)
  {
    v9 = 0;
    v10 = 0;
    goto LABEL_34;
  }
  v8 = *(_QWORD *)(a2 + 48);
  if (v8 == 10)
  {
    v9 = 0;
  }
  else
  {
    *(_QWORD *)v52 = a1[7];
    if ((v8 & 0xFFFE000000000002) != 0)
      goto LABEL_17;
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSHTMLFormElement::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSHTMLFormElement::s_info && v13 != 0);
    }
    if (!v12 || (v9 = *(WebCore::ScriptExecutionContext **)(v8 + 24)) == 0)
    {
LABEL_17:
      WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)v52, 0, "form", 5, "FormData", 9, v6, 0, 0, "HTMLFormElement", 16);
      return 0;
    }
  }
  if ((unint64_t)(v7 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    goto LABEL_81;
  v17 = *(_QWORD *)(a2 + 56);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    goto LABEL_34;
  }
  *(_QWORD *)v52 = a1[7];
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_74;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLElement::s_info && v20 != 0);
  }
  if (!v19 || (v10 = *(WebCore::HTMLFormElement **)(v17 + 24)) == 0)
  {
LABEL_74:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)v52, 1, "submitter", 10, "FormData", 9, v6, 0, 0, "HTMLElement", 12);
    return 0;
  }
  while (1)
  {
LABEL_34:
    WebCore::DOMFormData::create(v5, v9, v10, (uint64_t)v52);
    v23 = v55;
    if (*((_DWORD *)v55 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v55) & 1) != 0)
      goto LABEL_73;
    if (!v54)
    {
      v24 = *(_QWORD *)(v4 + 40);
      v25 = *(WTF **)v52;
      *(_QWORD *)v52 = 0;
      v56 = v25;
      if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v25 != &off_1E33B0880)
      {
        __break(0xC471u);
        JUMPOUT(0x19497FD08);
      }
      v16 = (JSCell *)WebCore::createWrapper<WebCore::DOMFormData,WebCore::DOMFormData>(v24, &v56);
      if (v56)
      {
        if (*((_DWORD *)v56 + 4) == 1)
          (*(void (**)(void))(*(_QWORD *)v56 + 16))();
        else
          --*((_DWORD *)v56 + 4);
      }
      goto LABEL_40;
    }
    if (v54 == 1)
      break;
    v5 = (WebCore::DOMFormData *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_81:
    v10 = 0;
  }
  v49 = (WTF::StringImpl *)LOBYTE(v52[0]);
  LOBYTE(v56) = v52[0];
  v50 = v53;
  v53 = 0;
  v57 = v50;
  if (!*((_QWORD *)v23 + 2))
  {
    v51.super.isa = (Class)WebCore::createDOMException((JSC *)a1, (JSC::JSGlobalObject *)LOBYTE(v52[0]), (JSC::JSGlobalObject *)&v57);
    JSC::VM::throwException(v23, (JSC::JSGlobalObject *)a1, v51);
    v50 = v57;
  }
  v57 = 0;
  if (v50)
  {
    if (*(_DWORD *)v50 == 2)
      WTF::StringImpl::destroy(v50, v49);
    else
      *(_DWORD *)v50 -= 2;
  }
  v16 = 0;
LABEL_40:
  if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
  {
LABEL_73:
    v16 = 0;
    goto LABEL_55;
  }
  v26 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v26);
    if (Object)
    {
      v29 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v30 = a1[7];
        FunctionRealm = JSC::getFunctionRealm((JSC *)a1, Object, v28);
        if (!*((_DWORD *)v30 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) == 0)
        {
          v33 = *(_QWORD *)(FunctionRealm + 3296);
          if (v33)
          {
            v34 = *(_DWORD *)(v33 - 8);
            v35 = ((unint64_t)&WebCore::JSDOMFormData::s_info + ~((_QWORD)&WebCore::JSDOMFormData::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMFormData::s_info + ~((_QWORD)&WebCore::JSDOMFormData::s_info << 32)) >> 22);
            v36 = 9 * ((v35 + ~(v35 << 13)) ^ ((v35 + ~(v35 << 13)) >> 8));
            v37 = (v36 ^ (v36 >> 15)) + ~((v36 ^ (v36 >> 15)) << 27);
            v38 = v34 & ((v37 >> 31) ^ v37);
            v39 = *(char ***)(v33 + 16 * v38);
            if (v39 == &WebCore::JSDOMFormData::s_info)
            {
LABEL_50:
              v41 = *(JSC::JSObject **)(v33 + 16 * v38 + 8);
              if (v41)
              {
LABEL_52:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure((JSC::InternalFunction *)a1, v29, v41, v31);
                if (!*((_DWORD *)v30 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) == 0)
                  JSC::JSObject::setStructure(v16, v30, SubclassStructure);
                goto LABEL_54;
              }
            }
            else
            {
              v40 = 1;
              while (v39)
              {
                v38 = ((_DWORD)v38 + v40) & v34;
                v39 = *(char ***)(v33 + 16 * v38);
                ++v40;
                if (v39 == &WebCore::JSDOMFormData::s_info)
                  goto LABEL_50;
              }
            }
          }
          Structure = WebCore::JSDOMFormDataPrototype::createStructure((uint64_t *)v30, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v45 = (JSC::JSCell *)WebCore::JSDOMFormDataPrototype::create(v30, Structure, v43, v44);
          v46 = WebCore::JSDOMFormData::createStructure((uint64_t *)v30, FunctionRealm, v45);
          v41 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v46, (uint64_t)&WebCore::JSDOMFormData::s_info);
          goto LABEL_52;
        }
      }
    }
  }
LABEL_54:
  if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
    goto LABEL_73;
LABEL_55:
  if (v54 != -1)
    ((void (*)(WTF **, int *))off_1E325BD28[v54])(&v56, v52);
  return v16;
}

_DWORD *WebCore::JSDOMFormData::destroy(WebCore::JSDOMFormData *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSDOMFormData::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMFormDataPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMFormDataPrototype::create(WebCore::JSDOMFormDataPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t Direct;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  JSC::Structure *v16;
  int v17;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  JSC::Structure **v24;
  int *v25;
  int v26;
  int v27;
  JSC::Structure *v28;
  int v29;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 4865) = SlowCase + (int)v19;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<11u>(this, (uint64_t)&WebCore::JSDOMFormData::s_info, (uint64_t)&WebCore::JSDOMFormDataPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = v6[381];
  v10 = *(_QWORD *)(v9 + 2712);
  Direct = JSC::JSObject::getDirect(SlowCase, this, *(_QWORD *)(*(_QWORD *)(v9 + 48) + 3952));
  v20 = 0;
  v21 = SlowCase;
  v22 = 0x1000000FFFFFFFFLL;
  v23 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v10, Direct, 4, (uint64_t)&v20);
  v12 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create((uint64_t)this, &v20);
  v15 = v20;
  v20 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  v16 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v29 = *(_DWORD *)SlowCase;
  v28 = v16;
  v17 = JSC::Structure::outOfLineCapacity(v16);
  v26 = 0;
  v27 = v17;
  v20 = (WTF::StringImpl *)&v27;
  v21 = SlowCase;
  v22 = (uint64_t)this;
  v23 = &v29;
  v24 = &v28;
  v25 = &v26;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v16, this, v12, 6, (uint64_t)&v20);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v26, v14);
  *((_DWORD *)v16 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMFormData>,(WebCore::DOMConstructorID)505>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4040);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructor<WebCore::JSDOMFormData>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMFormData::s_info + ~((_QWORD)&WebCore::JSDOMFormData::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMFormData::s_info + ~((_QWORD)&WebCore::JSDOMFormData::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMFormData::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMFormData::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMFormDataPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMFormDataPrototype::create((WebCore::JSDOMFormDataPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDOMFormData::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMFormData::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4040) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMFormDataConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMFormDataPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMFormData>,(WebCore::DOMConstructorID)505>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSDOMIteratorBase<WebCore::JSDOMFormData,WebCore::DOMFormDataIteratorTraits>::destroy(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 40))
  {
    v1 = result;
    result = *(_QWORD *)(result + 24);
    *(_QWORD *)(v1 + 24) = 0;
    if (result)
    {
      if (*(_DWORD *)(result + 16) == 1)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      else
        --*(_DWORD *)(result + 16);
    }
  }
  return result;
}

uint64_t WebCore::JSDOMFormDataOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSDOMFormDataOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[4];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[4] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
  --v3[4];
  return result;
}

unint64_t WebCore::createWrapper<WebCore::DOMFormData,WebCore::DOMFormData>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSDOMFormData::s_info + ~((_QWORD)&WebCore::JSDOMFormData::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMFormData::s_info + ~((_QWORD)&WebCore::JSDOMFormData::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSDOMFormData::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSDOMFormData::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSDOMFormDataPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSDOMFormDataPrototype::create((WebCore::JSDOMFormDataPrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSDOMFormData::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSDOMFormData::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 4120);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 4120))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 32, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 4120);
    *(_QWORD *)(v26 + 4120) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 4120);
  *(_QWORD *)(v22 + 4120) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE3350B8 & 1) == 0)
  {
    qword_1EE3350B0 = (uint64_t)&off_1E3259BF8;
    byte_1EE3350B8 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3350B0;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

uint64_t WebCore::wrap<WebCore::DOMFormData>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  WTF *v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 4);
  v14 = a3;
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 == &off_1E33B0880)
  {
    v12 = WebCore::createWrapper<WebCore::DOMFormData,WebCore::DOMFormData>(a2, &v14);
    if (v14)
    {
      if (*((_DWORD *)v14 + 4) == 1)
        (*(void (**)(void))(*(_QWORD *)v14 + 16))();
      else
        --*((_DWORD *)v14 + 4);
    }
    return v12;
  }
  result = 593;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMFormData::toWrapped(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(a2);
  if (result)
    return *(_QWORD *)(result + 24);
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSDOMFormData *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSDOMFormData::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSDOMFormData::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

WTF::StringImpl *WebCore::JSDOMImplementationPrototype::finishCreation(WebCore::JSDOMImplementationPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(a2, (uint64_t)&WebCore::JSDOMImplementation::s_info, &WebCore::JSDOMImplementationPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSDOMImplementation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMImplementation::createPrototype(WebCore::JSDOMImplementation *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDOMImplementationPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDOMImplementationPrototype::create(WebCore::JSDOMImplementationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMImplementationPrototype::finishCreation((WebCore::JSDOMImplementationPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMImplementation>,(WebCore::DOMConstructorID)427>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3416);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v20) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v18);
    v5[2] = SlowCase + (int)v18;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v20, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMImplementation>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v19 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v19);
    v9[2848] = v2 + (int)v19;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v20);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v20);
  v13 = v20;
  v20 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v20);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSDOMImplementation>((WebCore::JSDOMImplementation *)a1, (JSC::JSCell **)a2)+ 48);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v16, 14, (uint64_t)&v20);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3416) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

void WebCore::JSDOMImplementation::~JSDOMImplementation(WebCore::JSDOMImplementation *this, void *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 8);
    if (*(_DWORD *)(v3 + 24) == 2)
    {
      if ((*(_WORD *)(v3 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v3, a2);
    }
    else
    {
      *(_DWORD *)(v3 + 24) -= 2;
    }
  }
}

unint64_t WebCore::jsDOMImplementationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMImplementationPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMImplementation>,(WebCore::DOMConstructorID)427>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSDOMImplementation::subspaceForImpl(WebCore::JSDOMImplementation *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3496);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 3496))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 3496);
    *(_QWORD *)(v9 + 3496) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSDOMImplementation::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMImplementationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  WTF::ConcurrentPtrHashSet *v9;
  _DWORD *v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  void *v20;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8) + 8);
  if (!v5)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Document";
    a5[1] = 24;
  }
  if ((*(_BYTE *)(v5 + 22) & 8) == 0)
  {
    while (1)
    {
      v6 = (void *)v5;
      if ((*(_WORD *)(v5 + 28) & 0x80) != 0)
      {
        v8 = *(_QWORD *)(v5 + 200);
        if (!v8)
          goto LABEL_12;
        v7 = (uint64_t *)(v8 + 8);
      }
      else
      {
        v7 = (uint64_t *)(v5 + 32);
      }
      v5 = *v7;
      if (!v5)
        goto LABEL_12;
    }
  }
  v6 = *(void **)(*(_QWORD *)(v5 + 40) + 8);
LABEL_12:
  v9 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v10 = (_DWORD *)*((_QWORD *)v9 + 6);
  if ((_DWORD *)((char *)v9 + 56) != v10)
  {
    v11 = v10[1];
    v12 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = v15;
    while (1)
    {
      v17 = *(void **)&v10[2 * v16 + 4];
      if (!v17)
        return 0;
      if (v6 == v17)
        goto LABEL_21;
      v16 = (v16 + 1) & v11;
      if (v16 == v15)
      {
        __break(0xC471u);
        JUMPOUT(0x1949816F4);
      }
    }
  }
  v19 = a4;
  v20 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v9, v6);
  a4 = v19;
  v6 = v20;
  if ((_DWORD)result)
  {
LABEL_21:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

uint64_t *WebCore::JSDOMImplementationOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;

  v3 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  *(_DWORD *)(*(_QWORD *)(v3[1] + 8) + 24) += 2;
  v5 = v3;
  if (*(_DWORD *)(a3 + 48))
  {
    JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), (uint64_t)v3);
  }
  else if (*v3)
  {
    *(_QWORD *)(*v3 + 8) = 3;
    *v3 = 0;
  }
  return WTF::Ref<WebCore::DOMImplementation,WTF::RawPtrTraits<WebCore::DOMImplementation>,WTF::DefaultRefDerefTraits<WebCore::DOMImplementation>>::~Ref((uint64_t *)&v5, v3);
}

uint64_t *WTF::Ref<WebCore::DOMImplementation,WTF::RawPtrTraits<WebCore::DOMImplementation>,WTF::DefaultRefDerefTraits<WebCore::DOMImplementation>>::~Ref(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v3 + 8) + 8);
    if (*(_DWORD *)(v4 + 24) == 2)
    {
      if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v4, a2);
    }
    else
    {
      *(_DWORD *)(v4 + 24) -= 2;
    }
  }
  return a1;
}

uint64_t WebCore::createWrapper<WebCore::DOMImplementation,WebCore::DOMImplementation>(uint64_t a1, uint64_t *a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)*a2;
  v5 = WebCore::getDOMStructure<WebCore::JSDOMImplementation>(*(WebCore::JSDOMImplementation **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSDOMImplementation::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::DOMImplementation,WebCore::JSDOMImplementation>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::wrap<WebCore::DOMImplementation>(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v8;

  v4 = WebCore::getCachedWrapper<WebCore::DOMImplementation>(*(_QWORD *)(a1 + 3320), a2);
  if (v4)
    return v4;
  *(_DWORD *)(*(_QWORD *)(a2[1] + 8) + 24) += 2;
  v8 = a2;
  v5 = WebCore::createWrapper<WebCore::DOMImplementation,WebCore::DOMImplementation>(a1, (uint64_t *)&v8);
  WTF::Ref<WebCore::DOMImplementation,WTF::RawPtrTraits<WebCore::DOMImplementation>,WTF::DefaultRefDerefTraits<WebCore::DOMImplementation>>::~Ref((uint64_t *)&v8, v6);
  return v5;
}

unint64_t WebCore::JSDOMImplementation::toWrapped(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = JSC::jsDynamicCast<WebCore::JSDOMImplementation *>(a2);
  if (result)
    return *(_QWORD *)(result + 24);
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSDOMImplementation *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSDOMImplementation::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSDOMImplementation::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMMatrix>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSCell *v8;
  JSC::JSCell *v9;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v11;
  JSC::JSGlobalObject *v12;
  JSC::VM *v13;
  JSC::JSObject *v14;
  JSC::Structure *v15;
  JSC::VM *FunctionRealm;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  int v24;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  int v28;
  uint64_t v30;
  unsigned int v31;
  JSC *v32;
  JSC::VM *v33;
  WebCore::JSDOMGlobalObject *v34;
  unsigned __int8 *v35;
  unsigned __int8 v36[16];
  int v37;
  JSC::VM *v38;
  uint64_t v39;
  uint64_t *v40;
  char v41[8];
  _BYTE v42[16];
  unsigned int v43;
  char v44;
  int v45;
  char v46[8];
  uint64_t v47;
  unsigned int v48;
  char v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v38 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v38, (uint64_t)"DOMMatrix", 10);
  if (*(_DWORD *)(a2 + 32) == 1 || *(_QWORD *)(a2 + 48) == 10)
  {
    v42[0] = 0;
    v44 = 0;
    v45 = 0;
    v46[0] = 0;
    v49 = 0;
LABEL_5:
    v7 = bmalloc::api::isoAllocate();
    *(_QWORD *)v7 = 0;
    *(_DWORD *)(v7 + 8) = 1;
    *(_OWORD *)(v7 + 80) = xmmword_1969EDD08;
    *(_OWORD *)(v7 + 96) = unk_1969EDD18;
    *(_OWORD *)(v7 + 112) = xmmword_1969EDD28;
    *(_OWORD *)(v7 + 128) = unk_1969EDD38;
    *(_OWORD *)(v7 + 16) = constinit;
    *(_OWORD *)(v7 + 32) = unk_1969EDCD8;
    *(_OWORD *)(v7 + 48) = xmmword_1969EDCE8;
    *(_OWORD *)(v7 + 64) = unk_1969EDCF8;
    *(_BYTE *)(v7 + 144) = 1;
    *(_QWORD *)v36 = v7;
    v37 = 0;
LABEL_6:
    if (v49 && v48 != -1)
      ((void (*)(uint64_t **, char *))off_1E325C008[v48])(&v40, v46);
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0
      || (v8 = (JSCell *)WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(a1, *(JSC::VM **)(v5 + 40), (WebCore::JSDOMGlobalObject *)&v38, v36), *((_DWORD *)v4 + 20))&& (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    {
LABEL_46:
      v8 = 0;
LABEL_25:
      if (v37 != -1)
        ((void (*)(char *, unsigned __int8 *))off_1E325C028[v37])(v46, v36);
      v28 = v45;
      goto LABEL_28;
    }
    v9 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v9 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v9)) == 0
      || (v12 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v13 = (JSC::VM *)*((_QWORD *)a1 + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v11),
          *((_DWORD *)v13 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
    {
LABEL_24:
      if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
        goto LABEL_25;
      goto LABEL_46;
    }
    v17 = *((_QWORD *)FunctionRealm + 412);
    if (v17)
    {
      v18 = *(_DWORD *)(v17 - 8);
      v19 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
      v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
      v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
      v22 = v18 & ((v21 >> 31) ^ v21);
      v23 = *(char ***)(v17 + 16 * v22);
      if (v23 == &WebCore::JSDOMMatrix::s_info)
      {
LABEL_20:
        v14 = *(JSC::JSObject **)(v17 + 16 * v22 + 8);
        if (v14)
        {
LABEL_22:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v12, v14, v15);
          if (!*((_DWORD *)v13 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) == 0)
            JSC::JSObject::setStructure(v8, v13, SubclassStructure);
          goto LABEL_24;
        }
      }
      else
      {
        v24 = 1;
        while (v23)
        {
          v22 = ((_DWORD)v22 + v24) & v18;
          v23 = *(char ***)(v17 + 16 * v22);
          ++v24;
          if (v23 == &WebCore::JSDOMMatrix::s_info)
            goto LABEL_20;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v13, FunctionRealm, v14);
    Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v13, (uint64_t)FunctionRealm, Prototype);
    v14 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
    goto LABEL_22;
  }
  v30 = v6;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>>::convert((uint64_t)v46, a1, *(_QWORD *)(a2 + 48));
  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::String,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>>>::ConversionResultStorage<std::variant<WTF::String,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>>((uint64_t)v41, (uint64_t)v46);
  if (v50 != -1)
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3269628[v50])(v36, &v47);
  v28 = v45;
  if (v45)
  {
    v8 = 0;
LABEL_28:
    if (v28 != -1)
      ((void (*)(char *, _BYTE *))off_1E325C038[v28])(v46, v42);
    return v8;
  }
  v46[0] = 0;
  v49 = 0;
  if (!v44)
    goto LABEL_5;
  v48 = -1;
  v31 = v43;
  if (v43 != -1)
  {
    ((void (*)(uint64_t **, char *, _BYTE *))off_1E325C018[v43])(&v40, v46, v42);
    v48 = v31;
  }
  v49 = 1;
  v39 = v30;
  if (v48 != -1)
  {
    v40 = &v39;
    ((void (*)(unsigned __int8 *__return_ptr, uint64_t **, char *))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore9DOMMatrix6createERNS8_22ScriptExecutionContextEONS_8optionalINS_7variantIJNS6_6StringENS6_6VectorIdLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEEEEEEEE3__0JZNS9_6createESB_SL_E3__1EEEEEJRNS0_6__implIJSE_SI_EEEEEEDcOT_DpOT0____fmatrix
                                                                             + v48))(v36, &v40, v46);
    goto LABEL_6;
  }
  v32 = (JSC *)std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(v32, v33, v34, v35);
}

uint64_t WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(JSC *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3, unsigned __int8 *a4)
{
  int v4;
  bmalloc::api *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char **v13;
  int v14;
  unint64_t v15;
  WebCore::JSDOMMatrix *v16;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v19;
  void *v20;
  bmalloc::api *v21;
  JSC::JSGlobalObject *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WebCore::JSDOMMatrixReadOnly *v28;
  JSC::VM *v29;
  const JSC::JSGlobalObject *v30;
  bmalloc::api *v31;
  WTF::StringImpl *v32;

  v4 = *((_DWORD *)a4 + 4);
  if (!v4)
  {
    v6 = *(bmalloc::api **)a4;
    *(_QWORD *)a4 = 0;
    v31 = v6;
    v7 = *((_QWORD *)a2 + 412);
    if (v7)
    {
      v8 = *(_DWORD *)(v7 - 8);
      v9 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(char ***)(v7 + 16 * v12);
      if (v13 == &WebCore::JSDOMMatrix::s_info)
      {
LABEL_7:
        v15 = *(_QWORD *)(v7 + 16 * v12 + 8);
        if (v15)
          goto LABEL_9;
      }
      else
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(char ***)(v7 + 16 * v12);
          ++v14;
          if (v13 == &WebCore::JSDOMMatrix::s_info)
            goto LABEL_7;
        }
      }
    }
    v16 = (WebCore::JSDOMMatrix *)*((_QWORD *)a2 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v16, a2, a3);
    Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v16, (uint64_t)a2, Prototype);
    v15 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_9:
    v19 = WebCore::JSDOMMatrix::create(v15, a2, (uint64_t *)&v31);
    WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)a2 + 415), (uint64_t *)v6, v19);
    v21 = v31;
    v31 = 0;
    if (v21)
    {
      if (*((_DWORD *)v21 + 2) == 1)
      {
        if (*(_QWORD *)v21)
        {
          *(_QWORD *)(*(_QWORD *)v21 + 8) = 3;
          *(_QWORD *)v21 = 0;
        }
        bmalloc::api::isoDeallocate(v21, v20);
      }
      else
      {
        --*((_DWORD *)v21 + 2);
      }
    }
    return v19;
  }
  if (v4 == 1)
  {
    v25 = (JSC::JSGlobalObject *)*a4;
    LOBYTE(v31) = *a4;
    v26 = (WTF::StringImpl *)*((_QWORD *)a4 + 1);
    *((_QWORD *)a4 + 1) = 0;
    v32 = v26;
    if (!*(_QWORD *)(*(_QWORD *)a3 + 16))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, v25, (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(*(JSC::VM **)a3, this, v27);
      v26 = v32;
    }
    v32 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    return 0;
  }
  v28 = (WebCore::JSDOMMatrixReadOnly *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSDOMMatrixReadOnly::getConstructor(v28, v29, v30);
}

uint64_t WebCore::JSDOMMatrix::prototype(WebCore::JSDOMMatrix *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *Prototype;
  uint64_t Structure;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSDOMMatrix::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSDOMMatrix::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(this, a2, a3);
    Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

JSC::VM *JSC::reifyStaticProperties<35u>(JSC::VM *result, uint64_t a2, uint64_t a3, JSC::JSObject *this)
{
  JSC::VM *v7;
  uint64_t i;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v7 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 1400; i += 40)
  {
    v9 = *(_QWORD *)(a3 + i + 8);
    if (v9)
    {
      if (v9 == 2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v7 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v10 = v12;
      result = (JSC::VM *)JSC::reifyStaticProperty(v7, a2, (unint64_t *)&v12, a3 + i, (unsigned __int8 *)this);
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v10, v11);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return result;
}

bmalloc::api *WebCore::JSDOMMatrixReadOnly::destroy(WebCore::JSDOMMatrixReadOnly *this, JSC::JSCell *a2)
{
  bmalloc::api *result;

  result = (bmalloc::api *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      if (*(_QWORD *)result)
      {
        *(_QWORD *)(*(_QWORD *)result + 8) = 3;
        *(_QWORD *)result = 0;
      }
      return (bmalloc::api *)bmalloc::api::isoDeallocate(result, a2);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

uint64_t WebCore::JSDOMMatrix::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSDOMMatrixReadOnly::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSDOMMatrixReadOnly::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSDOMMatrixReadOnly::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMMatrix::JSDOMMatrix(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

uint64_t WebCore::JSDOMMatrixReadOnly::JSDOMMatrixReadOnly(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

uint64_t WebCore::JSDOMMatrix::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  ++*(_DWORD *)(v2 + 8);
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSDOMMatrix::createPrototype(WebCore::JSDOMMatrix *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSDOMMatrixReadOnly::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSDOMMatrixReadOnly::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSDOMMatrixReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSDOMMatrixReadOnlyPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSDOMMatrixReadOnly::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSDOMMatrixReadOnly::s_info);
  }
  v18 = WebCore::JSDOMMatrixPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSDOMMatrixPrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSDOMMatrixPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSDOMMatrixReadOnly::prototype(WebCore::JSDOMMatrixReadOnly *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSDOMMatrixReadOnly::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSDOMMatrixReadOnly::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSDOMMatrixReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSDOMMatrixReadOnlyPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSDOMMatrixReadOnly::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSDOMMatrixReadOnly::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSDOMMatrixPrototype::create(WebCore::JSDOMMatrixPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  WTF::StringImpl *v14;
  int v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSC::Structure *v21;
  int v22;
  unint64_t v24;
  WTF::StringImpl *v25[6];
  int v26;
  int v27;
  JSC::Structure *v28;
  int v29;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v24 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v24);
    *((_QWORD *)this + 4865) = SlowCase + (int)v24;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<35u>(this, (uint64_t)&WebCore::JSDOMMatrix::s_info, (uint64_t)&WebCore::JSDOMMatrixPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(unsigned int *)(16 * (**(_DWORD **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (**(_DWORD **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMWindowBase::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMWindowBase::s_info && v11 != 0);
  }
  if (!v10)
  {
    WTF::AtomStringImpl::addLiteral();
    v14 = v25[0];
    v15 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v25[0]) = -1;
    WORD2(v25[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v15;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v16);
      else
        *(_DWORD *)v14 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v17 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = JSC::JSString::create((uint64_t)this, v25);
  v20 = v25[0];
  v25[0] = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v18);
    else
      *(_DWORD *)v20 -= 2;
  }
  v21 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v29 = *(_DWORD *)SlowCase;
  v28 = v21;
  v22 = JSC::Structure::outOfLineCapacity(v21);
  v26 = 0;
  v27 = v22;
  v25[0] = (WTF::StringImpl *)&v27;
  v25[1] = (WTF::StringImpl *)SlowCase;
  v25[2] = this;
  v25[3] = (WTF::StringImpl *)&v29;
  v25[4] = (WTF::StringImpl *)&v28;
  v25[5] = (WTF::StringImpl *)&v26;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v21, this, v17, 6, (uint64_t)v25);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v26, v19);
  *((_DWORD *)v21 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrix>,(WebCore::DOMConstructorID)358>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2864);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>,(WebCore::DOMConstructorID)359>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSDOMMatrix>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype((WebCore::JSDOMMatrix *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  JSC::reifyStaticProperties<3u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMMatrix::s_info, &WebCore::JSDOMMatrixConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2864) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMMatrixConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMMatrixPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrix>,(WebCore::DOMConstructorID)358>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMMatrix_a(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_a(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 16) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_b(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_b(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 24) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_c(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 48);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_c(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 48) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_d(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 56);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_d(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 56) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_e(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 112);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_e(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 112) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_f(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 120);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_f(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 120) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m11(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m11(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 16) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m12(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m12(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 24) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m13(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 32);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m13(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 32) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m14(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 40);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m14(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 40) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m21(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 48);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m21(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 48) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m22(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 56);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m22(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 56) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m23(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 64);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m23(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 64) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m24(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 72);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m24(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 72) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m31(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 80);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m31(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 80) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m32(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 88);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m32(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 88) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m33(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 96);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m33(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 96) = v11;
  if (v11 != 1.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m34(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 104);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m34(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 104) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m41(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 112);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m41(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 112) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m42(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 120);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m42(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 120) = v11;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m43(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 128);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m43(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 128) = v11;
  if (v11 != 0.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

unint64_t WebCore::jsDOMMatrix_m44(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 136);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMMatrix_m44(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 136) = v11;
  if (v11 != 1.0)
    *(_BYTE *)(v10 + 144) = 0;
  return 1;
}

uint64_t WebCore::JSDOMMatrix::subspaceForImpl(WebCore::JSDOMMatrix *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2904);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2904))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2904);
    *(_QWORD *)(v8 + 2904) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2904);
  *(_QWORD *)(v3 + 2904) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMMatrixReadOnly::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::toJSNewlyCreated(int a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSDOMMatrix *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;

  v5 = *(uint64_t **)a3;
  v6 = *((_QWORD *)a2 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSDOMMatrix::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSDOMMatrix::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSDOMMatrix *)*((_QWORD *)a2 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v15, a2, a3);
    Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v15, (uint64_t)a2, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
  }
  v18 = WebCore::JSDOMMatrix::create(v14, a2, (uint64_t *)a3);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)a2 + 415), v5, v18);
  return v18;
}

{
  uint64_t *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSDOMPoint *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;

  v5 = *(uint64_t **)a3;
  v6 = *((_QWORD *)a2 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSDOMPoint::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSDOMPoint::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSDOMPoint *)*((_QWORD *)a2 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v15, a2, a3);
    Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v15, (uint64_t)a2, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
  }
  v18 = WebCore::JSDOMPoint::create(v14, (uint64_t)a2, (uint64_t *)a3);
  WebCore::cacheWrapper<WebCore::DOMPoint,WebCore::JSDOMPoint>(*((_QWORD *)a2 + 415), v5, v18);
  return v18;
}

uint64_t WebCore::wrap<WebCore::DOMMatrix>(int a1, JSC::VM *a2, bmalloc::api *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSDOMMatrix *v17;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  void *v20;
  bmalloc::api *v21;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  bmalloc::api *v29;
  int v30;
  bmalloc::api *v31;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v23 = *(_QWORD *)(v5 + 32);
    if (!v23)
      goto LABEL_5;
    v24 = *(_DWORD *)(v23 - 8);
    v25 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v26 = 9 * ((v25 + ~(v25 << 13)) ^ ((v25 + ~(v25 << 13)) >> 8));
    v27 = (v26 ^ (v26 >> 15)) + ~((v26 ^ (v26 >> 15)) << 27);
    v28 = v24 & ((v27 >> 31) ^ v27);
    v29 = *(bmalloc::api **)(v23 + 16 * v28);
    if (v29 != a3)
    {
      v30 = 1;
      while (v29)
      {
        v28 = ((_DWORD)v28 + v30) & v24;
        v29 = *(bmalloc::api **)(v23 + 16 * v28);
        ++v30;
        if (v29 == a3)
          goto LABEL_24;
      }
      goto LABEL_5;
    }
LABEL_24:
    v6 = *(_QWORD *)(v23 + 16 * v28 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)a3;
    if (!*(_QWORD *)a3)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  ++*((_DWORD *)a3 + 2);
  v31 = a3;
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_10:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_12;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_10;
      }
    }
  }
  v17 = (WebCore::JSDOMMatrix *)*((_QWORD *)a2 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v17, a2, a3);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v17, (uint64_t)a2, Prototype);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_12:
  v7 = WebCore::JSDOMMatrix::create(v16, a2, (uint64_t *)&v31);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)a2 + 415), (uint64_t *)a3, v7);
  v21 = v31;
  v31 = 0;
  if (v21)
  {
    if (*((_DWORD *)v21 + 2) == 1)
    {
      if (*(_QWORD *)v21)
      {
        *(_QWORD *)(*(_QWORD *)v21 + 8) = 3;
        *(_QWORD *)v21 = 0;
      }
      bmalloc::api::isoDeallocate(v21, v20);
    }
    else
    {
      --*((_DWORD *)v21 + 2);
    }
  }
  return v7;
}

uint64_t WebCore::JSDOMMatrix::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDOMMatrix::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDOMMatrix::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::convertDictionary<WebCore::DOMMatrix2DInit>@<X0>(JSC::JSCell *this@<X1>, uint64_t result@<X0>, uint64_t a3@<X8>)
{
  _DWORD *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  JSC::JSGlobalObject *v29;
  uint64_t Object;
  JSC::Structure *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  JSC::VM *v34;
  double v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  JSC::VM *v39;
  double v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  JSC::VM *v44;
  double v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  JSC::VM *v49;
  double v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  JSC::VM *v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  JSC::VM *v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  JSC::VM *v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  JSC::VM *v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  JSC::VM *v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  JSC::VM *v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  JSC::VM *v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  WTF::StringImpl *v81;
  JSC::VM *v82;
  int v83;
  double v84;
  double v85;
  double v86;
  double v87;
  JSC::VM *v88;
  JSC::VM *v89;
  JSC::VM *v90;
  JSC::VM *v91;
  JSC::VM *v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  double v107;
  double v108;
  double v109;
  double v110;
  _BYTE v111[7];
  _BYTE v112[7];
  _BYTE v113[7];
  _BYTE v114[7];
  _BYTE v115[7];
  _BYTE v116[7];
  _BYTE v117[7];
  _BYTE v118[7];
  _BYTE v119[7];
  _BYTE v120[7];
  _BYTE v121[7];
  _BYTE v122[7];
  WTF::StringImpl *v123[2];

  v4 = *(_DWORD **)(result + 56);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v29 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
    }
    else
    {
      v31 = (JSC::Structure *)Object;
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v33 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v123[0])
      {
        if (*(_DWORD *)v123[0] == 2)
          WTF::StringImpl::destroy(v123[0], v32);
        else
          *(_DWORD *)v123[0] -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v33 == (WTF::StringImpl *)10)
      {
        v106 = 0;
        v110 = 0.0;
      }
      else
      {
        v123[0] = v33;
        v34 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v33 >= 0xFFFE000000000000)
        {
          v35 = (double)(int)v33;
        }
        else if ((unint64_t)v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v88 = (JSC::VM *)*((_QWORD *)v29 + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v34 = v88;
        }
        else
        {
          *(_QWORD *)&v35 = (char *)v33 - 0x2000000000000;
        }
        if (*((_DWORD *)v34 + 20))
        {
          v84 = v35;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v34);
          v35 = v84;
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v110 = v35;
        v106 = 1;
      }
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v36 = v123[0];
      v38 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v36)
      {
        if (*(_DWORD *)v36 == 2)
          WTF::StringImpl::destroy(v36, v37);
        else
          *(_DWORD *)v36 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v38 == (WTF::StringImpl *)10)
      {
        v105 = 0;
        v109 = 0.0;
      }
      else
      {
        v123[0] = v38;
        v39 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v38 >= 0xFFFE000000000000)
        {
          v40 = (double)(int)v38;
        }
        else if ((unint64_t)v38 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v89 = (JSC::VM *)*((_QWORD *)v29 + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v39 = v89;
        }
        else
        {
          *(_QWORD *)&v40 = (char *)v38 - 0x2000000000000;
        }
        if (*((_DWORD *)v39 + 20))
        {
          v85 = v40;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v39);
          v40 = v85;
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v109 = v40;
        v105 = 1;
      }
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v41 = v123[0];
      v43 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v42);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v43 == (WTF::StringImpl *)10)
      {
        v104 = 0;
        v108 = 0.0;
      }
      else
      {
        v123[0] = v43;
        v44 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v43 >= 0xFFFE000000000000)
        {
          v45 = (double)(int)v43;
        }
        else if ((unint64_t)v43 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v90 = (JSC::VM *)*((_QWORD *)v29 + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v44 = v90;
        }
        else
        {
          *(_QWORD *)&v45 = (char *)v43 - 0x2000000000000;
        }
        if (*((_DWORD *)v44 + 20))
        {
          v86 = v45;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v44);
          v45 = v86;
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v108 = v45;
        v104 = 1;
      }
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v46 = v123[0];
      v48 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v46)
      {
        if (*(_DWORD *)v46 == 2)
          WTF::StringImpl::destroy(v46, v47);
        else
          *(_DWORD *)v46 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v48 == (WTF::StringImpl *)10)
      {
        v103 = 0;
        v107 = 0.0;
      }
      else
      {
        v123[0] = v48;
        v49 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v48 >= 0xFFFE000000000000)
        {
          v50 = (double)(int)v48;
        }
        else if ((unint64_t)v48 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v91 = (JSC::VM *)*((_QWORD *)v29 + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v49 = v91;
        }
        else
        {
          *(_QWORD *)&v50 = (char *)v48 - 0x2000000000000;
        }
        if (*((_DWORD *)v49 + 20))
        {
          v87 = v50;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v49);
          v50 = v87;
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v107 = v50;
        v103 = 1;
      }
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v51 = v123[0];
      v53 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v51)
      {
        if (*(_DWORD *)v51 == 2)
          WTF::StringImpl::destroy(v51, v52);
        else
          *(_DWORD *)v51 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v53 == (WTF::StringImpl *)10)
      {
        v102 = 0;
        v21 = 0.0;
      }
      else
      {
        v123[0] = v53;
        v54 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v53 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v53;
        }
        else if ((unint64_t)v53 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v92 = (JSC::VM *)*((_QWORD *)v29 + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v54 = v92;
          v21 = v93;
        }
        else
        {
          *(_QWORD *)&v21 = (char *)v53 - 0x2000000000000;
        }
        if (*((_DWORD *)v54 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v54);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v102 = 1;
      }
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v55 = v123[0];
      v57 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v55)
      {
        if (*(_DWORD *)v55 == 2)
          WTF::StringImpl::destroy(v55, v56);
        else
          *(_DWORD *)v55 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v57 == (WTF::StringImpl *)10)
      {
        v101 = 0;
        v22 = 0.0;
      }
      else
      {
        v123[0] = v57;
        v58 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v57 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v57;
        }
        else if ((unint64_t)v57 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v22 = v94;
        }
        else
        {
          *(_QWORD *)&v22 = (char *)v57 - 0x2000000000000;
        }
        if (*((_DWORD *)v58 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v58);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v101 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v59 = v123[0];
      v61 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v59)
      {
        if (*(_DWORD *)v59 == 2)
          WTF::StringImpl::destroy(v59, v60);
        else
          *(_DWORD *)v59 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v61 == (WTF::StringImpl *)10)
      {
        v11 = 0;
        v23 = 0.0;
      }
      else
      {
        v123[0] = v61;
        v62 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v61 >= 0xFFFE000000000000)
        {
          v23 = (double)(int)v61;
        }
        else if ((unint64_t)v61 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v23 = v95;
        }
        else
        {
          *(_QWORD *)&v23 = (char *)v61 - 0x2000000000000;
        }
        if (*((_DWORD *)v62 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v62);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v11 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v63 = v123[0];
      v65 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v63)
      {
        if (*(_DWORD *)v63 == 2)
          WTF::StringImpl::destroy(v63, v64);
        else
          *(_DWORD *)v63 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v65 == (WTF::StringImpl *)10)
      {
        v12 = 0;
        v24 = 0.0;
      }
      else
      {
        v123[0] = v65;
        v66 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v65 >= 0xFFFE000000000000)
        {
          v24 = (double)(int)v65;
        }
        else if ((unint64_t)v65 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v24 = v96;
        }
        else
        {
          *(_QWORD *)&v24 = (char *)v65 - 0x2000000000000;
        }
        if (*((_DWORD *)v66 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v66);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v12 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v67 = v123[0];
      v69 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v67)
      {
        if (*(_DWORD *)v67 == 2)
          WTF::StringImpl::destroy(v67, v68);
        else
          *(_DWORD *)v67 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v69 == (WTF::StringImpl *)10)
      {
        v13 = 0;
        v25 = 0.0;
      }
      else
      {
        v123[0] = v69;
        v70 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v69 >= 0xFFFE000000000000)
        {
          v25 = (double)(int)v69;
        }
        else if ((unint64_t)v69 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v25 = v97;
        }
        else
        {
          *(_QWORD *)&v25 = (char *)v69 - 0x2000000000000;
        }
        if (*((_DWORD *)v70 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v70);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v13 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v71 = v123[0];
      v73 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v71)
      {
        if (*(_DWORD *)v71 == 2)
          WTF::StringImpl::destroy(v71, v72);
        else
          *(_DWORD *)v71 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v73 == (WTF::StringImpl *)10)
      {
        v14 = 0;
        v26 = 0.0;
      }
      else
      {
        v123[0] = v73;
        v74 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v73 >= 0xFFFE000000000000)
        {
          v26 = (double)(int)v73;
        }
        else if ((unint64_t)v73 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v26 = v98;
        }
        else
        {
          *(_QWORD *)&v26 = (char *)v73 - 0x2000000000000;
        }
        if (*((_DWORD *)v74 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v74);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v14 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v75 = v123[0];
      v77 = (WTF::StringImpl *)JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      if (v75)
      {
        if (*(_DWORD *)v75 == 2)
          WTF::StringImpl::destroy(v75, v76);
        else
          *(_DWORD *)v75 -= 2;
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v77 == (WTF::StringImpl *)10)
      {
        v15 = 0;
        v27 = 0.0;
      }
      else
      {
        v123[0] = v77;
        v78 = (JSC::VM *)*((_QWORD *)v29 + 7);
        if ((unint64_t)v77 >= 0xFFFE000000000000)
        {
          v27 = (double)(int)v77;
        }
        else if ((unint64_t)v77 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
          v27 = v99;
        }
        else
        {
          *(_QWORD *)&v27 = (char *)v77 - 0x2000000000000;
        }
        if (*((_DWORD *)v78 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v78);
          if ((_DWORD)result)
            goto LABEL_165;
        }
        v15 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v79 = v123[0];
      result = JSC::JSObject::get(v31, v29, (unint64_t)v123[0]);
      v81 = (WTF::StringImpl *)result;
      v18 = v109;
      v17 = v110;
      v20 = v107;
      v19 = v108;
      if (v79)
      {
        if (*(_DWORD *)v79 == 2)
        {
          result = WTF::StringImpl::destroy(v79, v80);
          v20 = v107;
          v19 = v108;
          v18 = v109;
          v17 = v110;
        }
        else
        {
          *(_DWORD *)v79 -= 2;
        }
      }
      if (v4[20])
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        v20 = v107;
        v19 = v108;
        v18 = v109;
        v17 = v110;
        if ((result & 1) != 0)
          goto LABEL_165;
      }
      if (v81 == (WTF::StringImpl *)10)
      {
        v16 = 0;
        v28 = 0.0;
LABEL_137:
        v6 = v105;
        v5 = v106;
        v8 = v103;
        v7 = v104;
        v10 = v101;
        v9 = v102;
        goto LABEL_138;
      }
      v123[0] = v81;
      v82 = (JSC::VM *)*((_QWORD *)v29 + 7);
      if ((unint64_t)v81 >= 0xFFFE000000000000)
      {
        v28 = (double)(int)v81;
      }
      else if ((unint64_t)v81 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        result = JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v29);
        v20 = v107;
        v19 = v108;
        v28 = v100;
        v18 = v109;
        v17 = v110;
      }
      else
      {
        *(_QWORD *)&v28 = (char *)v81 - 0x2000000000000;
      }
      if (!*((_DWORD *)v82 + 20)
        || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v82),
            v20 = v107,
            v19 = v108,
            v18 = v109,
            v17 = v110,
            !(_DWORD)result))
      {
        v16 = 1;
        goto LABEL_137;
      }
    }
LABEL_165:
    v83 = 1;
    goto LABEL_139;
  }
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0.0;
  v18 = 0.0;
  v19 = 0.0;
  v20 = 0.0;
  v21 = 0.0;
  v22 = 0.0;
  v23 = 0.0;
  v24 = 0.0;
  v25 = 0.0;
  v26 = 0.0;
  v27 = 0.0;
  v28 = 0.0;
LABEL_138:
  v83 = 0;
  *(_BYTE *)(a3 + 16) = v5;
  *(_DWORD *)(a3 + 17) = *(_DWORD *)v122;
  *(_DWORD *)(a3 + 20) = *(_DWORD *)&v122[3];
  *(double *)(a3 + 8) = v17;
  *(double *)(a3 + 24) = v18;
  *(_BYTE *)(a3 + 32) = v6;
  *(_DWORD *)(a3 + 33) = *(_DWORD *)v121;
  *(_DWORD *)(a3 + 36) = *(_DWORD *)&v121[3];
  *(double *)(a3 + 40) = v19;
  *(_BYTE *)(a3 + 48) = v7;
  *(_DWORD *)(a3 + 52) = *(_DWORD *)&v120[3];
  *(_DWORD *)(a3 + 49) = *(_DWORD *)v120;
  *(double *)(a3 + 56) = v20;
  *(_BYTE *)(a3 + 64) = v8;
  *(_DWORD *)(a3 + 68) = *(_DWORD *)&v119[3];
  *(_DWORD *)(a3 + 65) = *(_DWORD *)v119;
  *(double *)(a3 + 72) = v21;
  *(_BYTE *)(a3 + 80) = v9;
  *(_DWORD *)(a3 + 84) = *(_DWORD *)&v118[3];
  *(_DWORD *)(a3 + 81) = *(_DWORD *)v118;
  *(double *)(a3 + 88) = v22;
  *(_BYTE *)(a3 + 96) = v10;
  *(_DWORD *)(a3 + 100) = *(_DWORD *)&v117[3];
  *(_DWORD *)(a3 + 97) = *(_DWORD *)v117;
  *(double *)(a3 + 104) = v23;
  *(_BYTE *)(a3 + 112) = v11;
  *(_DWORD *)(a3 + 116) = *(_DWORD *)&v116[3];
  *(_DWORD *)(a3 + 113) = *(_DWORD *)v116;
  *(double *)(a3 + 120) = v24;
  *(_BYTE *)(a3 + 128) = v12;
  *(_DWORD *)(a3 + 132) = *(_DWORD *)&v115[3];
  *(_DWORD *)(a3 + 129) = *(_DWORD *)v115;
  *(double *)(a3 + 136) = v25;
  *(_BYTE *)(a3 + 144) = v13;
  *(_DWORD *)(a3 + 148) = *(_DWORD *)&v114[3];
  *(_DWORD *)(a3 + 145) = *(_DWORD *)v114;
  *(double *)(a3 + 152) = v26;
  *(_BYTE *)(a3 + 160) = v14;
  *(_DWORD *)(a3 + 164) = *(_DWORD *)&v113[3];
  *(_DWORD *)(a3 + 161) = *(_DWORD *)v113;
  *(double *)(a3 + 168) = v27;
  *(_BYTE *)(a3 + 176) = v15;
  *(_DWORD *)(a3 + 180) = *(_DWORD *)&v112[3];
  *(_DWORD *)(a3 + 177) = *(_DWORD *)v112;
  *(double *)(a3 + 184) = v28;
  *(_BYTE *)(a3 + 192) = v16;
  *(_DWORD *)(a3 + 196) = *(_DWORD *)&v111[3];
  *(_DWORD *)(a3 + 193) = *(_DWORD *)v111;
LABEL_139:
  *(_DWORD *)(a3 + 200) = v83;
  return result;
}

uint64_t WebCore::convertDictionary<WebCore::DOMMatrixInit>(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  _DWORD *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t result;
  char v15;
  char v16;
  __int16 v17;
  __int16 v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t Object;
  JSC::Structure *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  double v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  JSC::VM *v51;
  double v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  JSC::VM *v56;
  double v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  JSC::VM *v61;
  double v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  JSC::VM *v66;
  double v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  JSC::VM *v71;
  double v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  JSC::VM *v76;
  double v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  JSC::VM *v81;
  double v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  JSC::VM *v86;
  double v87;
  WTF::StringImpl *v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  JSC::VM *v91;
  double v92;
  WTF::StringImpl *v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  JSC::VM *v96;
  double v97;
  WTF::StringImpl *v98;
  WTF::StringImpl *v99;
  WTF::StringImpl *v100;
  JSC::VM *v101;
  double v102;
  WTF::StringImpl *v103;
  WTF::StringImpl *v104;
  unint64_t v105;
  JSC::VM *v106;
  double v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  WTF::StringImpl *v110;
  double v111;
  JSC::VM *v112;
  WTF::StringImpl *v113;
  WTF::StringImpl *v114;
  WTF::StringImpl *v115;
  double v116;
  JSC::VM *v117;
  WTF::StringImpl *v118;
  WTF::StringImpl *v119;
  WTF::StringImpl *v120;
  JSC::VM *v121;
  WTF::StringImpl *v122;
  WTF::StringImpl *v123;
  WTF::StringImpl *v124;
  JSC::VM *v125;
  WTF::StringImpl *v126;
  WTF::StringImpl *v127;
  WTF::StringImpl *v128;
  JSC::VM *v129;
  WTF::StringImpl *v130;
  WTF::StringImpl *v131;
  WTF::StringImpl *v132;
  JSC::VM *v133;
  WTF::StringImpl *v134;
  WTF::StringImpl *v135;
  WTF::StringImpl *v136;
  JSC::VM *v137;
  WTF::StringImpl *v138;
  WTF::StringImpl *v139;
  WTF::StringImpl *v140;
  JSC::VM *v141;
  WTF::StringImpl *v142;
  WTF::StringImpl *v143;
  WTF::StringImpl *v144;
  JSC::VM *v145;
  WTF::StringImpl *v146;
  WTF::StringImpl *v147;
  WTF::StringImpl *v148;
  JSC::VM *v149;
  int v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  double v164;
  JSC::VM *v165;
  JSC::VM *v166;
  JSC::VM *v167;
  JSC::VM *v168;
  JSC::VM *v169;
  double v170;
  double v171;
  double v172;
  double v173;
  double v174;
  double v175;
  double v176;
  double v177;
  BOOL v178;
  int v179;
  uint64_t v180;
  int *v181;
  int v182;
  unsigned int v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  double v198;
  double v199;
  double v200;
  double v201;
  double v202;
  double v203;
  double v204;
  double v205;
  double v206;
  int v207;
  __int16 v208;
  _BYTE v209[7];
  _BYTE v210[7];
  _BYTE v211[7];
  _BYTE v212[7];
  _BYTE v213[7];
  _BYTE v214[7];
  _BYTE v215[7];
  _BYTE v216[7];
  _BYTE v217[7];
  _BYTE v218[7];
  _BYTE v219[7];
  _BYTE v220[7];
  JSC::VM *v221;
  WTF::StringImpl *v222[2];

  v4 = (_DWORD *)*((_QWORD *)a2 + 7);
  v221 = (JSC::VM *)v4;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
      goto LABEL_288;
    }
    v43 = (JSC::Structure *)Object;
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v45 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v222[0])
    {
      if (*(_DWORD *)v222[0] == 2)
        WTF::StringImpl::destroy(v222[0], v44);
      else
        *(_DWORD *)v222[0] -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v45 == (WTF::StringImpl *)10)
    {
      v192 = 0;
      v206 = 0.0;
    }
    else
    {
      v222[0] = v45;
      v46 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v45 >= 0xFFFE000000000000)
      {
        v47 = (double)(int)v45;
      }
      else if ((unint64_t)v45 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v165 = (JSC::VM *)*((_QWORD *)a2 + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
        v46 = v165;
      }
      else
      {
        *(_QWORD *)&v47 = (char *)v45 - 0x2000000000000;
      }
      if (*((_DWORD *)v46 + 20))
      {
        v151 = v47;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v46);
        v47 = v151;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v206 = v47;
      v192 = 1;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v48 = v222[0];
    v50 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v49);
      else
        *(_DWORD *)v48 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v50 == (WTF::StringImpl *)10)
    {
      v191 = 0;
      v205 = 0.0;
    }
    else
    {
      v222[0] = v50;
      v51 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v50 >= 0xFFFE000000000000)
      {
        v52 = (double)(int)v50;
      }
      else if ((unint64_t)v50 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v166 = (JSC::VM *)*((_QWORD *)a2 + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
        v51 = v166;
      }
      else
      {
        *(_QWORD *)&v52 = (char *)v50 - 0x2000000000000;
      }
      if (*((_DWORD *)v51 + 20))
      {
        v152 = v52;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v51);
        v52 = v152;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v205 = v52;
      v191 = 1;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v53 = v222[0];
    v55 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, v54);
      else
        *(_DWORD *)v53 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v55 == (WTF::StringImpl *)10)
    {
      v190 = 0;
      v204 = 0.0;
    }
    else
    {
      v222[0] = v55;
      v56 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v55 >= 0xFFFE000000000000)
      {
        v57 = (double)(int)v55;
      }
      else if ((unint64_t)v55 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v167 = (JSC::VM *)*((_QWORD *)a2 + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
        v56 = v167;
      }
      else
      {
        *(_QWORD *)&v57 = (char *)v55 - 0x2000000000000;
      }
      if (*((_DWORD *)v56 + 20))
      {
        v153 = v57;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v56);
        v57 = v153;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v204 = v57;
      v190 = 1;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v58 = v222[0];
    v60 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v59);
      else
        *(_DWORD *)v58 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v60 == (WTF::StringImpl *)10)
    {
      v189 = 0;
      v203 = 0.0;
    }
    else
    {
      v222[0] = v60;
      v61 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v60 >= 0xFFFE000000000000)
      {
        v62 = (double)(int)v60;
      }
      else if ((unint64_t)v60 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v168 = (JSC::VM *)*((_QWORD *)a2 + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
        v61 = v168;
      }
      else
      {
        *(_QWORD *)&v62 = (char *)v60 - 0x2000000000000;
      }
      if (*((_DWORD *)v61 + 20))
      {
        v154 = v62;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v61);
        v62 = v154;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v203 = v62;
      v189 = 1;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v63 = v222[0];
    v65 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, v64);
      else
        *(_DWORD *)v63 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v65 == (WTF::StringImpl *)10)
    {
      v188 = 0;
      v202 = 0.0;
    }
    else
    {
      v222[0] = v65;
      v66 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v65 >= 0xFFFE000000000000)
      {
        v67 = (double)(int)v65;
      }
      else if ((unint64_t)v65 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v169 = (JSC::VM *)*((_QWORD *)a2 + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
        v66 = v169;
      }
      else
      {
        *(_QWORD *)&v67 = (char *)v65 - 0x2000000000000;
      }
      if (*((_DWORD *)v66 + 20))
      {
        v155 = v67;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v66);
        v67 = v155;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v202 = v67;
      v188 = 1;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v68 = v222[0];
    v70 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v68)
    {
      if (*(_DWORD *)v68 == 2)
        WTF::StringImpl::destroy(v68, v69);
      else
        *(_DWORD *)v68 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v70 == (WTF::StringImpl *)10)
    {
      v187 = 0;
      v201 = 0.0;
    }
    else
    {
      v222[0] = v70;
      v71 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v70 >= 0xFFFE000000000000)
      {
        v72 = (double)(int)v70;
      }
      else if ((unint64_t)v70 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v72 = (char *)v70 - 0x2000000000000;
      }
      if (*((_DWORD *)v71 + 20))
      {
        v156 = v72;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v71);
        v72 = v156;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v201 = v72;
      v187 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v73 = v222[0];
    v75 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v73)
    {
      if (*(_DWORD *)v73 == 2)
        WTF::StringImpl::destroy(v73, v74);
      else
        *(_DWORD *)v73 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v75 == (WTF::StringImpl *)10)
    {
      v186 = 0;
      v200 = 0.0;
    }
    else
    {
      v222[0] = v75;
      v76 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v75 >= 0xFFFE000000000000)
      {
        v77 = (double)(int)v75;
      }
      else if ((unint64_t)v75 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v77 = (char *)v75 - 0x2000000000000;
      }
      if (*((_DWORD *)v76 + 20))
      {
        v157 = v77;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v76);
        v77 = v157;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v200 = v77;
      v186 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v78 = v222[0];
    v80 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v78)
    {
      if (*(_DWORD *)v78 == 2)
        WTF::StringImpl::destroy(v78, v79);
      else
        *(_DWORD *)v78 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v80 == (WTF::StringImpl *)10)
    {
      v185 = 0;
      v199 = 0.0;
    }
    else
    {
      v222[0] = v80;
      v81 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v80 >= 0xFFFE000000000000)
      {
        v82 = (double)(int)v80;
      }
      else if ((unint64_t)v80 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v82 = (char *)v80 - 0x2000000000000;
      }
      if (*((_DWORD *)v81 + 20))
      {
        v158 = v82;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v81);
        v82 = v158;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v199 = v82;
      v185 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v83 = v222[0];
    v85 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v83)
    {
      if (*(_DWORD *)v83 == 2)
        WTF::StringImpl::destroy(v83, v84);
      else
        *(_DWORD *)v83 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v85 == (WTF::StringImpl *)10)
    {
      v184 = 0;
      v198 = 0.0;
    }
    else
    {
      v222[0] = v85;
      v86 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v85 >= 0xFFFE000000000000)
      {
        v87 = (double)(int)v85;
      }
      else if ((unint64_t)v85 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v87 = (char *)v85 - 0x2000000000000;
      }
      if (*((_DWORD *)v86 + 20))
      {
        v159 = v87;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v86);
        v87 = v159;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v198 = v87;
      v184 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v88 = v222[0];
    v90 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v88)
    {
      if (*(_DWORD *)v88 == 2)
        WTF::StringImpl::destroy(v88, v89);
      else
        *(_DWORD *)v88 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v90 == (WTF::StringImpl *)10)
    {
      v183 = 0;
      v197 = 0.0;
    }
    else
    {
      v222[0] = v90;
      v91 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v90 >= 0xFFFE000000000000)
      {
        v92 = (double)(int)v90;
      }
      else if ((unint64_t)v90 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v92 = (char *)v90 - 0x2000000000000;
      }
      if (*((_DWORD *)v91 + 20))
      {
        v160 = v92;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v91);
        v92 = v160;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v197 = v92;
      v183 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v93 = v222[0];
    v95 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v93)
    {
      if (*(_DWORD *)v93 == 2)
        WTF::StringImpl::destroy(v93, v94);
      else
        *(_DWORD *)v93 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v95 == (WTF::StringImpl *)10)
    {
      v15 = 0;
      v196 = 0.0;
    }
    else
    {
      v222[0] = v95;
      v96 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v95 >= 0xFFFE000000000000)
      {
        v97 = (double)(int)v95;
      }
      else if ((unint64_t)v95 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v97 = (char *)v95 - 0x2000000000000;
      }
      if (*((_DWORD *)v96 + 20))
      {
        v161 = v97;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v96);
        v97 = v161;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v196 = v97;
      v15 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v98 = v222[0];
    v100 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v98)
    {
      if (*(_DWORD *)v98 == 2)
        WTF::StringImpl::destroy(v98, v99);
      else
        *(_DWORD *)v98 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v100 == (WTF::StringImpl *)10)
    {
      v16 = 0;
      v195 = 0.0;
    }
    else
    {
      v222[0] = v100;
      v101 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if ((unint64_t)v100 >= 0xFFFE000000000000)
      {
        v102 = (double)(int)v100;
      }
      else if ((unint64_t)v100 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
      }
      else
      {
        *(_QWORD *)&v102 = (char *)v100 - 0x2000000000000;
      }
      if (*((_DWORD *)v101 + 20))
      {
        v162 = v102;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v101);
        v102 = v162;
        if ((_DWORD)result)
          goto LABEL_288;
      }
      v195 = v102;
      v16 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v103 = v222[0];
    v105 = JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
    if (v103)
    {
      if (*(_DWORD *)v103 == 2)
        WTF::StringImpl::destroy(v103, v104);
      else
        *(_DWORD *)v103 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    if (v105 == 10)
    {
      v17 = 0;
      v18 = 0;
LABEL_149:
      WTF::AtomStringImpl::addLiteral();
      v108 = v222[0];
      v110 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
      if (v108)
      {
        if (*(_DWORD *)v108 == 2)
          WTF::StringImpl::destroy(v108, v109);
        else
          *(_DWORD *)v108 -= 2;
      }
      if (!*((_DWORD *)v221 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
      {
        v111 = 0.0;
        if (v110 == (WTF::StringImpl *)10)
          goto LABEL_158;
        v222[0] = v110;
        v112 = (JSC::VM *)*((_QWORD *)a2 + 7);
        if ((unint64_t)v110 >= 0xFFFE000000000000)
        {
          v111 = (double)(int)v110;
        }
        else if ((unint64_t)v110 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
        }
        else
        {
          *(_QWORD *)&v111 = (char *)v110 - 0x2000000000000;
        }
        if (!*((_DWORD *)v112 + 20)
          || (v163 = v111, result = JSC::VM::hasExceptionsAfterHandlingTraps(v112), v111 = v163, (result & 1) == 0))
        {
LABEL_158:
          v194 = v111;
          WTF::AtomStringImpl::addLiteral();
          v113 = v222[0];
          v115 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
          if (v113)
          {
            if (*(_DWORD *)v113 == 2)
              WTF::StringImpl::destroy(v113, v114);
            else
              *(_DWORD *)v113 -= 2;
          }
          if (!*((_DWORD *)v221 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
          {
            v116 = 0.0;
            if (v115 == (WTF::StringImpl *)10)
              goto LABEL_167;
            v222[0] = v115;
            v117 = (JSC::VM *)*((_QWORD *)a2 + 7);
            if ((unint64_t)v115 >= 0xFFFE000000000000)
            {
              v116 = (double)(int)v115;
            }
            else if ((unint64_t)v115 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
            }
            else
            {
              *(_QWORD *)&v116 = (char *)v115 - 0x2000000000000;
            }
            if (!*((_DWORD *)v117 + 20)
              || (v164 = v116, result = JSC::VM::hasExceptionsAfterHandlingTraps(v117), v116 = v164, (result & 1) == 0))
            {
LABEL_167:
              v193 = v116;
              WTF::AtomStringImpl::addLiteral();
              v118 = v222[0];
              v120 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
              if (v118)
              {
                if (*(_DWORD *)v118 == 2)
                  WTF::StringImpl::destroy(v118, v119);
                else
                  *(_DWORD *)v118 -= 2;
              }
              if (!*((_DWORD *)v221 + 20)
                || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
              {
                v37 = 0.0;
                if (v120 == (WTF::StringImpl *)10
                  || ((v222[0] = v120,
                       v121 = (JSC::VM *)*((_QWORD *)a2 + 7),
                       (unint64_t)v120 >= 0xFFFE000000000000)
                    ? (v37 = (double)(int)v120)
                    : (unint64_t)v120 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                    ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v37 = v170)
                    : (*(_QWORD *)&v37 = (char *)v120 - 0x2000000000000),
                      !*((_DWORD *)v121 + 20)
                   || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v121), (result & 1) == 0)))
                {
                  WTF::AtomStringImpl::addLiteral();
                  v122 = v222[0];
                  v124 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                  if (v122)
                  {
                    if (*(_DWORD *)v122 == 2)
                      WTF::StringImpl::destroy(v122, v123);
                    else
                      *(_DWORD *)v122 -= 2;
                  }
                  if (!*((_DWORD *)v221 + 20)
                    || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
                  {
                    v22 = 0.0;
                    if (v124 == (WTF::StringImpl *)10
                      || ((v222[0] = v124,
                           v125 = (JSC::VM *)*((_QWORD *)a2 + 7),
                           (unint64_t)v124 >= 0xFFFE000000000000)
                        ? (v22 = (double)(int)v124)
                        : (unint64_t)v124 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                        ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v22 = v171)
                        : (*(_QWORD *)&v22 = (char *)v124 - 0x2000000000000),
                          !*((_DWORD *)v125 + 20)
                       || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v125), (result & 1) == 0)))
                    {
                      WTF::AtomStringImpl::addLiteral();
                      v126 = v222[0];
                      v128 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                      if (v126)
                      {
                        if (*(_DWORD *)v126 == 2)
                          WTF::StringImpl::destroy(v126, v127);
                        else
                          *(_DWORD *)v126 -= 2;
                      }
                      if (!*((_DWORD *)v221 + 20)
                        || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
                      {
                        v38 = 0.0;
                        if (v128 == (WTF::StringImpl *)10
                          || ((v222[0] = v128,
                               v129 = (JSC::VM *)*((_QWORD *)a2 + 7),
                               (unint64_t)v128 >= 0xFFFE000000000000)
                            ? (v38 = (double)(int)v128)
                            : (unint64_t)v128 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                            ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v38 = v172)
                            : (*(_QWORD *)&v38 = (char *)v128 - 0x2000000000000),
                              !*((_DWORD *)v129 + 20)
                           || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v129), (result & 1) == 0)))
                        {
                          WTF::AtomStringImpl::addLiteral();
                          v130 = v222[0];
                          v132 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                          if (v130)
                          {
                            if (*(_DWORD *)v130 == 2)
                              WTF::StringImpl::destroy(v130, v131);
                            else
                              *(_DWORD *)v130 -= 2;
                          }
                          if (!*((_DWORD *)v221 + 20)
                            || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
                          {
                            v21 = 0.0;
                            if (v132 == (WTF::StringImpl *)10
                              || ((v222[0] = v132,
                                   v133 = (JSC::VM *)*((_QWORD *)a2 + 7),
                                   (unint64_t)v132 >= 0xFFFE000000000000)
                                ? (v21 = (double)(int)v132)
                                : (unint64_t)v132 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                                ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v21 = v173)
                                : (*(_QWORD *)&v21 = (char *)v132 - 0x2000000000000),
                                  !*((_DWORD *)v133 + 20)
                               || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v133), (result & 1) == 0)))
                            {
                              WTF::AtomStringImpl::addLiteral();
                              v134 = v222[0];
                              v136 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                              if (v134)
                              {
                                if (*(_DWORD *)v134 == 2)
                                  WTF::StringImpl::destroy(v134, v135);
                                else
                                  *(_DWORD *)v134 -= 2;
                              }
                              if (!*((_DWORD *)v221 + 20)
                                || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
                              {
                                v39 = 1.0;
                                if (v136 == (WTF::StringImpl *)10
                                  || ((v222[0] = v136,
                                       v137 = (JSC::VM *)*((_QWORD *)a2 + 7),
                                       (unint64_t)v136 >= 0xFFFE000000000000)
                                    ? (v39 = (double)(int)v136)
                                    : (unint64_t)v136 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                                    ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v39 = v174)
                                    : (*(_QWORD *)&v39 = (char *)v136 - 0x2000000000000),
                                      !*((_DWORD *)v137 + 20)
                                   || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v137), (result & 1) == 0)))
                                {
                                  WTF::AtomStringImpl::addLiteral();
                                  v138 = v222[0];
                                  v140 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                                  if (v138)
                                  {
                                    if (*(_DWORD *)v138 == 2)
                                      WTF::StringImpl::destroy(v138, v139);
                                    else
                                      *(_DWORD *)v138 -= 2;
                                  }
                                  if (!*((_DWORD *)v221 + 20)
                                    || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
                                  {
                                    v19 = 0.0;
                                    if (v140 == (WTF::StringImpl *)10
                                      || ((v222[0] = v140,
                                           v141 = (JSC::VM *)*((_QWORD *)a2 + 7),
                                           (unint64_t)v140 >= 0xFFFE000000000000)
                                        ? (v19 = (double)(int)v140)
                                        : (unint64_t)v140 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                                        ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v19 = v175)
                                        : (*(_QWORD *)&v19 = (char *)v140 - 0x2000000000000),
                                          !*((_DWORD *)v141 + 20)
                                       || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v141), (result & 1) == 0)))
                                    {
                                      WTF::AtomStringImpl::addLiteral();
                                      v142 = v222[0];
                                      v144 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                                      if (v142)
                                      {
                                        if (*(_DWORD *)v142 == 2)
                                          WTF::StringImpl::destroy(v142, v143);
                                        else
                                          *(_DWORD *)v142 -= 2;
                                      }
                                      if (!*((_DWORD *)v221 + 20)
                                        || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v221), (result & 1) == 0))
                                      {
                                        v40 = 0.0;
                                        if (v144 == (WTF::StringImpl *)10
                                          || ((v222[0] = v144,
                                               v145 = (JSC::VM *)*((_QWORD *)a2 + 7),
                                               (unint64_t)v144 >= 0xFFFE000000000000)
                                            ? (v40 = (double)(int)v144)
                                            : (unint64_t)v144 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                                            ? (JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2), v40 = v176)
                                            : (*(_QWORD *)&v40 = (char *)v144 - 0x2000000000000),
                                              !*((_DWORD *)v145 + 20)
                                           || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v145), (result & 1) == 0)))
                                        {
                                          WTF::AtomStringImpl::addLiteral();
                                          v146 = v222[0];
                                          v148 = (WTF::StringImpl *)JSC::JSObject::get(v43, a2, (unint64_t)v222[0]);
                                          v25 = v205;
                                          v24 = v206;
                                          v27 = v203;
                                          v26 = v204;
                                          v29 = v201;
                                          v28 = v202;
                                          v31 = v199;
                                          v30 = v200;
                                          v33 = v197;
                                          v32 = v198;
                                          v35 = v195;
                                          v34 = v196;
                                          v23 = v193;
                                          v36 = v194;
                                          if (v146)
                                          {
                                            if (*(_DWORD *)v146 == 2)
                                            {
                                              WTF::StringImpl::destroy(v146, v147);
                                              v23 = v193;
                                              v36 = v194;
                                              v35 = v195;
                                              v34 = v196;
                                              v33 = v197;
                                              v32 = v198;
                                              v31 = v199;
                                              v30 = v200;
                                              v29 = v201;
                                              v28 = v202;
                                              v27 = v203;
                                              v26 = v204;
                                              v25 = v205;
                                              v24 = v206;
                                            }
                                            else
                                            {
                                              *(_DWORD *)v146 -= 2;
                                            }
                                          }
                                          if (!*((_DWORD *)v221 + 20))
                                            goto LABEL_422;
                                          result = JSC::VM::hasExceptionsAfterHandlingTraps(v221);
                                          v23 = v193;
                                          v36 = v194;
                                          v35 = v195;
                                          v34 = v196;
                                          v33 = v197;
                                          v32 = v198;
                                          v31 = v199;
                                          v30 = v200;
                                          v29 = v201;
                                          v28 = v202;
                                          v27 = v203;
                                          v26 = v204;
                                          v25 = v205;
                                          v24 = v206;
                                          if ((result & 1) == 0)
                                          {
LABEL_422:
                                            v20 = 1.0;
                                            if (v148 == (WTF::StringImpl *)10)
                                              goto LABEL_239;
                                            v222[0] = v148;
                                            v149 = (JSC::VM *)*((_QWORD *)a2 + 7);
                                            if ((unint64_t)v148 >= 0xFFFE000000000000)
                                            {
                                              v20 = (double)(int)v148;
                                            }
                                            else if ((unint64_t)v148 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                                            {
                                              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v222, a2);
                                              v23 = v193;
                                              v36 = v194;
                                              v35 = v195;
                                              v34 = v196;
                                              v33 = v197;
                                              v32 = v198;
                                              v31 = v199;
                                              v30 = v200;
                                              v29 = v201;
                                              v28 = v202;
                                              v27 = v203;
                                              v26 = v204;
                                              v20 = v177;
                                              v25 = v205;
                                              v24 = v206;
                                            }
                                            else
                                            {
                                              *(_QWORD *)&v20 = (char *)v148 - 0x2000000000000;
                                            }
                                            if (!*((_DWORD *)v149 + 20))
                                              goto LABEL_239;
                                            result = JSC::VM::hasExceptionsAfterHandlingTraps(v149);
                                            v23 = v193;
                                            v36 = v194;
                                            v35 = v195;
                                            v34 = v196;
                                            v33 = v197;
                                            v32 = v198;
                                            v31 = v199;
                                            v30 = v200;
                                            v29 = v201;
                                            v28 = v202;
                                            v27 = v203;
                                            v26 = v204;
                                            v25 = v205;
                                            v24 = v206;
                                            if ((result & 1) == 0)
                                            {
LABEL_239:
                                              v6 = v191;
                                              v5 = v192;
                                              v8 = v189;
                                              v7 = v190;
                                              v10 = v187;
                                              v9 = v188;
                                              v12 = v185;
                                              v11 = v186;
                                              result = v183;
                                              v13 = v184;
                                              goto LABEL_240;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_288:
      v150 = 1;
      goto LABEL_241;
    }
    v106 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if (v105 >= 0xFFFE000000000000)
    {
      v178 = (_DWORD)v105 == 0;
      goto LABEL_417;
    }
    *(_QWORD *)&v107 = v105 - 0x2000000000000;
    if (v105 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v107 <= 0.0)
      {
        v17 = v107 < 0.0;
        goto LABEL_147;
      }
    }
    else
    {
      if ((v105 & 0xFFFE000000000002) != 0)
      {
        v17 = v105 == 7;
        goto LABEL_147;
      }
      v179 = *(unsigned __int8 *)(v105 + 5);
      if (v179 == 3)
      {
        v182 = *(_DWORD *)(v105 + 8);
LABEL_413:
        v178 = v182 == 0;
        goto LABEL_417;
      }
      if (v179 == 2)
      {
        v180 = *(_QWORD *)(v105 + 8);
        if ((v180 & 1) != 0)
          v181 = (int *)(v105 + 16);
        else
          v181 = (int *)(v180 + 4);
        v182 = *v181;
        goto LABEL_413;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v105 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v178 = *(_QWORD *)(16 * (*(_DWORD *)v105 & 0xFFFFFFFE) + 0x28) == (_QWORD)a2;
LABEL_417:
        v17 = !v178;
        goto LABEL_147;
      }
    }
    v17 = 1;
LABEL_147:
    if (*((_DWORD *)v106 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v106);
      if ((result & 1) != 0)
        goto LABEL_288;
    }
    v18 = 1;
    goto LABEL_149;
  }
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  result = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0.0;
  v20 = 1.0;
  v21 = 0.0;
  v22 = 0.0;
  v23 = 0.0;
  v24 = 0.0;
  v25 = 0.0;
  v26 = 0.0;
  v27 = 0.0;
  v28 = 0.0;
  v29 = 0.0;
  v30 = 0.0;
  v31 = 0.0;
  v32 = 0.0;
  v33 = 0.0;
  v34 = 0.0;
  v35 = 0.0;
  v36 = 0.0;
  v37 = 0.0;
  v38 = 0.0;
  v39 = 1.0;
  v40 = 0.0;
LABEL_240:
  v150 = 0;
  *(_BYTE *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v220;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)&v220[3];
  *(double *)(a1 + 8) = v24;
  *(double *)(a1 + 24) = v25;
  *(_BYTE *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v219;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v219[3];
  *(double *)(a1 + 40) = v26;
  *(_BYTE *)(a1 + 48) = v7;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v218[3];
  *(_DWORD *)(a1 + 49) = *(_DWORD *)v218;
  *(double *)(a1 + 56) = v27;
  *(_BYTE *)(a1 + 64) = v8;
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v217;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v217[3];
  *(double *)(a1 + 72) = v28;
  *(_BYTE *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 81) = *(_DWORD *)v216;
  *(_DWORD *)(a1 + 84) = *(_DWORD *)&v216[3];
  *(double *)(a1 + 88) = v29;
  *(_BYTE *)(a1 + 96) = v10;
  *(_DWORD *)(a1 + 97) = *(_DWORD *)v215;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)&v215[3];
  *(double *)(a1 + 104) = v30;
  *(_BYTE *)(a1 + 112) = v11;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v214[3];
  *(_DWORD *)(a1 + 113) = *(_DWORD *)v214;
  *(double *)(a1 + 120) = v31;
  *(_BYTE *)(a1 + 128) = v12;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)&v213[3];
  *(_DWORD *)(a1 + 129) = *(_DWORD *)v213;
  *(double *)(a1 + 136) = v32;
  *(_BYTE *)(a1 + 144) = v13;
  *(_DWORD *)(a1 + 148) = *(_DWORD *)&v212[3];
  *(_DWORD *)(a1 + 145) = *(_DWORD *)v212;
  *(double *)(a1 + 152) = v33;
  *(_BYTE *)(a1 + 160) = result;
  *(_DWORD *)(a1 + 164) = *(_DWORD *)&v211[3];
  *(_DWORD *)(a1 + 161) = *(_DWORD *)v211;
  *(double *)(a1 + 168) = v34;
  *(_BYTE *)(a1 + 176) = v15;
  *(_DWORD *)(a1 + 180) = *(_DWORD *)&v210[3];
  *(_DWORD *)(a1 + 177) = *(_DWORD *)v210;
  *(double *)(a1 + 184) = v35;
  *(_BYTE *)(a1 + 192) = v16;
  *(_DWORD *)(a1 + 196) = *(_DWORD *)&v209[3];
  *(_DWORD *)(a1 + 193) = *(_DWORD *)v209;
  *(double *)(a1 + 200) = v36;
  *(double *)(a1 + 208) = v23;
  *(double *)(a1 + 216) = v37;
  *(double *)(a1 + 224) = v22;
  *(double *)(a1 + 232) = v38;
  *(double *)(a1 + 240) = v21;
  *(double *)(a1 + 248) = v39;
  *(double *)(a1 + 256) = v19;
  *(double *)(a1 + 264) = v40;
  *(double *)(a1 + 272) = v20;
  *(_WORD *)(a1 + 280) = v17 | (v18 << 8);
  *(_WORD *)(a1 + 286) = v208;
  *(_DWORD *)(a1 + 282) = v207;
LABEL_241:
  *(_DWORD *)(a1 + 288) = v150;
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t hasExceptionsAfterHandlingTraps;
  uint64_t v8;
  bmalloc::api *v9;
  void *v10;
  JSCell *v11;
  bmalloc::api *v12;
  JSC::JSCell *v13;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v15;
  JSC::JSGlobalObject *v16;
  JSC::VM *v17;
  JSC::Structure *v18;
  uint64_t FunctionRealm;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  int v27;
  JSC::JSObject *v28;
  unint64_t Structure;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  unint64_t SubclassStructure;
  int v34;
  uint64_t v36;
  unsigned int v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  JSValue v40;
  uint64_t v41;
  int v42[2];
  WTF::StringImpl *v43;
  int v44;
  JSC::VM *v45;
  uint64_t v46;
  uint64_t *v47;
  char v48[8];
  _BYTE v49[16];
  unsigned int v50;
  char v51;
  int v52;
  bmalloc::api *v53;
  WTF::StringImpl *v54;
  unsigned int v55;
  char v56;
  int v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  v45 = (JSC::VM *)v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v45, (uint64_t)"DOMMatrixReadOnly", 18);
  if (*(_DWORD *)(a2 + 32) == 1 || *(_QWORD *)(a2 + 48) == 10)
  {
    v49[0] = 0;
    v51 = 0;
    v52 = 0;
    LOBYTE(v53) = 0;
    v56 = 0;
LABEL_5:
    hasExceptionsAfterHandlingTraps = bmalloc::api::isoAllocate();
    *(_QWORD *)hasExceptionsAfterHandlingTraps = 0;
    *(_DWORD *)(hasExceptionsAfterHandlingTraps + 8) = 1;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 80) = xmmword_1969EDD08;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 96) = unk_1969EDD18;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 112) = xmmword_1969EDD28;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 128) = unk_1969EDD38;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 16) = constinit;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 32) = unk_1969EDCD8;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 48) = xmmword_1969EDCE8;
    *(_OWORD *)(hasExceptionsAfterHandlingTraps + 64) = unk_1969EDCF8;
    *(_BYTE *)(hasExceptionsAfterHandlingTraps + 144) = 1;
    *(_QWORD *)v42 = hasExceptionsAfterHandlingTraps;
    v44 = 0;
    goto LABEL_6;
  }
  v36 = v6;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>>::convert((uint64_t)&v53, a1, *(_QWORD *)(a2 + 48));
  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::String,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>>>::ConversionResultStorage<std::variant<WTF::String,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>>((uint64_t)v48, (uint64_t)&v53);
  if (v57 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E3269628[v57])(v42, &v54);
  v34 = v52;
  if (v52)
  {
    v11 = 0;
LABEL_32:
    if (v34 != -1)
      ((void (*)(bmalloc::api **, _BYTE *))off_1E325C038[v34])(&v53, v49);
    return v11;
  }
  LOBYTE(v53) = 0;
  v56 = 0;
  if (!v51)
    goto LABEL_5;
  v55 = -1;
  v37 = v50;
  if (v50 != -1)
  {
    ((void (*)(uint64_t **, bmalloc::api **, _BYTE *))off_1E325C018[v50])(&v47, &v53, v49);
    v55 = v37;
  }
  v56 = 1;
  v46 = v36;
  if (v55 == -1)
    goto LABEL_66;
  v47 = &v46;
  hasExceptionsAfterHandlingTraps = (uint64_t)((uint64_t (*)(int *__return_ptr, uint64_t **, bmalloc::api **))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore17DOMMatrixReadOnly6createERNS8_22ScriptExecutionContextEONS_8optionalINS_7variantIJNS6_6StringENS6_6VectorIdLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEEEEEEEE3__0JZNS9_6createESB_SL_E3__1EEEEEJRNS0_6__implIJSE_SI_EEEEEEDcOT_DpOT0____fmatrix + v55))(v42, &v47, &v53);
LABEL_6:
  if (v56 && v55 != -1)
    hasExceptionsAfterHandlingTraps = ((uint64_t (*)(uint64_t **, bmalloc::api **))off_1E325C008[v55])(&v47, &v53);
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      goto LABEL_60;
  }
  if (!v44)
  {
    v8 = *(_QWORD *)(v5 + 40);
    v9 = *(bmalloc::api **)v42;
    *(_QWORD *)v42 = 0;
    v53 = v9;
    v11 = (JSCell *)WebCore::toJSNewlyCreated(hasExceptionsAfterHandlingTraps, v8, (uint64_t *)&v53);
    v12 = v53;
    v53 = 0;
    if (v12)
    {
      if (*((_DWORD *)v12 + 2) == 1)
      {
        if (*(_QWORD *)v12)
        {
          *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
          *(_QWORD *)v12 = 0;
        }
        bmalloc::api::isoDeallocate(v12, v10);
      }
      else
      {
        --*((_DWORD *)v12 + 2);
      }
    }
    goto LABEL_14;
  }
  if (v44 == 1)
  {
    v38 = (WTF::StringImpl *)LOBYTE(v42[0]);
    LOBYTE(v53) = v42[0];
    v39 = v43;
    v43 = 0;
    v54 = v39;
    if (!*(_QWORD *)(v4 + 16))
    {
      v40.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v42[0]), (JSC::JSGlobalObject *)&v54);
      JSC::VM::throwException((JSC::VM *)v4, a1, v40);
      v39 = v54;
    }
    v54 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 2)
        WTF::StringImpl::destroy(v39, v38);
      else
        *(_DWORD *)v39 -= 2;
    }
    v11 = 0;
LABEL_14:
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    {
LABEL_60:
      v11 = 0;
LABEL_29:
      if (v44 != -1)
        ((void (*)(bmalloc::api **, int *))off_1E325C658[v44])(&v53, v42);
      v34 = v52;
      goto LABEL_32;
    }
    v13 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v13 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v13)) == 0
      || (v16 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v17 = (JSC::VM *)*((_QWORD *)a1 + 7),
          FunctionRealm = JSC::getFunctionRealm(a1, Object, v15),
          *((_DWORD *)v17 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    {
LABEL_28:
      if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
        goto LABEL_29;
      goto LABEL_60;
    }
    v20 = *(_QWORD *)(FunctionRealm + 3296);
    if (v20)
    {
      v21 = *(_DWORD *)(v20 - 8);
      v22 = ((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info
           + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info
                                                                       + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) >> 22);
      v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
      v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
      v25 = v21 & ((v24 >> 31) ^ v24);
      v26 = *(char ***)(v20 + 16 * v25);
      if (v26 == &WebCore::JSDOMMatrixReadOnly::s_info)
      {
LABEL_24:
        v28 = *(JSC::JSObject **)(v20 + 16 * v25 + 8);
        if (v28)
        {
LABEL_26:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v16, v28, v18);
          if (!*((_DWORD *)v17 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) == 0)
            JSC::JSObject::setStructure(v11, v17, SubclassStructure);
          goto LABEL_28;
        }
      }
      else
      {
        v27 = 1;
        while (v26)
        {
          v25 = ((_DWORD)v25 + v27) & v21;
          v26 = *(char ***)(v20 + 16 * v25);
          ++v27;
          if (v26 == &WebCore::JSDOMMatrixReadOnly::s_info)
            goto LABEL_24;
        }
      }
    }
    Structure = WebCore::JSDOMMatrixReadOnlyPrototype::createStructure((uint64_t *)v17, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v31 = (JSC::JSCell *)WebCore::JSDOMMatrixReadOnlyPrototype::create(v17, (JSC::VM *)FunctionRealm, Structure, v30);
    v32 = WebCore::JSDOMMatrixReadOnly::createStructure((uint64_t *)v17, FunctionRealm, v31);
    v28 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v32, (uint64_t)&WebCore::JSDOMMatrixReadOnly::s_info);
    goto LABEL_26;
  }
LABEL_66:
  v41 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSDOMMatrixReadOnly::JSDOMMatrixReadOnly(v41);
}

unint64_t WebCore::JSDOMMatrixReadOnly::createPrototype(WebCore::JSDOMMatrixReadOnly *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  JSC::Structure *v6;

  Structure = WebCore::JSDOMMatrixReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSDOMMatrixReadOnlyPrototype::create(this, (JSC::VM *)a2, Structure, v6);
}

uint64_t WebCore::JSDOMMatrixReadOnlyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMMatrixReadOnlyPrototype::create(WebCore::JSDOMMatrixReadOnlyPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  int *v9;
  uint64_t i;
  char *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  JSC::Structure *v26;
  int v27;
  unint64_t v29;
  WTF::StringImpl *v30[6];
  int v31;
  int v32;
  JSC::Structure *v33;
  int v34;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v29 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v29);
    *((_QWORD *)this + 4865) = SlowCase + (int)v29;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  v9 = (int *)((char *)this + 93124);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  for (i = 0; i != 215; i += 5)
  {
    v11 = (&WebCore::JSDOMMatrixReadOnlyPrototypeTableValues)[i + 1];
    if (v11)
    {
      if (v11 == (char *)2)
        JSC::SmallStrings::singleCharacterStringRep((WebCore::JSDOMMatrixReadOnlyPrototype *)((char *)this + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v12 = v30[0];
      JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSDOMMatrixReadOnly::s_info, (unint64_t *)v30, (uint64_t)&(&WebCore::JSDOMMatrixReadOnlyPrototypeTableValues)[i], (unsigned __int8 *)SlowCase);
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v13);
        else
          *(_DWORD *)v12 -= 2;
      }
    }
  }
  v14 = *(unsigned int *)(16 * (**(_DWORD **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) & 0xFFFFFFFE) + 0x4C);
  v15 = *(_DWORD *)(16 * (**(_DWORD **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) & 0xFFFFFFFE) + 0x4C) != 0;
  v16 = (char **)(16 * v14);
  if ((_DWORD)v14)
    v17 = v16 == &WebCore::JSDOMWindowBase::s_info;
  else
    v17 = 1;
  if (!v17)
  {
    do
    {
      v16 = (char **)v16[2];
      v15 = v16 != 0;
    }
    while (v16 != &WebCore::JSDOMWindowBase::s_info && v16 != 0);
  }
  if (!v15)
  {
    WTF::AtomStringImpl::addLiteral();
    v19 = v30[0];
    v20 = *v9;
    *v9 = 1;
    LODWORD(v30[0]) = -1;
    WORD2(v30[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v20;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v21);
      else
        *(_DWORD *)v19 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v22 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v24 = JSC::JSString::create((uint64_t)this, v30);
  v25 = v30[0];
  v30[0] = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v23);
    else
      *(_DWORD *)v25 -= 2;
  }
  v26 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v34 = *(_DWORD *)SlowCase;
  v33 = v26;
  v27 = JSC::Structure::outOfLineCapacity(v26);
  v31 = 0;
  v32 = v27;
  v30[0] = (WTF::StringImpl *)&v32;
  v30[1] = (WTF::StringImpl *)SlowCase;
  v30[2] = this;
  v30[3] = (WTF::StringImpl *)&v34;
  v30[4] = (WTF::StringImpl *)&v33;
  v30[5] = (WTF::StringImpl *)&v31;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v26, this, v22, 6, (uint64_t)v30);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v31, v24);
  *((_DWORD *)v26 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>,(WebCore::DOMConstructorID)359>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2872);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info
         + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrixReadOnly::s_info
                                                                     + ~((_QWORD)&WebCore::JSDOMMatrixReadOnly::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMMatrixReadOnly::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMMatrixReadOnly::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMMatrixReadOnlyPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSDOMMatrixReadOnlyPrototype::create((WebCore::JSDOMMatrixReadOnlyPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSDOMMatrixReadOnly::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSDOMMatrixReadOnly::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  JSC::reifyStaticProperties<3u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMMatrixReadOnly::s_info, &WebCore::JSDOMMatrixReadOnlyConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2872) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMMatrixReadOnlyConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMMatrixReadOnlyPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>,(WebCore::DOMConstructorID)359>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_a(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_b(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_c(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 48);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_d(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 56);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_e(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 112);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_f(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 120);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m11(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m12(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m13(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 32);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m14(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 40);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m21(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 48);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m22(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 56);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m23(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 64);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m24(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 72);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m31(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 80);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m32(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 88);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m33(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 96);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m34(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 104);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m41(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 112);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m42(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 120);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m43(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 128);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMMatrixReadOnly_m44(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 136);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::jsDOMMatrixReadOnly_is2D(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 144))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsDOMMatrixReadOnly_isIdentity(uint64_t a1, uint64_t a2)
{
  double *v2;

  v2 = *(double **)(a2 + 24);
  if (v2[2] != 1.0
    || v2[3] != 0.0
    || v2[4] != 0.0
    || v2[5] != 0.0
    || v2[6] != 0.0
    || v2[7] != 1.0
    || v2[8] != 0.0
    || v2[9] != 0.0
    || v2[10] != 0.0
    || v2[11] != 0.0
    || v2[12] != 1.0
    || v2[13] != 0.0
    || v2[14] != 0.0
    || v2[15] != 0.0
    || v2[16] != 0.0)
  {
    return 6;
  }
  if (v2[17] == 1.0)
    return 7;
  return 6;
}

uint64_t WebCore::JSDOMMatrixReadOnly::subspaceForImpl(WebCore::JSDOMMatrixReadOnly *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2912);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2912))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2912);
    *(_QWORD *)(v8 + 2912) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2912);
  *(_QWORD *)(v3 + 2912) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMMatrixReadOnlyOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t WebCore::JSDOMMatrixReadOnlyOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v25;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 8);
  *(_DWORD *)(result + 8) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v7 = *(_QWORD *)(a3 + 32);
    v5 = (uint64_t *)(a3 + 32);
    v6 = v7;
    if (v7)
    {
      v8 = *(_DWORD *)(v6 - 8);
      v9 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(_QWORD *)(v6 + 16 * v12);
      if (v13 != result)
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(_QWORD *)(v6 + 16 * v12);
          ++v14;
          if (v13 == result)
            goto LABEL_14;
        }
        v12 = *(unsigned int *)(v6 - 4);
      }
LABEL_14:
      if (v12 != *(_DWORD *)(v6 - 4))
      {
        v15 = (_QWORD *)(v6 + 16 * v12);
        *v15 = -1;
        v18 = v15[1];
        v17 = v15 + 1;
        v16 = v18;
        if (v18)
        {
          *(_QWORD *)(v16 + 8) = 3;
          *v17 = 0;
        }
        ++*(_DWORD *)(*v5 - 16);
        v19 = *v5;
        if (*v5)
          v20 = *(_DWORD *)(v19 - 12) - 1;
        else
          v20 = -1;
        *(_DWORD *)(v19 - 12) = v20;
        v21 = *v5;
        if (*v5)
        {
          v22 = 6 * *(_DWORD *)(v21 - 12);
          v23 = *(_DWORD *)(v21 - 4);
          if (v22 < v23 && v23 >= 9)
          {
            v25 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v5, v23 >> 1, 0);
            result = v25;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 8) - 1;
  }
  else if (*(_QWORD *)result)
  {
    *(_QWORD *)(*(_QWORD *)result + 8) = 3;
    *(_QWORD *)result = 0;
  }
  if (v4)
  {
    *(_DWORD *)(result + 8) = v4;
  }
  else
  {
    if (*(_QWORD *)result)
    {
      *(_QWORD *)(*(_QWORD *)result + 8) = 3;
      *(_QWORD *)result = 0;
    }
    return bmalloc::api::isoDeallocate((bmalloc::api *)result, a2);
  }
  return result;
}

uint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::DOMMatrixReadOnly *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  bmalloc::api *v8;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  int v17;
  bmalloc::api *v18;

  v4 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v4 + 48))
  {
    v10 = *(_QWORD *)(v4 + 32);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 - 8);
      v12 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::JSDOMGlobalObject **)(v10 + 16 * v15);
      if (v16 == a3)
      {
LABEL_17:
        v5 = *(_QWORD *)(v10 + 16 * v15 + 8);
        if (v5)
          goto LABEL_3;
      }
      else
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::JSDOMGlobalObject **)(v10 + 16 * v15);
          ++v17;
          if (v16 == a3)
            goto LABEL_17;
        }
      }
    }
  }
  else
  {
    v5 = *(_QWORD *)a3;
    if (*(_QWORD *)a3)
    {
LABEL_3:
      if ((*(_BYTE *)(v5 + 8) & 3) == 0)
      {
        v6 = *(_QWORD *)v5;
        if (*(_QWORD *)v5)
          return v6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  v18 = a3;
  v6 = WebCore::toJSNewlyCreated((uint64_t)this, (uint64_t)a2, (uint64_t *)&v18);
  v8 = v18;
  v18 = 0;
  if (v8)
  {
    if (*((_DWORD *)v8 + 2) == 1)
    {
      if (*(_QWORD *)v8)
      {
        *(_QWORD *)(*(_QWORD *)v8 + 8) = 3;
        *(_QWORD *)v8 = 0;
      }
      bmalloc::api::isoDeallocate(v8, v7);
    }
    else
    {
      --*((_DWORD *)v8 + 2);
    }
  }
  return v6;
}

uint64_t WebCore::JSDOMMatrixReadOnly::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDOMMatrixReadOnly::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

WebCore::DOMMimeType *WebCore::JSDOMMimeType::destroy(WebCore::JSDOMMimeType *this, JSC::JSCell *a2)
{
  WebCore::DOMMimeType *result;

  result = (WebCore::DOMMimeType *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
    return WTF::RefCounted<WebCore::DOMMimeType>::deref(result);
  return result;
}

uint64_t WebCore::JSDOMMimeType::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMMimeTypePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMMimeTypePrototype::create(WebCore::JSDOMMimeTypePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSDOMMimeType::s_info, &WebCore::JSDOMMimeTypePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeType>,(WebCore::DOMConstructorID)754>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6032);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeType>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMMimeType::s_info + ~((_QWORD)&WebCore::JSDOMMimeType::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMimeType::s_info + ~((_QWORD)&WebCore::JSDOMMimeType::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMMimeType::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMMimeType::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMMimeTypePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMMimeTypePrototype::create((WebCore::JSDOMMimeTypePrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDOMMimeType::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMMimeType::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6032) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMMimeTypeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMMimeTypePrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeType>,(WebCore::DOMConstructorID)754>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDOMMimeType_type(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 16);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsDOMMimeType_suffixes(uint64_t a1, WebCore::DOMMimeType **a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::DOMMimeType::suffixes(a2[3], (WTF::StringImpl *)a2, &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsDOMMimeType_description(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 24);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsDOMMimeType_enabledPlugin(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v4;
  uint64_t v5;
  _DWORD *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  if (!v2)
    return 2;
  v4 = *(_DWORD **)(v2 + 8);
  if (!v4)
    return 2;
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v6 = v4 + 2;
  ++v4[2];
  v7 = WebCore::wrap<WebCore::DOMPlugin>(v5, (WTF *)v4);
  WTF::RefCounted<WebCore::DOMPlugin>::deref(v6);
  return v7;
}

uint64_t WebCore::JSDOMMimeTypeOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x19498A4F8);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

WebCore::DOMMimeType *WebCore::JSDOMMimeTypeOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WebCore::DOMMimeType *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::DOMMimeType *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v3 = *(WebCore::DOMMimeType **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::DOMMimeType **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WebCore::DOMMimeType **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  return WTF::RefCounted<WebCore::DOMMimeType>::deref(v3);
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::DOMMimeType *a4)
{
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  JSC::JSGlobalObject *v12;
  int v13;
  uint64_t v14;
  unint64_t SlowCase;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  unint64_t v24;
  uint64_t *v25;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  WTF *v45;
  void *v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *Allocator;
  unint64_t v53;
  _QWORD *v54;
  WTF *v55;

  v6 = *(_QWORD *)(*((_QWORD *)this + 415) + 32);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(JSC::JSGlobalObject **)(v6 + 16 * v11);
    if (v12 == a2)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
      {
        if ((*(_BYTE *)(v14 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v14;
          if (*(_QWORD *)v14)
            return SlowCase;
        }
      }
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(JSC::JSGlobalObject **)(v6 + 16 * v11);
        ++v13;
        if (v12 == a2)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a2;
  v16 = *((_QWORD *)this + 412);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMMimeType::s_info + ~((_QWORD)&WebCore::JSDOMMimeType::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMimeType::s_info + ~((_QWORD)&WebCore::JSDOMMimeType::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMMimeType::s_info)
    {
LABEL_14:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_16;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMMimeType::s_info)
          goto LABEL_14;
      }
    }
  }
  v25 = (uint64_t *)*((_QWORD *)this + 7);
  Structure = WebCore::JSDOMMimeTypePrototype::createStructure(v25, (uint64_t)this, *((JSC::JSCell **)this + 82));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v29 = (JSC::JSCell *)WebCore::JSDOMMimeTypePrototype::create((WebCore::JSDOMMimeTypePrototype *)v25, Structure, v27, v28);
  v30 = WebCore::JSDOMMimeType::createStructure(v25, (uint64_t)this, v29);
  v24 = WebCore::cacheDOMStructure((JSCell *)this, v30, (uint64_t)&WebCore::JSDOMMimeType::s_info);
LABEL_16:
  v31 = *((_QWORD *)this + 7);
  v32 = *(_QWORD *)(v31 + 41456);
  v33 = *(_QWORD *)(v32 + 23536);
  v34 = *(_QWORD **)(v33 + 6112);
  if (v34)
    goto LABEL_36;
  v35 = *(_QWORD *)(v32 + 22648);
  if (__ldaxr((unsigned __int8 *)v35))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v35))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v35);
LABEL_21:
  v37 = *(_QWORD *)(v35 + 2824);
  if (!*(_QWORD *)(v37 + 6112))
  {
    v38 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v55, "IsoSpace T");
    v54 = 0;
    MEMORY[0x19AEA3204](v38, &v55, v31 + 192, v31 + 1872, 32, 8, &v54);
    v40 = (uint64_t)v54;
    v54 = 0;
    if (v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
    v41 = v55;
    v55 = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 1)
        WTF::fastFree(v41, v39);
      else
        --*(_DWORD *)v41;
    }
    v42 = *(_QWORD *)(v37 + 6112);
    *(_QWORD *)(v37 + 6112) = v38;
    if (v42)
      (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
  }
  v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v44 = *(_QWORD *)(v33 + 6112);
  *(_QWORD *)(v33 + 6112) = v34;
  if (v44)
  {
    v45 = (WTF *)MEMORY[0x19AEA3528](v44, v43);
    WTF::fastFree(v45, v46);
  }
  v47 = __ldxr((unsigned __int8 *)v35);
  if (v47 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v35))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v35);
LABEL_36:
  SlowCase = v34[3];
  if (SlowCase >= v34[4])
  {
    SlowCase = v34[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v53 = *(_QWORD *)(SlowCase + 8) ^ v34[6];
    v34[4] = SlowCase + HIDWORD(v53);
    v34[5] = SlowCase + (int)v53;
  }
  v34[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v24);
  *(_QWORD *)(SlowCase + 24) = a2;
  if (*(_BYTE *)(v31 + 755))
    __dmb(0xAu);
  v48 = *((_QWORD *)this + 415);
  if ((byte_1EE3350E8 & 1) == 0)
  {
    qword_1EE3350E0 = (uint64_t)&off_1E3259C88;
    byte_1EE3350E8 = 1;
  }
  v55 = a2;
  if ((SlowCase & 8) != 0)
    v49 = (SlowCase - 112) | 1;
  else
    v49 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v49 & 1) != 0)
    v50 = v49 + 47;
  else
    v50 = *(_QWORD *)v49 + 32;
  Allocator = *(_QWORD **)(v50 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v50 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3350E0;
  Allocator[2] = v48;
  v54 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v48 + 32), (uint64_t *)&v55, (uint64_t *)&v54);
  if (v54)
    v54[1] = 3;
  return SlowCase;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeTypeArray>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDOMMimeTypeArray>((WebCore::JSDOMMimeTypeArray *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSDOMMimeTypeArrayPrototype::finishCreation(WebCore::JSDOMMimeTypeArrayPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t Direct;
  WTF::StringImpl *v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(a2, (uint64_t)&WebCore::JSDOMMimeTypeArray::s_info, &WebCore::JSDOMMimeTypeArrayPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2712);
  v5 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 672);
  v6 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v5, a2, (unint64_t)v6);
  JSC::JSObject::putDirect((unsigned __int8 *)this, a2, v4, Direct, 4);
  if (*v6 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v8);
  else
    *v6 -= 2;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v13);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v13;
  v13 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void WebCore::JSDOMMimeTypeArray::destroy(WebCore::JSDOMMimeTypeArray *this, JSC::JSCell *a2)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
    WTF::RefCounted<WebCore::DOMMimeTypeArray>::deref((_DWORD *)(v2 + 8));
}

uint64_t WebCore::JSDOMMimeTypeArray::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  int OwnProperty;
  uint64_t result;
  int v23;
  char v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v16 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v17 = *(_BYTE **)(v15 + 496);
  if (!v17)
    v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
  if (!*(_QWORD *)v17)
    goto LABEL_23;
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
  if (!v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(v18 + 680);
  if (*(_BYTE *)(v19 + 243))
  {
    if (!*(_BYTE *)(v19 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v17[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v19 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSDOMMimeTypeArray::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (WebCore::DOMMimeType *)v24, 1);
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v20 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v23 = *(_DWORD *)(v31 + 4);
    if (!v23)
    {
      __break(0xC471u);
      JUMPOUT(0x19498AF5CLL);
    }
    *(_DWORD *)(v31 + 4) = v23 - 1;
  }
  return result;
}

uint64_t WebCore::JSDOMMimeTypeArray::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDOMMimeTypeArray::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  unsigned int v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  int v26;
  _BOOL4 v27;
  JSC::VM *v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unsigned int v38;
  BOOL v39;
  uint64_t result;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unsigned __int16 *v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  unsigned int v56;
  unint64_t v57;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v15 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v16 = *(_BYTE **)(v13 + 496);
      if (!v16)
        v16 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v15 - 192));
      if (*(_QWORD *)v16)
      {
        v17 = *(_QWORD *)(*(_QWORD *)v16 + 8);
        if (v17)
        {
          v18 = *(_QWORD *)(v17 + 680);
          if (*(_BYTE *)(v18 + 243))
          {
            if (!*(_BYTE *)(v18 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v18 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v16[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v19 = *(_DWORD *)(a3 + 16);
    if ((v19 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v20 = *(_BYTE **)(a3 + 8);
    v21 = *(unsigned int *)(a3 + 4);
    if ((v19 & 4) != 0)
    {
      if (!(_DWORD)v21)
        goto LABEL_29;
      v22 = *v20 - 48;
      if (v22 > 9 || v21 >= 2 && *v20 == 48)
        goto LABEL_29;
      v49 = v20 + 1;
      v50 = v21 - 1;
      while (v50)
      {
        if (v22 <= 0x19999999)
        {
          v51 = *v49 - 48;
          if (v51 <= 9)
          {
            v39 = __CFADD__(v51, 10 * v22);
            v22 = v51 + 10 * v22;
            ++v49;
            --v50;
            if (!v39)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    else
    {
      if (!(_DWORD)v21
        || (v22 = *(unsigned __int16 *)v20 - 48, v22 > 9)
        || v21 >= 2 && *(_WORD *)v20 == 48)
      {
LABEL_29:
        *(_DWORD *)a3 += 2;
        v23 = (WTF::StringImpl *)a3;
        goto LABEL_30;
      }
      v36 = (unsigned __int16 *)(v20 + 2);
      v37 = v21 - 1;
      while (v37)
      {
        if (v22 <= 0x19999999)
        {
          v38 = *v36 - 48;
          if (v38 <= 9)
          {
            v39 = __CFADD__(v38, 10 * v22);
            v22 = v38 + 10 * v22;
            ++v36;
            --v37;
            if (!v39)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    if (v22 != -1)
      return *(_DWORD *)(v6 + 36) <= v22;
    goto LABEL_29;
  }
  v23 = 0;
LABEL_30:
  if (*(_DWORD *)(v6 + 36))
  {
    v24 = 0;
    do
    {
      v25 = *(WTF::StringImpl **)(*(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v24) + 16);
      if (v25)
      {
        v26 = *(_DWORD *)v25;
        *(_DWORD *)v25 += 2;
        if (v26)
          *(_DWORD *)v25 = v26;
        else
          WTF::StringImpl::destroy(v25, v14);
      }
      v10 = v23 == v25;
      v27 = v23 == v25;
      if (v10)
        break;
      ++v24;
    }
    while (v24 < *(unsigned int *)(v6 + 36));
  }
  else
  {
    v27 = 0;
  }
  if (v23)
  {
    if (*(_DWORD *)v23 != 2)
    {
      *(_DWORD *)v23 -= 2;
      goto LABEL_43;
    }
    WTF::StringImpl::destroy(v23, v14);
    if (v27)
      goto LABEL_44;
    return JSC::JSObject::deleteProperty();
  }
LABEL_43:
  if (!v27)
    return JSC::JSObject::deleteProperty();
LABEL_44:
  v28 = (JSC::VM *)*((_QWORD *)a2 + 7);
  ++*((_DWORD *)v28 + 1);
  if (!(a3 >> 4)
    || ((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) != 0
    || (v29 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v28)) == 0|| (v57 = a3, v30 = JSC::PropertyTable::get(v29, (uint64_t *)&v57), (_DWORD)v30 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      result = JSC::JSObject::getOwnStaticPropertySlot();
      if (!a3 || (result & 1) != 0)
        goto LABEL_67;
    }
    else if (!a3)
    {
      goto LABEL_66;
    }
    v31 = *(_DWORD *)(a3 + 16);
    if ((v31 & 0x20) == 0)
    {
      v32 = *(_BYTE **)(a3 + 8);
      v33 = *(unsigned int *)(a3 + 4);
      if ((v31 & 4) != 0)
      {
        if ((_DWORD)v33)
        {
          v52 = *v32 - 48;
          if (v52 > 9 || v33 >= 2 && *v32 == 48)
          {
LABEL_115:
            v53 = 0;
          }
          else
          {
            v54 = v32 + 1;
            v55 = v33 - 1;
            while (v55)
            {
              if (v52 > 0x19999999)
                goto LABEL_115;
              v56 = *v54 - 48;
              if (v56 > 9)
                goto LABEL_115;
              v53 = 0;
              v39 = __CFADD__(v56, 10 * v52);
              v52 = v56 + 10 * v52;
              ++v54;
              --v55;
              if (v39)
                goto LABEL_116;
            }
            v53 = 0x100000000;
            if (v52 == -1)
              v53 = 0;
          }
        }
        else
        {
          v53 = 0;
        }
LABEL_116:
        if ((v53 & 0x100000000) == 0)
          goto LABEL_66;
      }
      else
      {
        if ((_DWORD)v33)
        {
          v34 = *(unsigned __int16 *)v32 - 48;
          if (v34 > 9 || v33 >= 2 && *(_WORD *)v32 == 48)
          {
LABEL_56:
            v35 = 0;
          }
          else
          {
            v46 = (unsigned __int16 *)(v32 + 2);
            v47 = v33 - 1;
            while (v47)
            {
              if (v34 <= 0x19999999)
              {
                v48 = *v46 - 48;
                if (v48 <= 9)
                {
                  v39 = __CFADD__(v48, 10 * v34);
                  v34 = v48 + 10 * v34;
                  ++v46;
                  --v47;
                  if (!v39)
                    continue;
                }
              }
              goto LABEL_56;
            }
            v10 = v34 == -1;
            v35 = 0x100000000;
            if (v10)
              v35 = 0;
          }
        }
        else
        {
          v35 = 0;
        }
        if ((v35 & 0x100000000) == 0)
          goto LABEL_66;
      }
      result = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_67;
    }
LABEL_66:
    result = 0;
    goto LABEL_67;
  }
  if ((int)v30 > 63)
  {
    v42 = *(_QWORD *)(a1 + 8) - 8;
    v43 = 0x3F00000000 - (v30 << 32);
  }
  else
  {
    v42 = a1 + 16;
    v43 = v30 << 32;
  }
  v44 = *(_QWORD *)(v42 + (v43 >> 29));
  if ((v44 & 0xFFFE000000000002) != 0)
    goto LABEL_78;
  v45 = *(unsigned __int8 *)(v44 + 5);
  if (v45 == 6)
  {
    result = 1;
    goto LABEL_67;
  }
  if (v45 != 5)
  {
LABEL_78:
    result = 1;
    goto LABEL_67;
  }
  JSC::JSObject::fillGetterPropertySlot();
  result = 1;
LABEL_67:
  v41 = *((_DWORD *)v28 + 1);
  if (!v41)
  {
    __break(0xC471u);
    JUMPOUT(0x19498B5CCLL);
  }
  *((_DWORD *)v28 + 1) = v41 - 1;
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSDOMMimeTypeArray::deletePropertyByIndex(WebCore::JSDOMMimeTypeArray *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 36) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 36) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 36) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 36) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 36) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 36) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 36) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDOMMimeTypeArray::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, WebCore::DOMMimeType *a4)
{
  return WebCore::JSDOMMimeTypeArray::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSDOMMimeTypeArray::getOwnPropertySlotByIndex(WebCore::JSDOMMimeTypeArray *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  uint64_t v9;
  JSC::JSGlobalObject *v10;
  unint64_t v11;
  uint64_t OwnPropertySlotByIndex;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::DOMMimeType **v17;
  uint64_t v18;
  WebCore::DOMMimeType *v19;
  WTF::StringImpl *v20;
  int v21;
  WTF::StringImpl *v22;
  WebCore::JSDOMGlobalObject *v23;
  uint64_t v24;
  JSC::VM *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  int v30;
  _BYTE *v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned int v35;
  BOOL v36;
  unint64_t v37;
  uint64_t *v38;
  int v39;
  JSC::JSGlobalObject *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  _BYTE *v49;
  WebCore::JSDOMMimeTypeArray *v50;
  uint64_t v51;
  JSC::Structure *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char OwnStaticPropertySlot;
  int v58;
  _WORD *v59;
  uint64_t v60;
  unsigned int v61;
  unsigned __int16 *v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  int v70;
  _WORD *v71;
  uint64_t v72;
  unsigned int v73;
  unsigned __int16 *v74;
  uint64_t v75;
  unsigned int v76;
  unsigned __int8 *v77;
  uint64_t v78;
  unsigned int v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  JSC::VM *v83;
  uint64_t v84;
  char v85;
  int v86;
  int v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unsigned __int8 *v91;
  uint64_t v92;
  unsigned int v93;
  JSC::VM *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  char v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  unsigned __int8 *v105;
  int v106;
  int v107;
  uint64_t v108;
  const WTF::StringImpl *v109;
  const unsigned __int8 *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  unint64_t v115;
  JSC::VM *v116;
  uint64_t v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v125;
  unint64_t v126;
  JSC::VM *v127;
  unint64_t v128;
  WTF::StringImpl *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  WebCore::JSDOMMimeTypeArray *v133;
  WebCore::JSDOMMimeTypeArray *v134;
  uint64_t v135;
  int v136;
  char v137;
  JSC::VM *v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  WTF::StringImpl *v142;
  char v143;
  uint64_t v144;

  v144 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 == -1)
  {
    JSC::Identifier::from();
    if (v129)
    {
      if ((*((_BYTE *)v129 + 16) & 0x20) != 0)
        goto LABEL_165;
      v15 = *((_QWORD *)this + 3);
      *(_DWORD *)v129 += 2;
    }
    else
    {
      v15 = *((_QWORD *)this + 3);
    }
    v16 = *(unsigned int *)(v15 + 36);
    if (!(_DWORD)v16)
    {
LABEL_24:
      v19 = 0;
      goto LABEL_26;
    }
    v17 = *(WebCore::DOMMimeType ***)(v15 + 24);
    v18 = 8 * v16;
    while (1)
    {
      v19 = *v17;
      v20 = (WTF::StringImpl *)*((_QWORD *)*v17 + 2);
      if (v20)
      {
        v21 = *(_DWORD *)v20;
        *(_DWORD *)v20 += 2;
        if (v21)
        {
          *(_DWORD *)v20 = v21;
          if (v20 == v129)
            goto LABEL_25;
          goto LABEL_16;
        }
        WTF::StringImpl::destroy(v20, v14);
        if (v20 == v129)
        {
          v19 = *v17;
LABEL_25:
          ++*(_DWORD *)v19;
LABEL_26:
          if (v129)
          {
            if (*(_DWORD *)v129 != 2)
            {
              *(_DWORD *)v129 -= 2;
              goto LABEL_29;
            }
            WTF::StringImpl::destroy(v129, v14);
            if (!v19)
              goto LABEL_165;
          }
          else
          {
LABEL_29:
            if (!v19)
              goto LABEL_165;
          }
          ++*(_DWORD *)v19;
          WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
          v25 = (JSC::VM *)*((_QWORD *)a2 + 7);
          v132 = 0xFFFFFFFF00000000;
          v134 = 0;
          v135 = 0;
          v133 = this;
          v136 = 196608;
          v137 = 0;
          v140 = 0;
          v141 = 0;
          v138 = v25;
          ++*((_DWORD *)v25 + 1);
          v139 = 1;
          v128 = (unint64_t)v129 >> 4;
          if (((unint64_t)v129 >> 4))
          {
            v26 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
            if ((v128 & ~*(_DWORD *)(v26 + 0x20)) == 0)
            {
              v27 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v25);
              if (v27)
              {
                v142 = v129;
                v28 = JSC::PropertyTable::get(v27, (uint64_t *)&v142);
                v29 = v28;
                if ((_DWORD)v28 != -1)
                {
                  v37 = HIDWORD(v28);
                  v38 = (uint64_t *)((char *)this + 8 * (int)v28 + 16);
                  if ((int)v28 >= 64)
                    v38 = (uint64_t *)(*((_QWORD *)this + 1) + ((uint64_t)(0x3F00000000 - (v28 << 32)) >> 29) - 8);
                  v24 = *v38;
                  if ((*v38 & 0xFFFE000000000002) == 0)
                  {
                    v39 = *(unsigned __int8 *)(v24 + 5);
                    if (v39 == 6)
                    {
                      v41 = *(_DWORD *)(v26 + 16) & 3;
                      v42 = *(_QWORD *)(v24 + 16);
                      if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C))
                      {
                        v130 = *(_QWORD *)(v24 + 8);
                        v131 = v42;
                        LODWORD(v132) = HIDWORD(v28);
                        v134 = this;
                        goto LABEL_140;
                      }
                      v44 = *(_QWORD *)(v24 + 24);
                      v43 = *(_QWORD *)(v24 + 32);
                      v130 = *(_QWORD *)(v24 + 8);
                      v131 = v42;
                      LODWORD(v132) = HIDWORD(v28);
                      v134 = this;
                      goto LABEL_119;
                    }
                    if (v39 == 5)
                      goto LABEL_122;
                  }
                  v40 = 0;
                  v130 = v24;
                  v134 = this;
                  goto LABEL_115;
                }
              }
            }
          }
          if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
            goto LABEL_123;
          if (v129)
          {
            v30 = *((_DWORD *)v129 + 4);
            if ((v30 & 0x20) == 0)
            {
              v31 = (_BYTE *)*((_QWORD *)v129 + 1);
              v32 = *((unsigned int *)v129 + 1);
              if ((v30 & 4) != 0)
              {
                if ((_DWORD)v32)
                {
                  v23 = (WebCore::JSDOMGlobalObject *)(*v31 - 48);
                  if (v23 <= 9 && (v32 < 2 || *v31 != 48))
                  {
                    v45 = v31 + 1;
                    v46 = v32 - 1;
                    while (v46)
                    {
                      if (v23 <= 0x19999999)
                      {
                        v47 = *v45 - 48;
                        if (v47 <= 9)
                        {
                          v36 = __CFADD__(v47, 10 * (_DWORD)v23);
                          v23 = (WebCore::JSDOMGlobalObject *)(v47 + 10 * (_DWORD)v23);
                          ++v45;
                          --v46;
                          if (!v36)
                            continue;
                        }
                      }
                      goto LABEL_76;
                    }
LABEL_75:
                    if ((_DWORD)v23 != -1 && (JSC::JSObject::getOwnPropertySlotByIndex() & 1) != 0)
                      goto LABEL_123;
                  }
                }
              }
              else if ((_DWORD)v32)
              {
                v23 = (WebCore::JSDOMGlobalObject *)(*(unsigned __int16 *)v31 - 48);
                if (v23 <= 9 && (v32 < 2 || *(_WORD *)v31 != 48))
                {
                  v33 = (unsigned __int16 *)(v31 + 2);
                  v34 = v32 - 1;
                  while (v34)
                  {
                    if (v23 <= 0x19999999)
                    {
                      v35 = *v33 - 48;
                      if (v35 <= 9)
                      {
                        v36 = __CFADD__(v35, 10 * (_DWORD)v23);
                        v23 = (WebCore::JSDOMGlobalObject *)(v35 + 10 * (_DWORD)v23);
                        ++v33;
                        --v34;
                        if (!v36)
                          continue;
                      }
                    }
                    goto LABEL_76;
                  }
                  goto LABEL_75;
                }
              }
            }
          }
LABEL_76:
          v48 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
          if (!v48)
            v48 = *((_QWORD *)this + 2);
          if ((v48 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v48 + 5) < 0x17u)
            goto LABEL_158;
          v49 = (_BYTE *)(v48 + 6);
          if ((*(_BYTE *)(v48 + 6) & 8) == 0)
          {
            v127 = (JSC::VM *)*((_QWORD *)a2 + 7);
            v50 = (WebCore::JSDOMMimeTypeArray *)v48;
            while (1)
            {
              v51 = 16 * (*(_DWORD *)v50 & 0xFFFFFFFE);
              if ((_DWORD)v128)
              {
                if ((v128 & ~*(_DWORD *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x20)) == 0)
                {
                  v52 = (JSC::Structure *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE));
                  v53 = JSC::Structure::ensurePropertyTableIfNotEmpty(v52, v127);
                  v51 = (uint64_t)v52;
                  if (v53)
                  {
                    v142 = v129;
                    v54 = JSC::PropertyTable::get(v53, (uint64_t *)&v142);
                    v29 = v54;
                    v51 = (uint64_t)v52;
                    if ((_DWORD)v54 != -1)
                      break;
                  }
                }
              }
              if ((*v49 & 0x20) != 0)
              {
                v56 = v51;
                OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
                v51 = v56;
                if ((OwnStaticPropertySlot & 1) != 0)
                  goto LABEL_123;
              }
              v55 = *(_QWORD *)(v51 + 48);
              if (!v55)
                v55 = *((_QWORD *)v50 + 2);
              if ((v55 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v55 + 5) < 0x17u)
              {
                if (!v129)
                  goto LABEL_158;
                v58 = *((_DWORD *)v129 + 4);
                if ((v58 & 0x20) != 0)
                  goto LABEL_158;
                v59 = (_WORD *)*((_QWORD *)v129 + 1);
                v60 = *((unsigned int *)v129 + 1);
                if ((v58 & 4) == 0)
                {
                  if ((_DWORD)v60)
                  {
                    v61 = (unsigned __int16)*v59 - 48;
                    if (v61 <= 9 && (v60 < 2 || *v59 != 48))
                    {
                      v62 = v59 + 1;
                      v63 = v60 - 1;
                      while (v63)
                      {
                        if (v61 <= 0x19999999)
                        {
                          v64 = *v62 - 48;
                          if (v64 <= 9)
                          {
                            v36 = __CFADD__(v64, 10 * v61);
                            v61 = v64 + 10 * v61;
                            ++v62;
                            --v63;
                            if (!v36)
                              continue;
                          }
                        }
                        goto LABEL_158;
                      }
                      goto LABEL_157;
                    }
                  }
                  goto LABEL_158;
                }
                if (!(_DWORD)v60)
                  goto LABEL_158;
                v61 = *(unsigned __int8 *)v59 - 48;
                if (v61 > 9 || v60 >= 2 && *(_BYTE *)v59 == 48)
                  goto LABEL_158;
                v77 = (unsigned __int8 *)v59 + 1;
                v78 = v60 - 1;
                while (v78)
                {
                  if (v61 <= 0x19999999)
                  {
                    v79 = *v77 - 48;
                    if (v79 <= 9)
                    {
                      v36 = __CFADD__(v79, 10 * v61);
                      v61 = v79 + 10 * v61;
                      ++v77;
                      --v78;
                      if (!v36)
                        continue;
                    }
                  }
                  goto LABEL_158;
                }
LABEL_157:
                if (v61 == -1)
                {
LABEL_158:
                  v68 = 0;
                  v40 = v19;
                  v19 = 0;
                  goto LABEL_159;
                }
                v82 = v61;
                v83 = (JSC::VM *)*((_QWORD *)a2 + 7);
                while (2)
                {
                  v84 = 16 * (*(_DWORD *)v48 & 0xFFFFFFFE);
                  v85 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16 * *(unsigned int *)(v84 + 0x4C) + 0x70))(v48, a2, v82, &v130);
                  if (*((_DWORD *)v83 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v83) & 1) != 0)
                    goto LABEL_158;
                  if ((v85 & 1) != 0)
                    goto LABEL_123;
                  v86 = BYTE2(v136);
                  if (BYTE2(v136) == 3)
                  {
                    if (v137)
                      goto LABEL_158;
                    v87 = *(unsigned __int8 *)(v48 + 5);
                    if (v87 == 61)
                    {
LABEL_197:
                      v89 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
                      if (!v89)
                        v89 = *(_QWORD *)(v48 + 16);
                      goto LABEL_199;
                    }
LABEL_190:
                    if ((v87 - 39) <= 0xA)
                    {
                      if ((*(_BYTE *)(v48 + 40) & 7u) > 2)
                      {
                        LOBYTE(v142) = 0;
                        v143 = 0;
                        v90 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v48, (WTF *)&v142);
                        if ((_BYTE)v22)
                          v88 = v90;
                        else
                          v88 = 0;
                      }
                      else
                      {
                        v88 = *(_QWORD *)(v48 + 24);
                      }
                      if (v88 <= v82)
                        goto LABEL_158;
                      v86 = BYTE2(v136);
                    }
                  }
                  else
                  {
                    v87 = *(unsigned __int8 *)(v48 + 5);
                    if (v87 != 61)
                      goto LABEL_190;
                    if (BYTE2(v136) == 1)
                      goto LABEL_158;
                  }
                  if ((*(_WORD *)(v84 + 12) & 0x800) == 0 || v86 == 3)
                    goto LABEL_197;
                  if ((*(_WORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
                  {
                    v89 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                       * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C)
                                                                                       + 0xB0))(v48, a2);
                  }
                  else
                  {
                    v89 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
                    if (!v89)
                      v89 = *(_QWORD *)(v48 + 16);
                  }
                  if (*((_DWORD *)v83 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v83) & 1) != 0)
                    goto LABEL_158;
LABEL_199:
                  if ((v89 & 0xFFFE000000000002) != 0)
                    goto LABEL_158;
                  v48 = v89;
                  if (*(unsigned __int8 *)(v89 + 5) <= 0x16u)
                    goto LABEL_158;
                  continue;
                }
              }
              v49 = (_BYTE *)(v55 + 6);
              v126 = v55;
              v50 = (WebCore::JSDOMMimeTypeArray *)v55;
              if ((*(_BYTE *)(v55 + 6) & 8) != 0)
                goto LABEL_125;
            }
            v37 = HIDWORD(v54);
            if ((int)v54 > 63)
            {
              v65 = *((_QWORD *)v50 + 1) - 8;
              v66 = 0x3F00000000 - (v54 << 32);
            }
            else
            {
              v65 = (uint64_t)v50 + 16;
              v66 = v54 << 32;
            }
            v24 = *(_QWORD *)(v65 + (v66 >> 29));
            if ((v24 & 0xFFFE000000000002) != 0)
            {
LABEL_114:
              v40 = 0;
              v130 = v24;
              v134 = v50;
              goto LABEL_115;
            }
            v67 = *(unsigned __int8 *)(v24 + 5);
            if (v67 != 6)
            {
              if (v67 == 5)
                goto LABEL_122;
              goto LABEL_114;
            }
            v41 = *((_DWORD *)v52 + 4) & 3;
            v69 = *(_QWORD *)(v24 + 16);
            if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C))
            {
              v130 = *(_QWORD *)(v24 + 8);
              v131 = v69;
              LODWORD(v132) = HIDWORD(v54);
              v134 = v50;
              goto LABEL_140;
            }
            v44 = *(_QWORD *)(v24 + 24);
            v43 = *(_QWORD *)(v24 + 32);
            v130 = *(_QWORD *)(v24 + 8);
            v131 = v69;
            LODWORD(v132) = HIDWORD(v54);
            v134 = v50;
LABEL_119:
            BYTE1(v136) = 3;
            v40 = 0;
            v68 = 1;
            if (v41 != 2)
              LOBYTE(v136) = 1;
            HIBYTE(v136) = 1;
            v140 = v44;
            v141 = v43;
            goto LABEL_159;
          }
          v126 = v48;
LABEL_125:
          if (!v129)
            goto LABEL_226;
          v70 = *((_DWORD *)v129 + 4);
          if ((v70 & 0x20) != 0)
            goto LABEL_226;
          v71 = (_WORD *)*((_QWORD *)v129 + 1);
          v72 = *((unsigned int *)v129 + 1);
          if ((v70 & 4) == 0)
          {
            if ((_DWORD)v72)
            {
              v73 = (unsigned __int16)*v71 - 48;
              if (v73 <= 9 && (v72 < 2 || *v71 != 48))
              {
                v74 = v71 + 1;
                v75 = v72 - 1;
                while (v75)
                {
                  if (v73 <= 0x19999999)
                  {
                    v76 = *v74 - 48;
                    if (v76 <= 9)
                    {
                      v36 = __CFADD__(v76, 10 * v73);
                      v73 = v76 + 10 * v73;
                      ++v74;
                      --v75;
                      if (!v36)
                        continue;
                    }
                  }
                  goto LABEL_226;
                }
                goto LABEL_225;
              }
            }
            goto LABEL_226;
          }
          if (!(_DWORD)v72)
            goto LABEL_226;
          v73 = *(unsigned __int8 *)v71 - 48;
          if (v73 > 9 || v72 >= 2 && *(_BYTE *)v71 == 48)
            goto LABEL_226;
          v91 = (unsigned __int8 *)v71 + 1;
          v92 = v72 - 1;
          while (v92)
          {
            if (v73 <= 0x19999999)
            {
              v93 = *v91 - 48;
              if (v93 <= 9)
              {
                v36 = __CFADD__(v93, 10 * v73);
                v73 = v93 + 10 * v73;
                ++v91;
                --v92;
                if (!v36)
                  continue;
              }
            }
            goto LABEL_226;
          }
LABEL_225:
          if (v73 == -1)
          {
LABEL_226:
            v94 = (JSC::VM *)*((_QWORD *)a2 + 7);
            while (1)
            {
              v95 = *(_DWORD *)v126 & 0xFFFFFFFE;
              v96 = 16 * v95;
              if ((*(_BYTE *)(v126 + 6) & 8) != 0)
                break;
              if ((_DWORD)v128)
              {
                if ((v128 & ~*(_DWORD *)(16 * v95 + 0x20)) == 0)
                {
                  v97 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v96, v94);
                  if (v97)
                  {
                    v142 = v129;
                    v98 = JSC::PropertyTable::get(v97, (uint64_t *)&v142);
                    v29 = v98;
                    if ((_DWORD)v98 != -1)
                    {
                      v37 = HIDWORD(v98);
                      if ((int)v98 > 63)
                      {
                        v111 = *(_QWORD *)(v126 + 8) - 8;
                        v112 = 0x3F00000000 - (v98 << 32);
                      }
                      else
                      {
                        v111 = v126 + 16;
                        v112 = v98 << 32;
                      }
                      v24 = *(_QWORD *)(v111 + (v112 >> 29));
                      if ((v24 & 0xFFFE000000000002) == 0)
                      {
                        v113 = *(unsigned __int8 *)(v24 + 5);
                        if (v113 != 6)
                        {
                          if (v113 != 5)
                            goto LABEL_292;
LABEL_122:
                          JSC::JSObject::fillGetterPropertySlot();
LABEL_123:
                          v40 = 0;
                          v68 = 1;
LABEL_159:
                          if (v139)
                          {
                            v80 = *((_DWORD *)v138 + 1);
                            if (!v80)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x19498C1B0);
                            }
                            *((_DWORD *)v138 + 1) = v80 - 1;
                          }
                          if (v19)
                            WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
                          if ((v68 & 1) == 0)
                          {
                            if (v40)
                              v81 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v40, v23, (WebCore::DOMMimeType *)v24);
                            else
                              v81 = 2;
                            if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
                            {
                              OwnPropertySlotByIndex = 0;
                              if (!v40)
                                goto LABEL_166;
                            }
                            else
                            {
                              *(_QWORD *)a4 = v81;
                              *(_DWORD *)(a4 + 16) = 6;
                              *(_QWORD *)(a4 + 32) = this;
                              OwnPropertySlotByIndex = 1;
                              *(_BYTE *)(a4 + 49) = 1;
                              if (!v40)
                                goto LABEL_166;
                            }
                            WTF::RefCounted<WebCore::DOMMimeType>::deref(v40);
                            goto LABEL_166;
                          }
LABEL_165:
                          OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_166:
                          if (v129)
                          {
                            if (*(_DWORD *)v129 == 2)
                              WTF::StringImpl::destroy(v129, v22);
                            else
                              *(_DWORD *)v129 -= 2;
                          }
                          return OwnPropertySlotByIndex;
                        }
                        v41 = *(_DWORD *)(v96 + 16) & 3;
                        v114 = *(_QWORD *)(v24 + 16);
                        if (MEMORY[0x1E0CBE830] == 16
                                                  * *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C))
                        {
                          v44 = *(_QWORD *)(v24 + 24);
                          v43 = *(_QWORD *)(v24 + 32);
                          v130 = *(_QWORD *)(v24 + 8);
                          v131 = v114;
                          LODWORD(v132) = HIDWORD(v98);
                          v134 = (WebCore::JSDOMMimeTypeArray *)v126;
                          goto LABEL_119;
                        }
                        v130 = *(_QWORD *)(v24 + 8);
                        v131 = v114;
                        LODWORD(v132) = HIDWORD(v98);
                        v134 = (WebCore::JSDOMMimeTypeArray *)v126;
LABEL_140:
                        v68 = 1;
                        BYTE1(v136) = 3;
                        v40 = 0;
                        if (v41 != 2)
                          LOBYTE(v136) = 1;
                        goto LABEL_159;
                      }
LABEL_292:
                      v40 = 0;
                      v130 = v24;
                      v134 = (WebCore::JSDOMMimeTypeArray *)v126;
LABEL_115:
                      v132 = __PAIR64__(v29, v37);
                      v68 = 1;
                      LOWORD(v136) = 257;
                      goto LABEL_159;
                    }
                  }
                }
              }
              if ((*(_BYTE *)(v126 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
                goto LABEL_123;
LABEL_233:
              if ((*(_WORD *)(v96 + 12) & 0x800) == 0)
              {
                v99 = *(_DWORD *)v126;
LABEL_235:
                v100 = *(_QWORD *)(16 * (v99 & 0xFFFFFFFE) + 0x30);
                if (!v100)
                  v100 = *(_QWORD *)(v126 + 16);
                goto LABEL_237;
              }
              v99 = *(_DWORD *)v126;
              if (BYTE2(v136) == 3)
                goto LABEL_235;
              v108 = 16 * (v99 & 0xFFFFFFFE);
              if ((*(_WORD *)(v108 + 12) & 0x800) != 0)
              {
                v100 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                    * *(unsigned int *)(v108 + 76)
                                                                                    + 0xB0))(v126, a2);
              }
              else
              {
                v100 = *(_QWORD *)(v108 + 48);
                if (!v100)
                  v100 = *(_QWORD *)(v126 + 16);
              }
              if (*((_DWORD *)v94 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v94) & 1) != 0)
                goto LABEL_158;
LABEL_237:
              if ((v100 & 0xFFFE000000000002) == 0)
              {
                v126 = v100;
                if (*(unsigned __int8 *)(v100 + 5) > 0x16u)
                  continue;
              }
              goto LABEL_158;
            }
            v101 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, WTF::StringImpl *, uint64_t *))(16 * *(unsigned int *)(16 * v95 + 0x4C) + 0x68))(v126, a2, v129, &v130);
            if (*((_DWORD *)v94 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v94) & 1) != 0)
              goto LABEL_158;
            if ((v101 & 1) != 0)
              goto LABEL_123;
            if (BYTE2(v136) == 3)
            {
              if (v137)
                goto LABEL_158;
              v102 = *(unsigned __int8 *)(v126 + 5);
              if (v102 == 61)
                goto LABEL_233;
            }
            else
            {
              v102 = *(unsigned __int8 *)(v126 + 5);
              if (v102 == 61)
              {
                if (BYTE2(v136) == 1)
                  goto LABEL_158;
                goto LABEL_233;
              }
            }
            if (!v129)
              goto LABEL_233;
            if ((v102 - 50) < 0xFFFFFFF5)
              goto LABEL_233;
            v103 = *((_DWORD *)v129 + 4);
            if ((v103 & 0x20) != 0)
              goto LABEL_233;
            v104 = *((unsigned int *)v129 + 1);
            if (!(_DWORD)v104)
              goto LABEL_233;
            v105 = (unsigned __int8 *)*((_QWORD *)v129 + 1);
            if ((v103 & 4) != 0)
            {
              v106 = *v105;
              if ((_DWORD)v104 == 1)
              {
LABEL_269:
                if ((v106 - 48) < 0xA)
                  goto LABEL_158;
                goto LABEL_233;
              }
              if (v106 == 45)
              {
                v107 = v105[1];
                goto LABEL_273;
              }
            }
            else
            {
              v106 = *(unsigned __int16 *)v105;
              if ((_DWORD)v104 == 1)
                goto LABEL_269;
              if (v106 == 45)
              {
                v107 = *((unsigned __int16 *)v105 + 1);
LABEL_273:
                if ((v107 - 48) >= 0xA)
                {
                  if ((_DWORD)v104 != 9 || v107 != 73)
                    goto LABEL_233;
                }
                else if ((_DWORD)v104 == 2)
                {
                  goto LABEL_158;
                }
LABEL_284:
                v48 = v48 & 0xFFFFFF0000000000 | v104 | ((unint64_t)((v103 >> 2) & 1) << 32);
                JSC::jsToNumber();
                v109 = (const WTF::StringImpl *)WTF::numberToString();
                if ((WTF::equal(v129, v109, v110) & 1) != 0)
                  goto LABEL_158;
                goto LABEL_233;
              }
            }
            if ((v106 - 48) >= 0xA
              && ((_DWORD)v104 != 8 || v106 != 73)
              && ((_DWORD)v104 != 3 || v106 != 78))
            {
              goto LABEL_233;
            }
            goto LABEL_284;
          }
          v115 = v73;
          v116 = (JSC::VM *)*((_QWORD *)a2 + 7);
          while (2)
          {
            v117 = 16 * (*(_DWORD *)v48 & 0xFFFFFFFE);
            v118 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16 * *(unsigned int *)(v117 + 0x4C) + 0x70))(v48, a2, v115, &v130);
            v119 = v118;
            if (*((_DWORD *)v116 + 20))
            {
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v116);
              if (((hasExceptionsAfterHandlingTraps | v119) & 1) != 0)
              {
                if (!hasExceptionsAfterHandlingTraps)
                  goto LABEL_123;
                goto LABEL_158;
              }
            }
            else if ((v118 & 1) != 0)
            {
              goto LABEL_123;
            }
            v120 = BYTE2(v136);
            if (BYTE2(v136) == 3)
            {
              if (v137)
                goto LABEL_158;
              v121 = *(unsigned __int8 *)(v48 + 5);
              if (v121 == 61)
              {
LABEL_315:
                v123 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
                if (!v123)
                  v123 = *(_QWORD *)(v48 + 16);
                goto LABEL_317;
              }
LABEL_308:
              if ((v121 - 39) <= 0xA)
              {
                if ((*(_BYTE *)(v48 + 40) & 7u) > 2)
                {
                  LOBYTE(v142) = 0;
                  v143 = 0;
                  v125 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v48, (WTF *)&v142);
                  if ((_BYTE)v22)
                    v122 = v125;
                  else
                    v122 = 0;
                }
                else
                {
                  v122 = *(_QWORD *)(v48 + 24);
                }
                if (v122 <= v115)
                  goto LABEL_158;
                v120 = BYTE2(v136);
              }
            }
            else
            {
              v121 = *(unsigned __int8 *)(v48 + 5);
              if (v121 != 61)
                goto LABEL_308;
              if (BYTE2(v136) == 1)
                goto LABEL_158;
            }
            if ((*(_WORD *)(v117 + 12) & 0x800) == 0 || v120 == 3)
              goto LABEL_315;
            if ((*(_WORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v123 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                  * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C)
                                                                                  + 0xB0))(v48, a2);
            }
            else
            {
              v123 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
              if (!v123)
                v123 = *(_QWORD *)(v48 + 16);
            }
            if (*((_DWORD *)v116 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v116) & 1) != 0)
              goto LABEL_158;
LABEL_317:
            if ((v123 & 0xFFFE000000000002) != 0)
              goto LABEL_158;
            v48 = v123;
            if (*(unsigned __int8 *)(v123 + 5) <= 0x16u)
              goto LABEL_158;
            continue;
          }
        }
      }
      else if (!v129)
      {
        goto LABEL_25;
      }
LABEL_16:
      ++v17;
      v18 -= 8;
      if (!v18)
        goto LABEL_24;
    }
  }
  v9 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v9 + 36) > a3)
  {
    v10 = *(JSC::JSGlobalObject **)(*(_QWORD *)(v9 + 24) + 8 * a3);
    ++*(_DWORD *)v10;
    v11 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v10, a3, (WebCore::DOMMimeType *)a4);
    if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    {
      OwnPropertySlotByIndex = 0;
    }
    else
    {
      *(_QWORD *)a4 = v11;
      *(_DWORD *)(a4 + 16) = 2;
      *(_QWORD *)(a4 + 32) = this;
      OwnPropertySlotByIndex = 1;
      *(_BYTE *)(a4 + 49) = 1;
    }
    WTF::RefCounted<WebCore::DOMMimeType>::deref(v10);
    return OwnPropertySlotByIndex;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

WTF::StringImpl *WebCore::JSDOMMimeTypeArray::getOwnPropertyNames(WTF::StringImpl *result, uint64_t a2, uint64_t *a3, int a4)
{
  WTF::StringImpl *v5;
  int v6;
  int v7;
  uint64_t *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl **v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _DWORD *v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl **v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  int v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  WTF::StringImpl *v72;
  uint64_t v73;
  WTF::StringImpl **v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v77[2];
  char v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;

  v5 = result;
  v6 = *(_DWORD *)(*((_QWORD *)result + 3) + 36);
  if (v6)
  {
    v7 = 0;
    v8 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v10 = v79;
      v80 = v79;
      v11 = *((_DWORD *)v79 + 4);
      if ((v11 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v79 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v12 = *a3;
      v13 = *(unsigned int *)(*a3 + 20);
      if (v13 <= 0x13)
      {
        if ((_DWORD)v13)
        {
          v14 = *(WTF::StringImpl ***)(v12 + 8);
          while (*v14 != v79)
          {
            ++v14;
            if (!--v13)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v11 & 0x20) != 0)
        {
          v35 = *(_DWORD *)v10 + 2;
        }
        else
        {
          if ((v11 & 0x10) != 0)
          {
            *(_DWORD *)v10 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v10 = v77[0];
          }
          v35 = *(_DWORD *)v10;
          *(_DWORD *)v10 += 2;
          if (!v35)
          {
            WTF::StringImpl::destroy(v10, v9);
LABEL_54:
            v36 = (uint64_t *)(v12 + 8);
            v77[0] = v10;
            v37 = *(unsigned int *)(v12 + 20);
            if ((_DWORD)v37 == *(_DWORD *)(v12 + 16))
            {
              v38 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v36, v37 + 1, (unint64_t)v77);
              v37 = *(unsigned int *)(v12 + 20);
              v39 = *(_QWORD *)(v12 + 8);
              v40 = *v38;
              *v38 = 0;
              *(_QWORD *)(v39 + 8 * v37) = v40;
            }
            else
            {
              v41 = *v36;
              v77[0] = 0;
              *(_QWORD *)(v41 + 8 * v37) = v10;
            }
            *(_DWORD *)(v12 + 20) = v37 + 1;
            v42 = v77[0];
            v77[0] = 0;
            if (v42)
            {
              if (*(_DWORD *)v42 == 2)
                WTF::StringImpl::destroy(v42, v9);
              else
                *(_DWORD *)v42 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v10 = v35;
        goto LABEL_54;
      }
      if (!*v8 || !*(_DWORD *)(*v8 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v80, (uint64_t)v77);
      if (v78)
      {
        v10 = v80;
        v12 = *a3;
        v11 = *((_DWORD *)v80 + 4);
        goto LABEL_19;
      }
LABEL_60:
      result = v79;
      v79 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v9);
        else
          *(_DWORD *)result -= 2;
      }
      if (++v7 == v6)
        goto LABEL_69;
    }
    v15 = *(uint64_t **)(v12 + 8);
    v16 = &v15[v13];
    while (1)
    {
      v17 = *v15;
      v18 = *v8;
      if (*v8
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v18 = *v8) != 0))
      {
        v19 = *(_DWORD *)(v18 - 8);
      }
      else
      {
        v19 = 0;
      }
      v20 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
      v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
      v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
      v23 = v19 & ((v22 >> 31) ^ v22);
      v24 = (uint64_t *)(v18 + 8 * v23);
      v25 = *v24;
      if (*v24)
      {
        v26 = 0;
        v27 = 1;
        while (v25 != v17)
        {
          if (v25 == -1)
            v26 = v24;
          v23 = (v23 + v27) & v19;
          v24 = (uint64_t *)(v18 + 8 * v23);
          v25 = *v24;
          ++v27;
          if (!*v24)
          {
            if (v26)
            {
              *v26 = 0;
              --*(_DWORD *)(*v8 - 16);
              v24 = v26;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v24 = v17;
      v28 = *v8;
      v29 = *v8 ? *(_DWORD *)(v28 - 12) + 1 : 1;
      *(_DWORD *)(v28 - 12) = v29;
      v30 = *v8;
      v31 = *v8 ? *(_DWORD *)(v30 - 12) : 0;
      v32 = (*(_DWORD *)(v30 - 16) + v31);
      v33 = *(unsigned int *)(v30 - 4);
      if (v33 > 0x400)
        break;
      if (3 * v33 <= 4 * v32)
      {
        if ((_DWORD)v33)
          goto LABEL_43;
        v34 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v15 == v16)
        goto LABEL_17;
    }
    if (v33 > 2 * v32)
      goto LABEL_47;
LABEL_43:
    v34 = (_DWORD)v33 << (6 * *(_DWORD *)(v30 - 12) >= (2 * v33));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v34, v24);
    goto LABEL_47;
  }
LABEL_69:
  if (a4)
    return (WTF::StringImpl *)JSC::JSObject::getOwnPropertyNames();
  v43 = *((_QWORD *)v5 + 3);
  v44 = *(unsigned int *)(v43 + 36);
  if (!(_DWORD)v44)
    return (WTF::StringImpl *)JSC::JSObject::getOwnPropertyNames();
  if (v44 >> 29)
  {
    __break(0xC471u);
    return result;
  }
  v45 = WTF::fastMalloc((WTF *)(8 * v44));
  v47 = (WTF *)v45;
  v48 = *(unsigned int *)(v43 + 36);
  if (!(_DWORD)v48)
    goto LABEL_125;
  v49 = *(_QWORD *)(v43 + 24);
  v50 = *(unsigned int *)(v43 + 36);
  v51 = (_QWORD *)v45;
  do
  {
    v52 = *(_DWORD **)(*(_QWORD *)v49 + 16);
    if (v52)
      *v52 += 2;
    *v51++ = v52;
    v49 += 8;
    --v50;
  }
  while (v50);
  v53 = a3 + 1;
  v54 = (uint64_t *)v45;
  v55 = (uint64_t *)(v45 + 8 * v48);
  do
  {
    v56 = *v54;
    if (*v54)
      *(_DWORD *)v56 += 2;
    v80 = (WTF::StringImpl *)v56;
    v57 = *(_DWORD *)(v56 + 16);
    if ((v57 & 0x20) != 0)
    {
      if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v56 + 36) & 4) != 0)
        goto LABEL_111;
LABEL_86:
      v58 = *a3;
      v59 = *(unsigned int *)(*a3 + 20);
      if (v59 > 0x13)
      {
        if (!*v53 || !*(_DWORD *)(*v53 - 12))
        {
          v62 = *(WTF::StringImpl ***)(v58 + 8);
          v63 = 8 * v59;
          do
          {
            v64 = *v62++;
            v79 = v64;
            WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v79, (uint64_t)v77);
            v63 -= 8;
          }
          while (v63);
        }
        WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v80, (uint64_t)v77);
        if (!v78)
          goto LABEL_110;
        v61 = v80;
        v58 = *a3;
        v57 = *((_DWORD *)v80 + 4);
        if ((v57 & 0x20) == 0)
          goto LABEL_92;
      }
      else
      {
        if ((_DWORD)v59)
        {
          v60 = *(_QWORD **)(v58 + 8);
          while (*v60 != v56)
          {
            ++v60;
            if (!--v59)
              goto LABEL_91;
          }
LABEL_110:
          if (!v56)
            goto LABEL_113;
          goto LABEL_111;
        }
LABEL_91:
        v61 = (WTF::StringImpl *)v56;
        if ((v57 & 0x20) == 0)
        {
LABEL_92:
          if ((v57 & 0x10) != 0)
          {
            *(_DWORD *)v61 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v61 = v77[0];
          }
          v65 = *(_DWORD *)v61;
          *(_DWORD *)v61 += 2;
          if (!v65)
          {
            WTF::StringImpl::destroy(v61, v46);
LABEL_104:
            v66 = (uint64_t *)(v58 + 8);
            v77[0] = v61;
            v67 = *(unsigned int *)(v58 + 20);
            if ((_DWORD)v67 == *(_DWORD *)(v58 + 16))
            {
              v68 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v66, v67 + 1, (unint64_t)v77);
              v67 = *(unsigned int *)(v58 + 20);
              v69 = *(_QWORD *)(v58 + 8);
              v70 = *v68;
              *v68 = 0;
              *(_QWORD *)(v69 + 8 * v67) = v70;
            }
            else
            {
              v71 = *v66;
              v77[0] = 0;
              *(_QWORD *)(v71 + 8 * v67) = v61;
            }
            *(_DWORD *)(v58 + 20) = v67 + 1;
            v72 = v77[0];
            v77[0] = 0;
            if (v72)
            {
              if (*(_DWORD *)v72 == 2)
              {
                WTF::StringImpl::destroy(v72, v46);
                if (!v56)
                  goto LABEL_113;
                goto LABEL_111;
              }
              *(_DWORD *)v72 -= 2;
            }
            goto LABEL_110;
          }
LABEL_103:
          *(_DWORD *)v61 = v65;
          goto LABEL_104;
        }
      }
      v65 = *(_DWORD *)v61 + 2;
      goto LABEL_103;
    }
    if ((a3[3] & 2) != 0)
      goto LABEL_86;
LABEL_111:
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v56, v46);
    else
      *(_DWORD *)v56 -= 2;
LABEL_113:
    ++v54;
  }
  while (v54 != v55);
  v73 = 8 * v48;
  v74 = (WTF::StringImpl **)v47;
  do
  {
    v75 = *v74;
    *v74 = 0;
    if (v75)
    {
      if (*(_DWORD *)v75 == 2)
        WTF::StringImpl::destroy(v75, v46);
      else
        *(_DWORD *)v75 -= 2;
    }
    ++v74;
    v73 -= 8;
  }
  while (v73);
LABEL_125:
  WTF::fastFree(v47, v46);
  return (WTF::StringImpl *)JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDOMMimeTypeArray::defineOwnProperty(uint64_t a1, WTF::StringImpl *a2, unint64_t this, uint64_t a4, int a5)
{
  JSC::VM *v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int OwnPropertySlotByIndex;
  int v21;
  int v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned int v33;
  int OwnStaticPropertySlot;
  BOOL v35;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  int v41;
  _BOOL4 v42;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  JSC::VM *v53;
  unint64_t v54;

  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v53 = v8;
  if (this)
  {
    v9 = *(_DWORD *)(this + 16);
    if ((v9 & 0x20) != 0)
      return JSC::JSObject::defineOwnProperty();
    v10 = *(_BYTE **)(this + 8);
    v11 = *(unsigned int *)(this + 4);
    if ((v9 & 4) != 0)
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *v10 - 48;
      if (v12 > 9 || v11 >= 2 && *v10 == 48)
        goto LABEL_8;
      v44 = v10 + 1;
      v45 = v11 - 1;
      while (v45)
      {
        if (v12 <= 0x19999999)
        {
          v46 = *v44 - 48;
          if (v46 <= 9)
          {
            v26 = __CFADD__(v46, 10 * v12);
            v12 = v46 + 10 * v12;
            ++v44;
            --v45;
            if (!v26)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *(unsigned __int16 *)v10 - 48;
      if (v12 > 9 || v11 >= 2 && *(_WORD *)v10 == 48)
        goto LABEL_8;
      v23 = (unsigned __int16 *)(v10 + 2);
      v24 = v11 - 1;
      while (v24)
      {
        if (v12 <= 0x19999999)
        {
          v25 = *v23 - 48;
          if (v25 <= 9)
          {
            v26 = __CFADD__(v25, 10 * v12);
            v12 = v25 + 10 * v12;
            ++v23;
            --v24;
            if (!v26)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v12 != -1)
    {
      if (a5)
        JSC::throwTypeError();
      return 0;
    }
  }
LABEL_8:
  v52 = *((_QWORD *)a2 + 7);
  ++*((_DWORD *)v8 + 1);
  if (!(this >> 4)
    || ((this >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) != 0
    || (v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v8)) == 0
    || (v54 = this, v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v54), (_DWORD)v14 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
      OwnPropertySlotByIndex = OwnStaticPropertySlot;
      if (!this || (OwnStaticPropertySlot & 1) != 0)
        goto LABEL_24;
    }
    else if (!this)
    {
      goto LABEL_23;
    }
    v15 = *(_DWORD *)(this + 16);
    if ((v15 & 0x20) == 0)
    {
      v16 = *(_BYTE **)(this + 8);
      v17 = *(unsigned int *)(this + 4);
      if ((v15 & 4) != 0)
      {
        if ((_DWORD)v17)
        {
          v47 = *v16 - 48;
          if (v47 > 9 || v17 >= 2 && *v16 == 48)
          {
LABEL_99:
            v48 = 0;
          }
          else
          {
            v49 = v16 + 1;
            v50 = v17 - 1;
            while (v50)
            {
              if (v47 > 0x19999999)
                goto LABEL_99;
              v51 = *v49 - 48;
              if (v51 > 9)
                goto LABEL_99;
              v48 = 0;
              v26 = __CFADD__(v51, 10 * v47);
              v47 = v51 + 10 * v47;
              ++v49;
              --v50;
              if (v26)
                goto LABEL_100;
            }
            v48 = 0x100000000;
            if (v47 == -1)
              v48 = 0;
          }
        }
        else
        {
          v48 = 0;
        }
LABEL_100:
        if ((v48 & 0x100000000) == 0)
          goto LABEL_23;
      }
      else
      {
        if ((_DWORD)v17)
        {
          v18 = *(unsigned __int16 *)v16 - 48;
          if (v18 > 9 || v17 >= 2 && *(_WORD *)v16 == 48)
          {
LABEL_20:
            v19 = 0;
          }
          else
          {
            v31 = (unsigned __int16 *)(v16 + 2);
            v32 = v17 - 1;
            while (v32)
            {
              if (v18 <= 0x19999999)
              {
                v33 = *v31 - 48;
                if (v33 <= 9)
                {
                  v26 = __CFADD__(v33, 10 * v18);
                  v18 = v33 + 10 * v18;
                  ++v31;
                  --v32;
                  if (!v26)
                    continue;
                }
              }
              goto LABEL_20;
            }
            v35 = v18 == -1;
            v19 = 0x100000000;
            if (v35)
              v19 = 0;
          }
        }
        else
        {
          v19 = 0;
        }
        if ((v19 & 0x100000000) == 0)
          goto LABEL_23;
      }
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_24;
    }
LABEL_23:
    OwnPropertySlotByIndex = 0;
    goto LABEL_24;
  }
  if ((int)v14 > 63)
  {
    v27 = *(_QWORD *)(a1 + 8) - 8;
    v28 = 0x3F00000000 - (v14 << 32);
  }
  else
  {
    v27 = a1 + 16;
    v28 = v14 << 32;
  }
  v29 = *(_QWORD *)(v27 + (v28 >> 29));
  if ((v29 & 0xFFFE000000000002) != 0)
    goto LABEL_40;
  v30 = *(unsigned __int8 *)(v29 + 5);
  if (v30 == 6)
  {
    OwnPropertySlotByIndex = 1;
    goto LABEL_24;
  }
  if (v30 != 5)
  {
LABEL_40:
    OwnPropertySlotByIndex = 1;
    goto LABEL_24;
  }
  JSC::JSObject::fillGetterPropertySlot();
  OwnPropertySlotByIndex = 1;
LABEL_24:
  v21 = *(_DWORD *)(v52 + 4);
  if (!v21)
  {
    __break(0xC471u);
    JUMPOUT(0x19498D39CLL);
  }
  *(_DWORD *)(v52 + 4) = v21 - 1;
  if (*((_DWORD *)v53 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v53);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v22 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_77;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v22 = 1;
    goto LABEL_77;
  }
  v37 = *(_QWORD *)(a1 + 24);
  if (this)
  {
    *(_DWORD *)this += 2;
    v38 = (WTF::StringImpl *)this;
  }
  else
  {
    v38 = 0;
  }
  if (*(_DWORD *)(v37 + 36))
  {
    v39 = 0;
    do
    {
      v40 = *(WTF::StringImpl **)(*(_QWORD *)(*(_QWORD *)(v37 + 24) + 8 * v39) + 16);
      if (v40)
      {
        v41 = *(_DWORD *)v40;
        *(_DWORD *)v40 += 2;
        if (v41)
          *(_DWORD *)v40 = v41;
        else
          WTF::StringImpl::destroy(v40, a2);
      }
      v35 = v38 == v40;
      v42 = v38 == v40;
      if (v35)
        break;
      ++v39;
    }
    while (v39 < *(unsigned int *)(v37 + 36));
  }
  else
  {
    v42 = 0;
  }
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, a2);
    else
      *(_DWORD *)v38 -= 2;
  }
  if ((v42 & a5) == 1)
  {
    JSC::throwTypeError();
    v22 = 0;
  }
  else
  {
    v22 = !v42;
  }
LABEL_77:
  if (v22)
    return JSC::JSObject::defineOwnProperty();
  return 0;
}

uint64_t WebCore::JSDOMMimeTypeArray::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMMimeTypeArray::createPrototype(WebCore::JSDOMMimeTypeArray *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDOMMimeTypeArrayPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDOMMimeTypeArrayPrototype::create(WebCore::JSDOMMimeTypeArrayPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMMimeTypeArrayPrototype::finishCreation((WebCore::JSDOMMimeTypeArrayPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeTypeArray>,(WebCore::DOMConstructorID)755>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6040);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeTypeArray>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeTypeArray>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6040) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMMimeTypeArray::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t this, WebCore::DOMMimeType *a4, char a5)
{
  WebCore::DOMMimeType *v5;
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WebCore::DOMMimeType **v17;
  uint64_t v18;
  WebCore::DOMMimeType *v19;
  WTF::StringImpl *v20;
  int v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  WebCore::JSDOMGlobalObject *v26;
  uint64_t v27;
  JSC::VM *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  _WORD *v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t *v39;
  int v40;
  JSC::JSGlobalObject *v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  JSC::JSGlobalObject *v51;
  unint64_t v52;
  uint64_t v53;
  WebCore::DOMMimeType *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  unsigned int v62;
  unsigned __int16 *v63;
  uint64_t j;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  _BYTE *v79;
  JSC::VM *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int v86;
  uint64_t v87;
  int v88;
  _WORD *v89;
  uint64_t v90;
  unsigned int v91;
  unsigned __int16 *v92;
  uint64_t v93;
  unsigned int v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  _WORD *v104;
  uint64_t v105;
  unsigned int v106;
  unsigned __int16 *v107;
  uint64_t v108;
  unsigned int v109;
  unsigned __int8 *v110;
  uint64_t v111;
  unsigned int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  _BYTE *v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  unsigned __int16 *v126;
  uint64_t v127;
  unsigned int v128;
  uint64_t OwnStaticPropertySlot;
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  JSC::VM *v135;
  uint64_t v136;
  char v137;
  int v138;
  int v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  unsigned __int8 *v144;
  uint64_t i;
  unsigned int v146;
  unsigned __int8 *v147;
  uint64_t v148;
  unsigned int v149;
  JSC::VM *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  int v154;
  uint64_t v155;
  char v156;
  int v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  unsigned __int8 *v161;
  int v162;
  int v163;
  BOOL v164;
  const WTF::StringImpl *v165;
  const unsigned __int8 *v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  JSC::VM *v174;
  uint64_t v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unint64_t v180;
  uint64_t v181;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v183;
  char v184;
  unsigned __int8 *v185;
  uint64_t v186;
  unsigned int v187;
  unint64_t v188;
  JSC::VM *v189;
  WebCore::DOMMimeType *v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  char v198;
  JSC::VM *v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  uint64_t v205;

  v5 = a4;
  v205 = *MEMORY[0x1E0C80C00];
  v9 = a2[7];
  if (this)
  {
    v10 = *(_DWORD *)(this + 16);
    if ((v10 & 0x20) != 0)
      goto LABEL_225;
    v11 = *(_BYTE **)(this + 8);
    v12 = *(unsigned int *)(this + 4);
    if ((v10 & 4) != 0)
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *v11 - 48;
      if (v13 > 9 || v12 >= 2 && *v11 == 48)
        goto LABEL_8;
      v47 = v11 + 1;
      v48 = v12 - 1;
      while (v48)
      {
        if (v13 <= 0x19999999)
        {
          v49 = *v47 - 48;
          if (v49 <= 9)
          {
            v25 = __CFADD__(v49, 10 * v13);
            v13 = v49 + 10 * v13;
            ++v47;
            --v48;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v12
        || (v13 = *(unsigned __int16 *)v11 - 48, v13 > 9)
        || v12 >= 2 && *(_WORD *)v11 == 48)
      {
LABEL_8:
        if ((a5 & 1) != 0)
          goto LABEL_225;
        v14 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)this += 2;
        v15 = (WTF::StringImpl *)this;
        goto LABEL_10;
      }
      v22 = (unsigned __int16 *)(v11 + 2);
      v23 = v12 - 1;
      while (v23)
      {
        if (v13 <= 0x19999999)
        {
          v24 = *v22 - 48;
          if (v24 <= 9)
          {
            v25 = __CFADD__(v24, 10 * v13);
            v13 = v24 + 10 * v13;
            ++v22;
            --v23;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v13 != -1)
    {
      v50 = *(_QWORD *)(a1 + 24);
      if (*(_DWORD *)(v50 + 36) <= v13)
      {
        if (!(this >> 4)
          || (v55 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((this >> 4) & ~*(_DWORD *)(v55 + 0x20)) != 0)
          || (v56 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v203 = this, v57 = JSC::PropertyTable::get(v56, (uint64_t *)&v203), v58 = v57, (_DWORD)v57 == -1))
        {
          if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
          {
            v59 = *(_DWORD *)(this + 16);
            if ((v59 & 0x20) != 0)
              return 0;
            v60 = *(_BYTE **)(this + 8);
            v61 = *(unsigned int *)(this + 4);
            if ((v59 & 4) != 0)
            {
              if (!(_DWORD)v61)
                return 0;
              v62 = *v60 - 48;
              if (v62 > 9 || v61 >= 2 && *v60 == 48)
                return 0;
              v144 = v60 + 1;
              for (i = v61 - 1; i; --i)
              {
                if (v62 > 0x19999999)
                  return 0;
                v146 = *v144 - 48;
                if (v146 > 9)
                  return 0;
                v53 = 0;
                v25 = __CFADD__(v146, 10 * v62);
                v62 = v146 + 10 * v62;
                ++v144;
                if (v25)
                  return v53;
              }
            }
            else
            {
              if (!(_DWORD)v61)
                return 0;
              v62 = *(unsigned __int16 *)v60 - 48;
              if (v62 > 9 || v61 >= 2 && *(_WORD *)v60 == 48)
                return 0;
              v63 = (unsigned __int16 *)(v60 + 2);
              for (j = v61 - 1; j; --j)
              {
                if (v62 > 0x19999999)
                  return 0;
                v65 = *v63 - 48;
                if (v65 > 9)
                  return 0;
                v53 = 0;
                v25 = __CFADD__(v65, 10 * v62);
                v62 = v65 + 10 * v62;
                ++v63;
                if (v25)
                  return v53;
              }
            }
            if (v62 == -1)
              return 0;
            return JSC::JSObject::getOwnPropertySlotByIndex();
          }
          return 1;
        }
        v66 = HIDWORD(v57);
        if ((int)v57 > 63)
        {
          v67 = *(_QWORD *)(a1 + 8) - 8;
          v68 = 0x3F00000000 - (v57 << 32);
        }
        else
        {
          v67 = a1 + 16;
          v68 = v57 << 32;
        }
        v69 = *(_QWORD *)(v67 + (v68 >> 29));
        if ((v69 & 0xFFFE000000000002) != 0)
          goto LABEL_249;
        v70 = *(unsigned __int8 *)(v69 + 5);
        if (v70 != 6)
        {
          if (v70 != 5)
          {
LABEL_249:
            *(_QWORD *)v5 = v69;
            *((_QWORD *)v5 + 4) = a1;
            *((_DWORD *)v5 + 4) = v66;
            *((_DWORD *)v5 + 5) = v58;
            v53 = 1;
            *((_WORD *)v5 + 24) = 257;
            return v53;
          }
          goto LABEL_273;
        }
        v71 = *(_DWORD *)(v55 + 16) & 3;
        v73 = *(_QWORD *)(v69 + 8);
        v72 = *(_QWORD *)(v69 + 16);
        if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v69 & 0xFFFFFFFE) + 0x4C))
        {
LABEL_270:
          v131 = *(_QWORD *)(v69 + 24);
          v130 = *(_QWORD *)(v69 + 32);
          *(_QWORD *)v5 = v73;
          *((_QWORD *)v5 + 1) = v72;
          *((_DWORD *)v5 + 4) = v66;
          *((_QWORD *)v5 + 4) = a1;
          *((_BYTE *)v5 + 49) = 3;
          v53 = 1;
          if (v71 != 2)
            *((_BYTE *)v5 + 48) = 1;
          *((_BYTE *)v5 + 51) = 1;
          *((_QWORD *)v5 + 9) = v131;
          *((_QWORD *)v5 + 10) = v130;
          return v53;
        }
        *(_QWORD *)v5 = v73;
        *((_QWORD *)v5 + 1) = v72;
        *((_DWORD *)v5 + 4) = HIDWORD(v57);
        *((_QWORD *)v5 + 4) = a1;
        v53 = 1;
        *((_BYTE *)v5 + 49) = 3;
        if (v71 == 2)
          return v53;
LABEL_276:
        *((_BYTE *)v5 + 48) = 1;
        return v53;
      }
      v51 = *(JSC::JSGlobalObject **)(*(_QWORD *)(v50 + 24) + 8 * v13);
      ++*(_DWORD *)v51;
      v52 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v51, (WebCore::JSDOMGlobalObject *)this, a4);
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v53 = 0;
      }
      else
      {
        *(_QWORD *)v5 = v52;
        *((_DWORD *)v5 + 4) = 2;
        *((_QWORD *)v5 + 4) = a1;
        v53 = 1;
        *((_BYTE *)v5 + 49) = 1;
      }
      v54 = v51;
LABEL_261:
      WTF::RefCounted<WebCore::DOMMimeType>::deref(v54);
      return v53;
    }
    goto LABEL_8;
  }
  if ((a5 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
      return 0;
    return JSC::JSObject::getOwnStaticPropertySlot();
  }
  v15 = 0;
  v14 = *(_QWORD *)(a1 + 24);
LABEL_10:
  v16 = *(unsigned int *)(v14 + 36);
  if (!(_DWORD)v16)
  {
LABEL_21:
    v19 = 0;
    if (v15)
      goto LABEL_31;
    goto LABEL_33;
  }
  v17 = *(WebCore::DOMMimeType ***)(v14 + 24);
  v18 = 8 * v16;
  while (1)
  {
    v19 = *v17;
    v20 = (WTF::StringImpl *)*((_QWORD *)*v17 + 2);
    if (v20)
      break;
    if (!v15)
      goto LABEL_30;
LABEL_15:
    ++v17;
    v18 -= 8;
    if (!v18)
      goto LABEL_21;
  }
  v21 = *(_DWORD *)v20;
  *(_DWORD *)v20 += 2;
  if (v21)
  {
    *(_DWORD *)v20 = v21;
    if (v20 == v15)
      goto LABEL_30;
    goto LABEL_15;
  }
  WTF::StringImpl::destroy(v20, (WTF::StringImpl *)a2);
  if (v20 != v15)
    goto LABEL_15;
  v19 = *v17;
LABEL_30:
  ++*(_DWORD *)v19;
  if (!v15)
  {
LABEL_33:
    if (!v19)
      goto LABEL_225;
    goto LABEL_34;
  }
LABEL_31:
  if (*(_DWORD *)v15 != 2)
  {
    *(_DWORD *)v15 -= 2;
    goto LABEL_33;
  }
  WTF::StringImpl::destroy(v15, (WTF::StringImpl *)a2);
  if (!v19)
    goto LABEL_225;
LABEL_34:
  ++*(_DWORD *)v19;
  WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
  v28 = a2[7];
  v193 = 0xFFFFFFFF00000000;
  v195 = 0;
  v196 = 0;
  v194 = a1;
  v197 = 196608;
  v198 = 0;
  v201 = 0;
  v202 = 0;
  v199 = v28;
  ++*((_DWORD *)v28 + 1);
  v200 = 1;
  v29 = this >> 4;
  if ((this >> 4))
  {
    v30 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v29 & ~*(_DWORD *)(v30 + 0x20)) == 0)
    {
      v31 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v28);
      if (v31)
      {
        v203 = this;
        v32 = JSC::PropertyTable::get(v31, (uint64_t *)&v203);
        if ((_DWORD)v32 != -1)
        {
          v39 = (uint64_t *)(a1 + 8 * (int)v32 + 16);
          if ((int)v32 >= 64)
            v39 = (uint64_t *)(*(_QWORD *)(a1 + 8) + ((uint64_t)(0x3F00000000 - (v32 << 32)) >> 29) - 8);
          v27 = *v39;
          if ((*v39 & 0xFFFE000000000002) != 0)
            goto LABEL_58;
          v40 = *(unsigned __int8 *)(v27 + 5);
          if (v40 == 6)
          {
            v43 = *(_DWORD *)(v30 + 16) & 3;
            v44 = *(_QWORD *)(v27 + 16);
            if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
            {
              v46 = *(_QWORD *)(v27 + 24);
              v45 = *(_QWORD *)(v27 + 32);
              v191 = *(_QWORD *)(v27 + 8);
              v192 = v44;
              LODWORD(v193) = HIDWORD(v32);
              v195 = a1;
              BYTE1(v197) = 3;
              v41 = 0;
              v42 = 1;
              if (v43 != 2)
                LOBYTE(v197) = 1;
              HIBYTE(v197) = 1;
              v201 = v46;
              v202 = v45;
            }
            else
            {
              v191 = *(_QWORD *)(v27 + 8);
              v192 = v44;
              LODWORD(v193) = HIDWORD(v32);
              v195 = a1;
              v42 = 1;
              BYTE1(v197) = 3;
              v41 = 0;
              if (v43 != 2)
                LOBYTE(v197) = 1;
            }
            goto LABEL_219;
          }
          if (v40 != 5)
          {
LABEL_58:
            v41 = 0;
            v191 = v27;
            v195 = a1;
            v193 = __PAIR64__(v32, HIDWORD(v32));
            v42 = 1;
            LOWORD(v197) = 257;
            goto LABEL_219;
          }
          JSC::JSObject::fillGetterPropertySlot();
          goto LABEL_68;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_68;
  if (!this)
    goto LABEL_137;
  v33 = *(_DWORD *)(this + 16);
  if ((v33 & 0x20) != 0)
    goto LABEL_137;
  v34 = *(_WORD **)(this + 8);
  v35 = *(unsigned int *)(this + 4);
  if ((v33 & 4) == 0)
  {
    if ((_DWORD)v35)
    {
      v26 = (WebCore::JSDOMGlobalObject *)((unsigned __int16)*v34 - 48);
      if (v26 <= 9 && (v35 < 2 || *v34 != 48))
      {
        v36 = v34 + 1;
        v37 = v35 - 1;
        while (v37)
        {
          if (v26 <= 0x19999999)
          {
            v38 = *v36 - 48;
            if (v38 <= 9)
            {
              v25 = __CFADD__(v38, 10 * (_DWORD)v26);
              v26 = (WebCore::JSDOMGlobalObject *)(v38 + 10 * (_DWORD)v26);
              ++v36;
              --v37;
              if (!v25)
                continue;
            }
          }
          goto LABEL_137;
        }
        goto LABEL_136;
      }
    }
    goto LABEL_137;
  }
  if ((_DWORD)v35)
  {
    v26 = (WebCore::JSDOMGlobalObject *)(*(unsigned __int8 *)v34 - 48);
    if (v26 <= 9 && (v35 < 2 || *(_BYTE *)v34 != 48))
    {
      v75 = (unsigned __int8 *)v34 + 1;
      v76 = v35 - 1;
      while (v76)
      {
        if (v26 <= 0x19999999)
        {
          v77 = *v75 - 48;
          if (v77 <= 9)
          {
            v25 = __CFADD__(v77, 10 * (_DWORD)v26);
            v26 = (WebCore::JSDOMGlobalObject *)(v77 + 10 * (_DWORD)v26);
            ++v75;
            --v76;
            if (!v25)
              continue;
          }
        }
        goto LABEL_137;
      }
LABEL_136:
      if ((_DWORD)v26 != -1 && (JSC::JSObject::getOwnPropertySlotByIndex() & 1) != 0)
      {
LABEL_68:
        v41 = 0;
        v42 = 1;
        goto LABEL_219;
      }
    }
  }
LABEL_137:
  v189 = v9;
  v190 = v5;
  v78 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x30);
  if (!v78)
    v78 = *(_QWORD *)(a1 + 16);
  if ((v78 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v78 + 5) < 0x17u)
    goto LABEL_217;
  v79 = (_BYTE *)(v78 + 6);
  if ((*(_BYTE *)(v78 + 6) & 8) == 0)
  {
    v80 = a2[7];
    v81 = v78;
    while (1)
    {
      v82 = *(_DWORD *)v81 & 0xFFFFFFFE;
      v83 = 16 * v82;
      if ((_DWORD)v29)
      {
        if ((v29 & ~*(_DWORD *)(16 * v82 + 0x20)) == 0)
        {
          v84 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v83, v80);
          if (v84)
          {
            v203 = this;
            v85 = JSC::PropertyTable::get(v84, (uint64_t *)&v203);
            v86 = v85;
            if ((_DWORD)v85 != -1)
              break;
          }
        }
      }
      if ((*v79 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_183;
      v87 = *(_QWORD *)(v83 + 48);
      if (!v87)
        v87 = *(_QWORD *)(v81 + 16);
      if ((v87 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v87 + 5) < 0x17u)
      {
        if (!this)
          goto LABEL_217;
        v88 = *(_DWORD *)(this + 16);
        if ((v88 & 0x20) != 0)
          goto LABEL_217;
        v89 = *(_WORD **)(this + 8);
        v90 = *(unsigned int *)(this + 4);
        if ((v88 & 4) == 0)
        {
          if ((_DWORD)v90)
          {
            v91 = (unsigned __int16)*v89 - 48;
            if (v91 <= 9 && (v90 < 2 || *v89 != 48))
            {
              v92 = v89 + 1;
              v93 = v90 - 1;
              while (v93)
              {
                if (v91 <= 0x19999999)
                {
                  v94 = *v92 - 48;
                  if (v94 <= 9)
                  {
                    v25 = __CFADD__(v94, 10 * v91);
                    v91 = v94 + 10 * v91;
                    ++v92;
                    --v93;
                    if (!v25)
                      continue;
                  }
                }
                goto LABEL_217;
              }
              goto LABEL_216;
            }
          }
          goto LABEL_217;
        }
        if (!(_DWORD)v90)
          goto LABEL_217;
        v91 = *(unsigned __int8 *)v89 - 48;
        if (v91 > 9 || v90 >= 2 && *(_BYTE *)v89 == 48)
          goto LABEL_217;
        v110 = (unsigned __int8 *)v89 + 1;
        v111 = v90 - 1;
        while (v111)
        {
          if (v91 <= 0x19999999)
          {
            v112 = *v110 - 48;
            if (v112 <= 9)
            {
              v25 = __CFADD__(v112, 10 * v91);
              v91 = v112 + 10 * v91;
              ++v110;
              --v111;
              if (!v25)
                continue;
            }
          }
          goto LABEL_217;
        }
LABEL_216:
        if (v91 == -1)
        {
LABEL_217:
          v42 = 0;
          v41 = v19;
          v19 = 0;
          goto LABEL_218;
        }
        v134 = v91;
        v135 = a2[7];
        while (2)
        {
          v136 = 16 * (*(_DWORD *)v78 & 0xFFFFFFFE);
          v137 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, uint64_t *))(16
                                                                                             * *(unsigned int *)(v136 + 0x4C)
                                                                                             + 0x70))(v78, a2, v134, &v191);
          if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
            goto LABEL_217;
          if ((v137 & 1) != 0)
            goto LABEL_183;
          v138 = BYTE2(v197);
          if (BYTE2(v197) == 3)
          {
            if (v198)
              goto LABEL_217;
            v139 = *(unsigned __int8 *)(v78 + 5);
            if (v139 != 61)
              goto LABEL_296;
            goto LABEL_303;
          }
          v139 = *(unsigned __int8 *)(v78 + 5);
          if (v139 == 61)
          {
            if (BYTE2(v197) == 1)
              goto LABEL_217;
          }
          else
          {
LABEL_296:
            if ((v139 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v78 + 40) & 7u) > 2)
              {
                LOBYTE(v203) = 0;
                v204 = 0;
                v142 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v78, (WTF *)&v203);
                if (v143)
                  v140 = v142;
                else
                  v140 = 0;
              }
              else
              {
                v140 = *(_QWORD *)(v78 + 24);
              }
              if (v140 <= v134)
                goto LABEL_217;
              v138 = BYTE2(v197);
            }
          }
          if ((*(_WORD *)(v136 + 12) & 0x800) != 0 && v138 != 3)
          {
            if ((*(_WORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v141 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)v78 & 0xFFFFFFFE)
                                                                                      + 0x4C)
                                                                    + 0xB0))(v78, a2);
            }
            else
            {
              v141 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
              if (!v141)
                v141 = *(_QWORD *)(v78 + 16);
            }
            if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
              goto LABEL_217;
          }
          else
          {
LABEL_303:
            v141 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
            if (!v141)
              v141 = *(_QWORD *)(v78 + 16);
          }
          if ((v141 & 0xFFFE000000000002) != 0)
            goto LABEL_217;
          v78 = v141;
          if (*(unsigned __int8 *)(v141 + 5) <= 0x16u)
            goto LABEL_217;
          continue;
        }
      }
      v79 = (_BYTE *)(v87 + 6);
      v81 = v87;
      if ((*(_BYTE *)(v87 + 6) & 8) != 0)
        goto LABEL_185;
    }
    v95 = HIDWORD(v85);
    if ((int)v85 > 63)
    {
      v96 = *(_QWORD *)(v81 + 8) - 8;
      v97 = 0x3F00000000 - (v85 << 32);
    }
    else
    {
      v96 = v81 + 16;
      v97 = v85 << 32;
    }
    v27 = *(_QWORD *)(v96 + (v97 >> 29));
    if ((v27 & 0xFFFE000000000002) == 0)
    {
      v98 = *(unsigned __int8 *)(v27 + 5);
      if (v98 != 6)
      {
        if (v98 == 5)
          goto LABEL_182;
        goto LABEL_175;
      }
      v99 = *(_DWORD *)(v83 + 16) & 3;
      v100 = *(_QWORD *)(v27 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
      {
        v102 = *(_QWORD *)(v27 + 24);
        v101 = *(_QWORD *)(v27 + 32);
        v191 = *(_QWORD *)(v27 + 8);
        v192 = v100;
        LODWORD(v193) = HIDWORD(v85);
        v195 = v81;
        BYTE1(v197) = 3;
        v9 = v189;
        v41 = 0;
        v42 = 1;
        if (v99 != 2)
          LOBYTE(v197) = 1;
        HIBYTE(v197) = 1;
        v201 = v102;
        v202 = v101;
        v5 = v190;
        goto LABEL_219;
      }
      v191 = *(_QWORD *)(v27 + 8);
      v192 = v100;
      LODWORD(v193) = HIDWORD(v85);
      v195 = v81;
LABEL_200:
      v42 = 1;
      BYTE1(v197) = 3;
      v41 = 0;
      if (v99 != 2)
        LOBYTE(v197) = 1;
      goto LABEL_218;
    }
LABEL_175:
    v41 = 0;
    v191 = v27;
    v195 = v81;
LABEL_176:
    v193 = __PAIR64__(v86, v95);
    v42 = 1;
    LOWORD(v197) = 257;
    goto LABEL_218;
  }
  v87 = v78;
LABEL_185:
  if (!this)
    goto LABEL_346;
  v103 = *(_DWORD *)(this + 16);
  if ((v103 & 0x20) != 0)
    goto LABEL_346;
  v104 = *(_WORD **)(this + 8);
  v105 = *(unsigned int *)(this + 4);
  if ((v103 & 4) == 0)
  {
    if ((_DWORD)v105)
    {
      v106 = (unsigned __int16)*v104 - 48;
      if (v106 <= 9 && (v105 < 2 || *v104 != 48))
      {
        v107 = v104 + 1;
        v108 = v105 - 1;
        while (v108)
        {
          if (v106 <= 0x19999999)
          {
            v109 = *v107 - 48;
            if (v109 <= 9)
            {
              v25 = __CFADD__(v109, 10 * v106);
              v106 = v109 + 10 * v106;
              ++v107;
              --v108;
              if (!v25)
                continue;
            }
          }
          goto LABEL_346;
        }
        goto LABEL_345;
      }
    }
    goto LABEL_346;
  }
  if ((_DWORD)v105)
  {
    v106 = *(unsigned __int8 *)v104 - 48;
    if (v106 <= 9 && (v105 < 2 || *(_BYTE *)v104 != 48))
    {
      v147 = (unsigned __int8 *)v104 + 1;
      v148 = v105 - 1;
      while (v148)
      {
        if (v106 <= 0x19999999)
        {
          v149 = *v147 - 48;
          if (v149 <= 9)
          {
            v25 = __CFADD__(v149, 10 * v106);
            v106 = v149 + 10 * v106;
            ++v147;
            --v148;
            if (!v25)
              continue;
          }
        }
        goto LABEL_346;
      }
LABEL_345:
      if (v106 != -1)
      {
        v173 = v106;
        v174 = a2[7];
        while (1)
        {
          v175 = 16 * (*(_DWORD *)v78 & 0xFFFFFFFE);
          v176 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, uint64_t *))(16
                                                                                             * *(unsigned int *)(v175 + 0x4C)
                                                                                             + 0x70))(v78, a2, v173, &v191);
          v177 = v176;
          if (*((_DWORD *)v174 + 20))
          {
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v174);
            if (((hasExceptionsAfterHandlingTraps | v177) & 1) != 0)
            {
              if (!hasExceptionsAfterHandlingTraps)
                goto LABEL_183;
              goto LABEL_217;
            }
          }
          else if ((v176 & 1) != 0)
          {
            goto LABEL_183;
          }
          v178 = BYTE2(v197);
          if (BYTE2(v197) == 3)
          {
            if (v198)
              goto LABEL_217;
            v179 = *(unsigned __int8 *)(v78 + 5);
            if (v179 == 61)
            {
LABEL_441:
              v181 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
              if (!v181)
                v181 = *(_QWORD *)(v78 + 16);
              goto LABEL_443;
            }
          }
          else
          {
            v179 = *(unsigned __int8 *)(v78 + 5);
            if (v179 == 61)
            {
              if (BYTE2(v197) == 1)
                goto LABEL_217;
              goto LABEL_439;
            }
          }
          if ((v179 - 39) <= 0xA)
          {
            if ((*(_BYTE *)(v78 + 40) & 7u) > 2)
            {
              LOBYTE(v203) = 0;
              v204 = 0;
              v183 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v78, (WTF *)&v203);
              if (v184)
                v180 = v183;
              else
                v180 = 0;
            }
            else
            {
              v180 = *(_QWORD *)(v78 + 24);
            }
            if (v180 <= v173)
              goto LABEL_217;
            v178 = BYTE2(v197);
          }
LABEL_439:
          if ((*(_WORD *)(v175 + 12) & 0x800) == 0 || v178 == 3)
            goto LABEL_441;
          if ((*(_WORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            v181 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)v78 & 0xFFFFFFFE)
                                                                                    + 0x4C)
                                                                  + 0xB0))(v78, a2);
          }
          else
          {
            v181 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
            if (!v181)
              v181 = *(_QWORD *)(v78 + 16);
          }
          if (*((_DWORD *)v174 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v174) & 1) != 0)
            goto LABEL_217;
LABEL_443:
          if ((v181 & 0xFFFE000000000002) == 0)
          {
            v78 = v181;
            if (*(unsigned __int8 *)(v181 + 5) > 0x16u)
              continue;
          }
          goto LABEL_217;
        }
      }
    }
  }
LABEL_346:
  v150 = a2[7];
  while (1)
  {
    v151 = 16 * (*(_DWORD *)v87 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v87 + 6) & 8) != 0)
    {
      v156 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, uint64_t *))(16
                                                                                         * *(unsigned int *)(16 * (*(_DWORD *)v87 & 0xFFFFFFFE) + 0x4C)
                                                                                         + 0x68))(v87, a2, this, &v191);
      if (*((_DWORD *)v150 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v150) & 1) != 0)
        goto LABEL_217;
      if ((v156 & 1) != 0)
        goto LABEL_183;
      if (BYTE2(v197) == 3)
      {
        if (v198)
          goto LABEL_217;
        v157 = *(unsigned __int8 *)(v87 + 5);
        if (v157 == 61)
          goto LABEL_353;
      }
      else
      {
        v157 = *(unsigned __int8 *)(v87 + 5);
        if (v157 == 61)
        {
          if (BYTE2(v197) == 1)
            goto LABEL_217;
          goto LABEL_353;
        }
      }
      if (!this)
        goto LABEL_353;
      if ((v157 - 50) < 0xFFFFFFF5)
        goto LABEL_353;
      v159 = *(_DWORD *)(this + 16);
      if ((v159 & 0x20) != 0)
        goto LABEL_353;
      v160 = *(unsigned int *)(this + 4);
      if (!(_DWORD)v160)
        goto LABEL_353;
      v161 = *(unsigned __int8 **)(this + 8);
      if ((v159 & 4) != 0)
      {
        v162 = *v161;
        if ((_DWORD)v160 == 1)
        {
LABEL_389:
          if ((v162 - 48) < 0xA)
            goto LABEL_217;
          goto LABEL_353;
        }
        if (v162 == 45)
        {
          v163 = v161[1];
          goto LABEL_393;
        }
      }
      else
      {
        v162 = *(unsigned __int16 *)v161;
        if ((_DWORD)v160 == 1)
          goto LABEL_389;
        if (v162 == 45)
        {
          v163 = *((unsigned __int16 *)v161 + 1);
LABEL_393:
          if ((v163 - 48) < 0xA)
          {
            if ((_DWORD)v160 == 2)
              goto LABEL_217;
LABEL_405:
            v188 = v188 & 0xFFFFFF0000000000 | v160 | ((unint64_t)((v159 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v165 = (const WTF::StringImpl *)WTF::numberToString();
            if ((WTF::equal((WTF *)this, v165, v166) & 1) != 0)
              goto LABEL_217;
            goto LABEL_353;
          }
          if ((_DWORD)v160 != 9)
            goto LABEL_353;
          v164 = v163 == 73;
LABEL_403:
          if (!v164)
            goto LABEL_353;
          goto LABEL_405;
        }
      }
      if ((v162 - 48) < 0xA || (_DWORD)v160 == 8 && v162 == 73)
        goto LABEL_405;
      if ((_DWORD)v160 != 3)
        goto LABEL_353;
      v164 = v162 == 78;
      goto LABEL_403;
    }
    if ((_DWORD)v29)
    {
      if ((v29 & ~*(_DWORD *)(16 * (*(_DWORD *)v87 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v152 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v87 & 0xFFFFFFFE)), v150);
        if (v152)
        {
          v203 = this;
          v153 = JSC::PropertyTable::get(v152, (uint64_t *)&v203);
          v86 = v153;
          if ((_DWORD)v153 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v87 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_183;
LABEL_353:
    if ((*(_WORD *)(v151 + 12) & 0x800) == 0)
    {
      v154 = *(_DWORD *)v87;
LABEL_355:
      v155 = *(_QWORD *)(16 * (v154 & 0xFFFFFFFE) + 0x30);
      if (!v155)
        v155 = *(_QWORD *)(v87 + 16);
      goto LABEL_357;
    }
    v154 = *(_DWORD *)v87;
    if (BYTE2(v197) == 3)
      goto LABEL_355;
    v158 = 16 * (v154 & 0xFFFFFFFE);
    if ((*(_WORD *)(v158 + 12) & 0x800) != 0)
    {
      v155 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16 * *(unsigned int *)(v158 + 76) + 0xB0))(v87, a2);
    }
    else
    {
      v155 = *(_QWORD *)(v158 + 48);
      if (!v155)
        v155 = *(_QWORD *)(v87 + 16);
    }
    if (*((_DWORD *)v150 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v150) & 1) != 0)
      goto LABEL_217;
LABEL_357:
    if ((v155 & 0xFFFE000000000002) == 0)
    {
      v87 = v155;
      if (*(unsigned __int8 *)(v155 + 5) > 0x16u)
        continue;
    }
    goto LABEL_217;
  }
  v95 = HIDWORD(v153);
  if ((int)v153 > 63)
  {
    v167 = *(_QWORD *)(v87 + 8) - 8;
    v168 = 0x3F00000000 - (v153 << 32);
  }
  else
  {
    v167 = v87 + 16;
    v168 = v153 << 32;
  }
  v27 = *(_QWORD *)(v167 + (v168 >> 29));
  if ((v27 & 0xFFFE000000000002) != 0)
  {
LABEL_415:
    v41 = 0;
    v191 = v27;
    v195 = v87;
    goto LABEL_176;
  }
  v169 = *(unsigned __int8 *)(v27 + 5);
  if (v169 == 6)
  {
    v99 = *(_DWORD *)(v151 + 16) & 3;
    v170 = *(_QWORD *)(v27 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
    {
      v172 = *(_QWORD *)(v27 + 24);
      v171 = *(_QWORD *)(v27 + 32);
      v191 = *(_QWORD *)(v27 + 8);
      v192 = v170;
      LODWORD(v193) = HIDWORD(v153);
      v195 = v87;
      BYTE1(v197) = 3;
      v41 = 0;
      v42 = 1;
      if (v99 != 2)
        LOBYTE(v197) = 1;
      HIBYTE(v197) = 1;
      v201 = v172;
      v202 = v171;
      goto LABEL_218;
    }
    v191 = *(_QWORD *)(v27 + 8);
    v192 = v170;
    LODWORD(v193) = HIDWORD(v153);
    v195 = v87;
    goto LABEL_200;
  }
  if (v169 != 5)
    goto LABEL_415;
LABEL_182:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_183:
  v41 = 0;
  v42 = 1;
LABEL_218:
  v9 = v189;
  v5 = v190;
LABEL_219:
  if (v200)
  {
    v113 = *((_DWORD *)v199 + 1);
    if (!v113)
    {
      __break(0xC471u);
      JUMPOUT(0x19498E61CLL);
    }
    *((_DWORD *)v199 + 1) = v113 - 1;
  }
  if (v19)
    WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
  if ((v42 & 1) == 0)
  {
    if (v41)
      v122 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v41, v26, (WebCore::DOMMimeType *)v27);
    else
      v122 = 2;
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    {
      v53 = 0;
      if (!v41)
        return v53;
    }
    else
    {
      *(_QWORD *)v5 = v122;
      *((_DWORD *)v5 + 4) = 6;
      *((_QWORD *)v5 + 4) = a1;
      v53 = 1;
      *((_BYTE *)v5 + 49) = 1;
      if (!v41)
        return v53;
    }
    v54 = v41;
    goto LABEL_261;
  }
LABEL_225:
  if ((this >> 4))
  {
    v114 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((this >> 4) & ~*(_DWORD *)(v114 + 0x20)) == 0)
    {
      v115 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7]);
      if (v115)
      {
        v203 = this;
        v116 = JSC::PropertyTable::get(v115, (uint64_t *)&v203);
        v58 = v116;
        if ((_DWORD)v116 != -1)
        {
          v66 = HIDWORD(v116);
          if ((int)v116 > 63)
          {
            v123 = *(_QWORD *)(a1 + 8) - 8;
            v124 = 0x3F00000000 - (v116 << 32);
          }
          else
          {
            v123 = a1 + 16;
            v124 = v116 << 32;
          }
          v69 = *(_QWORD *)(v123 + (v124 >> 29));
          if ((v69 & 0xFFFE000000000002) != 0)
            goto LABEL_249;
          v125 = *(unsigned __int8 *)(v69 + 5);
          if (v125 != 6)
          {
            if (v125 != 5)
              goto LABEL_249;
LABEL_273:
            JSC::JSObject::fillGetterPropertySlot();
            return 1;
          }
          v71 = *(_DWORD *)(v114 + 16) & 3;
          v73 = *(_QWORD *)(v69 + 8);
          v72 = *(_QWORD *)(v69 + 16);
          if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v69 & 0xFFFFFFFE) + 0x4C))
            goto LABEL_270;
          *(_QWORD *)v5 = v73;
          *((_QWORD *)v5 + 1) = v72;
          *((_DWORD *)v5 + 4) = HIDWORD(v116);
          *((_QWORD *)v5 + 4) = a1;
          v53 = 1;
          *((_BYTE *)v5 + 49) = 3;
          if (v71 == 2)
            return v53;
          goto LABEL_276;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    v53 = OwnStaticPropertySlot;
    if (!this || (OwnStaticPropertySlot & 1) != 0)
      return v53;
LABEL_231:
    v117 = *(_DWORD *)(this + 16);
    if ((v117 & 0x20) != 0)
      return 0;
    v118 = *(_BYTE **)(this + 8);
    v119 = *(unsigned int *)(this + 4);
    if ((v117 & 4) != 0)
    {
      if ((_DWORD)v119)
      {
        v132 = *v118 - 48;
        if (v132 > 9 || v119 >= 2 && *v118 == 48)
        {
LABEL_283:
          v133 = 0;
        }
        else
        {
          v185 = v118 + 1;
          v186 = v119 - 1;
          while (v186)
          {
            if (v132 > 0x19999999)
              goto LABEL_283;
            v187 = *v185 - 48;
            if (v187 > 9)
              goto LABEL_283;
            v133 = 0;
            v25 = __CFADD__(v187, 10 * v132);
            v132 = v187 + 10 * v132;
            ++v185;
            --v186;
            if (v25)
              goto LABEL_284;
          }
          v133 = 0x100000000;
          if (v132 == -1)
            v133 = 0;
        }
      }
      else
      {
        v133 = 0;
      }
LABEL_284:
      if ((v133 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v119)
      {
        v120 = *(unsigned __int16 *)v118 - 48;
        if (v120 > 9 || v119 >= 2 && *(_WORD *)v118 == 48)
        {
LABEL_237:
          v121 = 0;
        }
        else
        {
          v126 = (unsigned __int16 *)(v118 + 2);
          v127 = v119 - 1;
          while (v127)
          {
            if (v120 <= 0x19999999)
            {
              v128 = *v126 - 48;
              if (v128 <= 9)
              {
                v25 = __CFADD__(v128, 10 * v120);
                v120 = v128 + 10 * v120;
                ++v126;
                --v127;
                if (!v25)
                  continue;
              }
            }
            goto LABEL_237;
          }
          v164 = v120 == -1;
          v121 = 0x100000000;
          if (v164)
            v121 = 0;
        }
      }
      else
      {
        v121 = 0;
      }
      if ((v121 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if (this)
    goto LABEL_231;
  return 0;
}

unint64_t WebCore::jsDOMMimeTypeArrayConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMMimeTypeArrayPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMMimeTypeArray>,(WebCore::DOMConstructorID)755>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMMimeTypeArray_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 36);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDOMMimeTypeArray::subspaceForImpl(WebCore::JSDOMMimeTypeArray *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 6120);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 6120))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 6120);
    *(_QWORD *)(v9 + 6120) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSDOMMimeTypeArray::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMMimeTypeArrayOwner::isReachableFromOpaqueRoots(int a1, uint64_t a2, int a3, JSC::AbstractSlotVisitor *this, _QWORD *a5)
{
  uint64_t v5;
  void *v6;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  return JSC::AbstractSlotVisitor::containsOpaqueRoot(this, v6);
}

void WebCore::JSDOMMimeTypeArrayOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  _DWORD *v4;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  v4 = v3 + 2;
  ++v3[2];
  if (*(_DWORD *)(a3 + 48))
  {
    JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), (uint64_t)v3);
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  WTF::RefCounted<WebCore::DOMMimeTypeArray>::deref(v4);
}

uint64_t WebCore::createWrapper<WebCore::DOMMimeTypeArray,WebCore::DOMMimeTypeArray>(uint64_t a1, uint64_t *a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)*a2;
  v5 = WebCore::getDOMStructure<WebCore::JSDOMMimeTypeArray>(*(WebCore::JSDOMMimeTypeArray **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSDOMMimeTypeArray::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::DOMMimeTypeArray,WebCore::JSDOMMimeTypeArray>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::wrap<WebCore::DOMMimeTypeArray>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v3 + 48))
  {
    v7 = *(_QWORD *)(v3 + 32);
    if (v7)
    {
      v8 = *(_DWORD *)(v7 - 8);
      v9 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(_QWORD *)(v7 + 16 * v12);
      if (v13 == a3)
      {
LABEL_11:
        v4 = *(_QWORD *)(v7 + 16 * v12 + 8);
        if (v4)
          goto LABEL_3;
      }
      else
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(_QWORD *)(v7 + 16 * v12);
          ++v14;
          if (v13 == a3)
            goto LABEL_11;
        }
      }
    }
  }
  else
  {
    v4 = *(_QWORD *)a3;
    if (*(_QWORD *)a3)
    {
LABEL_3:
      if ((*(_BYTE *)(v4 + 8) & 3) == 0)
      {
        v5 = *(_QWORD *)v4;
        if (*(_QWORD *)v4)
          return v5;
      }
    }
  }
  ++*(_DWORD *)(a3 + 8);
  v15 = a3;
  v5 = WebCore::createWrapper<WebCore::DOMMimeTypeArray,WebCore::DOMMimeTypeArray>(a2, &v15);
  if (v15)
    WTF::RefCounted<WebCore::DOMMimeTypeArray>::deref((_DWORD *)(v15 + 8));
  return v5;
}

_QWORD *WebCore::JSDOMConstructor<WebCore::JSDOMParser>::construct(JSC *a1, uint64_t a2)
{
  JSC *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WTF *v8;
  unsigned int *v9;
  WebCore::JSDOMGlobalObject *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t SlowCase;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *Allocator;
  JSC::JSCell *v24;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v26;
  JSC::JSGlobalObject *v27;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  WTF *v39;
  uint64_t v40;
  unint64_t v41;
  WebCore::JSDOMParser *v42;
  WebCore::JSDOMGlobalObject *v43;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v45;
  JSC::Structure *v46;
  unint64_t SubclassStructure;
  JSC *v48;
  JSC::VM *v49;
  _QWORD *v50;
  WTF *v51;

  v3 = a1;
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v49 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return WebCore::throwConstructorScriptExecutionContextUnavailableError(v3, &v49, (uint64_t)"DOMParser", 10);
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19498F5E8);
  }
  v8 = (WTF *)WTF::fastMalloc((WTF *)0x18);
  *(_DWORD *)v8 = 1;
  v9 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v7 - 192);
  if (v9)
  {
    do
      v11 = __ldaxr(v9);
    while (__stlxr(v11 + 1, v9));
  }
  *((_QWORD *)v8 + 1) = v9;
  v12 = *(_QWORD *)(v7 + 488);
  ++*(_DWORD *)(v12 + 228);
  *((_QWORD *)v8 + 2) = v12;
  v13 = *(_QWORD *)(v5 + 40);
  v14 = WebCore::getDOMStructure<WebCore::JSDOMParser>(*(WebCore::JSDOMParser **)(v13 + 56), (JSC::VM *)v13, v10);
  v15 = *(_QWORD *)(v13 + 56);
  v16 = *(_QWORD *)(v15 + 41456);
  v17 = *(_QWORD *)(v16 + 23536);
  v18 = *(_QWORD **)(v17 + 7440);
  if (!v18)
  {
    v29 = *(_QWORD *)(v16 + 22648);
    v30 = __ldaxr((unsigned __int8 *)v29);
    v48 = v3;
    if (v30)
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v29))
    {
LABEL_29:
      v31 = *(_QWORD *)(v29 + 2824);
      if (!*(_QWORD *)(v31 + 7440))
      {
        v36 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)&v51, "IsoSpace T");
        v50 = 0;
        MEMORY[0x19AEA3204](v36, &v51, v15 + 192, v15 + 1872, 32, 8, &v50);
        v38 = (uint64_t)v50;
        v50 = 0;
        if (v38)
          (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
        v39 = v51;
        v51 = 0;
        if (v39)
        {
          if (*(_DWORD *)v39 == 1)
            WTF::fastFree(v39, v37);
          else
            --*(_DWORD *)v39;
        }
        v40 = *(_QWORD *)(v31 + 7440);
        *(_QWORD *)(v31 + 7440) = v36;
        if (v40)
          (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
      }
      v18 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v32 = *(_QWORD *)(v17 + 7440);
      *(_QWORD *)(v17 + 7440) = v18;
      if (v32)
      {
        v33 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v33, v34);
      }
      v35 = __ldxr((unsigned __int8 *)v29);
      v3 = v48;
      if (v35 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v29))
          goto LABEL_6;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v29);
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v29);
    goto LABEL_29;
  }
LABEL_6:
  SlowCase = v18[3];
  if (SlowCase >= v18[4])
  {
    SlowCase = v18[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_8;
    }
    v41 = *(_QWORD *)(SlowCase + 8) ^ v18[6];
    v18[4] = SlowCase + HIDWORD(v41);
    v18[5] = SlowCase + (int)v41;
  }
  v18[3] = SlowCase + 32;
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v8;
  if (*(_BYTE *)(v15 + 755))
    __dmb(0xAu);
  v20 = *(_QWORD *)(v13 + 3320);
  if ((byte_1EE335108 & 1) == 0)
  {
    qword_1EE335100 = (uint64_t)&off_1E3259CE8;
    byte_1EE335108 = 1;
  }
  v51 = v8;
  if ((SlowCase & 8) != 0)
    v21 = (SlowCase - 112) | 1;
  else
    v21 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v21 & 1) != 0)
    v22 = v21 + 47;
  else
    v22 = *(_QWORD *)v21 + 32;
  Allocator = *(_QWORD **)(v22 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v22 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE335100;
  Allocator[2] = v20;
  v50 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v20 + 32), (uint64_t *)&v51, (uint64_t *)&v50);
  if (v50)
    v50[1] = 3;
  v24 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v24 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v24);
    if (Object)
    {
      v27 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v42 = (WebCore::JSDOMParser *)*((_QWORD *)v3 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v3, Object, v26);
        if (!*((_DWORD *)v42 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) == 0)
        {
          v45 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSDOMParser>(v42, FunctionRealm, v43);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(v3, v27, v45, v46);
          if (!*((_DWORD *)v42 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) == 0)
            JSC::JSObject::setStructure((JSCell *)SlowCase, v42, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  return (_QWORD *)SlowCase;
}

BOOL WebCore::JSDOMConstructor<WebCore::JSDOMParser>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  WTF::StringImpl *v14;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v14);
  v9 = v14;
  v14 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v12 = WebCore::getDOMStructure<WebCore::JSDOMParser>((WebCore::JSDOMParser *)a2, a3, v11);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v12 + 48), 14);
}

WTF::StringImpl *WebCore::JSDOMParserPrototype::finishCreation(WebCore::JSDOMParserPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSDOMParser::s_info, (uint64_t)&WebCore::JSDOMParserPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSDOMParser::destroy(uint64_t this, JSC::JSCell *a2)
{
  WTF *v2;
  _DWORD *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  WTF *v8;
  WTF *v9;

  v2 = *(WTF **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (v3[57] == 1)
          (*(void (**)(_DWORD *, JSC::JSCell *))(*(_QWORD *)v3 + 24))(v3, a2);
        else
          --v3[57];
      }
      v4 = (unsigned int *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v4);
          v9 = (WTF *)v4;
          v7 = v4[7];
          if ((_DWORD)v7)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v9 + 2), (WTF::StringImpl *)(*((_QWORD *)v9 + 2) + 32 * v7));
          v8 = (WTF *)*((_QWORD *)v9 + 2);
          if (v8)
          {
            *((_QWORD *)v9 + 2) = 0;
            *((_DWORD *)v9 + 6) = 0;
            WTF::fastFree(v8, a2);
          }
          WTF::fastFree(v9, a2);
        }
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSDOMParser::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMParser::createPrototype(WebCore::JSDOMParser *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDOMParserPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDOMParserPrototype::create(WebCore::JSDOMParserPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMParserPrototype::finishCreation((WebCore::JSDOMParserPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::jsDOMParserConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMParserPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 7368);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructor<WebCore::JSDOMParser>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMConstructor<WebCore::JSDOMParser>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 7368) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMParserOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSDOMParserOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  int v23;
  _DWORD *v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  WTF *v29;
  WTF *v30;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v23 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v23) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v23;
        if (v12 == v3)
          goto LABEL_3;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_3:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v13 = (_QWORD *)(v5 + 16 * v11);
      *v13 = -1;
      v16 = v13[1];
      v15 = v13 + 1;
      v14 = v16;
      if (v16)
      {
        *(_QWORD *)(v14 + 8) = 3;
        *v15 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v17 = *v4;
      if (*v4)
        v18 = *(_DWORD *)(v17 - 12) - 1;
      else
        v18 = -1;
      *(_DWORD *)(v17 - 12) = v18;
      v19 = *v4;
      if (*v4)
      {
        v20 = 6 * *(_DWORD *)(v19 - 12);
        v21 = *(_DWORD *)(v19 - 4);
        if (v20 < v21 && v21 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v21 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (_DWORD *)*((_QWORD *)v3 + 2);
    *((_QWORD *)v3 + 2) = 0;
    if (v24)
    {
      if (v24[57] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 24))(v24);
      else
        --v24[57];
    }
    v25 = (unsigned int *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v25)
    {
      do
      {
        v26 = __ldaxr(v25);
        v27 = v26 - 1;
      }
      while (__stlxr(v27, v25));
      if (!v27)
      {
        atomic_store(1u, v25);
        v30 = (WTF *)v25;
        v28 = v25[7];
        if ((_DWORD)v28)
          WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v30 + 2), (WTF::StringImpl *)(*((_QWORD *)v30 + 2) + 32 * v28));
        v29 = (WTF *)*((_QWORD *)v30 + 2);
        if (v29)
        {
          *((_QWORD *)v30 + 2) = 0;
          *((_DWORD *)v30 + 6) = 0;
          WTF::fastFree(v29, a2);
        }
        WTF::fastFree(v30, a2);
      }
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPlugin>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDOMPlugin>((WebCore::JSDOMPlugin *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSDOMPluginPrototype::finishCreation(WebCore::JSDOMPluginPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t Direct;
  WTF::StringImpl *v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(a2, (uint64_t)&WebCore::JSDOMPlugin::s_info, &WebCore::JSDOMPluginPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2712);
  v5 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 672);
  v6 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v5, a2, (unint64_t)v6);
  JSC::JSObject::putDirect((unsigned __int8 *)this, a2, v4, Direct, 4);
  if (*v6 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v8);
  else
    *v6 -= 2;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v13);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v13;
  v13 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void WebCore::JSDOMPlugin::destroy(WebCore::JSDOMPlugin *this, JSC::JSCell *a2)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
    WTF::RefCounted<WebCore::DOMPlugin>::deref((_DWORD *)(v2 + 8));
}

uint64_t WebCore::JSDOMPlugin::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  int OwnProperty;
  uint64_t result;
  int v23;
  char v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v16 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v17 = *(_BYTE **)(v15 + 496);
  if (!v17)
    v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
  if (!*(_QWORD *)v17)
    goto LABEL_23;
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
  if (!v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(v18 + 680);
  if (*(_BYTE *)(v19 + 243))
  {
    if (!*(_BYTE *)(v19 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v17[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v19 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSDOMPlugin::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (WebCore::DOMMimeType *)v24, 1);
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v20 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v23 = *(_DWORD *)(v31 + 4);
    if (!v23)
    {
      __break(0xC471u);
      JUMPOUT(0x194990348);
    }
    *(_DWORD *)(v31 + 4) = v23 - 1;
  }
  return result;
}

uint64_t WebCore::JSDOMPlugin::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDOMPlugin::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  unsigned int v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  int v26;
  _BOOL4 v27;
  JSC::VM *v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unsigned int v38;
  BOOL v39;
  uint64_t result;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unsigned __int16 *v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  unsigned int v56;
  unint64_t v57;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v15 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v16 = *(_BYTE **)(v13 + 496);
      if (!v16)
        v16 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v15 - 192));
      if (*(_QWORD *)v16)
      {
        v17 = *(_QWORD *)(*(_QWORD *)v16 + 8);
        if (v17)
        {
          v18 = *(_QWORD *)(v17 + 680);
          if (*(_BYTE *)(v18 + 243))
          {
            if (!*(_BYTE *)(v18 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v18 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v16[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v19 = *(_DWORD *)(a3 + 16);
    if ((v19 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v20 = *(_BYTE **)(a3 + 8);
    v21 = *(unsigned int *)(a3 + 4);
    if ((v19 & 4) != 0)
    {
      if (!(_DWORD)v21)
        goto LABEL_29;
      v22 = *v20 - 48;
      if (v22 > 9 || v21 >= 2 && *v20 == 48)
        goto LABEL_29;
      v49 = v20 + 1;
      v50 = v21 - 1;
      while (v50)
      {
        if (v22 <= 0x19999999)
        {
          v51 = *v49 - 48;
          if (v51 <= 9)
          {
            v39 = __CFADD__(v51, 10 * v22);
            v22 = v51 + 10 * v22;
            ++v49;
            --v50;
            if (!v39)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    else
    {
      if (!(_DWORD)v21
        || (v22 = *(unsigned __int16 *)v20 - 48, v22 > 9)
        || v21 >= 2 && *(_WORD *)v20 == 48)
      {
LABEL_29:
        *(_DWORD *)a3 += 2;
        v23 = (WTF::StringImpl *)a3;
        goto LABEL_30;
      }
      v36 = (unsigned __int16 *)(v20 + 2);
      v37 = v21 - 1;
      while (v37)
      {
        if (v22 <= 0x19999999)
        {
          v38 = *v36 - 48;
          if (v38 <= 9)
          {
            v39 = __CFADD__(v38, 10 * v22);
            v22 = v38 + 10 * v22;
            ++v36;
            --v37;
            if (!v39)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    if (v22 != -1)
      return *(_DWORD *)(v6 + 100) <= v22;
    goto LABEL_29;
  }
  v23 = 0;
LABEL_30:
  if (*(_DWORD *)(v6 + 100))
  {
    v24 = 0;
    do
    {
      v25 = *(WTF::StringImpl **)(*(_QWORD *)(*(_QWORD *)(v6 + 88) + 8 * v24) + 16);
      if (v25)
      {
        v26 = *(_DWORD *)v25;
        *(_DWORD *)v25 += 2;
        if (v26)
          *(_DWORD *)v25 = v26;
        else
          WTF::StringImpl::destroy(v25, v14);
      }
      v10 = v23 == v25;
      v27 = v23 == v25;
      if (v10)
        break;
      ++v24;
    }
    while (v24 < *(unsigned int *)(v6 + 100));
  }
  else
  {
    v27 = 0;
  }
  if (v23)
  {
    if (*(_DWORD *)v23 != 2)
    {
      *(_DWORD *)v23 -= 2;
      goto LABEL_43;
    }
    WTF::StringImpl::destroy(v23, v14);
    if (v27)
      goto LABEL_44;
    return JSC::JSObject::deleteProperty();
  }
LABEL_43:
  if (!v27)
    return JSC::JSObject::deleteProperty();
LABEL_44:
  v28 = (JSC::VM *)*((_QWORD *)a2 + 7);
  ++*((_DWORD *)v28 + 1);
  if (!(a3 >> 4)
    || ((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) != 0
    || (v29 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v28)) == 0|| (v57 = a3, v30 = JSC::PropertyTable::get(v29, (uint64_t *)&v57), (_DWORD)v30 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      result = JSC::JSObject::getOwnStaticPropertySlot();
      if (!a3 || (result & 1) != 0)
        goto LABEL_67;
    }
    else if (!a3)
    {
      goto LABEL_66;
    }
    v31 = *(_DWORD *)(a3 + 16);
    if ((v31 & 0x20) == 0)
    {
      v32 = *(_BYTE **)(a3 + 8);
      v33 = *(unsigned int *)(a3 + 4);
      if ((v31 & 4) != 0)
      {
        if ((_DWORD)v33)
        {
          v52 = *v32 - 48;
          if (v52 > 9 || v33 >= 2 && *v32 == 48)
          {
LABEL_115:
            v53 = 0;
          }
          else
          {
            v54 = v32 + 1;
            v55 = v33 - 1;
            while (v55)
            {
              if (v52 > 0x19999999)
                goto LABEL_115;
              v56 = *v54 - 48;
              if (v56 > 9)
                goto LABEL_115;
              v53 = 0;
              v39 = __CFADD__(v56, 10 * v52);
              v52 = v56 + 10 * v52;
              ++v54;
              --v55;
              if (v39)
                goto LABEL_116;
            }
            v53 = 0x100000000;
            if (v52 == -1)
              v53 = 0;
          }
        }
        else
        {
          v53 = 0;
        }
LABEL_116:
        if ((v53 & 0x100000000) == 0)
          goto LABEL_66;
      }
      else
      {
        if ((_DWORD)v33)
        {
          v34 = *(unsigned __int16 *)v32 - 48;
          if (v34 > 9 || v33 >= 2 && *(_WORD *)v32 == 48)
          {
LABEL_56:
            v35 = 0;
          }
          else
          {
            v46 = (unsigned __int16 *)(v32 + 2);
            v47 = v33 - 1;
            while (v47)
            {
              if (v34 <= 0x19999999)
              {
                v48 = *v46 - 48;
                if (v48 <= 9)
                {
                  v39 = __CFADD__(v48, 10 * v34);
                  v34 = v48 + 10 * v34;
                  ++v46;
                  --v47;
                  if (!v39)
                    continue;
                }
              }
              goto LABEL_56;
            }
            v10 = v34 == -1;
            v35 = 0x100000000;
            if (v10)
              v35 = 0;
          }
        }
        else
        {
          v35 = 0;
        }
        if ((v35 & 0x100000000) == 0)
          goto LABEL_66;
      }
      result = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_67;
    }
LABEL_66:
    result = 0;
    goto LABEL_67;
  }
  if ((int)v30 > 63)
  {
    v42 = *(_QWORD *)(a1 + 8) - 8;
    v43 = 0x3F00000000 - (v30 << 32);
  }
  else
  {
    v42 = a1 + 16;
    v43 = v30 << 32;
  }
  v44 = *(_QWORD *)(v42 + (v43 >> 29));
  if ((v44 & 0xFFFE000000000002) != 0)
    goto LABEL_78;
  v45 = *(unsigned __int8 *)(v44 + 5);
  if (v45 == 6)
  {
    result = 1;
    goto LABEL_67;
  }
  if (v45 != 5)
  {
LABEL_78:
    result = 1;
    goto LABEL_67;
  }
  JSC::JSObject::fillGetterPropertySlot();
  result = 1;
LABEL_67:
  v41 = *((_DWORD *)v28 + 1);
  if (!v41)
  {
    __break(0xC471u);
    JUMPOUT(0x1949909B8);
  }
  *((_DWORD *)v28 + 1) = v41 - 1;
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSDOMPlugin::deletePropertyByIndex(WebCore::JSDOMPlugin *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 100) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 100) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 100) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 100) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 100) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 100) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 100) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDOMPlugin::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, WebCore::DOMMimeType *a4)
{
  return WebCore::JSDOMPlugin::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSDOMPlugin::getOwnPropertySlotByIndex(WebCore::JSDOMPlugin *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  uint64_t v9;
  JSC::JSGlobalObject *v10;
  unint64_t v11;
  uint64_t OwnPropertySlotByIndex;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::DOMMimeType **v17;
  uint64_t v18;
  WebCore::DOMMimeType *v19;
  WTF::StringImpl *v20;
  int v21;
  WTF::StringImpl *v22;
  WebCore::JSDOMGlobalObject *v23;
  uint64_t v24;
  JSC::VM *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  int v30;
  _BYTE *v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned int v35;
  BOOL v36;
  unint64_t v37;
  uint64_t *v38;
  int v39;
  JSC::JSGlobalObject *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  _BYTE *v49;
  WebCore::JSDOMPlugin *v50;
  uint64_t v51;
  JSC::Structure *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char OwnStaticPropertySlot;
  int v58;
  _WORD *v59;
  uint64_t v60;
  unsigned int v61;
  unsigned __int16 *v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  int v70;
  _WORD *v71;
  uint64_t v72;
  unsigned int v73;
  unsigned __int16 *v74;
  uint64_t v75;
  unsigned int v76;
  unsigned __int8 *v77;
  uint64_t v78;
  unsigned int v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  JSC::VM *v83;
  uint64_t v84;
  char v85;
  int v86;
  int v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unsigned __int8 *v91;
  uint64_t v92;
  unsigned int v93;
  JSC::VM *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  char v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  unsigned __int8 *v105;
  int v106;
  int v107;
  uint64_t v108;
  const WTF::StringImpl *v109;
  const unsigned __int8 *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  unint64_t v115;
  JSC::VM *v116;
  uint64_t v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v125;
  unint64_t v126;
  JSC::VM *v127;
  unint64_t v128;
  WTF::StringImpl *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  WebCore::JSDOMPlugin *v133;
  WebCore::JSDOMPlugin *v134;
  uint64_t v135;
  int v136;
  char v137;
  JSC::VM *v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  WTF::StringImpl *v142;
  char v143;
  uint64_t v144;

  v144 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 == -1)
  {
    JSC::Identifier::from();
    if (v129)
    {
      if ((*((_BYTE *)v129 + 16) & 0x20) != 0)
        goto LABEL_165;
      v15 = *((_QWORD *)this + 3);
      *(_DWORD *)v129 += 2;
    }
    else
    {
      v15 = *((_QWORD *)this + 3);
    }
    v16 = *(unsigned int *)(v15 + 100);
    if (!(_DWORD)v16)
    {
LABEL_24:
      v19 = 0;
      goto LABEL_26;
    }
    v17 = *(WebCore::DOMMimeType ***)(v15 + 88);
    v18 = 8 * v16;
    while (1)
    {
      v19 = *v17;
      v20 = (WTF::StringImpl *)*((_QWORD *)*v17 + 2);
      if (v20)
      {
        v21 = *(_DWORD *)v20;
        *(_DWORD *)v20 += 2;
        if (v21)
        {
          *(_DWORD *)v20 = v21;
          if (v20 == v129)
            goto LABEL_25;
          goto LABEL_16;
        }
        WTF::StringImpl::destroy(v20, v14);
        if (v20 == v129)
        {
          v19 = *v17;
LABEL_25:
          ++*(_DWORD *)v19;
LABEL_26:
          if (v129)
          {
            if (*(_DWORD *)v129 != 2)
            {
              *(_DWORD *)v129 -= 2;
              goto LABEL_29;
            }
            WTF::StringImpl::destroy(v129, v14);
            if (!v19)
              goto LABEL_165;
          }
          else
          {
LABEL_29:
            if (!v19)
              goto LABEL_165;
          }
          ++*(_DWORD *)v19;
          WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
          v25 = (JSC::VM *)*((_QWORD *)a2 + 7);
          v132 = 0xFFFFFFFF00000000;
          v134 = 0;
          v135 = 0;
          v133 = this;
          v136 = 196608;
          v137 = 0;
          v140 = 0;
          v141 = 0;
          v138 = v25;
          ++*((_DWORD *)v25 + 1);
          v139 = 1;
          v128 = (unint64_t)v129 >> 4;
          if (((unint64_t)v129 >> 4))
          {
            v26 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
            if ((v128 & ~*(_DWORD *)(v26 + 0x20)) == 0)
            {
              v27 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v25);
              if (v27)
              {
                v142 = v129;
                v28 = JSC::PropertyTable::get(v27, (uint64_t *)&v142);
                v29 = v28;
                if ((_DWORD)v28 != -1)
                {
                  v37 = HIDWORD(v28);
                  v38 = (uint64_t *)((char *)this + 8 * (int)v28 + 16);
                  if ((int)v28 >= 64)
                    v38 = (uint64_t *)(*((_QWORD *)this + 1) + ((uint64_t)(0x3F00000000 - (v28 << 32)) >> 29) - 8);
                  v24 = *v38;
                  if ((*v38 & 0xFFFE000000000002) == 0)
                  {
                    v39 = *(unsigned __int8 *)(v24 + 5);
                    if (v39 == 6)
                    {
                      v41 = *(_DWORD *)(v26 + 16) & 3;
                      v42 = *(_QWORD *)(v24 + 16);
                      if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C))
                      {
                        v130 = *(_QWORD *)(v24 + 8);
                        v131 = v42;
                        LODWORD(v132) = HIDWORD(v28);
                        v134 = this;
                        goto LABEL_140;
                      }
                      v44 = *(_QWORD *)(v24 + 24);
                      v43 = *(_QWORD *)(v24 + 32);
                      v130 = *(_QWORD *)(v24 + 8);
                      v131 = v42;
                      LODWORD(v132) = HIDWORD(v28);
                      v134 = this;
                      goto LABEL_119;
                    }
                    if (v39 == 5)
                      goto LABEL_122;
                  }
                  v40 = 0;
                  v130 = v24;
                  v134 = this;
                  goto LABEL_115;
                }
              }
            }
          }
          if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
            goto LABEL_123;
          if (v129)
          {
            v30 = *((_DWORD *)v129 + 4);
            if ((v30 & 0x20) == 0)
            {
              v31 = (_BYTE *)*((_QWORD *)v129 + 1);
              v32 = *((unsigned int *)v129 + 1);
              if ((v30 & 4) != 0)
              {
                if ((_DWORD)v32)
                {
                  v23 = (WebCore::JSDOMGlobalObject *)(*v31 - 48);
                  if (v23 <= 9 && (v32 < 2 || *v31 != 48))
                  {
                    v45 = v31 + 1;
                    v46 = v32 - 1;
                    while (v46)
                    {
                      if (v23 <= 0x19999999)
                      {
                        v47 = *v45 - 48;
                        if (v47 <= 9)
                        {
                          v36 = __CFADD__(v47, 10 * (_DWORD)v23);
                          v23 = (WebCore::JSDOMGlobalObject *)(v47 + 10 * (_DWORD)v23);
                          ++v45;
                          --v46;
                          if (!v36)
                            continue;
                        }
                      }
                      goto LABEL_76;
                    }
LABEL_75:
                    if ((_DWORD)v23 != -1 && (JSC::JSObject::getOwnPropertySlotByIndex() & 1) != 0)
                      goto LABEL_123;
                  }
                }
              }
              else if ((_DWORD)v32)
              {
                v23 = (WebCore::JSDOMGlobalObject *)(*(unsigned __int16 *)v31 - 48);
                if (v23 <= 9 && (v32 < 2 || *(_WORD *)v31 != 48))
                {
                  v33 = (unsigned __int16 *)(v31 + 2);
                  v34 = v32 - 1;
                  while (v34)
                  {
                    if (v23 <= 0x19999999)
                    {
                      v35 = *v33 - 48;
                      if (v35 <= 9)
                      {
                        v36 = __CFADD__(v35, 10 * (_DWORD)v23);
                        v23 = (WebCore::JSDOMGlobalObject *)(v35 + 10 * (_DWORD)v23);
                        ++v33;
                        --v34;
                        if (!v36)
                          continue;
                      }
                    }
                    goto LABEL_76;
                  }
                  goto LABEL_75;
                }
              }
            }
          }
LABEL_76:
          v48 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
          if (!v48)
            v48 = *((_QWORD *)this + 2);
          if ((v48 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v48 + 5) < 0x17u)
            goto LABEL_158;
          v49 = (_BYTE *)(v48 + 6);
          if ((*(_BYTE *)(v48 + 6) & 8) == 0)
          {
            v127 = (JSC::VM *)*((_QWORD *)a2 + 7);
            v50 = (WebCore::JSDOMPlugin *)v48;
            while (1)
            {
              v51 = 16 * (*(_DWORD *)v50 & 0xFFFFFFFE);
              if ((_DWORD)v128)
              {
                if ((v128 & ~*(_DWORD *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x20)) == 0)
                {
                  v52 = (JSC::Structure *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE));
                  v53 = JSC::Structure::ensurePropertyTableIfNotEmpty(v52, v127);
                  v51 = (uint64_t)v52;
                  if (v53)
                  {
                    v142 = v129;
                    v54 = JSC::PropertyTable::get(v53, (uint64_t *)&v142);
                    v29 = v54;
                    v51 = (uint64_t)v52;
                    if ((_DWORD)v54 != -1)
                      break;
                  }
                }
              }
              if ((*v49 & 0x20) != 0)
              {
                v56 = v51;
                OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
                v51 = v56;
                if ((OwnStaticPropertySlot & 1) != 0)
                  goto LABEL_123;
              }
              v55 = *(_QWORD *)(v51 + 48);
              if (!v55)
                v55 = *((_QWORD *)v50 + 2);
              if ((v55 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v55 + 5) < 0x17u)
              {
                if (!v129)
                  goto LABEL_158;
                v58 = *((_DWORD *)v129 + 4);
                if ((v58 & 0x20) != 0)
                  goto LABEL_158;
                v59 = (_WORD *)*((_QWORD *)v129 + 1);
                v60 = *((unsigned int *)v129 + 1);
                if ((v58 & 4) == 0)
                {
                  if ((_DWORD)v60)
                  {
                    v61 = (unsigned __int16)*v59 - 48;
                    if (v61 <= 9 && (v60 < 2 || *v59 != 48))
                    {
                      v62 = v59 + 1;
                      v63 = v60 - 1;
                      while (v63)
                      {
                        if (v61 <= 0x19999999)
                        {
                          v64 = *v62 - 48;
                          if (v64 <= 9)
                          {
                            v36 = __CFADD__(v64, 10 * v61);
                            v61 = v64 + 10 * v61;
                            ++v62;
                            --v63;
                            if (!v36)
                              continue;
                          }
                        }
                        goto LABEL_158;
                      }
                      goto LABEL_157;
                    }
                  }
                  goto LABEL_158;
                }
                if (!(_DWORD)v60)
                  goto LABEL_158;
                v61 = *(unsigned __int8 *)v59 - 48;
                if (v61 > 9 || v60 >= 2 && *(_BYTE *)v59 == 48)
                  goto LABEL_158;
                v77 = (unsigned __int8 *)v59 + 1;
                v78 = v60 - 1;
                while (v78)
                {
                  if (v61 <= 0x19999999)
                  {
                    v79 = *v77 - 48;
                    if (v79 <= 9)
                    {
                      v36 = __CFADD__(v79, 10 * v61);
                      v61 = v79 + 10 * v61;
                      ++v77;
                      --v78;
                      if (!v36)
                        continue;
                    }
                  }
                  goto LABEL_158;
                }
LABEL_157:
                if (v61 == -1)
                {
LABEL_158:
                  v68 = 0;
                  v40 = v19;
                  v19 = 0;
                  goto LABEL_159;
                }
                v82 = v61;
                v83 = (JSC::VM *)*((_QWORD *)a2 + 7);
                while (2)
                {
                  v84 = 16 * (*(_DWORD *)v48 & 0xFFFFFFFE);
                  v85 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16 * *(unsigned int *)(v84 + 0x4C) + 0x70))(v48, a2, v82, &v130);
                  if (*((_DWORD *)v83 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v83) & 1) != 0)
                    goto LABEL_158;
                  if ((v85 & 1) != 0)
                    goto LABEL_123;
                  v86 = BYTE2(v136);
                  if (BYTE2(v136) == 3)
                  {
                    if (v137)
                      goto LABEL_158;
                    v87 = *(unsigned __int8 *)(v48 + 5);
                    if (v87 == 61)
                    {
LABEL_197:
                      v89 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
                      if (!v89)
                        v89 = *(_QWORD *)(v48 + 16);
                      goto LABEL_199;
                    }
LABEL_190:
                    if ((v87 - 39) <= 0xA)
                    {
                      if ((*(_BYTE *)(v48 + 40) & 7u) > 2)
                      {
                        LOBYTE(v142) = 0;
                        v143 = 0;
                        v90 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v48, (WTF *)&v142);
                        if ((_BYTE)v22)
                          v88 = v90;
                        else
                          v88 = 0;
                      }
                      else
                      {
                        v88 = *(_QWORD *)(v48 + 24);
                      }
                      if (v88 <= v82)
                        goto LABEL_158;
                      v86 = BYTE2(v136);
                    }
                  }
                  else
                  {
                    v87 = *(unsigned __int8 *)(v48 + 5);
                    if (v87 != 61)
                      goto LABEL_190;
                    if (BYTE2(v136) == 1)
                      goto LABEL_158;
                  }
                  if ((*(_WORD *)(v84 + 12) & 0x800) == 0 || v86 == 3)
                    goto LABEL_197;
                  if ((*(_WORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
                  {
                    v89 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                       * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C)
                                                                                       + 0xB0))(v48, a2);
                  }
                  else
                  {
                    v89 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
                    if (!v89)
                      v89 = *(_QWORD *)(v48 + 16);
                  }
                  if (*((_DWORD *)v83 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v83) & 1) != 0)
                    goto LABEL_158;
LABEL_199:
                  if ((v89 & 0xFFFE000000000002) != 0)
                    goto LABEL_158;
                  v48 = v89;
                  if (*(unsigned __int8 *)(v89 + 5) <= 0x16u)
                    goto LABEL_158;
                  continue;
                }
              }
              v49 = (_BYTE *)(v55 + 6);
              v126 = v55;
              v50 = (WebCore::JSDOMPlugin *)v55;
              if ((*(_BYTE *)(v55 + 6) & 8) != 0)
                goto LABEL_125;
            }
            v37 = HIDWORD(v54);
            if ((int)v54 > 63)
            {
              v65 = *((_QWORD *)v50 + 1) - 8;
              v66 = 0x3F00000000 - (v54 << 32);
            }
            else
            {
              v65 = (uint64_t)v50 + 16;
              v66 = v54 << 32;
            }
            v24 = *(_QWORD *)(v65 + (v66 >> 29));
            if ((v24 & 0xFFFE000000000002) != 0)
            {
LABEL_114:
              v40 = 0;
              v130 = v24;
              v134 = v50;
              goto LABEL_115;
            }
            v67 = *(unsigned __int8 *)(v24 + 5);
            if (v67 != 6)
            {
              if (v67 == 5)
                goto LABEL_122;
              goto LABEL_114;
            }
            v41 = *((_DWORD *)v52 + 4) & 3;
            v69 = *(_QWORD *)(v24 + 16);
            if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C))
            {
              v130 = *(_QWORD *)(v24 + 8);
              v131 = v69;
              LODWORD(v132) = HIDWORD(v54);
              v134 = v50;
              goto LABEL_140;
            }
            v44 = *(_QWORD *)(v24 + 24);
            v43 = *(_QWORD *)(v24 + 32);
            v130 = *(_QWORD *)(v24 + 8);
            v131 = v69;
            LODWORD(v132) = HIDWORD(v54);
            v134 = v50;
LABEL_119:
            BYTE1(v136) = 3;
            v40 = 0;
            v68 = 1;
            if (v41 != 2)
              LOBYTE(v136) = 1;
            HIBYTE(v136) = 1;
            v140 = v44;
            v141 = v43;
            goto LABEL_159;
          }
          v126 = v48;
LABEL_125:
          if (!v129)
            goto LABEL_226;
          v70 = *((_DWORD *)v129 + 4);
          if ((v70 & 0x20) != 0)
            goto LABEL_226;
          v71 = (_WORD *)*((_QWORD *)v129 + 1);
          v72 = *((unsigned int *)v129 + 1);
          if ((v70 & 4) == 0)
          {
            if ((_DWORD)v72)
            {
              v73 = (unsigned __int16)*v71 - 48;
              if (v73 <= 9 && (v72 < 2 || *v71 != 48))
              {
                v74 = v71 + 1;
                v75 = v72 - 1;
                while (v75)
                {
                  if (v73 <= 0x19999999)
                  {
                    v76 = *v74 - 48;
                    if (v76 <= 9)
                    {
                      v36 = __CFADD__(v76, 10 * v73);
                      v73 = v76 + 10 * v73;
                      ++v74;
                      --v75;
                      if (!v36)
                        continue;
                    }
                  }
                  goto LABEL_226;
                }
                goto LABEL_225;
              }
            }
            goto LABEL_226;
          }
          if (!(_DWORD)v72)
            goto LABEL_226;
          v73 = *(unsigned __int8 *)v71 - 48;
          if (v73 > 9 || v72 >= 2 && *(_BYTE *)v71 == 48)
            goto LABEL_226;
          v91 = (unsigned __int8 *)v71 + 1;
          v92 = v72 - 1;
          while (v92)
          {
            if (v73 <= 0x19999999)
            {
              v93 = *v91 - 48;
              if (v93 <= 9)
              {
                v36 = __CFADD__(v93, 10 * v73);
                v73 = v93 + 10 * v73;
                ++v91;
                --v92;
                if (!v36)
                  continue;
              }
            }
            goto LABEL_226;
          }
LABEL_225:
          if (v73 == -1)
          {
LABEL_226:
            v94 = (JSC::VM *)*((_QWORD *)a2 + 7);
            while (1)
            {
              v95 = *(_DWORD *)v126 & 0xFFFFFFFE;
              v96 = 16 * v95;
              if ((*(_BYTE *)(v126 + 6) & 8) != 0)
                break;
              if ((_DWORD)v128)
              {
                if ((v128 & ~*(_DWORD *)(16 * v95 + 0x20)) == 0)
                {
                  v97 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v96, v94);
                  if (v97)
                  {
                    v142 = v129;
                    v98 = JSC::PropertyTable::get(v97, (uint64_t *)&v142);
                    v29 = v98;
                    if ((_DWORD)v98 != -1)
                    {
                      v37 = HIDWORD(v98);
                      if ((int)v98 > 63)
                      {
                        v111 = *(_QWORD *)(v126 + 8) - 8;
                        v112 = 0x3F00000000 - (v98 << 32);
                      }
                      else
                      {
                        v111 = v126 + 16;
                        v112 = v98 << 32;
                      }
                      v24 = *(_QWORD *)(v111 + (v112 >> 29));
                      if ((v24 & 0xFFFE000000000002) == 0)
                      {
                        v113 = *(unsigned __int8 *)(v24 + 5);
                        if (v113 != 6)
                        {
                          if (v113 != 5)
                            goto LABEL_292;
LABEL_122:
                          JSC::JSObject::fillGetterPropertySlot();
LABEL_123:
                          v40 = 0;
                          v68 = 1;
LABEL_159:
                          if (v139)
                          {
                            v80 = *((_DWORD *)v138 + 1);
                            if (!v80)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x19499159CLL);
                            }
                            *((_DWORD *)v138 + 1) = v80 - 1;
                          }
                          if (v19)
                            WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
                          if ((v68 & 1) == 0)
                          {
                            if (v40)
                              v81 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v40, v23, (WebCore::DOMMimeType *)v24);
                            else
                              v81 = 2;
                            if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
                            {
                              OwnPropertySlotByIndex = 0;
                              if (!v40)
                                goto LABEL_166;
                            }
                            else
                            {
                              *(_QWORD *)a4 = v81;
                              *(_DWORD *)(a4 + 16) = 6;
                              *(_QWORD *)(a4 + 32) = this;
                              OwnPropertySlotByIndex = 1;
                              *(_BYTE *)(a4 + 49) = 1;
                              if (!v40)
                                goto LABEL_166;
                            }
                            WTF::RefCounted<WebCore::DOMMimeType>::deref(v40);
                            goto LABEL_166;
                          }
LABEL_165:
                          OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_166:
                          if (v129)
                          {
                            if (*(_DWORD *)v129 == 2)
                              WTF::StringImpl::destroy(v129, v22);
                            else
                              *(_DWORD *)v129 -= 2;
                          }
                          return OwnPropertySlotByIndex;
                        }
                        v41 = *(_DWORD *)(v96 + 16) & 3;
                        v114 = *(_QWORD *)(v24 + 16);
                        if (MEMORY[0x1E0CBE830] == 16
                                                  * *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C))
                        {
                          v44 = *(_QWORD *)(v24 + 24);
                          v43 = *(_QWORD *)(v24 + 32);
                          v130 = *(_QWORD *)(v24 + 8);
                          v131 = v114;
                          LODWORD(v132) = HIDWORD(v98);
                          v134 = (WebCore::JSDOMPlugin *)v126;
                          goto LABEL_119;
                        }
                        v130 = *(_QWORD *)(v24 + 8);
                        v131 = v114;
                        LODWORD(v132) = HIDWORD(v98);
                        v134 = (WebCore::JSDOMPlugin *)v126;
LABEL_140:
                        v68 = 1;
                        BYTE1(v136) = 3;
                        v40 = 0;
                        if (v41 != 2)
                          LOBYTE(v136) = 1;
                        goto LABEL_159;
                      }
LABEL_292:
                      v40 = 0;
                      v130 = v24;
                      v134 = (WebCore::JSDOMPlugin *)v126;
LABEL_115:
                      v132 = __PAIR64__(v29, v37);
                      v68 = 1;
                      LOWORD(v136) = 257;
                      goto LABEL_159;
                    }
                  }
                }
              }
              if ((*(_BYTE *)(v126 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
                goto LABEL_123;
LABEL_233:
              if ((*(_WORD *)(v96 + 12) & 0x800) == 0)
              {
                v99 = *(_DWORD *)v126;
LABEL_235:
                v100 = *(_QWORD *)(16 * (v99 & 0xFFFFFFFE) + 0x30);
                if (!v100)
                  v100 = *(_QWORD *)(v126 + 16);
                goto LABEL_237;
              }
              v99 = *(_DWORD *)v126;
              if (BYTE2(v136) == 3)
                goto LABEL_235;
              v108 = 16 * (v99 & 0xFFFFFFFE);
              if ((*(_WORD *)(v108 + 12) & 0x800) != 0)
              {
                v100 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                    * *(unsigned int *)(v108 + 76)
                                                                                    + 0xB0))(v126, a2);
              }
              else
              {
                v100 = *(_QWORD *)(v108 + 48);
                if (!v100)
                  v100 = *(_QWORD *)(v126 + 16);
              }
              if (*((_DWORD *)v94 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v94) & 1) != 0)
                goto LABEL_158;
LABEL_237:
              if ((v100 & 0xFFFE000000000002) == 0)
              {
                v126 = v100;
                if (*(unsigned __int8 *)(v100 + 5) > 0x16u)
                  continue;
              }
              goto LABEL_158;
            }
            v101 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, WTF::StringImpl *, uint64_t *))(16 * *(unsigned int *)(16 * v95 + 0x4C) + 0x68))(v126, a2, v129, &v130);
            if (*((_DWORD *)v94 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v94) & 1) != 0)
              goto LABEL_158;
            if ((v101 & 1) != 0)
              goto LABEL_123;
            if (BYTE2(v136) == 3)
            {
              if (v137)
                goto LABEL_158;
              v102 = *(unsigned __int8 *)(v126 + 5);
              if (v102 == 61)
                goto LABEL_233;
            }
            else
            {
              v102 = *(unsigned __int8 *)(v126 + 5);
              if (v102 == 61)
              {
                if (BYTE2(v136) == 1)
                  goto LABEL_158;
                goto LABEL_233;
              }
            }
            if (!v129)
              goto LABEL_233;
            if ((v102 - 50) < 0xFFFFFFF5)
              goto LABEL_233;
            v103 = *((_DWORD *)v129 + 4);
            if ((v103 & 0x20) != 0)
              goto LABEL_233;
            v104 = *((unsigned int *)v129 + 1);
            if (!(_DWORD)v104)
              goto LABEL_233;
            v105 = (unsigned __int8 *)*((_QWORD *)v129 + 1);
            if ((v103 & 4) != 0)
            {
              v106 = *v105;
              if ((_DWORD)v104 == 1)
              {
LABEL_269:
                if ((v106 - 48) < 0xA)
                  goto LABEL_158;
                goto LABEL_233;
              }
              if (v106 == 45)
              {
                v107 = v105[1];
                goto LABEL_273;
              }
            }
            else
            {
              v106 = *(unsigned __int16 *)v105;
              if ((_DWORD)v104 == 1)
                goto LABEL_269;
              if (v106 == 45)
              {
                v107 = *((unsigned __int16 *)v105 + 1);
LABEL_273:
                if ((v107 - 48) >= 0xA)
                {
                  if ((_DWORD)v104 != 9 || v107 != 73)
                    goto LABEL_233;
                }
                else if ((_DWORD)v104 == 2)
                {
                  goto LABEL_158;
                }
LABEL_284:
                v48 = v48 & 0xFFFFFF0000000000 | v104 | ((unint64_t)((v103 >> 2) & 1) << 32);
                JSC::jsToNumber();
                v109 = (const WTF::StringImpl *)WTF::numberToString();
                if ((WTF::equal(v129, v109, v110) & 1) != 0)
                  goto LABEL_158;
                goto LABEL_233;
              }
            }
            if ((v106 - 48) >= 0xA
              && ((_DWORD)v104 != 8 || v106 != 73)
              && ((_DWORD)v104 != 3 || v106 != 78))
            {
              goto LABEL_233;
            }
            goto LABEL_284;
          }
          v115 = v73;
          v116 = (JSC::VM *)*((_QWORD *)a2 + 7);
          while (2)
          {
            v117 = 16 * (*(_DWORD *)v48 & 0xFFFFFFFE);
            v118 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16 * *(unsigned int *)(v117 + 0x4C) + 0x70))(v48, a2, v115, &v130);
            v119 = v118;
            if (*((_DWORD *)v116 + 20))
            {
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v116);
              if (((hasExceptionsAfterHandlingTraps | v119) & 1) != 0)
              {
                if (!hasExceptionsAfterHandlingTraps)
                  goto LABEL_123;
                goto LABEL_158;
              }
            }
            else if ((v118 & 1) != 0)
            {
              goto LABEL_123;
            }
            v120 = BYTE2(v136);
            if (BYTE2(v136) == 3)
            {
              if (v137)
                goto LABEL_158;
              v121 = *(unsigned __int8 *)(v48 + 5);
              if (v121 == 61)
              {
LABEL_315:
                v123 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
                if (!v123)
                  v123 = *(_QWORD *)(v48 + 16);
                goto LABEL_317;
              }
LABEL_308:
              if ((v121 - 39) <= 0xA)
              {
                if ((*(_BYTE *)(v48 + 40) & 7u) > 2)
                {
                  LOBYTE(v142) = 0;
                  v143 = 0;
                  v125 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v48, (WTF *)&v142);
                  if ((_BYTE)v22)
                    v122 = v125;
                  else
                    v122 = 0;
                }
                else
                {
                  v122 = *(_QWORD *)(v48 + 24);
                }
                if (v122 <= v115)
                  goto LABEL_158;
                v120 = BYTE2(v136);
              }
            }
            else
            {
              v121 = *(unsigned __int8 *)(v48 + 5);
              if (v121 != 61)
                goto LABEL_308;
              if (BYTE2(v136) == 1)
                goto LABEL_158;
            }
            if ((*(_WORD *)(v117 + 12) & 0x800) == 0 || v120 == 3)
              goto LABEL_315;
            if ((*(_WORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v123 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                  * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C)
                                                                                  + 0xB0))(v48, a2);
            }
            else
            {
              v123 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x30);
              if (!v123)
                v123 = *(_QWORD *)(v48 + 16);
            }
            if (*((_DWORD *)v116 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v116) & 1) != 0)
              goto LABEL_158;
LABEL_317:
            if ((v123 & 0xFFFE000000000002) != 0)
              goto LABEL_158;
            v48 = v123;
            if (*(unsigned __int8 *)(v123 + 5) <= 0x16u)
              goto LABEL_158;
            continue;
          }
        }
      }
      else if (!v129)
      {
        goto LABEL_25;
      }
LABEL_16:
      ++v17;
      v18 -= 8;
      if (!v18)
        goto LABEL_24;
    }
  }
  v9 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v9 + 100) > a3)
  {
    v10 = *(JSC::JSGlobalObject **)(*(_QWORD *)(v9 + 88) + 8 * a3);
    ++*(_DWORD *)v10;
    v11 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v10, a3, (WebCore::DOMMimeType *)a4);
    if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    {
      OwnPropertySlotByIndex = 0;
    }
    else
    {
      *(_QWORD *)a4 = v11;
      *(_DWORD *)(a4 + 16) = 2;
      *(_QWORD *)(a4 + 32) = this;
      OwnPropertySlotByIndex = 1;
      *(_BYTE *)(a4 + 49) = 1;
    }
    WTF::RefCounted<WebCore::DOMMimeType>::deref(v10);
    return OwnPropertySlotByIndex;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

WTF::StringImpl *WebCore::JSDOMPlugin::getOwnPropertyNames(WTF::StringImpl *result, uint64_t a2, uint64_t *a3, int a4)
{
  WTF::StringImpl *v5;
  int v6;
  int v7;
  uint64_t *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl **v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _DWORD *v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl **v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  int v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  WTF::StringImpl *v72;
  uint64_t v73;
  WTF::StringImpl **v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v77[2];
  char v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;

  v5 = result;
  v6 = *(_DWORD *)(*((_QWORD *)result + 3) + 100);
  if (v6)
  {
    v7 = 0;
    v8 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v10 = v79;
      v80 = v79;
      v11 = *((_DWORD *)v79 + 4);
      if ((v11 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v79 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v12 = *a3;
      v13 = *(unsigned int *)(*a3 + 20);
      if (v13 <= 0x13)
      {
        if ((_DWORD)v13)
        {
          v14 = *(WTF::StringImpl ***)(v12 + 8);
          while (*v14 != v79)
          {
            ++v14;
            if (!--v13)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v11 & 0x20) != 0)
        {
          v35 = *(_DWORD *)v10 + 2;
        }
        else
        {
          if ((v11 & 0x10) != 0)
          {
            *(_DWORD *)v10 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v10 = v77[0];
          }
          v35 = *(_DWORD *)v10;
          *(_DWORD *)v10 += 2;
          if (!v35)
          {
            WTF::StringImpl::destroy(v10, v9);
LABEL_54:
            v36 = (uint64_t *)(v12 + 8);
            v77[0] = v10;
            v37 = *(unsigned int *)(v12 + 20);
            if ((_DWORD)v37 == *(_DWORD *)(v12 + 16))
            {
              v38 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v36, v37 + 1, (unint64_t)v77);
              v37 = *(unsigned int *)(v12 + 20);
              v39 = *(_QWORD *)(v12 + 8);
              v40 = *v38;
              *v38 = 0;
              *(_QWORD *)(v39 + 8 * v37) = v40;
            }
            else
            {
              v41 = *v36;
              v77[0] = 0;
              *(_QWORD *)(v41 + 8 * v37) = v10;
            }
            *(_DWORD *)(v12 + 20) = v37 + 1;
            v42 = v77[0];
            v77[0] = 0;
            if (v42)
            {
              if (*(_DWORD *)v42 == 2)
                WTF::StringImpl::destroy(v42, v9);
              else
                *(_DWORD *)v42 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v10 = v35;
        goto LABEL_54;
      }
      if (!*v8 || !*(_DWORD *)(*v8 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v80, (uint64_t)v77);
      if (v78)
      {
        v10 = v80;
        v12 = *a3;
        v11 = *((_DWORD *)v80 + 4);
        goto LABEL_19;
      }
LABEL_60:
      result = v79;
      v79 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v9);
        else
          *(_DWORD *)result -= 2;
      }
      if (++v7 == v6)
        goto LABEL_69;
    }
    v15 = *(uint64_t **)(v12 + 8);
    v16 = &v15[v13];
    while (1)
    {
      v17 = *v15;
      v18 = *v8;
      if (*v8
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v18 = *v8) != 0))
      {
        v19 = *(_DWORD *)(v18 - 8);
      }
      else
      {
        v19 = 0;
      }
      v20 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
      v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
      v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
      v23 = v19 & ((v22 >> 31) ^ v22);
      v24 = (uint64_t *)(v18 + 8 * v23);
      v25 = *v24;
      if (*v24)
      {
        v26 = 0;
        v27 = 1;
        while (v25 != v17)
        {
          if (v25 == -1)
            v26 = v24;
          v23 = (v23 + v27) & v19;
          v24 = (uint64_t *)(v18 + 8 * v23);
          v25 = *v24;
          ++v27;
          if (!*v24)
          {
            if (v26)
            {
              *v26 = 0;
              --*(_DWORD *)(*v8 - 16);
              v24 = v26;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v24 = v17;
      v28 = *v8;
      v29 = *v8 ? *(_DWORD *)(v28 - 12) + 1 : 1;
      *(_DWORD *)(v28 - 12) = v29;
      v30 = *v8;
      v31 = *v8 ? *(_DWORD *)(v30 - 12) : 0;
      v32 = (*(_DWORD *)(v30 - 16) + v31);
      v33 = *(unsigned int *)(v30 - 4);
      if (v33 > 0x400)
        break;
      if (3 * v33 <= 4 * v32)
      {
        if ((_DWORD)v33)
          goto LABEL_43;
        v34 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v15 == v16)
        goto LABEL_17;
    }
    if (v33 > 2 * v32)
      goto LABEL_47;
LABEL_43:
    v34 = (_DWORD)v33 << (6 * *(_DWORD *)(v30 - 12) >= (2 * v33));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v34, v24);
    goto LABEL_47;
  }
LABEL_69:
  if (a4)
    return (WTF::StringImpl *)JSC::JSObject::getOwnPropertyNames();
  v43 = *((_QWORD *)v5 + 3);
  v44 = *(unsigned int *)(v43 + 100);
  if (!(_DWORD)v44)
    return (WTF::StringImpl *)JSC::JSObject::getOwnPropertyNames();
  if (v44 >> 29)
  {
    __break(0xC471u);
    return result;
  }
  v45 = WTF::fastMalloc((WTF *)(8 * v44));
  v47 = (WTF *)v45;
  v48 = *(unsigned int *)(v43 + 100);
  if (!(_DWORD)v48)
    goto LABEL_125;
  v49 = *(_QWORD *)(v43 + 88);
  v50 = *(unsigned int *)(v43 + 100);
  v51 = (_QWORD *)v45;
  do
  {
    v52 = *(_DWORD **)(*(_QWORD *)v49 + 16);
    if (v52)
      *v52 += 2;
    *v51++ = v52;
    v49 += 8;
    --v50;
  }
  while (v50);
  v53 = a3 + 1;
  v54 = (uint64_t *)v45;
  v55 = (uint64_t *)(v45 + 8 * v48);
  do
  {
    v56 = *v54;
    if (*v54)
      *(_DWORD *)v56 += 2;
    v80 = (WTF::StringImpl *)v56;
    v57 = *(_DWORD *)(v56 + 16);
    if ((v57 & 0x20) != 0)
    {
      if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v56 + 36) & 4) != 0)
        goto LABEL_111;
LABEL_86:
      v58 = *a3;
      v59 = *(unsigned int *)(*a3 + 20);
      if (v59 > 0x13)
      {
        if (!*v53 || !*(_DWORD *)(*v53 - 12))
        {
          v62 = *(WTF::StringImpl ***)(v58 + 8);
          v63 = 8 * v59;
          do
          {
            v64 = *v62++;
            v79 = v64;
            WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v79, (uint64_t)v77);
            v63 -= 8;
          }
          while (v63);
        }
        WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v80, (uint64_t)v77);
        if (!v78)
          goto LABEL_110;
        v61 = v80;
        v58 = *a3;
        v57 = *((_DWORD *)v80 + 4);
        if ((v57 & 0x20) == 0)
          goto LABEL_92;
      }
      else
      {
        if ((_DWORD)v59)
        {
          v60 = *(_QWORD **)(v58 + 8);
          while (*v60 != v56)
          {
            ++v60;
            if (!--v59)
              goto LABEL_91;
          }
LABEL_110:
          if (!v56)
            goto LABEL_113;
          goto LABEL_111;
        }
LABEL_91:
        v61 = (WTF::StringImpl *)v56;
        if ((v57 & 0x20) == 0)
        {
LABEL_92:
          if ((v57 & 0x10) != 0)
          {
            *(_DWORD *)v61 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v61 = v77[0];
          }
          v65 = *(_DWORD *)v61;
          *(_DWORD *)v61 += 2;
          if (!v65)
          {
            WTF::StringImpl::destroy(v61, v46);
LABEL_104:
            v66 = (uint64_t *)(v58 + 8);
            v77[0] = v61;
            v67 = *(unsigned int *)(v58 + 20);
            if ((_DWORD)v67 == *(_DWORD *)(v58 + 16))
            {
              v68 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v66, v67 + 1, (unint64_t)v77);
              v67 = *(unsigned int *)(v58 + 20);
              v69 = *(_QWORD *)(v58 + 8);
              v70 = *v68;
              *v68 = 0;
              *(_QWORD *)(v69 + 8 * v67) = v70;
            }
            else
            {
              v71 = *v66;
              v77[0] = 0;
              *(_QWORD *)(v71 + 8 * v67) = v61;
            }
            *(_DWORD *)(v58 + 20) = v67 + 1;
            v72 = v77[0];
            v77[0] = 0;
            if (v72)
            {
              if (*(_DWORD *)v72 == 2)
              {
                WTF::StringImpl::destroy(v72, v46);
                if (!v56)
                  goto LABEL_113;
                goto LABEL_111;
              }
              *(_DWORD *)v72 -= 2;
            }
            goto LABEL_110;
          }
LABEL_103:
          *(_DWORD *)v61 = v65;
          goto LABEL_104;
        }
      }
      v65 = *(_DWORD *)v61 + 2;
      goto LABEL_103;
    }
    if ((a3[3] & 2) != 0)
      goto LABEL_86;
LABEL_111:
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v56, v46);
    else
      *(_DWORD *)v56 -= 2;
LABEL_113:
    ++v54;
  }
  while (v54 != v55);
  v73 = 8 * v48;
  v74 = (WTF::StringImpl **)v47;
  do
  {
    v75 = *v74;
    *v74 = 0;
    if (v75)
    {
      if (*(_DWORD *)v75 == 2)
        WTF::StringImpl::destroy(v75, v46);
      else
        *(_DWORD *)v75 -= 2;
    }
    ++v74;
    v73 -= 8;
  }
  while (v73);
LABEL_125:
  WTF::fastFree(v47, v46);
  return (WTF::StringImpl *)JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDOMPlugin::defineOwnProperty(uint64_t a1, WTF::StringImpl *a2, unint64_t this, uint64_t a4, int a5)
{
  JSC::VM *v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int OwnPropertySlotByIndex;
  int v21;
  int v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned int v33;
  int OwnStaticPropertySlot;
  BOOL v35;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  int v41;
  _BOOL4 v42;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  JSC::VM *v53;
  unint64_t v54;

  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v53 = v8;
  if (this)
  {
    v9 = *(_DWORD *)(this + 16);
    if ((v9 & 0x20) != 0)
      return JSC::JSObject::defineOwnProperty();
    v10 = *(_BYTE **)(this + 8);
    v11 = *(unsigned int *)(this + 4);
    if ((v9 & 4) != 0)
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *v10 - 48;
      if (v12 > 9 || v11 >= 2 && *v10 == 48)
        goto LABEL_8;
      v44 = v10 + 1;
      v45 = v11 - 1;
      while (v45)
      {
        if (v12 <= 0x19999999)
        {
          v46 = *v44 - 48;
          if (v46 <= 9)
          {
            v26 = __CFADD__(v46, 10 * v12);
            v12 = v46 + 10 * v12;
            ++v44;
            --v45;
            if (!v26)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *(unsigned __int16 *)v10 - 48;
      if (v12 > 9 || v11 >= 2 && *(_WORD *)v10 == 48)
        goto LABEL_8;
      v23 = (unsigned __int16 *)(v10 + 2);
      v24 = v11 - 1;
      while (v24)
      {
        if (v12 <= 0x19999999)
        {
          v25 = *v23 - 48;
          if (v25 <= 9)
          {
            v26 = __CFADD__(v25, 10 * v12);
            v12 = v25 + 10 * v12;
            ++v23;
            --v24;
            if (!v26)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v12 != -1)
    {
      if (a5)
        JSC::throwTypeError();
      return 0;
    }
  }
LABEL_8:
  v52 = *((_QWORD *)a2 + 7);
  ++*((_DWORD *)v8 + 1);
  if (!(this >> 4)
    || ((this >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) != 0
    || (v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v8)) == 0
    || (v54 = this, v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v54), (_DWORD)v14 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
      OwnPropertySlotByIndex = OwnStaticPropertySlot;
      if (!this || (OwnStaticPropertySlot & 1) != 0)
        goto LABEL_24;
    }
    else if (!this)
    {
      goto LABEL_23;
    }
    v15 = *(_DWORD *)(this + 16);
    if ((v15 & 0x20) == 0)
    {
      v16 = *(_BYTE **)(this + 8);
      v17 = *(unsigned int *)(this + 4);
      if ((v15 & 4) != 0)
      {
        if ((_DWORD)v17)
        {
          v47 = *v16 - 48;
          if (v47 > 9 || v17 >= 2 && *v16 == 48)
          {
LABEL_99:
            v48 = 0;
          }
          else
          {
            v49 = v16 + 1;
            v50 = v17 - 1;
            while (v50)
            {
              if (v47 > 0x19999999)
                goto LABEL_99;
              v51 = *v49 - 48;
              if (v51 > 9)
                goto LABEL_99;
              v48 = 0;
              v26 = __CFADD__(v51, 10 * v47);
              v47 = v51 + 10 * v47;
              ++v49;
              --v50;
              if (v26)
                goto LABEL_100;
            }
            v48 = 0x100000000;
            if (v47 == -1)
              v48 = 0;
          }
        }
        else
        {
          v48 = 0;
        }
LABEL_100:
        if ((v48 & 0x100000000) == 0)
          goto LABEL_23;
      }
      else
      {
        if ((_DWORD)v17)
        {
          v18 = *(unsigned __int16 *)v16 - 48;
          if (v18 > 9 || v17 >= 2 && *(_WORD *)v16 == 48)
          {
LABEL_20:
            v19 = 0;
          }
          else
          {
            v31 = (unsigned __int16 *)(v16 + 2);
            v32 = v17 - 1;
            while (v32)
            {
              if (v18 <= 0x19999999)
              {
                v33 = *v31 - 48;
                if (v33 <= 9)
                {
                  v26 = __CFADD__(v33, 10 * v18);
                  v18 = v33 + 10 * v18;
                  ++v31;
                  --v32;
                  if (!v26)
                    continue;
                }
              }
              goto LABEL_20;
            }
            v35 = v18 == -1;
            v19 = 0x100000000;
            if (v35)
              v19 = 0;
          }
        }
        else
        {
          v19 = 0;
        }
        if ((v19 & 0x100000000) == 0)
          goto LABEL_23;
      }
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_24;
    }
LABEL_23:
    OwnPropertySlotByIndex = 0;
    goto LABEL_24;
  }
  if ((int)v14 > 63)
  {
    v27 = *(_QWORD *)(a1 + 8) - 8;
    v28 = 0x3F00000000 - (v14 << 32);
  }
  else
  {
    v27 = a1 + 16;
    v28 = v14 << 32;
  }
  v29 = *(_QWORD *)(v27 + (v28 >> 29));
  if ((v29 & 0xFFFE000000000002) != 0)
    goto LABEL_40;
  v30 = *(unsigned __int8 *)(v29 + 5);
  if (v30 == 6)
  {
    OwnPropertySlotByIndex = 1;
    goto LABEL_24;
  }
  if (v30 != 5)
  {
LABEL_40:
    OwnPropertySlotByIndex = 1;
    goto LABEL_24;
  }
  JSC::JSObject::fillGetterPropertySlot();
  OwnPropertySlotByIndex = 1;
LABEL_24:
  v21 = *(_DWORD *)(v52 + 4);
  if (!v21)
  {
    __break(0xC471u);
    JUMPOUT(0x194992788);
  }
  *(_DWORD *)(v52 + 4) = v21 - 1;
  if (*((_DWORD *)v53 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v53);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v22 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_77;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v22 = 1;
    goto LABEL_77;
  }
  v37 = *(_QWORD *)(a1 + 24);
  if (this)
  {
    *(_DWORD *)this += 2;
    v38 = (WTF::StringImpl *)this;
  }
  else
  {
    v38 = 0;
  }
  if (*(_DWORD *)(v37 + 100))
  {
    v39 = 0;
    do
    {
      v40 = *(WTF::StringImpl **)(*(_QWORD *)(*(_QWORD *)(v37 + 88) + 8 * v39) + 16);
      if (v40)
      {
        v41 = *(_DWORD *)v40;
        *(_DWORD *)v40 += 2;
        if (v41)
          *(_DWORD *)v40 = v41;
        else
          WTF::StringImpl::destroy(v40, a2);
      }
      v35 = v38 == v40;
      v42 = v38 == v40;
      if (v35)
        break;
      ++v39;
    }
    while (v39 < *(unsigned int *)(v37 + 100));
  }
  else
  {
    v42 = 0;
  }
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, a2);
    else
      *(_DWORD *)v38 -= 2;
  }
  if ((v42 & a5) == 1)
  {
    JSC::throwTypeError();
    v22 = 0;
  }
  else
  {
    v22 = !v42;
  }
LABEL_77:
  if (v22)
    return JSC::JSObject::defineOwnProperty();
  return 0;
}

uint64_t WebCore::JSDOMPlugin::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMPlugin::createPrototype(WebCore::JSDOMPlugin *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDOMPluginPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDOMPluginPrototype::create(WebCore::JSDOMPluginPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMPluginPrototype::finishCreation((WebCore::JSDOMPluginPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPlugin>,(WebCore::DOMConstructorID)756>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6048);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPlugin>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPlugin>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6048) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMPlugin::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t this, WebCore::DOMMimeType *a4, char a5)
{
  WebCore::DOMMimeType *v5;
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WebCore::DOMMimeType **v17;
  uint64_t v18;
  WebCore::DOMMimeType *v19;
  WTF::StringImpl *v20;
  int v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  WebCore::JSDOMGlobalObject *v26;
  uint64_t v27;
  JSC::VM *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  _WORD *v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t *v39;
  int v40;
  JSC::JSGlobalObject *v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  JSC::JSGlobalObject *v51;
  unint64_t v52;
  uint64_t v53;
  WebCore::DOMMimeType *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  unsigned int v62;
  unsigned __int16 *v63;
  uint64_t j;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  _BYTE *v79;
  JSC::VM *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int v86;
  uint64_t v87;
  int v88;
  _WORD *v89;
  uint64_t v90;
  unsigned int v91;
  unsigned __int16 *v92;
  uint64_t v93;
  unsigned int v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  _WORD *v104;
  uint64_t v105;
  unsigned int v106;
  unsigned __int16 *v107;
  uint64_t v108;
  unsigned int v109;
  unsigned __int8 *v110;
  uint64_t v111;
  unsigned int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  _BYTE *v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  unsigned __int16 *v126;
  uint64_t v127;
  unsigned int v128;
  uint64_t OwnStaticPropertySlot;
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  JSC::VM *v135;
  uint64_t v136;
  char v137;
  int v138;
  int v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  unsigned __int8 *v144;
  uint64_t i;
  unsigned int v146;
  unsigned __int8 *v147;
  uint64_t v148;
  unsigned int v149;
  JSC::VM *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  int v154;
  uint64_t v155;
  char v156;
  int v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  unsigned __int8 *v161;
  int v162;
  int v163;
  BOOL v164;
  const WTF::StringImpl *v165;
  const unsigned __int8 *v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  JSC::VM *v174;
  uint64_t v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unint64_t v180;
  uint64_t v181;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v183;
  char v184;
  unsigned __int8 *v185;
  uint64_t v186;
  unsigned int v187;
  unint64_t v188;
  JSC::VM *v189;
  WebCore::DOMMimeType *v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  char v198;
  JSC::VM *v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  uint64_t v205;

  v5 = a4;
  v205 = *MEMORY[0x1E0C80C00];
  v9 = a2[7];
  if (this)
  {
    v10 = *(_DWORD *)(this + 16);
    if ((v10 & 0x20) != 0)
      goto LABEL_225;
    v11 = *(_BYTE **)(this + 8);
    v12 = *(unsigned int *)(this + 4);
    if ((v10 & 4) != 0)
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *v11 - 48;
      if (v13 > 9 || v12 >= 2 && *v11 == 48)
        goto LABEL_8;
      v47 = v11 + 1;
      v48 = v12 - 1;
      while (v48)
      {
        if (v13 <= 0x19999999)
        {
          v49 = *v47 - 48;
          if (v49 <= 9)
          {
            v25 = __CFADD__(v49, 10 * v13);
            v13 = v49 + 10 * v13;
            ++v47;
            --v48;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v12
        || (v13 = *(unsigned __int16 *)v11 - 48, v13 > 9)
        || v12 >= 2 && *(_WORD *)v11 == 48)
      {
LABEL_8:
        if ((a5 & 1) != 0)
          goto LABEL_225;
        v14 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)this += 2;
        v15 = (WTF::StringImpl *)this;
        goto LABEL_10;
      }
      v22 = (unsigned __int16 *)(v11 + 2);
      v23 = v12 - 1;
      while (v23)
      {
        if (v13 <= 0x19999999)
        {
          v24 = *v22 - 48;
          if (v24 <= 9)
          {
            v25 = __CFADD__(v24, 10 * v13);
            v13 = v24 + 10 * v13;
            ++v22;
            --v23;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v13 != -1)
    {
      v50 = *(_QWORD *)(a1 + 24);
      if (*(_DWORD *)(v50 + 100) <= v13)
      {
        if (!(this >> 4)
          || (v55 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((this >> 4) & ~*(_DWORD *)(v55 + 0x20)) != 0)
          || (v56 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v203 = this, v57 = JSC::PropertyTable::get(v56, (uint64_t *)&v203), v58 = v57, (_DWORD)v57 == -1))
        {
          if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
          {
            v59 = *(_DWORD *)(this + 16);
            if ((v59 & 0x20) != 0)
              return 0;
            v60 = *(_BYTE **)(this + 8);
            v61 = *(unsigned int *)(this + 4);
            if ((v59 & 4) != 0)
            {
              if (!(_DWORD)v61)
                return 0;
              v62 = *v60 - 48;
              if (v62 > 9 || v61 >= 2 && *v60 == 48)
                return 0;
              v144 = v60 + 1;
              for (i = v61 - 1; i; --i)
              {
                if (v62 > 0x19999999)
                  return 0;
                v146 = *v144 - 48;
                if (v146 > 9)
                  return 0;
                v53 = 0;
                v25 = __CFADD__(v146, 10 * v62);
                v62 = v146 + 10 * v62;
                ++v144;
                if (v25)
                  return v53;
              }
            }
            else
            {
              if (!(_DWORD)v61)
                return 0;
              v62 = *(unsigned __int16 *)v60 - 48;
              if (v62 > 9 || v61 >= 2 && *(_WORD *)v60 == 48)
                return 0;
              v63 = (unsigned __int16 *)(v60 + 2);
              for (j = v61 - 1; j; --j)
              {
                if (v62 > 0x19999999)
                  return 0;
                v65 = *v63 - 48;
                if (v65 > 9)
                  return 0;
                v53 = 0;
                v25 = __CFADD__(v65, 10 * v62);
                v62 = v65 + 10 * v62;
                ++v63;
                if (v25)
                  return v53;
              }
            }
            if (v62 == -1)
              return 0;
            return JSC::JSObject::getOwnPropertySlotByIndex();
          }
          return 1;
        }
        v66 = HIDWORD(v57);
        if ((int)v57 > 63)
        {
          v67 = *(_QWORD *)(a1 + 8) - 8;
          v68 = 0x3F00000000 - (v57 << 32);
        }
        else
        {
          v67 = a1 + 16;
          v68 = v57 << 32;
        }
        v69 = *(_QWORD *)(v67 + (v68 >> 29));
        if ((v69 & 0xFFFE000000000002) != 0)
          goto LABEL_249;
        v70 = *(unsigned __int8 *)(v69 + 5);
        if (v70 != 6)
        {
          if (v70 != 5)
          {
LABEL_249:
            *(_QWORD *)v5 = v69;
            *((_QWORD *)v5 + 4) = a1;
            *((_DWORD *)v5 + 4) = v66;
            *((_DWORD *)v5 + 5) = v58;
            v53 = 1;
            *((_WORD *)v5 + 24) = 257;
            return v53;
          }
          goto LABEL_273;
        }
        v71 = *(_DWORD *)(v55 + 16) & 3;
        v73 = *(_QWORD *)(v69 + 8);
        v72 = *(_QWORD *)(v69 + 16);
        if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v69 & 0xFFFFFFFE) + 0x4C))
        {
LABEL_270:
          v131 = *(_QWORD *)(v69 + 24);
          v130 = *(_QWORD *)(v69 + 32);
          *(_QWORD *)v5 = v73;
          *((_QWORD *)v5 + 1) = v72;
          *((_DWORD *)v5 + 4) = v66;
          *((_QWORD *)v5 + 4) = a1;
          *((_BYTE *)v5 + 49) = 3;
          v53 = 1;
          if (v71 != 2)
            *((_BYTE *)v5 + 48) = 1;
          *((_BYTE *)v5 + 51) = 1;
          *((_QWORD *)v5 + 9) = v131;
          *((_QWORD *)v5 + 10) = v130;
          return v53;
        }
        *(_QWORD *)v5 = v73;
        *((_QWORD *)v5 + 1) = v72;
        *((_DWORD *)v5 + 4) = HIDWORD(v57);
        *((_QWORD *)v5 + 4) = a1;
        v53 = 1;
        *((_BYTE *)v5 + 49) = 3;
        if (v71 == 2)
          return v53;
LABEL_276:
        *((_BYTE *)v5 + 48) = 1;
        return v53;
      }
      v51 = *(JSC::JSGlobalObject **)(*(_QWORD *)(v50 + 88) + 8 * v13);
      ++*(_DWORD *)v51;
      v52 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v51, (WebCore::JSDOMGlobalObject *)this, a4);
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v53 = 0;
      }
      else
      {
        *(_QWORD *)v5 = v52;
        *((_DWORD *)v5 + 4) = 2;
        *((_QWORD *)v5 + 4) = a1;
        v53 = 1;
        *((_BYTE *)v5 + 49) = 1;
      }
      v54 = v51;
LABEL_261:
      WTF::RefCounted<WebCore::DOMMimeType>::deref(v54);
      return v53;
    }
    goto LABEL_8;
  }
  if ((a5 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
      return 0;
    return JSC::JSObject::getOwnStaticPropertySlot();
  }
  v15 = 0;
  v14 = *(_QWORD *)(a1 + 24);
LABEL_10:
  v16 = *(unsigned int *)(v14 + 100);
  if (!(_DWORD)v16)
  {
LABEL_21:
    v19 = 0;
    if (v15)
      goto LABEL_31;
    goto LABEL_33;
  }
  v17 = *(WebCore::DOMMimeType ***)(v14 + 88);
  v18 = 8 * v16;
  while (1)
  {
    v19 = *v17;
    v20 = (WTF::StringImpl *)*((_QWORD *)*v17 + 2);
    if (v20)
      break;
    if (!v15)
      goto LABEL_30;
LABEL_15:
    ++v17;
    v18 -= 8;
    if (!v18)
      goto LABEL_21;
  }
  v21 = *(_DWORD *)v20;
  *(_DWORD *)v20 += 2;
  if (v21)
  {
    *(_DWORD *)v20 = v21;
    if (v20 == v15)
      goto LABEL_30;
    goto LABEL_15;
  }
  WTF::StringImpl::destroy(v20, (WTF::StringImpl *)a2);
  if (v20 != v15)
    goto LABEL_15;
  v19 = *v17;
LABEL_30:
  ++*(_DWORD *)v19;
  if (!v15)
  {
LABEL_33:
    if (!v19)
      goto LABEL_225;
    goto LABEL_34;
  }
LABEL_31:
  if (*(_DWORD *)v15 != 2)
  {
    *(_DWORD *)v15 -= 2;
    goto LABEL_33;
  }
  WTF::StringImpl::destroy(v15, (WTF::StringImpl *)a2);
  if (!v19)
    goto LABEL_225;
LABEL_34:
  ++*(_DWORD *)v19;
  WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
  v28 = a2[7];
  v193 = 0xFFFFFFFF00000000;
  v195 = 0;
  v196 = 0;
  v194 = a1;
  v197 = 196608;
  v198 = 0;
  v201 = 0;
  v202 = 0;
  v199 = v28;
  ++*((_DWORD *)v28 + 1);
  v200 = 1;
  v29 = this >> 4;
  if ((this >> 4))
  {
    v30 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v29 & ~*(_DWORD *)(v30 + 0x20)) == 0)
    {
      v31 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v28);
      if (v31)
      {
        v203 = this;
        v32 = JSC::PropertyTable::get(v31, (uint64_t *)&v203);
        if ((_DWORD)v32 != -1)
        {
          v39 = (uint64_t *)(a1 + 8 * (int)v32 + 16);
          if ((int)v32 >= 64)
            v39 = (uint64_t *)(*(_QWORD *)(a1 + 8) + ((uint64_t)(0x3F00000000 - (v32 << 32)) >> 29) - 8);
          v27 = *v39;
          if ((*v39 & 0xFFFE000000000002) != 0)
            goto LABEL_58;
          v40 = *(unsigned __int8 *)(v27 + 5);
          if (v40 == 6)
          {
            v43 = *(_DWORD *)(v30 + 16) & 3;
            v44 = *(_QWORD *)(v27 + 16);
            if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
            {
              v46 = *(_QWORD *)(v27 + 24);
              v45 = *(_QWORD *)(v27 + 32);
              v191 = *(_QWORD *)(v27 + 8);
              v192 = v44;
              LODWORD(v193) = HIDWORD(v32);
              v195 = a1;
              BYTE1(v197) = 3;
              v41 = 0;
              v42 = 1;
              if (v43 != 2)
                LOBYTE(v197) = 1;
              HIBYTE(v197) = 1;
              v201 = v46;
              v202 = v45;
            }
            else
            {
              v191 = *(_QWORD *)(v27 + 8);
              v192 = v44;
              LODWORD(v193) = HIDWORD(v32);
              v195 = a1;
              v42 = 1;
              BYTE1(v197) = 3;
              v41 = 0;
              if (v43 != 2)
                LOBYTE(v197) = 1;
            }
            goto LABEL_219;
          }
          if (v40 != 5)
          {
LABEL_58:
            v41 = 0;
            v191 = v27;
            v195 = a1;
            v193 = __PAIR64__(v32, HIDWORD(v32));
            v42 = 1;
            LOWORD(v197) = 257;
            goto LABEL_219;
          }
          JSC::JSObject::fillGetterPropertySlot();
          goto LABEL_68;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_68;
  if (!this)
    goto LABEL_137;
  v33 = *(_DWORD *)(this + 16);
  if ((v33 & 0x20) != 0)
    goto LABEL_137;
  v34 = *(_WORD **)(this + 8);
  v35 = *(unsigned int *)(this + 4);
  if ((v33 & 4) == 0)
  {
    if ((_DWORD)v35)
    {
      v26 = (WebCore::JSDOMGlobalObject *)((unsigned __int16)*v34 - 48);
      if (v26 <= 9 && (v35 < 2 || *v34 != 48))
      {
        v36 = v34 + 1;
        v37 = v35 - 1;
        while (v37)
        {
          if (v26 <= 0x19999999)
          {
            v38 = *v36 - 48;
            if (v38 <= 9)
            {
              v25 = __CFADD__(v38, 10 * (_DWORD)v26);
              v26 = (WebCore::JSDOMGlobalObject *)(v38 + 10 * (_DWORD)v26);
              ++v36;
              --v37;
              if (!v25)
                continue;
            }
          }
          goto LABEL_137;
        }
        goto LABEL_136;
      }
    }
    goto LABEL_137;
  }
  if ((_DWORD)v35)
  {
    v26 = (WebCore::JSDOMGlobalObject *)(*(unsigned __int8 *)v34 - 48);
    if (v26 <= 9 && (v35 < 2 || *(_BYTE *)v34 != 48))
    {
      v75 = (unsigned __int8 *)v34 + 1;
      v76 = v35 - 1;
      while (v76)
      {
        if (v26 <= 0x19999999)
        {
          v77 = *v75 - 48;
          if (v77 <= 9)
          {
            v25 = __CFADD__(v77, 10 * (_DWORD)v26);
            v26 = (WebCore::JSDOMGlobalObject *)(v77 + 10 * (_DWORD)v26);
            ++v75;
            --v76;
            if (!v25)
              continue;
          }
        }
        goto LABEL_137;
      }
LABEL_136:
      if ((_DWORD)v26 != -1 && (JSC::JSObject::getOwnPropertySlotByIndex() & 1) != 0)
      {
LABEL_68:
        v41 = 0;
        v42 = 1;
        goto LABEL_219;
      }
    }
  }
LABEL_137:
  v189 = v9;
  v190 = v5;
  v78 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x30);
  if (!v78)
    v78 = *(_QWORD *)(a1 + 16);
  if ((v78 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v78 + 5) < 0x17u)
    goto LABEL_217;
  v79 = (_BYTE *)(v78 + 6);
  if ((*(_BYTE *)(v78 + 6) & 8) == 0)
  {
    v80 = a2[7];
    v81 = v78;
    while (1)
    {
      v82 = *(_DWORD *)v81 & 0xFFFFFFFE;
      v83 = 16 * v82;
      if ((_DWORD)v29)
      {
        if ((v29 & ~*(_DWORD *)(16 * v82 + 0x20)) == 0)
        {
          v84 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v83, v80);
          if (v84)
          {
            v203 = this;
            v85 = JSC::PropertyTable::get(v84, (uint64_t *)&v203);
            v86 = v85;
            if ((_DWORD)v85 != -1)
              break;
          }
        }
      }
      if ((*v79 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_183;
      v87 = *(_QWORD *)(v83 + 48);
      if (!v87)
        v87 = *(_QWORD *)(v81 + 16);
      if ((v87 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v87 + 5) < 0x17u)
      {
        if (!this)
          goto LABEL_217;
        v88 = *(_DWORD *)(this + 16);
        if ((v88 & 0x20) != 0)
          goto LABEL_217;
        v89 = *(_WORD **)(this + 8);
        v90 = *(unsigned int *)(this + 4);
        if ((v88 & 4) == 0)
        {
          if ((_DWORD)v90)
          {
            v91 = (unsigned __int16)*v89 - 48;
            if (v91 <= 9 && (v90 < 2 || *v89 != 48))
            {
              v92 = v89 + 1;
              v93 = v90 - 1;
              while (v93)
              {
                if (v91 <= 0x19999999)
                {
                  v94 = *v92 - 48;
                  if (v94 <= 9)
                  {
                    v25 = __CFADD__(v94, 10 * v91);
                    v91 = v94 + 10 * v91;
                    ++v92;
                    --v93;
                    if (!v25)
                      continue;
                  }
                }
                goto LABEL_217;
              }
              goto LABEL_216;
            }
          }
          goto LABEL_217;
        }
        if (!(_DWORD)v90)
          goto LABEL_217;
        v91 = *(unsigned __int8 *)v89 - 48;
        if (v91 > 9 || v90 >= 2 && *(_BYTE *)v89 == 48)
          goto LABEL_217;
        v110 = (unsigned __int8 *)v89 + 1;
        v111 = v90 - 1;
        while (v111)
        {
          if (v91 <= 0x19999999)
          {
            v112 = *v110 - 48;
            if (v112 <= 9)
            {
              v25 = __CFADD__(v112, 10 * v91);
              v91 = v112 + 10 * v91;
              ++v110;
              --v111;
              if (!v25)
                continue;
            }
          }
          goto LABEL_217;
        }
LABEL_216:
        if (v91 == -1)
        {
LABEL_217:
          v42 = 0;
          v41 = v19;
          v19 = 0;
          goto LABEL_218;
        }
        v134 = v91;
        v135 = a2[7];
        while (2)
        {
          v136 = 16 * (*(_DWORD *)v78 & 0xFFFFFFFE);
          v137 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, uint64_t *))(16
                                                                                             * *(unsigned int *)(v136 + 0x4C)
                                                                                             + 0x70))(v78, a2, v134, &v191);
          if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
            goto LABEL_217;
          if ((v137 & 1) != 0)
            goto LABEL_183;
          v138 = BYTE2(v197);
          if (BYTE2(v197) == 3)
          {
            if (v198)
              goto LABEL_217;
            v139 = *(unsigned __int8 *)(v78 + 5);
            if (v139 != 61)
              goto LABEL_296;
            goto LABEL_303;
          }
          v139 = *(unsigned __int8 *)(v78 + 5);
          if (v139 == 61)
          {
            if (BYTE2(v197) == 1)
              goto LABEL_217;
          }
          else
          {
LABEL_296:
            if ((v139 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v78 + 40) & 7u) > 2)
              {
                LOBYTE(v203) = 0;
                v204 = 0;
                v142 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v78, (WTF *)&v203);
                if (v143)
                  v140 = v142;
                else
                  v140 = 0;
              }
              else
              {
                v140 = *(_QWORD *)(v78 + 24);
              }
              if (v140 <= v134)
                goto LABEL_217;
              v138 = BYTE2(v197);
            }
          }
          if ((*(_WORD *)(v136 + 12) & 0x800) != 0 && v138 != 3)
          {
            if ((*(_WORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v141 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)v78 & 0xFFFFFFFE)
                                                                                      + 0x4C)
                                                                    + 0xB0))(v78, a2);
            }
            else
            {
              v141 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
              if (!v141)
                v141 = *(_QWORD *)(v78 + 16);
            }
            if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
              goto LABEL_217;
          }
          else
          {
LABEL_303:
            v141 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
            if (!v141)
              v141 = *(_QWORD *)(v78 + 16);
          }
          if ((v141 & 0xFFFE000000000002) != 0)
            goto LABEL_217;
          v78 = v141;
          if (*(unsigned __int8 *)(v141 + 5) <= 0x16u)
            goto LABEL_217;
          continue;
        }
      }
      v79 = (_BYTE *)(v87 + 6);
      v81 = v87;
      if ((*(_BYTE *)(v87 + 6) & 8) != 0)
        goto LABEL_185;
    }
    v95 = HIDWORD(v85);
    if ((int)v85 > 63)
    {
      v96 = *(_QWORD *)(v81 + 8) - 8;
      v97 = 0x3F00000000 - (v85 << 32);
    }
    else
    {
      v96 = v81 + 16;
      v97 = v85 << 32;
    }
    v27 = *(_QWORD *)(v96 + (v97 >> 29));
    if ((v27 & 0xFFFE000000000002) == 0)
    {
      v98 = *(unsigned __int8 *)(v27 + 5);
      if (v98 != 6)
      {
        if (v98 == 5)
          goto LABEL_182;
        goto LABEL_175;
      }
      v99 = *(_DWORD *)(v83 + 16) & 3;
      v100 = *(_QWORD *)(v27 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
      {
        v102 = *(_QWORD *)(v27 + 24);
        v101 = *(_QWORD *)(v27 + 32);
        v191 = *(_QWORD *)(v27 + 8);
        v192 = v100;
        LODWORD(v193) = HIDWORD(v85);
        v195 = v81;
        BYTE1(v197) = 3;
        v9 = v189;
        v41 = 0;
        v42 = 1;
        if (v99 != 2)
          LOBYTE(v197) = 1;
        HIBYTE(v197) = 1;
        v201 = v102;
        v202 = v101;
        v5 = v190;
        goto LABEL_219;
      }
      v191 = *(_QWORD *)(v27 + 8);
      v192 = v100;
      LODWORD(v193) = HIDWORD(v85);
      v195 = v81;
LABEL_200:
      v42 = 1;
      BYTE1(v197) = 3;
      v41 = 0;
      if (v99 != 2)
        LOBYTE(v197) = 1;
      goto LABEL_218;
    }
LABEL_175:
    v41 = 0;
    v191 = v27;
    v195 = v81;
LABEL_176:
    v193 = __PAIR64__(v86, v95);
    v42 = 1;
    LOWORD(v197) = 257;
    goto LABEL_218;
  }
  v87 = v78;
LABEL_185:
  if (!this)
    goto LABEL_346;
  v103 = *(_DWORD *)(this + 16);
  if ((v103 & 0x20) != 0)
    goto LABEL_346;
  v104 = *(_WORD **)(this + 8);
  v105 = *(unsigned int *)(this + 4);
  if ((v103 & 4) == 0)
  {
    if ((_DWORD)v105)
    {
      v106 = (unsigned __int16)*v104 - 48;
      if (v106 <= 9 && (v105 < 2 || *v104 != 48))
      {
        v107 = v104 + 1;
        v108 = v105 - 1;
        while (v108)
        {
          if (v106 <= 0x19999999)
          {
            v109 = *v107 - 48;
            if (v109 <= 9)
            {
              v25 = __CFADD__(v109, 10 * v106);
              v106 = v109 + 10 * v106;
              ++v107;
              --v108;
              if (!v25)
                continue;
            }
          }
          goto LABEL_346;
        }
        goto LABEL_345;
      }
    }
    goto LABEL_346;
  }
  if ((_DWORD)v105)
  {
    v106 = *(unsigned __int8 *)v104 - 48;
    if (v106 <= 9 && (v105 < 2 || *(_BYTE *)v104 != 48))
    {
      v147 = (unsigned __int8 *)v104 + 1;
      v148 = v105 - 1;
      while (v148)
      {
        if (v106 <= 0x19999999)
        {
          v149 = *v147 - 48;
          if (v149 <= 9)
          {
            v25 = __CFADD__(v149, 10 * v106);
            v106 = v149 + 10 * v106;
            ++v147;
            --v148;
            if (!v25)
              continue;
          }
        }
        goto LABEL_346;
      }
LABEL_345:
      if (v106 != -1)
      {
        v173 = v106;
        v174 = a2[7];
        while (1)
        {
          v175 = 16 * (*(_DWORD *)v78 & 0xFFFFFFFE);
          v176 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, uint64_t *))(16
                                                                                             * *(unsigned int *)(v175 + 0x4C)
                                                                                             + 0x70))(v78, a2, v173, &v191);
          v177 = v176;
          if (*((_DWORD *)v174 + 20))
          {
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v174);
            if (((hasExceptionsAfterHandlingTraps | v177) & 1) != 0)
            {
              if (!hasExceptionsAfterHandlingTraps)
                goto LABEL_183;
              goto LABEL_217;
            }
          }
          else if ((v176 & 1) != 0)
          {
            goto LABEL_183;
          }
          v178 = BYTE2(v197);
          if (BYTE2(v197) == 3)
          {
            if (v198)
              goto LABEL_217;
            v179 = *(unsigned __int8 *)(v78 + 5);
            if (v179 == 61)
            {
LABEL_441:
              v181 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
              if (!v181)
                v181 = *(_QWORD *)(v78 + 16);
              goto LABEL_443;
            }
          }
          else
          {
            v179 = *(unsigned __int8 *)(v78 + 5);
            if (v179 == 61)
            {
              if (BYTE2(v197) == 1)
                goto LABEL_217;
              goto LABEL_439;
            }
          }
          if ((v179 - 39) <= 0xA)
          {
            if ((*(_BYTE *)(v78 + 40) & 7u) > 2)
            {
              LOBYTE(v203) = 0;
              v204 = 0;
              v183 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v78, (WTF *)&v203);
              if (v184)
                v180 = v183;
              else
                v180 = 0;
            }
            else
            {
              v180 = *(_QWORD *)(v78 + 24);
            }
            if (v180 <= v173)
              goto LABEL_217;
            v178 = BYTE2(v197);
          }
LABEL_439:
          if ((*(_WORD *)(v175 + 12) & 0x800) == 0 || v178 == 3)
            goto LABEL_441;
          if ((*(_WORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            v181 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)v78 & 0xFFFFFFFE)
                                                                                    + 0x4C)
                                                                  + 0xB0))(v78, a2);
          }
          else
          {
            v181 = *(_QWORD *)(16 * (*(_DWORD *)v78 & 0xFFFFFFFE) + 0x30);
            if (!v181)
              v181 = *(_QWORD *)(v78 + 16);
          }
          if (*((_DWORD *)v174 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v174) & 1) != 0)
            goto LABEL_217;
LABEL_443:
          if ((v181 & 0xFFFE000000000002) == 0)
          {
            v78 = v181;
            if (*(unsigned __int8 *)(v181 + 5) > 0x16u)
              continue;
          }
          goto LABEL_217;
        }
      }
    }
  }
LABEL_346:
  v150 = a2[7];
  while (1)
  {
    v151 = 16 * (*(_DWORD *)v87 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v87 + 6) & 8) != 0)
    {
      v156 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, uint64_t *))(16
                                                                                         * *(unsigned int *)(16 * (*(_DWORD *)v87 & 0xFFFFFFFE) + 0x4C)
                                                                                         + 0x68))(v87, a2, this, &v191);
      if (*((_DWORD *)v150 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v150) & 1) != 0)
        goto LABEL_217;
      if ((v156 & 1) != 0)
        goto LABEL_183;
      if (BYTE2(v197) == 3)
      {
        if (v198)
          goto LABEL_217;
        v157 = *(unsigned __int8 *)(v87 + 5);
        if (v157 == 61)
          goto LABEL_353;
      }
      else
      {
        v157 = *(unsigned __int8 *)(v87 + 5);
        if (v157 == 61)
        {
          if (BYTE2(v197) == 1)
            goto LABEL_217;
          goto LABEL_353;
        }
      }
      if (!this)
        goto LABEL_353;
      if ((v157 - 50) < 0xFFFFFFF5)
        goto LABEL_353;
      v159 = *(_DWORD *)(this + 16);
      if ((v159 & 0x20) != 0)
        goto LABEL_353;
      v160 = *(unsigned int *)(this + 4);
      if (!(_DWORD)v160)
        goto LABEL_353;
      v161 = *(unsigned __int8 **)(this + 8);
      if ((v159 & 4) != 0)
      {
        v162 = *v161;
        if ((_DWORD)v160 == 1)
        {
LABEL_389:
          if ((v162 - 48) < 0xA)
            goto LABEL_217;
          goto LABEL_353;
        }
        if (v162 == 45)
        {
          v163 = v161[1];
          goto LABEL_393;
        }
      }
      else
      {
        v162 = *(unsigned __int16 *)v161;
        if ((_DWORD)v160 == 1)
          goto LABEL_389;
        if (v162 == 45)
        {
          v163 = *((unsigned __int16 *)v161 + 1);
LABEL_393:
          if ((v163 - 48) < 0xA)
          {
            if ((_DWORD)v160 == 2)
              goto LABEL_217;
LABEL_405:
            v188 = v188 & 0xFFFFFF0000000000 | v160 | ((unint64_t)((v159 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v165 = (const WTF::StringImpl *)WTF::numberToString();
            if ((WTF::equal((WTF *)this, v165, v166) & 1) != 0)
              goto LABEL_217;
            goto LABEL_353;
          }
          if ((_DWORD)v160 != 9)
            goto LABEL_353;
          v164 = v163 == 73;
LABEL_403:
          if (!v164)
            goto LABEL_353;
          goto LABEL_405;
        }
      }
      if ((v162 - 48) < 0xA || (_DWORD)v160 == 8 && v162 == 73)
        goto LABEL_405;
      if ((_DWORD)v160 != 3)
        goto LABEL_353;
      v164 = v162 == 78;
      goto LABEL_403;
    }
    if ((_DWORD)v29)
    {
      if ((v29 & ~*(_DWORD *)(16 * (*(_DWORD *)v87 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v152 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v87 & 0xFFFFFFFE)), v150);
        if (v152)
        {
          v203 = this;
          v153 = JSC::PropertyTable::get(v152, (uint64_t *)&v203);
          v86 = v153;
          if ((_DWORD)v153 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v87 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_183;
LABEL_353:
    if ((*(_WORD *)(v151 + 12) & 0x800) == 0)
    {
      v154 = *(_DWORD *)v87;
LABEL_355:
      v155 = *(_QWORD *)(16 * (v154 & 0xFFFFFFFE) + 0x30);
      if (!v155)
        v155 = *(_QWORD *)(v87 + 16);
      goto LABEL_357;
    }
    v154 = *(_DWORD *)v87;
    if (BYTE2(v197) == 3)
      goto LABEL_355;
    v158 = 16 * (v154 & 0xFFFFFFFE);
    if ((*(_WORD *)(v158 + 12) & 0x800) != 0)
    {
      v155 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16 * *(unsigned int *)(v158 + 76) + 0xB0))(v87, a2);
    }
    else
    {
      v155 = *(_QWORD *)(v158 + 48);
      if (!v155)
        v155 = *(_QWORD *)(v87 + 16);
    }
    if (*((_DWORD *)v150 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v150) & 1) != 0)
      goto LABEL_217;
LABEL_357:
    if ((v155 & 0xFFFE000000000002) == 0)
    {
      v87 = v155;
      if (*(unsigned __int8 *)(v155 + 5) > 0x16u)
        continue;
    }
    goto LABEL_217;
  }
  v95 = HIDWORD(v153);
  if ((int)v153 > 63)
  {
    v167 = *(_QWORD *)(v87 + 8) - 8;
    v168 = 0x3F00000000 - (v153 << 32);
  }
  else
  {
    v167 = v87 + 16;
    v168 = v153 << 32;
  }
  v27 = *(_QWORD *)(v167 + (v168 >> 29));
  if ((v27 & 0xFFFE000000000002) != 0)
  {
LABEL_415:
    v41 = 0;
    v191 = v27;
    v195 = v87;
    goto LABEL_176;
  }
  v169 = *(unsigned __int8 *)(v27 + 5);
  if (v169 == 6)
  {
    v99 = *(_DWORD *)(v151 + 16) & 3;
    v170 = *(_QWORD *)(v27 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
    {
      v172 = *(_QWORD *)(v27 + 24);
      v171 = *(_QWORD *)(v27 + 32);
      v191 = *(_QWORD *)(v27 + 8);
      v192 = v170;
      LODWORD(v193) = HIDWORD(v153);
      v195 = v87;
      BYTE1(v197) = 3;
      v41 = 0;
      v42 = 1;
      if (v99 != 2)
        LOBYTE(v197) = 1;
      HIBYTE(v197) = 1;
      v201 = v172;
      v202 = v171;
      goto LABEL_218;
    }
    v191 = *(_QWORD *)(v27 + 8);
    v192 = v170;
    LODWORD(v193) = HIDWORD(v153);
    v195 = v87;
    goto LABEL_200;
  }
  if (v169 != 5)
    goto LABEL_415;
LABEL_182:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_183:
  v41 = 0;
  v42 = 1;
LABEL_218:
  v9 = v189;
  v5 = v190;
LABEL_219:
  if (v200)
  {
    v113 = *((_DWORD *)v199 + 1);
    if (!v113)
    {
      __break(0xC471u);
      JUMPOUT(0x194993A08);
    }
    *((_DWORD *)v199 + 1) = v113 - 1;
  }
  if (v19)
    WTF::RefCounted<WebCore::DOMMimeType>::deref(v19);
  if ((v42 & 1) == 0)
  {
    if (v41)
      v122 = WebCore::toJS(*(WebCore **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v41, v26, (WebCore::DOMMimeType *)v27);
    else
      v122 = 2;
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    {
      v53 = 0;
      if (!v41)
        return v53;
    }
    else
    {
      *(_QWORD *)v5 = v122;
      *((_DWORD *)v5 + 4) = 6;
      *((_QWORD *)v5 + 4) = a1;
      v53 = 1;
      *((_BYTE *)v5 + 49) = 1;
      if (!v41)
        return v53;
    }
    v54 = v41;
    goto LABEL_261;
  }
LABEL_225:
  if ((this >> 4))
  {
    v114 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((this >> 4) & ~*(_DWORD *)(v114 + 0x20)) == 0)
    {
      v115 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7]);
      if (v115)
      {
        v203 = this;
        v116 = JSC::PropertyTable::get(v115, (uint64_t *)&v203);
        v58 = v116;
        if ((_DWORD)v116 != -1)
        {
          v66 = HIDWORD(v116);
          if ((int)v116 > 63)
          {
            v123 = *(_QWORD *)(a1 + 8) - 8;
            v124 = 0x3F00000000 - (v116 << 32);
          }
          else
          {
            v123 = a1 + 16;
            v124 = v116 << 32;
          }
          v69 = *(_QWORD *)(v123 + (v124 >> 29));
          if ((v69 & 0xFFFE000000000002) != 0)
            goto LABEL_249;
          v125 = *(unsigned __int8 *)(v69 + 5);
          if (v125 != 6)
          {
            if (v125 != 5)
              goto LABEL_249;
LABEL_273:
            JSC::JSObject::fillGetterPropertySlot();
            return 1;
          }
          v71 = *(_DWORD *)(v114 + 16) & 3;
          v73 = *(_QWORD *)(v69 + 8);
          v72 = *(_QWORD *)(v69 + 16);
          if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v69 & 0xFFFFFFFE) + 0x4C))
            goto LABEL_270;
          *(_QWORD *)v5 = v73;
          *((_QWORD *)v5 + 1) = v72;
          *((_DWORD *)v5 + 4) = HIDWORD(v116);
          *((_QWORD *)v5 + 4) = a1;
          v53 = 1;
          *((_BYTE *)v5 + 49) = 3;
          if (v71 == 2)
            return v53;
          goto LABEL_276;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    v53 = OwnStaticPropertySlot;
    if (!this || (OwnStaticPropertySlot & 1) != 0)
      return v53;
LABEL_231:
    v117 = *(_DWORD *)(this + 16);
    if ((v117 & 0x20) != 0)
      return 0;
    v118 = *(_BYTE **)(this + 8);
    v119 = *(unsigned int *)(this + 4);
    if ((v117 & 4) != 0)
    {
      if ((_DWORD)v119)
      {
        v132 = *v118 - 48;
        if (v132 > 9 || v119 >= 2 && *v118 == 48)
        {
LABEL_283:
          v133 = 0;
        }
        else
        {
          v185 = v118 + 1;
          v186 = v119 - 1;
          while (v186)
          {
            if (v132 > 0x19999999)
              goto LABEL_283;
            v187 = *v185 - 48;
            if (v187 > 9)
              goto LABEL_283;
            v133 = 0;
            v25 = __CFADD__(v187, 10 * v132);
            v132 = v187 + 10 * v132;
            ++v185;
            --v186;
            if (v25)
              goto LABEL_284;
          }
          v133 = 0x100000000;
          if (v132 == -1)
            v133 = 0;
        }
      }
      else
      {
        v133 = 0;
      }
LABEL_284:
      if ((v133 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v119)
      {
        v120 = *(unsigned __int16 *)v118 - 48;
        if (v120 > 9 || v119 >= 2 && *(_WORD *)v118 == 48)
        {
LABEL_237:
          v121 = 0;
        }
        else
        {
          v126 = (unsigned __int16 *)(v118 + 2);
          v127 = v119 - 1;
          while (v127)
          {
            if (v120 <= 0x19999999)
            {
              v128 = *v126 - 48;
              if (v128 <= 9)
              {
                v25 = __CFADD__(v128, 10 * v120);
                v120 = v128 + 10 * v120;
                ++v126;
                --v127;
                if (!v25)
                  continue;
              }
            }
            goto LABEL_237;
          }
          v164 = v120 == -1;
          v121 = 0x100000000;
          if (v164)
            v121 = 0;
        }
      }
      else
      {
        v121 = 0;
      }
      if ((v121 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if (this)
    goto LABEL_231;
  return 0;
}

unint64_t WebCore::jsDOMPluginConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMPluginPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPlugin>,(WebCore::DOMConstructorID)756>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDOMPlugin_name(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 32);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsDOMPlugin_filename(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 40);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsDOMPlugin_description(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 48);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

unint64_t WebCore::jsDOMPlugin_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 100);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDOMPluginOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 24);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x1949946ACLL);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSDOMPluginOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  _DWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  _DWORD *v25;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  v4 = v3 + 2;
  ++v3[2];
  if (*(_DWORD *)(a3 + 48))
  {
    v7 = *(_QWORD *)(a3 + 32);
    v5 = (uint64_t *)(a3 + 32);
    v6 = v7;
    if (v7)
    {
      v8 = *(_DWORD *)(v6 - 8);
      v9 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(_DWORD **)(v6 + 16 * v12);
      if (v13 != v3)
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(_DWORD **)(v6 + 16 * v12);
          ++v14;
          if (v13 == v3)
            goto LABEL_11;
        }
        v12 = *(unsigned int *)(v6 - 4);
      }
LABEL_11:
      if (v12 != *(_DWORD *)(v6 - 4))
      {
        v15 = (_QWORD *)(v6 + 16 * v12);
        *v15 = -1;
        v18 = v15[1];
        v16 = v15 + 1;
        v17 = v18;
        if (v18)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v16 = 0;
        }
        ++*(_DWORD *)(*v5 - 16);
        v19 = *v5;
        v20 = *v5 ? *(_DWORD *)(v19 - 12) - 1 : -1;
        *(_DWORD *)(v19 - 12) = v20;
        v21 = *v5;
        if (*v5)
        {
          v22 = 6 * *(_DWORD *)(v21 - 12);
          v23 = *(_DWORD *)(v21 - 4);
          if (v22 < v23 && v23 >= 9)
          {
            v25 = v4;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v5, v23 >> 1, 0);
            WTF::RefCounted<WebCore::DOMPlugin>::deref(v25);
            return;
          }
        }
      }
    }
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  WTF::RefCounted<WebCore::DOMPlugin>::deref(v4);
}

unint64_t WebCore::wrap<WebCore::DOMPlugin>(uint64_t a1, WTF *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t SlowCase;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;
  void *v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *Allocator;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  WTF *v40;
  int v41;
  unint64_t v42;
  _QWORD *v43;
  WTF *v44;

  v4 = *(_QWORD *)(a1 + 3320);
  if (*(_DWORD *)(v4 + 48))
  {
    v34 = *(_QWORD *)(v4 + 32);
    if (!v34)
      goto LABEL_5;
    v35 = *(_DWORD *)(v34 - 8);
    v36 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v37 = 9 * ((v36 + ~(v36 << 13)) ^ ((v36 + ~(v36 << 13)) >> 8));
    v38 = (v37 ^ (v37 >> 15)) + ~((v37 ^ (v37 >> 15)) << 27);
    v39 = v35 & ((v38 >> 31) ^ v38);
    v40 = *(WTF **)(v34 + 16 * v39);
    if (v40 != a2)
    {
      v41 = 1;
      while (v40)
      {
        v39 = ((_DWORD)v39 + v41) & v35;
        v40 = *(WTF **)(v34 + 16 * v39);
        ++v41;
        if (v40 == a2)
          goto LABEL_55;
      }
      goto LABEL_5;
    }
LABEL_55:
    v5 = *(_QWORD *)(v34 + 16 * v39 + 8);
    if (!v5)
      goto LABEL_5;
  }
  else
  {
    v5 = *(_QWORD *)a2;
    if (!*(_QWORD *)a2)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v5 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v5;
    if (*(_QWORD *)v5)
      return SlowCase;
  }
LABEL_5:
  ++*((_DWORD *)a2 + 2);
  v7 = WebCore::getDOMStructure<WebCore::JSDOMPlugin>(*(WebCore::JSDOMPlugin **)(a1 + 56), (JSC::JSCell **)a1);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(v8 + 41456);
  v10 = *(_QWORD *)(v9 + 23536);
  v11 = *(_QWORD **)(v10 + 6128);
  if (v11)
    goto LABEL_25;
  v12 = *(_QWORD *)(v9 + 22648);
  if (__ldaxr((unsigned __int8 *)v12))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v12))
  {
    goto LABEL_10;
  }
  MEMORY[0x19AEA534C](v12);
LABEL_10:
  v14 = *(_QWORD *)(v12 + 2824);
  if (!*(_QWORD *)(v14 + 6128))
  {
    v15 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v44, "IsoSpace T");
    v43 = 0;
    MEMORY[0x19AEA3204](v15, &v44, v8 + 192, v8 + 1872, 32, 8, &v43);
    v17 = (uint64_t)v43;
    v43 = 0;
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v44;
    v44 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 1)
        WTF::fastFree(v18, v16);
      else
        --*(_DWORD *)v18;
    }
    v19 = *(_QWORD *)(v14 + 6128);
    *(_QWORD *)(v14 + 6128) = v15;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v11 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v21 = *(_QWORD *)(v10 + 6128);
  *(_QWORD *)(v10 + 6128) = v11;
  if (v21)
  {
    v22 = (WTF *)MEMORY[0x19AEA3528](v21, v20);
    WTF::fastFree(v22, v23);
  }
  v24 = __ldxr((unsigned __int8 *)v12);
  if (v24 != 1)
  {
    __clrex();
    goto LABEL_24;
  }
  if (__stlxr(0, (unsigned __int8 *)v12))
LABEL_24:
    WTF::Lock::unlockSlow((WTF::Lock *)v12);
LABEL_25:
  SlowCase = v11[3];
  if (SlowCase < v11[4])
  {
LABEL_26:
    v11[3] = SlowCase + 32;
    goto LABEL_27;
  }
  SlowCase = v11[5];
  if ((SlowCase & 1) == 0)
  {
    v42 = *(_QWORD *)(SlowCase + 8) ^ v11[6];
    v11[4] = SlowCase + HIDWORD(v42);
    v11[5] = SlowCase + (int)v42;
    goto LABEL_26;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_27:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v7);
  *(_QWORD *)(SlowCase + 24) = a2;
  if (*(_BYTE *)(v8 + 755))
    __dmb(0xAu);
  v25 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE335118 & 1) == 0)
  {
    qword_1EE335110 = (uint64_t)&off_1E3259D18;
    byte_1EE335118 = 1;
  }
  if (!*(_DWORD *)(v25 + 48))
  {
    if ((SlowCase & 8) != 0)
      v26 = (SlowCase - 112) | 1;
    else
      v26 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v26 & 1) != 0)
      v27 = v26 + 47;
    else
      v27 = *(_QWORD *)v26 + 32;
    Allocator = *(_QWORD **)(v27 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v27 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE335110;
    Allocator[2] = v25;
    v29 = *(_QWORD *)a2;
    *(_QWORD *)a2 = Allocator;
    if (!v29)
      return SlowCase;
LABEL_49:
    *(_QWORD *)(v29 + 8) = 3;
    return SlowCase;
  }
  v44 = a2;
  if ((SlowCase & 8) != 0)
    v31 = (SlowCase - 112) | 1;
  else
    v31 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v31 & 1) != 0)
    v32 = v31 + 47;
  else
    v32 = *(_QWORD *)v31 + 32;
  v33 = *(_QWORD **)(v32 + 16);
  if (!v33)
    v33 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v32 + 16) = *v33;
  *v33 = SlowCase;
  v33[1] = &qword_1EE335110;
  v33[2] = v25;
  v43 = v33;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v25 + 32), (uint64_t *)&v44, (uint64_t *)&v43);
  v29 = (uint64_t)v43;
  if (v43)
    goto LABEL_49;
  return SlowCase;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPluginArray>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDOMPluginArray>((WebCore::JSDOMPluginArray *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

void WebCore::JSDOMPluginArray::destroy(WebCore::JSDOMPluginArray *this, JSC::JSCell *a2)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
    WTF::RefCounted<WebCore::DOMPluginArray>::deref((_DWORD *)(v2 + 8));
}

uint64_t WebCore::JSDOMPluginArray::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  int OwnProperty;
  uint64_t result;
  int v23;
  _BYTE v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v16 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v17 = *(_BYTE **)(v15 + 496);
  if (!v17)
    v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
  if (!*(_QWORD *)v17)
    goto LABEL_23;
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
  if (!v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(v18 + 680);
  if (*(_BYTE *)(v19 + 243))
  {
    if (!*(_BYTE *)(v19 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v17[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v19 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v20 = *(JSC::VM **)(a2 + 56);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSDOMPluginArray::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (uint64_t)v24, 1);
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v20 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v23 = *(_DWORD *)(v31 + 4);
    if (!v23)
    {
      __break(0xC471u);
      JUMPOUT(0x194994FA8);
    }
    *(_DWORD *)(v31 + 4) = v23 - 1;
  }
  return result;
}

uint64_t WebCore::JSDOMPluginArray::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDOMPluginArray::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  WebCore::DOMPluginArray *v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  const WTF::StringImpl *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  unsigned int v22;
  const WTF::StringImpl *v23;
  int isSupportedPropertyName;
  WTF::StringImpl *v25;
  int v26;
  JSC::VM *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unsigned int v38;
  BOOL v39;
  uint64_t result;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unsigned __int16 *v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;
  unsigned int v60;
  const WTF::StringImpl *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char v68;
  JSC::VM *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *(WebCore::DOMPluginArray **)(a1 + 24);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v15 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v16 = *(_BYTE **)(v13 + 496);
      if (!v16)
        v16 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v15 - 192));
      if (*(_QWORD *)v16)
      {
        v17 = *(_QWORD *)(*(_QWORD *)v16 + 8);
        if (v17)
        {
          v18 = *(_QWORD *)(v17 + 680);
          if (*(_BYTE *)(v18 + 243))
          {
            if (!*(_BYTE *)(v18 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v18 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v16[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v19 = *(_DWORD *)(a3 + 16);
    if ((v19 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v20 = *(_BYTE **)(a3 + 8);
    v21 = *(unsigned int *)(a3 + 4);
    if ((v19 & 4) != 0)
    {
      if (!(_DWORD)v21)
        goto LABEL_29;
      v22 = *v20 - 48;
      if (v22 > 9 || v21 >= 2 && *v20 == 48)
        goto LABEL_29;
      v53 = v20 + 1;
      v54 = v21 - 1;
      while (v54)
      {
        if (v22 <= 0x19999999)
        {
          v55 = *v53 - 48;
          if (v55 <= 9)
          {
            v39 = __CFADD__(v55, 10 * v22);
            v22 = v55 + 10 * v22;
            ++v53;
            --v54;
            if (!v39)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    else
    {
      if (!(_DWORD)v21
        || (v22 = *(unsigned __int16 *)v20 - 48, v22 > 9)
        || v21 >= 2 && *(_WORD *)v20 == 48)
      {
LABEL_29:
        *(_DWORD *)a3 += 2;
        v23 = (const WTF::StringImpl *)a3;
        goto LABEL_30;
      }
      v36 = (unsigned __int16 *)(v20 + 2);
      v37 = v21 - 1;
      while (v37)
      {
        if (v22 <= 0x19999999)
        {
          v38 = *v36 - 48;
          if (v38 <= 9)
          {
            v39 = __CFADD__(v38, 10 * v22);
            v22 = v38 + 10 * v22;
            ++v36;
            --v37;
            if (!v39)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    if (v22 != -1)
      return *((_DWORD *)v11 + 9) <= v22;
    goto LABEL_29;
  }
  v23 = 0;
LABEL_30:
  v61 = v23;
  isSupportedPropertyName = WebCore::DOMPluginArray::isSupportedPropertyName(v11, &v61, v14);
  v26 = isSupportedPropertyName;
  if (!v23)
    goto LABEL_33;
  if (*(_DWORD *)v23 == 2)
  {
    WTF::StringImpl::destroy(v23, v25);
    if (v26)
      goto LABEL_34;
    return JSC::JSObject::deleteProperty();
  }
  *(_DWORD *)v23 -= 2;
LABEL_33:
  if (!isSupportedPropertyName)
    return JSC::JSObject::deleteProperty();
LABEL_34:
  v27 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v63 = 0xFFFFFFFF00000000;
  v65 = 0;
  v66 = 0;
  v64 = a1;
  v67 = 196608;
  v68 = 0;
  v71 = 0;
  v72 = 0;
  v69 = v27;
  ++*((_DWORD *)v27 + 1);
  v70 = 1;
  if ((a3 >> 4))
  {
    v28 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v28 + 0x20)) == 0)
    {
      v29 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v27);
      if (v29)
      {
        v73 = a3;
        v30 = JSC::PropertyTable::get(v29, (uint64_t *)&v73);
        if ((_DWORD)v30 != -1)
        {
          if ((int)v30 > 63)
          {
            v42 = *(_QWORD *)(a1 + 8) - 8;
            v43 = 0x3F00000000 - (v30 << 32);
          }
          else
          {
            v42 = a1 + 16;
            v43 = v30 << 32;
          }
          v44 = *(_QWORD *)(v42 + (v43 >> 29));
          if ((v44 & 0xFFFE000000000002) == 0)
          {
            v45 = *(unsigned __int8 *)(v44 + 5);
            if (v45 == 6)
            {
              v49 = *(_DWORD *)(v28 + 16) & 3;
              v50 = *(_QWORD *)(v44 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v44 & 0xFFFFFFFE) + 0x4C))
              {
                v52 = *(_QWORD *)(v44 + 24);
                v51 = *(_QWORD *)(v44 + 32);
                v61 = *(const WTF::StringImpl **)(v44 + 8);
                v62 = v50;
                LODWORD(v63) = HIDWORD(v30);
                v65 = a1;
                BYTE1(v67) = 3;
                result = 1;
                if (v49 != 2)
                  LOBYTE(v67) = 1;
                HIBYTE(v67) = 1;
                v71 = v52;
                v72 = v51;
              }
              else
              {
                v61 = *(const WTF::StringImpl **)(v44 + 8);
                v62 = v50;
                LODWORD(v63) = HIDWORD(v30);
                v65 = a1;
                result = 1;
                BYTE1(v67) = 3;
                if (v49 != 2)
                  LOBYTE(v67) = 1;
              }
              goto LABEL_57;
            }
            if (v45 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              result = 1;
              goto LABEL_57;
            }
          }
          v61 = (const WTF::StringImpl *)v44;
          v65 = a1;
          v63 = __PAIR64__(v30, HIDWORD(v30));
          result = 1;
          LOWORD(v67) = 257;
          goto LABEL_57;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if (!a3 || (result & 1) != 0)
      goto LABEL_57;
  }
  else if (!a3)
  {
LABEL_56:
    result = 0;
    goto LABEL_57;
  }
  v31 = *(_DWORD *)(a3 + 16);
  if ((v31 & 0x20) != 0)
    goto LABEL_56;
  v32 = *(_BYTE **)(a3 + 8);
  v33 = *(unsigned int *)(a3 + 4);
  if ((v31 & 4) != 0)
  {
    if ((_DWORD)v33)
    {
      v56 = *v32 - 48;
      if (v56 > 9 || v33 >= 2 && *v32 == 48)
      {
LABEL_112:
        v57 = 0;
      }
      else
      {
        v58 = v32 + 1;
        v59 = v33 - 1;
        while (v59)
        {
          if (v56 > 0x19999999)
            goto LABEL_112;
          v60 = *v58 - 48;
          if (v60 > 9)
            goto LABEL_112;
          v57 = 0;
          v39 = __CFADD__(v60, 10 * v56);
          v56 = v60 + 10 * v56;
          ++v58;
          --v59;
          if (v39)
            goto LABEL_113;
        }
        v57 = 0x100000000;
        if (v56 == -1)
          v57 = 0;
      }
    }
    else
    {
      v57 = 0;
    }
LABEL_113:
    if ((v57 & 0x100000000) == 0)
      goto LABEL_56;
  }
  else
  {
    if ((_DWORD)v33)
    {
      v34 = *(unsigned __int16 *)v32 - 48;
      if (v34 > 9 || v33 >= 2 && *(_WORD *)v32 == 48)
      {
LABEL_46:
        v35 = 0;
      }
      else
      {
        v46 = (unsigned __int16 *)(v32 + 2);
        v47 = v33 - 1;
        while (v47)
        {
          if (v34 <= 0x19999999)
          {
            v48 = *v46 - 48;
            if (v48 <= 9)
            {
              v39 = __CFADD__(v48, 10 * v34);
              v34 = v48 + 10 * v34;
              ++v46;
              --v47;
              if (!v39)
                continue;
            }
          }
          goto LABEL_46;
        }
        v9 = v34 == -1;
        v35 = 0x100000000;
        if (v9)
          v35 = 0;
      }
    }
    else
    {
      v35 = 0;
    }
    if ((v35 & 0x100000000) == 0)
      goto LABEL_56;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_57:
  if (v70)
  {
    v41 = *((_DWORD *)v69 + 1);
    if (!v41)
    {
      __break(0xC471u);
      JUMPOUT(0x1949955C0);
    }
    *((_DWORD *)v69 + 1) = v41 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSDOMPluginArray::deletePropertyByIndex(WebCore::JSDOMPluginArray *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 36) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 36) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 36) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 36) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 36) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 36) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 36) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDOMPluginArray::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSDOMPluginArray::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSDOMPluginArray::getOwnPropertySlotByIndex(WebCore::JSDOMPluginArray *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  unint64_t v12;
  uint64_t OwnPropertySlotByIndex;
  const WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF *v18;
  _DWORD *v19;
  WTF::StringImpl *v20;
  JSC::VM *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  unsigned int v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned int v32;
  BOOL v33;
  _QWORD *v34;
  _QWORD *v35;
  int v36;
  WTF *v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned int v46;
  unint64_t v47;
  _BYTE *v48;
  WebCore::JSDOMPluginArray *v49;
  uint64_t v50;
  JSC::Structure *v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t v56;
  char OwnStaticPropertySlot;
  int v58;
  _BYTE *v59;
  uint64_t v60;
  unsigned int v61;
  unsigned __int16 *v62;
  uint64_t v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  _BYTE *v75;
  uint64_t v76;
  unsigned int v77;
  unsigned __int16 *v78;
  uint64_t v79;
  unsigned int v80;
  unsigned __int8 *v81;
  uint64_t v82;
  unsigned int v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  JSC::VM *v87;
  uint64_t v88;
  char v89;
  int v90;
  int v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unsigned __int8 *v95;
  uint64_t v96;
  unsigned int v97;
  JSC::VM *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  uint64_t v104;
  char v105;
  int v106;
  unsigned int v107;
  uint64_t v108;
  unsigned __int8 *v109;
  int v110;
  int v111;
  uint64_t v112;
  const WTF::StringImpl *v113;
  const unsigned __int8 *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  unint64_t v120;
  JSC::VM *v121;
  uint64_t v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unint64_t v127;
  uint64_t v128;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v130;
  unint64_t v131;
  JSC::VM *v132;
  WTF *v133;
  WTF::StringImpl *v134;
  _DWORD *v135;
  uint64_t v136;
  unint64_t v137;
  WebCore::JSDOMPluginArray *v138;
  WebCore::JSDOMPluginArray *v139;
  uint64_t v140;
  int v141;
  char v142;
  JSC::VM *v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  const WTF::StringImpl *v147;
  char v148;
  uint64_t v149;

  v149 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 == -1)
  {
    JSC::Identifier::from();
    if (v134)
    {
      if ((*((_BYTE *)v134 + 16) & 0x20) != 0)
        goto LABEL_156;
      v16 = *((_QWORD *)this + 3);
      *(_DWORD *)v134 += 2;
      v147 = v134;
      WebCore::DOMPluginArray::namedItem(v16, &v147, v15, &v135);
      if (*(_DWORD *)v134 == 2)
        WTF::StringImpl::destroy(v134, v17);
      else
        *(_DWORD *)v134 -= 2;
    }
    else
    {
      v43 = *((_QWORD *)this + 3);
      v147 = 0;
      WebCore::DOMPluginArray::namedItem(v43, &v147, v15, &v135);
    }
    v18 = (WTF *)v135;
    if (!v135)
    {
LABEL_156:
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_157;
    }
    v19 = v135 + 2;
    ++v135[2];
    WTF::RefCounted<WebCore::DOMPlugin>::deref(v19);
    v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v137 = 0xFFFFFFFF00000000;
    v139 = 0;
    v140 = 0;
    v138 = this;
    v141 = 196608;
    v142 = 0;
    v145 = 0;
    v146 = 0;
    v143 = v21;
    ++*((_DWORD *)v21 + 1);
    v144 = 1;
    v22 = (unint64_t)v134 >> 4;
    if (((unint64_t)v134 >> 4)
      && (v23 = 16 * (*(_DWORD *)this & 0xFFFFFFFE), (v22 & ~*(_DWORD *)(v23 + 0x20)) == 0)
      && (v24 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v21)) != 0&& (v147 = v134, v25 = JSC::PropertyTable::get(v24, (uint64_t *)&v147), (_DWORD)v25 != -1))
    {
      v34 = (_QWORD *)((char *)this + 8 * (int)v25 + 16);
      if ((int)v25 >= 64)
        v34 = (_QWORD *)(*((_QWORD *)this + 1) + ((uint64_t)(0x3F00000000 - (v25 << 32)) >> 29) - 8);
      v35 = (_QWORD *)*v34;
      if ((*v34 & 0xFFFE000000000002) != 0)
        goto LABEL_39;
      v36 = *((unsigned __int8 *)v35 + 5);
      if (v36 == 6)
      {
        v39 = *(_DWORD *)(v23 + 16) & 3;
        v40 = v35[2];
        if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v35 & 0xFFFFFFFE) + 0x4C))
        {
          v42 = v35[3];
          v41 = v35[4];
          v135 = (_DWORD *)v35[1];
          v136 = v40;
          LODWORD(v137) = HIDWORD(v25);
          v139 = this;
          BYTE1(v141) = 3;
          v37 = 0;
          v38 = 1;
          if (v39 != 2)
            LOBYTE(v141) = 1;
          HIBYTE(v141) = 1;
          v145 = v42;
          v146 = v41;
        }
        else
        {
          v135 = (_DWORD *)v35[1];
          v136 = v40;
          LODWORD(v137) = HIDWORD(v25);
          v139 = this;
          v38 = 1;
          BYTE1(v141) = 3;
          v37 = 0;
          if (v39 != 2)
            LOBYTE(v141) = 1;
        }
        goto LABEL_150;
      }
      if (v36 != 5)
      {
LABEL_39:
        v37 = 0;
        v135 = v35;
        v139 = this;
        v137 = __PAIR64__(v25, HIDWORD(v25));
        v38 = 1;
        LOWORD(v141) = 257;
        goto LABEL_150;
      }
      JSC::JSObject::fillGetterPropertySlot();
    }
    else
    {
      if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_48;
      if (!v134)
        goto LABEL_66;
      v26 = *((_DWORD *)v134 + 4);
      if ((v26 & 0x20) != 0)
        goto LABEL_66;
      v27 = (_BYTE *)*((_QWORD *)v134 + 1);
      v28 = *((unsigned int *)v134 + 1);
      if ((v26 & 4) != 0)
      {
        if (!(_DWORD)v28)
          goto LABEL_66;
        v29 = *v27 - 48;
        if (v29 > 9 || v28 >= 2 && *v27 == 48)
          goto LABEL_66;
        v44 = v27 + 1;
        v45 = v28 - 1;
        while (v45)
        {
          if (v29 <= 0x19999999)
          {
            v46 = *v44 - 48;
            if (v46 <= 9)
            {
              v33 = __CFADD__(v46, 10 * v29);
              v29 = v46 + 10 * v29;
              ++v44;
              --v45;
              if (!v33)
                continue;
            }
          }
          goto LABEL_66;
        }
      }
      else
      {
        if (!(_DWORD)v28)
          goto LABEL_66;
        v29 = *(unsigned __int16 *)v27 - 48;
        if (v29 > 9 || v28 >= 2 && *(_WORD *)v27 == 48)
          goto LABEL_66;
        v30 = (unsigned __int16 *)(v27 + 2);
        v31 = v28 - 1;
        while (v31)
        {
          if (v29 <= 0x19999999)
          {
            v32 = *v30 - 48;
            if (v32 <= 9)
            {
              v33 = __CFADD__(v32, 10 * v29);
              v29 = v32 + 10 * v29;
              ++v30;
              --v31;
              if (!v33)
                continue;
            }
          }
          goto LABEL_66;
        }
      }
      if (v29 == -1 || (JSC::JSObject::getOwnPropertySlotByIndex() & 1) == 0)
      {
LABEL_66:
        v133 = v18;
        v47 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
        if (!v47)
          v47 = *((_QWORD *)this + 2);
        if ((v47 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v47 + 5) < 0x17u)
          goto LABEL_149;
        v48 = (_BYTE *)(v47 + 6);
        if ((*(_BYTE *)(v47 + 6) & 8) == 0)
        {
          v132 = (JSC::VM *)*((_QWORD *)a2 + 7);
          v49 = (WebCore::JSDOMPluginArray *)v47;
          while (1)
          {
            v50 = 16 * (*(_DWORD *)v49 & 0xFFFFFFFE);
            if ((_DWORD)v22)
            {
              if ((v22 & ~*(_DWORD *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0x20)) == 0)
              {
                v51 = (JSC::Structure *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE));
                v52 = JSC::Structure::ensurePropertyTableIfNotEmpty(v51, v132);
                v50 = (uint64_t)v51;
                if (v52)
                {
                  v147 = v134;
                  v53 = JSC::PropertyTable::get(v52, (uint64_t *)&v147);
                  v54 = v53;
                  v50 = (uint64_t)v51;
                  if ((_DWORD)v53 != -1)
                  {
                    v65 = HIDWORD(v53);
                    if ((int)v53 > 63)
                    {
                      v66 = *((_QWORD *)v49 + 1) - 8;
                      v67 = 0x3F00000000 - (v53 << 32);
                    }
                    else
                    {
                      v66 = (uint64_t)v49 + 16;
                      v67 = v53 << 32;
                    }
                    v68 = *(_QWORD *)(v66 + (v67 >> 29));
                    if ((v68 & 0xFFFE000000000002) == 0)
                    {
                      v69 = *(unsigned __int8 *)(v68 + 5);
                      if (v69 == 6)
                      {
                        v70 = *((_DWORD *)v51 + 4) & 3;
                        v71 = *(_QWORD *)(v68 + 16);
                        if (MEMORY[0x1E0CBE830] == 16
                                                  * *(unsigned int *)(16 * (*(_DWORD *)v68 & 0xFFFFFFFE) + 0x4C))
                        {
                          v73 = *(_QWORD *)(v68 + 24);
                          v72 = *(_QWORD *)(v68 + 32);
                          v135 = *(_DWORD **)(v68 + 8);
                          v136 = v71;
                          LODWORD(v137) = HIDWORD(v53);
                          v139 = v49;
LABEL_110:
                          BYTE1(v141) = 3;
                          v37 = 0;
                          v38 = 1;
                          if (v70 != 2)
                            LOBYTE(v141) = 1;
                          HIBYTE(v141) = 1;
                          v145 = v73;
                          v146 = v72;
                          goto LABEL_106;
                        }
                        v135 = *(_DWORD **)(v68 + 8);
                        v136 = v71;
                        LODWORD(v137) = HIDWORD(v53);
                        v139 = v49;
LABEL_131:
                        v38 = 1;
                        BYTE1(v141) = 3;
                        v37 = 0;
                        if (v70 != 2)
                          LOBYTE(v141) = 1;
                        goto LABEL_106;
                      }
                      if (v69 == 5)
                        goto LABEL_113;
                    }
                    v37 = 0;
                    v135 = (_DWORD *)v68;
                    v139 = v49;
LABEL_105:
                    v137 = __PAIR64__(v54, v65);
                    v38 = 1;
                    LOWORD(v141) = 257;
                    goto LABEL_106;
                  }
                }
              }
            }
            if ((*v48 & 0x20) != 0)
            {
              v56 = v50;
              OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
              v50 = v56;
              if ((OwnStaticPropertySlot & 1) != 0)
                goto LABEL_114;
            }
            v55 = *(_QWORD *)(v50 + 48);
            if (!v55)
              v55 = *((_QWORD *)v49 + 2);
            if ((v55 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v55 + 5) < 0x17u)
              break;
            v48 = (_BYTE *)(v55 + 6);
            v131 = v55;
            v49 = (WebCore::JSDOMPluginArray *)v55;
            if ((*(_BYTE *)(v55 + 6) & 8) != 0)
              goto LABEL_116;
          }
          if (!v134)
            goto LABEL_149;
          v58 = *((_DWORD *)v134 + 4);
          if ((v58 & 0x20) != 0)
            goto LABEL_149;
          v59 = (_BYTE *)*((_QWORD *)v134 + 1);
          v60 = *((unsigned int *)v134 + 1);
          if ((v58 & 4) != 0)
          {
            if (!(_DWORD)v60)
              goto LABEL_149;
            v61 = *v59 - 48;
            if (v61 > 9 || v60 >= 2 && *v59 == 48)
              goto LABEL_149;
            v81 = v59 + 1;
            v82 = v60 - 1;
            while (v82)
            {
              if (v61 <= 0x19999999)
              {
                v83 = *v81 - 48;
                if (v83 <= 9)
                {
                  v33 = __CFADD__(v83, 10 * v61);
                  v61 = v83 + 10 * v61;
                  ++v81;
                  --v82;
                  if (!v33)
                    continue;
                }
              }
              goto LABEL_149;
            }
          }
          else
          {
            if (!(_DWORD)v60)
              goto LABEL_149;
            v61 = *(unsigned __int16 *)v59 - 48;
            if (v61 > 9 || v60 >= 2 && *(_WORD *)v59 == 48)
              goto LABEL_149;
            v62 = (unsigned __int16 *)(v59 + 2);
            v63 = v60 - 1;
            while (v63)
            {
              if (v61 <= 0x19999999)
              {
                v64 = *v62 - 48;
                if (v64 <= 9)
                {
                  v33 = __CFADD__(v64, 10 * v61);
                  v61 = v64 + 10 * v61;
                  ++v62;
                  --v63;
                  if (!v33)
                    continue;
                }
              }
              goto LABEL_149;
            }
          }
          if (v61 == -1)
          {
LABEL_149:
            v38 = 0;
            v37 = v133;
            v18 = 0;
            goto LABEL_150;
          }
          v86 = v61;
          v87 = (JSC::VM *)*((_QWORD *)a2 + 7);
          while (1)
          {
            v88 = 16 * (*(_DWORD *)v47 & 0xFFFFFFFE);
            v89 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, _DWORD **))(16 * *(unsigned int *)(v88 + 0x4C) + 0x70))(v47, a2, v86, &v135);
            if (*((_DWORD *)v87 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v87) & 1) != 0)
              goto LABEL_149;
            if ((v89 & 1) != 0)
              goto LABEL_114;
            v90 = BYTE2(v141);
            if (BYTE2(v141) == 3)
            {
              if (v142)
                goto LABEL_149;
              v91 = *(unsigned __int8 *)(v47 + 5);
              if (v91 == 61)
              {
LABEL_188:
                v93 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
                if (!v93)
                  v93 = *(_QWORD *)(v47 + 16);
                goto LABEL_190;
              }
            }
            else
            {
              v91 = *(unsigned __int8 *)(v47 + 5);
              if (v91 == 61)
              {
                if (BYTE2(v141) == 1)
                  goto LABEL_149;
                goto LABEL_186;
              }
            }
            if ((v91 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v47 + 40) & 7u) > 2)
              {
                LOBYTE(v147) = 0;
                v148 = 0;
                v94 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v47, (WTF *)&v147);
                if ((_BYTE)v20)
                  v92 = v94;
                else
                  v92 = 0;
              }
              else
              {
                v92 = *(_QWORD *)(v47 + 24);
              }
              if (v92 <= v86)
                goto LABEL_149;
              v90 = BYTE2(v141);
            }
LABEL_186:
            if ((*(_WORD *)(v88 + 12) & 0x800) == 0 || v90 == 3)
              goto LABEL_188;
            if ((*(_WORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v93 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                 * *(unsigned int *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x4C)
                                                                                 + 0xB0))(v47, a2);
            }
            else
            {
              v93 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
              if (!v93)
                v93 = *(_QWORD *)(v47 + 16);
            }
            if (*((_DWORD *)v87 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v87) & 1) != 0)
              goto LABEL_149;
LABEL_190:
            if ((v93 & 0xFFFE000000000002) == 0)
            {
              v47 = v93;
              if (*(unsigned __int8 *)(v93 + 5) > 0x16u)
                continue;
            }
            goto LABEL_149;
          }
        }
        v131 = v47;
LABEL_116:
        if (!v134)
          goto LABEL_217;
        v74 = *((_DWORD *)v134 + 4);
        if ((v74 & 0x20) != 0)
          goto LABEL_217;
        v75 = (_BYTE *)*((_QWORD *)v134 + 1);
        v76 = *((unsigned int *)v134 + 1);
        if ((v74 & 4) != 0)
        {
          if (!(_DWORD)v76)
            goto LABEL_217;
          v77 = *v75 - 48;
          if (v77 > 9 || v76 >= 2 && *v75 == 48)
            goto LABEL_217;
          v95 = v75 + 1;
          v96 = v76 - 1;
          while (v96)
          {
            if (v77 <= 0x19999999)
            {
              v97 = *v95 - 48;
              if (v97 <= 9)
              {
                v33 = __CFADD__(v97, 10 * v77);
                v77 = v97 + 10 * v77;
                ++v95;
                --v96;
                if (!v33)
                  continue;
              }
            }
            goto LABEL_217;
          }
        }
        else
        {
          if (!(_DWORD)v76)
            goto LABEL_217;
          v77 = *(unsigned __int16 *)v75 - 48;
          if (v77 > 9 || v76 >= 2 && *(_WORD *)v75 == 48)
            goto LABEL_217;
          v78 = (unsigned __int16 *)(v75 + 2);
          v79 = v76 - 1;
          while (v79)
          {
            if (v77 <= 0x19999999)
            {
              v80 = *v78 - 48;
              if (v80 <= 9)
              {
                v33 = __CFADD__(v80, 10 * v77);
                v77 = v80 + 10 * v77;
                ++v78;
                --v79;
                if (!v33)
                  continue;
              }
            }
            goto LABEL_217;
          }
        }
        if (v77 == -1)
        {
LABEL_217:
          v98 = (JSC::VM *)*((_QWORD *)a2 + 7);
          while (1)
          {
            v99 = *(_DWORD *)v131 & 0xFFFFFFFE;
            v100 = 16 * v99;
            if ((*(_BYTE *)(v131 + 6) & 8) != 0)
              break;
            if ((_DWORD)v22)
            {
              if ((v22 & ~*(_DWORD *)(16 * v99 + 0x20)) == 0)
              {
                v101 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * v99), v98);
                if (v101)
                {
                  v147 = v134;
                  v102 = JSC::PropertyTable::get(v101, (uint64_t *)&v147);
                  v54 = v102;
                  if ((_DWORD)v102 != -1)
                  {
                    v65 = HIDWORD(v102);
                    if ((int)v102 > 63)
                    {
                      v115 = *(_QWORD *)(v131 + 8) - 8;
                      v116 = 0x3F00000000 - (v102 << 32);
                    }
                    else
                    {
                      v115 = v131 + 16;
                      v116 = v102 << 32;
                    }
                    v117 = *(_QWORD *)(v115 + (v116 >> 29));
                    if ((v117 & 0xFFFE000000000002) == 0)
                    {
                      v118 = *(unsigned __int8 *)(v117 + 5);
                      if (v118 != 6)
                      {
                        if (v118 != 5)
                          goto LABEL_283;
LABEL_113:
                        JSC::JSObject::fillGetterPropertySlot();
LABEL_114:
                        v37 = 0;
                        v38 = 1;
LABEL_106:
                        v18 = v133;
LABEL_150:
                        if (v144)
                        {
                          v84 = *((_DWORD *)v143 + 1);
                          if (!v84)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1949961ACLL);
                          }
                          *((_DWORD *)v143 + 1) = v84 - 1;
                        }
                        if (v18)
                          WTF::RefCounted<WebCore::DOMPlugin>::deref((_DWORD *)v18 + 2);
                        if ((v38 & 1) != 0)
                          goto LABEL_156;
                        if (v37)
                          v85 = WebCore::wrap<WebCore::DOMPlugin>(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v37);
                        else
                          v85 = 2;
                        if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
                        {
                          OwnPropertySlotByIndex = 0;
                          if (!v37)
                            goto LABEL_157;
LABEL_166:
                          WTF::RefCounted<WebCore::DOMPlugin>::deref((_DWORD *)v37 + 2);
                        }
                        else
                        {
                          *(_QWORD *)a4 = v85;
                          *(_DWORD *)(a4 + 16) = 6;
                          *(_QWORD *)(a4 + 32) = this;
                          OwnPropertySlotByIndex = 1;
                          *(_BYTE *)(a4 + 49) = 1;
                          if (v37)
                            goto LABEL_166;
                        }
LABEL_157:
                        if (v134)
                        {
                          if (*(_DWORD *)v134 == 2)
                            WTF::StringImpl::destroy(v134, v20);
                          else
                            *(_DWORD *)v134 -= 2;
                        }
                        return OwnPropertySlotByIndex;
                      }
                      v70 = *(_DWORD *)(v100 + 16) & 3;
                      v119 = *(_QWORD *)(v117 + 16);
                      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v117 & 0xFFFFFFFE) + 0x4C))
                      {
                        v73 = *(_QWORD *)(v117 + 24);
                        v72 = *(_QWORD *)(v117 + 32);
                        v135 = *(_DWORD **)(v117 + 8);
                        v136 = v119;
                        LODWORD(v137) = HIDWORD(v102);
                        v139 = (WebCore::JSDOMPluginArray *)v131;
                        goto LABEL_110;
                      }
                      v135 = *(_DWORD **)(v117 + 8);
                      v136 = v119;
                      LODWORD(v137) = HIDWORD(v102);
                      v139 = (WebCore::JSDOMPluginArray *)v131;
                      goto LABEL_131;
                    }
LABEL_283:
                    v37 = 0;
                    v135 = (_DWORD *)v117;
                    v139 = (WebCore::JSDOMPluginArray *)v131;
                    goto LABEL_105;
                  }
                }
              }
            }
            if ((*(_BYTE *)(v131 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
              goto LABEL_114;
LABEL_224:
            if ((*(_WORD *)(v100 + 12) & 0x800) == 0)
            {
              v103 = *(_DWORD *)v131;
LABEL_226:
              v104 = *(_QWORD *)(16 * (v103 & 0xFFFFFFFE) + 0x30);
              if (!v104)
                v104 = *(_QWORD *)(v131 + 16);
              goto LABEL_228;
            }
            v103 = *(_DWORD *)v131;
            if (BYTE2(v141) == 3)
              goto LABEL_226;
            v112 = 16 * (v103 & 0xFFFFFFFE);
            if ((*(_WORD *)(v112 + 12) & 0x800) != 0)
            {
              v104 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16 * *(unsigned int *)(v112 + 76)
                                                                                  + 0xB0))(v131, a2);
            }
            else
            {
              v104 = *(_QWORD *)(v112 + 48);
              if (!v104)
                v104 = *(_QWORD *)(v131 + 16);
            }
            if (*((_DWORD *)v98 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v98) & 1) != 0)
              goto LABEL_149;
LABEL_228:
            if ((v104 & 0xFFFE000000000002) == 0)
            {
              v131 = v104;
              if (*(unsigned __int8 *)(v104 + 5) > 0x16u)
                continue;
            }
            goto LABEL_149;
          }
          v105 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, WTF::StringImpl *, _DWORD **))(16 * *(unsigned int *)(16 * v99 + 0x4C) + 0x68))(v131, a2, v134, &v135);
          if (*((_DWORD *)v98 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v98) & 1) != 0)
            goto LABEL_149;
          if ((v105 & 1) != 0)
            goto LABEL_114;
          if (BYTE2(v141) == 3)
          {
            if (v142)
              goto LABEL_149;
            v106 = *(unsigned __int8 *)(v131 + 5);
            if (v106 == 61)
              goto LABEL_224;
          }
          else
          {
            v106 = *(unsigned __int8 *)(v131 + 5);
            if (v106 == 61)
            {
              if (BYTE2(v141) == 1)
                goto LABEL_149;
              goto LABEL_224;
            }
          }
          if (!v134)
            goto LABEL_224;
          if ((v106 - 50) < 0xFFFFFFF5)
            goto LABEL_224;
          v107 = *((_DWORD *)v134 + 4);
          if ((v107 & 0x20) != 0)
            goto LABEL_224;
          v108 = *((unsigned int *)v134 + 1);
          if (!(_DWORD)v108)
            goto LABEL_224;
          v109 = (unsigned __int8 *)*((_QWORD *)v134 + 1);
          if ((v107 & 4) != 0)
          {
            v110 = *v109;
            if ((_DWORD)v108 == 1)
            {
LABEL_260:
              if ((v110 - 48) < 0xA)
                goto LABEL_149;
              goto LABEL_224;
            }
            if (v110 == 45)
            {
              v111 = v109[1];
LABEL_264:
              if ((v111 - 48) >= 0xA)
              {
                if ((_DWORD)v108 != 9 || v111 != 73)
                  goto LABEL_224;
              }
              else if ((_DWORD)v108 == 2)
              {
                goto LABEL_149;
              }
LABEL_275:
              v47 = v47 & 0xFFFFFF0000000000 | v108 | ((unint64_t)((v107 >> 2) & 1) << 32);
              JSC::jsToNumber();
              v113 = (const WTF::StringImpl *)WTF::numberToString();
              if ((WTF::equal(v134, v113, v114) & 1) != 0)
                goto LABEL_149;
              goto LABEL_224;
            }
          }
          else
          {
            v110 = *(unsigned __int16 *)v109;
            if ((_DWORD)v108 == 1)
              goto LABEL_260;
            if (v110 == 45)
            {
              v111 = *((unsigned __int16 *)v109 + 1);
              goto LABEL_264;
            }
          }
          if ((v110 - 48) >= 0xA
            && ((_DWORD)v108 != 8 || v110 != 73)
            && ((_DWORD)v108 != 3 || v110 != 78))
          {
            goto LABEL_224;
          }
          goto LABEL_275;
        }
        v120 = v77;
        v121 = (JSC::VM *)*((_QWORD *)a2 + 7);
        while (1)
        {
          v122 = 16 * (*(_DWORD *)v47 & 0xFFFFFFFE);
          v123 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, _DWORD **))(16 * *(unsigned int *)(v122 + 0x4C) + 0x70))(v47, a2, v120, &v135);
          v124 = v123;
          if (*((_DWORD *)v121 + 20))
          {
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v121);
            if (((hasExceptionsAfterHandlingTraps | v124) & 1) != 0)
            {
              if (!hasExceptionsAfterHandlingTraps)
                goto LABEL_114;
              goto LABEL_149;
            }
          }
          else if ((v123 & 1) != 0)
          {
            goto LABEL_114;
          }
          v125 = BYTE2(v141);
          if (BYTE2(v141) == 3)
          {
            if (v142)
              goto LABEL_149;
            v126 = *(unsigned __int8 *)(v47 + 5);
            if (v126 == 61)
            {
LABEL_306:
              v128 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
              if (!v128)
                v128 = *(_QWORD *)(v47 + 16);
              goto LABEL_308;
            }
          }
          else
          {
            v126 = *(unsigned __int8 *)(v47 + 5);
            if (v126 == 61)
            {
              if (BYTE2(v141) == 1)
                goto LABEL_149;
              goto LABEL_304;
            }
          }
          if ((v126 - 39) <= 0xA)
          {
            if ((*(_BYTE *)(v47 + 40) & 7u) > 2)
            {
              LOBYTE(v147) = 0;
              v148 = 0;
              v130 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v47, (WTF *)&v147);
              if ((_BYTE)v20)
                v127 = v130;
              else
                v127 = 0;
            }
            else
            {
              v127 = *(_QWORD *)(v47 + 24);
            }
            if (v127 <= v120)
              goto LABEL_149;
            v125 = BYTE2(v141);
          }
LABEL_304:
          if ((*(_WORD *)(v122 + 12) & 0x800) == 0 || v125 == 3)
            goto LABEL_306;
          if ((*(_WORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            v128 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16
                                                                                * *(unsigned int *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE)
                                                                                                  + 0x4C)
                                                                                + 0xB0))(v47, a2);
          }
          else
          {
            v128 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
            if (!v128)
              v128 = *(_QWORD *)(v47 + 16);
          }
          if (*((_DWORD *)v121 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v121) & 1) != 0)
            goto LABEL_149;
LABEL_308:
          if ((v128 & 0xFFFE000000000002) == 0)
          {
            v47 = v128;
            if (*(unsigned __int8 *)(v128 + 5) > 0x16u)
              continue;
          }
          goto LABEL_149;
        }
      }
    }
LABEL_48:
    v37 = 0;
    v38 = 1;
    goto LABEL_150;
  }
  v9 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v9 + 36) > a3)
  {
    v10 = *(_DWORD **)(*(_QWORD *)(v9 + 24) + 8 * a3);
    v11 = v10 + 2;
    ++v10[2];
    v12 = WebCore::wrap<WebCore::DOMPlugin>(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), (WTF *)v10);
    if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    {
      OwnPropertySlotByIndex = 0;
    }
    else
    {
      *(_QWORD *)a4 = v12;
      *(_DWORD *)(a4 + 16) = 2;
      *(_QWORD *)(a4 + 32) = this;
      OwnPropertySlotByIndex = 1;
      *(_BYTE *)(a4 + 49) = 1;
    }
    WTF::RefCounted<WebCore::DOMPlugin>::deref(v11);
    return OwnPropertySlotByIndex;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

uint64_t WebCore::JSDOMPluginArray::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  int v6;
  int v7;
  uint64_t *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl **v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF *v45;
  WTF *v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF::StringImpl *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  uint64_t v66;
  uint64_t v67;
  WTF::StringImpl *v68;
  WTF *v70;
  unsigned int v71;
  WTF::StringImpl *v72[2];
  char v73;
  uint64_t v74;
  WTF::StringImpl *v75;

  v6 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 36);
  if (v6)
  {
    v7 = 0;
    v8 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v10 = v75;
      v70 = v75;
      v11 = *((_DWORD *)v75 + 4);
      if ((v11 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v75 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v12 = *a3;
      v13 = *(unsigned int *)(*a3 + 20);
      if (v13 <= 0x13)
      {
        if ((_DWORD)v13)
        {
          v14 = *(WTF::StringImpl ***)(v12 + 8);
          while (*v14 != v75)
          {
            ++v14;
            if (!--v13)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v11 & 0x20) != 0)
        {
          v35 = *(_DWORD *)v10 + 2;
        }
        else
        {
          if ((v11 & 0x10) != 0)
          {
            *(_DWORD *)v10 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v10 = v72[0];
          }
          v35 = *(_DWORD *)v10;
          *(_DWORD *)v10 += 2;
          if (!v35)
          {
            WTF::StringImpl::destroy(v10, v9);
LABEL_54:
            v36 = (uint64_t *)(v12 + 8);
            v72[0] = v10;
            v37 = *(unsigned int *)(v12 + 20);
            if ((_DWORD)v37 == *(_DWORD *)(v12 + 16))
            {
              v38 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v36, v37 + 1, (unint64_t)v72);
              v37 = *(unsigned int *)(v12 + 20);
              v39 = *(_QWORD *)(v12 + 8);
              v40 = *v38;
              *v38 = 0;
              *(_QWORD *)(v39 + 8 * v37) = v40;
            }
            else
            {
              v41 = *v36;
              v72[0] = 0;
              *(_QWORD *)(v41 + 8 * v37) = v10;
            }
            *(_DWORD *)(v12 + 20) = v37 + 1;
            v42 = v72[0];
            v72[0] = 0;
            if (v42)
            {
              if (*(_DWORD *)v42 == 2)
                WTF::StringImpl::destroy(v42, v9);
              else
                *(_DWORD *)v42 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v10 = v35;
        goto LABEL_54;
      }
      if (!*v8 || !*(_DWORD *)(*v8 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v70, (uint64_t)v72);
      if (v73)
      {
        v10 = v70;
        v12 = *a3;
        v11 = *((_DWORD *)v70 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v43 = v75;
      v75 = 0;
      if (v43)
      {
        if (*(_DWORD *)v43 == 2)
          WTF::StringImpl::destroy(v43, v9);
        else
          *(_DWORD *)v43 -= 2;
      }
      if (++v7 == v6)
        goto LABEL_69;
    }
    v15 = *(uint64_t **)(v12 + 8);
    v16 = &v15[v13];
    while (1)
    {
      v17 = *v15;
      v18 = *v8;
      if (*v8
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v18 = *v8) != 0))
      {
        v19 = *(_DWORD *)(v18 - 8);
      }
      else
      {
        v19 = 0;
      }
      v20 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
      v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
      v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
      v23 = v19 & ((v22 >> 31) ^ v22);
      v24 = (uint64_t *)(v18 + 8 * v23);
      v25 = *v24;
      if (*v24)
      {
        v26 = 0;
        v27 = 1;
        while (v25 != v17)
        {
          if (v25 == -1)
            v26 = v24;
          v23 = (v23 + v27) & v19;
          v24 = (uint64_t *)(v18 + 8 * v23);
          v25 = *v24;
          ++v27;
          if (!*v24)
          {
            if (v26)
            {
              *v26 = 0;
              --*(_DWORD *)(*v8 - 16);
              v24 = v26;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v24 = v17;
      v28 = *v8;
      v29 = *v8 ? *(_DWORD *)(v28 - 12) + 1 : 1;
      *(_DWORD *)(v28 - 12) = v29;
      v30 = *v8;
      v31 = *v8 ? *(_DWORD *)(v30 - 12) : 0;
      v32 = (*(_DWORD *)(v30 - 16) + v31);
      v33 = *(unsigned int *)(v30 - 4);
      if (v33 > 0x400)
        break;
      if (3 * v33 <= 4 * v32)
      {
        if ((_DWORD)v33)
          goto LABEL_43;
        v34 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v15 == v16)
        goto LABEL_17;
    }
    if (v33 > 2 * v32)
      goto LABEL_47;
LABEL_43:
    v34 = (_DWORD)v33 << (6 * *(_DWORD *)(v30 - 12) >= (2 * v33));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v34, v24);
    goto LABEL_47;
  }
LABEL_69:
  if (a4)
    return JSC::JSObject::getOwnPropertyNames();
  WebCore::DOMPluginArray::supportedPropertyNames(*(unsigned int **)(a1 + 24), (uint64_t)&v70);
  v45 = v70;
  if (!v71)
    goto LABEL_114;
  v46 = (WTF *)((char *)v70 + 8 * v71);
  v47 = a3 + 1;
  do
  {
    v48 = *(_QWORD *)v45;
    if (*(_QWORD *)v45)
      *(_DWORD *)v48 += 2;
    v75 = (WTF::StringImpl *)v48;
    v49 = *(_DWORD *)(v48 + 16);
    if ((v49 & 0x20) != 0)
    {
      if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v48 + 36) & 4) != 0)
        goto LABEL_105;
LABEL_80:
      v50 = *a3;
      v51 = *(unsigned int *)(*a3 + 20);
      if (v51 > 0x13)
      {
        if (!*v47 || !*(_DWORD *)(*v47 - 12))
        {
          v54 = *(uint64_t **)(v50 + 8);
          v55 = 8 * v51;
          do
          {
            v56 = *v54++;
            v74 = v56;
            WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, &v74, (uint64_t)v72);
            v55 -= 8;
          }
          while (v55);
        }
        WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v75, (uint64_t)v72);
        if (!v73)
          goto LABEL_104;
        v53 = v75;
        v50 = *a3;
        v49 = *((_DWORD *)v75 + 4);
        if ((v49 & 0x20) == 0)
          goto LABEL_86;
      }
      else
      {
        if ((_DWORD)v51)
        {
          v52 = *(_QWORD **)(v50 + 8);
          while (*v52 != v48)
          {
            ++v52;
            if (!--v51)
              goto LABEL_85;
          }
LABEL_104:
          if (!v48)
            goto LABEL_107;
          goto LABEL_105;
        }
LABEL_85:
        v53 = (WTF::StringImpl *)v48;
        if ((v49 & 0x20) == 0)
        {
LABEL_86:
          if ((v49 & 0x10) != 0)
          {
            *(_DWORD *)v53 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v53 = v72[0];
          }
          v57 = *(_DWORD *)v53;
          *(_DWORD *)v53 += 2;
          if (!v57)
          {
            WTF::StringImpl::destroy(v53, v44);
LABEL_98:
            v58 = (uint64_t *)(v50 + 8);
            v72[0] = v53;
            v59 = *(unsigned int *)(v50 + 20);
            if ((_DWORD)v59 == *(_DWORD *)(v50 + 16))
            {
              v60 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v58, v59 + 1, (unint64_t)v72);
              v59 = *(unsigned int *)(v50 + 20);
              v61 = *(_QWORD *)(v50 + 8);
              v62 = *v60;
              *v60 = 0;
              *(_QWORD *)(v61 + 8 * v59) = v62;
            }
            else
            {
              v63 = *v58;
              v72[0] = 0;
              *(_QWORD *)(v63 + 8 * v59) = v53;
            }
            *(_DWORD *)(v50 + 20) = v59 + 1;
            v64 = v72[0];
            v72[0] = 0;
            if (v64)
            {
              if (*(_DWORD *)v64 == 2)
              {
                WTF::StringImpl::destroy(v64, v44);
                if (!v48)
                  goto LABEL_107;
                goto LABEL_105;
              }
              *(_DWORD *)v64 -= 2;
            }
            goto LABEL_104;
          }
LABEL_97:
          *(_DWORD *)v53 = v57;
          goto LABEL_98;
        }
      }
      v57 = *(_DWORD *)v53 + 2;
      goto LABEL_97;
    }
    if ((a3[3] & 2) != 0)
      goto LABEL_80;
LABEL_105:
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v48, v44);
    else
      *(_DWORD *)v48 -= 2;
LABEL_107:
    v45 = (WTF *)((char *)v45 + 8);
  }
  while (v45 != v46);
  v45 = v70;
  if (v71)
  {
    v66 = 0;
    v67 = 8 * v71;
    do
    {
      v68 = *(WTF::StringImpl **)((char *)v45 + v66);
      *(_QWORD *)((char *)v45 + v66) = 0;
      if (v68)
      {
        if (*(_DWORD *)v68 == 2)
          WTF::StringImpl::destroy(v68, v44);
        else
          *(_DWORD *)v68 -= 2;
      }
      v66 += 8;
    }
    while (v67 != v66);
  }
LABEL_114:
  if (v45)
    WTF::fastFree(v45, v44);
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDOMPluginArray::defineOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5)
{
  unint64_t v6;
  JSC::VM *v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _WORD *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  int OwnPropertySlotByIndex;
  int v22;
  int v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned __int16 *v32;
  uint64_t v33;
  unsigned int v34;
  int OwnStaticPropertySlot;
  BOOL v36;
  int hasExceptionsAfterHandlingTraps;
  WebCore::DOMPluginArray *v38;
  const WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  int isSupportedPropertyName;
  unsigned __int8 *v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  JSC::VM *v53;
  const WTF::StringImpl *v54;

  v6 = a3;
  v8 = *(JSC::VM **)(a2 + 56);
  v53 = v8;
  if (a3)
  {
    v9 = *(_DWORD *)(a3 + 16);
    if ((v9 & 0x20) != 0)
      return JSC::JSObject::defineOwnProperty();
    v10 = *(_BYTE **)(a3 + 8);
    v11 = *(unsigned int *)(a3 + 4);
    if ((v9 & 4) != 0)
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *v10 - 48;
      if (v12 > 9 || v11 >= 2 && *v10 == 48)
        goto LABEL_8;
      v43 = v10 + 1;
      v44 = v11 - 1;
      while (v44)
      {
        if (v12 <= 0x19999999)
        {
          v45 = *v43 - 48;
          if (v45 <= 9)
          {
            v27 = __CFADD__(v45, 10 * v12);
            v12 = v45 + 10 * v12;
            ++v43;
            --v44;
            if (!v27)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *(unsigned __int16 *)v10 - 48;
      if (v12 > 9 || v11 >= 2 && *(_WORD *)v10 == 48)
        goto LABEL_8;
      v24 = (unsigned __int16 *)(v10 + 2);
      v25 = v11 - 1;
      while (v25)
      {
        if (v12 <= 0x19999999)
        {
          v26 = *v24 - 48;
          if (v26 <= 9)
          {
            v27 = __CFADD__(v26, 10 * v12);
            v12 = v26 + 10 * v12;
            ++v24;
            --v25;
            if (!v27)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v12 != -1)
    {
      if (a5)
        JSC::throwTypeError();
      return 0;
    }
  }
LABEL_8:
  v52 = *(_QWORD *)(a2 + 56);
  ++*((_DWORD *)v8 + 1);
  if ((a3 >> 4)
    && ((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) == 0
    && (v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v8)) != 0
    && (v54 = (const WTF::StringImpl *)v6, v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v54), (_DWORD)v14 != -1))
  {
    if ((int)v14 > 63)
    {
      v28 = *(_QWORD *)(a1 + 8) - 8;
      v29 = 0x3F00000000 - (v14 << 32);
    }
    else
    {
      v28 = a1 + 16;
      v29 = v14 << 32;
    }
    v30 = *(_QWORD *)(v28 + (v29 >> 29));
    if ((v30 & 0xFFFE000000000002) != 0)
      goto LABEL_40;
    v31 = *(unsigned __int8 *)(v30 + 5);
    if (v31 == 6)
    {
      OwnPropertySlotByIndex = 1;
      goto LABEL_24;
    }
    if (v31 != 5)
    {
LABEL_40:
      OwnPropertySlotByIndex = 1;
      goto LABEL_24;
    }
    JSC::JSObject::fillGetterPropertySlot();
    OwnPropertySlotByIndex = 1;
  }
  else
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
    {
      if (!v6)
        goto LABEL_23;
LABEL_14:
      v15 = *(_DWORD *)(v6 + 16);
      if ((v15 & 0x20) != 0)
        goto LABEL_23;
      v16 = *(_WORD **)(v6 + 8);
      v17 = *(unsigned int *)(v6 + 4);
      if ((v15 & 4) == 0)
      {
        if ((_DWORD)v17)
        {
          v18 = (unsigned __int16)*v16 - 48;
          if (v18 > 9 || v17 >= 2 && *v16 == 48)
          {
LABEL_20:
            v19 = 0;
            v20 = 0;
            LODWORD(v17) = 0;
          }
          else
          {
            v32 = v16 + 1;
            v33 = v17 - 1;
            while (v33)
            {
              if (v18 <= 0x19999999)
              {
                v34 = *v32 - 48;
                if (v34 <= 9)
                {
                  v27 = __CFADD__(v34, 10 * v18);
                  v18 = v34 + 10 * v18;
                  ++v32;
                  --v33;
                  if (!v27)
                    continue;
                }
              }
              goto LABEL_20;
            }
            v36 = v18 == -1;
            LODWORD(v17) = v18 & 0xFFFFFF00;
            v20 = v18;
            v19 = 0x100000000;
            if (v36)
            {
              v19 = 0;
              v20 = 0;
              LODWORD(v17) = 0;
            }
          }
        }
        else
        {
          v19 = 0;
          v20 = 0;
        }
        a3 = v17 | v20;
        if ((v19 & 0x100000000) == 0)
          goto LABEL_23;
        goto LABEL_92;
      }
      if ((_DWORD)v17)
      {
        v46 = *(unsigned __int8 *)v16 - 48;
        if (v46 <= 9 && (v17 < 2 || *(_BYTE *)v16 != 48))
        {
          v49 = (unsigned __int8 *)v16 + 1;
          v50 = v17 - 1;
          while (v50)
          {
            if (v46 > 0x19999999)
              goto LABEL_89;
            v51 = *v49 - 48;
            if (v51 > 9)
              goto LABEL_89;
            v47 = 0;
            LODWORD(v17) = 0;
            v48 = 0;
            v27 = __CFADD__(v51, 10 * v46);
            v46 = v51 + 10 * v46;
            ++v49;
            --v50;
            if (v27)
              goto LABEL_91;
          }
          v47 = 0x100000000;
          if (v46 == -1)
          {
            v47 = 0;
            LODWORD(v17) = 0;
          }
          else
          {
            LODWORD(v17) = v46;
          }
          if (v46 == -1)
            v48 = 0;
          else
            v48 = v46 & 0xFFFFFF00;
LABEL_91:
          a3 = v48 | v17;
          if ((v47 & 0x100000000) != 0)
          {
LABEL_92:
            OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
            goto LABEL_24;
          }
LABEL_23:
          OwnPropertySlotByIndex = 0;
          goto LABEL_24;
        }
LABEL_89:
        v47 = 0;
        LODWORD(v17) = 0;
      }
      else
      {
        v47 = 0;
      }
      v48 = 0;
      goto LABEL_91;
    }
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    OwnPropertySlotByIndex = OwnStaticPropertySlot;
    if (v6 && (OwnStaticPropertySlot & 1) == 0)
      goto LABEL_14;
  }
LABEL_24:
  v22 = *(_DWORD *)(v52 + 4);
  if (!v22)
  {
    __break(0xC471u);
    JUMPOUT(0x194997308);
  }
  *(_DWORD *)(v52 + 4) = v22 - 1;
  if (*((_DWORD *)v53 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v53);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v23 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_67;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v23 = 1;
    goto LABEL_67;
  }
  v38 = *(WebCore::DOMPluginArray **)(a1 + 24);
  if (v6)
  {
    *(_DWORD *)v6 += 2;
    v39 = (const WTF::StringImpl *)v6;
  }
  else
  {
    v39 = 0;
  }
  v54 = v39;
  isSupportedPropertyName = WebCore::DOMPluginArray::isSupportedPropertyName(v38, &v54, (const WTF::StringImpl *)a3);
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v40);
    else
      *(_DWORD *)v39 -= 2;
  }
  if ((isSupportedPropertyName & a5) == 1)
  {
    JSC::throwTypeError();
    v23 = 0;
  }
  else
  {
    v23 = isSupportedPropertyName ^ 1;
  }
LABEL_67:
  if (v23)
    return JSC::JSObject::defineOwnProperty();
  return 0;
}

uint64_t WebCore::JSDOMPluginArray::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPluginArray>,(WebCore::DOMConstructorID)757>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6056);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPluginArray>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPluginArray>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6056) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMPluginArray::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  const WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF *v17;
  _DWORD *v18;
  JSC::VM *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  unsigned int v27;
  unsigned __int16 *v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v31;
  unsigned __int16 *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t *v35;
  uint64_t v36;
  int v37;
  WTF *v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  WTF *v48;
  _DWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  _BYTE *v58;
  uint64_t v59;
  unsigned int v60;
  unsigned __int16 *v61;
  uint64_t j;
  unsigned int v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 *v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  _BYTE *v77;
  JSC::VM *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  _WORD *v87;
  uint64_t v88;
  unsigned int v89;
  unsigned __int16 *v90;
  uint64_t v91;
  unsigned int v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  uint64_t v99;
  int v100;
  _BYTE *v101;
  uint64_t v102;
  unsigned int v103;
  unsigned __int16 *v104;
  uint64_t v105;
  unsigned int v106;
  unsigned __int8 *v107;
  uint64_t v108;
  unsigned int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  int v114;
  _BYTE *v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  unsigned __int16 *v123;
  uint64_t v124;
  unsigned int v125;
  uint64_t OwnStaticPropertySlot;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  unint64_t v131;
  JSC::VM *v132;
  uint64_t v133;
  char v134;
  int v135;
  int v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  unsigned __int8 *v141;
  uint64_t i;
  unsigned int v143;
  unsigned __int8 *v144;
  uint64_t v145;
  unsigned int v146;
  JSC::VM *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  int v151;
  uint64_t v152;
  char v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  uint64_t v157;
  unsigned __int8 *v158;
  int v159;
  int v160;
  BOOL v161;
  const WTF::StringImpl *v162;
  const unsigned __int8 *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  JSC::VM *v172;
  uint64_t v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unint64_t v178;
  uint64_t v179;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v181;
  char v182;
  unsigned __int8 *v183;
  uint64_t v184;
  unsigned int v185;
  unint64_t v186;
  JSC::VM *v187;
  uint64_t v188;
  _DWORD *v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  char v196;
  JSC::VM *v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  const WTF::StringImpl *v201;
  char v202;
  uint64_t v203;

  v203 = *MEMORY[0x1E0C80C00];
  v9 = *(JSC::VM **)(a2 + 56);
  if (a3)
  {
    v10 = *(_DWORD *)(a3 + 16);
    if ((v10 & 0x20) != 0)
      goto LABEL_209;
    v11 = *(_BYTE **)(a3 + 8);
    v12 = *(unsigned int *)(a3 + 4);
    if ((v10 & 4) != 0)
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *v11 - 48;
      if (v13 > 9 || v12 >= 2 && *v11 == 48)
        goto LABEL_8;
      v44 = v11 + 1;
      v45 = v12 - 1;
      while (v45)
      {
        if (v13 <= 0x19999999)
        {
          v46 = *v44 - 48;
          if (v46 <= 9)
          {
            v31 = __CFADD__(v46, 10 * v13);
            v13 = v46 + 10 * v13;
            ++v44;
            --v45;
            if (!v31)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v12
        || (v13 = *(unsigned __int16 *)v11 - 48, v13 > 9)
        || v12 >= 2 && *(_WORD *)v11 == 48)
      {
LABEL_8:
        if ((a5 & 1) != 0)
          goto LABEL_209;
        v14 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)a3 += 2;
        v15 = (const WTF::StringImpl *)a3;
        goto LABEL_10;
      }
      v32 = (unsigned __int16 *)(v11 + 2);
      v33 = v12 - 1;
      while (v33)
      {
        if (v13 <= 0x19999999)
        {
          v34 = *v32 - 48;
          if (v34 <= 9)
          {
            v31 = __CFADD__(v34, 10 * v13);
            v13 = v34 + 10 * v13;
            ++v32;
            --v33;
            if (!v31)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v13 != -1)
    {
      v47 = *(_QWORD *)(a1 + 24);
      if (*(_DWORD *)(v47 + 36) <= v13)
      {
        if (!(a3 >> 4)
          || (v53 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v53 + 0x20)) != 0)
          || (v54 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), *(JSC::VM **)(a2 + 56))) == 0|| (v201 = (const WTF::StringImpl *)a3, v55 = JSC::PropertyTable::get(v54, (uint64_t *)&v201), v56 = v55, (_DWORD)v55 == -1))
        {
          if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
          {
            v57 = *(_DWORD *)(a3 + 16);
            if ((v57 & 0x20) != 0)
              return 0;
            v58 = *(_BYTE **)(a3 + 8);
            v59 = *(unsigned int *)(a3 + 4);
            if ((v57 & 4) != 0)
            {
              if (!(_DWORD)v59)
                return 0;
              v60 = *v58 - 48;
              if (v60 > 9 || v59 >= 2 && *v58 == 48)
                return 0;
              v141 = v58 + 1;
              for (i = v59 - 1; i; --i)
              {
                if (v60 > 0x19999999)
                  return 0;
                v143 = *v141 - 48;
                if (v143 > 9)
                  return 0;
                v51 = 0;
                v31 = __CFADD__(v143, 10 * v60);
                v60 = v143 + 10 * v60;
                ++v141;
                if (v31)
                  return v51;
              }
            }
            else
            {
              if (!(_DWORD)v59)
                return 0;
              v60 = *(unsigned __int16 *)v58 - 48;
              if (v60 > 9 || v59 >= 2 && *(_WORD *)v58 == 48)
                return 0;
              v61 = (unsigned __int16 *)(v58 + 2);
              for (j = v59 - 1; j; --j)
              {
                if (v60 > 0x19999999)
                  return 0;
                v63 = *v61 - 48;
                if (v63 > 9)
                  return 0;
                v51 = 0;
                v31 = __CFADD__(v63, 10 * v60);
                v60 = v63 + 10 * v60;
                ++v61;
                if (v31)
                  return v51;
              }
            }
            if (v60 == -1)
              return 0;
            return JSC::JSObject::getOwnPropertySlotByIndex();
          }
          return 1;
        }
        v64 = HIDWORD(v55);
        if ((int)v55 > 63)
        {
          v65 = *(_QWORD *)(a1 + 8) - 8;
          v66 = 0x3F00000000 - (v55 << 32);
        }
        else
        {
          v65 = a1 + 16;
          v66 = v55 << 32;
        }
        v67 = *(_QWORD *)(v65 + (v66 >> 29));
        if ((v67 & 0xFFFE000000000002) != 0)
          goto LABEL_233;
        v68 = *(unsigned __int8 *)(v67 + 5);
        if (v68 != 6)
        {
          if (v68 != 5)
          {
LABEL_233:
            *(_QWORD *)a4 = v67;
            *(_QWORD *)(a4 + 32) = a1;
            *(_DWORD *)(a4 + 16) = v64;
            *(_DWORD *)(a4 + 20) = v56;
            v51 = 1;
            *(_WORD *)(a4 + 48) = 257;
            return v51;
          }
          goto LABEL_257;
        }
        v69 = *(_DWORD *)(v53 + 16) & 3;
        v71 = *(_QWORD *)(v67 + 8);
        v70 = *(_QWORD *)(v67 + 16);
        if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v67 & 0xFFFFFFFE) + 0x4C))
        {
LABEL_254:
          v128 = *(_QWORD *)(v67 + 24);
          v127 = *(_QWORD *)(v67 + 32);
          *(_QWORD *)a4 = v71;
          *(_QWORD *)(a4 + 8) = v70;
          *(_DWORD *)(a4 + 16) = v64;
          *(_QWORD *)(a4 + 32) = a1;
          *(_BYTE *)(a4 + 49) = 3;
          v51 = 1;
          if (v69 != 2)
            *(_BYTE *)(a4 + 48) = 1;
          *(_BYTE *)(a4 + 51) = 1;
          *(_QWORD *)(a4 + 72) = v128;
          *(_QWORD *)(a4 + 80) = v127;
          return v51;
        }
        *(_QWORD *)a4 = v71;
        *(_QWORD *)(a4 + 8) = v70;
        *(_DWORD *)(a4 + 16) = HIDWORD(v55);
        *(_QWORD *)(a4 + 32) = a1;
        v51 = 1;
        *(_BYTE *)(a4 + 49) = 3;
        if (v69 == 2)
          return v51;
LABEL_260:
        *(_BYTE *)(a4 + 48) = 1;
        return v51;
      }
      v48 = *(WTF **)(*(_QWORD *)(v47 + 24) + 8 * v13);
      v49 = (_DWORD *)((char *)v48 + 8);
      ++*((_DWORD *)v48 + 2);
      v50 = WebCore::wrap<WebCore::DOMPlugin>(*(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v48);
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v51 = 0;
      }
      else
      {
        *(_QWORD *)a4 = v50;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = a1;
        v51 = 1;
        *(_BYTE *)(a4 + 49) = 1;
      }
      v52 = v49;
LABEL_245:
      WTF::RefCounted<WebCore::DOMPlugin>::deref(v52);
      return v51;
    }
    goto LABEL_8;
  }
  if ((a5 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
      return 0;
    return JSC::JSObject::getOwnStaticPropertySlot();
  }
  v15 = 0;
  v14 = *(_QWORD *)(a1 + 24);
LABEL_10:
  v201 = v15;
  WebCore::DOMPluginArray::namedItem(v14, &v201, (const WTF::StringImpl *)a3, &v189);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  v17 = (WTF *)v189;
  if (!v189)
    goto LABEL_209;
  v18 = v189 + 2;
  ++v189[2];
  WTF::RefCounted<WebCore::DOMPlugin>::deref(v18);
  v19 = *(JSC::VM **)(a2 + 56);
  v191 = 0xFFFFFFFF00000000;
  v193 = 0;
  v194 = 0;
  v192 = a1;
  v195 = 196608;
  v196 = 0;
  v199 = 0;
  v200 = 0;
  v197 = v19;
  ++*((_DWORD *)v19 + 1);
  v198 = 1;
  v20 = a3 >> 4;
  if ((a3 >> 4))
  {
    v21 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v20 & ~*(_DWORD *)(v21 + 0x20)) == 0)
    {
      v22 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v19);
      if (v22)
      {
        v201 = (const WTF::StringImpl *)a3;
        v23 = JSC::PropertyTable::get(v22, (uint64_t *)&v201);
        if ((_DWORD)v23 != -1)
        {
          v35 = (uint64_t *)(a1 + 8 * (int)v23 + 16);
          if ((int)v23 >= 64)
            v35 = (uint64_t *)(*(_QWORD *)(a1 + 8) + ((uint64_t)(0x3F00000000 - (v23 << 32)) >> 29) - 8);
          v36 = *v35;
          if ((*v35 & 0xFFFE000000000002) != 0)
            goto LABEL_45;
          v37 = *(unsigned __int8 *)(v36 + 5);
          if (v37 == 6)
          {
            v40 = *(_DWORD *)(v21 + 16) & 3;
            v41 = *(_QWORD *)(v36 + 16);
            if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v36 & 0xFFFFFFFE) + 0x4C))
            {
              v189 = *(_DWORD **)(v36 + 8);
              v190 = v41;
              LODWORD(v191) = HIDWORD(v23);
              v193 = a1;
              v39 = 1;
              BYTE1(v195) = 3;
              v38 = 0;
              if (v40 != 2)
                LOBYTE(v195) = 1;
              goto LABEL_203;
            }
            v43 = *(_QWORD *)(v36 + 24);
            v42 = *(_QWORD *)(v36 + 32);
            v189 = *(_DWORD **)(v36 + 8);
            v190 = v41;
            LODWORD(v191) = HIDWORD(v23);
            v193 = a1;
            BYTE1(v195) = 3;
            if (v40 == 2)
              goto LABEL_165;
            goto LABEL_51;
          }
          if (v37 != 5)
          {
LABEL_45:
            v38 = 0;
            v189 = (_DWORD *)v36;
            v193 = a1;
            v191 = __PAIR64__(v23, HIDWORD(v23));
            v39 = 1;
            LOWORD(v195) = 257;
            goto LABEL_203;
          }
          JSC::JSObject::fillGetterPropertySlot();
          goto LABEL_54;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_54;
  if (a3)
  {
    v24 = *(_DWORD *)(a3 + 16);
    if ((v24 & 0x20) == 0)
    {
      v25 = *(_BYTE **)(a3 + 8);
      v26 = *(unsigned int *)(a3 + 4);
      if ((v24 & 4) != 0)
      {
        if ((_DWORD)v26)
        {
          v27 = *v25 - 48;
          if (v27 <= 9 && (v26 < 2 || *v25 != 48))
          {
            v73 = v25 + 1;
            v74 = v26 - 1;
            while (v74)
            {
              if (v27 <= 0x19999999)
              {
                v75 = *v73 - 48;
                if (v75 <= 9)
                {
                  v31 = __CFADD__(v75, 10 * v27);
                  v27 = v75 + 10 * v27;
                  ++v73;
                  --v74;
                  if (!v31)
                    continue;
                }
              }
              goto LABEL_122;
            }
LABEL_121:
            if (v27 == -1 || (JSC::JSObject::getOwnPropertySlotByIndex() & 1) == 0)
              goto LABEL_122;
LABEL_54:
            v38 = 0;
            v39 = 1;
            goto LABEL_203;
          }
        }
      }
      else if ((_DWORD)v26)
      {
        v27 = *(unsigned __int16 *)v25 - 48;
        if (v27 <= 9 && (v26 < 2 || *(_WORD *)v25 != 48))
        {
          v28 = (unsigned __int16 *)(v25 + 2);
          v29 = v26 - 1;
          while (v29)
          {
            if (v27 <= 0x19999999)
            {
              v30 = *v28 - 48;
              if (v30 <= 9)
              {
                v31 = __CFADD__(v30, 10 * v27);
                v27 = v30 + 10 * v27;
                ++v28;
                --v29;
                if (!v31)
                  continue;
              }
            }
            goto LABEL_122;
          }
          goto LABEL_121;
        }
      }
    }
  }
LABEL_122:
  v187 = v9;
  v188 = a4;
  v76 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x30);
  if (!v76)
    v76 = *(_QWORD *)(a1 + 16);
  if ((v76 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v76 + 5) < 0x17u)
    goto LABEL_201;
  v77 = (_BYTE *)(v76 + 6);
  if ((*(_BYTE *)(v76 + 6) & 8) == 0)
  {
    v78 = *(JSC::VM **)(a2 + 56);
    v79 = v76;
    while (1)
    {
      v80 = *(_DWORD *)v79 & 0xFFFFFFFE;
      v81 = 16 * v80;
      if ((_DWORD)v20)
      {
        if ((v20 & ~*(_DWORD *)(16 * v80 + 0x20)) == 0)
        {
          v82 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v81, v78);
          if (v82)
          {
            v201 = (const WTF::StringImpl *)a3;
            v83 = JSC::PropertyTable::get(v82, (uint64_t *)&v201);
            v84 = v83;
            if ((_DWORD)v83 != -1)
              break;
          }
        }
      }
      if ((*v77 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_167;
      v85 = *(_QWORD *)(v81 + 48);
      if (!v85)
        v85 = *(_QWORD *)(v79 + 16);
      if ((v85 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v85 + 5) < 0x17u)
      {
        if (!a3)
          goto LABEL_201;
        v86 = *(_DWORD *)(a3 + 16);
        if ((v86 & 0x20) != 0)
          goto LABEL_201;
        v87 = *(_WORD **)(a3 + 8);
        v88 = *(unsigned int *)(a3 + 4);
        if ((v86 & 4) == 0)
        {
          if ((_DWORD)v88)
          {
            v89 = (unsigned __int16)*v87 - 48;
            if (v89 <= 9 && (v88 < 2 || *v87 != 48))
            {
              v90 = v87 + 1;
              v91 = v88 - 1;
              while (v91)
              {
                if (v89 <= 0x19999999)
                {
                  v92 = *v90 - 48;
                  if (v92 <= 9)
                  {
                    v31 = __CFADD__(v92, 10 * v89);
                    v89 = v92 + 10 * v89;
                    ++v90;
                    --v91;
                    if (!v31)
                      continue;
                  }
                }
                goto LABEL_201;
              }
              goto LABEL_200;
            }
          }
          goto LABEL_201;
        }
        if (!(_DWORD)v88)
          goto LABEL_201;
        v89 = *(unsigned __int8 *)v87 - 48;
        if (v89 > 9 || v88 >= 2 && *(_BYTE *)v87 == 48)
          goto LABEL_201;
        v107 = (unsigned __int8 *)v87 + 1;
        v108 = v88 - 1;
        while (v108)
        {
          if (v89 <= 0x19999999)
          {
            v109 = *v107 - 48;
            if (v109 <= 9)
            {
              v31 = __CFADD__(v109, 10 * v89);
              v89 = v109 + 10 * v89;
              ++v107;
              --v108;
              if (!v31)
                continue;
            }
          }
          goto LABEL_201;
        }
LABEL_200:
        if (v89 == -1)
        {
LABEL_201:
          v39 = 0;
          v38 = v17;
          v17 = 0;
          goto LABEL_202;
        }
        v131 = v89;
        v132 = *(JSC::VM **)(a2 + 56);
        while (2)
        {
          v133 = 16 * (*(_DWORD *)v76 & 0xFFFFFFFE);
          v134 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, _DWORD **))(16
                                                                                          * *(unsigned int *)(v133 + 0x4C)
                                                                                          + 0x70))(v76, a2, v131, &v189);
          if (*((_DWORD *)v132 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v132) & 1) != 0)
            goto LABEL_201;
          if ((v134 & 1) != 0)
            goto LABEL_167;
          v135 = BYTE2(v195);
          if (BYTE2(v195) == 3)
          {
            if (v196)
              goto LABEL_201;
            v136 = *(unsigned __int8 *)(v76 + 5);
            if (v136 != 61)
              goto LABEL_280;
            goto LABEL_287;
          }
          v136 = *(unsigned __int8 *)(v76 + 5);
          if (v136 == 61)
          {
            if (BYTE2(v195) == 1)
              goto LABEL_201;
          }
          else
          {
LABEL_280:
            if ((v136 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v76 + 40) & 7u) > 2)
              {
                LOBYTE(v201) = 0;
                v202 = 0;
                v139 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v76, (WTF *)&v201);
                if (v140)
                  v137 = v139;
                else
                  v137 = 0;
              }
              else
              {
                v137 = *(_QWORD *)(v76 + 24);
              }
              if (v137 <= v131)
                goto LABEL_201;
              v135 = BYTE2(v195);
            }
          }
          if ((*(_WORD *)(v133 + 12) & 0x800) != 0 && v135 != 3)
          {
            if ((*(_WORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v138 = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                                 * *(unsigned int *)(16
                                                                                   * (*(_DWORD *)v76 & 0xFFFFFFFE)
                                                                                   + 0x4C)
                                                                 + 0xB0))(v76, a2);
            }
            else
            {
              v138 = *(_QWORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0x30);
              if (!v138)
                v138 = *(_QWORD *)(v76 + 16);
            }
            if (*((_DWORD *)v132 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v132) & 1) != 0)
              goto LABEL_201;
          }
          else
          {
LABEL_287:
            v138 = *(_QWORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0x30);
            if (!v138)
              v138 = *(_QWORD *)(v76 + 16);
          }
          if ((v138 & 0xFFFE000000000002) != 0)
            goto LABEL_201;
          v76 = v138;
          if (*(unsigned __int8 *)(v138 + 5) <= 0x16u)
            goto LABEL_201;
          continue;
        }
      }
      v77 = (_BYTE *)(v85 + 6);
      v79 = v85;
      if ((*(_BYTE *)(v85 + 6) & 8) != 0)
        goto LABEL_169;
    }
    v93 = HIDWORD(v83);
    if ((int)v83 > 63)
    {
      v94 = *(_QWORD *)(v79 + 8) - 8;
      v95 = 0x3F00000000 - (v83 << 32);
    }
    else
    {
      v94 = v79 + 16;
      v95 = v83 << 32;
    }
    v96 = *(_QWORD *)(v94 + (v95 >> 29));
    if ((v96 & 0xFFFE000000000002) != 0)
      goto LABEL_160;
    v97 = *(unsigned __int8 *)(v96 + 5);
    if (v97 != 6)
    {
      if (v97 == 5)
        goto LABEL_166;
LABEL_160:
      v38 = 0;
      v189 = (_DWORD *)v96;
      v193 = v79;
LABEL_161:
      v191 = __PAIR64__(v84, v93);
      v39 = 1;
      LOWORD(v195) = 257;
      goto LABEL_202;
    }
    v98 = *(_DWORD *)(v81 + 16) & 3;
    v99 = *(_QWORD *)(v96 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v96 & 0xFFFFFFFE) + 0x4C))
    {
      v43 = *(_QWORD *)(v96 + 24);
      v42 = *(_QWORD *)(v96 + 32);
      v189 = *(_DWORD **)(v96 + 8);
      v190 = v99;
      LODWORD(v191) = HIDWORD(v83);
      v193 = v79;
      BYTE1(v195) = 3;
      v9 = v187;
      a4 = v188;
      if (v98 == 2)
      {
LABEL_165:
        v38 = 0;
        v39 = 1;
        goto LABEL_52;
      }
LABEL_51:
      v38 = 0;
      v39 = 1;
      LOBYTE(v195) = 1;
LABEL_52:
      HIBYTE(v195) = 1;
      v199 = v43;
      v200 = v42;
      goto LABEL_203;
    }
    v189 = *(_DWORD **)(v96 + 8);
    v190 = v99;
    LODWORD(v191) = HIDWORD(v83);
    v193 = v79;
LABEL_184:
    v39 = 1;
    BYTE1(v195) = 3;
    v38 = 0;
    if (v98 != 2)
      LOBYTE(v195) = 1;
    goto LABEL_202;
  }
  v85 = v76;
LABEL_169:
  if (!a3)
    goto LABEL_330;
  v100 = *(_DWORD *)(a3 + 16);
  if ((v100 & 0x20) != 0)
    goto LABEL_330;
  v101 = *(_BYTE **)(a3 + 8);
  v102 = *(unsigned int *)(a3 + 4);
  if ((v100 & 4) != 0)
  {
    if (!(_DWORD)v102)
      goto LABEL_330;
    v103 = *v101 - 48;
    if (v103 > 9 || v102 >= 2 && *v101 == 48)
      goto LABEL_330;
    v144 = v101 + 1;
    v145 = v102 - 1;
    while (v145)
    {
      if (v103 <= 0x19999999)
      {
        v146 = *v144 - 48;
        if (v146 <= 9)
        {
          v31 = __CFADD__(v146, 10 * v103);
          v103 = v146 + 10 * v103;
          ++v144;
          --v145;
          if (!v31)
            continue;
        }
      }
      goto LABEL_330;
    }
  }
  else
  {
    if (!(_DWORD)v102)
      goto LABEL_330;
    v103 = *(unsigned __int16 *)v101 - 48;
    if (v103 > 9 || v102 >= 2 && *(_WORD *)v101 == 48)
      goto LABEL_330;
    v104 = (unsigned __int16 *)(v101 + 2);
    v105 = v102 - 1;
    while (v105)
    {
      if (v103 <= 0x19999999)
      {
        v106 = *v104 - 48;
        if (v106 <= 9)
        {
          v31 = __CFADD__(v106, 10 * v103);
          v103 = v106 + 10 * v103;
          ++v104;
          --v105;
          if (!v31)
            continue;
        }
      }
      goto LABEL_330;
    }
  }
  if (v103 != -1)
  {
    v171 = v103;
    v172 = *(JSC::VM **)(a2 + 56);
    while (1)
    {
      v173 = 16 * (*(_DWORD *)v76 & 0xFFFFFFFE);
      v174 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, _DWORD **))(16
                                                                                      * *(unsigned int *)(v173 + 0x4C)
                                                                                      + 0x70))(v76, a2, v171, &v189);
      v175 = v174;
      if (*((_DWORD *)v172 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v172);
        if (((hasExceptionsAfterHandlingTraps | v175) & 1) != 0)
        {
          if (!hasExceptionsAfterHandlingTraps)
            goto LABEL_167;
          goto LABEL_201;
        }
      }
      else if ((v174 & 1) != 0)
      {
        goto LABEL_167;
      }
      v176 = BYTE2(v195);
      if (BYTE2(v195) == 3)
      {
        if (v196)
          goto LABEL_201;
        v177 = *(unsigned __int8 *)(v76 + 5);
        if (v177 == 61)
        {
LABEL_425:
          v179 = *(_QWORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0x30);
          if (!v179)
            v179 = *(_QWORD *)(v76 + 16);
          goto LABEL_427;
        }
      }
      else
      {
        v177 = *(unsigned __int8 *)(v76 + 5);
        if (v177 == 61)
        {
          if (BYTE2(v195) == 1)
            goto LABEL_201;
          goto LABEL_423;
        }
      }
      if ((v177 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v76 + 40) & 7u) > 2)
        {
          LOBYTE(v201) = 0;
          v202 = 0;
          v181 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v76, (WTF *)&v201);
          if (v182)
            v178 = v181;
          else
            v178 = 0;
        }
        else
        {
          v178 = *(_QWORD *)(v76 + 24);
        }
        if (v178 <= v171)
          goto LABEL_201;
        v176 = BYTE2(v195);
      }
LABEL_423:
      if ((*(_WORD *)(v173 + 12) & 0x800) == 0 || v176 == 3)
        goto LABEL_425;
      if ((*(_WORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        v179 = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE)
                                                                             + 0x4C)
                                                           + 0xB0))(v76, a2);
      }
      else
      {
        v179 = *(_QWORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0x30);
        if (!v179)
          v179 = *(_QWORD *)(v76 + 16);
      }
      if (*((_DWORD *)v172 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v172) & 1) != 0)
        goto LABEL_201;
LABEL_427:
      if ((v179 & 0xFFFE000000000002) == 0)
      {
        v76 = v179;
        if (*(unsigned __int8 *)(v179 + 5) > 0x16u)
          continue;
      }
      goto LABEL_201;
    }
  }
LABEL_330:
  v147 = *(JSC::VM **)(a2 + 56);
  while (1)
  {
    v148 = 16 * (*(_DWORD *)v85 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v85 + 6) & 8) != 0)
    {
      v153 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, _DWORD **))(16
                                                                                      * *(unsigned int *)(16 * (*(_DWORD *)v85 & 0xFFFFFFFE) + 0x4C)
                                                                                      + 0x68))(v85, a2, a3, &v189);
      if (*((_DWORD *)v147 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v147) & 1) != 0)
        goto LABEL_201;
      if ((v153 & 1) != 0)
        goto LABEL_167;
      if (BYTE2(v195) == 3)
      {
        if (v196)
          goto LABEL_201;
        v154 = *(unsigned __int8 *)(v85 + 5);
        if (v154 == 61)
          goto LABEL_337;
      }
      else
      {
        v154 = *(unsigned __int8 *)(v85 + 5);
        if (v154 == 61)
        {
          if (BYTE2(v195) == 1)
            goto LABEL_201;
          goto LABEL_337;
        }
      }
      if (!a3)
        goto LABEL_337;
      if ((v154 - 50) < 0xFFFFFFF5)
        goto LABEL_337;
      v156 = *(_DWORD *)(a3 + 16);
      if ((v156 & 0x20) != 0)
        goto LABEL_337;
      v157 = *(unsigned int *)(a3 + 4);
      if (!(_DWORD)v157)
        goto LABEL_337;
      v158 = *(unsigned __int8 **)(a3 + 8);
      if ((v156 & 4) != 0)
      {
        v159 = *v158;
        if ((_DWORD)v157 == 1)
        {
LABEL_373:
          if ((v159 - 48) < 0xA)
            goto LABEL_201;
          goto LABEL_337;
        }
        if (v159 == 45)
        {
          v160 = v158[1];
          goto LABEL_377;
        }
      }
      else
      {
        v159 = *(unsigned __int16 *)v158;
        if ((_DWORD)v157 == 1)
          goto LABEL_373;
        if (v159 == 45)
        {
          v160 = *((unsigned __int16 *)v158 + 1);
LABEL_377:
          if ((v160 - 48) < 0xA)
          {
            if ((_DWORD)v157 == 2)
              goto LABEL_201;
LABEL_389:
            v186 = v186 & 0xFFFFFF0000000000 | v157 | ((unint64_t)((v156 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v162 = (const WTF::StringImpl *)WTF::numberToString();
            if ((WTF::equal((WTF *)a3, v162, v163) & 1) != 0)
              goto LABEL_201;
            goto LABEL_337;
          }
          if ((_DWORD)v157 != 9)
            goto LABEL_337;
          v161 = v160 == 73;
LABEL_387:
          if (!v161)
            goto LABEL_337;
          goto LABEL_389;
        }
      }
      if ((v159 - 48) < 0xA || (_DWORD)v157 == 8 && v159 == 73)
        goto LABEL_389;
      if ((_DWORD)v157 != 3)
        goto LABEL_337;
      v161 = v159 == 78;
      goto LABEL_387;
    }
    if ((_DWORD)v20)
    {
      if ((v20 & ~*(_DWORD *)(16 * (*(_DWORD *)v85 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v149 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v85 & 0xFFFFFFFE)), v147);
        if (v149)
        {
          v201 = (const WTF::StringImpl *)a3;
          v150 = JSC::PropertyTable::get(v149, (uint64_t *)&v201);
          v84 = v150;
          if ((_DWORD)v150 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v85 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_167;
LABEL_337:
    if ((*(_WORD *)(v148 + 12) & 0x800) == 0)
    {
      v151 = *(_DWORD *)v85;
LABEL_339:
      v152 = *(_QWORD *)(16 * (v151 & 0xFFFFFFFE) + 0x30);
      if (!v152)
        v152 = *(_QWORD *)(v85 + 16);
      goto LABEL_341;
    }
    v151 = *(_DWORD *)v85;
    if (BYTE2(v195) == 3)
      goto LABEL_339;
    v155 = 16 * (v151 & 0xFFFFFFFE);
    if ((*(_WORD *)(v155 + 12) & 0x800) != 0)
    {
      v152 = (*(uint64_t (**)(uint64_t, uint64_t))(16 * *(unsigned int *)(v155 + 76) + 0xB0))(v85, a2);
    }
    else
    {
      v152 = *(_QWORD *)(v155 + 48);
      if (!v152)
        v152 = *(_QWORD *)(v85 + 16);
    }
    if (*((_DWORD *)v147 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v147) & 1) != 0)
      goto LABEL_201;
LABEL_341:
    if ((v152 & 0xFFFE000000000002) == 0)
    {
      v85 = v152;
      if (*(unsigned __int8 *)(v152 + 5) > 0x16u)
        continue;
    }
    goto LABEL_201;
  }
  v93 = HIDWORD(v150);
  if ((int)v150 > 63)
  {
    v164 = *(_QWORD *)(v85 + 8) - 8;
    v165 = 0x3F00000000 - (v150 << 32);
  }
  else
  {
    v164 = v85 + 16;
    v165 = v150 << 32;
  }
  v166 = *(_QWORD *)(v164 + (v165 >> 29));
  if ((v166 & 0xFFFE000000000002) != 0)
  {
LABEL_399:
    v38 = 0;
    v189 = (_DWORD *)v166;
    v193 = v85;
    goto LABEL_161;
  }
  v167 = *(unsigned __int8 *)(v166 + 5);
  if (v167 == 6)
  {
    v98 = *(_DWORD *)(v148 + 16) & 3;
    v168 = *(_QWORD *)(v166 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v166 & 0xFFFFFFFE) + 0x4C))
    {
      v170 = *(_QWORD *)(v166 + 24);
      v169 = *(_QWORD *)(v166 + 32);
      v189 = *(_DWORD **)(v166 + 8);
      v190 = v168;
      LODWORD(v191) = HIDWORD(v150);
      v193 = v85;
      BYTE1(v195) = 3;
      v38 = 0;
      v39 = 1;
      if (v98 != 2)
        LOBYTE(v195) = 1;
      HIBYTE(v195) = 1;
      v199 = v170;
      v200 = v169;
      goto LABEL_202;
    }
    v189 = *(_DWORD **)(v166 + 8);
    v190 = v168;
    LODWORD(v191) = HIDWORD(v150);
    v193 = v85;
    goto LABEL_184;
  }
  if (v167 != 5)
    goto LABEL_399;
LABEL_166:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_167:
  v38 = 0;
  v39 = 1;
LABEL_202:
  v9 = v187;
  a4 = v188;
LABEL_203:
  if (v198)
  {
    v110 = *((_DWORD *)v197 + 1);
    if (!v110)
    {
      __break(0xC471u);
      JUMPOUT(0x194998420);
    }
    *((_DWORD *)v197 + 1) = v110 - 1;
  }
  if (v17)
    WTF::RefCounted<WebCore::DOMPlugin>::deref((_DWORD *)v17 + 2);
  if ((v39 & 1) == 0)
  {
    if (v38)
      v119 = WebCore::wrap<WebCore::DOMPlugin>(*(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v38);
    else
      v119 = 2;
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    {
      v51 = 0;
      if (!v38)
        return v51;
    }
    else
    {
      *(_QWORD *)a4 = v119;
      *(_DWORD *)(a4 + 16) = 6;
      *(_QWORD *)(a4 + 32) = a1;
      v51 = 1;
      *(_BYTE *)(a4 + 49) = 1;
      if (!v38)
        return v51;
    }
    v52 = (_DWORD *)((char *)v38 + 8);
    goto LABEL_245;
  }
LABEL_209:
  if ((a3 >> 4))
  {
    v111 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v111 + 0x20)) == 0)
    {
      v112 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), *(JSC::VM **)(a2 + 56));
      if (v112)
      {
        v201 = (const WTF::StringImpl *)a3;
        v113 = JSC::PropertyTable::get(v112, (uint64_t *)&v201);
        v56 = v113;
        if ((_DWORD)v113 != -1)
        {
          v64 = HIDWORD(v113);
          if ((int)v113 > 63)
          {
            v120 = *(_QWORD *)(a1 + 8) - 8;
            v121 = 0x3F00000000 - (v113 << 32);
          }
          else
          {
            v120 = a1 + 16;
            v121 = v113 << 32;
          }
          v67 = *(_QWORD *)(v120 + (v121 >> 29));
          if ((v67 & 0xFFFE000000000002) != 0)
            goto LABEL_233;
          v122 = *(unsigned __int8 *)(v67 + 5);
          if (v122 != 6)
          {
            if (v122 != 5)
              goto LABEL_233;
LABEL_257:
            JSC::JSObject::fillGetterPropertySlot();
            return 1;
          }
          v69 = *(_DWORD *)(v111 + 16) & 3;
          v71 = *(_QWORD *)(v67 + 8);
          v70 = *(_QWORD *)(v67 + 16);
          if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v67 & 0xFFFFFFFE) + 0x4C))
            goto LABEL_254;
          *(_QWORD *)a4 = v71;
          *(_QWORD *)(a4 + 8) = v70;
          *(_DWORD *)(a4 + 16) = HIDWORD(v113);
          *(_QWORD *)(a4 + 32) = a1;
          v51 = 1;
          *(_BYTE *)(a4 + 49) = 3;
          if (v69 == 2)
            return v51;
          goto LABEL_260;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    v51 = OwnStaticPropertySlot;
    if (!a3 || (OwnStaticPropertySlot & 1) != 0)
      return v51;
LABEL_215:
    v114 = *(_DWORD *)(a3 + 16);
    if ((v114 & 0x20) != 0)
      return 0;
    v115 = *(_BYTE **)(a3 + 8);
    v116 = *(unsigned int *)(a3 + 4);
    if ((v114 & 4) != 0)
    {
      if ((_DWORD)v116)
      {
        v129 = *v115 - 48;
        if (v129 > 9 || v116 >= 2 && *v115 == 48)
        {
LABEL_267:
          v130 = 0;
        }
        else
        {
          v183 = v115 + 1;
          v184 = v116 - 1;
          while (v184)
          {
            if (v129 > 0x19999999)
              goto LABEL_267;
            v185 = *v183 - 48;
            if (v185 > 9)
              goto LABEL_267;
            v130 = 0;
            v31 = __CFADD__(v185, 10 * v129);
            v129 = v185 + 10 * v129;
            ++v183;
            --v184;
            if (v31)
              goto LABEL_268;
          }
          v130 = 0x100000000;
          if (v129 == -1)
            v130 = 0;
        }
      }
      else
      {
        v130 = 0;
      }
LABEL_268:
      if ((v130 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v116)
      {
        v117 = *(unsigned __int16 *)v115 - 48;
        if (v117 > 9 || v116 >= 2 && *(_WORD *)v115 == 48)
        {
LABEL_221:
          v118 = 0;
        }
        else
        {
          v123 = (unsigned __int16 *)(v115 + 2);
          v124 = v116 - 1;
          while (v124)
          {
            if (v117 <= 0x19999999)
            {
              v125 = *v123 - 48;
              if (v125 <= 9)
              {
                v31 = __CFADD__(v125, 10 * v117);
                v117 = v125 + 10 * v117;
                ++v123;
                --v124;
                if (!v31)
                  continue;
              }
            }
            goto LABEL_221;
          }
          v161 = v117 == -1;
          v118 = 0x100000000;
          if (v161)
            v118 = 0;
        }
      }
      else
      {
        v118 = 0;
      }
      if ((v118 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if (a3)
    goto LABEL_215;
  return 0;
}

unint64_t WebCore::jsDOMPluginArrayConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMPluginArrayPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMPluginArray>,(WebCore::DOMConstructorID)757>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMPluginArray_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 36);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDOMPluginArray::subspaceForImpl(WebCore::JSDOMPluginArray *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 6136);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 6136))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 6136);
    *(_QWORD *)(v9 + 6136) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSDOMPluginArray::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMPluginArrayOwner::isReachableFromOpaqueRoots(int a1, uint64_t a2, int a3, JSC::AbstractSlotVisitor *this, _QWORD *a5)
{
  uint64_t v5;
  void *v6;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  return JSC::AbstractSlotVisitor::containsOpaqueRoot(this, v6);
}

void WebCore::JSDOMPluginArrayOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  _DWORD *v4;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  v4 = v3 + 2;
  ++v3[2];
  if (*(_DWORD *)(a3 + 48))
  {
    JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), (uint64_t)v3);
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  WTF::RefCounted<WebCore::DOMPluginArray>::deref(v4);
}

uint64_t WebCore::createWrapper<WebCore::DOMPluginArray,WebCore::DOMPluginArray>(uint64_t a1, uint64_t *a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)*a2;
  v5 = WebCore::getDOMStructure<WebCore::JSDOMPluginArray>(*(WebCore::JSDOMPluginArray **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSDOMPluginArray::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::DOMPluginArray,WebCore::JSDOMPluginArray>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSDOMPoint>::construct(WebCore *a1, uint64_t a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(int *)(a2 + 32) - 1;
  if (v3 >= 4)
    v3 = 4;
  switch(v3)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_4;
    case 1uLL:
      v5 = *(_QWORD *)(a2 + 48);
      if (v5 == 10
        || (v5 & 0xFFFFFFFFFFFFFFF7) != 2
        && ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) < 0x17u))
      {
LABEL_4:
        result = (uint64_t)WebCore::constructJSDOMPoint2(a1, (JSC::JSGlobalObject *)a2, a3);
      }
      else
      {
        result = (uint64_t)WebCore::constructJSDOMPoint1(a1, (JSC::JSGlobalObject *)a2, a3);
      }
      break;
    default:
      result = JSC::throwTypeError();
      break;
  }
  return result;
}

JSCell *WebCore::constructJSDOMPoint2(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  unint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  unint64_t v17;
  JSC::VM *v18;
  JSCell *v19;
  WebCore::JSDOMGlobalObject *v20;
  uint64_t v21;
  JSC::VM *v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char **v29;
  int v30;
  unint64_t v31;
  WebCore::JSDOMPoint *v32;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  void *v35;
  bmalloc::api *v36;
  double v38;
  double v39;
  double v40;
  double v41;
  bmalloc::api *v42;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v6 = *((_QWORD *)a2 + 3);
  LODWORD(v7) = *((_DWORD *)a2 + 8);
  v8 = 1.0;
  if ((_DWORD)v7 == 1)
  {
    v14 = 0.0;
    v11 = 0.0;
    v10 = 0.0;
  }
  else
  {
    v9 = *((_QWORD *)a2 + 6);
    v10 = 0.0;
    v11 = 0.0;
    if (v9 != 10)
    {
      v42 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v9 >= 0xFFFE000000000000)
      {
        v11 = (double)(int)v9;
      }
      else if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v42, this);
        v11 = v38;
      }
      else
      {
        *(_QWORD *)&v11 = v9 - 0x2000000000000;
      }
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
        return 0;
      LODWORD(v7) = *((_DWORD *)a2 + 8);
    }
    v7 = (int)v7;
    if ((unint64_t)((int)v7 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v12 = *((_QWORD *)a2 + 7);
      if (v12 != 10)
      {
        v42 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v13 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v12 >= 0xFFFE000000000000)
        {
          v10 = (double)(int)v12;
        }
        else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v42, this);
          v10 = v39;
        }
        else
        {
          *(_QWORD *)&v10 = v12 - 0x2000000000000;
        }
        if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
          return 0;
        v7 = *((int *)a2 + 8);
      }
    }
    v14 = 0.0;
    if ((unint64_t)(v7 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v15 = *((_QWORD *)a2 + 8);
      if (v15 != 10)
      {
        v42 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v16 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v15 >= 0xFFFE000000000000)
        {
          v14 = (double)(int)v15;
        }
        else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v42, this);
          v14 = v40;
        }
        else
        {
          *(_QWORD *)&v14 = v15 - 0x2000000000000;
        }
        if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
          return 0;
        v7 = *((int *)a2 + 8);
      }
    }
    if ((unint64_t)(v7 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v17 = *((_QWORD *)a2 + 9);
      if (v17 != 10)
      {
        v42 = (bmalloc::api *)*((_QWORD *)a2 + 9);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v8 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v42, this);
          v8 = v41;
        }
        else
        {
          *(_QWORD *)&v8 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          return 0;
      }
    }
  }
  v21 = bmalloc::api::isoAllocate();
  *(_QWORD *)v21 = 0;
  *(_DWORD *)(v21 + 8) = 1;
  *(double *)(v21 + 16) = v11;
  *(double *)(v21 + 24) = v10;
  *(double *)(v21 + 32) = v14;
  *(double *)(v21 + 40) = v8;
  v42 = (bmalloc::api *)v21;
  v22 = *(JSC::VM **)(v6 + 40);
  v23 = *((_QWORD *)v22 + 412);
  if (v23)
  {
    v24 = *(_DWORD *)(v23 - 8);
    v25 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
    v26 = 9 * ((v25 + ~(v25 << 13)) ^ ((v25 + ~(v25 << 13)) >> 8));
    v27 = (v26 ^ (v26 >> 15)) + ~((v26 ^ (v26 >> 15)) << 27);
    v28 = v24 & ((v27 >> 31) ^ v27);
    v29 = *(char ***)(v23 + 16 * v28);
    if (v29 == &WebCore::JSDOMPoint::s_info)
    {
LABEL_36:
      v31 = *(_QWORD *)(v23 + 16 * v28 + 8);
      if (v31)
        goto LABEL_38;
    }
    else
    {
      v30 = 1;
      while (v29)
      {
        v28 = ((_DWORD)v28 + v30) & v24;
        v29 = *(char ***)(v23 + 16 * v28);
        ++v30;
        if (v29 == &WebCore::JSDOMPoint::s_info)
          goto LABEL_36;
      }
    }
  }
  v32 = (WebCore::JSDOMPoint *)*((_QWORD *)v22 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v32, v22, v20);
  Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v32, (uint64_t)v22, Prototype);
  v31 = WebCore::cacheDOMStructure((JSCell *)v22, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
LABEL_38:
  v19 = (JSCell *)WebCore::JSDOMPoint::create(v31, (uint64_t)v22, (uint64_t *)&v42);
  WebCore::cacheWrapper<WebCore::DOMPoint,WebCore::JSDOMPoint>(*((_QWORD *)v22 + 415), (uint64_t *)v21, (uint64_t)v19);
  WebCore::setSubclassStructureIfNeeded<WebCore::DOMPoint>(this, (uint64_t)a2, v19);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    v19 = 0;
  v36 = v42;
  v42 = 0;
  if (v36)
  {
    if (*((_DWORD *)v36 + 2) == 1)
    {
      if (*(_QWORD *)v36)
      {
        *(_QWORD *)(*(_QWORD *)v36 + 8) = 3;
        *(_QWORD *)v36 = 0;
      }
      bmalloc::api::isoDeallocate(v36, v35);
    }
    else
    {
      --*((_DWORD *)v36 + 2);
    }
  }
  return v19;
}

JSCell *WebCore::constructJSDOMPoint1(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::JSDOMGlobalObject *v9;
  uint64_t v10;
  JSC::VM *v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  int v19;
  unint64_t v20;
  WebCore::JSDOMPoint *v21;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  JSCell *v24;
  void *v25;
  bmalloc::api *v26;
  __int128 v28;
  bmalloc::api *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  int v33;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v6 = *((_QWORD *)a2 + 3);
  WebCore::convertDictionary<WebCore::DOMPointInit>(*((JSC::JSCell **)a2 + 6), (uint64_t)this, (uint64_t)&v30);
  if (v33)
    return 0;
  v28 = v30;
  v7 = v31;
  v8 = v32;
  v10 = bmalloc::api::isoAllocate();
  *(_QWORD *)v10 = 0;
  *(_DWORD *)(v10 + 8) = 1;
  *(_OWORD *)(v10 + 16) = v28;
  *(_QWORD *)(v10 + 32) = v7;
  *(_QWORD *)(v10 + 40) = v8;
  v29 = (bmalloc::api *)v10;
  v11 = *(JSC::VM **)(v6 + 40);
  v12 = *((_QWORD *)v11 + 412);
  if (v12)
  {
    v13 = *(_DWORD *)(v12 - 8);
    v14 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v13 & ((v16 >> 31) ^ v16);
    v18 = *(char ***)(v12 + 16 * v17);
    if (v18 == &WebCore::JSDOMPoint::s_info)
    {
LABEL_7:
      v20 = *(_QWORD *)(v12 + 16 * v17 + 8);
      if (v20)
        goto LABEL_9;
    }
    else
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v13;
        v18 = *(char ***)(v12 + 16 * v17);
        ++v19;
        if (v18 == &WebCore::JSDOMPoint::s_info)
          goto LABEL_7;
      }
    }
  }
  v21 = (WebCore::JSDOMPoint *)*((_QWORD *)v11 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v21, v11, v9);
  Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v21, (uint64_t)v11, Prototype);
  v20 = WebCore::cacheDOMStructure((JSCell *)v11, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
LABEL_9:
  v24 = (JSCell *)WebCore::JSDOMPoint::create(v20, (uint64_t)v11, (uint64_t *)&v29);
  WebCore::cacheWrapper<WebCore::DOMPoint,WebCore::JSDOMPoint>(*((_QWORD *)v11 + 415), (uint64_t *)v10, (uint64_t)v24);
  WebCore::setSubclassStructureIfNeeded<WebCore::DOMPoint>(this, (uint64_t)a2, v24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    v24 = 0;
  v26 = v29;
  v29 = 0;
  if (v26)
  {
    if (*((_DWORD *)v26 + 2) == 1)
    {
      if (*(_QWORD *)v26)
      {
        *(_QWORD *)(*(_QWORD *)v26 + 8) = 3;
        *(_QWORD *)v26 = 0;
      }
      bmalloc::api::isoDeallocate(v26, v25);
    }
    else
    {
      --*((_DWORD *)v26 + 2);
    }
  }
  return v24;
}

bmalloc::api *WebCore::JSDOMPointReadOnly::destroy(WebCore::JSDOMPointReadOnly *this, JSC::JSCell *a2)
{
  bmalloc::api *result;

  result = (bmalloc::api *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      if (*(_QWORD *)result)
      {
        *(_QWORD *)(*(_QWORD *)result + 8) = 3;
        *(_QWORD *)result = 0;
      }
      return (bmalloc::api *)bmalloc::api::isoDeallocate(result, a2);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

uint64_t WebCore::JSDOMPoint::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSDOMPointReadOnly::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSDOMPointReadOnly::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSDOMPointReadOnly::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMPointReadOnly::JSDOMPointReadOnly(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

unint64_t WebCore::JSDOMPoint::createPrototype(WebCore::JSDOMPoint *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSDOMPointReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPointReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSDOMPointReadOnly::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSDOMPointReadOnly::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSDOMPointReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSDOMPointReadOnlyPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSDOMPointReadOnly::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSDOMPointReadOnly::s_info);
  }
  v18 = WebCore::JSDOMPointPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSDOMPointPrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSDOMPointPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSDOMPointReadOnly::prototype(WebCore::JSDOMPointReadOnly *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSDOMPointReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPointReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSDOMPointReadOnly::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSDOMPointReadOnly::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSDOMPointReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSDOMPointReadOnlyPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSDOMPointReadOnly::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSDOMPointReadOnly::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSDOMPointPrototype::create(WebCore::JSDOMPointPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSDOMPoint::s_info, &WebCore::JSDOMPointPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPoint>,(WebCore::DOMConstructorID)428>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3424);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>,(WebCore::DOMConstructorID)429>(a1, a2);
  v7 = v6;
  LODWORD(v35) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v33);
    v5[2] = SlowCase + (int)v33;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v35, &WebCore::JSDOMConstructor<WebCore::JSDOMPoint>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v34 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v34);
    v10[2848] = v2 + (int)v34;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v35);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v35);
  v14 = v35;
  v35 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v35);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSDOMPoint::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSDOMPoint::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
  {
LABEL_21:
    Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype((WebCore::JSDOMPoint *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)a1, a2, Prototype);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
  }
  v29 = *(_QWORD *)(v26 + 48);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v35);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v30 = v35;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMPoint::s_info, (unint64_t *)&v35, (uint64_t)&WebCore::JSDOMPointConstructorTableValues, (unsigned __int8 *)v2);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3424) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMPointConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMPointPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPoint>,(WebCore::DOMConstructorID)428>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMPoint_x(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMPoint_x(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMPoint::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMPoint::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 16) = v11;
  return 1;
}

unint64_t WebCore::jsDOMPoint_y(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMPoint_y(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMPoint::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMPoint::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 24) = v11;
  return 1;
}

unint64_t WebCore::jsDOMPoint_z(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 32);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMPoint_z(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMPoint::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMPoint::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 32) = v11;
  return 1;
}

unint64_t WebCore::jsDOMPoint_w(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 40);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMPoint_w(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMPoint::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMPoint::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 40) = v11;
  return 1;
}

uint64_t WebCore::JSDOMPointReadOnly::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMPointOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  WTF::ConcurrentPtrHashSet *v6;
  _DWORD *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;

  v5 = *(void **)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from DOMPoint";
    a5[1] = 24;
  }
  v6 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v7 = (_DWORD *)*((_QWORD *)v6 + 6);
  if ((_DWORD *)((char *)v6 + 56) == v7)
  {
    v16 = a4;
    v17 = v5;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v6, v5);
    a4 = v16;
    v5 = v17;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v5);
      return 1;
    }
  }
  else
  {
    v8 = v7[1];
    v9 = ((unint64_t)v5 + ~((_QWORD)v5 << 32)) ^ (((unint64_t)v5 + ~((_QWORD)v5 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = v12;
    while (1)
    {
      v14 = *(void **)&v7[2 * v13 + 4];
      if (!v14)
        return 0;
      if (v5 == v14)
        goto LABEL_12;
      v13 = (v13 + 1) & v8;
      if (v13 == v12)
      {
        __break(0xC471u);
        JUMPOUT(0x19499AA30);
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMPointOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v25;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 8);
  *(_DWORD *)(result + 8) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v7 = *(_QWORD *)(a3 + 32);
    v5 = (uint64_t *)(a3 + 32);
    v6 = v7;
    if (v7)
    {
      v8 = *(_DWORD *)(v6 - 8);
      v9 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(_QWORD *)(v6 + 16 * v12);
      if (v13 != result)
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(_QWORD *)(v6 + 16 * v12);
          ++v14;
          if (v13 == result)
            goto LABEL_14;
        }
        v12 = *(unsigned int *)(v6 - 4);
      }
LABEL_14:
      if (v12 != *(_DWORD *)(v6 - 4))
      {
        v15 = (_QWORD *)(v6 + 16 * v12);
        *v15 = -1;
        v18 = v15[1];
        v17 = v15 + 1;
        v16 = v18;
        if (v18)
        {
          *(_QWORD *)(v16 + 8) = 3;
          *v17 = 0;
        }
        ++*(_DWORD *)(*v5 - 16);
        v19 = *v5;
        if (*v5)
          v20 = *(_DWORD *)(v19 - 12) - 1;
        else
          v20 = -1;
        *(_DWORD *)(v19 - 12) = v20;
        v21 = *v5;
        if (*v5)
        {
          v22 = 6 * *(_DWORD *)(v21 - 12);
          v23 = *(_DWORD *)(v21 - 4);
          if (v22 < v23 && v23 >= 9)
          {
            v25 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v5, v23 >> 1, 0);
            result = v25;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 8) - 1;
  }
  else if (*(_QWORD *)result)
  {
    *(_QWORD *)(*(_QWORD *)result + 8) = 3;
    *(_QWORD *)result = 0;
  }
  if (v4)
  {
    *(_DWORD *)(result + 8) = v4;
  }
  else
  {
    if (*(_QWORD *)result)
    {
      *(_QWORD *)(*(_QWORD *)result + 8) = 3;
      *(_QWORD *)result = 0;
    }
    return bmalloc::api::isoDeallocate((bmalloc::api *)result, a2);
  }
  return result;
}

uint64_t WebCore::wrap<WebCore::DOMPoint>(JSC::VM *a1, bmalloc::api *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSDOMPoint *v17;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  void *v20;
  bmalloc::api *v21;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  bmalloc::api *v29;
  int v30;
  bmalloc::api *v31;

  v5 = *((_QWORD *)a1 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v23 = *(_QWORD *)(v5 + 32);
    if (!v23)
      goto LABEL_5;
    v24 = *(_DWORD *)(v23 - 8);
    v25 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v26 = 9 * ((v25 + ~(v25 << 13)) ^ ((v25 + ~(v25 << 13)) >> 8));
    v27 = (v26 ^ (v26 >> 15)) + ~((v26 ^ (v26 >> 15)) << 27);
    v28 = v24 & ((v27 >> 31) ^ v27);
    v29 = *(bmalloc::api **)(v23 + 16 * v28);
    if (v29 != a2)
    {
      v30 = 1;
      while (v29)
      {
        v28 = ((_DWORD)v28 + v30) & v24;
        v29 = *(bmalloc::api **)(v23 + 16 * v28);
        ++v30;
        if (v29 == a2)
          goto LABEL_24;
      }
      goto LABEL_5;
    }
LABEL_24:
    v6 = *(_QWORD *)(v23 + 16 * v28 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)a2;
    if (!*(_QWORD *)a2)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  ++*((_DWORD *)a2 + 2);
  v31 = a2;
  v8 = *((_QWORD *)a1 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSDOMPoint::s_info)
    {
LABEL_10:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_12;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSDOMPoint::s_info)
          goto LABEL_10;
      }
    }
  }
  v17 = (WebCore::JSDOMPoint *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v17, a1, a3);
  Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v17, (uint64_t)a1, Prototype);
  v16 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
LABEL_12:
  v7 = WebCore::JSDOMPoint::create(v16, (uint64_t)a1, (uint64_t *)&v31);
  WebCore::cacheWrapper<WebCore::DOMPoint,WebCore::JSDOMPoint>(*((_QWORD *)a1 + 415), (uint64_t *)a2, v7);
  v21 = v31;
  v31 = 0;
  if (v21)
  {
    if (*((_DWORD *)v21 + 2) == 1)
    {
      if (*(_QWORD *)v21)
      {
        *(_QWORD *)(*(_QWORD *)v21 + 8) = 3;
        *(_QWORD *)v21 = 0;
      }
      bmalloc::api::isoDeallocate(v21, v20);
    }
    else
    {
      --*((_DWORD *)v21 + 2);
    }
  }
  return v7;
}

uint64_t WebCore::convertDictionary<WebCore::DOMPointInit>@<X0>(JSC::JSCell *this@<X1>, uint64_t result@<X0>, uint64_t a3@<X8>)
{
  _DWORD *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  JSC::JSGlobalObject *v9;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSC::VM *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  int v27;
  JSC::VM *v28;
  double v29;
  JSC::VM *v30;
  double v31;
  JSC::VM *v32;
  double v33;
  double v34;
  WTF::StringImpl *v35;

  v4 = *(_DWORD **)(result + 56);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v9 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
    }
    else
    {
      v11 = (JSC::Structure *)Object;
      JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
      v13 = (WTF::StringImpl *)JSC::JSObject::get(v11, v9, (unint64_t)v35);
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v12);
        else
          *(_DWORD *)v35 -= 2;
      }
      if (!v4[20] || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4), (result & 1) == 0))
      {
        v5 = 1.0;
        if (v13 == (WTF::StringImpl *)10
          || ((v35 = v13, v14 = (JSC::VM *)*((_QWORD *)v9 + 7), (unint64_t)v13 >= 0xFFFE000000000000)
            ? (v5 = (double)(int)v13)
            : (unint64_t)v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
            ? (v28 = (JSC::VM *)*((_QWORD *)v9 + 7),
               JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, v9),
               v14 = v28,
               v5 = v29)
            : (*(_QWORD *)&v5 = (char *)v13 - 0x2000000000000),
              !*((_DWORD *)v14 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v14), (result & 1) == 0)))
        {
          JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
          v15 = v35;
          v17 = (WTF::StringImpl *)JSC::JSObject::get(v11, v9, (unint64_t)v35);
          if (v15)
          {
            if (*(_DWORD *)v15 == 2)
              WTF::StringImpl::destroy(v15, v16);
            else
              *(_DWORD *)v15 -= 2;
          }
          if (!v4[20] || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4), (result & 1) == 0))
          {
            v7 = 0.0;
            if (v17 == (WTF::StringImpl *)10
              || ((v35 = v17, v18 = (JSC::VM *)*((_QWORD *)v9 + 7), (unint64_t)v17 >= 0xFFFE000000000000)
                ? (v7 = (double)(int)v17)
                : (unint64_t)v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                ? (v30 = (JSC::VM *)*((_QWORD *)v9 + 7),
                   JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, v9),
                   v18 = v30,
                   v7 = v31)
                : (*(_QWORD *)&v7 = (char *)v17 - 0x2000000000000),
                  !*((_DWORD *)v18 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v18), (result & 1) == 0)))
            {
              JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
              v19 = v35;
              v21 = (WTF::StringImpl *)JSC::JSObject::get(v11, v9, (unint64_t)v35);
              if (v19)
              {
                if (*(_DWORD *)v19 == 2)
                  WTF::StringImpl::destroy(v19, v20);
                else
                  *(_DWORD *)v19 -= 2;
              }
              if (!v4[20] || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4), (result & 1) == 0))
              {
                v8 = 0.0;
                if (v21 == (WTF::StringImpl *)10
                  || ((v35 = v21, v22 = (JSC::VM *)*((_QWORD *)v9 + 7), (unint64_t)v21 >= 0xFFFE000000000000)
                    ? (v8 = (double)(int)v21)
                    : (unint64_t)v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL
                    ? (v32 = (JSC::VM *)*((_QWORD *)v9 + 7),
                       JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, v9),
                       v22 = v32,
                       v8 = v33)
                    : (*(_QWORD *)&v8 = (char *)v21 - 0x2000000000000),
                      !*((_DWORD *)v22 + 20)
                   || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v22), (result & 1) == 0)))
                {
                  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
                  v23 = v35;
                  result = JSC::JSObject::get(v11, v9, (unint64_t)v35);
                  v25 = (WTF::StringImpl *)result;
                  if (v23)
                  {
                    if (*(_DWORD *)v23 == 2)
                      result = WTF::StringImpl::destroy(v23, v24);
                    else
                      *(_DWORD *)v23 -= 2;
                  }
                  if (!v4[20] || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4), (result & 1) == 0))
                  {
                    v6 = 0.0;
                    if (v25 == (WTF::StringImpl *)10)
                      goto LABEL_41;
                    v35 = v25;
                    v26 = (JSC::VM *)*((_QWORD *)v9 + 7);
                    if ((unint64_t)v25 >= 0xFFFE000000000000)
                    {
                      v6 = (double)(int)v25;
                    }
                    else if ((unint64_t)v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                    {
                      result = JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, v9);
                    }
                    else
                    {
                      *(_QWORD *)&v6 = (char *)v25 - 0x2000000000000;
                    }
                    if (!*((_DWORD *)v26 + 20))
                      goto LABEL_41;
                    v34 = v6;
                    result = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
                    v6 = v34;
                    if ((result & 1) == 0)
                      goto LABEL_41;
                  }
                }
              }
            }
          }
        }
      }
    }
    v27 = 1;
    goto LABEL_42;
  }
  v5 = 1.0;
  v6 = 0.0;
  v7 = 0.0;
  v8 = 0.0;
LABEL_41:
  v27 = 0;
  *(double *)a3 = v7;
  *(double *)(a3 + 8) = v8;
  *(double *)(a3 + 16) = v6;
  *(double *)(a3 + 24) = v5;
LABEL_42:
  *(_DWORD *)(a3 + 32) = v27;
  return result;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>::construct(WebCore *a1, uint64_t a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(int *)(a2 + 32) - 1;
  if (v3 >= 4)
    v3 = 4;
  switch(v3)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_4;
    case 1uLL:
      v5 = *(_QWORD *)(a2 + 48);
      if (v5 == 10
        || (v5 & 0xFFFFFFFFFFFFFFF7) != 2
        && ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) < 0x17u))
      {
LABEL_4:
        result = (uint64_t)WebCore::constructJSDOMPointReadOnly2(a1, (JSC::JSGlobalObject *)a2, a3);
      }
      else
      {
        result = (uint64_t)WebCore::constructJSDOMPointReadOnly1(a1, (JSC::JSGlobalObject *)a2, a3);
      }
      break;
    default:
      result = JSC::throwTypeError();
      break;
  }
  return result;
}

JSCell *WebCore::constructJSDOMPointReadOnly2(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  unint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  unint64_t v17;
  JSC::VM *v18;
  JSCell *v19;
  uint64_t v20;
  void *v21;
  bmalloc::api *v22;
  double v24;
  double v25;
  double v26;
  double v27;
  bmalloc::api *v28;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v6 = *((_QWORD *)a2 + 3);
  LODWORD(v7) = *((_DWORD *)a2 + 8);
  v8 = 1.0;
  if ((_DWORD)v7 == 1)
  {
    v14 = 0.0;
    v11 = 0.0;
    v10 = 0.0;
  }
  else
  {
    v9 = *((_QWORD *)a2 + 6);
    v10 = 0.0;
    v11 = 0.0;
    if (v9 != 10)
    {
      v28 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v9 >= 0xFFFE000000000000)
      {
        v11 = (double)(int)v9;
      }
      else if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
        v11 = v24;
      }
      else
      {
        *(_QWORD *)&v11 = v9 - 0x2000000000000;
      }
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
        return 0;
      LODWORD(v7) = *((_DWORD *)a2 + 8);
    }
    v7 = (int)v7;
    if ((unint64_t)((int)v7 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v12 = *((_QWORD *)a2 + 7);
      if (v12 != 10)
      {
        v28 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v13 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v12 >= 0xFFFE000000000000)
        {
          v10 = (double)(int)v12;
        }
        else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
          v10 = v25;
        }
        else
        {
          *(_QWORD *)&v10 = v12 - 0x2000000000000;
        }
        if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
          return 0;
        v7 = *((int *)a2 + 8);
      }
    }
    v14 = 0.0;
    if ((unint64_t)(v7 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v15 = *((_QWORD *)a2 + 8);
      if (v15 != 10)
      {
        v28 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v16 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v15 >= 0xFFFE000000000000)
        {
          v14 = (double)(int)v15;
        }
        else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
          v14 = v26;
        }
        else
        {
          *(_QWORD *)&v14 = v15 - 0x2000000000000;
        }
        if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
          return 0;
        v7 = *((int *)a2 + 8);
      }
    }
    if ((unint64_t)(v7 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v17 = *((_QWORD *)a2 + 9);
      if (v17 != 10)
      {
        v28 = (bmalloc::api *)*((_QWORD *)a2 + 9);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v8 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
          v8 = v27;
        }
        else
        {
          *(_QWORD *)&v8 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          return 0;
      }
    }
  }
  v20 = bmalloc::api::isoAllocate();
  *(_QWORD *)v20 = 0;
  *(_DWORD *)(v20 + 8) = 1;
  *(double *)(v20 + 16) = v11;
  *(double *)(v20 + 24) = v10;
  *(double *)(v20 + 32) = v14;
  *(double *)(v20 + 40) = v8;
  v28 = (bmalloc::api *)v20;
  v19 = (JSCell *)WebCore::toJSNewlyCreated(v20, *(_QWORD *)(v6 + 40), (uint64_t *)&v28);
  WebCore::setSubclassStructureIfNeeded<WebCore::DOMPointReadOnly>(this, (uint64_t)a2, v19);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    v19 = 0;
  v22 = v28;
  v28 = 0;
  if (v22)
  {
    if (*((_DWORD *)v22 + 2) == 1)
    {
      if (*(_QWORD *)v22)
      {
        *(_QWORD *)(*(_QWORD *)v22 + 8) = 3;
        *(_QWORD *)v22 = 0;
      }
      bmalloc::api::isoDeallocate(v22, v21);
    }
    else
    {
      --*((_DWORD *)v22 + 2);
    }
  }
  return v19;
}

JSCell *WebCore::constructJSDOMPointReadOnly1(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  JSCell *v10;
  void *v11;
  bmalloc::api *v12;
  __int128 v14;
  bmalloc::api *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v6 = *((_QWORD *)a2 + 3);
  WebCore::convertDictionary<WebCore::DOMPointInit>(*((JSC::JSCell **)a2 + 6), (uint64_t)this, (uint64_t)&v16);
  if (v19)
    return 0;
  v14 = v16;
  v7 = v17;
  v8 = v18;
  v9 = bmalloc::api::isoAllocate();
  *(_QWORD *)v9 = 0;
  *(_DWORD *)(v9 + 8) = 1;
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v8;
  v15 = (bmalloc::api *)v9;
  v10 = (JSCell *)WebCore::toJSNewlyCreated(v9, *(_QWORD *)(v6 + 40), (uint64_t *)&v15);
  WebCore::setSubclassStructureIfNeeded<WebCore::DOMPointReadOnly>(this, (uint64_t)a2, v10);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    v10 = 0;
  v12 = v15;
  v15 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 2) == 1)
    {
      if (*(_QWORD *)v12)
      {
        *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
        *(_QWORD *)v12 = 0;
      }
      bmalloc::api::isoDeallocate(v12, v11);
    }
    else
    {
      --*((_DWORD *)v12 + 2);
    }
  }
  return v10;
}

unint64_t WebCore::JSDOMPointReadOnly::createPrototype(WebCore::JSDOMPointReadOnly *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  JSC::Structure *v6;

  Structure = WebCore::JSDOMPointReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSDOMPointReadOnlyPrototype::create(this, (JSC::VM *)a2, Structure, v6);
}

uint64_t WebCore::JSDOMPointReadOnlyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMPointReadOnlyPrototype::create(WebCore::JSDOMPointReadOnlyPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSDOMPointReadOnly::s_info, &WebCore::JSDOMPointReadOnlyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>,(WebCore::DOMConstructorID)429>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3432);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v35) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v33);
    v5[2] = SlowCase + (int)v33;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v35, &WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v34 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v34);
    v9[2848] = v2 + (int)v34;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v35);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v35);
  v13 = v35;
  v35 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v35);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (!v16)
    goto LABEL_21;
  v17 = *(_DWORD *)(v16 - 8);
  v18 = ((unint64_t)&WebCore::JSDOMPointReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPointReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) >> 22);
  v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
  v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
  v21 = v17 & ((v20 >> 31) ^ v20);
  v22 = *(char ***)(v16 + 16 * v21);
  if (v22 != &WebCore::JSDOMPointReadOnly::s_info)
  {
    v23 = 1;
    while (v22)
    {
      v21 = ((_DWORD)v21 + v23) & v17;
      v22 = *(char ***)(v16 + 16 * v21);
      ++v23;
      if (v22 == &WebCore::JSDOMPointReadOnly::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
  if (!v24)
  {
LABEL_21:
    Structure = WebCore::JSDOMPointReadOnlyPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v27 = (JSC::JSCell *)WebCore::JSDOMPointReadOnlyPrototype::create((WebCore::JSDOMPointReadOnlyPrototype *)a1, (JSC::VM *)a2, Structure, v26);
    v28 = WebCore::JSDOMPointReadOnly::createStructure((uint64_t *)a1, a2, v27);
    v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSDOMPointReadOnly::s_info);
  }
  v29 = *(_QWORD *)(v24 + 48);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v35);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v30 = v35;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMPointReadOnly::s_info, (unint64_t *)&v35, (uint64_t)&WebCore::JSDOMPointReadOnlyConstructorTableValues, (unsigned __int8 *)v2);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3432) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMPointReadOnlyConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMPointReadOnlyPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>,(WebCore::DOMConstructorID)429>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMPointReadOnly_x(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMPointReadOnly_y(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMPointReadOnly_z(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 32);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMPointReadOnly_w(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 40);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::JSDOMPointReadOnly::subspaceForImpl(WebCore::JSDOMPointReadOnly *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3512);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3512))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3512);
    *(_QWORD *)(v8 + 3512) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3512);
  *(_QWORD *)(v3 + 3512) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMPointReadOnlyOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t WebCore::JSDOMPointReadOnlyOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v25;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 8);
  *(_DWORD *)(result + 8) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v7 = *(_QWORD *)(a3 + 32);
    v5 = (uint64_t *)(a3 + 32);
    v6 = v7;
    if (v7)
    {
      v8 = *(_DWORD *)(v6 - 8);
      v9 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(_QWORD *)(v6 + 16 * v12);
      if (v13 != result)
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(_QWORD *)(v6 + 16 * v12);
          ++v14;
          if (v13 == result)
            goto LABEL_14;
        }
        v12 = *(unsigned int *)(v6 - 4);
      }
LABEL_14:
      if (v12 != *(_DWORD *)(v6 - 4))
      {
        v15 = (_QWORD *)(v6 + 16 * v12);
        *v15 = -1;
        v18 = v15[1];
        v17 = v15 + 1;
        v16 = v18;
        if (v18)
        {
          *(_QWORD *)(v16 + 8) = 3;
          *v17 = 0;
        }
        ++*(_DWORD *)(*v5 - 16);
        v19 = *v5;
        if (*v5)
          v20 = *(_DWORD *)(v19 - 12) - 1;
        else
          v20 = -1;
        *(_DWORD *)(v19 - 12) = v20;
        v21 = *v5;
        if (*v5)
        {
          v22 = 6 * *(_DWORD *)(v21 - 12);
          v23 = *(_DWORD *)(v21 - 4);
          if (v22 < v23 && v23 >= 9)
          {
            v25 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v5, v23 >> 1, 0);
            result = v25;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 8) - 1;
  }
  else if (*(_QWORD *)result)
  {
    *(_QWORD *)(*(_QWORD *)result + 8) = 3;
    *(_QWORD *)result = 0;
  }
  if (v4)
  {
    *(_DWORD *)(result + 8) = v4;
  }
  else
  {
    if (*(_QWORD *)result)
    {
      *(_QWORD *)(*(_QWORD *)result + 8) = 3;
      *(_QWORD *)result = 0;
    }
    return bmalloc::api::isoDeallocate((bmalloc::api *)result, a2);
  }
  return result;
}

uint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::DOMPointReadOnly *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  bmalloc::api *v8;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  int v17;
  bmalloc::api *v18;

  v4 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v4 + 48))
  {
    v10 = *(_QWORD *)(v4 + 32);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 - 8);
      v12 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::JSDOMGlobalObject **)(v10 + 16 * v15);
      if (v16 == a3)
      {
LABEL_17:
        v5 = *(_QWORD *)(v10 + 16 * v15 + 8);
        if (v5)
          goto LABEL_3;
      }
      else
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::JSDOMGlobalObject **)(v10 + 16 * v15);
          ++v17;
          if (v16 == a3)
            goto LABEL_17;
        }
      }
    }
  }
  else
  {
    v5 = *(_QWORD *)a3;
    if (*(_QWORD *)a3)
    {
LABEL_3:
      if ((*(_BYTE *)(v5 + 8) & 3) == 0)
      {
        v6 = *(_QWORD *)v5;
        if (*(_QWORD *)v5)
          return v6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  v18 = a3;
  v6 = WebCore::toJSNewlyCreated((uint64_t)this, (uint64_t)a2, (uint64_t *)&v18);
  v8 = v18;
  v18 = 0;
  if (v8)
  {
    if (*((_DWORD *)v8 + 2) == 1)
    {
      if (*(_QWORD *)v8)
      {
        *(_QWORD *)(*(_QWORD *)v8 + 8) = 3;
        *(_QWORD *)v8 = 0;
      }
      bmalloc::api::isoDeallocate(v8, v7);
    }
    else
    {
      --*((_DWORD *)v8 + 2);
    }
  }
  return v6;
}

uint64_t WebCore::JSDOMPointReadOnly::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDOMPointReadOnly::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDOMPointReadOnly::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSDOMQuad::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSDOMQuad::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMQuad>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  JSCell *v24;
  JSC::JSCell *v25;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v27;
  JSC::JSGlobalObject *v28;
  JSC::VM *v29;
  JSC::Structure *v30;
  uint64_t FunctionRealm;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char **v38;
  int v39;
  JSC::JSObject *v40;
  unint64_t Structure;
  JSC::Structure *v42;
  JSC::JSCell *v43;
  uint64_t v44;
  unint64_t SubclassStructure;
  WebCore::DOMQuad *v46;
  bmalloc::api *v48;
  void *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  WebCore::DOMQuad *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  int v70;

  if (*(_DWORD *)(a2 + 32) == 1)
    v4 = 10;
  else
    v4 = *(_QWORD *)(a2 + 48);
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v4, (uint64_t)a1, (uint64_t)&v67);
  if (v70)
    return 0;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v7 = 10;
  else
    v7 = *(_QWORD *)(a2 + 56);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v7, (uint64_t)a1, (uint64_t)&v63);
  if (v66)
    return 0;
  if ((unint64_t)(*(int *)(a2 + 32) - 4) > 0xFFFFFFFFFFFFFFFCLL)
    v8 = 10;
  else
    v8 = *(_QWORD *)(a2 + 64);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v8, (uint64_t)a1, (uint64_t)&v59);
  if (v62)
    return 0;
  if ((unint64_t)(*(int *)(a2 + 32) - 5) > 0xFFFFFFFFFFFFFFFBLL)
    v9 = 10;
  else
    v9 = *(_QWORD *)(a2 + 72);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v9, (uint64_t)a1, (uint64_t)&v55);
  if (v58)
    return 0;
  v10 = v68;
  v11 = v69;
  v50 = v67;
  v51 = v63;
  v12 = v64;
  v13 = v65;
  v14 = v60;
  v15 = v61;
  v52 = v59;
  v53 = v55;
  v16 = v56;
  v17 = v57;
  v18 = bmalloc::api::isoAllocate();
  *(_QWORD *)v18 = 0;
  *(_DWORD *)(v18 + 8) = 1;
  v19 = bmalloc::api::isoAllocate();
  *(_QWORD *)v19 = 0;
  *(_DWORD *)(v19 + 8) = 1;
  *(_OWORD *)(v19 + 16) = v50;
  *(_QWORD *)(v19 + 32) = v10;
  *(_QWORD *)(v19 + 40) = v11;
  *(_QWORD *)(v18 + 16) = v19;
  v20 = bmalloc::api::isoAllocate();
  *(_QWORD *)v20 = 0;
  *(_DWORD *)(v20 + 8) = 1;
  *(_OWORD *)(v20 + 16) = v51;
  *(_QWORD *)(v20 + 32) = v12;
  *(_QWORD *)(v20 + 40) = v13;
  *(_QWORD *)(v18 + 24) = v20;
  v21 = bmalloc::api::isoAllocate();
  *(_QWORD *)v21 = 0;
  *(_DWORD *)(v21 + 8) = 1;
  *(_OWORD *)(v21 + 16) = v52;
  *(_QWORD *)(v21 + 32) = v14;
  *(_QWORD *)(v21 + 40) = v15;
  *(_QWORD *)(v18 + 32) = v21;
  v22 = bmalloc::api::isoAllocate();
  *(_QWORD *)v22 = 0;
  *(_DWORD *)(v22 + 8) = 1;
  *(_OWORD *)(v22 + 16) = v53;
  *(_QWORD *)(v22 + 32) = v16;
  *(_QWORD *)(v22 + 40) = v17;
  *(_QWORD *)(v18 + 40) = v22;
  v54 = (WebCore::DOMQuad *)v18;
  v24 = (JSCell *)WebCore::toJSNewlyCreated(v22, *(_QWORD *)(v6 + 40), (uint64_t *)&v54);
  v25 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v25 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v25);
    if (Object)
    {
      v28 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = JSC::getFunctionRealm(a1, Object, v27);
        if (!*((_DWORD *)v29 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) == 0)
        {
          v32 = *(_QWORD *)(FunctionRealm + 3296);
          if (v32)
          {
            v33 = *(_DWORD *)(v32 - 8);
            v34 = ((unint64_t)&WebCore::JSDOMQuad::s_info + ~((_QWORD)&WebCore::JSDOMQuad::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMQuad::s_info + ~((_QWORD)&WebCore::JSDOMQuad::s_info << 32)) >> 22);
            v35 = 9 * ((v34 + ~(v34 << 13)) ^ ((v34 + ~(v34 << 13)) >> 8));
            v36 = (v35 ^ (v35 >> 15)) + ~((v35 ^ (v35 >> 15)) << 27);
            v37 = v33 & ((v36 >> 31) ^ v36);
            v38 = *(char ***)(v32 + 16 * v37);
            if (v38 == &WebCore::JSDOMQuad::s_info)
            {
LABEL_26:
              v40 = *(JSC::JSObject **)(v32 + 16 * v37 + 8);
              if (v40)
              {
LABEL_28:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v28, v40, v30);
                if (!*((_DWORD *)v29 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) == 0)
                  JSC::JSObject::setStructure(v24, v29, SubclassStructure);
                goto LABEL_30;
              }
            }
            else
            {
              v39 = 1;
              while (v38)
              {
                v37 = ((_DWORD)v37 + v39) & v33;
                v38 = *(char ***)(v32 + 16 * v37);
                ++v39;
                if (v38 == &WebCore::JSDOMQuad::s_info)
                  goto LABEL_26;
              }
            }
          }
          Structure = WebCore::JSDOMQuadPrototype::createStructure((uint64_t *)v29, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v43 = (JSC::JSCell *)WebCore::JSDOMQuadPrototype::create(v29, (JSC::VM *)FunctionRealm, Structure, v42);
          v44 = WebCore::JSDOMQuad::createStructure((uint64_t *)v29, FunctionRealm, v43);
          v40 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v44, (uint64_t)&WebCore::JSDOMQuad::s_info);
          goto LABEL_28;
        }
      }
    }
  }
LABEL_30:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    v24 = 0;
  v46 = v54;
  v54 = 0;
  if (v46)
  {
    if (*((_DWORD *)v46 + 2) == 1)
    {
      WebCore::DOMQuad::~DOMQuad(v46, v23);
      bmalloc::api::isoDeallocate(v48, v49);
    }
    else
    {
      --*((_DWORD *)v46 + 2);
    }
  }
  return v24;
}

WebCore::DOMQuad *WebCore::JSDOMQuad::destroy(WebCore::JSDOMQuad *this, JSC::JSCell *a2)
{
  WebCore::DOMQuad *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::DOMQuad *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      WebCore::DOMQuad::~DOMQuad(result, a2);
      return (WebCore::DOMQuad *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

uint64_t WebCore::JSDOMQuad::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMQuad::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSDOMQuad::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSDOMQuad::visitChildren(WebCore::JSDOMQuad *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSDOMQuad::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSDOMQuadPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMQuadPrototype::create(WebCore::JSDOMQuadPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSDOMQuad::s_info, &WebCore::JSDOMQuadPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMQuad>,(WebCore::DOMConstructorID)430>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3440);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructor<WebCore::JSDOMQuad>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMQuad::s_info + ~((_QWORD)&WebCore::JSDOMQuad::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMQuad::s_info + ~((_QWORD)&WebCore::JSDOMQuad::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMQuad::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMQuad::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMQuadPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSDOMQuadPrototype::create((WebCore::JSDOMQuadPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSDOMQuad::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSDOMQuad::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  JSC::reifyStaticProperties<2u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMQuad::s_info, (uint64_t)&WebCore::JSDOMQuadConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3440) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMQuadConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMQuadPrototype::s_info != (char **)(16
                                                       * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMQuad>,(WebCore::DOMConstructorID)430>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDOMQuad_p1(uint64_t a1, uint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  return WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(bmalloc::api **)(*(_QWORD *)(a2 + 24) + 16), a3);
}

uint64_t WebCore::jsDOMQuad_p2(uint64_t a1, uint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  return WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(bmalloc::api **)(*(_QWORD *)(a2 + 24) + 24), a3);
}

uint64_t WebCore::jsDOMQuad_p3(uint64_t a1, uint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  return WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(bmalloc::api **)(*(_QWORD *)(a2 + 24) + 32), a3);
}

uint64_t WebCore::jsDOMQuad_p4(uint64_t a1, uint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  return WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(bmalloc::api **)(*(_QWORD *)(a2 + 24) + 40), a3);
}

uint64_t WebCore::JSDOMQuadOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSDOMQuadOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::DOMQuad *v3;
  int v4;
  bmalloc::api *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::DOMQuad *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v3 = *(WebCore::DOMQuad **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 2);
  *((_DWORD *)v3 + 2) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v7 = (uint64_t *)(a3 + 32);
    v8 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v8 - 8);
      v11 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::DOMQuad **)(v8 + 16 * v14);
      if (v15 != v3)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::DOMQuad **)(v8 + 16 * v14);
          ++v16;
          if (v15 == v3)
            goto LABEL_12;
        }
        v14 = *(unsigned int *)(v8 - 4);
      }
LABEL_12:
      if (v14 != *(_DWORD *)(v8 - 4))
      {
        v17 = (_QWORD *)(v8 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v7 - 16);
        v21 = *v7;
        if (*v7)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v7;
        if (*v7)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v7, v25 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 2) - 1;
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 2) = v4;
  }
  else
  {
    WebCore::DOMQuad::~DOMQuad(v3, a2);
    bmalloc::api::isoDeallocate(v5, v6);
  }
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMRect>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  double v14;
  JSC::VM *v15;
  unint64_t v16;
  JSC::VM *v17;
  WebCore::JSDOMGlobalObject *v18;
  uint64_t v19;
  JSC::VM *v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char **v27;
  int v28;
  unint64_t v29;
  WebCore::JSDOMRect *v30;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  JSCell *v33;
  void *v34;
  JSC::JSCell *v35;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v37;
  JSC::JSGlobalObject *v38;
  WebCore::JSDOMRect *v39;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v41;
  JSC::Structure *v42;
  unint64_t SubclassStructure;
  bmalloc::api *v44;
  double v46;
  double v47;
  double v48;
  double v49;
  bmalloc::api *v50;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  LODWORD(v6) = *(_DWORD *)(a2 + 32);
  if ((_DWORD)v6 == 1)
  {
    v14 = 0.0;
    v9 = 0.0;
    v8 = 0.0;
    v12 = 0.0;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 48);
    v8 = 0.0;
    v9 = 0.0;
    if (v7 != 10)
    {
      v50 = *(bmalloc::api **)(a2 + 48);
      if (v7 >= 0xFFFE000000000000)
      {
        v9 = (double)(int)v7;
      }
      else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v50, a1);
        v9 = v46;
      }
      else
      {
        *(_QWORD *)&v9 = v7 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v6) = *(_DWORD *)(a2 + 32);
    }
    v6 = (int)v6;
    if ((unint64_t)((int)v6 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v10 = *(_QWORD *)(a2 + 56);
      if (v10 != 10)
      {
        v50 = *(bmalloc::api **)(a2 + 56);
        v11 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v10 >= 0xFFFE000000000000)
        {
          v8 = (double)(int)v10;
        }
        else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v50, a1);
          v8 = v47;
        }
        else
        {
          *(_QWORD *)&v8 = v10 - 0x2000000000000;
        }
        if (*((_DWORD *)v11 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v11) & 1) != 0)
          return 0;
        v6 = *(int *)(a2 + 32);
      }
    }
    v12 = 0.0;
    if ((unint64_t)(v6 - 4) > 0xFFFFFFFFFFFFFFFCLL || (v13 = *(_QWORD *)(a2 + 64), v13 == 10))
    {
      v14 = 0.0;
    }
    else
    {
      v50 = *(bmalloc::api **)(a2 + 64);
      v15 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v13 >= 0xFFFE000000000000)
      {
        v14 = (double)(int)v13;
      }
      else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v50, a1);
        v14 = v48;
      }
      else
      {
        *(_QWORD *)&v14 = v13 - 0x2000000000000;
      }
      if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
        return 0;
      v6 = *(int *)(a2 + 32);
    }
    if ((unint64_t)(v6 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v16 = *(_QWORD *)(a2 + 72);
      if (v16 != 10)
      {
        v50 = *(bmalloc::api **)(a2 + 72);
        v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v16 >= 0xFFFE000000000000)
        {
          v12 = (double)(int)v16;
        }
        else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v50, a1);
          v12 = v49;
        }
        else
        {
          *(_QWORD *)&v12 = v16 - 0x2000000000000;
        }
        if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
          return 0;
      }
    }
  }
  v19 = bmalloc::api::isoAllocate();
  *(_QWORD *)v19 = 0;
  *(_DWORD *)(v19 + 8) = 1;
  *(double *)(v19 + 16) = v9;
  *(double *)(v19 + 24) = v8;
  *(double *)(v19 + 32) = v14;
  *(double *)(v19 + 40) = v12;
  v50 = (bmalloc::api *)v19;
  v20 = *(JSC::VM **)(v5 + 40);
  v21 = *((_QWORD *)v20 + 412);
  if (!v21)
    goto LABEL_37;
  v22 = *(_DWORD *)(v21 - 8);
  v23 = ((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) >> 22);
  v24 = 9 * ((v23 + ~(v23 << 13)) ^ ((v23 + ~(v23 << 13)) >> 8));
  v25 = (v24 ^ (v24 >> 15)) + ~((v24 ^ (v24 >> 15)) << 27);
  v26 = v22 & ((v25 >> 31) ^ v25);
  v27 = *(char ***)(v21 + 16 * v26);
  if (v27 != &WebCore::JSDOMRect::s_info)
  {
    v28 = 1;
    while (v27)
    {
      v26 = ((_DWORD)v26 + v28) & v22;
      v27 = *(char ***)(v21 + 16 * v26);
      ++v28;
      if (v27 == &WebCore::JSDOMRect::s_info)
        goto LABEL_36;
    }
    goto LABEL_37;
  }
LABEL_36:
  v29 = *(_QWORD *)(v21 + 16 * v26 + 8);
  if (!v29)
  {
LABEL_37:
    v30 = (WebCore::JSDOMRect *)*((_QWORD *)v20 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype(v30, v20, v18);
    Structure = WebCore::JSDOMRect::createStructure((uint64_t *)v30, (uint64_t)v20, Prototype);
    v29 = WebCore::cacheDOMStructure((JSCell *)v20, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
  }
  v33 = (JSCell *)WebCore::JSDOMRect::create(v29, v20, (uint64_t *)&v50);
  WebCore::cacheWrapper<WebCore::DOMRect,WebCore::JSDOMRect>(*((_QWORD *)v20 + 415), (uint64_t *)v19, (uint64_t)v33);
  v35 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v35 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v35);
    if (Object)
    {
      v38 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v39 = (WebCore::JSDOMRect *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v37);
        if (!*((_DWORD *)v39 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) == 0)
        {
          v41 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSDOMRect>(v39, FunctionRealm);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v38, v41, v42);
          if (!*((_DWORD *)v39 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) == 0)
            JSC::JSObject::setStructure(v33, v39, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    v33 = 0;
  v44 = v50;
  v50 = 0;
  if (v44)
  {
    if (*((_DWORD *)v44 + 2) == 1)
    {
      if (*(_QWORD *)v44)
      {
        *(_QWORD *)(*(_QWORD *)v44 + 8) = 3;
        *(_QWORD *)v44 = 0;
      }
      bmalloc::api::isoDeallocate(v44, v34);
    }
    else
    {
      --*((_DWORD *)v44 + 2);
    }
  }
  return v33;
}

uint64_t WebCore::JSDOMRect::prototype(WebCore::JSDOMRect *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t CachedDOMStructure;
  WebCore::JSDOMGlobalObject *v6;
  JSC::JSCell *Prototype;
  uint64_t Structure;

  CachedDOMStructure = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSDOMRect::s_info);
  if (!CachedDOMStructure)
  {
    Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype(this, a2, v6);
    Structure = WebCore::JSDOMRect::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    CachedDOMStructure = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
  }
  return *(_QWORD *)(CachedDOMStructure + 48);
}

uint64_t WebCore::JSDOMRect::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSDOMRectReadOnly::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSDOMRectReadOnly::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSDOMRectReadOnly::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMRect::JSDOMRect(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

uint64_t WebCore::JSDOMRectReadOnly::JSDOMRectReadOnly(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

bmalloc::api **WTF::Ref<WebCore::DOMRectReadOnly,WTF::RawPtrTraits<WebCore::DOMRectReadOnly>,WTF::DefaultRefDerefTraits<WebCore::DOMRectReadOnly>>::~Ref(bmalloc::api **a1, void *a2)
{
  bmalloc::api *v3;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    if (*((_DWORD *)v3 + 2) == 1)
    {
      if (*(_QWORD *)v3)
      {
        *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
        *(_QWORD *)v3 = 0;
      }
      bmalloc::api::isoDeallocate(v3, a2);
    }
    else
    {
      --*((_DWORD *)v3 + 2);
    }
  }
  return a1;
}

uint64_t WebCore::JSDOMRect::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  ++*(_DWORD *)(v2 + 8);
  *a2 = v2;
  return this;
}

uint64_t WebCore::JSDOMRectReadOnly::prototype(WebCore::JSDOMRectReadOnly *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t CachedDOMStructure;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;
  JSC::JSCell *v9;
  uint64_t v10;

  CachedDOMStructure = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSDOMRectReadOnly::s_info);
  if (!CachedDOMStructure)
  {
    Structure = WebCore::JSDOMRectReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v9 = (JSC::JSCell *)WebCore::JSDOMRectReadOnlyPrototype::create(this, Structure, v7, v8);
    v10 = WebCore::JSDOMRectReadOnly::createStructure((uint64_t *)this, (uint64_t)a2, v9);
    CachedDOMStructure = WebCore::cacheDOMStructure((JSCell *)a2, v10, (uint64_t)&WebCore::JSDOMRectReadOnly::s_info);
  }
  return *(_QWORD *)(CachedDOMStructure + 48);
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRect>,(WebCore::DOMConstructorID)431>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3448);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>,(WebCore::DOMConstructorID)433>(a1, a2);
  v8 = v7;
  LODWORD(v35) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v33);
    v6[2] = SlowCase + (int)v33;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v35, &WebCore::JSDOMConstructor<WebCore::JSDOMRect>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 >= v11[2847])
  {
    v2 = v11[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v34 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v34);
    v11[2848] = v2 + (int)v34;
  }
  v11[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v35);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v35);
  v15 = v35;
  v35 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v35);
  v18 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (!v19)
    goto LABEL_19;
  v20 = *(_DWORD *)(v19 - 8);
  v21 = ((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) >> 22);
  v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
  v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
  v24 = v20 & ((v23 >> 31) ^ v23);
  v25 = *(char ***)(v19 + 16 * v24);
  if (v25 != &WebCore::JSDOMRect::s_info)
  {
    v32 = 1;
    while (v25)
    {
      v24 = ((_DWORD)v24 + v32) & v20;
      v25 = *(char ***)(v19 + 16 * v24);
      ++v32;
      if (v25 == &WebCore::JSDOMRect::s_info)
        goto LABEL_18;
    }
    goto LABEL_19;
  }
LABEL_18:
  v26 = *(_QWORD *)(v19 + 16 * v24 + 8);
  if (!v26)
  {
LABEL_19:
    Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype((WebCore::JSDOMRect *)a1, (JSC::VM *)a2, v17);
    Structure = WebCore::JSDOMRect::createStructure((uint64_t *)a1, a2, Prototype);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
  }
  v29 = *(_QWORD *)(v26 + 48);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v29, 14, (uint64_t)&v35);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v30 = v35;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMRect::s_info, (unint64_t *)&v35, (uint64_t)&WebCore::JSDOMRectConstructorTableValues, (unsigned __int8 *)v2);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3448) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMRectConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMRectPrototype::s_info != (char **)(16
                                                       * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRect>,(WebCore::DOMConstructorID)431>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMRect_x(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMRect_x(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMRect::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMRect::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 16) = v11;
  return 1;
}

unint64_t WebCore::jsDOMRect_y(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMRect_y(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMRect::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMRect::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 24) = v11;
  return 1;
}

unint64_t WebCore::jsDOMRect_width(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 32);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMRect_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMRect::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMRect::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 32) = v11;
  return 1;
}

unint64_t WebCore::jsDOMRect_height(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 40);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSDOMRect_height(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMRect::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMRect::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  *(double *)(v10 + 40) = v11;
  return 1;
}

uint64_t WebCore::JSDOMRectReadOnly::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::toJSNewlyCreated(uint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  uint64_t *v5;
  unint64_t CachedDOMStructure;
  WebCore::JSDOMGlobalObject *v7;
  WebCore::JSDOMRect *v8;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v11;

  v5 = (uint64_t *)*a3;
  CachedDOMStructure = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSDOMRect::s_info);
  if (!CachedDOMStructure)
  {
    v8 = (WebCore::JSDOMRect *)*((_QWORD *)a2 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype(v8, a2, v7);
    Structure = WebCore::JSDOMRect::createStructure((uint64_t *)v8, (uint64_t)a2, Prototype);
    CachedDOMStructure = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
  }
  v11 = WebCore::JSDOMRect::create(CachedDOMStructure, a2, a3);
  WebCore::cacheWrapper<WebCore::DOMRect,WebCore::JSDOMRect>(*((_QWORD *)a2 + 415), v5, v11);
  return v11;
}

{
  WebCore::JSDOMGlobalObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;

  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)*a3 + 128))(*a3))
  {
    v7 = *a3;
    v8 = *((_QWORD *)a2 + 412);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = ((unint64_t)&WebCore::JSMediaSource::s_info + ~((_QWORD)&WebCore::JSMediaSource::s_info << 32)) ^ (((unint64_t)&WebCore::JSMediaSource::s_info + ~((_QWORD)&WebCore::JSMediaSource::s_info << 32)) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(char ***)(v8 + 16 * v13);
      if (v14 == &WebCore::JSMediaSource::s_info)
      {
LABEL_8:
        v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
        if (v16)
        {
LABEL_10:
          v6 = WebCore::JSMediaSource::create(v16, a2, a3);
          WebCore::cacheWrapper<WebCore::MediaSource,WebCore::JSMediaSource>(*((_QWORD *)a2 + 415), v7, v6);
          return v6;
        }
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(char ***)(v8 + 16 * v13);
          ++v15;
          if (v14 == &WebCore::JSMediaSource::s_info)
            goto LABEL_8;
        }
      }
    }
    v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
    v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, v5);
    Structure = WebCore::JSMediaSourcePrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v21 = (JSC::JSCell *)WebCore::JSMediaSourcePrototype::create(v17, a2, Structure, v20);
    v22 = JSC::Structure::create((uint64_t *)v17, (int)a2, v21);
    v16 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSMediaSource::s_info);
    goto LABEL_10;
  }
  return WebCore::createWrapper<WebCore::ManagedMediaSource,WebCore::MediaSource>(a2, a3, v5);
}

{
  int v5;
  WebCore::JSDOMGlobalObject *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char **v16;
  int v17;
  unint64_t v18;
  WebCore::JSEventTarget *v19;
  JSC::JSCell *v20;
  unint64_t Structure;
  JSC::Structure *v22;
  JSC::JSCell *v23;
  uint64_t v24;

  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a3 + 128))(*a3);
  if ((v5 - 2) >= 2)
  {
    if (v5)
    {
      if (v5 != 1)
        return 2;
      return WebCore::createWrapper<WebCore::DataCue,WebCore::TextTrackCue>(a2, a3, v6);
    }
    v9 = *a3;
    v10 = *((_QWORD *)a2 + 412);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 - 8);
      v12 = ((unint64_t)&WebCore::JSTextTrackCue::s_info + ~((_QWORD)&WebCore::JSTextTrackCue::s_info << 32)) ^ (((unint64_t)&WebCore::JSTextTrackCue::s_info + ~((_QWORD)&WebCore::JSTextTrackCue::s_info << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(char ***)(v10 + 16 * v15);
      if (v16 == &WebCore::JSTextTrackCue::s_info)
      {
LABEL_12:
        v18 = *(_QWORD *)(v10 + 16 * v15 + 8);
        if (v18)
        {
LABEL_14:
          v8 = WebCore::JSTextTrackCue::create(v18, a2, a3);
          WebCore::cacheWrapper<WebCore::DataCue,WebCore::JSDataCue>(*((_QWORD *)a2 + 415), v9, v8);
          return v8;
        }
      }
      else
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(char ***)(v10 + 16 * v15);
          ++v17;
          if (v16 == &WebCore::JSTextTrackCue::s_info)
            goto LABEL_12;
        }
      }
    }
    v19 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
    v20 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v19, a2, v6);
    Structure = WebCore::JSTextTrackCuePrototype::createStructure((uint64_t *)v19, (uint64_t)a2, v20);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v23 = (JSC::JSCell *)WebCore::JSTextTrackCuePrototype::create(v19, a2, Structure, v22);
    v24 = WebCore::JSTextTrackCue::createStructure((uint64_t *)v19, (uint64_t)a2, v23);
    v18 = WebCore::cacheDOMStructure((JSCell *)a2, v24, (uint64_t)&WebCore::JSTextTrackCue::s_info);
    goto LABEL_14;
  }
  return WebCore::createWrapper<WebCore::VTTCue,WebCore::TextTrackCue>(a2, a3, v6);
}

uint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, DOMRect *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  unint64_t v16;
  WebCore::JSDOMRect *v17;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  void *v20;
  bmalloc::api *v21;
  int v23;
  bmalloc::api *v24;

  v6 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v6 + 48))
  {
    v24 = a3;
    v8 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get((uint64_t *)(v6 + 32), &v24);
  }
  else
  {
    v7 = *(_QWORD *)a3;
    if (!*(_QWORD *)a3 || (*(_BYTE *)(v7 + 8) & 3) != 0)
      goto LABEL_6;
    v8 = *(_QWORD *)v7;
  }
  if (v8)
    return v8;
LABEL_6:
  ++*((_DWORD *)a3 + 2);
  v24 = a3;
  v9 = *((_QWORD *)a2 + 412);
  if (v9)
  {
    v10 = *(_DWORD *)(v9 - 8);
    v11 = ((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = *(char ***)(v9 + 16 * v14);
    if (v15 == &WebCore::JSDOMRect::s_info)
    {
LABEL_8:
      v16 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (v16)
        goto LABEL_10;
    }
    else
    {
      v23 = 1;
      while (v15)
      {
        v14 = ((_DWORD)v14 + v23) & v10;
        v15 = *(char ***)(v9 + 16 * v14);
        ++v23;
        if (v15 == &WebCore::JSDOMRect::s_info)
          goto LABEL_8;
      }
    }
  }
  v17 = (WebCore::JSDOMRect *)*((_QWORD *)a2 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype(v17, a2, a3);
  Structure = WebCore::JSDOMRect::createStructure((uint64_t *)v17, (uint64_t)a2, Prototype);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
LABEL_10:
  v8 = WebCore::JSDOMRect::create(v16, a2, (uint64_t *)&v24);
  WebCore::cacheWrapper<WebCore::DOMRect,WebCore::JSDOMRect>(*((_QWORD *)a2 + 415), (uint64_t *)a3, v8);
  v21 = v24;
  v24 = 0;
  if (v21)
  {
    if (*((_DWORD *)v21 + 2) == 1)
    {
      if (*(_QWORD *)v21)
      {
        *(_QWORD *)(*(_QWORD *)v21 + 8) = 3;
        *(_QWORD *)v21 = 0;
      }
      bmalloc::api::isoDeallocate(v21, v20);
    }
    else
    {
      --*((_DWORD *)v21 + 2);
    }
  }
  return v8;
}

uint64_t WebCore::convertDictionary<WebCore::DOMRectInit>@<X0>(JSC::JSCell *this@<X1>, uint64_t result@<X0>, uint64_t a3@<X8>)
{
  _DWORD *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  JSC::JSGlobalObject *v9;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSC::VM *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  int v27;
  double v28;
  double v29;
  JSC::VM *v30;
  double v31;
  double v32;
  WTF::StringImpl *v33;

  v4 = *(_DWORD **)(result + 56);
  v5 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  v8 = 0.0;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v9 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
LABEL_51:
      v27 = 1;
      goto LABEL_41;
    }
    v11 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v13 = (WTF::StringImpl *)JSC::JSObject::get(v11, v9, (unint64_t)v33);
    if (v33)
    {
      if (*(_DWORD *)v33 == 2)
        WTF::StringImpl::destroy(v33, v12);
      else
        *(_DWORD *)v33 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_51;
    }
    if (v13 != (WTF::StringImpl *)10)
    {
      v33 = v13;
      v14 = (JSC::VM *)*((_QWORD *)v9 + 7);
      if ((unint64_t)v13 >= 0xFFFE000000000000)
      {
        v7 = (double)(int)v13;
      }
      else if ((unint64_t)v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, v9);
        v7 = v28;
      }
      else
      {
        *(_QWORD *)&v7 = (char *)v13 - 0x2000000000000;
      }
      if (*((_DWORD *)v14 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v14);
        if ((result & 1) != 0)
          goto LABEL_51;
      }
    }
    WTF::AtomStringImpl::addLiteral();
    v15 = v33;
    v17 = (WTF::StringImpl *)JSC::JSObject::get(v11, v9, (unint64_t)v33);
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v16);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_51;
    }
    if (v17 != (WTF::StringImpl *)10)
    {
      v33 = v17;
      v18 = (JSC::VM *)*((_QWORD *)v9 + 7);
      if ((unint64_t)v17 >= 0xFFFE000000000000)
      {
        v6 = (double)(int)v17;
      }
      else if ((unint64_t)v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, v9);
        v6 = v29;
      }
      else
      {
        *(_QWORD *)&v6 = (char *)v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
        if ((result & 1) != 0)
          goto LABEL_51;
      }
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v19 = v33;
    v21 = (WTF::StringImpl *)JSC::JSObject::get(v11, v9, (unint64_t)v33);
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v20);
      else
        *(_DWORD *)v19 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_51;
    }
    if (v21 != (WTF::StringImpl *)10)
    {
      v33 = v21;
      v22 = (JSC::VM *)*((_QWORD *)v9 + 7);
      if ((unint64_t)v21 >= 0xFFFE000000000000)
      {
        v8 = (double)(int)v21;
      }
      else if ((unint64_t)v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v30 = (JSC::VM *)*((_QWORD *)v9 + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, v9);
        v22 = v30;
        v8 = v31;
      }
      else
      {
        *(_QWORD *)&v8 = (char *)v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
        if ((result & 1) != 0)
          goto LABEL_51;
      }
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 10492));
    v23 = v33;
    result = JSC::JSObject::get(v11, v9, (unint64_t)v33);
    v25 = (WTF::StringImpl *)result;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        result = WTF::StringImpl::destroy(v23, v24);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v4[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      if ((result & 1) != 0)
        goto LABEL_51;
    }
    v5 = 0.0;
    if (v25 != (WTF::StringImpl *)10)
    {
      v33 = v25;
      v26 = (JSC::VM *)*((_QWORD *)v9 + 7);
      if ((unint64_t)v25 >= 0xFFFE000000000000)
      {
        v5 = (double)(int)v25;
      }
      else if ((unint64_t)v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        result = JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, v9);
      }
      else
      {
        *(_QWORD *)&v5 = (char *)v25 - 0x2000000000000;
      }
      if (*((_DWORD *)v26 + 20))
      {
        v32 = v5;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
        v5 = v32;
        if ((result & 1) != 0)
          goto LABEL_51;
      }
    }
  }
  v27 = 0;
  *(double *)a3 = v8;
  *(double *)(a3 + 8) = v5;
  *(double *)(a3 + 16) = v6;
  *(double *)(a3 + 24) = v7;
LABEL_41:
  *(_DWORD *)(a3 + 32) = v27;
  return result;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMRectList>::initializeProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDOMRectList>((uint64_t *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

uint64_t WebCore::JSDOMRectList::prototype(WebCore::JSDOMRectList *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSDOMRectList>((uint64_t *)this, (uint64_t)a2) + 48);
}

WebCore::DOMRectList *WebCore::JSDOMRectList::destroy(WebCore::JSDOMRectList *this, JSC::JSCell *a2)
{
  WebCore::DOMRectList *result;
  WTF *v4;
  void *v5;

  result = (WebCore::DOMRectList *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::DOMRectList::~DOMRectList(result, a2);
      return (WebCore::DOMRectList *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSDOMRectList::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  _BYTE v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = *(JSC::VM **)(a2 + 56);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v22 + 1;
    v31 = v23 - 1;
    while (v31)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v30 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          ++v30;
          --v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSDOMRectList::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x19499F84CLL);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSDOMRectList::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDOMRectList::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (*(_BYTE *)(v15 + 242))
            {
LABEL_21:
              if (v13[65])
                return JSC::JSObject::deleteProperty();
            }
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) != 0)
          {
            goto LABEL_21;
          }
        }
      }
    }
  }
  if (a3)
  {
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18 || (v29 = *v17 - 48, v29 > 9) || v18 >= 2 && *v17 == 48)
        {
LABEL_46:
          v30 = 0;
          v31 = 0;
          v32 = 0;
        }
        else
        {
          v33 = v18 - 1;
          v34 = v17 + 1;
          while (v33)
          {
            if (v29 > 0x19999999)
              goto LABEL_46;
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_46;
            v30 = 0;
            v31 = 0;
            v32 = 0;
            v28 = __CFADD__(v35, 10 * v29);
            v29 = v35 + 10 * v29;
            --v33;
            ++v34;
            if (v28)
              goto LABEL_47;
          }
          v30 = 0x100000000;
          if (v29 == -1)
          {
            v30 = 0;
            v31 = 0;
          }
          else
          {
            v31 = v29;
          }
          if (v29 == -1)
            v32 = 0;
          else
            v32 = v29 & 0xFFFFFF00;
        }
LABEL_47:
        v23 = v32 | v31;
        if ((v30 & 0x100000000) != 0)
          return *(_DWORD *)(v9 + 20) <= v23;
      }
      else
      {
        if ((_DWORD)v18
          && (v19 = *(unsigned __int16 *)v17 - 48, v19 <= 9)
          && (v18 < 2 || *(_WORD *)v17 != 48))
        {
          v25 = (unsigned __int16 *)(v17 + 2);
          v26 = v18 - 1;
          while (v26)
          {
            if (v19 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v19);
                v19 = v27 + 10 * v19;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_29;
          }
          v7 = v19 == -1;
          v22 = v19 & 0xFFFFFF00;
          v21 = v19;
          v20 = 0x100000000;
          if (v7)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
          }
        }
        else
        {
LABEL_29:
          v20 = 0;
          v21 = 0;
          v22 = 0;
        }
        v23 = v22 | v21;
        if ((v20 & 0x100000000) != 0)
          return *(_DWORD *)(v9 + 20) <= v23;
      }
    }
  }
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSDOMRectList::deletePropertyByIndex(WebCore::JSDOMRectList *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 20) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 20) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 20) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 20) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 20) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 20) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 20) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDOMRectList::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSDOMRectList::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4);
}

uint64_t WebCore::JSDOMRectList::getOwnPropertySlotByIndex(WebCore::JSDOMRectList *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  JSC::VM *v9;
  uint64_t v10;
  uint64_t result;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v7 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v7 + 20) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(v7 + 8) + 8 * a3);
  if (!v8)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v10 = WebCore::toJS(this, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v8, (DOMRect *)a4);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  *(_QWORD *)a4 = v10;
  *(_DWORD *)(a4 + 16) = 2;
  *(_QWORD *)(a4 + 32) = this;
  result = 1;
  *(_BYTE *)(a4 + 49) = 1;
  return result;
}

uint64_t WebCore::JSDOMRectList::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 20);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDOMRectList::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSDOMRectList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMRectList::JSDOMRectList(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

unint64_t WebCore::JSDOMRectList::createPrototype(WebCore::JSDOMRectList *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  Structure = WebCore::JSDOMRectListPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSDOMRectListPrototype::create(this, Structure, v5, v6);
}

uint64_t WebCore::JSDOMRectListPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMRectListPrototype::create(WebCore::JSDOMRectListPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t Direct;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  uint64_t v24;
  int *v25;
  JSC::Structure **v26;
  int *v27;
  int v28;
  int v29;
  JSC::Structure *v30;
  int v31;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSDOMRectList::s_info, &WebCore::JSDOMRectListPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v10, this, (unint64_t)v11);
  v22 = 0;
  v23 = SlowCase;
  v24 = 0x1000000FFFFFFFFLL;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, Direct, 4, (uint64_t)&v22);
  if (*v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v13);
  else
    *v11 -= 2;
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, &v22);
  v17 = v22;
  v22 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v31 = *(_DWORD *)SlowCase;
  v30 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v28 = 0;
  v29 = v19;
  v22 = (WTF::StringImpl *)&v29;
  v23 = SlowCase;
  v24 = (uint64_t)this;
  v25 = &v31;
  v26 = &v30;
  v27 = &v28;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)&v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v28, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMRectList>,(WebCore::DOMConstructorID)432>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3456);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMRectList>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMRectList>::create(a1, Structure, a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3456) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMRectList::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t result;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  WebCore::JSDOMGlobalObject *v42;
  uint64_t v43;
  unsigned int v44;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;

  v6 = *(JSC::VM **)(a2 + 56);
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v8 = *(_DWORD *)(a3 + 16);
  if ((v8 & 0x20) == 0)
  {
    v9 = *(_BYTE **)(a3 + 8);
    v10 = *(unsigned int *)(a3 + 4);
    if ((v8 & 4) != 0)
    {
      if (!(_DWORD)v10)
        goto LABEL_6;
      v11 = *v9 - 48;
      if (v11 > 9 || v10 >= 2 && *v9 == 48)
        goto LABEL_6;
      v38 = v10 - 1;
      v39 = v9 + 1;
      while (v38)
      {
        if (v11 <= 0x19999999)
        {
          v40 = *v39 - 48;
          if (v40 <= 9)
          {
            v24 = __CFADD__(v40, 10 * v11);
            v11 = v40 + 10 * v11;
            --v38;
            ++v39;
            if (!v24)
              continue;
          }
        }
        goto LABEL_6;
      }
    }
    else
    {
      if (!(_DWORD)v10)
        goto LABEL_6;
      v11 = *(unsigned __int16 *)v9 - 48;
      if (v11 > 9 || v10 >= 2 && *(_WORD *)v9 == 48)
        goto LABEL_6;
      v21 = (unsigned __int16 *)(v9 + 2);
      v22 = v10 - 1;
      while (v22)
      {
        if (v11 <= 0x19999999)
        {
          v23 = *v21 - 48;
          if (v23 <= 9)
          {
            v24 = __CFADD__(v23, 10 * v11);
            v11 = v23 + 10 * v11;
            ++v21;
            --v22;
            if (!v24)
              continue;
          }
        }
        goto LABEL_6;
      }
    }
    if (v11 != -1)
    {
      v41 = *(_QWORD *)(a1 + 24);
      if (*(_DWORD *)(v41 + 20) > v11)
      {
        v42 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(v41 + 8) + 8 * v11);
        if (v42)
        {
          v43 = WebCore::toJS((WebCore *)a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v42, (DOMRect *)a4);
          if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
          {
            *(_QWORD *)a4 = v43;
            *(_DWORD *)(a4 + 16) = 2;
            *(_QWORD *)(a4 + 32) = a1;
            result = 1;
            *(_BYTE *)(a4 + 49) = 1;
            return result;
          }
          return 0;
        }
      }
    }
  }
LABEL_6:
  if (!(a3 >> 4)
    || (v12 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v12 + 0x20)) != 0)
    || (v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), *(JSC::VM **)(a2 + 56))) == 0|| (v48 = a3, v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v48), (_DWORD)v14 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
    {
      v15 = *(_DWORD *)(a3 + 16);
      if ((v15 & 0x20) == 0)
      {
        v16 = *(_BYTE **)(a3 + 8);
        v17 = *(unsigned int *)(a3 + 4);
        if ((v15 & 4) != 0)
        {
          if ((_DWORD)v17)
          {
            v44 = *v16 - 48;
            if (v44 > 9 || v17 >= 2 && *v16 == 48)
            {
LABEL_81:
              v19 = 0;
            }
            else
            {
              v45 = v16 + 1;
              v46 = v17 - 1;
              while (v46)
              {
                if (v44 > 0x19999999)
                  goto LABEL_81;
                v47 = *v45 - 48;
                if (v47 > 9)
                  goto LABEL_81;
                v19 = 0;
                v24 = __CFADD__(v47, 10 * v44);
                v44 = v47 + 10 * v44;
                ++v45;
                --v46;
                if (v24)
                  goto LABEL_16;
              }
              v19 = 0x100000000;
              if (v44 == -1)
                v19 = 0;
            }
          }
          else
          {
            v19 = 0;
          }
        }
        else if ((_DWORD)v17)
        {
          v18 = *(unsigned __int16 *)v16 - 48;
          if (v18 > 9 || v17 >= 2 && *(_WORD *)v16 == 48)
          {
LABEL_15:
            v19 = 0;
          }
          else
          {
            v25 = (unsigned __int16 *)(v16 + 2);
            v26 = v17 - 1;
            while (v26)
            {
              if (v18 <= 0x19999999)
              {
                v27 = *v25 - 48;
                if (v27 <= 9)
                {
                  v24 = __CFADD__(v27, 10 * v18);
                  v18 = v27 + 10 * v18;
                  ++v25;
                  --v26;
                  if (!v24)
                    continue;
                }
              }
              goto LABEL_15;
            }
            v32 = v18 == -1;
            v19 = 0x100000000;
            if (v32)
              v19 = 0;
          }
        }
        else
        {
          v19 = 0;
        }
LABEL_16:
        if ((v19 & 0x100000000) != 0)
          return JSC::JSObject::getOwnPropertySlotByIndex();
      }
      return 0;
    }
    return 1;
  }
  if ((int)v14 > 63)
  {
    v28 = *(_QWORD *)(a1 + 8) - 8;
    v29 = 0x3F00000000 - (v14 << 32);
  }
  else
  {
    v28 = a1 + 16;
    v29 = v14 << 32;
  }
  v30 = *(_QWORD *)(v28 + (v29 >> 29));
  if ((v30 & 0xFFFE000000000002) != 0)
  {
LABEL_41:
    *(_QWORD *)a4 = v30;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v14);
    *(_DWORD *)(a4 + 20) = v14;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v31 = *(unsigned __int8 *)(v30 + 5);
  if (v31 != 6)
  {
    if (v31 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_41;
  }
  v33 = *(_DWORD *)(v12 + 16) & 3;
  v35 = *(_QWORD *)(v30 + 8);
  v34 = *(_QWORD *)(v30 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE) + 0x4C))
  {
    v37 = *(_QWORD *)(v30 + 24);
    v36 = *(_QWORD *)(v30 + 32);
    *(_QWORD *)a4 = v35;
    *(_QWORD *)(a4 + 8) = v34;
    *(_DWORD *)(a4 + 16) = HIDWORD(v14);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v33 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v37;
    *(_QWORD *)(a4 + 80) = v36;
  }
  else
  {
    *(_QWORD *)a4 = v35;
    *(_QWORD *)(a4 + 8) = v34;
    *(_DWORD *)(a4 + 16) = HIDWORD(v14);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v33 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

unint64_t WebCore::jsDOMRectListConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMRectListPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMRectList>,(WebCore::DOMConstructorID)432>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMRectList_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 20);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDOMRectList::subspaceForImpl(WebCore::JSDOMRectList *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3536);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 3536))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 3536);
    *(_QWORD *)(v9 + 3536) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSDOMRectList::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMRectListOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSDOMRectListOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::DOMRectList *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::DOMRectList *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  int v23;
  WTF *v24;
  void *v25;

  v3 = *(WebCore::DOMRectList **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::DOMRectList **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v23 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v23) & v7;
        v12 = *(WebCore::DOMRectList **)(v5 + 16 * v11);
        ++v23;
        if (v12 == v3)
          goto LABEL_3;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_3:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v13 = (_QWORD *)(v5 + 16 * v11);
      *v13 = -1;
      v16 = v13[1];
      v15 = v13 + 1;
      v14 = v16;
      if (v16)
      {
        *(_QWORD *)(v14 + 8) = 3;
        *v15 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v17 = *v4;
      if (*v4)
        v18 = *(_DWORD *)(v17 - 12) - 1;
      else
        v18 = -1;
      *(_DWORD *)(v17 - 12) = v18;
      v19 = *v4;
      if (*v4)
      {
        v20 = 6 * *(_DWORD *)(v19 - 12);
        v21 = *(_DWORD *)(v19 - 4);
        if (v20 < v21 && v21 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v21 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    WebCore::DOMRectList::~DOMRectList(v3, a2);
    WTF::fastFree(v24, v25);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::DOMRectList,WebCore::DOMRectList>(uint64_t a1, JSC::VM *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v15;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;
  WebCore::JSDOMRectList *v19;
  _QWORD *v20;
  unint64_t SlowCase;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *Allocator;
  int v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSDOMRectList::s_info + ~((_QWORD)&WebCore::JSDOMRectList::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRectList::s_info + ~((_QWORD)&WebCore::JSDOMRectList::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSDOMRectList::s_info)
    {
LABEL_3:
      v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v12)
        goto LABEL_5;
    }
    else
    {
      v28 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v28) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v28;
        if (v11 == &WebCore::JSDOMRectList::s_info)
          goto LABEL_3;
      }
    }
  }
  v13 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSDOMRectListPrototype::createStructure(v13, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v17 = (JSC::JSCell *)WebCore::JSDOMRectListPrototype::create((WebCore::JSDOMRectListPrototype *)v13, Structure, v15, v16);
  v18 = WebCore::JSDOMRectList::createStructure(v13, a1, v17);
  v12 = WebCore::cacheDOMStructure((JSCell *)a1, v18, (uint64_t)&WebCore::JSDOMRectList::s_info);
LABEL_5:
  v19 = *(WebCore::JSDOMRectList **)(a1 + 56);
  v20 = (_QWORD *)WebCore::JSDOMRectList::subspaceForImpl(v19, a2);
  SlowCase = v20[3];
  if (SlowCase < v20[4])
  {
LABEL_6:
    v20[3] = SlowCase + 32;
    goto LABEL_7;
  }
  SlowCase = v20[5];
  if ((SlowCase & 1) == 0)
  {
    v29 = *(_QWORD *)(SlowCase + 8) ^ v20[6];
    v20[4] = SlowCase + HIDWORD(v29);
    v20[5] = SlowCase + (int)v29;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v12);
  v22 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v22;
  if (*((_BYTE *)v19 + 755))
    __dmb(0xAu);
  v23 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE335178 & 1) == 0)
  {
    qword_1EE335170 = (uint64_t)&off_1E3259E08;
    byte_1EE335178 = 1;
  }
  v31 = v4;
  if ((SlowCase & 8) != 0)
    v24 = (SlowCase - 112) | 1;
  else
    v24 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v24 & 1) != 0)
    v25 = v24 + 47;
  else
    v25 = *(_QWORD *)v24 + 32;
  Allocator = *(_QWORD **)(v25 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v25 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE335170;
  Allocator[2] = v23;
  v30 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), &v31, (uint64_t *)&v30);
  if (v30)
    v30[1] = 3;
  return SlowCase;
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::DOMRectList *a4)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  WebCore::DOMRectList *v15;
  WTF *v17;
  void *v18;
  WebCore::DOMRectList *v19;

  v4 = *(_QWORD *)(*((_QWORD *)a2 + 415) + 32);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 - 8);
    v6 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
    v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
    v9 = v5 & ((v8 >> 31) ^ v8);
    v10 = *(WebCore::JSDOMGlobalObject **)(v4 + 16 * v9);
    if (v10 == a3)
    {
LABEL_6:
      v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 8) & 3) == 0)
        {
          v13 = *(_QWORD *)v12;
          if (*(_QWORD *)v12)
            return v13;
        }
      }
    }
    else
    {
      v11 = 1;
      while (v10)
      {
        v9 = ((_DWORD)v9 + v11) & v5;
        v10 = *(WebCore::JSDOMGlobalObject **)(v4 + 16 * v9);
        ++v11;
        if (v10 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v19 = a3;
  v13 = WebCore::createWrapper<WebCore::DOMRectList,WebCore::DOMRectList>((uint64_t)a2, (JSC::VM *)&v19);
  v15 = v19;
  v19 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 1)
    {
      WebCore::DOMRectList::~DOMRectList(v15, v14);
      WTF::fastFree(v17, v18);
    }
    else
    {
      --*(_DWORD *)v15;
    }
  }
  return v13;
}

uint64_t WebCore::JSDOMRectList::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDOMRectList::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDOMRectList::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  double v14;
  JSC::VM *v15;
  unint64_t v16;
  JSC::VM *v17;
  uint64_t v18;
  void *v19;
  JSCell *v20;
  JSC::JSCell *v21;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v23;
  JSC::JSGlobalObject *v24;
  uint64_t v25;
  uint64_t FunctionRealm;
  JSC::JSObject *v27;
  JSC::Structure *v28;
  unint64_t SubclassStructure;
  bmalloc::api *v30;
  double v32;
  double v33;
  double v34;
  double v35;
  bmalloc::api *v36;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  LODWORD(v6) = *(_DWORD *)(a2 + 32);
  if ((_DWORD)v6 == 1)
  {
    v14 = 0.0;
    v9 = 0.0;
    v8 = 0.0;
    v12 = 0.0;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 48);
    v8 = 0.0;
    v9 = 0.0;
    if (v7 != 10)
    {
      v36 = *(bmalloc::api **)(a2 + 48);
      if (v7 >= 0xFFFE000000000000)
      {
        v9 = (double)(int)v7;
      }
      else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, a1);
        v9 = v32;
      }
      else
      {
        *(_QWORD *)&v9 = v7 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v6) = *(_DWORD *)(a2 + 32);
    }
    v6 = (int)v6;
    if ((unint64_t)((int)v6 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v10 = *(_QWORD *)(a2 + 56);
      if (v10 != 10)
      {
        v36 = *(bmalloc::api **)(a2 + 56);
        v11 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v10 >= 0xFFFE000000000000)
        {
          v8 = (double)(int)v10;
        }
        else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, a1);
          v8 = v33;
        }
        else
        {
          *(_QWORD *)&v8 = v10 - 0x2000000000000;
        }
        if (*((_DWORD *)v11 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v11) & 1) != 0)
          return 0;
        v6 = *(int *)(a2 + 32);
      }
    }
    v12 = 0.0;
    if ((unint64_t)(v6 - 4) > 0xFFFFFFFFFFFFFFFCLL || (v13 = *(_QWORD *)(a2 + 64), v13 == 10))
    {
      v14 = 0.0;
    }
    else
    {
      v36 = *(bmalloc::api **)(a2 + 64);
      v15 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v13 >= 0xFFFE000000000000)
      {
        v14 = (double)(int)v13;
      }
      else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, a1);
        v14 = v34;
      }
      else
      {
        *(_QWORD *)&v14 = v13 - 0x2000000000000;
      }
      if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
        return 0;
      v6 = *(int *)(a2 + 32);
    }
    if ((unint64_t)(v6 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v16 = *(_QWORD *)(a2 + 72);
      if (v16 != 10)
      {
        v36 = *(bmalloc::api **)(a2 + 72);
        v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v16 >= 0xFFFE000000000000)
        {
          v12 = (double)(int)v16;
        }
        else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, a1);
          v12 = v35;
        }
        else
        {
          *(_QWORD *)&v12 = v16 - 0x2000000000000;
        }
        if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
          return 0;
      }
    }
  }
  v18 = bmalloc::api::isoAllocate();
  *(_QWORD *)v18 = 0;
  *(_DWORD *)(v18 + 8) = 1;
  *(double *)(v18 + 16) = v9;
  *(double *)(v18 + 24) = v8;
  *(double *)(v18 + 32) = v14;
  *(double *)(v18 + 40) = v12;
  v36 = (bmalloc::api *)v18;
  v20 = (JSCell *)WebCore::createWrapper<WebCore::DOMRectReadOnly,WebCore::DOMRectReadOnly>(*(_QWORD *)(v5 + 40), (uint64_t *)&v36);
  v21 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v21 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v21);
    if (Object)
    {
      v24 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v25 = *((_QWORD *)a1 + 7);
        FunctionRealm = JSC::getFunctionRealm(a1, Object, v23);
        if (!*(_DWORD *)(v25 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v25) & 1) == 0)
        {
          v27 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSDOMRectReadOnly>((uint64_t *)v25, FunctionRealm);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v24, v27, v28);
          if (!*(_DWORD *)(v25 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v25) & 1) == 0)
            JSC::JSObject::setStructure(v20, (JSC::VM *)v25, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    v20 = 0;
  v30 = v36;
  v36 = 0;
  if (v30)
  {
    if (*((_DWORD *)v30 + 2) == 1)
    {
      if (*(_QWORD *)v30)
      {
        *(_QWORD *)(*(_QWORD *)v30 + 8) = 3;
        *(_QWORD *)v30 = 0;
      }
      bmalloc::api::isoDeallocate(v30, v19);
    }
    else
    {
      --*((_DWORD *)v30 + 2);
    }
  }
  return v20;
}

unint64_t WebCore::JSDOMRectReadOnly::createPrototype(WebCore::JSDOMRectReadOnly *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  Structure = WebCore::JSDOMRectReadOnlyPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSDOMRectReadOnlyPrototype::create(this, Structure, v5, v6);
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>,(WebCore::DOMConstructorID)433>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  JSC::JSCell *v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3464);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v36) = 67099;
  if (((unint64_t)v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v34);
    v6[2] = SlowCase + (int)v34;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v6[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
  }
  v10[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v6[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v6[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v16 = *(_QWORD *)(v6[227] + 2160);
  v17 = *(_QWORD *)(a2 + 3296);
  if (!v17)
    goto LABEL_19;
  v18 = *(_DWORD *)(v17 - 8);
  v19 = ((unint64_t)&WebCore::JSDOMRectReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMRectReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRectReadOnly::s_info + ~((_QWORD)&WebCore::JSDOMRectReadOnly::s_info << 32)) >> 22);
  v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
  v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
  v22 = v18 & ((v21 >> 31) ^ v21);
  v23 = *(char ***)(v17 + 16 * v22);
  if (v23 != &WebCore::JSDOMRectReadOnly::s_info)
  {
    v33 = 1;
    while (v23)
    {
      v22 = ((_DWORD)v22 + v33) & v18;
      v23 = *(char ***)(v17 + 16 * v22);
      ++v33;
      if (v23 == &WebCore::JSDOMRectReadOnly::s_info)
        goto LABEL_18;
    }
    goto LABEL_19;
  }
LABEL_18:
  v24 = *(_QWORD *)(v17 + 16 * v22 + 8);
  if (!v24)
  {
LABEL_19:
    Structure = WebCore::JSDOMRectReadOnlyPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v28 = (JSC::JSCell *)WebCore::JSDOMRectReadOnlyPrototype::create((WebCore::JSDOMRectReadOnlyPrototype *)a1, Structure, v26, v27);
    v29 = WebCore::JSDOMRectReadOnly::createStructure((uint64_t *)a1, a2, v28);
    v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMRectReadOnly::s_info);
  }
  v30 = *(_QWORD *)(v24 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v30, 14, (uint64_t)&v36);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v31 = v36;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMRectReadOnly::s_info, (unint64_t *)&v36, (uint64_t)&WebCore::JSDOMRectReadOnlyConstructorTableValues, (unsigned __int8 *)v2);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3464) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMRectReadOnlyConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMRectReadOnlyPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>,(WebCore::DOMConstructorID)433>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMRectReadOnly_x(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMRectReadOnly_y(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMRectReadOnly_top(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 24);
  if (v3 + *(double *)(v2 + 40) < v3)
    v3 = v3 + *(double *)(v2 + 40);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMRectReadOnly_right(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 16);
  if (v3 + *(double *)(v2 + 32) > v3)
    v3 = v3 + *(double *)(v2 + 32);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMRectReadOnly_bottom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 24);
  if (v3 + *(double *)(v2 + 40) > v3)
    v3 = v3 + *(double *)(v2 + 40);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDOMRectReadOnly_left(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 16);
  if (v3 + *(double *)(v2 + 32) < v3)
    v3 = v3 + *(double *)(v2 + 32);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

uint64_t WebCore::JSDOMRectReadOnly::subspaceForImpl(WebCore::JSDOMRectReadOnly *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3544);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 3544))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 3544);
    *(_QWORD *)(v9 + 3544) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSDOMRectReadOnly::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMRectReadOnlyOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  WTF::ConcurrentPtrHashSet *v6;
  _DWORD *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;

  v5 = *(void **)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from DOMRectReadOnly";
    a5[1] = 31;
  }
  v6 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v7 = (_DWORD *)*((_QWORD *)v6 + 6);
  if ((_DWORD *)((char *)v6 + 56) == v7)
  {
    v16 = a4;
    v17 = v5;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v6, v5);
    a4 = v16;
    v5 = v17;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v5);
      return 1;
    }
  }
  else
  {
    v8 = v7[1];
    v9 = ((unint64_t)v5 + ~((_QWORD)v5 << 32)) ^ (((unint64_t)v5 + ~((_QWORD)v5 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = v12;
    while (1)
    {
      v14 = *(void **)&v7[2 * v13 + 4];
      if (!v14)
        return 0;
      if (v5 == v14)
        goto LABEL_12;
      v13 = (v13 + 1) & v8;
      if (v13 == v12)
      {
        __break(0xC471u);
        JUMPOUT(0x1949A2278);
      }
    }
  }
  return result;
}

uint64_t WebCore::createWrapper<WebCore::DOMRectReadOnly,WebCore::DOMRectReadOnly>(uint64_t a1, uint64_t *a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)*a2;
  v5 = WebCore::getDOMStructure<WebCore::JSDOMRectReadOnly>(*(uint64_t **)(a1 + 56), a1);
  v6 = WebCore::JSDOMRectReadOnly::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::DOMRectReadOnly,WebCore::JSDOMRectReadOnly>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::DOMRectReadOnly *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  bmalloc::api *v11;

  v6 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v6 + 48))
  {
    v11 = a3;
    v8 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get((uint64_t *)(v6 + 32), &v11);
  }
  else
  {
    v7 = *(_QWORD *)a3;
    if (!*(_QWORD *)a3 || (*(_BYTE *)(v7 + 8) & 3) != 0)
      goto LABEL_6;
    v8 = *(_QWORD *)v7;
  }
  if (!v8)
  {
LABEL_6:
    ++*((_DWORD *)a3 + 2);
    v11 = a3;
    v8 = WebCore::createWrapper<WebCore::DOMRectReadOnly,WebCore::DOMRectReadOnly>((uint64_t)a2, (uint64_t *)&v11);
    WTF::Ref<WebCore::DOMRectReadOnly,WTF::RawPtrTraits<WebCore::DOMRectReadOnly>,WTF::DefaultRefDerefTraits<WebCore::DOMRectReadOnly>>::~Ref(&v11, v9);
  }
  return v8;
}

uint64_t WebCore::JSDOMRectReadOnly::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDOMRectReadOnly::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDOMRectReadOnly::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

WTF::StringImpl *WebCore::JSDOMSelectionPrototype::finishCreation(WebCore::JSDOMSelectionPrototype *this, JSC::VM *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *result;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<30u>(a2, (uint64_t)&WebCore::JSDOMSelection::s_info, (uint64_t)&WebCore::JSDOMSelectionPrototypeTableValues, this);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v4 && *(_BYTE *)(v4 + 274))
    goto LABEL_40;
  v5 = (int *)((char *)a2 + 93124);
  v6 = v4 - 192;
  if (!v4)
    v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 680) + 680);
  v8 = (v7 & 0x800000000000000) == 0;
  if ((v7 & 0x800000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v17 = v26;
    v18 = *v5;
    *v5 = 1;
    LODWORD(v26) = -1;
    WORD2(v26) = 1;
    JSC::JSObject::deleteProperty();
    *v5 = v18;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v19);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1949A278CLL);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 696) & 0x10) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v20 = v26;
    v21 = *v5;
    v8 = 1;
    *v5 = 1;
    LODWORD(v26) = -1;
    WORD2(v26) = 1;
    JSC::JSObject::deleteProperty();
    *v5 = v21;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v22);
      else
        *(_DWORD *)v20 -= 2;
    }
  }
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v11)
  {
    if (*(_BYTE *)(v11 + 274))
    {
LABEL_40:
      __break(0xC471u);
      JUMPOUT(0x1949A276CLL);
    }
  }
  v12 = v11 - 192;
  if (!v11)
    v12 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v12 + 680) + 696) & 0x10) != 0)
  {
    if (!v8)
      goto LABEL_19;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v23 = v26;
    v24 = *v5;
    *v5 = 1;
    LODWORD(v26) = -1;
    WORD2(v26) = 1;
    JSC::JSObject::deleteProperty();
    *v5 = v24;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v25);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), a2, this);
LABEL_19:
  v13 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::jsNontrivialString((uint64_t)a2, &v26);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v13, v14, 6);
  result = v26;
  v26 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v15);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

JSC::VM *JSC::reifyStaticProperties<30u>(JSC::VM *result, uint64_t a2, uint64_t a3, JSC::JSObject *this)
{
  JSC::VM *v7;
  uint64_t i;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v7 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 1200; i += 40)
  {
    v9 = *(_QWORD *)(a3 + i + 8);
    if (v9)
    {
      if (v9 == 2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v7 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v10 = v12;
      result = (JSC::VM *)JSC::reifyStaticProperty(v7, a2, (unint64_t *)&v12, a3 + i, (unsigned __int8 *)this);
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v10, v11);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMSelection::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMSelection::createPrototype(WebCore::JSDOMSelection *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDOMSelectionPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDOMSelectionPrototype::create(WebCore::JSDOMSelectionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMSelectionPrototype::finishCreation((WebCore::JSDOMSelectionPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMSelection>,(WebCore::DOMConstructorID)711>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5688);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v20) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v18);
    v5[2] = SlowCase + (int)v18;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v20, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMSelection>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v19 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v19);
    v9[2848] = v2 + (int)v19;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v20);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v20);
  v13 = v20;
  v20 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v20);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSDOMSelection>((WebCore::JSDOMSelection *)a1, (JSC::JSCell **)a2)
                  + 48);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v16, 14, (uint64_t)&v20);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5688) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

void WebCore::JSDOMSelection::~JSDOMSelection(WebCore::JSDOMSelection *this, void *a2)
{
  WTF *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  WTF *v8;
  WTF *v9;
  WTF *v10;

  v3 = (WTF *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v4 = (unsigned int *)*((_QWORD *)v3 + 1);
      *((_QWORD *)v3 + 1) = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          v9 = v3;
          v10 = (WTF *)v4;
          atomic_store(1u, v4);
          v7 = v4[7];
          if ((_DWORD)v7)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v10 + 2), (WTF::StringImpl *)(*((_QWORD *)v10 + 2) + 32 * v7));
          v8 = (WTF *)*((_QWORD *)v10 + 2);
          if (v8)
          {
            *((_QWORD *)v10 + 2) = 0;
            *((_DWORD *)v10 + 6) = 0;
            WTF::fastFree(v8, a2);
          }
          WTF::fastFree(v10, a2);
          v3 = v9;
        }
      }
      WTF::fastFree(v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
}

unint64_t WebCore::jsDOMSelectionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMSelectionPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMSelection>,(WebCore::DOMConstructorID)711>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDOMSelection_anchorNode(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  unsigned int *v3;
  JSC::JSGlobalObject *v4;
  void *v5;
  WebCore::Node *v6;
  WebCore::Node *v7;
  WebCore::JSDOMGlobalObject *v8;
  unint64_t v9;
  void *v11;
  WebCore::JSDOMGlobalObject *v12;
  WebCore::Node *v13[2];

  v3 = *(unsigned int **)(a2 + 24);
  v4 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMSelection::anchorPosition((uint64_t)v3, (uint64_t)v13);
  WebCore::DOMSelection::shadowAdjustedNode(v3, (const WebCore::Position *)v13, &v12);
  v7 = v13[0];
  v13[0] = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  v8 = v12;
  if (!v12)
    return 2;
  v9 = WebCore::toJS(a1, v4, v12, v6);
  if (*((_DWORD *)v8 + 6) == 2)
  {
    if ((*((_WORD *)v8 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v8, v11);
  }
  else
  {
    *((_DWORD *)v8 + 6) -= 2;
  }
  return v9;
}

unint64_t WebCore::jsDOMSelection_anchorOffset(uint64_t a1, uint64_t a2)
{
  WebCore::DOMSelection *v2;
  void *v3;
  unsigned int v4;
  WebCore::Node *v5;
  WebCore::Node *v7[2];

  v2 = *(WebCore::DOMSelection **)(a2 + 24);
  WebCore::DOMSelection::anchorPosition((uint64_t)v2, (uint64_t)v7);
  v4 = WebCore::DOMSelection::shadowAdjustedOffset(v2, (const WebCore::Position *)v7);
  v5 = v7[0];
  v7[0] = 0;
  if (v5)
  {
    if (*((_DWORD *)v5 + 6) == 2)
    {
      if ((*((_WORD *)v5 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v5, v3);
    }
    else
    {
      *((_DWORD *)v5 + 6) -= 2;
    }
  }
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::jsDOMSelection_focusNode(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  unsigned int *v3;
  JSC::JSGlobalObject *v4;
  void *v5;
  WebCore::Node *v6;
  WebCore::Node *v7;
  WebCore::JSDOMGlobalObject *v8;
  unint64_t v9;
  void *v11;
  WebCore::JSDOMGlobalObject *v12;
  WebCore::Node *v13[2];

  v3 = *(unsigned int **)(a2 + 24);
  v4 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMSelection::focusPosition((uint64_t)v3, (uint64_t)v13);
  WebCore::DOMSelection::shadowAdjustedNode(v3, (const WebCore::Position *)v13, &v12);
  v7 = v13[0];
  v13[0] = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  v8 = v12;
  if (!v12)
    return 2;
  v9 = WebCore::toJS(a1, v4, v12, v6);
  if (*((_DWORD *)v8 + 6) == 2)
  {
    if ((*((_WORD *)v8 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v8, v11);
  }
  else
  {
    *((_DWORD *)v8 + 6) -= 2;
  }
  return v9;
}

unint64_t WebCore::jsDOMSelection_focusOffset(uint64_t a1, uint64_t a2)
{
  WebCore::DOMSelection *v2;
  void *v3;
  unsigned int v4;
  WebCore::Node *v5;
  WebCore::Node *v7[2];

  v2 = *(WebCore::DOMSelection **)(a2 + 24);
  WebCore::DOMSelection::focusPosition((uint64_t)v2, (uint64_t)v7);
  v4 = WebCore::DOMSelection::shadowAdjustedOffset(v2, (const WebCore::Position *)v7);
  v5 = v7[0];
  v7[0] = 0;
  if (v5)
  {
    if (*((_DWORD *)v5 + 6) == 2)
    {
      if ((*((_WORD *)v5 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v5, v3);
    }
    else
    {
      *((_DWORD *)v5 + 6) -= 2;
    }
  }
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::jsDOMSelection_isCollapsed(uint64_t a1, uint64_t a2)
{
  if (WebCore::DOMSelection::isCollapsed(*(WebCore::DOMSelection **)(a2 + 24)))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsDOMSelection_rangeCount(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::DOMSelection::rangeCount(*(WebCore::DOMSelection **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::jsDOMSelection_type(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::DOMSelection::type((uint64_t *)&v11, *(WebCore::DOMSelection **)(a2 + 24));
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsDOMSelection_direction(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  WebCore::DOMSelection::direction(*(_QWORD *)(a2 + 24), (uint64_t *)&v13);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = v13;
  if (!v13)
    return *v5;
  v7 = *((_DWORD *)v13 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v4 + 64760);
      if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
    if ((*((_BYTE *)v13 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_4;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v5;
  }
LABEL_7:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v3);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

uint64_t WebCore::jsDOMSelection_baseNode(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  unsigned int *v3;
  uint64_t v4;
  void *v5;
  WebCore::Document *v6;
  WebCore::Node *v7;
  WebCore::Node *v8;
  unint64_t Wrapper;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  WebCore::Node *v18;
  int v19;
  WebCore::Node *v20;
  WebCore::Node *v21;
  WebCore::Node *v22[2];

  v3 = *(unsigned int **)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMSelection::basePosition((uint64_t)v3, (uint64_t)v22);
  WebCore::DOMSelection::shadowAdjustedNode(v3, (const WebCore::Position *)v22, &v21);
  v7 = v22[0];
  v22[0] = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  v8 = v21;
  if (!v21)
    return 2;
  if (*(_BYTE *)(v4 + 3328))
  {
    v11 = *((_QWORD *)v21 + 1);
    if (!v11)
      goto LABEL_20;
  }
  else
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v4 + 3320) + 32);
    if (!v12)
      goto LABEL_20;
    v13 = *(_DWORD *)(v12 - 8);
    v14 = ((unint64_t)v21 + ~((_QWORD)v21 << 32)) ^ (((unint64_t)v21 + ~((_QWORD)v21 << 32)) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v13 & ((v16 >> 31) ^ v16);
    v18 = *(WebCore::Node **)(v12 + 16 * v17);
    if (v18 != v21)
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v13;
        v18 = *(WebCore::Node **)(v12 + 16 * v17);
        ++v19;
        if (v18 == v21)
          goto LABEL_19;
      }
      goto LABEL_20;
    }
LABEL_19:
    v11 = *(_QWORD *)(v12 + 16 * v17 + 8);
    if (!v11)
    {
LABEL_20:
      *((_DWORD *)v21 + 6) += 2;
      v22[0] = v8;
      Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v4, (WebCore::JSDOMGlobalObject *)v22, v6);
      v20 = v22[0];
      v22[0] = 0;
      if (v20)
      {
        if (*((_DWORD *)v20 + 6) == 2)
        {
          if ((*((_WORD *)v20 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v20, v5);
        }
        else
        {
          *((_DWORD *)v20 + 6) -= 2;
        }
      }
      goto LABEL_23;
    }
  }
  if ((*(_BYTE *)(v11 + 8) & 3) != 0)
    goto LABEL_20;
  Wrapper = *(_QWORD *)v11;
  if (!*(_QWORD *)v11)
    goto LABEL_20;
LABEL_23:
  if (*((_DWORD *)v8 + 6) == 2)
  {
    if ((*((_WORD *)v8 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v8, v5);
  }
  else
  {
    *((_DWORD *)v8 + 6) -= 2;
  }
  return Wrapper;
}

unint64_t WebCore::jsDOMSelection_baseOffset(uint64_t a1, uint64_t a2)
{
  WebCore::DOMSelection *v2;
  void *v3;
  unsigned int v4;
  WebCore::Node *v5;
  WebCore::Node *v7[2];

  v2 = *(WebCore::DOMSelection **)(a2 + 24);
  WebCore::DOMSelection::basePosition((uint64_t)v2, (uint64_t)v7);
  v4 = WebCore::DOMSelection::shadowAdjustedOffset(v2, (const WebCore::Position *)v7);
  v5 = v7[0];
  v7[0] = 0;
  if (v5)
  {
    if (*((_DWORD *)v5 + 6) == 2)
    {
      if ((*((_WORD *)v5 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v5, v3);
    }
    else
    {
      *((_DWORD *)v5 + 6) -= 2;
    }
  }
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::jsDOMSelection_extentNode(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  unsigned int *v3;
  uint64_t v4;
  void *v5;
  WebCore::Document *v6;
  WebCore::Node *v7;
  WebCore::Node *v8;
  unint64_t Wrapper;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  WebCore::Node *v18;
  int v19;
  WebCore::Node *v20;
  WebCore::Node *v21;
  WebCore::Node *v22[2];

  v3 = *(unsigned int **)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMSelection::extentPosition((uint64_t)v3, (uint64_t)v22);
  WebCore::DOMSelection::shadowAdjustedNode(v3, (const WebCore::Position *)v22, &v21);
  v7 = v22[0];
  v22[0] = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  v8 = v21;
  if (!v21)
    return 2;
  if (*(_BYTE *)(v4 + 3328))
  {
    v11 = *((_QWORD *)v21 + 1);
    if (!v11)
      goto LABEL_20;
  }
  else
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v4 + 3320) + 32);
    if (!v12)
      goto LABEL_20;
    v13 = *(_DWORD *)(v12 - 8);
    v14 = ((unint64_t)v21 + ~((_QWORD)v21 << 32)) ^ (((unint64_t)v21 + ~((_QWORD)v21 << 32)) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v13 & ((v16 >> 31) ^ v16);
    v18 = *(WebCore::Node **)(v12 + 16 * v17);
    if (v18 != v21)
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v13;
        v18 = *(WebCore::Node **)(v12 + 16 * v17);
        ++v19;
        if (v18 == v21)
          goto LABEL_19;
      }
      goto LABEL_20;
    }
LABEL_19:
    v11 = *(_QWORD *)(v12 + 16 * v17 + 8);
    if (!v11)
    {
LABEL_20:
      *((_DWORD *)v21 + 6) += 2;
      v22[0] = v8;
      Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v4, (WebCore::JSDOMGlobalObject *)v22, v6);
      v20 = v22[0];
      v22[0] = 0;
      if (v20)
      {
        if (*((_DWORD *)v20 + 6) == 2)
        {
          if ((*((_WORD *)v20 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v20, v5);
        }
        else
        {
          *((_DWORD *)v20 + 6) -= 2;
        }
      }
      goto LABEL_23;
    }
  }
  if ((*(_BYTE *)(v11 + 8) & 3) != 0)
    goto LABEL_20;
  Wrapper = *(_QWORD *)v11;
  if (!*(_QWORD *)v11)
    goto LABEL_20;
LABEL_23:
  if (*((_DWORD *)v8 + 6) == 2)
  {
    if ((*((_WORD *)v8 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v8, v5);
  }
  else
  {
    *((_DWORD *)v8 + 6) -= 2;
  }
  return Wrapper;
}

unint64_t WebCore::jsDOMSelection_extentOffset(uint64_t a1, uint64_t a2)
{
  WebCore::DOMSelection *v2;
  void *v3;
  unsigned int v4;
  WebCore::Node *v5;
  WebCore::Node *v7[2];

  v2 = *(WebCore::DOMSelection **)(a2 + 24);
  WebCore::DOMSelection::extentPosition((uint64_t)v2, (uint64_t)v7);
  v4 = WebCore::DOMSelection::shadowAdjustedOffset(v2, (const WebCore::Position *)v7);
  v5 = v7[0];
  v7[0] = 0;
  if (v5)
  {
    if (*((_DWORD *)v5 + 6) == 2)
    {
      if ((*((_WORD *)v5 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v5, v3);
    }
    else
    {
      *((_DWORD *)v5 + 6) -= 2;
    }
  }
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDOMSelection::subspaceForImpl(WebCore::JSDOMSelection *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5768);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5768))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 5768);
    *(_QWORD *)(v9 + 5768) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSDOMSelection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMSelectionOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Window";
    a5[1] = 22;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x1949A3A7CLL);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

WTF **WebCore::JSDOMSelectionOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WTF *v3;
  void *v4;
  WTF *v6;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = v3;
  WebCore::uncacheWrapper<WebCore::Crypto,WebCore::JSCrypto>(a3, (uint64_t)v3);
  return WTF::Ref<WebCore::DOMSelection,WTF::RawPtrTraits<WebCore::DOMSelection>,WTF::DefaultRefDerefTraits<WebCore::DOMSelection>>::~Ref(&v6, v4);
}

WTF **WTF::Ref<WebCore::DOMSelection,WTF::RawPtrTraits<WebCore::DOMSelection>,WTF::DefaultRefDerefTraits<WebCore::DOMSelection>>::~Ref(WTF **a1, void *a2)
{
  WTF *v3;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  WTF *v9;
  WTF *v10;
  WTF *v11;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v5 = (unsigned int *)*((_QWORD *)v3 + 1);
      *((_QWORD *)v3 + 1) = 0;
      if (v5)
      {
        do
        {
          v6 = __ldaxr(v5);
          v7 = v6 - 1;
        }
        while (__stlxr(v7, v5));
        if (!v7)
        {
          v10 = v3;
          v11 = (WTF *)v5;
          atomic_store(1u, v5);
          v8 = v5[7];
          if ((_DWORD)v8)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v11 + 2), (WTF::StringImpl *)(*((_QWORD *)v11 + 2) + 32 * v8));
          v9 = (WTF *)*((_QWORD *)v11 + 2);
          if (v9)
          {
            *((_QWORD *)v11 + 2) = 0;
            *((_DWORD *)v11 + 6) = 0;
            WTF::fastFree(v9, a2);
          }
          WTF::fastFree(v11, a2);
          v3 = v10;
        }
      }
      WTF::fastFree(v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
  return a1;
}

uint64_t WebCore::createWrapper<WebCore::DOMSelection,WebCore::DOMSelection>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = WebCore::getDOMStructure<WebCore::JSDOMSelection>(*(WebCore::JSDOMSelection **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSDOMSelection::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::DOMSelection,WebCore::JSDOMSelection>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::wrap<WebCore::DOMSelection>(uint64_t a1, WTF *a2)
{
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  WTF *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  WTF *v13;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  WTF *v19;
  WTF *v20;
  WTF *v21;
  WTF *v22;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 3320) + 32);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 - 8);
    v4 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v5 = 9 * ((v4 + ~(v4 << 13)) ^ ((v4 + ~(v4 << 13)) >> 8));
    v6 = (v5 ^ (v5 >> 15)) + ~((v5 ^ (v5 >> 15)) << 27);
    v7 = v3 & ((v6 >> 31) ^ v6);
    v8 = *(WTF **)(v2 + 16 * v7);
    if (v8 == a2)
    {
LABEL_6:
      v10 = *(_QWORD *)(v2 + 16 * v7 + 8);
      if (v10)
      {
        if ((*(_BYTE *)(v10 + 8) & 3) == 0)
        {
          v11 = *(_QWORD *)v10;
          if (*(_QWORD *)v10)
            return v11;
        }
      }
    }
    else
    {
      v9 = 1;
      while (v8)
      {
        v7 = ((_DWORD)v7 + v9) & v3;
        v8 = *(WTF **)(v2 + 16 * v7);
        ++v9;
        if (v8 == a2)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a2;
  v22 = a2;
  v11 = WebCore::createWrapper<WebCore::DOMSelection,WebCore::DOMSelection>(a1, (uint64_t *)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 1)
    {
      v15 = (unsigned int *)*((_QWORD *)v13 + 1);
      *((_QWORD *)v13 + 1) = 0;
      if (v15)
      {
        do
        {
          v16 = __ldaxr(v15);
          v17 = v16 - 1;
        }
        while (__stlxr(v17, v15));
        if (!v17)
        {
          v20 = v13;
          v21 = (WTF *)v15;
          atomic_store(1u, v15);
          v18 = v15[7];
          if ((_DWORD)v18)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v21 + 2), (WTF::StringImpl *)(*((_QWORD *)v21 + 2) + 32 * v18));
          v19 = (WTF *)*((_QWORD *)v21 + 2);
          if (v19)
          {
            *((_QWORD *)v21 + 2) = 0;
            *((_DWORD *)v21 + 6) = 0;
            WTF::fastFree(v19, v12);
          }
          WTF::fastFree(v21, v12);
          v13 = v20;
        }
      }
      WTF::fastFree(v13, v12);
    }
    else
    {
      --*(_DWORD *)v13;
    }
  }
  return v11;
}

unint64_t JSC::jsDynamicCast<WebCore::JSDOMSelection *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSDOMSelection::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSDOMSelection::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDOMStringList>((WebCore::JSDOMStringList *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSDOMStringListPrototype::finishCreation(WebCore::JSDOMStringListPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t Direct;
  WTF::StringImpl *v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(a2, (uint64_t)&WebCore::JSDOMStringList::s_info, &WebCore::JSDOMStringListPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2712);
  v5 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 672);
  v6 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v5, a2, (unint64_t)v6);
  JSC::JSObject::putDirect((unsigned __int8 *)this, a2, v4, Direct, 4);
  if (*v6 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v8);
  else
    *v6 -= 2;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v13);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v13;
  v13 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSDOMStringList::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF *v4;
  WTF::StringImpl **v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl **v9;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(unsigned int *)(v2 + 20);
      if ((_DWORD)v3)
      {
        v5 = *(WTF::StringImpl ***)(v2 + 8);
        v6 = 8 * v3;
        do
        {
          v7 = *v5;
          *v5 = 0;
          if (v7)
          {
            if (*(_DWORD *)v7 == 2)
            {
              v8 = v6;
              v9 = v5;
              WTF::StringImpl::destroy(v7, a2);
              v6 = v8;
              v5 = v9;
            }
            else
            {
              *(_DWORD *)v7 -= 2;
            }
          }
          ++v5;
          v6 -= 8;
        }
        while (v6);
      }
      v4 = *(WTF **)(v2 + 8);
      if (v4)
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 16) = 0;
        WTF::fastFree(v4, a2);
      }
      return WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSDOMStringList::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  char v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v22 + 1;
    v31 = v23 - 1;
    while (v31)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v30 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          ++v30;
          --v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSDOMStringList::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x1949A4444);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSDOMStringList::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDOMStringList::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (*(_BYTE *)(v15 + 242))
            {
LABEL_21:
              if (v13[65])
                return JSC::JSObject::deleteProperty();
            }
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) != 0)
          {
            goto LABEL_21;
          }
        }
      }
    }
  }
  if (a3)
  {
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18 || (v29 = *v17 - 48, v29 > 9) || v18 >= 2 && *v17 == 48)
        {
LABEL_46:
          v30 = 0;
          v31 = 0;
          v32 = 0;
        }
        else
        {
          v33 = v18 - 1;
          v34 = v17 + 1;
          while (v33)
          {
            if (v29 > 0x19999999)
              goto LABEL_46;
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_46;
            v30 = 0;
            v31 = 0;
            v32 = 0;
            v28 = __CFADD__(v35, 10 * v29);
            v29 = v35 + 10 * v29;
            --v33;
            ++v34;
            if (v28)
              goto LABEL_47;
          }
          v30 = 0x100000000;
          if (v29 == -1)
          {
            v30 = 0;
            v31 = 0;
          }
          else
          {
            v31 = v29;
          }
          if (v29 == -1)
            v32 = 0;
          else
            v32 = v29 & 0xFFFFFF00;
        }
LABEL_47:
        v23 = v32 | v31;
        if ((v30 & 0x100000000) != 0)
          return *(_DWORD *)(v9 + 20) <= v23;
      }
      else
      {
        if ((_DWORD)v18
          && (v19 = *(unsigned __int16 *)v17 - 48, v19 <= 9)
          && (v18 < 2 || *(_WORD *)v17 != 48))
        {
          v25 = (unsigned __int16 *)(v17 + 2);
          v26 = v18 - 1;
          while (v26)
          {
            if (v19 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v19);
                v19 = v27 + 10 * v19;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_29;
          }
          v7 = v19 == -1;
          v22 = v19 & 0xFFFFFF00;
          v21 = v19;
          v20 = 0x100000000;
          if (v7)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
          }
        }
        else
        {
LABEL_29:
          v20 = 0;
          v21 = 0;
          v22 = 0;
        }
        v23 = v22 | v21;
        if ((v20 & 0x100000000) != 0)
          return *(_DWORD *)(v9 + 20) <= v23;
      }
    }
  }
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSDOMStringList::deletePropertyByIndex(WebCore::JSDOMStringList *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 20) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 20) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 20) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 20) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 20) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 20) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 20) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDOMStringList::getOwnPropertySlotByIndex(WebCore::JSDOMStringList *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v7 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v7 + 20) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 8) + 8 * a3);
  if (!v8)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = *((_QWORD *)a2 + 7);
  v10 = *(_DWORD *)(v8 + 4);
  *(_DWORD *)v8 += 2;
  if (v10)
  {
    if (v10 != 1)
    {
LABEL_6:
      v11 = *(_QWORD *)(v9 + 64760);
      if (!v11 || v8 != *(_QWORD *)(v11 + 8))
        v11 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_9;
    }
    v14 = *(unsigned __int8 **)(v8 + 8);
    if ((*(_BYTE *)(v8 + 16) & 4) != 0)
    {
      v15 = *v14;
    }
    else
    {
      v16 = *(unsigned __int16 *)v14;
      if (v16 > 0xFF)
        goto LABEL_6;
      v15 = v16;
    }
    v11 = *(_QWORD *)(v9 + 8 * v15 + 42216);
  }
  else
  {
    v11 = *(_QWORD *)(v9 + 41968);
  }
LABEL_9:
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
  {
    v12 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v11;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = this;
    v12 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v8, a2);
  else
    *(_DWORD *)v8 -= 2;
  return v12;
}

uint64_t WebCore::JSDOMStringList::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 20);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDOMStringList::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSDOMStringList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMStringList::createPrototype(WebCore::JSDOMStringList *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDOMStringListPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDOMStringListPrototype::create(WebCore::JSDOMStringListPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDOMStringListPrototype::finishCreation((WebCore::JSDOMStringListPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>,(WebCore::DOMConstructorID)434>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3472);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3472) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMStringList::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned int v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;

  v6 = a2[7];
  if (a3)
  {
    v8 = *(_DWORD *)(a3 + 16);
    if ((v8 & 0x20) != 0)
      goto LABEL_8;
    v9 = *(_BYTE **)(a3 + 8);
    v10 = *(unsigned int *)(a3 + 4);
    if ((v8 & 4) != 0)
    {
      if (!(_DWORD)v10 || (v11 = *v9 - 48, v11 > 9) || v10 >= 2 && *v9 == 48)
      {
LABEL_8:
        if ((a3 >> 4))
        {
          v12 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
          if (((a3 >> 4) & ~*(_DWORD *)(v12 + 0x20)) == 0)
          {
            v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7]);
            if (v13)
            {
              v54 = a3;
              v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v54);
              if ((_DWORD)v14 != -1)
              {
                if ((int)v14 > 63)
                {
                  v26 = *(_QWORD *)(a1 + 8) - 8;
                  v27 = 0x3F00000000 - (v14 << 32);
                }
                else
                {
                  v26 = a1 + 16;
                  v27 = v14 << 32;
                }
                v28 = *(_QWORD *)(v26 + (v27 >> 29));
                if ((v28 & 0xFFFE000000000002) == 0)
                {
                  v29 = *(unsigned __int8 *)(v28 + 5);
                  if (v29 == 6)
                  {
                    v34 = *(_DWORD *)(v12 + 16) & 3;
                    v36 = *(_QWORD *)(v28 + 8);
                    v35 = *(_QWORD *)(v28 + 16);
                    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C))
                    {
                      v38 = *(_QWORD *)(v28 + 24);
                      v37 = *(_QWORD *)(v28 + 32);
                      *(_QWORD *)a4 = v36;
                      *(_QWORD *)(a4 + 8) = v35;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v14);
                      *(_QWORD *)(a4 + 32) = a1;
                      *(_BYTE *)(a4 + 49) = 3;
                      v20 = 1;
                      if (v34 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                      *(_BYTE *)(a4 + 51) = 1;
                      *(_QWORD *)(a4 + 72) = v38;
                      *(_QWORD *)(a4 + 80) = v37;
                    }
                    else
                    {
                      *(_QWORD *)a4 = v36;
                      *(_QWORD *)(a4 + 8) = v35;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v14);
                      *(_QWORD *)(a4 + 32) = a1;
                      v20 = 1;
                      *(_BYTE *)(a4 + 49) = 3;
                      if (v34 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                    }
                    return v20;
                  }
                  if (v29 == 5)
                  {
                    JSC::JSObject::fillGetterPropertySlot();
                    return 1;
                  }
                }
                *(_QWORD *)a4 = v28;
                *(_QWORD *)(a4 + 32) = a1;
                *(_DWORD *)(a4 + 16) = HIDWORD(v14);
                *(_DWORD *)(a4 + 20) = v14;
                v20 = 1;
                *(_WORD *)(a4 + 48) = 257;
                return v20;
              }
            }
          }
        }
        if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
          return 1;
        v15 = *(_DWORD *)(a3 + 16);
        if ((v15 & 0x20) == 0)
        {
          v16 = *(_BYTE **)(a3 + 8);
          v17 = *(unsigned int *)(a3 + 4);
          if ((v15 & 4) != 0)
          {
            if ((_DWORD)v17)
            {
              v49 = *v16 - 48;
              if (v49 > 9 || v17 >= 2 && *v16 == 48)
              {
LABEL_94:
                v50 = 0;
              }
              else
              {
                v51 = v16 + 1;
                v52 = v17 - 1;
                while (v52)
                {
                  if (v49 > 0x19999999)
                    goto LABEL_94;
                  v53 = *v51 - 48;
                  if (v53 > 9)
                    goto LABEL_94;
                  v50 = 0;
                  v25 = __CFADD__(v53, 10 * v49);
                  v49 = v53 + 10 * v49;
                  ++v51;
                  --v52;
                  if (v25)
                    goto LABEL_95;
                }
                v50 = 0x100000000;
                if (v49 == -1)
                  v50 = 0;
              }
            }
            else
            {
              v50 = 0;
            }
LABEL_95:
            if ((v50 & 0x100000000) == 0)
              return 0;
          }
          else
          {
            if ((_DWORD)v17)
            {
              v18 = *(unsigned __int16 *)v16 - 48;
              if (v18 > 9 || v17 >= 2 && *(_WORD *)v16 == 48)
              {
LABEL_19:
                v19 = 0;
              }
              else
              {
                v30 = (unsigned __int16 *)(v16 + 2);
                v31 = v17 - 1;
                while (v31)
                {
                  if (v18 <= 0x19999999)
                  {
                    v32 = *v30 - 48;
                    if (v32 <= 9)
                    {
                      v25 = __CFADD__(v32, 10 * v18);
                      v18 = v32 + 10 * v18;
                      ++v30;
                      --v31;
                      if (!v25)
                        continue;
                    }
                  }
                  goto LABEL_19;
                }
                v33 = v18 == -1;
                v19 = 0x100000000;
                if (v33)
                  v19 = 0;
              }
            }
            else
            {
              v19 = 0;
            }
            if ((v19 & 0x100000000) == 0)
              return 0;
          }
          return JSC::JSObject::getOwnPropertySlotByIndex();
        }
        return 0;
      }
      v39 = v9 + 1;
      v40 = v10 - 1;
      while (v40)
      {
        if (v11 <= 0x19999999)
        {
          v41 = *v39 - 48;
          if (v41 <= 9)
          {
            v25 = __CFADD__(v41, 10 * v11);
            v11 = v41 + 10 * v11;
            ++v39;
            --v40;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v10)
        goto LABEL_8;
      v11 = *(unsigned __int16 *)v9 - 48;
      if (v11 > 9 || v10 >= 2 && *(_WORD *)v9 == 48)
        goto LABEL_8;
      v22 = (unsigned __int16 *)(v9 + 2);
      v23 = v10 - 1;
      while (v23)
      {
        if (v11 <= 0x19999999)
        {
          v24 = *v22 - 48;
          if (v24 <= 9)
          {
            v25 = __CFADD__(v24, 10 * v11);
            v11 = v24 + 10 * v11;
            ++v22;
            --v23;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v11 == -1)
      goto LABEL_8;
    v42 = *(_QWORD *)(a1 + 24);
    if (*(_DWORD *)(v42 + 20) <= v11)
      goto LABEL_8;
    v43 = *(_QWORD *)(*(_QWORD *)(v42 + 8) + 8 * v11);
    if (!v43)
      goto LABEL_8;
    v44 = *(_DWORD *)(v43 + 4);
    *(_DWORD *)v43 += 2;
    if (v44)
    {
      if (v44 != 1)
      {
LABEL_74:
        v45 = *((_QWORD *)v6 + 8095);
        if (!v45 || v43 != *(_QWORD *)(v45 + 8))
          v45 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_77;
      }
      v46 = *(unsigned __int8 **)(v43 + 8);
      if ((*(_BYTE *)(v43 + 16) & 4) != 0)
      {
        v47 = *v46;
      }
      else
      {
        v48 = *(unsigned __int16 *)v46;
        if (v48 > 0xFF)
          goto LABEL_74;
        v47 = v48;
      }
      v45 = *((_QWORD *)v6 + v47 + 5277);
    }
    else
    {
      v45 = *((_QWORD *)v6 + 5246);
    }
LABEL_77:
    if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
    {
      v20 = 0;
    }
    else
    {
      *(_QWORD *)a4 = v45;
      *(_DWORD *)(a4 + 16) = 2;
      *(_QWORD *)(a4 + 32) = a1;
      v20 = 1;
      *(_BYTE *)(a4 + 49) = 1;
    }
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v43, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v43 -= 2;
    return v20;
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
    return 0;
  return JSC::JSObject::getOwnStaticPropertySlot();
}

unint64_t WebCore::jsDOMStringListConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMStringListPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>,(WebCore::DOMConstructorID)434>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMStringList_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 20);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDOMStringListOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSDOMStringListOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v24;
  WTF *v25;
  WTF::StringImpl **v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl **v30;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = *(unsigned int *)(v3 + 20);
    if ((_DWORD)v24)
    {
      v26 = *(WTF::StringImpl ***)(v3 + 8);
      v27 = 8 * v24;
      do
      {
        v28 = *v26;
        *v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 2)
          {
            v29 = v27;
            v30 = v26;
            WTF::StringImpl::destroy(v28, a2);
            v27 = v29;
            v26 = v30;
          }
          else
          {
            *(_DWORD *)v28 -= 2;
          }
        }
        ++v26;
        v27 -= 8;
      }
      while (v27);
    }
    v25 = *(WTF **)(v3 + 8);
    if (v25)
    {
      *(_QWORD *)(v3 + 8) = 0;
      *(_DWORD *)(v3 + 16) = 0;
      WTF::fastFree(v25, a2);
    }
    WTF::fastFree((WTF *)v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::wrap<WebCore::DOMStringList>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  WTF *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  WTF *v30;
  void *v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *Allocator;
  unint64_t v38;
  _QWORD *v39;
  WTF *v40;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v15 = WebCore::getDOMStructure<WebCore::JSDOMStringList>(*(WebCore::JSDOMStringList **)(a2 + 56), (JSC::JSCell **)a2);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(v16 + 41456);
  v18 = *(_QWORD *)(v17 + 23536);
  v19 = *(_QWORD **)(v18 + 3552);
  if (!v19)
  {
    v20 = *(_QWORD *)(v17 + 22648);
    if (__ldaxr((unsigned __int8 *)v20))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v20))
    {
      goto LABEL_14;
    }
    MEMORY[0x19AEA534C](v20);
LABEL_14:
    v22 = *(_QWORD *)(v20 + 2824);
    if (!*(_QWORD *)(v22 + 3552))
    {
      v23 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v40, "IsoSpace T");
      v39 = 0;
      MEMORY[0x19AEA3204](v23, &v40, v16 + 192, v16 + 1872, 32, 8, &v39);
      v25 = (uint64_t)v39;
      v39 = 0;
      if (v25)
        (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
      v26 = v40;
      v40 = 0;
      if (v26)
      {
        if (*(_DWORD *)v26 == 1)
          WTF::fastFree(v26, v24);
        else
          --*(_DWORD *)v26;
      }
      v27 = *(_QWORD *)(v22 + 3552);
      *(_QWORD *)(v22 + 3552) = v23;
      if (v27)
        (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    }
    v19 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v29 = *(_QWORD *)(v18 + 3552);
    *(_QWORD *)(v18 + 3552) = v19;
    if (v29)
    {
      v30 = (WTF *)MEMORY[0x19AEA3528](v29, v28);
      WTF::fastFree(v30, v31);
    }
    v32 = __ldxr((unsigned __int8 *)v20);
    if (v32 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v20))
        goto LABEL_29;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v20);
  }
LABEL_29:
  SlowCase = v19[3];
  if (SlowCase >= v19[4])
  {
    SlowCase = v19[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_31;
    }
    v38 = *(_QWORD *)(SlowCase + 8) ^ v19[6];
    v19[4] = SlowCase + HIDWORD(v38);
    v19[5] = SlowCase + (int)v38;
  }
  v19[3] = SlowCase + 32;
LABEL_31:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v15);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v16 + 755))
    __dmb(0xAu);
  v33 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE335198 & 1) == 0)
  {
    qword_1EE335190 = (uint64_t)&off_1E3259E98;
    byte_1EE335198 = 1;
  }
  v40 = a3;
  if ((SlowCase & 8) != 0)
    v34 = (SlowCase - 112) | 1;
  else
    v34 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v34 & 1) != 0)
    v35 = v34 + 47;
  else
    v35 = *(_QWORD *)v34 + 32;
  Allocator = *(_QWORD **)(v35 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v35 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE335190;
  Allocator[2] = v33;
  v39 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v33 + 32), (uint64_t *)&v40, (uint64_t *)&v39);
  if (v39)
    v39[1] = 3;
  return SlowCase;
}

unsigned int *WebCore::JSDOMStringMap::destroy(unsigned int *this, JSC::JSCell *a2)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
  {
    this = *(unsigned int **)(*(_QWORD *)(v2 + 8) + 8);
    if (this[6] == 2)
    {
      if ((*((_WORD *)this + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)this, a2);
    }
    else
    {
      this[6] -= 2;
    }
  }
  return this;
}

uint64_t WebCore::JSDOMStringMap::put(uint64_t a1, JSC::JSGlobalObject *a2, WTF::StringImpl *a3, JSC::JSRopeString *this, uint64_t a5, __n128 a6)
{
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  unsigned int *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  int OwnProperty;
  int v18;
  WTF *v19;
  WTF *v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41[3];
  WTF::StringImpl *v42;
  int v43;
  WTF *v44;
  uint64_t v45;
  _BYTE v46[40];
  uint64_t v47;
  JSC::JSGlobalObject *v48;
  WTF::StringImpl *v49;

  v9 = *(_QWORD *)(a5 + 8);
  if (v9 != a1)
    return JSC::JSObject::put();
  v10 = *((_QWORD *)a2 + 7);
  v44 = (WTF *)v46;
  v45 = 4;
  v46[32] = 0;
  v47 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v48 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v44;
  if (a3 && (*((_BYTE *)a3 + 16) & 0x20) != 0)
  {
    v40 = 0;
    v41[0] = 0;
    v41[1] = 0;
    v41[2] = (WTF::StringImpl *)14;
    a6.n128_u64[0] = 0xFFFFFFFF00000000;
    v30 = 0xFFFFFFFF00000000;
    v32 = 0;
    v33 = 0;
    v31 = v9;
    v34 = 0x20000;
    v35 = 0;
    LOBYTE(v36) = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    OwnProperty = WebCore::JSDOMStringMap::legacyPlatformObjectGetOwnProperty(a1, (uint64_t)a2, (unint64_t)a3, (uint64_t)&v28, 1, a6);
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0
      || OwnProperty
      && (JSC::PropertyDescriptor::setPropertySlot(), *(_DWORD *)(v10 + 80))
      && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    {
      v16 = 0;
    }
    else
    {
      v16 = JSC::ordinarySetWithOwnDescriptor();
    }
    if (v37)
    {
      v18 = *(_DWORD *)(v36 + 4);
      if (!v18)
      {
        __break(0xC471u);
        JUMPOUT(0x1949A60FCLL);
      }
      *(_DWORD *)(v36 + 4) = v18 - 1;
    }
    goto LABEL_25;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a2, (unint64_t)this, (uint64_t)&v42);
  v12 = v43;
  if (!v43)
  {
    v13 = *(unsigned int **)(a1 + 24);
    if (a3)
      *(_DWORD *)a3 += 2;
    v40 = a3;
    v14 = v42;
    v42 = 0;
    v49 = v14;
    WebCore::DatasetDOMStringMap::setNamedItem(v13, (const WTF::String *)&v40, (const WTF::AtomString *)&v49, (uint64_t)&v28);
    v15 = v49;
    v49 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
      {
        WTF::StringImpl::destroy(v15, v11);
        if (a3)
        {
LABEL_11:
          if (*(_DWORD *)a3 == 2)
            WTF::StringImpl::destroy(a3, v11);
          else
            *(_DWORD *)a3 -= 2;
        }
LABEL_13:
        if ((_BYTE)v30)
        {
          v11 = (WTF::StringImpl *)v28;
          LOBYTE(v40) = v28;
          v25 = v29;
          v29 = 0;
          v41[0] = v25;
          if (!*(_QWORD *)(v10 + 16))
          {
            v26.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)v28, (JSC::JSGlobalObject *)v41);
            JSC::VM::throwException((JSC::VM *)v10, a2, v26);
            v25 = v41[0];
          }
          v41[0] = 0;
          if (v25)
          {
            if (*(_DWORD *)v25 == 2)
              WTF::StringImpl::destroy(v25, v11);
            else
              *(_DWORD *)v25 -= 2;
          }
          if ((_BYTE)v30)
          {
            v27 = v29;
            v29 = 0;
            if (v27)
            {
              if (*(_DWORD *)v27 == 2)
                WTF::StringImpl::destroy(v27, v11);
              else
                *(_DWORD *)v27 -= 2;
            }
          }
        }
        v12 = v43;
        goto LABEL_15;
      }
      *(_DWORD *)v15 -= 2;
    }
    if (a3)
      goto LABEL_11;
    goto LABEL_13;
  }
LABEL_15:
  if (v12 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v12])(&v28, &v42);
  v16 = 1;
LABEL_25:
  if (HIDWORD(v45))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v44, v48);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v47;
    if (HIDWORD(v45))
    {
      v22 = v44;
      v23 = 8 * HIDWORD(v45);
      do
      {
        v24 = *(_QWORD *)v22;
        *(_QWORD *)v22 = 0;
        if (v24)
        {
          if (*(_DWORD *)(v24 + 24) == 2)
          {
            if ((*(_WORD *)(v24 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v24, v11);
          }
          else
          {
            *(_DWORD *)(v24 + 24) -= 2;
          }
        }
        v22 = (WTF *)((char *)v22 + 8);
        v23 -= 8;
      }
      while (v23);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v47;
  }
  v19 = v44;
  if (v46 != (_BYTE *)v44 && v44 != 0)
  {
    v44 = 0;
    LODWORD(v45) = 0;
    WTF::fastFree(v19, v11);
  }
  return v16;
}

uint64_t WebCore::JSDOMStringMap::putByIndex(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3, unint64_t a4)
{
  JSC::VM *v7;
  WTF::StringImpl *v8;
  int v9;
  unsigned int *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF *v15;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  int v25;
  WTF::StringImpl *v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  char v34[8];
  WTF::StringImpl *v35;
  char v36;
  WTF::StringImpl *v37;

  v7 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  JSC::Identifier::from();
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a2, a4, (uint64_t)&v24);
  v9 = v25;
  if (v25)
    goto LABEL_12;
  v10 = *(unsigned int **)(a1 + 24);
  v11 = v26;
  if (v26)
    *(_DWORD *)v26 += 2;
  v32 = v11;
  v12 = v24;
  v24 = 0;
  v37 = v12;
  WebCore::DatasetDOMStringMap::setNamedItem(v10, (const WTF::String *)&v32, (const WTF::AtomString *)&v37, (uint64_t)v34);
  v13 = v37;
  v37 = 0;
  if (!v13)
  {
LABEL_7:
    if (v11)
      goto LABEL_8;
    goto LABEL_10;
  }
  if (*(_DWORD *)v13 != 2)
  {
    *(_DWORD *)v13 -= 2;
    goto LABEL_7;
  }
  WTF::StringImpl::destroy(v13, v8);
  if (v11)
  {
LABEL_8:
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v8);
    else
      *(_DWORD *)v11 -= 2;
  }
LABEL_10:
  if (v36)
  {
    v8 = (WTF::StringImpl *)v34[0];
    LOBYTE(v32) = v34[0];
    v21 = v35;
    v35 = 0;
    v33 = v21;
    if (!*((_QWORD *)v7 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)v34[0], (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException(v7, a2, v22);
      v21 = v33;
    }
    v33 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v8);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v36)
    {
      v23 = v35;
      v35 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v8);
        else
          *(_DWORD *)v23 -= 2;
      }
    }
  }
  v9 = v25;
LABEL_12:
  if (v9 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v9])(v34, &v24);
  v14 = v26;
  v26 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v8);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v18 = v27;
      v19 = 8 * HIDWORD(v28);
      do
      {
        v20 = *(_QWORD *)v18;
        *(_QWORD *)v18 = 0;
        if (v20)
        {
          if (*(_DWORD *)(v20 + 24) == 2)
          {
            if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v20, v8);
          }
          else
          {
            *(_DWORD *)(v20 + 24) -= 2;
          }
        }
        v18 = (WTF *)((char *)v18 + 8);
        v19 -= 8;
      }
      while (v19);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v15 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v15, v8);
  }
  return 1;
}

uint64_t WebCore::JSDOMStringMap::deleteProperty(uint64_t a1, JSC::JSGlobalObject *a2, WTF::StringImpl *a3, WTF::String *a4, __n128 a5)
{
  WebCore::DatasetDOMStringMap *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::String *v11;
  int isSupportedPropertyName;
  __n128 v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  WTF::StringImpl *v30;

  v8 = *(WebCore::DatasetDOMStringMap **)(a1 + 24);
  if (a3)
  {
    if ((*((_BYTE *)a3 + 16) & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    *(_DWORD *)a3 += 2;
    v9 = a3;
  }
  else
  {
    v9 = 0;
  }
  v25 = v9;
  isSupportedPropertyName = WebCore::DatasetDOMStringMap::isSupportedPropertyName(v8, (const WTF::String *)&v25, (uint64_t)a3, a4, a5);
  v14 = v25;
  v25 = 0;
  if (!v14)
  {
LABEL_7:
    if (isSupportedPropertyName)
      goto LABEL_8;
    return JSC::JSObject::deleteProperty();
  }
  if (*(_DWORD *)v14 != 2)
  {
    *(_DWORD *)v14 -= 2;
    goto LABEL_7;
  }
  WTF::StringImpl::destroy(v14, v10);
  if (!isSupportedPropertyName)
    return JSC::JSObject::deleteProperty();
LABEL_8:
  if (!WebCore::isVisibleNamedProperty<(WebCore::LegacyOverrideBuiltIns)1,WebCore::JSDOMStringMap>((uint64_t)a2, a1, (unint64_t)a3, v11, v13))return JSC::JSObject::deleteProperty();
  v25 = (WTF::StringImpl *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  if (a3)
    *(_DWORD *)a3 += 2;
  v15 = *(_QWORD *)(*((_QWORD *)v8 + 1) + 8);
  *(_DWORD *)(v15 + 24) += 2;
  WebCore::convertPropertyNameToAttributeName((WTF *)&v30, a3);
  v17 = WebCore::Element::removeAttribute((WebCore::Element *)v15, (const WTF::AtomString *)&v30);
  v18 = v30;
  v30 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v16);
    else
      *(_DWORD *)v18 -= 2;
  }
  if (*(_DWORD *)(v15 + 24) == 2)
  {
    if ((*(_WORD *)(v15 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v15, v16);
  }
  else
  {
    *(_DWORD *)(v15 + 24) -= 2;
  }
  if (a3)
  {
    if (*(_DWORD *)a3 == 2)
      WTF::StringImpl::destroy(a3, v16);
    else
      *(_DWORD *)a3 -= 2;
  }
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v22 = v25;
      v23 = 8 * HIDWORD(v26);
      do
      {
        v24 = *(_QWORD *)v22;
        *(_QWORD *)v22 = 0;
        if (v24)
        {
          if (*(_DWORD *)(v24 + 24) == 2)
          {
            if ((*(_WORD *)(v24 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v24, v16);
          }
          else
          {
            *(_DWORD *)(v24 + 24) -= 2;
          }
        }
        v22 = (WTF::StringImpl *)((char *)v22 + 8);
        v23 -= 8;
      }
      while (v23);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v19 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v19, v16);
  }
  return v17;
}

uint64_t WebCore::JSDOMStringMap::deletePropertyByIndex(WebCore::JSDOMStringMap *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  WebCore::DatasetDOMStringMap *v6;
  uint64_t v7;
  WTF::String *v8;
  __n128 v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::String *v12;
  int isSupportedPropertyName;
  __n128 v14;
  WTF::StringImpl *v15;
  const WTF::String *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v6 = (WebCore::DatasetDOMStringMap *)*((_QWORD *)this + 3);
  JSC::Identifier::from();
  v10 = v33;
  if (v33)
    *(_DWORD *)v33 += 2;
  v28 = v10;
  isSupportedPropertyName = WebCore::DatasetDOMStringMap::isSupportedPropertyName(v6, (const WTF::String *)&v28, v7, v8, v9);
  v15 = v28;
  v28 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
    {
      WTF::StringImpl::destroy(v15, v11);
      if (!isSupportedPropertyName)
        goto LABEL_26;
      goto LABEL_7;
    }
    *(_DWORD *)v15 -= 2;
  }
  if (!isSupportedPropertyName)
  {
LABEL_26:
    v19 = JSC::JSObject::deletePropertyByIndex(this, a2, a3);
    goto LABEL_27;
  }
LABEL_7:
  if (!WebCore::isVisibleNamedProperty<(WebCore::LegacyOverrideBuiltIns)1,WebCore::JSDOMStringMap>((uint64_t)a2, (uint64_t)this, (unint64_t)v33, v12, v14))goto LABEL_26;
  v28 = (WTF::StringImpl *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  v16 = v33;
  if (v33)
    *(_DWORD *)v33 += 2;
  v17 = *(_QWORD *)(*((_QWORD *)v6 + 1) + 8);
  *(_DWORD *)(v17 + 24) += 2;
  WebCore::convertPropertyNameToAttributeName((WTF *)&v34, v16);
  v19 = WebCore::Element::removeAttribute((WebCore::Element *)v17, (const WTF::AtomString *)&v34);
  v20 = v34;
  v34 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v18);
    else
      *(_DWORD *)v20 -= 2;
  }
  if (*(_DWORD *)(v17 + 24) == 2)
  {
    if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v17, v18);
  }
  else
  {
    *(_DWORD *)(v17 + 24) -= 2;
  }
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v18);
    else
      *(_DWORD *)v16 -= 2;
  }
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v25 = v28;
      v26 = 8 * HIDWORD(v29);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, v18);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF::StringImpl *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v21 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v21, v18);
  }
LABEL_27:
  v23 = v33;
  v33 = 0;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v18);
    else
      *(_DWORD *)v23 -= 2;
  }
  return v19;
}

uint64_t WebCore::JSDOMStringMap::getOwnPropertySlotByIndex(WebCore::JSDOMStringMap *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  uint64_t v9;
  WTF::String *v10;
  __n128 v11;
  WebCore::DatasetDOMStringMap *v12;
  const WTF::String **v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  int v16;
  JSC::VM *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  _BYTE *v43;
  WebCore::JSDOMStringMap *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  char OwnStaticPropertySlot;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  unsigned int v55;
  unsigned __int16 *v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t OwnPropertySlotByIndex;
  uint64_t v67;
  int v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  int v77;
  _BYTE *v78;
  uint64_t v79;
  unsigned int v80;
  unsigned __int16 *v81;
  uint64_t v82;
  unsigned int v83;
  unsigned __int8 *v84;
  uint64_t v85;
  unsigned int v86;
  unsigned __int8 *v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  char v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  unsigned __int8 *v99;
  int v100;
  int v101;
  uint64_t v102;
  const WTF::StringImpl *v103;
  const unsigned __int8 *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  JSC::VM *v111;
  _DWORD *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unint64_t v119;
  uint64_t v120;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v122;
  unint64_t v123;
  JSC::VM *v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  int v128;
  int v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  JSC::VM *v134;
  JSC::VM *v135;
  JSC::VM *v136;
  WTF::StringImpl *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  WebCore::JSDOMStringMap *v141;
  WebCore::JSDOMStringMap *v142;
  uint64_t v143;
  int v144;
  char v145;
  JSC::VM *v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  const WTF::String *v150;
  char v151;
  uint64_t v152;

  v152 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  JSC::Identifier::from();
  if (v137)
  {
    if ((*((_BYTE *)v137 + 16) & 0x20) != 0)
      goto LABEL_120;
    v12 = (WebCore::DatasetDOMStringMap *)*((_QWORD *)this + 3);
    *(_DWORD *)v137 += 2;
  }
  else
  {
    v12 = (WebCore::DatasetDOMStringMap *)*((_QWORD *)this + 3);
  }
  v150 = v137;
  v13 = WebCore::DatasetDOMStringMap::item(v12, &v150, v9, v10, v11);
  if (!v13)
  {
    v15 = 0;
    if (!v137)
      goto LABEL_10;
    goto LABEL_8;
  }
  v15 = *v13;
  if (*v13)
    *(_DWORD *)v15 += 2;
  if (v137)
  {
LABEL_8:
    if (*(_DWORD *)v137 == 2)
      WTF::StringImpl::destroy(v137, v14);
    else
      *(_DWORD *)v137 -= 2;
  }
LABEL_10:
  if (!v15)
    goto LABEL_120;
  v16 = *(_DWORD *)v15;
  *(_DWORD *)v15 += 2;
  if (v16)
    *(_DWORD *)v15 = v16;
  else
    WTF::StringImpl::destroy(v15, v14);
  v17 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v140 = 0xFFFFFFFF00000000;
  v142 = 0;
  v143 = 0;
  v141 = this;
  v144 = 196608;
  v145 = 0;
  v148 = 0;
  v149 = 0;
  v146 = v17;
  ++*((_DWORD *)v17 + 1);
  v147 = 1;
  v18 = (unint64_t)v137 >> 4;
  if (((unint64_t)v137 >> 4))
  {
    v19 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
    if ((v18 & ~*(_DWORD *)(v19 + 0x20)) == 0)
    {
      v20 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v17);
      if (v20)
      {
        v150 = v137;
        v21 = JSC::PropertyTable::get(v20, (uint64_t *)&v150);
        if ((_DWORD)v21 != -1)
        {
          v30 = (uint64_t *)((char *)this + 8 * (int)v21 + 16);
          if ((int)v21 >= 64)
            v30 = (uint64_t *)(*((_QWORD *)this + 1) + ((uint64_t)(0x3F00000000 - (v21 << 32)) >> 29) - 8);
          v31 = *v30;
          if ((*v30 & 0xFFFE000000000002) != 0)
            goto LABEL_37;
          v32 = *(unsigned __int8 *)(v31 + 5);
          if (v32 == 6)
          {
            v35 = *(_DWORD *)(v19 + 16) & 3;
            v36 = *(_QWORD *)(v31 + 16);
            if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C))
            {
              v38 = *(_QWORD *)(v31 + 24);
              v37 = *(_QWORD *)(v31 + 32);
              v138 = *(_QWORD *)(v31 + 8);
              v139 = v36;
              LODWORD(v140) = HIDWORD(v21);
              v142 = this;
              BYTE1(v144) = 3;
              v33 = 0;
              v34 = 1;
              if (v35 != 2)
                LOBYTE(v144) = 1;
              HIBYTE(v144) = 1;
              v148 = v38;
              v149 = v37;
            }
            else
            {
              v138 = *(_QWORD *)(v31 + 8);
              v139 = v36;
              LODWORD(v140) = HIDWORD(v21);
              v142 = this;
              v34 = 1;
              BYTE1(v144) = 3;
              v33 = 0;
              if (v35 != 2)
                LOBYTE(v144) = 1;
            }
            goto LABEL_113;
          }
          if (v32 != 5)
          {
LABEL_37:
            v33 = 0;
            v138 = v31;
            v142 = this;
            v140 = __PAIR64__(v21, HIDWORD(v21));
            v34 = 1;
            LOWORD(v144) = 257;
            goto LABEL_113;
          }
          JSC::JSObject::fillGetterPropertySlot();
          goto LABEL_49;
        }
      }
    }
  }
  if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_49;
  if (v137)
  {
    v22 = *((_DWORD *)v137 + 4);
    if ((v22 & 0x20) == 0)
    {
      v23 = (_BYTE *)*((_QWORD *)v137 + 1);
      v24 = *((unsigned int *)v137 + 1);
      if ((v22 & 4) != 0)
      {
        if ((_DWORD)v24)
        {
          v25 = *v23 - 48;
          if (v25 <= 9 && (v24 < 2 || *v23 != 48))
          {
            v39 = v23 + 1;
            v40 = v24 - 1;
            while (v40)
            {
              if (v25 <= 0x19999999)
              {
                v41 = *v39 - 48;
                if (v41 <= 9)
                {
                  v29 = __CFADD__(v41, 10 * v25);
                  v25 = v41 + 10 * v25;
                  ++v39;
                  --v40;
                  if (!v29)
                    continue;
                }
              }
              goto LABEL_67;
            }
LABEL_66:
            if (v25 == -1 || (JSC::JSObject::getOwnPropertySlotByIndex() & 1) == 0)
              goto LABEL_67;
LABEL_49:
            v33 = 0;
            v34 = 1;
            goto LABEL_113;
          }
        }
      }
      else if ((_DWORD)v24)
      {
        v25 = *(unsigned __int16 *)v23 - 48;
        if (v25 <= 9 && (v24 < 2 || *(_WORD *)v23 != 48))
        {
          v26 = (unsigned __int16 *)(v23 + 2);
          v27 = v24 - 1;
          while (v27)
          {
            if (v25 <= 0x19999999)
            {
              v28 = *v26 - 48;
              if (v28 <= 9)
              {
                v29 = __CFADD__(v28, 10 * v25);
                v25 = v28 + 10 * v25;
                ++v26;
                --v27;
                if (!v29)
                  continue;
              }
            }
            goto LABEL_67;
          }
          goto LABEL_66;
        }
      }
    }
  }
LABEL_67:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 3320) + 53))
  {
    v34 = 0;
    v33 = v15;
    v15 = 0;
    goto LABEL_113;
  }
  v136 = v8;
  v42 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
  if (!v42)
    v42 = *((_QWORD *)this + 2);
  if ((v42 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v42 + 5) < 0x17u)
    goto LABEL_111;
  v43 = (_BYTE *)(v42 + 6);
  v134 = (JSC::VM *)v42;
  if ((*(_BYTE *)(v42 + 6) & 8) == 0)
  {
    v133 = *((_QWORD *)a2 + 7);
    v44 = (WebCore::JSDOMStringMap *)v42;
    while (1)
    {
      v45 = *(_DWORD *)v44 & 0xFFFFFFFE;
      v46 = 16 * v45;
      if ((_DWORD)v18)
      {
        if ((v18 & ~*(_DWORD *)(16 * v45 + 0x20)) == 0)
        {
          v47 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v46, (JSC::VM *)v133);
          v42 = (unint64_t)v134;
          if (v47)
          {
            v150 = v137;
            v48 = JSC::PropertyTable::get(v47, (uint64_t *)&v150);
            v42 = (unint64_t)v134;
            v49 = v48;
            if ((_DWORD)v48 != -1)
              break;
          }
        }
      }
      if ((*v43 & 0x20) != 0)
      {
        OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
        v42 = (unint64_t)v134;
        if ((OwnStaticPropertySlot & 1) != 0)
          goto LABEL_150;
      }
      v50 = *(_QWORD *)(v46 + 48);
      if (!v50)
        v50 = *((_QWORD *)v44 + 2);
      if ((v50 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v50 + 5) < 0x17u)
      {
        if (!v137)
          goto LABEL_111;
        v52 = *((_DWORD *)v137 + 4);
        if ((v52 & 0x20) != 0)
          goto LABEL_111;
        v53 = (_BYTE *)*((_QWORD *)v137 + 1);
        v54 = *((unsigned int *)v137 + 1);
        if ((v52 & 4) != 0)
        {
          if (!(_DWORD)v54)
            goto LABEL_111;
          v55 = *v53 - 48;
          if (v55 > 9 || v54 >= 2 && *v53 == 48)
            goto LABEL_111;
          v84 = v53 + 1;
          v85 = v54 - 1;
          while (v85)
          {
            if (v55 <= 0x19999999)
            {
              v86 = *v84 - 48;
              if (v86 <= 9)
              {
                v29 = __CFADD__(v86, 10 * v55);
                v55 = v86 + 10 * v55;
                ++v84;
                --v85;
                if (!v29)
                  continue;
              }
            }
            goto LABEL_111;
          }
          v42 = (unint64_t)v134;
          if (v55 == -1)
          {
LABEL_111:
            v34 = 0;
            v33 = v15;
            v15 = 0;
            goto LABEL_112;
          }
        }
        else
        {
          if (!(_DWORD)v54)
            goto LABEL_111;
          v55 = *(unsigned __int16 *)v53 - 48;
          if (v55 > 9 || v54 >= 2 && *(_WORD *)v53 == 48)
            goto LABEL_111;
          v56 = (unsigned __int16 *)(v53 + 2);
          v57 = v54 - 1;
          while (v57)
          {
            if (v55 <= 0x19999999)
            {
              v58 = *v56 - 48;
              if (v58 <= 9)
              {
                v29 = __CFADD__(v58, 10 * v55);
                v55 = v58 + 10 * v55;
                ++v56;
                --v57;
                if (!v29)
                  continue;
              }
            }
            goto LABEL_111;
          }
          if (v55 == -1)
            goto LABEL_111;
        }
        v123 = v55;
        v124 = (JSC::VM *)*((_QWORD *)a2 + 7);
        while (2)
        {
          v125 = 16 * (*(_DWORD *)v42 & 0xFFFFFFFE);
          v126 = v42;
          v127 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16 * *(unsigned int *)(v125 + 0x4C) + 0x70))(v42, a2, v123, &v138);
          if (*((_DWORD *)v124 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v124) & 1) != 0)
            goto LABEL_111;
          if ((v127 & 1) != 0)
            goto LABEL_150;
          v128 = BYTE2(v144);
          if (BYTE2(v144) == 3)
          {
            if (v145)
              goto LABEL_111;
            v129 = *(unsigned __int8 *)(v126 + 5);
            if (v129 == 61)
            {
LABEL_328:
              v131 = *(_QWORD *)(16 * (*(_DWORD *)v126 & 0xFFFFFFFE) + 0x30);
              if (!v131)
                v131 = *(_QWORD *)(v126 + 16);
              goto LABEL_330;
            }
LABEL_321:
            if ((v129 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v126 + 40) & 7u) > 2)
              {
                LOBYTE(v150) = 0;
                v151 = 0;
                v132 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v126, (WTF *)&v150);
                if ((_BYTE)v14)
                  v130 = v132;
                else
                  v130 = 0;
              }
              else
              {
                v130 = *(_QWORD *)(v126 + 24);
              }
              if (v130 <= v123)
                goto LABEL_111;
              v128 = BYTE2(v144);
            }
          }
          else
          {
            v129 = *(unsigned __int8 *)(v126 + 5);
            if (v129 != 61)
              goto LABEL_321;
            if (BYTE2(v144) == 1)
              goto LABEL_111;
          }
          if ((*(_WORD *)(v125 + 12) & 0x800) == 0 || v128 == 3)
            goto LABEL_328;
          if ((*(_WORD *)(16 * (*(_DWORD *)v126 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            v131 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)v126 & 0xFFFFFFFE)
                                                                                         + 0x4C)
                                                                       + 0xB0))(v126, a2);
          }
          else
          {
            v131 = *(_QWORD *)(16 * (*(_DWORD *)v126 & 0xFFFFFFFE) + 0x30);
            if (!v131)
              v131 = *(_QWORD *)(v126 + 16);
          }
          if (*((_DWORD *)v124 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v124) & 1) != 0)
            goto LABEL_111;
LABEL_330:
          if ((v131 & 0xFFFE000000000002) != 0)
            goto LABEL_111;
          v42 = v131;
          if (*(unsigned __int8 *)(v131 + 5) <= 0x16u)
            goto LABEL_111;
          continue;
        }
      }
      v43 = (_BYTE *)(v50 + 6);
      v44 = (WebCore::JSDOMStringMap *)v50;
      if ((*(_BYTE *)(v50 + 6) & 8) != 0)
        goto LABEL_156;
    }
    v59 = HIDWORD(v48);
    if ((int)v48 > 63)
    {
      v60 = *((_QWORD *)v44 + 1) - 8;
      v61 = 0x3F00000000 - (v48 << 32);
    }
    else
    {
      v60 = (uint64_t)v44 + 16;
      v61 = v48 << 32;
    }
    v62 = *(_QWORD *)(v60 + (v61 >> 29));
    if ((v62 & 0xFFFE000000000002) != 0)
      goto LABEL_107;
    v63 = *(unsigned __int8 *)(v62 + 5);
    if (v63 != 6)
    {
      if (v63 == 5)
        goto LABEL_149;
LABEL_107:
      v33 = 0;
      v138 = v62;
      v142 = v44;
LABEL_108:
      v140 = __PAIR64__(v49, v59);
      v34 = 1;
      LOWORD(v144) = 257;
      goto LABEL_112;
    }
    v72 = *(_DWORD *)(v46 + 16) & 3;
    v73 = *(_QWORD *)(v62 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v62 & 0xFFFFFFFE) + 0x4C))
    {
      v75 = *(_QWORD *)(v62 + 24);
      v74 = *(_QWORD *)(v62 + 32);
      v138 = *(_QWORD *)(v62 + 8);
      v139 = v73;
      LODWORD(v140) = HIDWORD(v48);
      v142 = v44;
LABEL_144:
      BYTE1(v144) = 3;
      v33 = 0;
      v34 = 1;
      if (v72 != 2)
        LOBYTE(v144) = 1;
      HIBYTE(v144) = 1;
      v148 = v75;
      v149 = v74;
      goto LABEL_112;
    }
    v138 = *(_QWORD *)(v62 + 8);
    v139 = v73;
    LODWORD(v140) = HIDWORD(v48);
    v142 = v44;
    goto LABEL_171;
  }
  v50 = v42;
LABEL_156:
  if (!v137)
    goto LABEL_200;
  v77 = *((_DWORD *)v137 + 4);
  if ((v77 & 0x20) != 0)
    goto LABEL_200;
  v78 = (_BYTE *)*((_QWORD *)v137 + 1);
  v79 = *((unsigned int *)v137 + 1);
  if ((v77 & 4) != 0)
  {
    if (!(_DWORD)v79)
      goto LABEL_200;
    v80 = *v78 - 48;
    if (v80 > 9 || v79 >= 2 && *v78 == 48)
      goto LABEL_200;
    v87 = v78 + 1;
    v88 = v79 - 1;
    while (v88)
    {
      if (v80 <= 0x19999999)
      {
        v89 = *v87 - 48;
        if (v89 <= 9)
        {
          v29 = __CFADD__(v89, 10 * v80);
          v80 = v89 + 10 * v80;
          ++v87;
          --v88;
          if (!v29)
            continue;
        }
      }
      goto LABEL_200;
    }
  }
  else
  {
    if (!(_DWORD)v79)
      goto LABEL_200;
    v80 = *(unsigned __int16 *)v78 - 48;
    if (v80 > 9 || v79 >= 2 && *(_WORD *)v78 == 48)
      goto LABEL_200;
    v81 = (unsigned __int16 *)(v78 + 2);
    v82 = v79 - 1;
    while (v82)
    {
      if (v80 <= 0x19999999)
      {
        v83 = *v81 - 48;
        if (v83 <= 9)
        {
          v29 = __CFADD__(v83, 10 * v80);
          v80 = v83 + 10 * v80;
          ++v81;
          --v82;
          if (!v29)
            continue;
        }
      }
      goto LABEL_200;
    }
  }
  if (v80 != -1)
  {
    v110 = v80;
    v111 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v112 = v134;
    while (1)
    {
      v113 = 16 * (*v112 & 0xFFFFFFFE);
      v114 = (uint64_t)v112;
      v115 = (*(uint64_t (**)(void))(16 * *(unsigned int *)(v113 + 0x4C) + 0x70))();
      v116 = v115;
      if (*((_DWORD *)v111 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v111);
        if (((hasExceptionsAfterHandlingTraps | v116) & 1) != 0)
        {
          if (!hasExceptionsAfterHandlingTraps)
            goto LABEL_150;
          goto LABEL_111;
        }
      }
      else if ((v115 & 1) != 0)
      {
        goto LABEL_150;
      }
      v117 = BYTE2(v144);
      if (BYTE2(v144) == 3)
      {
        if (v145)
          goto LABEL_111;
        v118 = *(unsigned __int8 *)(v114 + 5);
        if (v118 == 61)
        {
LABEL_290:
          v120 = *(_QWORD *)(16 * (*(_DWORD *)v114 & 0xFFFFFFFE) + 0x30);
          if (!v120)
            v120 = *(_QWORD *)(v114 + 16);
          goto LABEL_292;
        }
      }
      else
      {
        v118 = *(unsigned __int8 *)(v114 + 5);
        if (v118 == 61)
        {
          if (BYTE2(v144) == 1)
            goto LABEL_111;
          goto LABEL_288;
        }
      }
      if ((v118 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v114 + 40) & 7u) > 2)
        {
          LOBYTE(v150) = 0;
          v151 = 0;
          v122 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v114, (WTF *)&v150);
          if ((_BYTE)v14)
            v119 = v122;
          else
            v119 = 0;
        }
        else
        {
          v119 = *(_QWORD *)(v114 + 24);
        }
        if (v119 <= v110)
          goto LABEL_111;
        v117 = BYTE2(v144);
      }
LABEL_288:
      if ((*(_WORD *)(v113 + 12) & 0x800) == 0 || v117 == 3)
        goto LABEL_290;
      if ((*(_WORD *)(16 * (*(_DWORD *)v114 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        v120 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)v114 & 0xFFFFFFFE)
                                                                                     + 0x4C)
                                                                   + 0xB0))(v114, a2);
      }
      else
      {
        v120 = *(_QWORD *)(16 * (*(_DWORD *)v114 & 0xFFFFFFFE) + 0x30);
        if (!v120)
          v120 = *(_QWORD *)(v114 + 16);
      }
      if (*((_DWORD *)v111 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v111) & 1) != 0)
        goto LABEL_111;
LABEL_292:
      if ((v120 & 0xFFFE000000000002) == 0)
      {
        v112 = (_DWORD *)v120;
        if (*(unsigned __int8 *)(v120 + 5) > 0x16u)
          continue;
      }
      goto LABEL_111;
    }
  }
LABEL_200:
  v135 = (JSC::VM *)*((_QWORD *)a2 + 7);
  while (1)
  {
    v90 = 16 * (*(_DWORD *)v50 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v50 + 6) & 8) != 0)
    {
      v95 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, WTF::StringImpl *, uint64_t *))(16
                                                                                              * *(unsigned int *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x4C)
                                                                                              + 0x68))(v50, a2, v137, &v138);
      if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
        goto LABEL_111;
      if ((v95 & 1) != 0)
        goto LABEL_150;
      if (BYTE2(v144) == 3)
      {
        if (v145)
          goto LABEL_111;
        v96 = *(unsigned __int8 *)(v50 + 5);
        if (v96 == 61)
          goto LABEL_207;
      }
      else
      {
        v96 = *(unsigned __int8 *)(v50 + 5);
        if (v96 == 61)
        {
          if (BYTE2(v144) == 1)
            goto LABEL_111;
          goto LABEL_207;
        }
      }
      if (!v137)
        goto LABEL_207;
      if ((v96 - 50) < 0xFFFFFFF5)
        goto LABEL_207;
      v97 = *((_DWORD *)v137 + 4);
      if ((v97 & 0x20) != 0)
        goto LABEL_207;
      v98 = *((unsigned int *)v137 + 1);
      if (!(_DWORD)v98)
        goto LABEL_207;
      v99 = (unsigned __int8 *)*((_QWORD *)v137 + 1);
      if ((v97 & 4) != 0)
      {
        v100 = *v99;
        if ((_DWORD)v98 == 1)
        {
LABEL_242:
          if ((v100 - 48) < 0xA)
            goto LABEL_111;
          goto LABEL_207;
        }
        if (v100 == 45)
        {
          v101 = v99[1];
LABEL_246:
          if ((v101 - 48) >= 0xA)
          {
            if ((_DWORD)v98 != 9 || v101 != 73)
              goto LABEL_207;
          }
          else if ((_DWORD)v98 == 2)
          {
            goto LABEL_111;
          }
LABEL_257:
          v133 = v133 & 0xFFFFFF0000000000 | v98 | ((unint64_t)((v97 >> 2) & 1) << 32);
          JSC::jsToNumber();
          v103 = (const WTF::StringImpl *)WTF::numberToString();
          if ((WTF::equal(v137, v103, v104) & 1) != 0)
            goto LABEL_111;
          goto LABEL_207;
        }
      }
      else
      {
        v100 = *(unsigned __int16 *)v99;
        if ((_DWORD)v98 == 1)
          goto LABEL_242;
        if (v100 == 45)
        {
          v101 = *((unsigned __int16 *)v99 + 1);
          goto LABEL_246;
        }
      }
      if ((v100 - 48) >= 0xA && ((_DWORD)v98 != 8 || v100 != 73) && ((_DWORD)v98 != 3 || v100 != 78))
        goto LABEL_207;
      goto LABEL_257;
    }
    if ((_DWORD)v18)
    {
      if ((v18 & ~*(_DWORD *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v91 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE)), v135);
        if (v91)
        {
          v150 = v137;
          v92 = JSC::PropertyTable::get(v91, (uint64_t *)&v150);
          v49 = v92;
          if ((_DWORD)v92 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v50 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_150;
LABEL_207:
    if ((*(_WORD *)(v90 + 12) & 0x800) == 0)
    {
      v93 = *(_DWORD *)v50;
LABEL_209:
      v94 = *(_QWORD *)(16 * (v93 & 0xFFFFFFFE) + 0x30);
      if (!v94)
        v94 = *(_QWORD *)(v50 + 16);
      goto LABEL_211;
    }
    v93 = *(_DWORD *)v50;
    if (BYTE2(v144) == 3)
      goto LABEL_209;
    v102 = 16 * (v93 & 0xFFFFFFFE);
    if ((*(_WORD *)(v102 + 12) & 0x800) != 0)
    {
      v94 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16 * *(unsigned int *)(v102 + 76) + 0xB0))(v50, a2);
    }
    else
    {
      v94 = *(_QWORD *)(v102 + 48);
      if (!v94)
        v94 = *(_QWORD *)(v50 + 16);
    }
    if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
      goto LABEL_111;
LABEL_211:
    if ((v94 & 0xFFFE000000000002) == 0)
    {
      v50 = v94;
      if (*(unsigned __int8 *)(v94 + 5) > 0x16u)
        continue;
    }
    goto LABEL_111;
  }
  v59 = HIDWORD(v92);
  if ((int)v92 > 63)
  {
    v105 = *(_QWORD *)(v50 + 8) - 8;
    v106 = 0x3F00000000 - (v92 << 32);
  }
  else
  {
    v105 = v50 + 16;
    v106 = v92 << 32;
  }
  v107 = *(_QWORD *)(v105 + (v106 >> 29));
  if ((v107 & 0xFFFE000000000002) != 0)
  {
LABEL_267:
    v33 = 0;
    v138 = v107;
    v142 = (WebCore::JSDOMStringMap *)v50;
    goto LABEL_108;
  }
  v108 = *(unsigned __int8 *)(v107 + 5);
  if (v108 == 6)
  {
    v72 = *(_DWORD *)(v90 + 16) & 3;
    v109 = *(_QWORD *)(v107 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v107 & 0xFFFFFFFE) + 0x4C))
    {
      v75 = *(_QWORD *)(v107 + 24);
      v74 = *(_QWORD *)(v107 + 32);
      v138 = *(_QWORD *)(v107 + 8);
      v139 = v109;
      LODWORD(v140) = HIDWORD(v92);
      v142 = (WebCore::JSDOMStringMap *)v50;
      goto LABEL_144;
    }
    v138 = *(_QWORD *)(v107 + 8);
    v139 = v109;
    LODWORD(v140) = HIDWORD(v92);
    v142 = (WebCore::JSDOMStringMap *)v50;
LABEL_171:
    v34 = 1;
    BYTE1(v144) = 3;
    v33 = 0;
    if (v72 != 2)
      LOBYTE(v144) = 1;
    goto LABEL_112;
  }
  if (v108 != 5)
    goto LABEL_267;
LABEL_149:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_150:
  v33 = 0;
  v34 = 1;
LABEL_112:
  v8 = v136;
LABEL_113:
  if (v147)
  {
    v64 = *((_DWORD *)v146 + 1);
    if (!v64)
    {
      __break(0xC471u);
      JUMPOUT(0x1949A7050);
    }
    *((_DWORD *)v146 + 1) = v64 - 1;
  }
  if (!v15)
  {
LABEL_119:
    if ((v34 & 1) == 0)
      goto LABEL_127;
    goto LABEL_120;
  }
  if (*(_DWORD *)v15 != 2)
  {
    *(_DWORD *)v15 -= 2;
    goto LABEL_119;
  }
  WTF::StringImpl::destroy(v15, v14);
  if ((v34 & 1) != 0)
  {
LABEL_120:
    OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
    goto LABEL_121;
  }
LABEL_127:
  v67 = *((_QWORD *)a2 + 7);
  if (v33 && (v68 = *((_DWORD *)v33 + 1)) != 0)
  {
    if (v68 != 1)
      goto LABEL_130;
    v70 = (unsigned __int8 *)*((_QWORD *)v33 + 1);
    if ((*((_BYTE *)v33 + 16) & 4) != 0)
    {
      v71 = *v70;
      goto LABEL_141;
    }
    v76 = *(unsigned __int16 *)v70;
    if (v76 > 0xFF)
    {
LABEL_130:
      v69 = *(_QWORD *)(v67 + 64760);
      if (!v69 || v33 != *(WTF::StringImpl **)(v69 + 8))
        v69 = JSC::jsStringWithCacheSlowCase();
    }
    else
    {
      v71 = v76;
LABEL_141:
      v69 = *(_QWORD *)(v67 + 8 * v71 + 42216);
    }
  }
  else
  {
    v69 = *(_QWORD *)(v67 + 41968);
  }
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
  {
    OwnPropertySlotByIndex = 0;
    if (!v33)
      goto LABEL_121;
  }
  else
  {
    *(_QWORD *)a4 = v69;
    *(_DWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 32) = this;
    OwnPropertySlotByIndex = 1;
    *(_BYTE *)(a4 + 49) = 1;
    if (!v33)
      goto LABEL_121;
  }
  if (*(_DWORD *)v33 == 2)
    WTF::StringImpl::destroy(v33, v14);
  else
    *(_DWORD *)v33 -= 2;
LABEL_121:
  if (v137)
  {
    if (*(_DWORD *)v137 == 2)
      WTF::StringImpl::destroy(v137, v14);
    else
      *(_DWORD *)v137 -= 2;
  }
  return OwnPropertySlotByIndex;
}

uint64_t WebCore::JSDOMStringMap::defineOwnProperty(uint64_t a1, JSC::JSGlobalObject *a2, WTF::StringImpl *a3, JSC::PropertyDescriptor *this, int a5)
{
  JSC::VM *v10;
  WTF::StringImpl *v11;
  int v12;
  unsigned int *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  __int128 v17;
  WTF *v18;
  WTF *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  JSValue v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27[2];
  __int128 v28;
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  uint64_t v32;
  _BYTE v33[40];
  uint64_t v34;
  JSC::JSGlobalObject *v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;

  v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v36 = v10;
  v31 = (WTF *)v33;
  v32 = 4;
  v33[32] = 0;
  v34 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v35 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v31;
  if (a3 && (*((_BYTE *)a3 + 16) & 0x20) != 0)
  {
    v17 = *((_OWORD *)this + 1);
    *(_OWORD *)v27 = *(_OWORD *)this;
    v28 = v17;
    v16 = JSC::JSObject::defineOwnProperty();
    goto LABEL_22;
  }
  if ((JSC::PropertyDescriptor::isDataDescriptor(this) & 1) != 0)
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a2, *(_QWORD *)this, (uint64_t)&v29);
    v12 = v30;
    if (v30)
    {
LABEL_15:
      if (v12 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v12])(v27, &v29);
      v16 = 1;
      goto LABEL_22;
    }
    v13 = *(unsigned int **)(a1 + 24);
    if (a3)
      *(_DWORD *)a3 += 2;
    v37 = a3;
    v14 = v29;
    v29 = 0;
    v39 = v14;
    WebCore::DatasetDOMStringMap::setNamedItem(v13, (const WTF::String *)&v37, (const WTF::AtomString *)&v39, (uint64_t)v27);
    v15 = v39;
    v39 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
      {
        WTF::StringImpl::destroy(v15, v11);
        if (a3)
        {
LABEL_11:
          if (*(_DWORD *)a3 == 2)
            WTF::StringImpl::destroy(a3, v11);
          else
            *(_DWORD *)a3 -= 2;
        }
LABEL_13:
        if ((_BYTE)v28)
        {
          v11 = (WTF::StringImpl *)LOBYTE(v27[0]);
          LOBYTE(v37) = v27[0];
          v24 = v27[1];
          v27[1] = 0;
          v38 = v24;
          if (!*((_QWORD *)v10 + 2))
          {
            v25.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)LOBYTE(v27[0]), (JSC::JSGlobalObject *)&v38);
            JSC::VM::throwException(v10, a2, v25);
            v24 = v38;
          }
          v38 = 0;
          if (v24)
          {
            if (*(_DWORD *)v24 == 2)
              WTF::StringImpl::destroy(v24, v11);
            else
              *(_DWORD *)v24 -= 2;
          }
          if ((_BYTE)v28)
          {
            v26 = v27[1];
            v27[1] = 0;
            if (v26)
            {
              if (*(_DWORD *)v26 == 2)
                WTF::StringImpl::destroy(v26, v11);
              else
                *(_DWORD *)v26 -= 2;
            }
          }
        }
        v12 = v30;
        goto LABEL_15;
      }
      *(_DWORD *)v15 -= 2;
    }
    if (a3)
      goto LABEL_11;
    goto LABEL_13;
  }
  if (a5)
    JSC::throwTypeError();
  v16 = 0;
LABEL_22:
  if (HIDWORD(v32))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v31, v35);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v34;
    if (HIDWORD(v32))
    {
      v21 = v31;
      v22 = 8 * HIDWORD(v32);
      do
      {
        v23 = *(_QWORD *)v21;
        *(_QWORD *)v21 = 0;
        if (v23)
        {
          if (*(_DWORD *)(v23 + 24) == 2)
          {
            if ((*(_WORD *)(v23 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v23, v11);
          }
          else
          {
            *(_DWORD *)(v23 + 24) -= 2;
          }
        }
        v21 = (WTF *)((char *)v21 + 8);
        v22 -= 8;
      }
      while (v22);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v34;
  }
  v18 = v31;
  if (v33 != (_BYTE *)v31 && v31 != 0)
  {
    v31 = 0;
    LODWORD(v32) = 0;
    WTF::fastFree(v18, v11);
  }
  return v16;
}

uint64_t WebCore::JSDOMStringMap::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMStringMapPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMStringMapPrototype::create(WebCore::JSDOMStringMapPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSDOMStringMap::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSDOMStringMapPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringMap>,(WebCore::DOMConstructorID)435>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3480);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringMap>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDOMStringMap::s_info + ~((_QWORD)&WebCore::JSDOMStringMap::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMStringMap::s_info + ~((_QWORD)&WebCore::JSDOMStringMap::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDOMStringMap::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDOMStringMap::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDOMStringMapPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDOMStringMapPrototype::create((WebCore::JSDOMStringMapPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDOMStringMap::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMStringMap::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3480) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::isVisibleNamedProperty<(WebCore::LegacyOverrideBuiltIns)1,WebCore::JSDOMStringMap>(uint64_t a1, uint64_t a2, unint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::DatasetDOMStringMap *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int isSupportedPropertyName;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t result;
  int v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned int v31;
  BOOL v32;
  int OwnStaticPropertySlot;
  char v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  unsigned int v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  JSC::VM *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;

  if (a3)
  {
    if ((*(_BYTE *)(a3 + 16) & 0x20) != 0)
      return 0;
    v8 = *(WebCore::DatasetDOMStringMap **)(a2 + 24);
    *(_DWORD *)a3 += 2;
    v9 = (WTF::StringImpl *)a3;
  }
  else
  {
    v9 = 0;
    v8 = *(WebCore::DatasetDOMStringMap **)(a2 + 24);
  }
  v45 = v9;
  isSupportedPropertyName = WebCore::DatasetDOMStringMap::isSupportedPropertyName(v8, (const WTF::String *)&v45, a3, a4, a5);
  v12 = v45;
  v45 = 0;
  if (!v12)
    goto LABEL_7;
  if (*(_DWORD *)v12 == 2)
  {
    WTF::StringImpl::destroy(v12, v10);
    if (isSupportedPropertyName)
      goto LABEL_8;
    return 0;
  }
  *(_DWORD *)v12 -= 2;
LABEL_7:
  if (!isSupportedPropertyName)
    return 0;
LABEL_8:
  v13 = *(JSC::VM **)(a1 + 56);
  v47 = 0xFFFFFFFF00000000;
  v49 = 0;
  v50 = 0;
  v48 = a2;
  v51 = 196608;
  v52 = 0;
  v55 = 0;
  v56 = 0;
  v53 = v13;
  ++*((_DWORD *)v13 + 1);
  v54 = 1;
  if ((a3 >> 4))
  {
    v14 = 16 * (*(_DWORD *)a2 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v14 + 0x20)) == 0)
    {
      v15 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)), v13);
      if (v15)
      {
        v57 = a3;
        v16 = JSC::PropertyTable::get(v15, (uint64_t *)&v57);
        v17 = v16;
        if ((_DWORD)v16 != -1)
        {
          v25 = HIDWORD(v16);
          v26 = (uint64_t *)(a2 + 8 * (int)v16 + 16);
          if ((int)v16 >= 64)
            v26 = (uint64_t *)(*(_QWORD *)(a2 + 8) + ((uint64_t)(0x3F00000000 - (v16 << 32)) >> 29) - 8);
          v27 = *v26;
          if ((*v26 & 0xFFFE000000000002) != 0)
            goto LABEL_35;
          v28 = *(unsigned __int8 *)(v27 + 5);
          if (v28 == 6)
          {
            v36 = *(_DWORD *)(v14 + 16) & 3;
            v37 = *(_QWORD *)(v27 + 16);
            if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
            {
              v39 = *(_QWORD *)(v27 + 24);
              v38 = *(_QWORD *)(v27 + 32);
              v45 = *(WTF::StringImpl **)(v27 + 8);
              v46 = v37;
              LODWORD(v47) = HIDWORD(v16);
              v49 = a2;
              BYTE1(v51) = 3;
              result = 0;
              if (v36 != 2)
                LOBYTE(v51) = 1;
              HIBYTE(v51) = 1;
              v55 = v39;
              v56 = v38;
              goto LABEL_24;
            }
            v45 = *(WTF::StringImpl **)(v27 + 8);
            v46 = v37;
            LODWORD(v47) = HIDWORD(v16);
            v49 = a2;
            BYTE1(v51) = 3;
            if (v36 != 2)
            {
              result = 0;
              LOBYTE(v51) = 1;
              goto LABEL_24;
            }
          }
          else
          {
            if (v28 != 5)
            {
LABEL_35:
              result = 0;
              v45 = (WTF::StringImpl *)v27;
              v49 = a2;
              v47 = __PAIR64__(v17, v25);
              LOWORD(v51) = 257;
              goto LABEL_24;
            }
            JSC::JSObject::fillGetterPropertySlot();
          }
          result = 0;
          goto LABEL_24;
        }
      }
    }
  }
  if ((*(_BYTE *)(a2 + 6) & 0x20) != 0)
  {
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    v34 = OwnStaticPropertySlot;
    result = OwnStaticPropertySlot ^ 1u;
    if (!a3 || (v34 & 1) != 0)
      goto LABEL_24;
  }
  else if (!a3)
  {
LABEL_23:
    result = 1;
    goto LABEL_24;
  }
  v18 = *(_DWORD *)(a3 + 16);
  if ((v18 & 0x20) != 0)
    goto LABEL_23;
  v19 = *(_BYTE **)(a3 + 8);
  v20 = *(unsigned int *)(a3 + 4);
  if ((v18 & 4) != 0)
  {
    if ((_DWORD)v20)
    {
      v40 = *v19 - 48;
      if (v40 > 9 || v20 >= 2 && *v19 == 48)
      {
LABEL_62:
        v41 = 0;
      }
      else
      {
        v42 = v19 + 1;
        v43 = v20 - 1;
        while (v43)
        {
          if (v40 > 0x19999999)
            goto LABEL_62;
          v44 = *v42 - 48;
          if (v44 > 9)
            goto LABEL_62;
          v41 = 0;
          v32 = __CFADD__(v44, 10 * v40);
          v40 = v44 + 10 * v40;
          ++v42;
          --v43;
          if (v32)
            goto LABEL_63;
        }
        v41 = 0x100000000;
        if (v40 == -1)
          v41 = 0;
      }
    }
    else
    {
      v41 = 0;
    }
LABEL_63:
    if ((v41 & 0x100000000) == 0)
      goto LABEL_23;
  }
  else
  {
    if ((_DWORD)v20)
    {
      v21 = *(unsigned __int16 *)v19 - 48;
      if (v21 > 9 || v20 >= 2 && *(_WORD *)v19 == 48)
      {
LABEL_20:
        v22 = 0;
      }
      else
      {
        v29 = (unsigned __int16 *)(v19 + 2);
        v30 = v20 - 1;
        while (v30)
        {
          if (v21 <= 0x19999999)
          {
            v31 = *v29 - 48;
            if (v31 <= 9)
            {
              v32 = __CFADD__(v31, 10 * v21);
              v21 = v31 + 10 * v21;
              ++v29;
              --v30;
              if (!v32)
                continue;
            }
          }
          goto LABEL_20;
        }
        v35 = v21 == -1;
        v22 = 0x100000000;
        if (v35)
          v22 = 0;
      }
    }
    else
    {
      v22 = 0;
    }
    if ((v22 & 0x100000000) == 0)
      goto LABEL_23;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex() ^ 1;
LABEL_24:
  if (v54)
  {
    v24 = *((_DWORD *)v53 + 1);
    if (!v24)
    {
      __break(0xC471u);
      JUMPOUT(0x1949A87C8);
    }
    *((_DWORD *)v53 + 1) = v24 - 1;
  }
  return result;
}

unint64_t WebCore::jsDOMStringMapConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMStringMapPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringMap>,(WebCore::DOMConstructorID)435>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSDOMStringMapOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  WTF::ConcurrentPtrHashSet *v9;
  _DWORD *v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  void *v20;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8) + 8);
  if (!v5)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from DOMStringMapOwner";
    a5[1] = 33;
  }
  if ((*(_BYTE *)(v5 + 22) & 8) == 0)
  {
    while (1)
    {
      v6 = (void *)v5;
      if ((*(_WORD *)(v5 + 28) & 0x80) != 0)
      {
        v8 = *(_QWORD *)(v5 + 200);
        if (!v8)
          goto LABEL_12;
        v7 = (uint64_t *)(v8 + 8);
      }
      else
      {
        v7 = (uint64_t *)(v5 + 32);
      }
      v5 = *v7;
      if (!v5)
        goto LABEL_12;
    }
  }
  v6 = *(void **)(*(_QWORD *)(v5 + 40) + 8);
LABEL_12:
  v9 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v10 = (_DWORD *)*((_QWORD *)v9 + 6);
  if ((_DWORD *)((char *)v9 + 56) != v10)
  {
    v11 = v10[1];
    v12 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = v15;
    while (1)
    {
      v17 = *(void **)&v10[2 * v16 + 4];
      if (!v17)
        return 0;
      if (v6 == v17)
        goto LABEL_21;
      v16 = (v16 + 1) & v11;
      if (v16 == v15)
      {
        __break(0xC471u);
        JUMPOUT(0x1949A8A30);
      }
    }
  }
  v19 = a4;
  v20 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v9, v6);
  a4 = v19;
  v6 = v20;
  if ((_DWORD)result)
  {
LABEL_21:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSDOMStringMapOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  int v24;
  _QWORD *v25;

  v3 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  *(_DWORD *)(*(_QWORD *)(v3[1] + 8) + 24) += 2;
  if (!*(_DWORD *)(a3 + 48))
  {
    if (*v3)
    {
      *(_QWORD *)(*v3 + 8) = 3;
      *v3 = 0;
    }
LABEL_4:
    v4 = *(_QWORD *)(v3[1] + 8);
    if (*(_DWORD *)(v4 + 24) == 2)
    {
      if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v4, a2);
    }
    else
    {
      *(_DWORD *)(v4 + 24) -= 2;
    }
    return;
  }
  v7 = *(_QWORD *)(a3 + 32);
  v5 = (uint64_t *)(a3 + 32);
  v6 = v7;
  if (!v7)
    goto LABEL_4;
  v8 = *(_DWORD *)(v6 - 8);
  v9 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
  v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
  v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
  v12 = v8 & ((v11 >> 31) ^ v11);
  v13 = *(_QWORD **)(v6 + 16 * v12);
  if (v13 != v3)
  {
    v24 = 1;
    while (v13)
    {
      v12 = ((_DWORD)v12 + v24) & v8;
      v13 = *(_QWORD **)(v6 + 16 * v12);
      ++v24;
      if (v13 == v3)
        goto LABEL_11;
    }
    v12 = *(unsigned int *)(v6 - 4);
  }
LABEL_11:
  if (v12 != *(_DWORD *)(v6 - 4))
  {
    v14 = (_QWORD *)(v6 + 16 * v12);
    *v14 = -1;
    v17 = v14[1];
    v16 = v14 + 1;
    v15 = v17;
    if (v17)
    {
      *(_QWORD *)(v15 + 8) = 3;
      *v16 = 0;
    }
    ++*(_DWORD *)(*v5 - 16);
    v18 = *v5;
    if (*v5)
      v19 = *(_DWORD *)(v18 - 12) - 1;
    else
      v19 = -1;
    *(_DWORD *)(v18 - 12) = v19;
    v20 = *v5;
    if (*v5)
    {
      v21 = 6 * *(_DWORD *)(v20 - 12);
      v22 = *(_DWORD *)(v20 - 4);
      if (v21 < v22 && v22 >= 9)
      {
        v25 = v3;
        WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v5, v22 >> 1, 0);
        v3 = v25;
      }
    }
  }
  if (v3)
    goto LABEL_4;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMTokenList>::initializeProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDOMTokenList>((uint64_t *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

uint64_t WebCore::JSDOMTokenList::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  _BYTE v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = *(JSC::VM **)(a2 + 56);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v22 + 1;
    v31 = v23 - 1;
    while (v31)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v30 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          ++v30;
          --v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSDOMTokenList::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x1949A9060);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSDOMTokenList::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDOMTokenList::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  WebCore::Element **v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(WebCore::Element ***)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (*(_BYTE *)(v15 + 242))
            {
LABEL_21:
              if (v13[65])
                return JSC::JSObject::deleteProperty();
            }
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) != 0)
          {
            goto LABEL_21;
          }
        }
      }
    }
  }
  if (a3)
  {
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18 || (v29 = *v17 - 48, v29 > 9) || v18 >= 2 && *v17 == 48)
        {
LABEL_46:
          v30 = 0;
          v31 = 0;
          v32 = 0;
        }
        else
        {
          v33 = v18 - 1;
          v34 = v17 + 1;
          while (v33)
          {
            if (v29 > 0x19999999)
              goto LABEL_46;
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_46;
            v30 = 0;
            v31 = 0;
            v32 = 0;
            v28 = __CFADD__(v35, 10 * v29);
            v29 = v35 + 10 * v29;
            --v33;
            ++v34;
            if (v28)
              goto LABEL_47;
          }
          v30 = 0x100000000;
          if (v29 == -1)
          {
            v30 = 0;
            v31 = 0;
          }
          else
          {
            v31 = v29;
          }
          if (v29 == -1)
            v32 = 0;
          else
            v32 = v29 & 0xFFFFFF00;
        }
LABEL_47:
        v23 = v32 | v31;
        if ((v30 & 0x100000000) != 0)
          return *((_DWORD *)WebCore::DOMTokenList::tokens(v9) + 3) <= v23;
      }
      else
      {
        if ((_DWORD)v18
          && (v19 = *(unsigned __int16 *)v17 - 48, v19 <= 9)
          && (v18 < 2 || *(_WORD *)v17 != 48))
        {
          v25 = (unsigned __int16 *)(v17 + 2);
          v26 = v18 - 1;
          while (v26)
          {
            if (v19 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v19);
                v19 = v27 + 10 * v19;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_29;
          }
          v7 = v19 == -1;
          v22 = v19 & 0xFFFFFF00;
          v21 = v19;
          v20 = 0x100000000;
          if (v7)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
          }
        }
        else
        {
LABEL_29:
          v20 = 0;
          v21 = 0;
          v22 = 0;
        }
        v23 = v22 | v21;
        if ((v20 & 0x100000000) != 0)
          return *((_DWORD *)WebCore::DOMTokenList::tokens(v9) + 3) <= v23;
      }
    }
  }
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSDOMTokenList::deletePropertyByIndex(WebCore::JSDOMTokenList *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  WebCore::Element **v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = (WebCore::Element **)*((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  }
  if (!v15[65])
    return *((_DWORD *)WebCore::DOMTokenList::tokens(v11) + 3) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDOMTokenList::getOwnPropertySlotByIndex(WebCore::Element ***this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  unsigned int v6;
  JSC::VM *v9;
  WebCore::Element **v10;
  WTF::StringImpl *v11;
  WebCore::Element *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v19;
  unsigned int v20;
  unsigned int v21;

  v6 = a3;
  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v10 = WebCore::DOMTokenList::tokens(this[3]);
  v12 = *((_DWORD *)v10 + 3) <= v6
      ? (WebCore::Element *)MEMORY[0x1E0CBF2F8]
      : (WebCore::Element *)((char *)*v10 + 8 * v6);
  v13 = *(_QWORD *)v12;
  if (!*(_QWORD *)v12)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v14 = *(_DWORD *)(v13 + 4);
  *(_DWORD *)v13 += 2;
  v15 = *((_QWORD *)a2 + 7);
  if (v14)
  {
    if (v14 != 1)
    {
LABEL_8:
      v16 = *(_QWORD *)(v15 + 64760);
      if (!v16 || v13 != *(_QWORD *)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_11;
    }
    v19 = *(unsigned __int8 **)(v13 + 8);
    if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    {
      v20 = *v19;
    }
    else
    {
      v21 = *(unsigned __int16 *)v19;
      if (v21 > 0xFF)
        goto LABEL_8;
      v20 = v21;
    }
    v16 = *(_QWORD *)(v15 + 8 * v20 + 42216);
  }
  else
  {
    v16 = *(_QWORD *)(v15 + 41968);
  }
LABEL_11:
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
  {
    v17 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v16;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = this;
    v17 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (*(_DWORD *)v13 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v13, v11);
  else
    *(_DWORD *)v13 -= 2;
  return v17;
}

uint64_t WebCore::JSDOMTokenList::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *((_DWORD *)WebCore::DOMTokenList::tokens(*(WebCore::Element ***)(a1 + 24)) + 3);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDOMTokenList::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSDOMTokenList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMTokenListPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMTokenListPrototype::create(WebCore::JSDOMTokenListPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t Direct;
  WTF::StringImpl *v13;
  JSC::JSObject *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  JSC::Structure *v19;
  int v20;
  unint64_t v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  JSC::Structure **v27;
  int *v28;
  int v29;
  int v30;
  JSC::Structure *v31;
  int v32;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v22 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v22);
    *((_QWORD *)this + 4865) = SlowCase + (int)v22;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<11u>(this, (uint64_t)&WebCore::JSDOMTokenList::s_info, (uint64_t)&WebCore::JSDOMTokenListPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v10, this, (unint64_t)v11);
  v23 = 0;
  v24 = SlowCase;
  v25 = 0x1000000FFFFFFFFLL;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, Direct, 4, (uint64_t)&v23);
  if (*v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v13);
  else
    *v11 -= 2;
  WebCore::addValueIterableMethods(*(WebCore **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28), (JSC::JSGlobalObject *)SlowCase, v14);
  v15 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v17 = JSC::JSString::create((uint64_t)this, &v23);
  v18 = v23;
  v23 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v16);
    else
      *(_DWORD *)v18 -= 2;
  }
  v19 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v32 = *(_DWORD *)SlowCase;
  v31 = v19;
  v20 = JSC::Structure::outOfLineCapacity(v19);
  v29 = 0;
  v30 = v20;
  v23 = (WTF::StringImpl *)&v30;
  v24 = SlowCase;
  v25 = (uint64_t)this;
  v26 = &v32;
  v27 = &v31;
  v28 = &v29;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v19, this, v15, 6, (uint64_t)&v23);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v29, v17);
  *((_DWORD *)v19 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMTokenList>,(WebCore::DOMConstructorID)506>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4048);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMTokenList>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMTokenList>::create(a1, Structure, a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4048) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMTokenList::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  unsigned __int16 *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  BOOL v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  WebCore::Element **v43;
  WTF::StringImpl **v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;

  v6 = *(JSC::VM **)(a2 + 56);
  if (a3)
  {
    v9 = *(_DWORD *)(a3 + 16);
    if ((v9 & 0x20) == 0)
    {
      v10 = *(_BYTE **)(a3 + 8);
      v11 = *(unsigned int *)(a3 + 4);
      if ((v9 & 4) != 0)
      {
        if ((_DWORD)v11)
        {
          v12 = *v10 - 48;
          if (v12 <= 9 && (v11 < 2 || *v10 != 48))
          {
            v40 = v11 - 1;
            v41 = v10 + 1;
            while (v40)
            {
              if (v12 <= 0x19999999)
              {
                v42 = *v41 - 48;
                if (v42 <= 9)
                {
                  v26 = __CFADD__(v42, 10 * v12);
                  v12 = v42 + 10 * v12;
                  --v40;
                  ++v41;
                  if (!v26)
                    continue;
                }
              }
              goto LABEL_6;
            }
LABEL_70:
            if (v12 != -1)
            {
              v43 = WebCore::DOMTokenList::tokens(*(WebCore::Element ***)(a1 + 24));
              if (*((_DWORD *)v43 + 3) <= v12)
                v44 = (WTF::StringImpl **)MEMORY[0x1E0CBF2F8];
              else
                v44 = (WTF::StringImpl **)((char *)*v43 + 8 * v12);
              v45 = *v44;
              if (*v44)
              {
                *(_DWORD *)v45 += 2;
                v47 = WebCore::toJS<WebCore::IDLNullable<WebCore::IDLDOMString>,WTF::AtomString>(*(_QWORD *)(a2 + 56), (uint64_t)v45);
                if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
                {
                  v21 = 0;
                }
                else
                {
                  *(_QWORD *)a4 = v47;
                  *(_DWORD *)(a4 + 16) = 2;
                  *(_QWORD *)(a4 + 32) = a1;
                  v21 = 1;
                  *(_BYTE *)(a4 + 49) = 1;
                }
                if (*(_DWORD *)v45 == 2)
                  WTF::StringImpl::destroy(v45, v46);
                else
                  *(_DWORD *)v45 -= 2;
                return v21;
              }
              v6 = *(JSC::VM **)(a2 + 56);
            }
          }
        }
      }
      else if ((_DWORD)v11)
      {
        v12 = *(unsigned __int16 *)v10 - 48;
        if (v12 <= 9 && (v11 < 2 || *(_WORD *)v10 != 48))
        {
          v23 = (unsigned __int16 *)(v10 + 2);
          v24 = v11 - 1;
          while (v24)
          {
            if (v12 <= 0x19999999)
            {
              v25 = *v23 - 48;
              if (v25 <= 9)
              {
                v26 = __CFADD__(v25, 10 * v12);
                v12 = v25 + 10 * v12;
                ++v23;
                --v24;
                if (!v26)
                  continue;
              }
            }
            goto LABEL_6;
          }
          goto LABEL_70;
        }
      }
    }
LABEL_6:
    if ((a3 >> 4))
    {
      v13 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
      if (((a3 >> 4) & ~*(_DWORD *)(v13 + 0x20)) == 0)
      {
        v14 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v6);
        if (v14)
        {
          v52 = a3;
          v15 = JSC::PropertyTable::get(v14, (uint64_t *)&v52);
          if ((_DWORD)v15 != -1)
          {
            if ((int)v15 > 63)
            {
              v30 = *(_QWORD *)(a1 + 8) - 8;
              v31 = 0x3F00000000 - (v15 << 32);
            }
            else
            {
              v30 = a1 + 16;
              v31 = v15 << 32;
            }
            v32 = *(_QWORD *)(v30 + (v31 >> 29));
            if ((v32 & 0xFFFE000000000002) == 0)
            {
              v33 = *(unsigned __int8 *)(v32 + 5);
              if (v33 == 6)
              {
                v35 = *(_DWORD *)(v13 + 16) & 3;
                v37 = *(_QWORD *)(v32 + 8);
                v36 = *(_QWORD *)(v32 + 16);
                if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0x4C))
                {
                  v39 = *(_QWORD *)(v32 + 24);
                  v38 = *(_QWORD *)(v32 + 32);
                  *(_QWORD *)a4 = v37;
                  *(_QWORD *)(a4 + 8) = v36;
                  *(_DWORD *)(a4 + 16) = HIDWORD(v15);
                  *(_QWORD *)(a4 + 32) = a1;
                  *(_BYTE *)(a4 + 49) = 3;
                  v21 = 1;
                  if (v35 != 2)
                    *(_BYTE *)(a4 + 48) = 1;
                  *(_BYTE *)(a4 + 51) = 1;
                  *(_QWORD *)(a4 + 72) = v39;
                  *(_QWORD *)(a4 + 80) = v38;
                }
                else
                {
                  *(_QWORD *)a4 = v37;
                  *(_QWORD *)(a4 + 8) = v36;
                  *(_DWORD *)(a4 + 16) = HIDWORD(v15);
                  *(_QWORD *)(a4 + 32) = a1;
                  v21 = 1;
                  *(_BYTE *)(a4 + 49) = 3;
                  if (v35 != 2)
                    *(_BYTE *)(a4 + 48) = 1;
                }
                return v21;
              }
              if (v33 == 5)
              {
                JSC::JSObject::fillGetterPropertySlot();
                return 1;
              }
            }
            *(_QWORD *)a4 = v32;
            *(_QWORD *)(a4 + 32) = a1;
            *(_DWORD *)(a4 + 16) = HIDWORD(v15);
            *(_DWORD *)(a4 + 20) = v15;
            v21 = 1;
            *(_WORD *)(a4 + 48) = 257;
            return v21;
          }
        }
      }
    }
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if ((_DWORD)v18)
        {
          v48 = *v17 - 48;
          if (v48 > 9 || v18 >= 2 && *v17 == 48)
          {
LABEL_84:
            v20 = 0;
          }
          else
          {
            v49 = v17 + 1;
            v50 = v18 - 1;
            while (v50)
            {
              if (v48 > 0x19999999)
                goto LABEL_84;
              v51 = *v49 - 48;
              if (v51 > 9)
                goto LABEL_84;
              v20 = 0;
              v26 = __CFADD__(v51, 10 * v48);
              v48 = v51 + 10 * v48;
              ++v49;
              --v50;
              if (v26)
                goto LABEL_16;
            }
            v20 = 0x100000000;
            if (v48 == -1)
              v20 = 0;
          }
        }
        else
        {
          v20 = 0;
        }
      }
      else if ((_DWORD)v18)
      {
        v19 = *(unsigned __int16 *)v17 - 48;
        if (v19 > 9 || v18 >= 2 && *(_WORD *)v17 == 48)
        {
LABEL_15:
          v20 = 0;
        }
        else
        {
          v27 = (unsigned __int16 *)(v17 + 2);
          v28 = v18 - 1;
          while (v28)
          {
            if (v19 <= 0x19999999)
            {
              v29 = *v27 - 48;
              if (v29 <= 9)
              {
                v26 = __CFADD__(v29, 10 * v19);
                v19 = v29 + 10 * v19;
                ++v27;
                --v28;
                if (!v26)
                  continue;
              }
            }
            goto LABEL_15;
          }
          v34 = v19 == -1;
          v20 = 0x100000000;
          if (v34)
            v20 = 0;
        }
      }
      else
      {
        v20 = 0;
      }
LABEL_16:
      if ((v20 & 0x100000000) != 0)
        return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    return 0;
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
    return 0;
  return JSC::JSObject::getOwnStaticPropertySlot();
}

uint64_t WebCore::toJS<WebCore::IDLNullable<WebCore::IDLDOMString>,WTF::AtomString>(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  unsigned __int8 *v5;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 2;
  v2 = *(_DWORD *)(a2 + 4);
  if (!v2)
    return *(_QWORD *)(a1 + 41968);
  if (v2 == 1)
  {
    v5 = *(unsigned __int8 **)(a2 + 8);
    if ((*(_BYTE *)(a2 + 16) & 4) != 0)
    {
      v6 = *v5;
    }
    else
    {
      v7 = *(unsigned __int16 *)v5;
      if (v7 > 0xFF)
        goto LABEL_4;
      v6 = v7;
    }
    return *(_QWORD *)(a1 + 8 * v6 + 42216);
  }
LABEL_4:
  v3 = *(_QWORD *)(a1 + 64760);
  if (!v3 || *(_QWORD *)(v3 + 8) != a2)
    return JSC::jsStringWithCacheSlowCase();
  return v3;
}

unint64_t WebCore::jsDOMTokenListConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMTokenListPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMTokenList>,(WebCore::DOMConstructorID)506>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMTokenList_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *((unsigned int *)WebCore::DOMTokenList::tokens(*(WebCore::Element ***)(a2 + 24)) + 3);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::jsDOMTokenList_value(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  uint64_t *Attribute;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;

  Attribute = (uint64_t *)WebCore::Element::getAttribute(**(WebCore::Element ***)(a2 + 24), *(const WebCore::QualifiedName **)(*(_QWORD *)(a2 + 24) + 8), a3, a4, a5);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *Attribute;
  if (!*Attribute)
    return *(_QWORD *)(v7 + 41968);
  v9 = *(_DWORD *)(v8 + 4);
  if (!v9)
    return *(_QWORD *)(v7 + 41968);
  if (v9 == 1)
  {
    v12 = *(unsigned __int8 **)(v8 + 8);
    if ((*(_BYTE *)(v8 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v13 = *(unsigned __int16 *)v12;
      if (v13 > 0xFF)
        goto LABEL_4;
      v13 = v13;
    }
    return *(_QWORD *)(v7 + 8 * v13 + 42216);
  }
LABEL_4:
  v10 = *(_QWORD *)(v7 + 64760);
  if (!v10 || v8 != *(_QWORD *)(v10 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v10;
}

BOOL WebCore::setJSDOMTokenList_value(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WebCore::Element **v6;
  WTF::StringImpl *v7;
  __n128 v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF *v14;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  int v21;
  WTF *v22;
  uint64_t v23;
  _BYTE v24[40];
  uint64_t v25;
  JSC::JSGlobalObject *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  char v30;

  v5 = WebCore::IDLOperation<WebCore::JSDOMTokenList>::cast(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WebCore::Element ***)(v5 + 24);
  v22 = (WTF *)v24;
  v23 = 4;
  v24[32] = 0;
  v25 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v26 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v22;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v20);
  v9 = v21;
  v10 = v21 == 0;
  if (!v21)
  {
    v11 = v20;
    v20 = 0;
    v27 = v11;
    WebCore::Element::setAttribute(*v6, v6[1], &v27, 0, &v28, v8);
    if (v30)
    {
      v12 = v29;
      v29 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v7);
        else
          *(_DWORD *)v12 -= 2;
      }
    }
    v13 = v27;
    v27 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v7);
      else
        *(_DWORD *)v13 -= 2;
    }
    v9 = v21;
  }
  if (v9 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A6F0[v9])(&v28, &v20);
  if (HIDWORD(v23))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v22, v26);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
    if (HIDWORD(v23))
    {
      v17 = v22;
      v18 = 8 * HIDWORD(v23);
      do
      {
        v19 = *(_QWORD *)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)(v19 + 24) == 2)
          {
            if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v19, v7);
          }
          else
          {
            *(_DWORD *)(v19 + 24) -= 2;
          }
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
  }
  v14 = v22;
  if (v24 != (_BYTE *)v22 && v22 != 0)
  {
    v22 = 0;
    LODWORD(v23) = 0;
    WTF::fastFree(v14, v7);
  }
  return v10;
}

uint64_t WebCore::JSDOMTokenListOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  WTF::ConcurrentPtrHashSet *v9;
  _DWORD *v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  void *v20;

  v5 = **(_QWORD **)(*(_QWORD *)a2 + 24);
  if (!v5)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from DOMTokenListOwner";
    a5[1] = 33;
  }
  if ((*(_BYTE *)(v5 + 22) & 8) == 0)
  {
    while (1)
    {
      v6 = (void *)v5;
      if ((*(_WORD *)(v5 + 28) & 0x80) != 0)
      {
        v8 = *(_QWORD *)(v5 + 200);
        if (!v8)
          goto LABEL_12;
        v7 = (uint64_t *)(v8 + 8);
      }
      else
      {
        v7 = (uint64_t *)(v5 + 32);
      }
      v5 = *v7;
      if (!v5)
        goto LABEL_12;
    }
  }
  v6 = *(void **)(*(_QWORD *)(v5 + 40) + 8);
LABEL_12:
  v9 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v10 = (_DWORD *)*((_QWORD *)v9 + 6);
  if ((_DWORD *)((char *)v9 + 56) != v10)
  {
    v11 = v10[1];
    v12 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = v15;
    while (1)
    {
      v17 = *(void **)&v10[2 * v16 + 4];
      if (!v17)
        return 0;
      if (v6 == v17)
        goto LABEL_21;
      v16 = (v16 + 1) & v11;
      if (v16 == v15)
      {
        __break(0xC471u);
        JUMPOUT(0x1949AAAF8);
      }
    }
  }
  v19 = a4;
  v20 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v9, v6);
  a4 = v19;
  v6 = v20;
  if ((_DWORD)result)
  {
LABEL_21:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

unint64_t WebCore::wrap<WebCore::DOMTokenList>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *Allocator;
  int v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  *(_DWORD *)(*(_QWORD *)a3 + 24) += 2;
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSDOMTokenList::s_info + ~((_QWORD)&WebCore::JSDOMTokenList::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMTokenList::s_info + ~((_QWORD)&WebCore::JSDOMTokenList::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSDOMTokenList::s_info)
    {
LABEL_11:
      v22 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v22)
        goto LABEL_13;
    }
    else
    {
      v38 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v38) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v38;
        if (v21 == &WebCore::JSDOMTokenList::s_info)
          goto LABEL_11;
      }
    }
  }
  v23 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSDOMTokenListPrototype::createStructure(v23, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSDOMTokenListPrototype::create((WebCore::JSDOMTokenListPrototype *)v23, Structure, v25, v26);
  v28 = WebCore::JSDOMTokenList::createStructure(v23, a2, v27);
  v22 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSDOMTokenList::s_info);
LABEL_13:
  v29 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(v29 + 41456);
  v31 = *(_QWORD *)(v30 + 23536);
  v32 = *(_QWORD **)(v31 + 4136);
  if (v32)
    goto LABEL_14;
  v39 = *(_QWORD *)(v30 + 22648);
  if (__ldaxr((unsigned __int8 *)v39))
  {
    __clrex();
LABEL_36:
    MEMORY[0x19AEA534C](v39);
    goto LABEL_37;
  }
  if (__stxr(1u, (unsigned __int8 *)v39))
    goto LABEL_36;
LABEL_37:
  v41 = *(_QWORD *)(v39 + 2824);
  if (!*(_QWORD *)(v41 + 4136))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v47, &v54, v29 + 192, v29 + 1872, 32, 8, &v53);
    v49 = (uint64_t)v53;
    v53 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v54;
    v54 = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v41 + 4136);
    *(_QWORD *)(v41 + 4136) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v32 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v31 + 4136);
  *(_QWORD *)(v31 + 4136) = v32;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v39);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_44;
  }
  if (__stlxr(0, (unsigned __int8 *)v39))
LABEL_44:
    WTF::Lock::unlockSlow((WTF::Lock *)v39);
LABEL_14:
  SlowCase = v32[3];
  if (SlowCase >= v32[4])
  {
    SlowCase = v32[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_16;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v32[6];
    v32[4] = SlowCase + HIDWORD(v52);
    v32[5] = SlowCase + (int)v52;
  }
  v32[3] = SlowCase + 32;
LABEL_16:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v22);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v29 + 755))
    __dmb(0xAu);
  v33 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3351B8 & 1) == 0)
  {
    qword_1EE3351B0 = (uint64_t)&off_1E3259EF8;
    byte_1EE3351B8 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v34 = (SlowCase - 112) | 1;
  else
    v34 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v34 & 1) != 0)
    v35 = v34 + 47;
  else
    v35 = *(_QWORD *)v34 + 32;
  Allocator = *(_QWORD **)(v35 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v35 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3351B0;
  Allocator[2] = v33;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v33 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSDOMURL::prototype(WebCore::JSDOMURL *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t CachedDOMStructure;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;
  JSC::JSCell *v9;
  uint64_t v10;

  CachedDOMStructure = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSDOMURL::s_info);
  if (!CachedDOMStructure)
  {
    Structure = WebCore::JSDOMURLPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v9 = (JSC::JSCell *)WebCore::JSDOMURLPrototype::create(this, Structure, v7, v8);
    v10 = WebCore::JSDOMURL::createStructure((uint64_t *)this, (uint64_t)a2, v9);
    CachedDOMStructure = WebCore::cacheDOMStructure((JSCell *)a2, v10, (uint64_t)&WebCore::JSDOMURL::s_info);
  }
  return *(_QWORD *)(CachedDOMStructure + 48);
}

JSC::VM *JSC::reifyStaticProperties<15u>(JSC::VM *result, uint64_t a2, uint64_t a3, JSC::JSObject *this)
{
  JSC::VM *v7;
  uint64_t i;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v7 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 600; i += 40)
  {
    v9 = *(_QWORD *)(a3 + i + 8);
    if (v9)
    {
      if (v9 == 2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v7 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v10 = v12;
      result = (JSC::VM *)JSC::reifyStaticProperty(v7, a2, (unint64_t *)&v12, a3 + i, (unsigned __int8 *)this);
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v10, v11);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMURL::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMURL::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = JSC::JSObject::visitChildren();
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSDOMURL::visitChildren(WebCore::JSDOMURL *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = JSC::JSObject::visitChildren();
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSDOMURL::JSDOMURL(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

unint64_t WebCore::JSDOMURL::createPrototype(WebCore::JSDOMURL *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  Structure = WebCore::JSDOMURLPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSDOMURLPrototype::create(this, Structure, v5, v6);
}

uint64_t WebCore::JSDOMURLPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMURLPrototype::create(WebCore::JSDOMURLPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<15u>(this, (uint64_t)&WebCore::JSDOMURL::s_info, (uint64_t)&WebCore::JSDOMURLPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMURL>,(WebCore::DOMConstructorID)507>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  JSC::JSCell *v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char **v34;
  BOOL v35;
  BOOL v36;
  uint64_t v37;
  BOOL v38;
  char **v39;
  BOOL v40;
  BOOL v41;
  int v42;
  uint64_t v43;
  uint64_t v45;
  BOOL v47;
  WTF::StringImpl *v49;
  int v50;
  WTF::StringImpl *v51;
  BOOL v52;
  WTF::StringImpl *v54;
  int v55;
  WTF::StringImpl *v56;
  uint64_t v57;
  uint64_t v59;
  unint64_t v61;
  unint64_t v62;
  WTF::StringImpl *v63;
  unint64_t v64;
  int v65;
  int v66;
  uint64_t v67;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4056);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v63) = 67099;
  if (((unint64_t)v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v61 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v61);
    v6[2] = SlowCase + (int)v61;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v63, &WebCore::JSDOMConstructor<WebCore::JSDOMURL>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v6[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v62 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v62);
    v10[2848] = v2 + (int)v62;
  }
  v10[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v6[227] + 1768);
  v63 = 0;
  v64 = v2;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v63);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v63);
  v14 = v63;
  v63 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v6[227] + 1968);
  v63 = 0;
  v64 = v2;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v63);
  v16 = *(_QWORD *)(v6[227] + 2160);
  v17 = *(_QWORD *)(a2 + 3296);
  if (!v17)
    goto LABEL_19;
  v18 = *(_DWORD *)(v17 - 8);
  v19 = ((unint64_t)&WebCore::JSDOMURL::s_info + ~((_QWORD)&WebCore::JSDOMURL::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMURL::s_info + ~((_QWORD)&WebCore::JSDOMURL::s_info << 32)) >> 22);
  v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
  v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
  v22 = v18 & ((v21 >> 31) ^ v21);
  v23 = *(char ***)(v17 + 16 * v22);
  if (v23 != &WebCore::JSDOMURL::s_info)
  {
    v42 = 1;
    while (v23)
    {
      v22 = ((_DWORD)v22 + v42) & v18;
      v23 = *(char ***)(v17 + 16 * v22);
      ++v42;
      if (v23 == &WebCore::JSDOMURL::s_info)
        goto LABEL_18;
    }
    goto LABEL_19;
  }
LABEL_18:
  v24 = *(_QWORD *)(v17 + 16 * v22 + 8);
  if (!v24)
  {
LABEL_19:
    Structure = WebCore::JSDOMURLPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v28 = (JSC::JSCell *)WebCore::JSDOMURLPrototype::create((WebCore::JSDOMURLPrototype *)a1, Structure, v26, v27);
    v29 = WebCore::JSDOMURL::createStructure((uint64_t *)a1, a2, v28);
    v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDOMURL::s_info);
  }
  v30 = (int *)(a1 + 93124);
  v31 = *(_QWORD *)(v24 + 48);
  v63 = 0;
  v64 = v2;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v31, 14, (uint64_t)&v63);
  JSC::reifyStaticProperties<4u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDOMURL::s_info, &WebCore::JSDOMURLConstructorTableValues, (JSC::JSObject *)v2);
  v32 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v33 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v34 = (char **)(16 * v32);
  if ((_DWORD)v32)
    v35 = v34 == &WebCore::JSDOMWindowBase::s_info;
  else
    v35 = 1;
  v36 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v35)
  {
    v43 = 16 * v32;
    do
    {
      v43 = *(_QWORD *)(v43 + 16);
      v36 = v43 != 0;
    }
    while ((char **)v43 != &WebCore::JSDOMWindowBase::s_info && v43 != 0);
  }
  if (!v36)
  {
    v47 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v32)
    {
      v47 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
      if (v34 != &WebCore::JSDedicatedWorkerGlobalScope::s_info)
      {
        v57 = 16 * v32;
        do
        {
          v57 = *(_QWORD *)(v57 + 16);
          v47 = v57 != 0;
        }
        while ((char **)v57 != &WebCore::JSDedicatedWorkerGlobalScope::s_info && v57 != 0);
      }
    }
    if (!v47)
    {
      if ((_DWORD)v32 && v34 != &WebCore::JSSharedWorkerGlobalScope::s_info)
      {
        do
        {
          v34 = (char **)v34[2];
          v33 = v34 != 0;
        }
        while (v34 != &WebCore::JSSharedWorkerGlobalScope::s_info && v34 != 0);
      }
      if (!v33)
      {
        WTF::AtomStringImpl::addLiteral();
        v49 = v63;
        v50 = *v30;
        *v30 = 1;
        LODWORD(v63) = -1;
        WORD2(v63) = 1;
        JSC::JSObject::deleteProperty();
        *v30 = v50;
        if (v49)
        {
          if (*(_DWORD *)v49 == 2)
            WTF::StringImpl::destroy(v49, v51);
          else
            *(_DWORD *)v49 -= 2;
        }
      }
    }
  }
  v37 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v38 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v39 = (char **)(16 * v37);
  if ((_DWORD)v37)
    v40 = v39 == &WebCore::JSDOMWindowBase::s_info;
  else
    v40 = 1;
  v41 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v40)
  {
    v45 = 16 * v37;
    do
    {
      v45 = *(_QWORD *)(v45 + 16);
      v41 = v45 != 0;
    }
    while ((char **)v45 != &WebCore::JSDOMWindowBase::s_info && v45 != 0);
  }
  if (!v41)
  {
    v52 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v37)
    {
      v52 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
      if (v39 != &WebCore::JSDedicatedWorkerGlobalScope::s_info)
      {
        v59 = 16 * v37;
        do
        {
          v59 = *(_QWORD *)(v59 + 16);
          v52 = v59 != 0;
        }
        while ((char **)v59 != &WebCore::JSDedicatedWorkerGlobalScope::s_info && v59 != 0);
      }
    }
    if (!v52)
    {
      if ((_DWORD)v37 && v39 != &WebCore::JSSharedWorkerGlobalScope::s_info)
      {
        do
        {
          v39 = (char **)v39[2];
          v38 = v39 != 0;
        }
        while (v39 != &WebCore::JSSharedWorkerGlobalScope::s_info && v39 != 0);
      }
      if (!v38)
      {
        WTF::AtomStringImpl::addLiteral();
        v54 = v63;
        v55 = *v30;
        *v30 = 1;
        LODWORD(v63) = -1;
        WORD2(v63) = 1;
        JSC::JSObject::deleteProperty();
        *v30 = v55;
        if (v54)
        {
          if (*(_DWORD *)v54 == 2)
            WTF::StringImpl::destroy(v54, v56);
          else
            *(_DWORD *)v54 -= 2;
        }
      }
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4056) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDOMURLConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDOMURLPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMURL>,(WebCore::DOMConstructorID)507>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDOMURL_href(uint64_t a1, uint64_t a2, const WTF::String *a3)
{
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), (JSC::VM *)(*(_QWORD *)(a2 + 24) + 24), a3);
}

BOOL WebCore::setJSDOMURL_href(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::DOMURL *v10;
  int v11;
  _BOOL8 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  char v27;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMURL::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMURL::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::DOMURL **)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v21);
  v11 = v22;
  v12 = v22 == 0;
  if (!v22)
  {
    v13 = v21;
    v21 = 0;
    v23 = v13;
    WebCore::DOMURL::setHref(v10, &v23, &v25);
    v15 = v23;
    v23 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v27)
    {
      v17 = (WTF::StringImpl *)v25;
      LOBYTE(v23) = v25;
      v18 = v26;
      v26 = 0;
      v24 = v18;
      if (!*((_QWORD *)v4 + 2))
      {
        v19.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v25, (JSC::JSGlobalObject *)&v24);
        JSC::VM::throwException(v4, a1, v19);
        v18 = v24;
      }
      v24 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v17);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (v27)
      {
        v20 = v26;
        v26 = 0;
        if (v20)
        {
          if (*(_DWORD *)v20 == 2)
            WTF::StringImpl::destroy(v20, v17);
          else
            *(_DWORD *)v20 -= 2;
        }
      }
    }
    v11 = v22;
  }
  if (v11 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v11])(&v25, &v21);
  return v12;
}

uint64_t WebCore::jsDOMURL_origin(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::origin(*(WebCore::URLDecomposition **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsDOMURL_protocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::protocol(*(WebCore::URLDecomposition **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSDOMURL_protocol(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v16);
  v9 = v17;
  v10 = v17 == 0;
  if (!v17)
  {
    v11 = v16;
    v16 = 0;
    if (v11)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v18, v8);
      WTF::URL::setProtocol();
      (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, v18);
      v13 = v18[0];
      v18[0] = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v12);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (*(_DWORD *)v11 != 2)
      {
        *(_DWORD *)v11 -= 2;
LABEL_19:
        v9 = v17;
        goto LABEL_20;
      }
      v15 = v11;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v18, v8);
      WTF::URL::setProtocol();
      (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, v18);
      v15 = v18[0];
      v18[0] = 0;
      if (!v15)
        goto LABEL_19;
      if (*(_DWORD *)v15 != 2)
      {
        *(_DWORD *)v15 -= 2;
        goto LABEL_19;
      }
    }
    WTF::StringImpl::destroy(v15, v12);
    goto LABEL_19;
  }
LABEL_20:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v9])(v18, &v16);
  return v10;
}

uint64_t WebCore::jsDOMURL_username(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 16))(v15);
  WTF::URL::encodedUser((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSDOMURL_username(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v16);
  v9 = v17;
  v10 = v17 == 0;
  if (!v17)
  {
    v11 = v16;
    v16 = 0;
    if (v11)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v18, v8);
      WTF::URL::host((WTF::URL *)v18);
      if ((_DWORD)v12 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setUser();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, v18);
      }
      v13 = v18[0];
      v18[0] = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v12);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (*(_DWORD *)v11 != 2)
      {
        *(_DWORD *)v11 -= 2;
LABEL_22:
        v9 = v17;
        goto LABEL_23;
      }
      v15 = v11;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v18, v8);
      WTF::URL::host((WTF::URL *)v18);
      if ((_DWORD)v12 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setUser();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, v18);
      }
      v15 = v18[0];
      v18[0] = 0;
      if (!v15)
        goto LABEL_22;
      if (*(_DWORD *)v15 != 2)
      {
        *(_DWORD *)v15 -= 2;
        goto LABEL_22;
      }
    }
    WTF::StringImpl::destroy(v15, v12);
    goto LABEL_22;
  }
LABEL_23:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v9])(v18, &v16);
  return v10;
}

uint64_t WebCore::jsDOMURL_password(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 16))(v15);
  WTF::URL::encodedPassword((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSDOMURL_password(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v16);
  v9 = v17;
  v10 = v17 == 0;
  if (!v17)
  {
    v11 = v16;
    v16 = 0;
    if (v11)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v18, v8);
      WTF::URL::host((WTF::URL *)v18);
      if ((_DWORD)v12 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setPassword();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, v18);
      }
      v13 = v18[0];
      v18[0] = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v12);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (*(_DWORD *)v11 != 2)
      {
        *(_DWORD *)v11 -= 2;
LABEL_22:
        v9 = v17;
        goto LABEL_23;
      }
      v15 = v11;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v18, v8);
      WTF::URL::host((WTF::URL *)v18);
      if ((_DWORD)v12 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setPassword();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, v18);
      }
      v15 = v18[0];
      v18[0] = 0;
      if (!v15)
        goto LABEL_22;
      if (*(_DWORD *)v15 != 2)
      {
        *(_DWORD *)v15 -= 2;
        goto LABEL_22;
      }
    }
    WTF::StringImpl::destroy(v15, v12);
    goto LABEL_22;
  }
LABEL_23:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v9])(v18, &v16);
  return v10;
}

uint64_t WebCore::jsDOMURL_host(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14[5];

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 16))(v14);
  WTF::URL::hostAndPort((WTF::URL *)v14);
  v4 = v14[0];
  v14[0] = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, v3);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = *(_QWORD *)(a1 + 56);
  v6 = v13;
  if (!v13 || (v7 = *((_DWORD *)v13 + 1)) == 0)
  {
    v8 = *(_QWORD *)(v5 + 41968);
LABEL_10:
    if (!v6)
      return v8;
    goto LABEL_19;
  }
  if (v7 != 1)
    goto LABEL_7;
  v9 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
  if ((*((_BYTE *)v13 + 16) & 4) != 0)
  {
    v10 = *v9;
LABEL_18:
    v8 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_19;
  }
  v11 = *(unsigned __int16 *)v9;
  if (v11 <= 0xFF)
  {
    v10 = v11;
    goto LABEL_18;
  }
LABEL_7:
  v8 = *(_QWORD *)(v5 + 64760);
  if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
  {
    v8 = JSC::jsStringWithCacheSlowCase();
    v6 = v13;
    goto LABEL_10;
  }
LABEL_19:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v6);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

BOOL WebCore::setJSDOMURL_host(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v14;
  int v15;
  char v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v9 = v15;
  v10 = v15 == 0;
  if (!v15)
  {
    v11 = v14;
    v14 = 0;
    if (v11)
    {
      WebCore::URLDecomposition::setHost(v8, *(_QWORD *)(v11 + 8), *(_DWORD *)(v11 + 4));
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
    else
    {
      WebCore::URLDecomposition::setHost(v8, 0, 0);
    }
    v9 = v15;
  }
  if (v9 != -1)
    ((void (*)(char *, uint64_t *))off_1E325A258[v9])(&v16, &v14);
  return v10;
}

uint64_t WebCore::jsDOMURL_hostname(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 16))(v15);
  WTF::URL::host((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSDOMURL_hostname(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v14;
  int v15;
  char v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v9 = v15;
  v10 = v15 == 0;
  if (!v15)
  {
    v11 = v14;
    v14 = 0;
    if (v11)
    {
      WebCore::URLDecomposition::setHostname(v8, *(_QWORD *)(v11 + 8), *(_DWORD *)(v11 + 4));
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
    else
    {
      WebCore::URLDecomposition::setHostname(v8, 0, 0);
    }
    v9 = v15;
  }
  if (v9 != -1)
    ((void (*)(char *, uint64_t *))off_1E325A258[v9])(&v16, &v14);
  return v10;
}

uint64_t WebCore::jsDOMURL_port(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  int v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14[5];

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 16))(v14);
  v4 = WTF::URL::port((WTF::URL *)v14);
  v5 = v14[0];
  v14[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v3);
    else
      *(_DWORD *)v5 -= 2;
  }
  if ((v4 & 0xFF0000) != 0)
  {
    WTF::String::number((WTF::String *)(unsigned __int16)v4);
    v6 = v14[0];
  }
  else
  {
    v6 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v6 += 2;
    v14[0] = v6;
  }
  v7 = *(_QWORD *)(a1 + 56);
  if (!v6 || (v8 = *((_DWORD *)v6 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v7 + 41968);
LABEL_15:
    v14[0] = 0;
    if (!v6)
      return v9;
    goto LABEL_25;
  }
  if (v8 != 1)
    goto LABEL_12;
  v10 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
  if ((*((_BYTE *)v6 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_23:
    v9 = *(_QWORD *)(v7 + 8 * v11 + 42216);
    goto LABEL_24;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_23;
  }
LABEL_12:
  v9 = *(_QWORD *)(v7 + 64760);
  if (!v9 || v6 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v6 = v14[0];
    goto LABEL_15;
  }
LABEL_24:
  v14[0] = 0;
LABEL_25:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v6);
  else
    *(_DWORD *)v6 -= 2;
  return v9;
}

BOOL WebCore::setJSDOMURL_port(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v14;
  int v15;
  char v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v9 = v15;
  v10 = v15 == 0;
  if (!v15)
  {
    v11 = v14;
    v14 = 0;
    if (v11)
    {
      WebCore::URLDecomposition::setPort(v8, *(unsigned __int16 **)(v11 + 8), *(unsigned int *)(v11 + 4) | ((unint64_t)((*(_DWORD *)(v11 + 16) >> 2) & 1) << 32));
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
    else
    {
      WebCore::URLDecomposition::setPort(v8, 0, 0x100000000);
    }
    v9 = v15;
  }
  if (v9 != -1)
    ((void (*)(char *, uint64_t *))off_1E325A258[v9])(&v16, &v14);
  return v10;
}

uint64_t WebCore::jsDOMURL_pathname(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 16))(v15);
  WTF::URL::path((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_13;
  }
  if (v8 != 1)
    goto LABEL_9;
  v11 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v12 = *v11;
LABEL_22:
    v9 = *(_QWORD *)(v6 + 8 * v12 + 42216);
    goto LABEL_13;
  }
  v13 = *(unsigned __int16 *)v11;
  if (v13 <= 0xFF)
  {
    v12 = v13;
    goto LABEL_22;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_13:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSDOMURL_pathname(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  char v19;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v16);
  v9 = v17;
  v10 = v17 == 0;
  if (!v17)
  {
    v11 = v16;
    v16 = 0;
    if (v11)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(&v18, v8);
      if ((v19 & 4) == 0)
      {
        WTF::URL::setPath();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, &v18);
      }
      v13 = v18;
      v18 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v12);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (*(_DWORD *)v11 != 2)
      {
        *(_DWORD *)v11 -= 2;
LABEL_21:
        v9 = v17;
        goto LABEL_22;
      }
      v15 = v11;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(&v18, v8);
      if ((v19 & 4) == 0)
      {
        WTF::URL::setPath();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v8 + 24))(v8, &v18);
      }
      v15 = v18;
      v18 = 0;
      if (!v15)
        goto LABEL_21;
      if (*(_DWORD *)v15 != 2)
      {
        *(_DWORD *)v15 -= 2;
        goto LABEL_21;
      }
    }
    WTF::StringImpl::destroy(v15, v12);
    goto LABEL_21;
  }
LABEL_22:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v9])(&v18, &v16);
  return v10;
}

uint64_t WebCore::jsDOMURL_hash(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::hash(*(WebCore::URLDecomposition **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_8;
  }
  if (v5 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_15:
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
    goto LABEL_16;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_15;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_16:
  v11 = 0;
LABEL_8:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSDOMURL_hash(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v14;
  uint64_t v15;
  int v16;
  _QWORD v17[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = v15;
    v15 = 0;
    if (v11)
    {
      WebCore::URLDecomposition::setHash(v8, *(WTF::StringImpl **)(v11 + 8), *(unsigned int *)(v11 + 4) | ((unint64_t)((*(_DWORD *)(v11 + 16) >> 2) & 1) << 32));
      if (*(_DWORD *)v11 != 2)
      {
        *(_DWORD *)v11 -= 2;
LABEL_16:
        v9 = v16;
        goto LABEL_17;
      }
      v14 = (WTF::StringImpl *)v11;
    }
    else
    {
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v8 + 16))(v17, v8);
      WTF::URL::removeFragmentIdentifier((WTF::URL *)v17);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v8 + 24))(v8, v17);
      v14 = (WTF::StringImpl *)v17[0];
      v17[0] = 0;
      if (!v14)
        goto LABEL_16;
      if (*(_DWORD *)v14 != 2)
      {
        *(_DWORD *)v14 -= 2;
        goto LABEL_16;
      }
    }
    WTF::StringImpl::destroy(v14, v12);
    goto LABEL_16;
  }
LABEL_17:
  if (v9 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E325A258[v9])(v17, &v15);
  return v10;
}

uint64_t WebCore::jsDOMURL_search(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::search(*(WebCore::URLDecomposition **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_8;
  }
  if (v5 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_15:
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
    goto LABEL_16;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_15;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_16:
  v11 = 0;
LABEL_8:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSDOMURL_search(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::URLDecomposition *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v14;
  int v15;
  WTF::StringImpl *v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDOMURL::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDOMURL::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::URLDecomposition **)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v9 = v15;
  v10 = v15 == 0;
  if (!v15)
  {
    v11 = v14;
    v14 = 0;
    v16 = v11;
    WebCore::URLDecomposition::setSearch(v8, (const WTF::String *)&v16);
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
    v9 = v15;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v9])(&v16, &v14);
  return v10;
}

unint64_t WebCore::jsDOMURL_searchParams(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  WebCore::DOMURL *v6;
  uint64_t v7;
  WebCore::URLSearchParams *v8;
  WebCore::URLSearchParams *v9;
  WTF::StringImpl *v10;
  WebCore::URLSearchParams *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v15;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = *(JSC::VM **)(a1 + 56);
    v6 = *(WebCore::DOMURL **)(a2 + 24);
    v7 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
    v8 = (WebCore::URLSearchParams *)*((_QWORD *)v6 + 8);
    if (!v8)
    {
      WebCore::URLDecomposition::search(*(WebCore::URLDecomposition **)(a2 + 24), &v15);
      v9 = (WebCore::URLSearchParams *)WTF::fastMalloc((WTF *)0x20);
      WebCore::URLSearchParams::URLSearchParams(v9, (const WTF::String *)&v15, v6);
      v11 = (WebCore::URLSearchParams *)*((_QWORD *)v6 + 8);
      *((_QWORD *)v6 + 8) = v9;
      if (v11)
        WTF::RefCounted<WebCore::URLSearchParams>::deref(v11, v10);
      v12 = v15;
      v15 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v10);
        else
          *(_DWORD *)v12 -= 2;
      }
      v8 = (WebCore::URLSearchParams *)*((_QWORD *)v6 + 8);
    }
    v2 = WebCore::wrap<WebCore::URLSearchParams>(a1, v7, v8);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0
        && v2
        && *(_DWORD *)(v13 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v13 + 192), (const JSCell *)a2);
      }
    }
  }
  return v2;
}

uint64_t WebCore::JSDOMURLOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

unint64_t WebCore::toJSNewlyCreated(uint64_t a1, JSC::VM *a2)
{
  unint64_t result;

  if (**(void (****)(WebCore::DOMURL *__hidden))a2 == off_1E33B2120)
    return WebCore::createWrapper<WebCore::DOMURL,WebCore::DOMURL>(a1, a2);
  result = 866;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::DOMURL,WebCore::DOMURL>(uint64_t a1, JSC::VM *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v15;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;
  WebCore::JSDOMURL *v19;
  _QWORD *v20;
  unint64_t SlowCase;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *Allocator;
  int v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSDOMURL::s_info + ~((_QWORD)&WebCore::JSDOMURL::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMURL::s_info + ~((_QWORD)&WebCore::JSDOMURL::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSDOMURL::s_info)
    {
LABEL_3:
      v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v12)
        goto LABEL_5;
    }
    else
    {
      v28 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v28) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v28;
        if (v11 == &WebCore::JSDOMURL::s_info)
          goto LABEL_3;
      }
    }
  }
  v13 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSDOMURLPrototype::createStructure(v13, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v17 = (JSC::JSCell *)WebCore::JSDOMURLPrototype::create((WebCore::JSDOMURLPrototype *)v13, Structure, v15, v16);
  v18 = WebCore::JSDOMURL::createStructure(v13, a1, v17);
  v12 = WebCore::cacheDOMStructure((JSCell *)a1, v18, (uint64_t)&WebCore::JSDOMURL::s_info);
LABEL_5:
  v19 = *(WebCore::JSDOMURL **)(a1 + 56);
  v20 = (_QWORD *)WebCore::JSDOMURL::subspaceForImpl(v19, a2);
  SlowCase = v20[3];
  if (SlowCase < v20[4])
  {
LABEL_6:
    v20[3] = SlowCase + 48;
    goto LABEL_7;
  }
  SlowCase = v20[5];
  if ((SlowCase & 1) == 0)
  {
    v29 = *(_QWORD *)(SlowCase + 8) ^ v20[6];
    v20[4] = SlowCase + HIDWORD(v29);
    v20[5] = SlowCase + (int)v29;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v12);
  v22 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v22;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v19 + 755))
    __dmb(0xAu);
  v23 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE3351C8 & 1) == 0)
  {
    qword_1EE3351C0 = (uint64_t)&off_1E3259F28;
    byte_1EE3351C8 = 1;
  }
  v31 = v4;
  if ((SlowCase & 8) != 0)
    v24 = (SlowCase - 112) | 1;
  else
    v24 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v24 & 1) != 0)
    v25 = v24 + 47;
  else
    v25 = *(_QWORD *)v24 + 32;
  Allocator = *(_QWORD **)(v25 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v25 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3351C0;
  Allocator[2] = v23;
  v30 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), &v31, (uint64_t *)&v30);
  if (v30)
    v30[1] = 3;
  return SlowCase;
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::DOMURL *a4)
{
  return WebCore::wrap<WebCore::DOMURL>((uint64_t)a2, a3);
}

unint64_t WebCore::wrap<WebCore::DOMURL>(uint64_t a1, WebCore::DOMURL *a2)
{
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  WebCore::DOMURL *v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF *v14;
  void *v15;
  WebCore::DOMURL *v16;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 3320) + 32);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 - 8);
    v4 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v5 = 9 * ((v4 + ~(v4 << 13)) ^ ((v4 + ~(v4 << 13)) >> 8));
    v6 = (v5 ^ (v5 >> 15)) + ~((v5 ^ (v5 >> 15)) << 27);
    v7 = v3 & ((v6 >> 31) ^ v6);
    v8 = *(WebCore::DOMURL **)(v2 + 16 * v7);
    if (v8 == a2)
    {
LABEL_6:
      v10 = *(_QWORD *)(v2 + 16 * v7 + 8);
      if (v10)
      {
        if ((*(_BYTE *)(v10 + 8) & 3) == 0)
        {
          v11 = *(_QWORD *)v10;
          if (*(_QWORD *)v10)
            return v11;
        }
      }
    }
    else
    {
      v9 = 1;
      while (v8)
      {
        v7 = ((_DWORD)v7 + v9) & v3;
        v8 = *(WebCore::DOMURL **)(v2 + 16 * v7);
        ++v9;
        if (v8 == a2)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a2 + 2);
  v16 = a2;
  v11 = WebCore::toJSNewlyCreated(a1, (JSC::VM *)&v16);
  if (v16)
  {
    if (*((_DWORD *)v16 + 2) == 1)
    {
      WebCore::DOMURL::~DOMURL(v16, v12);
      WTF::fastFree(v14, v15);
    }
    else
    {
      --*((_DWORD *)v16 + 2);
    }
  }
  return v11;
}

uint64_t WebCore::JSDOMURL::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDOMURL::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDOMURL::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSDOMWindow::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSDOMWindow::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMWindow>::initializeProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  WTF::StringImpl *v12;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v12);
  v9 = v12;
  v12 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x30);
  if (!v10)
    v10 = *(_QWORD *)(a3 + 16);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 2160), v10, 14);
}

uint64_t WebCore::JSDOMWindowPrototype::finishCreation(WebCore::JSDOMWindowPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  JSC::Structure *v8;
  int v9;
  uint64_t result;
  WTF::StringImpl *v11[6];
  int v12;
  int v13;
  JSC::Structure *v14;
  int v15;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v6 = JSC::JSString::create((uint64_t)a2, v11);
  v7 = v11[0];
  v11[0] = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v5);
    else
      *(_DWORD *)v7 -= 2;
  }
  v8 = (JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE));
  v15 = *(_DWORD *)this;
  v14 = (JSC::Structure *)(16 * (v15 & 0xFFFFFFFE));
  v9 = JSC::Structure::outOfLineCapacity(v14);
  v12 = 0;
  v13 = v9;
  v11[0] = (WTF::StringImpl *)&v13;
  v11[1] = this;
  v11[2] = a2;
  v11[3] = (WTF::StringImpl *)&v15;
  v11[4] = (WTF::StringImpl *)&v14;
  v11[5] = (WTF::StringImpl *)&v12;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v8, a2, v4, 6, (uint64_t)v11);
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  result = JSC::JSObject::putDirectOffset((uint64_t)this, (uint64_t)a2, v12, v6);
  *((_DWORD *)v8 + 4) |= 0x10u;
  return result;
}

uint64_t WebCore::JSDOMWindow::visitChildren(uint64_t a1, uint64_t a2)
{
  WebCore::JSDOMGlobalObject::visitChildren(a1, a2);
  return WebCore::JSDOMWindow::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSDOMWindow::visitChildren(WebCore::JSDOMWindow *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    WebCore::JSDOMGlobalObject::visitChildren(this, a2, a3);
    result = WebCore::JSDOMWindow::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSDOMWindow::JSDOMWindow(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _DWORD *v6;
  _DWORD *v8;

  v6 = (_DWORD *)*a4;
  *a4 = 0;
  v8 = v6;
  WebCore::JSDOMWindowBase::JSDOMWindowBase(a1, a2, a3, (uint64_t *)&v8, a5);
  if (v8)
  {
    if (v8[6] == 1)
      (*(void (**)(void))(*(_QWORD *)v8 + 72))();
    else
      --v8[6];
  }
  return a1;
}

{
  _DWORD *v6;
  _DWORD *v8;

  v6 = (_DWORD *)*a4;
  *a4 = 0;
  v8 = v6;
  WebCore::JSDOMWindowBase::JSDOMWindowBase(a1, a2, a3, (uint64_t *)&v8, a5);
  if (v8)
  {
    if (v8[6] == 1)
      (*(void (**)(void))(*(_QWORD *)v8 + 72))();
    else
      --v8[6];
  }
  return a1;
}

uint64_t WebCore::JSDOMWindow::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 3408);
  ++*(_DWORD *)(v2 + 24);
  *a2 = v2;
  return this;
}

#error "1949AE36C: too big function (funcsize=0)"

unint64_t JSC::CustomGetterSetter::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t SlowCase;
  uint64_t v12;

  v3 = (_QWORD *)(a1 + 37936);
  v4 = *(_QWORD *)(a1 + 37936);
  if (v4 < *(_QWORD *)(a1 + 37944))
    goto LABEL_2;
  v4 = *(_QWORD *)(a1 + 37952);
  if ((v4 & 1) == 0)
  {
    v8 = *(_QWORD *)(v4 + 8) ^ *(_QWORD *)(a1 + 37960);
    *(_QWORD *)(a1 + 37944) = v4 + HIDWORD(v8);
    *(_QWORD *)(a1 + 37952) = v4 + (int)v8;
LABEL_2:
    *v3 = v4 + 32;
    goto LABEL_3;
  }
  v12 = a1;
  v9 = a3;
  v10 = a2;
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
  a2 = v10;
  a3 = v9;
  v4 = SlowCase;
  a1 = v12;
LABEL_3:
  *(_DWORD *)v4 = 0;
  v5 = v3[450];
  v6 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v4 = v5 >> 4;
  *(_DWORD *)(v4 + 4) = v6;
  *(_QWORD *)(v4 + 8) = a2;
  *(_QWORD *)(v4 + 16) = a3;
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  return v4;
}

uint64_t WebCore::jsDOMWindow_navigation(unint64_t a1, unint64_t a2)
{
  WTF::StringImpl **v2;
  uint64_t Object;
  WTF::StringImpl *v4;
  WTF::StringImpl **v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::VM *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  void *v15;
  unsigned int v16;
  WebCore::Navigation *v17;
  unint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v22;
  BOOL v23;
  char **v24;
  BOOL v25;
  bmalloc::api *v27;
  void *v28;
  _QWORD v29[2];
  int v30;
  JSC::VM *v31;
  unsigned __int8 v32[8];
  WTF::StringImpl *v33;

  v2 = (WTF::StringImpl **)a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v5 = (WTF::StringImpl **)Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v5 = *(WTF::StringImpl ***)(Object + 16);
    v22 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
    v23 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
    v24 = (char **)(16 * v22);
    if ((_DWORD)v22)
      v25 = v24 == &WebCore::JSDOMWindow::s_info;
    else
      v25 = 1;
    if (!v25)
    {
      do
      {
        v24 = (char **)v24[2];
        v23 = v24 != 0;
      }
      while (v24 != &WebCore::JSDOMWindow::s_info && v24 != 0);
    }
    if (v23)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v6 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMWindow::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMWindow::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v11 = v2[7];
  v31 = v11;
  if (v5 != v2
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, v5[426], 2))
  {
    return 10;
  }
  v12 = (uint64_t)v5[426];
  if (!v12 || *(_BYTE *)(v12 + 56))
  {
    LOBYTE(v29[0]) = 14;
    v29[1] = 0;
    v30 = 1;
    v32[0] = 14;
    v33 = 0;
    if (*((_QWORD *)v11 + 2))
    {
      v20 = 0;
    }
    else
    {
      WebCore::propagateExceptionSlowPath((JSC *)v2, &v31, v32);
      v20 = v33;
    }
    v33 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v4);
      else
        *(_DWORD *)v20 -= 2;
    }
    v18 = 0;
    v19 = 1;
  }
  else
  {
    v13 = *(_QWORD *)(v12 + 216);
    if (!v13)
    {
      v13 = bmalloc::api::isoAllocate();
      *(_DWORD *)(v13 + 24) = 1;
      *(_QWORD *)(v13 + 8) = 0;
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)v13 = &unk_1E33A4FC0;
      v14 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v12);
      if (v14)
      {
        do
          v16 = __ldaxr(v14);
        while (__stlxr(v16 + 1, v14));
      }
      *(_QWORD *)(v13 + 32) = v14;
      *(_QWORD *)v13 = off_1E33FFF20;
      *(_BYTE *)(v13 + 40) = 0;
      *(_BYTE *)(v13 + 48) = 0;
      *(_OWORD *)(v13 + 56) = 0u;
      *(_OWORD *)(v13 + 72) = 0u;
      *(_OWORD *)(v13 + 82) = 0u;
      *(_QWORD *)(v13 + 112) = 0;
      *(_QWORD *)(v13 + 120) = 0;
      *(_QWORD *)(v13 + 104) = 0;
      v17 = *(WebCore::Navigation **)(v12 + 216);
      *(_QWORD *)(v12 + 216) = v13;
      if (v17)
      {
        if (*((_DWORD *)v17 + 6) == 1)
        {
          WebCore::Navigation::~Navigation(v17, v15);
          bmalloc::api::isoDeallocate(v27, v28);
          v13 = *(_QWORD *)(v12 + 216);
        }
        else
        {
          --*((_DWORD *)v17 + 6);
        }
      }
    }
    v29[0] = v13;
    v30 = 0;
    v18 = WebCore::wrap<WebCore::Navigation>((int)v2, (JSC::VM *)v5, v13);
    v19 = 0;
  }
  ((void (*)(unsigned __int8 *, _QWORD *))off_1E3269658[v19])(v32, v29);
  return v18;
}

unint64_t WebCore::jsDOMWindow_BarcodeDetectorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBarcodeDetector>,(WebCore::DOMConstructorID)5>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FaceDetectorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFaceDetector>,(WebCore::DOMConstructorID)6>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_TextDetectorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDetector>,(WebCore::DOMConstructorID)7>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPU>,(WebCore::DOMConstructorID)8>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUAdapterConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUAdapter>,(WebCore::DOMConstructorID)9>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUAdapterInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUAdapterInfo>,(WebCore::DOMConstructorID)10>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUBindGroupConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBindGroup>,(WebCore::DOMConstructorID)11>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUBindGroupLayoutConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBindGroupLayout>,(WebCore::DOMConstructorID)12>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBuffer>,(WebCore::DOMConstructorID)13>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUBufferUsageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBufferUsage>,(WebCore::DOMConstructorID)14>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUColorWriteConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUColorWrite>,(WebCore::DOMConstructorID)15>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUCommandBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCommandBuffer>,(WebCore::DOMConstructorID)16>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUCommandEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCommandEncoder>,(WebCore::DOMConstructorID)17>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUCompilationInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCompilationInfo>,(WebCore::DOMConstructorID)18>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUCompilationMessageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCompilationMessage>,(WebCore::DOMConstructorID)19>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUComputePassEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUComputePassEncoder>,(WebCore::DOMConstructorID)20>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUComputePipelineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUComputePipeline>,(WebCore::DOMConstructorID)21>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUDeviceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUDevice>,(WebCore::DOMConstructorID)22>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUDeviceLostInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUDeviceLostInfo>,(WebCore::DOMConstructorID)23>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUExternalTextureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUExternalTexture>,(WebCore::DOMConstructorID)24>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUInternalErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUInternalError>,(WebCore::DOMConstructorID)25>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUMapModeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUMapMode>,(WebCore::DOMConstructorID)26>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUOutOfMemoryErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUOutOfMemoryError>,(WebCore::DOMConstructorID)27>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUPipelineErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUPipelineError>,(WebCore::DOMConstructorID)28>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUPipelineLayoutConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUPipelineLayout>,(WebCore::DOMConstructorID)29>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUQuerySetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUQuerySet>,(WebCore::DOMConstructorID)30>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUQueueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUQueue>,(WebCore::DOMConstructorID)31>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPURenderBundleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderBundle>,(WebCore::DOMConstructorID)32>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPURenderBundleEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderBundleEncoder>,(WebCore::DOMConstructorID)33>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPURenderPassEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderPassEncoder>,(WebCore::DOMConstructorID)34>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPURenderPipelineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderPipeline>,(WebCore::DOMConstructorID)35>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUSamplerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSampler>,(WebCore::DOMConstructorID)36>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUShaderModuleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUShaderModule>,(WebCore::DOMConstructorID)37>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUShaderStageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUShaderStage>,(WebCore::DOMConstructorID)38>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUSupportedFeaturesConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSupportedFeatures>,(WebCore::DOMConstructorID)39>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUSupportedLimitsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSupportedLimits>,(WebCore::DOMConstructorID)40>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUTextureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTexture>,(WebCore::DOMConstructorID)41>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUTextureUsageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTextureUsage>,(WebCore::DOMConstructorID)42>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUTextureViewConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTextureView>,(WebCore::DOMConstructorID)43>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUUncapturedErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUUncapturedErrorEvent>,(WebCore::DOMConstructorID)44>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUValidationErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUValidationError>,(WebCore::DOMConstructorID)45>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WGSLLanguageFeaturesConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWGSLLanguageFeatures>,(WebCore::DOMConstructorID)46>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ApplePaySessionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSApplePaySession>,(WebCore::DOMConstructorID)53>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ApplePaySetupConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSApplePaySetup>,(WebCore::DOMConstructorID)54>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ApplePaySetupFeatureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSApplePaySetupFeature>,(WebCore::DOMConstructorID)55>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ClipboardConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSClipboard>,(WebCore::DOMConstructorID)59>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ClipboardItemConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSClipboardItem>,(WebCore::DOMConstructorID)60>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioSessionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMAudioSession>,(WebCore::DOMConstructorID)61>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CacheConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCache>,(WebCore::DOMConstructorID)62>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CacheStorageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCacheStorage>,(WebCore::DOMConstructorID)63>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

uint64_t WebCore::jsDOMWindow_CompressionStreamConstructor(unint64_t a1, unint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  v2 = (WTF::StringImpl *)a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v14 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSDOMWindow::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSDOMWindow::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((WTF::StringImpl *)v4 != v2
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow(v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return 10;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 512);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 512) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

unint64_t WebCore::jsDOMWindow_CompressionStreamEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>,(WebCore::DOMConstructorID)65>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

uint64_t WebCore::jsDOMWindow_DecompressionStreamConstructor(unint64_t a1, unint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  v2 = (WTF::StringImpl *)a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v14 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSDOMWindow::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSDOMWindow::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((WTF::StringImpl *)v4 != v2
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow(v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return 10;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 528);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSDecompressionStream>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSDecompressionStream>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 528) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

unint64_t WebCore::jsDOMWindow_DecompressionStreamDecoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDecompressionStreamDecoder>,(WebCore::DOMConstructorID)67>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ContactsManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSContactsManager>,(WebCore::DOMConstructorID)68>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CookieChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCookieChangeEvent>,(WebCore::DOMConstructorID)69>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CookieStoreConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStore>,(WebCore::DOMConstructorID)70>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CookieStoreManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStoreManager>,(WebCore::DOMConstructorID)71>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CredentialConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBasicCredential>,(WebCore::DOMConstructorID)73>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CredentialsContainerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCredentialsContainer>,(WebCore::DOMConstructorID)74>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaKeyMessageEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaKeyMessageEvent>,(WebCore::DOMConstructorID)75>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaKeySessionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaKeySession>,(WebCore::DOMConstructorID)76>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaKeyStatusMapConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaKeyStatusMap>,(WebCore::DOMConstructorID)77>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaKeySystemAccessConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaKeySystemAccess>,(WebCore::DOMConstructorID)78>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaKeysConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaKeys>,(WebCore::DOMConstructorID)79>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebKitMediaKeyMessageEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebKitMediaKeyMessageEvent>,(WebCore::DOMConstructorID)80>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebKitMediaKeyNeededEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebKitMediaKeyNeededEvent>,(WebCore::DOMConstructorID)81>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebKitMediaKeySessionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebKitMediaKeySession>,(WebCore::DOMConstructorID)82>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebKitMediaKeysConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebKitMediaKeys>,(WebCore::DOMConstructorID)83>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMFileSystem>,(WebCore::DOMConstructorID)84>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemDirectoryEntryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemDirectoryEntry>,(WebCore::DOMConstructorID)85>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemDirectoryReaderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemDirectoryReader>,(WebCore::DOMConstructorID)86>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemEntryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemEntry>,(WebCore::DOMConstructorID)87>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemFileEntryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemFileEntry>,(WebCore::DOMConstructorID)88>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemDirectoryHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemDirectoryHandle>,(WebCore::DOMConstructorID)92>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemFileHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemFileHandle>,(WebCore::DOMConstructorID)93>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_FileSystemHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemHandle>,(WebCore::DOMConstructorID)94>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GamepadConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGamepad>,(WebCore::DOMConstructorID)96>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GamepadButtonConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGamepadButton>,(WebCore::DOMConstructorID)97>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GamepadEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGamepadEvent>,(WebCore::DOMConstructorID)98>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GamepadHapticActuatorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGamepadHapticActuator>,(WebCore::DOMConstructorID)99>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_HighlightConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHighlight>,(WebCore::DOMConstructorID)104>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_HighlightRegistryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHighlightRegistry>,(WebCore::DOMConstructorID)105>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_DigitalCredentialConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDigitalCredential>,(WebCore::DOMConstructorID)106>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IDBCursorWithValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBCursorWithValue>,(WebCore::DOMConstructorID)108>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IDBFactoryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBFactory>,(WebCore::DOMConstructorID)110>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IDBKeyRangeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBKeyRange>,(WebCore::DOMConstructorID)112>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IDBObjectStoreConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBObjectStore>,(WebCore::DOMConstructorID)113>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IDBVersionChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSIDBVersionChangeEvent>,(WebCore::DOMConstructorID)117>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaCapabilitiesConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaCapabilities>,(WebCore::DOMConstructorID)118>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_BlobEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBlobEvent>,(WebCore::DOMConstructorID)120>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaRecorderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaRecorder>,(WebCore::DOMConstructorID)121>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaRecorderErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaRecorderErrorEvent>,(WebCore::DOMConstructorID)122>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_BufferedChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBufferedChangeEvent>,(WebCore::DOMConstructorID)126>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ManagedMediaSourceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSManagedMediaSource>,(WebCore::DOMConstructorID)127>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ManagedSourceBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSManagedSourceBuffer>,(WebCore::DOMConstructorID)128>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaSourceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaSource>,(WebCore::DOMConstructorID)129>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaSourceHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaSourceHandle>,(WebCore::DOMConstructorID)130>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SourceBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSourceBuffer>,(WebCore::DOMConstructorID)131>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ImageCaptureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSImageCapture>,(WebCore::DOMConstructorID)135>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_InputDeviceInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSInputDeviceInfo>,(WebCore::DOMConstructorID)136>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaDevicesConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaDevices>,(WebCore::DOMConstructorID)138>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCCertificateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCCertificate>,(WebCore::DOMConstructorID)145>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCDTMFSenderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCDTMFSender>,(WebCore::DOMConstructorID)146>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCDTMFToneChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCDTMFToneChangeEvent>,(WebCore::DOMConstructorID)147>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCDataChannelConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCDataChannel>,(WebCore::DOMConstructorID)148>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCDataChannelEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCDataChannelEvent>,(WebCore::DOMConstructorID)149>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCDtlsTransportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCDtlsTransport>,(WebCore::DOMConstructorID)150>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCEncodedAudioFrameConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCEncodedAudioFrame>,(WebCore::DOMConstructorID)151>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCEncodedVideoFrameConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCEncodedVideoFrame>,(WebCore::DOMConstructorID)152>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCError>,(WebCore::DOMConstructorID)153>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCErrorEvent>,(WebCore::DOMConstructorID)154>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCIceCandidateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCIceCandidate>,(WebCore::DOMConstructorID)155>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCIceTransportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCIceTransport>,(WebCore::DOMConstructorID)156>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCPeerConnectionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCPeerConnection>,(WebCore::DOMConstructorID)157>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCPeerConnectionIceErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCPeerConnectionIceErrorEvent>,(WebCore::DOMConstructorID)158>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCPeerConnectionIceEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCPeerConnectionIceEvent>,(WebCore::DOMConstructorID)159>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCRtpReceiverConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCRtpReceiver>,(WebCore::DOMConstructorID)160>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SFrameTransformConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCRtpSFrameTransform>,(WebCore::DOMConstructorID)161>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SFrameTransformErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCRtpSFrameTransformErrorEvent>,(WebCore::DOMConstructorID)162>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCRtpScriptTransformConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCRtpScriptTransform>,(WebCore::DOMConstructorID)163>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCRtpSenderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCRtpSender>,(WebCore::DOMConstructorID)165>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCRtpTransceiverConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCRtpTransceiver>,(WebCore::DOMConstructorID)166>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCSctpTransportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCSctpTransport>,(WebCore::DOMConstructorID)167>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCSessionDescriptionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCSessionDescription>,(WebCore::DOMConstructorID)168>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCStatsReportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCStatsReport>,(WebCore::DOMConstructorID)169>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RTCTrackEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCTrackEvent>,(WebCore::DOMConstructorID)170>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_HTMLModelElementConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModelElement>,(WebCore::DOMConstructorID)173>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_NotificationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNotification>,(WebCore::DOMConstructorID)174>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MerchantValidationEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMerchantValidationEvent>,(WebCore::DOMConstructorID)176>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PaymentAddressConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentAddress>,(WebCore::DOMConstructorID)177>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PaymentMethodChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentMethodChangeEvent>,(WebCore::DOMConstructorID)178>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PaymentRequestConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequest>,(WebCore::DOMConstructorID)179>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PaymentRequestUpdateEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequestUpdateEvent>,(WebCore::DOMConstructorID)180>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PaymentResponseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentResponse>,(WebCore::DOMConstructorID)181>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PermissionStatusConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissionStatus>,(WebCore::DOMConstructorID)182>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PermissionsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissions>,(WebCore::DOMConstructorID)183>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PictureInPictureEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPictureInPictureEvent>,(WebCore::DOMConstructorID)184>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PictureInPictureWindowConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPictureInPictureWindow>,(WebCore::DOMConstructorID)185>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PushManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushManager>,(WebCore::DOMConstructorID)187>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PushSubscriptionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushSubscription>,(WebCore::DOMConstructorID)190>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PushSubscriptionOptionsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushSubscriptionOptions>,(WebCore::DOMConstructorID)192>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_RemotePlaybackConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRemotePlayback>,(WebCore::DOMConstructorID)193>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_DeprecationReportBodyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecationReportBody>,(WebCore::DOMConstructorID)194>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ReportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReport>,(WebCore::DOMConstructorID)195>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ReportBodyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReportBody>,(WebCore::DOMConstructorID)196>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ReportingObserverConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSReportingObserver>,(WebCore::DOMConstructorID)197>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WakeLockConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWakeLock>,(WebCore::DOMConstructorID)199>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WakeLockSentinelConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWakeLockSentinel>,(WebCore::DOMConstructorID)200>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_webkitSpeechRecognitionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSpeechRecognition>,(WebCore::DOMConstructorID)201>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechRecognitionAlternativeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSpeechRecognitionAlternative>,(WebCore::DOMConstructorID)202>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechRecognitionErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSpeechRecognitionErrorEvent>,(WebCore::DOMConstructorID)203>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechRecognitionEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSpeechRecognitionEvent>,(WebCore::DOMConstructorID)204>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechRecognitionResultConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSpeechRecognitionResult>,(WebCore::DOMConstructorID)205>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechRecognitionResultListConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSpeechRecognitionResultList>,(WebCore::DOMConstructorID)206>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechSynthesisConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSpeechSynthesis>,(WebCore::DOMConstructorID)207>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechSynthesisErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSpeechSynthesisErrorEvent>,(WebCore::DOMConstructorID)208>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechSynthesisEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSpeechSynthesisEvent>,(WebCore::DOMConstructorID)209>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechSynthesisUtteranceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSpeechSynthesisUtterance>,(WebCore::DOMConstructorID)210>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SpeechSynthesisVoiceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSpeechSynthesisVoice>,(WebCore::DOMConstructorID)211>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_StorageManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStorageManager>,(WebCore::DOMConstructorID)212>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_LockConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebLock>,(WebCore::DOMConstructorID)229>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_LockManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebLockManager>,(WebCore::DOMConstructorID)230>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AnalyserNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAnalyserNode>,(WebCore::DOMConstructorID)231>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAudioBuffer>,(WebCore::DOMConstructorID)232>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioBufferSourceNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAudioBufferSourceNode>,(WebCore::DOMConstructorID)233>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAudioContext>,(WebCore::DOMConstructorID)234>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioDestinationNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioDestinationNode>,(WebCore::DOMConstructorID)235>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioListenerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioListener>,(WebCore::DOMConstructorID)236>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioNode>,(WebCore::DOMConstructorID)237>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioParamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioParam>,(WebCore::DOMConstructorID)238>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioParamMapConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioParamMap>,(WebCore::DOMConstructorID)239>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioProcessingEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAudioProcessingEvent>,(WebCore::DOMConstructorID)240>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioScheduledSourceNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioScheduledSourceNode>,(WebCore::DOMConstructorID)241>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioWorkletConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioWorklet>,(WebCore::DOMConstructorID)242>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioWorkletNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAudioWorkletNode>,(WebCore::DOMConstructorID)244>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_BaseAudioContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBaseAudioContext>,(WebCore::DOMConstructorID)246>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_BiquadFilterNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBiquadFilterNode>,(WebCore::DOMConstructorID)247>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ChannelMergerNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSChannelMergerNode>,(WebCore::DOMConstructorID)248>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ChannelSplitterNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSChannelSplitterNode>,(WebCore::DOMConstructorID)249>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ConstantSourceNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSConstantSourceNode>,(WebCore::DOMConstructorID)250>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ConvolverNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSConvolverNode>,(WebCore::DOMConstructorID)251>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_DelayNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDelayNode>,(WebCore::DOMConstructorID)252>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_DynamicsCompressorNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDynamicsCompressorNode>,(WebCore::DOMConstructorID)253>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GainNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGainNode>,(WebCore::DOMConstructorID)254>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IIRFilterNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSIIRFilterNode>,(WebCore::DOMConstructorID)255>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaElementAudioSourceNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaElementAudioSourceNode>,(WebCore::DOMConstructorID)256>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaStreamAudioDestinationNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaStreamAudioDestinationNode>,(WebCore::DOMConstructorID)257>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaStreamAudioSourceNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaStreamAudioSourceNode>,(WebCore::DOMConstructorID)258>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_OfflineAudioCompletionEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOfflineAudioCompletionEvent>,(WebCore::DOMConstructorID)259>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_OfflineAudioContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOfflineAudioContext>,(WebCore::DOMConstructorID)260>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_OscillatorNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOscillatorNode>,(WebCore::DOMConstructorID)261>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PannerNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPannerNode>,(WebCore::DOMConstructorID)262>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PeriodicWaveConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPeriodicWave>,(WebCore::DOMConstructorID)263>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_StereoPannerNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSStereoPannerNode>,(WebCore::DOMConstructorID)265>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WaveShaperNodeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWaveShaperNode>,(WebCore::DOMConstructorID)266>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AuthenticatorAssertionResponseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAuthenticatorAssertionResponse>,(WebCore::DOMConstructorID)267>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AuthenticatorAttestationResponseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAuthenticatorAttestationResponse>,(WebCore::DOMConstructorID)268>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AuthenticatorResponseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAuthenticatorResponse>,(WebCore::DOMConstructorID)269>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PublicKeyCredentialConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPublicKeyCredential>,(WebCore::DOMConstructorID)270>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioDataConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsAudioData>,(WebCore::DOMConstructorID)272>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioDecoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsAudioDecoder>,(WebCore::DOMConstructorID)273>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_AudioEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsAudioEncoder>,(WebCore::DOMConstructorID)274>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_EncodedAudioChunkConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsEncodedAudioChunk>,(WebCore::DOMConstructorID)275>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_EncodedVideoChunkConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsEncodedVideoChunk>,(WebCore::DOMConstructorID)276>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_VideoDecoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsVideoDecoder>,(WebCore::DOMConstructorID)277>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_VideoEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsVideoEncoder>,(WebCore::DOMConstructorID)278>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_VideoFrameConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebCodecsVideoFrame>,(WebCore::DOMConstructorID)279>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_DatabaseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDatabase>,(WebCore::DOMConstructorID)280>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SQLErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSQLError>,(WebCore::DOMConstructorID)281>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SQLResultSetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSQLResultSet>,(WebCore::DOMConstructorID)282>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SQLResultSetRowListConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSQLResultSetRowList>,(WebCore::DOMConstructorID)283>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebTransportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransport>,(WebCore::DOMConstructorID)287>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebTransportBidirectionalStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportBidirectionalStream>,(WebCore::DOMConstructorID)288>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebTransportDatagramDuplexStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportDatagramDuplexStream>,(WebCore::DOMConstructorID)289>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebTransportErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransportError>,(WebCore::DOMConstructorID)290>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebTransportReceiveStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportReceiveStream>,(WebCore::DOMConstructorID)291>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebTransportSendStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportSendStream>,(WebCore::DOMConstructorID)292>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CustomEffectConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCustomEffect>,(WebCore::DOMConstructorID)323>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ScrollTimelineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSScrollTimeline>,(WebCore::DOMConstructorID)326>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ViewTimelineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSViewTimeline>,(WebCore::DOMConstructorID)327>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CryptoKeyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCryptoKey>,(WebCore::DOMConstructorID)329>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_SubtleCryptoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSubtleCrypto>,(WebCore::DOMConstructorID)330>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSCounterStyleRuleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSCounterStyleRule>,(WebCore::DOMConstructorID)333>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSScopeRuleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSScopeRule>,(WebCore::DOMConstructorID)350>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSStartingStyleRuleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStartingStyleRule>,(WebCore::DOMConstructorID)351>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSColorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSColorValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSHSLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSHWBConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSLCHConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSLabConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSOKLCHConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSOKLabConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CSSRGBConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_BroadcastChannelConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>,(WebCore::DOMConstructorID)416>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ContentVisibilityAutoStateChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_12;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_12:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSContentVisibilityAutoStateChangeEvent>,(WebCore::DOMConstructorID)422>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_CustomStateSetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomStateSet>,(WebCore::DOMConstructorID)425>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_DataTransferItemConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDataTransferItem>,(WebCore::DOMConstructorID)437>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_IdleDeadlineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIdleDeadline>,(WebCore::DOMConstructorID)454>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_InvokeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSInvokeEvent>,(WebCore::DOMConstructorID)456>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_PointerEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPointerEvent>,(WebCore::DOMConstructorID)472>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_TrustedHTMLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedHTML>,(WebCore::DOMConstructorID)491>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_TrustedScriptConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedScript>,(WebCore::DOMConstructorID)492>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_TrustedScriptURLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedScriptURL>,(WebCore::DOMConstructorID)493>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_TrustedTypePolicyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedTypePolicy>,(WebCore::DOMConstructorID)494>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_TrustedTypePolicyFactoryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedTypePolicyFactory>,(WebCore::DOMConstructorID)495>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_ViewTransitionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSViewTransition>,(WebCore::DOMConstructorID)497>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_HTMLAttachmentElementConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAttachmentElement>,(WebCore::DOMConstructorID)511>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_HTMLDataListElementConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataListElement>,(WebCore::DOMConstructorID)522>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_HTMLEmbedElementConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLEmbedElement>,(WebCore::DOMConstructorID)529>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_MediaEncryptedEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMediaEncryptedEvent>,(WebCore::DOMConstructorID)591>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

uint64_t WebCore::jsDOMWindow_OffscreenCanvasConstructor(unint64_t a1, unint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  JSC::JSCell *v11;
  uint64_t Structure;
  uint64_t v15;
  BOOL v16;
  char **v17;
  BOOL v18;

  v2 = (WTF::StringImpl *)a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v15 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v16 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v17 = (char **)(16 * v15);
    if ((_DWORD)v15)
      v18 = v17 == &WebCore::JSDOMWindow::s_info;
    else
      v18 = 1;
    if (!v18)
    {
      do
      {
        v17 = (char **)v17[2];
        v16 = v17 != 0;
      }
      while (v17 != &WebCore::JSDOMWindow::s_info && v17 != 0);
    }
    if (v16)
      goto LABEL_12;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_12:
  if ((WTF::StringImpl *)v4 != v2
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow(v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return 10;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 4744);
  if (!v9)
  {
    v10 = *((_QWORD *)v2 + 7);
    v11 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(v10, v4);
    Structure = WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::createStructure((uint64_t *)v10, v4, v11);
    v9 = WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::create(v10, Structure, (JSC::VM *)v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 4744) = v9;
    if (v9)
    {
      if (*(_DWORD *)(v10 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v10 + 192), (const JSCell *)v4);
    }
  }
  return v9;
}

unint64_t WebCore::jsDOMWindow_WebKitMediaKeyErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebKitMediaKeyError>,(WebCore::DOMConstructorID)601>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_GPUCanvasContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCanvasContext>,(WebCore::DOMConstructorID)625>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_OffscreenCanvasRenderingContext2DConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSOffscreenCanvasRenderingContext2D>,(WebCore::DOMConstructorID)640>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGL2RenderingContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGL2RenderingContext>,(WebCore::DOMConstructorID)643>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLActiveInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLActiveInfo>,(WebCore::DOMConstructorID)644>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLBuffer>,(WebCore::DOMConstructorID)646>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLContextEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebGLContextEvent>,(WebCore::DOMConstructorID)655>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLFramebufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLFramebuffer>,(WebCore::DOMConstructorID)661>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLProgramConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLProgram>,(WebCore::DOMConstructorID)666>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLQueryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLQuery>,(WebCore::DOMConstructorID)668>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLRenderbufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLRenderbuffer>,(WebCore::DOMConstructorID)670>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLRenderingContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLRenderingContext>,(WebCore::DOMConstructorID)671>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLSamplerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLSampler>,(WebCore::DOMConstructorID)672>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindow_WebGLShaderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (uint64_t *)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSDOMWindow::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSDOMWindow::s_info && v13 != 0);
    }
    if (v12)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMWindow::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMWindow::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  if ((uint64_t *)v4 == v2
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)v2, *(WTF::StringImpl **)(v4 + 3408), 2))
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLShader>,(WebCore::DOMConstructorID)673>(v2[7], v4);
  }
  else
  {
    return 10;
  }
}

