uint64_t sub_23A960F14(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, float *a14, _DWORD *a15, _DWORD *a16, float *a17, float *a18, float *a19, _DWORD *a20,_DWORD *a21)
{
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  int v33;
  int v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  int v43;
  uint64_t result;
  int v45;
  int v46;
  int v47;
  int v48;

  vfx_script_clock_delta_time();
  if (fabsf(a2) > 0.00000011921)
    v29 = 1.0 / a2;
  else
    v29 = 0.0;
  v30 = v29 * v28;
  v31 = -(float)(v29 * v28);
  if (a7)
    v31 = v30;
  v32 = fminf(fmaxf(v31 + a1, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v48 = v33;
  vfx_script_texture_sample1d();
  v47 = v34;
  vfx_script_clock_delta_time();
  v36 = v29 * v35;
  v37 = -(float)(v29 * v35);
  if (a10)
    v37 = v36;
  v38 = fminf(fmaxf(v37 + a3, 0.0), 1.0);
  if (v38 >= 0.5)
    v39 = (float)((float)((float)(v38 * -2.0) + 4.0) * v38) + -1.0;
  else
    v39 = (float)(v38 * v38) + (float)(v38 * v38);
  vfx_script_clock_delta_time();
  v41 = v40 + v40;
  if (a11)
    v41 = -v41;
  v42 = fminf(fmaxf(v41 + a4, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v46 = v43;
  result = vfx_script_texture_sample1d();
  *a14 = v32;
  *a15 = v48;
  *a16 = v47;
  *a17 = v39;
  *a18 = v38;
  *a19 = v42;
  *a20 = v46;
  *a21 = v45;
  return result;
}

uint64_t sub_23A961108()
{
  uint64_t arguments_buffer;
  float *v1;
  _DWORD *v2;
  float v3;
  float v4;
  int v5;
  int v6;
  float v7;
  float v8;
  int v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  int v15;
  int v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  int v25;
  uint64_t result;
  int v27;
  int v28;
  int v29;
  int v30;
  float *v31;
  float *v32;
  float *v33;
  _DWORD *v34;
  _DWORD *v35;
  _DWORD *v36;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 104);
  v2 = *(_DWORD **)(arguments_buffer + 112);
  v34 = *(_DWORD **)(arguments_buffer + 120);
  v33 = *(float **)(arguments_buffer + 128);
  v32 = *(float **)(arguments_buffer + 136);
  v31 = *(float **)(arguments_buffer + 144);
  v35 = *(_DWORD **)(arguments_buffer + 152);
  v36 = *(_DWORD **)(arguments_buffer + 160);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(unsigned __int8 **)(arguments_buffer + 32);
  v6 = **(unsigned __int8 **)(arguments_buffer + 56);
  v7 = **(float **)(arguments_buffer + 64);
  v8 = **(float **)(arguments_buffer + 72);
  v9 = **(unsigned __int8 **)(arguments_buffer + 80);
  vfx_script_clock_delta_time();
  if (fabsf(v4) > 0.00000011921)
    v11 = 1.0 / v4;
  else
    v11 = 0.0;
  v12 = v11 * v10;
  v13 = -(float)(v11 * v10);
  if (v5)
    v13 = v12;
  v14 = fminf(fmaxf(v3 + v13, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v30 = v15;
  vfx_script_texture_sample1d();
  v29 = v16;
  vfx_script_clock_delta_time();
  v18 = v11 * v17;
  v19 = -(float)(v11 * v17);
  if (v6)
    v19 = v18;
  v20 = fminf(fmaxf(v7 + v19, 0.0), 1.0);
  if (v20 >= 0.5)
    v21 = (float)((float)((float)(v20 * -2.0) + 4.0) * v20) + -1.0;
  else
    v21 = (float)(v20 * v20) + (float)(v20 * v20);
  vfx_script_clock_delta_time();
  v23 = v22 + v22;
  if (v9)
    v23 = -v23;
  v24 = fminf(fmaxf(v8 + v23, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v28 = v25;
  result = vfx_script_texture_sample1d();
  *v1 = v14;
  *v2 = v30;
  *v34 = v29;
  *v33 = v21;
  *v32 = v20;
  *v31 = v24;
  *v35 = v28;
  *v36 = v27;
  return result;
}

void sub_23A961300(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t sub_23A961308()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

double sub_23A961328(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, int a7, _QWORD *a8, float32x2_t *a9, float32x2_t *a10, float *a11, float *a12)
{
  float v22;
  __float2 v23;
  float v24;
  float32x2_t v25;
  float32x2_t v26;
  float v27;
  double result;
  float v29;
  float cosval;
  unsigned int v31;

  v22 = (float)(a1 * 3.1416) / 180.0;
  v23 = __sincosf_stret(v22);
  cosval = v23.__cosval;
  v31 = *(_QWORD *)&v23;
  v24 = (float)(a2 * 3.1416) / 180.0;
  v29 = (float)(a3 + 0.06) + (float)((float)(a3 - (float)(a3 + 0.06)) * a4);
  v25 = vmul_n_f32((float32x2_t)__sincosf_stret(v22 + v24), v29);
  v26 = vmul_n_f32((float32x2_t)__sincosf_stret(v22 - v24), v29);
  v27 = 180.5;
  if (!a7)
    v27 = a2;
  *a9 = v25;
  *a10 = v26;
  *a11 = (float)(a1 * -3.1416) / 180.0;
  *a12 = v27;
  result = COERCE_DOUBLE(__PAIR64__(LODWORD(cosval), v31));
  *a8 = __PAIR64__(LODWORD(cosval), v31);
  return result;
}

double sub_23A961448()
{
  uint64_t arguments_buffer;
  _QWORD *v1;
  float32x2_t *v2;
  float32x2_t *v3;
  float *v4;
  float *v5;
  float v6;
  float v7;
  float v8;
  float v9;
  int v10;
  float v11;
  __float2 v12;
  float v13;
  float32x2_t v14;
  float32x2_t v15;
  float v16;
  double result;
  float v18;
  float cosval;
  unsigned int v20;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(arguments_buffer + 56);
  v2 = *(float32x2_t **)(arguments_buffer + 64);
  v3 = *(float32x2_t **)(arguments_buffer + 72);
  v4 = *(float **)(arguments_buffer + 80);
  v5 = *(float **)(arguments_buffer + 88);
  v6 = **(float **)(arguments_buffer + 16);
  v7 = **(float **)(arguments_buffer + 24);
  v8 = **(float **)(arguments_buffer + 32);
  v9 = **(float **)(arguments_buffer + 40);
  v10 = **(unsigned __int8 **)(arguments_buffer + 48);
  v11 = (float)(v6 * 3.1416) / 180.0;
  v12 = __sincosf_stret(v11);
  cosval = v12.__cosval;
  v20 = *(_QWORD *)&v12;
  v13 = (float)(v7 * 3.1416) / 180.0;
  v18 = (float)(v8 + 0.06) + (float)((float)(v8 - (float)(v8 + 0.06)) * v9);
  v14 = vmul_n_f32((float32x2_t)__sincosf_stret(v11 + v13), v18);
  v15 = vmul_n_f32((float32x2_t)__sincosf_stret(v11 - v13), v18);
  v16 = 180.5;
  if (!v10)
    v16 = v7;
  *v2 = v14;
  *v3 = v15;
  *v4 = (float)(v6 * -3.1416) / 180.0;
  *v5 = v16;
  result = COERCE_DOUBLE(__PAIR64__(LODWORD(cosval), v20));
  *v1 = __PAIR64__(LODWORD(cosval), v20);
  return result;
}

char **__vfx_get_script_table_WatchParticlesREDSTRIPE()
{
  return &off_2569D4A60;
}

void type metadata accessor for VTPixelTransferSession(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4EF0);
}

void type metadata accessor for CVPixelBufferPool(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4EF8);
}

void type metadata accessor for ThermalState(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F00);
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F08);
}

void type metadata accessor for PlaySoundContext(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F10);
}

__n128 sub_23A9615DC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMPFSKSceneStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMPFSKSceneStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F18);
}

__n128 initializeBufferWithCopyOfBuffer for FMR1InsetLabelStyle(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMR1InsetLabelStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMR1InsetLabelStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F20);
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F28);
}

void type metadata accessor for PRBTLocalizerState(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F30);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F38);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F40);
}

void sub_23A96170C()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  CGRect v5;

  objc_msgSend(v0, sel_nativeBounds);
  CGRectGetHeight(v5);
  if (qword_2569D4AB0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0010);
  v2 = sub_23AA32E88();
  v3 = sub_23AA33218();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v2, v3, "ðŸ§­ FMPFVideoScaling screen height: %f", v4, 0xCu);
    MEMORY[0x23B85DB24](v4, -1, -1);
  }

}

uint64_t sub_23A9618DC(uint64_t a1, uint64_t a2)
{
  return sub_23A962100(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23A9618FC()
{
  return sub_23AA331AC();
}

uint64_t sub_23A961904(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x23B85CD50](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_23A961954(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_23AA331C4();
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_23A9619A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23AA331D0();
  *a1 = result;
  return result;
}

BOOL sub_23A9619CC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_23A9619E0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23A9619EC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23AA32FC0();
  *a2 = 0;
  return result;
}

uint64_t sub_23A961A60(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23AA32FCC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23A961ADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23AA32FD8();
  v2 = sub_23AA32FB4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_23A961B1C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23A961B24@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_23A961B34(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23A961B68@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23A961B7C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_23A961B90(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23A961BA4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_23A961BB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23A961BC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23AA32FD8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A961BF0()
{
  sub_23A961DE4(&qword_2569D50E8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_23AA35800);
  sub_23A961DE4((unint64_t *)&unk_2569D50F0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_23AA357A0);
  return sub_23AA335FC();
}

uint64_t sub_23A961C74()
{
  sub_23A961DE4((unint64_t *)&qword_2569D50D8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_23AA35F24);
  sub_23A961DE4(&qword_2569D50E0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_23AA35940);
  return sub_23AA335FC();
}

uint64_t sub_23A961CF8()
{
  sub_23A961DE4(&qword_2569D4F60, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_23AA35408);
  sub_23A961DE4(&qword_2569D4F68, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_23AA353A8);
  return sub_23AA335FC();
}

uint64_t sub_23A961D8C()
{
  return sub_23A961DE4(&qword_2569D4F48, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_23AA3536C);
}

uint64_t sub_23A961DB8()
{
  return sub_23A961DE4(&qword_2569D4F50, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_23AA35340);
}

uint64_t sub_23A961DE4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B85DA58](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A961E24()
{
  return sub_23A961DE4(&qword_2569D4F58, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_23AA353DC);
}

uint64_t sub_23A961E50()
{
  sub_23A961DE4(&qword_2569D5098, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23AA35EE4);
  sub_23A961DE4(&qword_2569D50A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23AA35E44);
  return sub_23AA335FC();
}

uint64_t sub_23A961ED4()
{
  sub_23A961DE4(&qword_2569D50C8, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticEngineOptionKey, (uint64_t)&unk_23AA35ADC);
  sub_23A961DE4(&qword_2569D50D0, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticEngineOptionKey, (uint64_t)&unk_23AA35A84);
  return sub_23AA335FC();
}

uint64_t sub_23A961F58()
{
  sub_23A961DE4(&qword_2569D50B8, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticPowerUsage, (uint64_t)&unk_23AA35C1C);
  sub_23A961DE4(&qword_2569D50C0, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticPowerUsage, (uint64_t)&unk_23AA35BC4);
  return sub_23AA335FC();
}

uint64_t sub_23A961FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23AA32FB4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23A962020()
{
  sub_23A961DE4(&qword_2569D50A8, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticUsageCategory, (uint64_t)&unk_23AA35D5C);
  sub_23A961DE4(&qword_2569D50B0, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticUsageCategory, (uint64_t)&unk_23AA35D04);
  return sub_23AA335FC();
}

uint64_t sub_23A9620A4(uint64_t a1, uint64_t a2)
{
  return sub_23A962100(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23A9620B0()
{
  return sub_23AA331DC();
}

uint64_t sub_23A9620B8()
{
  return sub_23AA337DC();
}

uint64_t sub_23A9620E0()
{
  return sub_23AA337C4();
}

uint64_t sub_23A9620E8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23A962100(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23AA32FD8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23A96213C()
{
  sub_23AA32FD8();
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A96217C()
{
  uint64_t v0;

  sub_23AA32FD8();
  sub_23AA337D0();
  sub_23AA33014();
  v0 = sub_23AA33800();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23A9621EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23AA32FD8();
  v2 = v1;
  if (v0 == sub_23AA32FD8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void type metadata accessor for PRBTProximityLevel(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F70);
}

void type metadata accessor for NIMotionActivityState(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F78);
}

void type metadata accessor for RemovalReason(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F80);
}

void type metadata accessor for NISessionSuspensionReason(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F88);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F90);
}

void type metadata accessor for CHHapticUsageCategory(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4F98);
}

void type metadata accessor for CHHapticPowerUsage(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FA0);
}

void type metadata accessor for CHHapticEngineOptionKey(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FA8);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FB0);
}

void type metadata accessor for Status(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FB8);
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FC0);
}

void type metadata accessor for SymbolicTraits(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FC8);
}

void type metadata accessor for SKLabelHorizontalAlignmentMode(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FD0);
}

__n128 initializeWithCopy for FLSpringParameters(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FD8);
}

void type metadata accessor for UIVibrancyEffectStyle(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FE0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FE8);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FF0);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D4FF8);
}

uint64_t initializeBufferWithCopyOfBuffer for FMBTDistanceViewStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for FLSpringParameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FLSpringParameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_23A962478(a1, &qword_2569D5000);
}

void sub_23A962478(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23A9624BC()
{
  return sub_23A961DE4(&qword_2569D5008, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_23AA35764);
}

uint64_t sub_23A9624E8()
{
  return sub_23A961DE4(&qword_2569D5010, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_23AA35738);
}

uint64_t sub_23A962514()
{
  return sub_23A961DE4(&qword_2569D5018, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_23AA357D4);
}

uint64_t sub_23A962540()
{
  return sub_23A961DE4(&qword_2569D5020, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_23AA35904);
}

uint64_t sub_23A96256C()
{
  return sub_23A961DE4(&qword_2569D5028, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_23AA358D8);
}

uint64_t sub_23A962598()
{
  return sub_23A961DE4(&qword_2569D5030, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticEngineOptionKey, (uint64_t)&unk_23AA35A4C);
}

uint64_t sub_23A9625C4()
{
  return sub_23A961DE4(&qword_2569D5038, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticEngineOptionKey, (uint64_t)&unk_23AA35A24);
}

uint64_t sub_23A9625F0()
{
  return sub_23A961DE4(&qword_2569D5040, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticEngineOptionKey, (uint64_t)&unk_23AA35AB4);
}

uint64_t sub_23A96261C()
{
  return sub_23A961DE4(&qword_2569D5048, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticPowerUsage, (uint64_t)&unk_23AA35B8C);
}

uint64_t sub_23A962648()
{
  return sub_23A961DE4(&qword_2569D5050, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticPowerUsage, (uint64_t)&unk_23AA35B64);
}

uint64_t sub_23A962674()
{
  return sub_23A961DE4(&qword_2569D5058, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticPowerUsage, (uint64_t)&unk_23AA35BF4);
}

uint64_t sub_23A9626A0()
{
  return sub_23A961DE4(&qword_2569D5060, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticUsageCategory, (uint64_t)&unk_23AA35CCC);
}

uint64_t sub_23A9626CC()
{
  return sub_23A961DE4(&qword_2569D5068, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticUsageCategory, (uint64_t)&unk_23AA35CA4);
}

uint64_t sub_23A9626F8()
{
  return sub_23A961DE4(&qword_2569D5070, (uint64_t (*)(uint64_t))type metadata accessor for CHHapticUsageCategory, (uint64_t)&unk_23AA35D34);
}

uint64_t sub_23A962724()
{
  return sub_23A961DE4(&qword_2569D5078, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23AA35E0C);
}

uint64_t sub_23A962750()
{
  return sub_23A961DE4(&qword_2569D5080, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23AA35DE4);
}

uint64_t sub_23A96277C()
{
  return sub_23A961DE4(&qword_2569D5088, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23AA35E74);
}

uint64_t sub_23A9627A8()
{
  return sub_23A961DE4(&qword_2569D5090, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_23AA35974);
}

void sub_23A962804()
{
  void *v0;
  double v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self();
  v1 = *MEMORY[0x24BEBB608];
  v2 = (void *)sub_23AA32FB4();
  v3 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v2, 68.0, v1);

  if (v3)
  {
    v4 = (void *)sub_23AA32FB4();
    v5 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v4, 20.0, v1);

    if (v5)
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      qword_2569DFFB0 = (uint64_t)v3;
      *(_QWORD *)algn_2569DFFB8 = v5;
      qword_2569DFFC0 = (uint64_t)v6;
      unk_2569DFFC8 = xmmword_23AA35F70;
      qword_2569DFFD8 = 0x3FE0000000000000;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_23A962934()
{
  char *v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;

  v1 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel;
  type metadata accessor for FMR1InsetLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v3 = objc_allocWithZone(ObjCClassFromMetadata);
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowVerticalStackView;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v6 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView;
  *(_QWORD *)&v4[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v7 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel;
  *(_QWORD *)&v4[v7] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v8 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer;
  *(_QWORD *)&v4[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v9 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityView;
  *(_QWORD *)&v4[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD398]), sel_initWithActivityIndicatorStyle_, 100);
  v10 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style;
  if (qword_2569D4AA0 != -1)
    swift_once();
  v11 = &v4[v10];
  v12 = (void *)qword_2569DFFB0;
  v13 = *(void **)algn_2569DFFB8;
  v14 = (void *)qword_2569DFFC0;
  v15 = qword_2569DFFD8;
  v16 = unk_2569DFFC8;
  *(_QWORD *)v11 = qword_2569DFFB0;
  *((_QWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 2) = v14;
  *(_OWORD *)(v11 + 24) = v16;
  *((_QWORD *)v11 + 5) = v15;
  v17 = v12;
  v18 = v13;
  v19 = v14;

  v22.receiver = v4;
  v22.super_class = (Class)type metadata accessor for FMBTDistanceView();
  v20 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23A962B2C();

  return v20;
}

void sub_23A962B2C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  double *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v0, sel_setAxis_, 1);
  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel];
  v2 = *(id *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel];
  v3 = v1;
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v4 = v3;
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView];
  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  v6 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style];
  objc_msgSend(v5, sel_setSpacing_, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style + 24]);
  v7 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowVerticalStackView];
  objc_msgSend(v7, sel_setAxis_, 1);
  objc_msgSend(v7, sel_setAlignment_, 1);
  objc_msgSend(v7, sel_setSpacing_, v6[4]);
  v8 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityView];
  v9 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v8, sel_setColor_, v9);

  objc_msgSend(v8, sel_startAnimating);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v10 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer];
  objc_msgSend(v10, sel_addSubview_, v8);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v10, sel_setHidden_, 1);
  objc_msgSend(v5, sel_addArrangedSubview_, v10);
  objc_msgSend(v5, sel_addArrangedSubview_, v4);
  v11 = v2;
  v12 = v5;
  objc_msgSend(v7, sel_addArrangedSubview_, v11);
  objc_msgSend(v7, sel_addArrangedSubview_, v12);

  objc_msgSend(v0, sel_addArrangedSubview_, v7);
  objc_msgSend(v11, sel_setFont_, *(_QWORD *)v6);
  objc_msgSend(v11, sel_setTextColor_, *((_QWORD *)v6 + 2));
  objc_msgSend(v4, sel_setFont_, *((_QWORD *)v6 + 1));
  v13 = (void *)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23AA35F80;
  v15 = objc_msgSend(v10, sel_centerXAnchor);
  v16 = objc_msgSend(v8, sel_centerXAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v14 + 32) = v17;
  v18 = objc_msgSend(v10, sel_centerYAnchor);
  v19 = objc_msgSend(v8, sel_centerYAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v14 + 40) = v20;
  v21 = objc_msgSend(v10, sel_widthAnchor);
  v22 = objc_msgSend(v21, sel_constraintEqualToConstant_, 20.0);

  *(_QWORD *)(v14 + 48) = v22;
  v23 = objc_msgSend(v10, sel_heightAnchor);
  v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 20.0);

  *(_QWORD *)(v14 + 56) = v24;
  sub_23AA330C8();
  sub_23A964144();
  v25 = (id)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v25);

}

void sub_23A962FB0(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v9;
  double v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  uint64_t aBlock;
  uint64_t v17;
  void *v18;
  void *v19;
  id (*v20)();
  _QWORD *v21;
  __int128 v22[2];

  v9 = (void *)objc_opt_self();
  v10 = *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style + 40];
  sub_23A963A14(a2, (uint64_t)v22);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  sub_23A963B5C(a1, (uint64_t)(v11 + 3));
  v11[16] = a3;
  v11[17] = a4;
  sub_23A963B98(v22, (uint64_t)(v11 + 18));
  v20 = sub_23A963BB0;
  v21 = v11;
  v12 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v17 = 1107296256;
  v18 = sub_23A9C4DBC;
  v19 = &unk_250BBFC68;
  v13 = _Block_copy(&aBlock);
  v14 = v4;
  sub_23A963ED4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  swift_bridgeObjectRetain();
  swift_release();
  v20 = (id (*)())nullsub_1;
  v21 = 0;
  aBlock = v12;
  v17 = 1107296256;
  v18 = sub_23A9A366C;
  v19 = &unk_250BBFC90;
  v15 = _Block_copy(&aBlock);
  objc_msgSend(v9, sel_transitionWithView_duration_options_animations_completion_, v14, 5242880, v13, v15, v10);
  _Block_release(v15);
  _Block_release(v13);
}

id sub_23A96313C(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  void *v36;
  double v37;
  void *v38;
  id result;
  BOOL v40;
  _BOOL8 v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  char v57;
  _QWORD v58[12];
  int v59;
  _OWORD v60[6];
  int v61;
  _OWORD v62[6];
  int v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int16 v70;
  char v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int16 v78;
  char v79;

  sub_23A963B5C(a2, (uint64_t)v58);
  v8 = v58[0];
  v9 = v58[1];
  v54 = (void *)v58[3];
  v55 = (void *)v58[2];
  v52 = v58[5];
  v53 = v58[4];
  v10 = v58[8];
  v50 = v58[7];
  v51 = v58[6];
  v11 = v58[9];
  v48 = v58[11];
  v49 = v58[10];
  v12 = v59;
  v13 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel);
  sub_23A963B5C(a2, (uint64_t)v62);
  v45 = v11;
  v46 = v9;
  if ((v63 | 0x2000000u) >> 25 == 3)
  {
    v14 = v10;
    v15 = v8;
    v16 = 0;
  }
  else
  {
    v72 = v62[0];
    v73 = v62[1];
    v74 = v62[2];
    v75 = v62[3];
    v76 = v62[4];
    v77 = v62[5];
    v78 = v63;
    v79 = BYTE2(v63);
    v43 = v10;
    v44 = v11;
    v14 = v10;
    v15 = v8;
    sub_23A963C14(v8, v9, v55, v54, v53, v52, v51, v50, v43, v44, v49, v48, v12, SBYTE2(v12));
    sub_23A963C70();
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    v16 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v13, sel_setText_, v16);

  v17 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel);
  v18 = sub_23A963654();
  objc_msgSend(v17, sel_setTextColor_, v18);

  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_23A9E4FD4(0xD000000000000016, 0x800000023AA3B340, 0, 0);
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_23AA35F90;
    *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v19 + 64) = sub_23A9640C4();
    *(_QWORD *)(v19 + 32) = a3;
    *(_QWORD *)(v19 + 40) = a4;
    sub_23AA32FE4();
    swift_bridgeObjectRelease();
LABEL_6:
    v20 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_23A963B5C(a2, (uint64_t)v60);
  if ((v61 | 0x2000000u) >> 25 != 3)
  {
    v57 = HIBYTE(v61);
    v64 = v60[0];
    v65 = v60[1];
    v66 = v60[2];
    v67 = v60[3];
    v68 = v60[4];
    v69 = v60[5];
    v70 = v61;
    v71 = BYTE2(v61);
    sub_23A963C14(v15, v46, v55, v54, v53, v52, v51, v50, v14, v45, v49, v48, v12, SBYTE2(v12));
    sub_23A963DBC(v57, a5);
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    goto LABEL_6;
  }
  v20 = 0;
LABEL_9:
  objc_msgSend(v17, sel_setText_, v20);

  v21 = objc_msgSend(v13, sel_text);
  if (!v21)
  {
    if ((objc_msgSend(v13, sel_isHidden) & 1) != 0)
      goto LABEL_19;
    goto LABEL_17;
  }
  v22 = v21;
  v23 = sub_23AA32FD8();
  v25 = v24;

  swift_bridgeObjectRelease();
  if ((v25 & 0x2000000000000000) != 0)
    v26 = HIBYTE(v25) & 0xF;
  else
    v26 = v23 & 0xFFFFFFFFFFFFLL;
  if (objc_msgSend(v13, sel_isHidden) != (v26 == 0))
  {
    if (v26)
    {
      v27 = 0;
      v28 = 1.0;
LABEL_18:
      objc_msgSend(v13, sel_setAlpha_, v28);
      objc_msgSend(v13, sel_setHidden_, v27);
      goto LABEL_19;
    }
LABEL_17:
    v28 = 0.0;
    v27 = 1;
    goto LABEL_18;
  }
LABEL_19:
  v29 = objc_msgSend(v17, sel_text);
  if (v29)
  {
    v30 = v29;
    v31 = sub_23AA32FD8();
    v33 = v32;

    swift_bridgeObjectRelease();
    v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0)
      v34 = v31 & 0xFFFFFFFFFFFFLL;
    v35 = v34 == 0;
  }
  else
  {
    v35 = 1;
  }
  v36 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView);
  if (v35 != objc_msgSend(v36, sel_isHidden))
  {
    v37 = 1.0;
    if (v35)
      v37 = 0.0;
    objc_msgSend(v36, sel_setAlpha_, v37);
    objc_msgSend(v36, sel_setHidden_, v35);
  }
  v38 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer);
  result = objc_msgSend(v38, sel_isHidden);
  if ((a4 == 0) != (_DWORD)result)
  {
    v40 = a4 == 0;
    v41 = a4 == 0;
    v42 = 1.0;
    if (v40)
      v42 = 0.0;
    objc_msgSend(v38, sel_setAlpha_, v42);
    return objc_msgSend(v38, sel_setHidden_, v41);
  }
  return result;
}

id sub_23A963654()
{
  __int128 *v0;
  SEL *v1;
  _BYTE v3[96];
  unsigned int v4;
  unsigned __int8 v5;

  sub_23A963B5C(v0, (uint64_t)v3);
  if ((v4 | 0x2000000) >> 25 == 3)
    v1 = (SEL *)&selRef_clearColor;
  else
    v1 = *(SEL **)((char *)off_250BBFCB8
                 + (((uint64_t)((v4 | ((unint64_t)v5 << 32)) << 40) >> 53) & 0xFFFFFFFFFFFFF8));
  return objc_msgSend((id)objc_opt_self(), *v1);
}

id sub_23A963704()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBTDistanceView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMBTDistanceView()
{
  return objc_opt_self();
}

void destroy for FMBTDistanceViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t assignWithCopy for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMBTDistanceViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMBTDistanceViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMBTDistanceViewStyle()
{
  return &type metadata for FMBTDistanceViewStyle;
}

uint64_t sub_23A963A14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23A963A58()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 120);
  if ((v1 | 0x2000000u) >> 25 != 3)
    sub_23A963AE0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v1, SBYTE2(v1));
  swift_bridgeObjectRelease();
  sub_23A963B3C(v0 + 144);
  return swift_deallocObject();
}

void sub_23A963AE0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  if (a14 == 4)
    sub_23A963B0C(a1, a2, a3, a4);
}

void sub_23A963B0C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3 != (void *)1)
  {

  }
}

uint64_t sub_23A963B3C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23A963B5C(__int128 *a1, uint64_t a2)
{
  initializeWithTake for FMFindingState(a2, a1);
  return a2;
}

uint64_t sub_23A963B98(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_23A963BB0()
{
  uint64_t v0;

  return sub_23A96313C(*(_QWORD *)(v0 + 16), (__int128 *)(v0 + 24), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), (_QWORD *)(v0 + 144));
}

uint64_t sub_23A963BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A963BD4()
{
  return swift_release();
}

uint64_t sub_23A963BDC(uint64_t result, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 | 0x2000000u) >> 25 != 3)
    return sub_23A963C14(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, SBYTE2(a13));
  return result;
}

uint64_t sub_23A963C14(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  if (a14 == 4)
    return (uint64_t)sub_23A963C40(a1, a2, a3, a4);
  return a1;
}

id sub_23A963C40(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v4;
  id result;

  if (a3 != (void *)1)
  {
    v4 = a4;
    return a3;
  }
  return result;
}

void sub_23A963C70()
{
  __int128 *v0;
  _QWORD v1[12];

  v1[0] = 0;
  v1[1] = 0xE000000000000000;
  sub_23AA33500();
  swift_bridgeObjectRelease();
  sub_23A964108(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_23A963CFC()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v0 = sub_23A9E4FD4(v2, v3, 0, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23A963DBC(char a1, _QWORD *a2)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[12];
  char v14;

  if (a1 == 1 || a1 == 2)
  {
    v13[0] = 95;
    v13[1] = 0xE100000000000000;
    sub_23AA33038();
    swift_bridgeObjectRelease();
  }
  sub_23A964108(v2, (uint64_t)v13);
  if (v14 == 1)
  {
    sub_23A963F70();
    v11 = v4;
    v12 = v5;
    sub_23AA33038();
    swift_bridgeObjectRelease();
    v6 = v11;
    v7 = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23A963F70();
    v7 = v8;
  }
  v9 = sub_23AA0C314(v6, v7, a2);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23A963ED4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(unsigned int *)(a1 + 96) | ((unint64_t)*(unsigned __int8 *)(a1 + 100) << 32));
  return a1;
}

void sub_23A963F38(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 | 0x2000000u) >> 25 != 3)
    sub_23A963AE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, SBYTE2(a13));
}

void sub_23A963F70()
{
  __int128 *v0;
  _QWORD v1[12];

  v1[0] = 0;
  v1[1] = 0xE000000000000000;
  sub_23AA33500();
  swift_bridgeObjectRelease();
  sub_23A964108(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_23A963FF8()
{
  uint64_t v1;

  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  return v1;
}

uint64_t sub_23A964084(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B85DA40]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23A9640C4()
{
  unint64_t result;

  result = qword_2569D60E0;
  if (!qword_2569D60E0)
  {
    result = MEMORY[0x23B85DA58](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2569D60E0);
  }
  return result;
}

uint64_t sub_23A964108(__int128 *a1, uint64_t a2)
{
  initializeWithTake for FMFindingMeasurement(a2, a1);
  return a2;
}

unint64_t sub_23A964144()
{
  unint64_t result;

  result = qword_2569D7EA0;
  if (!qword_2569D7EA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D7EA0);
  }
  return result;
}

void sub_23A964180()
{
  char *v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  id v15;
  id v16;
  id v17;

  v1 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel;
  type metadata accessor for FMR1InsetLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v3 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowVerticalStackView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v4 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v5 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v6 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v7 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD398]), sel_initWithActivityIndicatorStyle_, 100);
  v8 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style;
  if (qword_2569D4AA0 != -1)
    swift_once();
  v9 = &v0[v8];
  v10 = (void *)qword_2569DFFB0;
  v11 = *(void **)algn_2569DFFB8;
  v12 = (void *)qword_2569DFFC0;
  v13 = qword_2569DFFD8;
  v14 = unk_2569DFFC8;
  *(_QWORD *)v9 = qword_2569DFFB0;
  *((_QWORD *)v9 + 1) = v11;
  *((_QWORD *)v9 + 2) = v12;
  *(_OWORD *)(v9 + 24) = v14;
  *((_QWORD *)v9 + 5) = v13;
  v15 = v10;
  v16 = v11;
  v17 = v12;

  sub_23AA335A8();
  __break(1u);
}

double sub_23A964320(uint64_t a1, char a2, uint64_t a3, char a4, unsigned __int8 a5, char a6)
{
  double v6;
  int v10;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v10 = a5;
    sub_23A9F604C(a1, 0.0, 3.14159265);
    if (v10 == 2)
      sub_23A9644DC(0x7FFFFFFFFFFFFFFFuLL);
    if ((a4 & 1) != 0)
      __asm { BR              X10 }
    v6 = *(double *)&a3;
    __sincos_stret(*(double *)&a3);
  }
  return v6;
}

void sub_23A96440C()
{
  JUMPOUT(0x23A9643B8);
}

void sub_23A964424()
{
  JUMPOUT(0x23A9643B8);
}

void sub_23A96443C()
{
  JUMPOUT(0x23A9643B8);
}

void sub_23A964454()
{
  JUMPOUT(0x23A9643B8);
}

void sub_23A96446C()
{
  JUMPOUT(0x23A9643B8);
}

unint64_t sub_23A9644DC(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x23B85DB3C](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x23B85DB3C](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A964564()
{
  return 1;
}

uint64_t sub_23A96456C()
{
  sub_23AA337D0();
  sub_23AA337DC();
  return sub_23AA33800();
}

uint64_t sub_23A9645AC()
{
  return sub_23AA337DC();
}

uint64_t sub_23A9645D0()
{
  sub_23AA337D0();
  sub_23AA337DC();
  return sub_23AA33800();
}

uint64_t FMConnectionManager.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_23A96462C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t FMConnectionManager.findables.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FMConnectionManager.hostSupportsRanging.getter()
{
  return platformSupportsProximity();
}

id sub_23A96465C(uint64_t a1, unsigned __int8 *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  int64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  objc_class *v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  objc_super v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = sub_23AA32E1C();
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    HIDWORD(v24) = v8;
    v32 = MEMORY[0x24BEE4AF8];
    v26 = v2;
    v10 = v2;
    sub_23AA1CEF4(0, v9, 0);
    v25 = a1;
    v11 = a1 + 32;
    do
    {
      sub_23A963A14(v11, (uint64_t)v29);
      v12 = v30;
      v13 = v31;
      sub_23A96545C(v29, v30);
      (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
      v14 = sub_23AA32DE0();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
      sub_23A963B3C((uint64_t)v29);
      v17 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23AA1CEF4(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v32;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23AA1CEF4(v18 > 1, v19 + 1, 1);
        v17 = v32;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      v20 = v17 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v14;
      *(_QWORD *)(v20 + 40) = v16;
      v11 += 40;
      --v9;
    }
    while (v9);
    a1 = v25;
    v2 = v26;
    LOBYTE(v8) = BYTE4(v24);
  }
  else
  {
    v21 = v2;
    v17 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_identifiers] = v17;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_findables] = a1;
  v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_connectionContext] = v8;

  v22 = (objc_class *)type metadata accessor for FMConnectionManager();
  v28.receiver = v2;
  v28.super_class = v22;
  return objc_msgSendSuper2(&v28, sel_init);
}

id FMConnectionManager.__deallocating_deinit()
{
  _QWORD *v0;
  objc_super v2;

  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMConnectionManager()
{
  return objc_opt_self();
}

void sub_23A964950()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  NSObject *log;
  uint64_t v5;

  if (qword_2569D4AB0 != -1)
    swift_once();
  v0 = sub_23AA32EA0();
  sub_23A9620E8(v0, (uint64_t)qword_2569E0010);
  v1 = sub_23AA3320C();
  log = sub_23AA32E88();
  if (os_log_type_enabled(log, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    v3 = swift_slowAlloc();
    v5 = v3;
    *(_DWORD *)v2 = 136315138;
    sub_23A964DBC(0xD000000000000047, 0x800000023AA3B400, &v5);
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, log, v1, "%s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v3, -1, -1);
    MEMORY[0x23B85DB24](v2, -1, -1);

  }
  else
  {

  }
}

void sub_23A964AD8()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  NSObject *log;
  uint64_t v5;

  if (qword_2569D4AB0 != -1)
    swift_once();
  v0 = sub_23AA32EA0();
  sub_23A9620E8(v0, (uint64_t)qword_2569E0010);
  v1 = sub_23AA3320C();
  log = sub_23AA32E88();
  if (os_log_type_enabled(log, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    v3 = swift_slowAlloc();
    v5 = v3;
    *(_DWORD *)v2 = 136315138;
    sub_23A964DBC(0xD00000000000004ALL, 0x800000023AA3B450, &v5);
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, log, v1, "%s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v3, -1, -1);
    MEMORY[0x23B85DB24](v2, -1, -1);

  }
  else
  {

  }
}

id FMConnectionManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FMConnectionManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23A964CD8(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_23A964CE8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_23A964D1C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_23A964D2C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23A964D4C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_23A964DBC(v6, v7, a3);
  v8 = *a1 + 8;
  sub_23AA333F8();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_23A964DBC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23A964EEC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23A965480((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23A965480((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_23A963B3C((uint64_t)v12);
  return v7;
}

uint64_t method lookup function for FMConnectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMConnectionManager.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of FMConnectionManager.connect()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FMConnectionManager.disconnect()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t sub_23A964EEC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23AA33404();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23A9650A4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23AA33548();
  if (!v8)
  {
    sub_23AA3359C();
    __break(1u);
LABEL_17:
    result = sub_23AA335F0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23A9650A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23A965138(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23A965310(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23A965310(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23A965138(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23A9652AC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23AA3350C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23AA3359C();
      __break(1u);
LABEL_10:
      v2 = sub_23AA33044();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23AA335F0();
    __break(1u);
LABEL_14:
    result = sub_23AA3359C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23A9652AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23A964084(&qword_2569D52C0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23A965310(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084(&qword_2569D52C0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

_QWORD *sub_23A96545C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_23A965480(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t getEnumTagSinglePayload for FMConnectionManagerError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for FMConnectionManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23A965554 + 4 * byte_23AA36050[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23A965574 + 4 * byte_23AA36055[v4]))();
}

_BYTE *sub_23A965554(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23A965574(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A96557C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A965584(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A96558C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A965594(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23A9655A0()
{
  return 0;
}

ValueMetadata *type metadata accessor for FMConnectionManagerError()
{
  return &type metadata for FMConnectionManagerError;
}

unint64_t sub_23A9655BC()
{
  unint64_t result;

  result = qword_2569D52C8;
  if (!qword_2569D52C8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA360FC, &type metadata for FMConnectionManagerError);
    atomic_store(result, (unint64_t *)&qword_2569D52C8);
  }
  return result;
}

uint64_t sub_23A965600(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_23A965608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_23A965610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_23A965618(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_23A965620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_23A965628()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFindingPartPickerView()
{
  return objc_opt_self();
}

id sub_23A965658(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  double v19;
  id v20;
  void *v21;
  id v22;
  objc_super v24;
  _OWORD v25[2];
  uint64_t v26;

  v3 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  v6 = objc_msgSend(v4, sel_effectWithStyle_, 20);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, v6);

  *(_QWORD *)&v1[v3] = v7;
  v8 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v9 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v10 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  v11 = &v5[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style];
  v12 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE248], 0x10000);
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_whiteColor);
  v15 = objc_msgSend(v13, sel_whiteColor);
  v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.5);

  *(_QWORD *)v11 = v12;
  *(_OWORD *)(v11 + 8) = xmmword_23AA36170;
  *(_OWORD *)(v11 + 24) = xmmword_23AA36170;
  *((_QWORD *)v11 + 5) = 0x4024000000000000;
  *((_QWORD *)v11 + 6) = v14;
  *((_QWORD *)v11 + 7) = v16;
  *((_QWORD *)v11 + 8) = 0x4028000000000000;
  v17 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value];
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables] = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23A963A14(a1 + 32, (uint64_t)v25);
  }
  else
  {
    v26 = 0;
    memset(v25, 0, sizeof(v25));
  }
  swift_beginAccess();
  sub_23A967B0C((uint64_t)v25, v17);
  swift_endAccess();

  v24.receiver = v5;
  v24.super_class = (Class)type metadata accessor for FMFindingGenericPartPickerView();
  v18 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23A965A8C();
  sub_23A965BD4();
  sub_23A965950(v19);
  v20 = objc_msgSend(v18, sel_contextMenuInteraction);
  v21 = v18;
  if (v20)
  {
    v22 = v20;
    objc_msgSend(v18, sel_setShowsMenuAsPrimaryAction_, 1);
    objc_msgSend(v18, sel_addInteraction_, v22);

    v21 = v22;
  }

  return v18;
}

void sub_23A965950(double a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  LODWORD(a1) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, a1);
  v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel];
  v3 = sub_23A966174();
  objc_msgSend(v2, sel_setAttributedText_, v3);

  v4 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView];
  v5 = (void *)sub_23AA32FB4();
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v5);

  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v8 = objc_msgSend(v6, sel_imageWithTintColor_renderingMode_, v7, 1);

  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v4, sel_setImage_, v8);

}

id sub_23A965A8C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double *v4;

  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground]);
  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView];
  objc_msgSend(v0, sel_addSubview_, v1);
  v2 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v2, sel_setMasksToBounds_, 1);

  v3 = objc_msgSend(v0, sel_layer);
  v4 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style];
  objc_msgSend(v3, sel_setCornerRadius_, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style + 40]);

  objc_msgSend(v1, sel_setAxis_, 0);
  objc_msgSend(v1, sel_setSpacing_, 1.17549435e-38);
  objc_msgSend(v1, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v1, sel_setLayoutMargins_, v4[1], v4[2], v4[3], v4[4]);
  objc_msgSend(v1, sel_addArrangedSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel]);
  return objc_msgSend(v1, sel_addArrangedSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView]);
}

void sub_23A965BD4()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground];
  v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel];
  v4 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView];
  v5 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView];
  v6 = v2;
  v7 = v3;
  v8 = v4;
  v42 = v5;
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v41 = (id)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23AA35F80;
  v10 = objc_msgSend(v8, sel_leadingAnchor);
  v11 = objc_msgSend(v1, (SEL)&stru_250BD6128.name + 6);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v9 + 32) = v12;
  v13 = objc_msgSend(v8, sel_trailingAnchor);
  v14 = objc_msgSend(v1, (SEL)&selRef_widthAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v9 + 40) = v15;
  v16 = objc_msgSend(v8, sel_topAnchor);
  v17 = objc_msgSend(v1, (SEL)&selRef_setPreferredEdgeInsets_ + 4);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v9 + 48) = v18;
  v19 = objc_msgSend(v8, sel_bottomAnchor);
  v20 = objc_msgSend(v1, sel_bottomAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v9 + 56) = v21;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v22 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v22);

  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_23AA35F80;
  v24 = objc_msgSend(v6, sel_leadingAnchor);
  v25 = objc_msgSend(v1, sel_leadingAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(v6, sel_trailingAnchor);
  v28 = objc_msgSend(v1, sel_trailingAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(v6, sel_topAnchor);
  v31 = objc_msgSend(v1, sel_topAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(v6, sel_bottomAnchor);
  v34 = objc_msgSend(v1, sel_bottomAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(_QWORD *)(v23 + 56) = v35;
  sub_23AA330C8();
  v36 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v36);

  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_23AA36180;
  v38 = objc_msgSend(v42, sel_heightAnchor);
  v39 = objc_msgSend(v42, sel_widthAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(_QWORD *)(v37 + 32) = v40;
  sub_23AA330C8();
  v43 = (id)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v43);

}

id sub_23A966174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id result;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t inited;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  char *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  id v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t *v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v1 = sub_23AA32E1C();
  v80 = *(_QWORD *)(v1 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v71 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_23A964084(&qword_2569D53E0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084((uint64_t *)&unk_2569D5D30);
  v5 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  *(_QWORD *)&v79 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v67 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v67 - v10;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_init);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables);
  v76 = *(char **)(v13 + 16);
  v69 = result;
  v70 = v13;
  v68 = v0;
  if (!v76)
  {
    v16 = 0;
    goto LABEL_18;
  }
  v14 = (_QWORD *)(v13 + 32);
  v15 = (id)(v0 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value);
  swift_bridgeObjectRetain();
  v74 = v15;
  swift_beginAccess();
  v16 = 0;
  v72 = v4;
  v73 = v9;
  v75 = v11;
  while (1)
  {
    v17 = v14[3];
    v18 = v14[4];
    sub_23A96545C(v14, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
    v19(v11, 0, 1, v1);
    sub_23A968378((uint64_t)v74, (uint64_t)v82, &qword_2569D53C8);
    v20 = v83;
    if (v83)
    {
      v21 = v84;
      v22 = sub_23A96545C(v82, v83);
      v78 = &v67;
      v23 = v1;
      v24 = *(_QWORD *)(v20 - 8);
      MEMORY[0x24BDAC7A8](v22);
      v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v24 + 16))(v26);
      sub_23A9683BC((uint64_t)v82, &qword_2569D53C8);
      v27 = *(void (**)(uint64_t, uint64_t))(v21 + 16);
      v28 = v21;
      v29 = (uint64_t)v73;
      v27(v20, v28);
      v30 = *(void (**)(char *, uint64_t))(v24 + 8);
      v1 = v23;
      v4 = v72;
      v30(v26, v20);
      v19((char *)v29, 0, 1, v1);
    }
    else
    {
      sub_23A9683BC((uint64_t)v82, &qword_2569D53C8);
      v29 = (uint64_t)v73;
      v19(v73, 1, 1, v1);
    }
    v31 = (uint64_t)&v4[*(int *)(v77 + 48)];
    v11 = v75;
    sub_23A968378((uint64_t)v75, (uint64_t)v4, (uint64_t *)&unk_2569D5D30);
    sub_23A968378(v29, v31, (uint64_t *)&unk_2569D5D30);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
    if (v32(v4, 1, v1) == 1)
      break;
    sub_23A968378((uint64_t)v4, v79, (uint64_t *)&unk_2569D5D30);
    if (v32((char *)v31, 1, v1) != 1)
    {
      v33 = v80;
      v34 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v71, v31, v1);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v35 = sub_23AA32FA8();
      v36 = *(void (**)(char *, uint64_t))(v33 + 8);
      v37 = v34;
      v4 = v72;
      v36(v37, v1);
      sub_23A9683BC(v29, (uint64_t *)&unk_2569D5D30);
      sub_23A9683BC((uint64_t)v11, (uint64_t *)&unk_2569D5D30);
      v36((char *)v79, v1);
      sub_23A9683BC((uint64_t)v4, (uint64_t *)&unk_2569D5D30);
      if ((v35 & 1) != 0)
        goto LABEL_17;
      goto LABEL_5;
    }
    sub_23A9683BC(v29, (uint64_t *)&unk_2569D5D30);
    sub_23A9683BC((uint64_t)v11, (uint64_t *)&unk_2569D5D30);
    (*(void (**)(_QWORD, uint64_t))(v80 + 8))(v79, v1);
LABEL_4:
    sub_23A9683BC((uint64_t)v4, &qword_2569D53E0);
LABEL_5:
    ++v16;
    v14 += 5;
    if (v76 == v16)
    {
      v16 = 0;
      goto LABEL_17;
    }
  }
  sub_23A9683BC(v29, (uint64_t *)&unk_2569D5D30);
  sub_23A9683BC((uint64_t)v11, (uint64_t *)&unk_2569D5D30);
  if (v32((char *)v31, 1, v1) != 1)
    goto LABEL_4;
  sub_23A9683BC((uint64_t)v4, (uint64_t *)&unk_2569D5D30);
LABEL_17:
  result = (id)swift_bridgeObjectRelease();
LABEL_18:
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    v81 = v16 + 1;
    v82[0] = sub_23AA33710();
    v82[1] = v38;
    sub_23AA33038();
    v80 = sub_23A964084(&qword_2569D53F8);
    inited = swift_initStackObject();
    v79 = xmmword_23AA36190;
    *(_OWORD *)(inited + 16) = xmmword_23AA36190;
    v40 = (void *)*MEMORY[0x24BEBB360];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
    v41 = v68 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style;
    v42 = *(void **)(v68 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style);
    v43 = sub_23A964084(&qword_2569D5400);
    v78 = (uint64_t *)v43;
    *(_QWORD *)(inited + 40) = v42;
    v44 = (void *)*MEMORY[0x24BEBB368];
    *(_QWORD *)(inited + 64) = v43;
    *(_QWORD *)(inited + 72) = v44;
    v45 = *(void **)(v41 + 48);
    v77 = sub_23A968488(0, &qword_2569D5408);
    *(_QWORD *)(inited + 104) = v77;
    *(_QWORD *)(inited + 80) = v45;
    v76 = v42;
    v74 = v44;
    v46 = v45;
    v72 = v40;
    sub_23A9B69D0(inited);
    v47 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v48 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    v73 = v49;
    sub_23A961DE4((unint64_t *)&qword_2569D50D8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_23AA35F24);
    v50 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
    v75 = (char *)objc_msgSend(v47, sel_initWithString_attributes_, v48, v50);

    sub_23A9E4FD4(0xD00000000000001ELL, 0x800000023AA3B890, 0, 0);
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_23AA35F90;
    v52 = sub_23AA331AC();
    *(_QWORD *)(v51 + 56) = sub_23A968488(0, &qword_2569D5410);
    *(_QWORD *)(v51 + 64) = sub_23A968430();
    *(_QWORD *)(v51 + 32) = v52;
    sub_23AA32FE4();
    swift_bridgeObjectRelease();
    v53 = swift_initStackObject();
    *(_OWORD *)(v53 + 16) = v79;
    v54 = v72;
    *(_QWORD *)(v53 + 32) = v72;
    *(_QWORD *)(v53 + 40) = v42;
    v55 = v74;
    *(_QWORD *)(v53 + 64) = v78;
    *(_QWORD *)(v53 + 72) = v55;
    v56 = *(void **)(v41 + 56);
    *(_QWORD *)(v53 + 104) = v77;
    *(_QWORD *)(v53 + 80) = v56;
    v57 = v76;
    v58 = v54;
    v59 = v55;
    v60 = v56;
    sub_23A9B69D0(v53);
    v61 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v62 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    v63 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
    v64 = objc_msgSend(v61, sel_initWithString_attributes_, v62, v63);

    v65 = v69;
    v66 = v75;
    objc_msgSend(v69, sel_appendAttributedString_, v75);
    objc_msgSend(v65, sel_appendAttributedString_, v64);

    return v65;
  }
  return result;
}

id sub_23A96698C()
{
  char *v0;
  void *v1;
  id v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel];
  v2 = sub_23A966174();
  objc_msgSend(v1, sel_setAttributedText_, v2);

  result = objc_msgSend(v0, sel_contextMenuInteraction);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v0;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_23A9683F8;
    *(_QWORD *)(v6 + 24) = v5;
    v10[4] = sub_23A968410;
    v10[5] = v6;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_23A966C6C;
    v10[3] = &unk_250BBFF68;
    v7 = _Block_copy(v10);
    v8 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_updateVisibleMenuWithBlock_, v7);

    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_23A966B00(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a2;
  v4 = a2;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_23A967C14(v5, (uint64_t)v4, (uint64_t)sub_23A9684C0, v3);
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    sub_23A968488(0, &qword_2569D53D0);
    swift_bridgeObjectRetain();
    sub_23AA335B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23AA33734();
    sub_23A968488(0, &qword_2569D53D0);
  }
  swift_bridgeObjectRelease();
  sub_23A968488(0, &qword_2569D53D8);
  v7 = sub_23AA33350();
  swift_release();
  return v7;
}

id sub_23A966C6C(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  void *v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = (void *)v2();

  return v4;
}

uint64_t sub_23A966CA8(void *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  id v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v25 = a1;
  v3 = sub_23AA32E1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)&a2[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v23 = *(_QWORD *)&a2[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables];
    v24 = a2;
    v9 = v7 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_23A963A14(v9, (uint64_t)&v29);
      v10 = v30;
      v11 = v31;
      sub_23A96545C(&v29, v30);
      (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
      v12 = sub_23AA32DE0();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v15 = objc_msgSend(v25, sel_identifier);
      v16 = sub_23AA32FD8();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
        break;
      v20 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_14;
      sub_23A963B3C((uint64_t)&v29);
      v9 += 40;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        a2 = v24;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    sub_23A963B98(&v29, (uint64_t)&v26);
    swift_bridgeObjectRelease();
    a2 = v24;
    if (!*((_QWORD *)&v27 + 1))
      return sub_23A9683BC((uint64_t)&v26, &qword_2569D53C8);
LABEL_12:
    sub_23A963B98(&v26, (uint64_t)&v29);
    sub_23A963A14((uint64_t)&v29, (uint64_t)&v26);
    v21 = (uint64_t)&a2[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value];
    swift_beginAccess();
    sub_23A967B54((uint64_t)&v26, v21);
    swift_endAccess();
    sub_23A96698C();
    sub_23A9683BC((uint64_t)&v26, &qword_2569D53C8);
    objc_msgSend(a2, sel_sendActionsForControlEvents_, 4096);
    return sub_23A963B3C((uint64_t)&v29);
  }
  swift_bridgeObjectRetain();
LABEL_11:
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v27 + 1))
    goto LABEL_12;
  return sub_23A9683BC((uint64_t)&v26, &qword_2569D53C8);
}

uint64_t sub_23A966F30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t result;
  char *v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v52 = a5;
  v57 = a4;
  v51 = a3;
  v49 = a2;
  v50 = sub_23A964084(&qword_2569D53E0);
  MEMORY[0x24BDAC7A8](v50);
  v56 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - v13;
  v15 = sub_23AA32E1C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v19 = a1[4];
  sub_23A96545C(a1, v20);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
  v54 = v22;
  v55 = v21;
  v23 = a1[3];
  v24 = a1[4];
  sub_23A96545C(a1, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  sub_23AA32DE0();
  v25 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v46 = v18;
  v47 = v25;
  v25((uint64_t)v18, v15);
  v53 = sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v26 = a1[3];
  v27 = a1[4];
  sub_23A96545C(a1, v26);
  v28 = (uint64_t)v14;
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  v61 = v16;
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
  v29(v14, 0, 1, v15);
  v30 = v49 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_beginAccess();
  sub_23A968378(v30, (uint64_t)v58, &qword_2569D53C8);
  v31 = v59;
  if (v59)
  {
    v32 = v60;
    v33 = sub_23A96545C(v58, v59);
    v34 = *(_QWORD *)(v31 - 8);
    MEMORY[0x24BDAC7A8](v33);
    v36 = (char *)&v46 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v34 + 16))(v36);
    sub_23A9683BC((uint64_t)v58, &qword_2569D53C8);
    (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v31);
    v29(v12, 0, 1, v15);
  }
  else
  {
    sub_23A9683BC((uint64_t)v58, &qword_2569D53C8);
    v29(v12, 1, 1, v15);
  }
  v37 = v56;
  v38 = v56 + *(int *)(v50 + 48);
  sub_23A968378(v28, v56, (uint64_t *)&unk_2569D5D30);
  sub_23A968378((uint64_t)v12, v38, (uint64_t *)&unk_2569D5D30);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v39(v37, 1, v15) != 1)
  {
    v40 = v28;
    v41 = v48;
    sub_23A968378(v37, v48, (uint64_t *)&unk_2569D5D30);
    if (v39(v38, 1, v15) != 1)
    {
      v42 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v46, v38, v15);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      sub_23AA32FA8();
      v43 = v42;
      v44 = v47;
      v47((uint64_t)v43, v15);
      sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
      sub_23A9683BC(v40, (uint64_t *)&unk_2569D5D30);
      v44(v41, v15);
      sub_23A9683BC(v37, (uint64_t *)&unk_2569D5D30);
      goto LABEL_11;
    }
    sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
    sub_23A9683BC(v28, (uint64_t *)&unk_2569D5D30);
    v47(v41, v15);
    goto LABEL_9;
  }
  sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
  sub_23A9683BC(v28, (uint64_t *)&unk_2569D5D30);
  if (v39(v38, 1, v15) != 1)
  {
LABEL_9:
    sub_23A9683BC(v37, &qword_2569D53E0);
    goto LABEL_11;
  }
  sub_23A9683BC(v37, (uint64_t *)&unk_2569D5D30);
LABEL_11:
  sub_23A968488(0, &qword_2569D53E8);
  swift_retain();
  result = sub_23AA333A4();
  *v52 = result;
  return result;
}

id sub_23A96749C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingGenericPartPickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingGenericPartPickerView()
{
  return objc_opt_self();
}

uint64_t sub_23A967598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_beginAccess();
  return sub_23A968378(v3, a1, &qword_2569D53C8);
}

uint64_t sub_23A9675F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_beginAccess();
  sub_23A967B54(a1, v3);
  swift_endAccess();
  sub_23A96698C();
  return sub_23A9683BC(a1, &qword_2569D53C8);
}

uint64_t sub_23A967664()
{
  return swift_bridgeObjectRetain();
}

id sub_23A967674(uint64_t a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for FMFindingGenericPartPickerView());
  return sub_23A965658(a1);
}

uint64_t sub_23A9676FC(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a2;
  v4 = a2;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_23A967C14(v5, (uint64_t)v4, (uint64_t)sub_23A968370, v3);
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    sub_23A968488(0, &qword_2569D53D0);
    swift_bridgeObjectRetain();
    sub_23AA335B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23AA33734();
    sub_23A968488(0, &qword_2569D53D0);
  }
  swift_bridgeObjectRelease();
  sub_23A968488(0, &qword_2569D53D8);
  v7 = sub_23AA33350();
  swift_release();
  return v7;
}

void destroy for FMFindingGenericPartPickerViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = *(void **)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v5;
  v7 = v3;
  v8 = v4;
  v9 = v6;
  return a1;
}

uint64_t assignWithCopy for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(void **)(a2 + 48);
  v8 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 56);
  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingGenericPartPickerViewStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingGenericPartPickerViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingGenericPartPickerViewStyle()
{
  return &type metadata for FMFindingGenericPartPickerViewStyle;
}

uint64_t sub_23A967B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D53C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A967B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D53C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_23A967B9C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_23A968488(0, &qword_2569D53D0);
  v2 = sub_23AA330B0();
  swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23A967C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  _QWORD *i;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  v7 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23AA3356C();
    for (i = (_QWORD *)(a1 + 32); ; i += 5)
    {
      sub_23A966F30(i, a2, a3, a4, &v13);
      if (v5)
        break;
      v5 = 0;
      sub_23AA33554();
      sub_23AA33578();
      sub_23AA33584();
      sub_23AA33560();
      if (!--v7)
        return v14;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23A967D0C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[48];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 < 2)
    return 0;
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23A963A14(v2, (uint64_t)v17);
    sub_23A963A14((uint64_t)v17, (uint64_t)&v11);
    sub_23A964084((uint64_t *)&unk_2569D63B0);
    sub_23A964084((uint64_t *)&unk_2569D5D80);
    if (!swift_dynamicCast())
      break;
    sub_23A963B98(v9, (uint64_t)v14);
    v3 = v15;
    v4 = v16;
    sub_23A96545C(v14, v15);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 24))(&v11, v3, v4);
    v5 = v12;
    if (!v12 || (v6 = v13, v7 = v11, swift_bridgeObjectRetain(), sub_23A967EB8(v7, v5), !v6))
    {
      sub_23A963B3C((uint64_t)v14);
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)v14);
    sub_23A963B3C((uint64_t)v17);
    v2 += 40;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return type metadata accessor for FMFindingSymbolBasedPartPickerView();
    }
  }
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  sub_23A9683BC((uint64_t)v9, (uint64_t *)&unk_2569D63C0);
LABEL_11:
  sub_23A963B3C((uint64_t)v17);
  swift_bridgeObjectRelease();
  return type metadata accessor for FMFindingGenericPartPickerView();
}

uint64_t sub_23A967EB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23A967EE8()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  char *v13;

  v1 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground;
  v2 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 20);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, v2);

  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v5 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v6 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  v7 = &v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style];
  v8 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE248], 0x10000);
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_whiteColor);
  v11 = objc_msgSend(v9, sel_whiteColor);
  v12 = objc_msgSend(v11, sel_colorWithAlphaComponent_, 0.5);

  *(_QWORD *)v7 = v8;
  *(_OWORD *)(v7 + 8) = xmmword_23AA36170;
  *(_OWORD *)(v7 + 24) = xmmword_23AA36170;
  *((_QWORD *)v7 + 5) = 0x4024000000000000;
  *((_QWORD *)v7 + 6) = v10;
  *((_QWORD *)v7 + 7) = v12;
  *((_QWORD *)v7 + 8) = 0x4028000000000000;
  v13 = &v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;

  sub_23AA335A8();
  __break(1u);
}

id sub_23A9680E8()
{
  char *v0;
  id v1;
  CGFloat v2;
  uint64_t v3;
  id v4;
  void *v5;
  CGRect v7;
  CGRect v8;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultStyle);
  objc_msgSend(v0, sel_frame);
  v2 = CGRectGetMinY(v7) + *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style + 64];
  objc_msgSend(v0, sel_frame);
  objc_msgSend(v1, sel_setPreferredEdgeInsets_, v2, CGRectGetMinX(v8), 0.0, 0.0);
  sub_23A964084((uint64_t *)&unk_2569D7E90);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23AA35F90;
  v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
  *(_QWORD *)(v3 + 56) = sub_23A968488(0, &qword_2569D53F0);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setPreferredBackgroundEffects_, v5);

  return v1;
}

id sub_23A968238()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD v7[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v0;
  v2 = (void *)objc_opt_self();
  v7[4] = sub_23A968350;
  v7[5] = v1;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_23A967B9C;
  v7[3] = &unk_250BBFEC8;
  v3 = _Block_copy(v7);
  v4 = v0;
  swift_retain();
  swift_release();
  v5 = objc_msgSend(v2, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, 0, v3);
  swift_release();
  _Block_release(v3);
  return v5;
}

uint64_t sub_23A96832C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A968350(uint64_t a1)
{
  uint64_t v1;

  return sub_23A9676FC(a1, *(void **)(v1 + 16));
}

uint64_t sub_23A968358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A968368()
{
  return swift_release();
}

uint64_t sub_23A968370(void *a1)
{
  uint64_t v1;

  return sub_23A966CA8(a1, *(char **)(v1 + 16));
}

uint64_t sub_23A968378(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23A964084(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A9683BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23A964084(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23A9683F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23A966B00(a1, *(void **)(v1 + 16));
}

uint64_t sub_23A968400()
{
  return swift_deallocObject();
}

uint64_t sub_23A968410()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_23A968430()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D5418;
  if (!qword_2569D5418)
  {
    v1 = sub_23A968488(255, &qword_2569D5410);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_2569D5418);
  }
  return result;
}

uint64_t sub_23A968488(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t VFXManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VFXManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFXManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for VFXManager()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for FMFindingBearingCalculator()
{
  return objc_opt_self();
}

BOOL sub_23A968584(void *a1, float a2, float a3, float a4, float a5, float a6, uint64_t a7, char a8, float *a9, _BYTE *a10, BOOL *a11, BOOL *a12, float *a13, _DWORD *a14, char a15)
{
  uint64_t v27;
  uint64_t v28;
  float v29;
  float v30;
  id v31;
  double v32;
  float v33;
  float v34;
  _BOOL4 v35;
  BOOL v36;

  v27 = calculateBearingAngleHorizontalDistanceAndVerticalDistance();
  if (*((float *)&v27 + 1) <= a2)
    a2 = *((float *)&v27 + 1);
  v29 = *(float *)&v28;
  v30 = *(float *)&v27;
  if ((v28 & 0x100000000) == 0)
    v30 = 0.0;
  *a9 = v30;
  *a10 = (v28 & 0x100000000uLL) >> 32;
  *a13 = a2;
  v31 = objc_msgSend(a1, sel_verticalState);
  *(float *)&v32 = v29;
  if (v31 != (id)1)
  {
    if (objc_msgSend(a1, sel_verticalState, v32) == (id)2)
      *(float *)&v32 = v29;
    else
      *(float *)&v32 = 0.0;
  }
  *a14 = LODWORD(v32);
  if (objc_msgSend(a1, sel_verticalState))
    v33 = v29;
  else
    v33 = 0.0;
  v34 = fabsf(v33);
  v35 = v34 < a5;
  if ((a15 & 1) != 0)
    v35 = v34 < a6;
  if (v35)
  {
    v36 = 0;
    *a11 = 0;
  }
  else if (objc_msgSend(a1, sel_verticalState) == (id)2)
  {
    *a11 = v29 >= 0.0;
    v36 = v29 < 0.0;
  }
  else
  {
    v36 = 1;
    *a11 = 1;
  }
  *a12 = v36;
  if ((a8 & 1) != 0)
    return a2 < a4;
  else
    return a2 < a3;
}

id sub_23A968710(void *a1)
{
  return sub_23A9687D4(a1);
}

void sub_23A96872C(void *a1)
{
  sub_23A9688B0(a1);
}

id sub_23A968748(void *a1)
{
  return sub_23A9687D4(a1);
}

void sub_23A968768(void *a1)
{
  sub_23A9688B0(a1);
}

id sub_23A968788(void *a1)
{
  return sub_23A9687D4(a1);
}

void sub_23A9687A0(void *a1)
{
  sub_23A9688B0(a1);
}

id sub_23A9687B8(void *a1)
{
  return sub_23A9687D4(a1);
}

id sub_23A9687D4(void *a1)
{
  void *v2;
  id v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  id v7;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_isInternalBuild);

  if (v5)
  {
    v6 = sub_23AA32FB4();
    v7 = objc_msgSend(v3, sel_BOOLForKey_, v6);

    v3 = (id)v6;
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_23A968894(void *a1)
{
  sub_23A9688B0(a1);
}

void sub_23A9688B0(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_sharedInstance);
  objc_msgSend(v4, sel_isInternalBuild);

  v5 = (void *)sub_23AA330F8();
  v6 = (id)sub_23AA32FB4();
  objc_msgSend(v3, sel_setValue_forKey_, v5, v6);

}

float sub_23A968978()
{
  return 50.0;
}

float sub_23A968984()
{
  return 0.7;
}

float sub_23A968994()
{
  return 70.0;
}

float sub_23A9689A0()
{
  return 0.9;
}

float sub_23A9689B0()
{
  return 0.31;
}

float sub_23A9689C0()
{
  return 0.67;
}

float sub_23A9689D0()
{
  return 0.57;
}

uint64_t sub_23A9689E0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_23A968A10();

  return v2;
}

uint64_t sub_23A968A10()
{
  void *v0;
  id v1;
  unsigned int v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  _OWORD v8[2];

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_isInternalBuild);

  if (!v2)
    return 150;
  v3 = (void *)sub_23AA32FB4();
  v4 = objc_msgSend(v0, sel_valueForKey_, v3);

  if (!v4)
  {
    memset(v8, 0, sizeof(v8));
    sub_23A968C64((uint64_t)v8);
    return 150;
  }
  sub_23AA33434();
  swift_unknownObjectRelease();
  sub_23A968C64((uint64_t)v8);
  v5 = (void *)sub_23AA32FB4();
  v6 = objc_msgSend(v0, sel_integerForKey_, v5);

  return (uint64_t)v6;
}

void sub_23A968B40(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_sharedInstance);
  objc_msgSend(v4, sel_isInternalBuild);

  v5 = (void *)sub_23AA331AC();
  v6 = (id)sub_23AA32FB4();
  objc_msgSend(v3, sel_setValue_forKey_, v5, v6);

}

void sub_23A968C18()
{
  void *v0;
  char v1;

  v0 = (void *)sub_23AA32FB4();
  v1 = MGGetBoolAnswer();

  byte_2569DFFE0 = v1;
}

uint64_t sub_23A968C64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084(&qword_2569D6680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeBufferWithCopyOfBuffer for FMFindingType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Threshold()
{
  return &type metadata for Threshold;
}

ValueMetadata *type metadata accessor for FMFindingGuide()
{
  return &type metadata for FMFindingGuide;
}

void destroy for FMFindingDistance(uint64_t a1)
{

}

uint64_t initializeWithCopy for FMFindingDistance(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t assignWithCopy for FMFindingDistance(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(void **)(a1 + 16);
  v6 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;

  v8 = *(void **)(a1 + 24);
  v9 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_BYTE *)(a1 + 57) = *((_BYTE *)a2 + 57);
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_BYTE *)(a1 + 73) = *((_BYTE *)a2 + 73);
  *(_BYTE *)(a1 + 74) = *((_BYTE *)a2 + 74);
  *(_QWORD *)(a1 + 80) = a2[10];
  v11 = a2[11];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_QWORD *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 97) = *((_BYTE *)a2 + 97);
  return a1;
}

__n128 initializeWithTake for FMFindingDistance(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FMFindingDistance(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingDistance(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 98))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingDistance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 98) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 98) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingDistance()
{
  return &type metadata for FMFindingDistance;
}

uint64_t sub_23A9691D0(int a1)
{
  int v1;
  uint64_t result;

  if (a1 > 127)
  {
    if (a1 > 1023)
    {
      switch(a1)
      {
        case 1024:
          return 1918985582;
        case 2048:
          return 0x65736F6C63;
        case 4096:
          return 0x79627261656ELL;
      }
    }
    else
    {
      switch(a1)
      {
        case 128:
          return 0x65766F6261;
        case 256:
          return 0x776F6C6562;
        case 512:
          return 7496038;
      }
    }
    return 0x6E776F6E6B6E75;
  }
  v1 = a1 - 1;
  result = 0x746E6F7266;
  switch(v1)
  {
    case 1:
      return result;
    case 3:
      result = 0x6461656861;
      break;
    case 7:
      result = 1952867692;
      break;
    case 15:
      result = 0x7468676972;
      break;
    case 31:
      result = 0x646E69686562;
      break;
    case 63:
      result = 0x42724F65766F6261;
      break;
    default:
      return 0x6E776F6E6B6E75;
  }
  return result;
}

_DWORD *sub_23A969330@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23A96933C()
{
  int *v0;

  return sub_23A9691D0(*v0);
}

void sub_23A969344(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_23A96934C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_23A969360@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_23A969374@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23A969388(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_23A9693B8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_23A9693E4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_23A969408(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_23A96941C(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_23A969430(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_23A969444@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23A969458(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23A96946C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23A969480(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23A969494()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23A9694A4()
{
  return sub_23AA33440();
}

_DWORD *sub_23A9694BC(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_23A9694D0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_23A9694E0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_23A9694EC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23A969500@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_23A96AE94(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

BOOL sub_23A96953C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23A969558()
{
  return sub_23AA337DC();
}

uint64_t sub_23A969584()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C706F6570;
  else
    return 0x746C7561666564;
}

uint64_t sub_23A9695BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A96AECC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A9695E0()
{
  return 0;
}

uint64_t sub_23A9695EC()
{
  sub_23A96BCB8();
  return sub_23AA33830();
}

uint64_t sub_23A969614()
{
  sub_23A96BCB8();
  return sub_23AA3383C();
}

uint64_t sub_23A96963C(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = sub_23A964084(&qword_2569D5708);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A964084(&qword_2569D5710);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A964084(&qword_2569D5718);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A96BCB8();
  sub_23AA33818();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_23A96BCFC();
    sub_23AA3368C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23A96BD40();
    sub_23AA3368C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_23A96980C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A96984C + 4 * byte_23AA36300[a1]))(0x736944746E616C73, 0xED000065636E6174);
}

uint64_t sub_23A96984C()
{
  return 0x676E6972616562;
}

uint64_t sub_23A969864()
{
  return 0x4264696C61567369;
}

uint64_t sub_23A969888()
{
  return 0x616542564F466E69;
}

uint64_t sub_23A9698A8()
{
  return 0x564F466E497369;
}

uint64_t sub_23A9698C0()
{
  return 0x636165526E497369;
}

unint64_t sub_23A9698E0()
{
  return 0xD000000000000012;
}

unint64_t sub_23A969938()
{
  return 0xD000000000000010;
}

uint64_t sub_23A969958()
{
  return 0x6C6F687365726874;
}

uint64_t sub_23A969974(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A9699B4 + 4 * byte_23AA3630C[a1]))(0x736944746E616C73, 0xED000065636E6174);
}

uint64_t sub_23A9699B4()
{
  return 0x676E6972616562;
}

uint64_t sub_23A9699CC()
{
  return 0x4264696C61567369;
}

uint64_t sub_23A9699F0()
{
  return 0x616542564F466E69;
}

uint64_t sub_23A969A10()
{
  return 0x564F466E497369;
}

uint64_t sub_23A969A28()
{
  return 0x636165526E497369;
}

unint64_t sub_23A969A48()
{
  return 0xD000000000000012;
}

unint64_t sub_23A969AA0()
{
  return 0xD000000000000010;
}

uint64_t sub_23A969AC0()
{
  return 0x6C6F687365726874;
}

uint64_t sub_23A969ADC()
{
  return 0;
}

void sub_23A969AE8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23A969AF4()
{
  sub_23A96BD40();
  return sub_23AA33830();
}

uint64_t sub_23A969B1C()
{
  sub_23A96BD40();
  return sub_23AA3383C();
}

uint64_t sub_23A969B44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23A969B70()
{
  sub_23A96BCFC();
  return sub_23AA33830();
}

uint64_t sub_23A969B98()
{
  sub_23A96BCFC();
  return sub_23AA3383C();
}

uint64_t _s11FMFindingUI0A4TypeO9hashValueSivg_0()
{
  sub_23AA337D0();
  sub_23AA337DC();
  return sub_23AA33800();
}

uint64_t sub_23A969C04()
{
  sub_23AA337D0();
  sub_23AA337DC();
  return sub_23AA33800();
}

uint64_t sub_23A969C44(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_23A96963C(a1, *v1);
}

uint64_t sub_23A969C5C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A96AFB4(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_23A969C88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23A96980C(*a1);
  v5 = v4;
  if (v3 == sub_23A96980C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23A969D10()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23A96980C(v1);
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A969D70()
{
  unsigned __int8 *v0;

  sub_23A96980C(*v0);
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A969DB0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23A96980C(v1);
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A969E0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A96B2E0();
  *a1 = result;
  return result;
}

uint64_t sub_23A969E38@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A96980C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23A969E60()
{
  unsigned __int8 *v0;

  return sub_23A969974(*v0);
}

uint64_t sub_23A969E68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A96B2E0();
  *a1 = result;
  return result;
}

void sub_23A969E8C(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_23A969E98()
{
  sub_23A96C130();
  return sub_23AA33830();
}

uint64_t sub_23A969EC0()
{
  sub_23A96C130();
  return sub_23AA3383C();
}

uint64_t sub_23A969EE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  char v12[16];
  _BYTE v13[16];

  v3 = v1;
  v5 = sub_23A964084(&qword_2569D5778);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A96C130();
  sub_23AA33818();
  sub_23A96C1B8(v3, (uint64_t)v13, &qword_2569D5780);
  sub_23A96C1B8((uint64_t)v13, (uint64_t)v12, &qword_2569D5780);
  v11 = 0;
  sub_23A964084(&qword_2569D5780);
  sub_23A96C1FC();
  sub_23AA336E0();
  if (!v2)
  {
    v12[0] = 1;
    sub_23AA336BC();
    v12[0] = 2;
    sub_23AA336B0();
    v12[0] = 3;
    sub_23AA336BC();
    v12[0] = 4;
    sub_23AA336B0();
    v12[0] = 5;
    sub_23AA336B0();
    v12[0] = 6;
    sub_23AA336BC();
    v12[0] = 7;
    sub_23AA336B0();
    v12[0] = 8;
    sub_23AA336B0();
    v12[0] = 9;
    sub_23AA336B0();
    v12[0] = 10;
    sub_23AA336BC();
    v12[0] = *(_BYTE *)(v3 + 97);
    v11 = 11;
    sub_23A96C29C();
    sub_23AA336E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23A96A1E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  double v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  sub_23A964084((uint64_t *)&unk_2569D6690);
  v1 = swift_allocObject();
  v2 = (_QWORD *)v1;
  *(_OWORD *)(v1 + 16) = xmmword_23AA36A90;
  v3 = *(double *)v0;
  v4 = *(unsigned __int8 *)(v0 + 8);
  v5 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v1 + 64) = v5;
  if (v4)
    v3 = -1.0;
  *(double *)(v1 + 32) = v3;
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 32);
    v7 = MEMORY[0x24BEE1448];
    v8 = MEMORY[0x24BEE13C8];
  }
  else
  {
    v6 = -1;
    v7 = MEMORY[0x24BEE17F0];
    v8 = MEMORY[0x24BEE1768];
  }
  *(_QWORD *)(v1 + 96) = v8;
  *(_QWORD *)(v1 + 104) = v7;
  *(_QWORD *)(v1 + 72) = v6;
  v9 = *(_BYTE *)(v0 + 56);
  v10 = sub_23A9640C4();
  v11 = 1702195828;
  if ((v9 & 1) != 0)
    v12 = 1702195828;
  else
    v12 = 0x65736C6166;
  if ((v9 & 1) != 0)
    v13 = 0xE400000000000000;
  else
    v13 = 0xE500000000000000;
  v14 = MEMORY[0x24BEE0D00];
  v2[17] = MEMORY[0x24BEE0D00];
  v2[18] = v10;
  v2[14] = v12;
  v2[15] = v13;
  if ((*(_BYTE *)(v0 + 57) & 1) != 0)
  {
    v15 = 0xE400000000000000;
  }
  else
  {
    v11 = 0x65736C6166;
    v15 = 0xE500000000000000;
  }
  v2[22] = v14;
  v2[23] = v10;
  v2[19] = v11;
  v2[20] = v15;
  return sub_23AA32FE4();
}

uint64_t sub_23A96A308()
{
  uint64_t v0;
  double v2;
  double v3;
  double v4;
  _BYTE v5[16];
  double v6;
  char v7;

  sub_23A96C1B8(v0, (uint64_t)v5, &qword_2569D5780);
  sub_23A96C1B8((uint64_t)v5, (uint64_t)&v6, &qword_2569D5780);
  if ((v7 & 1) != 0)
    return 0;
  v2 = v6;
  if ((*(_BYTE *)(v0 + 97) & 1) != 0)
  {
    if (v6 < 0.0)
    {
      v2 = 0.0;
      if ((*(_BYTE *)(v0 + 56) & 1) == 0 && (*(_BYTE *)(v0 + 57) & 1) == 0)
      {
        v3 = *(double *)(v0 + 32);
        v4 = *(double *)(v0 + 48);
        if (v3 < -v4 && v4 + -180.0 >= v3 && v4 < v3)
        {
          if (v3 >= 180.0 - v4)
            v2 = 0.0;
          else
            v2 = 0.0;
        }
      }
    }
  }
  else if (v6 < 0.0)
  {
    v2 = 0.0;
  }
  return *(_QWORD *)&v2;
}

uint64_t sub_23A96A54C()
{
  uint64_t v0;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  _BYTE v9[16];
  double v10;
  char v11;

  sub_23A96C1B8(v0, (uint64_t)v9, &qword_2569D5780);
  sub_23A96C1B8((uint64_t)v9, (uint64_t)&v10, &qword_2569D5780);
  if ((v11 & 1) != 0)
    return 0;
  v2 = v10;
  if ((*(_BYTE *)(v0 + 97) & 1) != 0)
  {
    v3 = 3.45599309;
  }
  else
  {
    if (qword_2569D4B70 != -1)
      swift_once();
    v4 = *(double *)&qword_2569E0500;
    if (qword_2569D4B90 != -1)
    {
      v8 = qword_2569E0500;
      swift_once();
      v4 = *(double *)&v8;
    }
    v3 = v4 * *(double *)&qword_2569E0520;
  }
  v5 = (v2 - v3) / vabdd_f64(1.2192, v3);
  v6 = 1.0 - v5;
  if (v5 >= 1.0)
    v6 = 0.0;
  if (v5 < 0.0)
    v7 = 1.0;
  else
    v7 = v6;
  return *(_QWORD *)&v7;
}

uint64_t sub_23A96A668(char a1)
{
  uint64_t v1;
  double v4;
  _BOOL4 v5;
  double v6;
  double v7;
  double v8;
  int v9;
  uint64_t v10;
  _BYTE v11[16];
  double v12;
  char v13;

  sub_23A96C1B8(v1, (uint64_t)v11, &qword_2569D5780);
  sub_23A96C1B8((uint64_t)v11, (uint64_t)&v12, &qword_2569D5780);
  if ((v13 & 1) != 0)
    return 2;
  v4 = v12;
  if (*(_BYTE *)(v1 + 97) == 1)
  {
    v5 = v12 >= 2.3622;
    if ((a1 & 1) != 0)
      v6 = 2.267712;
    else
      v6 = 3.45599309;
  }
  else
  {
    if (qword_2569D4B70 != -1)
      swift_once();
    v7 = *(double *)&qword_2569E0500;
    v8 = *(double *)&qword_2569E0500;
    if (qword_2569D4B90 != -1)
    {
      v10 = qword_2569E0500;
      swift_once();
      v7 = *(double *)&v10;
      v8 = *(double *)&qword_2569E0500;
    }
    v5 = v8 * 1.25 <= v4;
    if ((a1 & 1) != 0)
      v6 = v8 * 1.2;
    else
      v6 = v7 * *(double *)&qword_2569E0520;
  }
  if (v5)
    v9 = 256;
  else
    v9 = 0;
  return v9 | (v4 < v6);
}

uint64_t sub_23A96A7C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = v0;
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_23AA337E8();
    v2 = *(void **)(v0 + 16);
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_23AA337E8();
    v4 = *(void **)(v0 + 24);
    if (v4)
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_23AA337E8();
  sub_23AA337F4();
  v2 = *(void **)(v0 + 16);
  if (!v2)
    goto LABEL_6;
LABEL_3:
  sub_23AA337E8();
  v3 = v2;
  sub_23AA33398();

  v4 = *(void **)(v1 + 24);
  if (v4)
  {
LABEL_4:
    sub_23AA337E8();
    v5 = v4;
    sub_23AA33398();

    goto LABEL_8;
  }
LABEL_7:
  sub_23AA337E8();
LABEL_8:
  sub_23AA337F4();
  sub_23AA337E8();
  sub_23AA337F4();
  sub_23AA337E8();
  sub_23AA337E8();
  sub_23AA337F4();
  sub_23AA337E8();
  sub_23AA337E8();
  sub_23AA337E8();
  sub_23AA337F4();
  if (*(_BYTE *)(v1 + 96) == 1)
  {
    sub_23AA337E8();
  }
  else
  {
    sub_23AA337E8();
    sub_23AA337DC();
  }
  return sub_23AA337DC();
}

uint64_t sub_23A96A968(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  __int16 v12;
  _OWORD v13[6];
  __int16 v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_WORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_WORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_23A96ACA0((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t sub_23A96A9D0()
{
  sub_23AA337D0();
  sub_23A96A7C4();
  return sub_23AA33800();
}

uint64_t sub_23A96AA10()
{
  sub_23AA337D0();
  sub_23A96A7C4();
  return sub_23AA33800();
}

__n128 sub_23A96AA48@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  __int16 v8;

  sub_23A96BD84(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_WORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_23A96AAA4(_QWORD *a1)
{
  return sub_23A969EE8(a1);
}

unint64_t sub_23A96AAF4()
{
  unint64_t result;

  result = qword_2569D56D0;
  if (!qword_2569D56D0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3642C, &type metadata for FMFindingDistance);
    atomic_store(result, (unint64_t *)&qword_2569D56D0);
  }
  return result;
}

unint64_t sub_23A96AB3C()
{
  unint64_t result;

  result = qword_2569D56D8;
  if (!qword_2569D56D8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36484, &type metadata for FMFindingGuide);
    atomic_store(result, (unint64_t *)&qword_2569D56D8);
  }
  return result;
}

unint64_t sub_23A96AB84()
{
  unint64_t result;

  result = qword_2569D56E0;
  if (!qword_2569D56E0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36454, &type metadata for FMFindingGuide);
    atomic_store(result, (unint64_t *)&qword_2569D56E0);
  }
  return result;
}

unint64_t sub_23A96ABCC()
{
  unint64_t result;

  result = qword_2569D56E8;
  if (!qword_2569D56E8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA364AC, &type metadata for FMFindingGuide);
    atomic_store(result, (unint64_t *)&qword_2569D56E8);
  }
  return result;
}

unint64_t sub_23A96AC14()
{
  unint64_t result;

  result = qword_2569D56F0;
  if (!qword_2569D56F0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA364E4, &type metadata for FMFindingGuide);
    atomic_store(result, (unint64_t *)&qword_2569D56F0);
  }
  return result;
}

unint64_t sub_23A96AC5C()
{
  unint64_t result;

  result = qword_2569D56F8;
  if (!qword_2569D56F8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3669C, &type metadata for Threshold);
    atomic_store(result, (unint64_t *)&qword_2569D56F8);
  }
  return result;
}

uint64_t sub_23A96ACA0(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;

  v4 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      goto LABEL_33;
LABEL_7:
    v5 = *(void **)(a1 + 16);
    v6 = *(void **)(a2 + 16);
    if (v5)
    {
      if (!v6)
        goto LABEL_33;
      sub_23A968488(0, (unint64_t *)&unk_2569D8C00);
      v7 = v6;
      v8 = v5;
      v9 = sub_23AA3338C();

      if ((v9 & 1) == 0)
        goto LABEL_33;
    }
    else if (v6)
    {
      goto LABEL_33;
    }
    v10 = *(void **)(a1 + 24);
    v11 = *(void **)(a2 + 24);
    if (v10)
    {
      if (v11)
      {
        sub_23A968488(0, &qword_2569D5758);
        v12 = v11;
        v13 = v10;
        v14 = sub_23AA3338C();

        if ((v14 & 1) != 0)
        {
LABEL_17:
          if (*(double *)(a1 + 32) == *(double *)(a2 + 32)
            && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0
            && *(double *)(a1 + 48) == *(double *)(a2 + 48)
            && ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56)) & 1) == 0
            && ((*(unsigned __int8 *)(a1 + 57) ^ *(unsigned __int8 *)(a2 + 57)) & 1) == 0
            && *(double *)(a1 + 64) == *(double *)(a2 + 64)
            && ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) == 0
            && ((*(unsigned __int8 *)(a1 + 73) ^ *(unsigned __int8 *)(a2 + 73)) & 1) == 0
            && ((*(unsigned __int8 *)(a1 + 74) ^ *(unsigned __int8 *)(a2 + 74)) & 1) == 0
            && *(double *)(a1 + 80) == *(double *)(a2 + 80))
          {
            v4 = *(_BYTE *)(a2 + 96);
            if ((*(_BYTE *)(a1 + 96) & 1) != 0)
            {
              if (!*(_BYTE *)(a2 + 96))
                return v4 & 1;
              goto LABEL_35;
            }
            if (*(_QWORD *)(a1 + 88) != *(_QWORD *)(a2 + 88))
              v4 = 1;
            if ((v4 & 1) == 0)
            {
LABEL_35:
              v4 = *(_BYTE *)(a1 + 97) ^ *(_BYTE *)(a2 + 97) ^ 1;
              return v4 & 1;
            }
          }
        }
      }
    }
    else if (!v11)
    {
      goto LABEL_17;
    }
LABEL_33:
    v4 = 0;
    return v4 & 1;
  }
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_7;
  return v4 & 1;
}

uint64_t sub_23A96AE94(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_23A96AECC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v2 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706F6570 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A96AFB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = sub_23A964084(&qword_2569D5738);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23A964084(&qword_2569D5740);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A964084(&qword_2569D5748);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A96BCB8();
  v10 = v26;
  sub_23AA3380C();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_23AA33680();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_23AA3353C();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    sub_23A964084(&qword_2569D5750);
    *v19 = &type metadata for Threshold;
    sub_23AA33620();
    sub_23AA33530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    sub_23A963B3C((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_23A96BCFC();
    sub_23AA33614();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_23A96BD40();
    sub_23AA33614();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  sub_23A963B3C((uint64_t)v21);
  return v6;
}

uint64_t sub_23A96B2E0()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_23A96B328@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  unint64_t v14;
  uint64_t v15;
  int v16;
  double v17;
  char v18;
  int v19;
  double v20;
  double v21;
  uint64_t *v22;
  BOOL v23;
  float v24;
  int v25;
  float v26;
  uint64_t result;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  double v32;
  double v33;
  BOOL v34;
  double v35;
  double v36;
  unint64_t v37;
  char v38[56];
  unint64_t v39;
  unint64_t v40;
  char v41[16];
  uint64_t v42;
  char v43;
  double v44;
  char v45;
  uint64_t v46;
  char v47;

  sub_23A96C1B8(a5, (uint64_t)v38, &qword_2569D5700);
  v14 = v39;
  v37 = v40;
  if ((a2 & 1) == 0)
  {
    sub_23A96C1B8(a5, (uint64_t)&v44, &qword_2569D5700);
    LODWORD(v15) = v46;
    if (v46 == 1)
    {
      v16 = 1;
    }
    else
    {
      v16 = v47 & 1;
      v15 = (v14 >> 8) & 1;
    }
LABEL_8:
    v18 = 0;
    v17 = a1;
    v19 = a6 & 1;
    if ((a3 & 0x100000000) == 0)
      goto LABEL_9;
    goto LABEL_16;
  }
  sub_23A96C1B8(a5, (uint64_t)&v44, &qword_2569D5700);
  LODWORD(v15) = v46;
  v17 = 0.0;
  if (v46 == 1)
  {
    a1 = 0.0;
    v16 = 1;
  }
  else
  {
    a1 = v44;
    v16 = v14 & 1;
    v15 = (v14 >> 8) & 1;
    if ((v45 & 1) == 0)
      goto LABEL_8;
  }
  v18 = 1;
  v19 = a6 & 1;
  if ((a3 & 0x100000000) == 0)
  {
LABEL_9:
    v20 = *(float *)&a3 / 3.14159265 * -180.0;
    if ((v18 & 1) == 0)
      goto LABEL_10;
LABEL_17:
    v23 = 0;
    goto LABEL_27;
  }
LABEL_16:
  v20 = 1.79769313e308;
  if ((v18 & 1) != 0)
    goto LABEL_17;
LABEL_10:
  v21 = a1;
  if (!(_DWORD)v15)
  {
    if (!v19)
    {
      if (qword_2569D4B70 != -1)
      {
        swift_once();
        v21 = a1;
      }
      v22 = &qword_2569E0500;
      goto LABEL_22;
    }
    *(float *)&v25 = 1.8898;
LABEL_25:
    v24 = *(float *)&v25;
    goto LABEL_26;
  }
  if (v19)
  {
    *(float *)&v25 = 1.9842;
    goto LABEL_25;
  }
  if (qword_2569D4B78 != -1)
  {
    swift_once();
    v21 = a1;
  }
  v22 = &qword_2569E0508;
LABEL_22:
  v24 = *(double *)v22;
LABEL_26:
  v26 = v21;
  v23 = v24 > v26;
LABEL_27:
  if (a4 != 5)
  {
    result = sub_23A96BC60(a5);
    if (a4 == 2)
    {
      LOBYTE(v30) = 0;
      LOBYTE(v28) = 1;
    }
    else
    {
      LOBYTE(v28) = a4 == 4;
      LOBYTE(v30) = 1;
      if (a4 == 1)
      {
        v29 = 0;
        goto LABEL_37;
      }
      if (a4 != 3)
        LOBYTE(v30) = a4 == 4;
    }
    v29 = v28;
    LOBYTE(v28) = v30;
    LOBYTE(v30) = a4 == 0;
    goto LABEL_37;
  }
  result = sub_23A96C1B8(a5, (uint64_t)v41, &qword_2569D5700);
  if (v42 == 1)
  {
    LOBYTE(v28) = 0;
    v29 = 0;
    LOBYTE(v30) = 1;
  }
  else
  {
    v31 = v43;
    result = sub_23A96BC60(a5);
    v29 = v31 & 1;
    v28 = (v37 >> 8) & 1;
    v30 = (v37 >> 16) & 1;
  }
LABEL_37:
  v32 = (v17 + -1.0) / 9.0;
  v33 = fmin(v32, 1.0);
  v34 = v32 < 0.0;
  v35 = 0.0;
  if (!v34)
    v35 = v33;
  v36 = v35 * 45.0 + (1.0 - v35) * 20.0;
  *(double *)a7 = a1;
  if (v16)
    v36 = v36 * 1.1;
  *(_BYTE *)(a7 + 8) = v18;
  *(_QWORD *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = 0;
  *(double *)(a7 + 32) = v20;
  *(_BYTE *)(a7 + 40) = (a3 & 0x100000000) == 0;
  *(double *)(a7 + 48) = v36;
  *(_BYTE *)(a7 + 56) = fabs(v20) <= v36;
  *(_BYTE *)(a7 + 57) = v23;
  *(double *)(a7 + 64) = v17;
  *(_BYTE *)(a7 + 72) = v29;
  *(_BYTE *)(a7 + 73) = v28;
  *(_BYTE *)(a7 + 74) = v30;
  *(_QWORD *)(a7 + 80) = 0;
  *(_QWORD *)(a7 + 88) = 0;
  *(_BYTE *)(a7 + 96) = 1;
  *(_BYTE *)(a7 + 97) = v19;
  return result;
}

double sub_23A96B688@<D0>(double a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char v24;
  double v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  float v33;
  float v34;
  float v35;
  uint64_t *v36;
  id v37;
  id v38;
  BOOL v39;
  double v40;
  uint64_t v41;
  id v42;
  id v43;
  double v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  float v53;
  float v54;
  double v55;
  id v56;
  id v57;
  id v58;
  id v59;
  double v60;
  double v61;
  double v62;
  BOOL v63;
  double v64;
  double v65;
  double v66;
  void *v67;
  id v68;
  id v69;
  char v70;
  char v71;
  char v72;
  float v73;
  double result;
  float v75;
  float v76;
  char v77;
  uint64_t v78;
  float v79;
  int v80;
  double v81;
  int v82;
  void *v83;
  float v84;
  __int16 v85;
  float v86;
  char v87;
  float v88;
  char v89[56];
  unint64_t v90;
  char v91[16];
  uint64_t v92;
  char v93;
  char v94[16];
  uint64_t v95;
  char v96;
  char v97[16];
  uint64_t v98;
  id v99;
  char v100[16];
  id v101;
  double v102;
  char v103;
  uint64_t v104;

  sub_23A96C1B8(a5, (uint64_t)v89, &qword_2569D5700);
  v14 = v90;
  if ((a2 & 1) != 0)
  {
    sub_23A96C1B8(a5, (uint64_t)&v102, &qword_2569D5700);
    if (v104 == 1)
    {
      a1 = 0.0;
      v15 = 1;
      v16 = a3;
      if (a3)
        goto LABEL_11;
    }
    else
    {
      a1 = v102;
      v15 = v103 & 1;
      v16 = a3;
      if (a3)
        goto LABEL_11;
    }
  }
  else
  {
    v15 = 0;
    v16 = a3;
    if (a3)
      goto LABEL_11;
  }
  sub_23A96C1B8(a5, (uint64_t)v100, &qword_2569D5700);
  v16 = v101;
  if (v101 == (id)1)
    v16 = 0;
  else
    v17 = v101;
LABEL_11:
  v83 = v16;
  v18 = a3;
  v19 = a4;
  if (!a4)
  {
    sub_23A96C1B8(a5, (uint64_t)v97, &qword_2569D5700);
    if (v98 == 1)
    {
      v19 = 0;
    }
    else
    {
      v19 = v99;
      v20 = v99;
    }
  }
  v82 = a6 & 1;
  v88 = 0.0;
  v87 = 0;
  sub_23A96C1B8(a5, (uint64_t)v94, &qword_2569D5700);
  if (v95 == 1)
  {
    LOBYTE(v21) = 1;
    v80 = 1;
  }
  else
  {
    v80 = v96 & 1;
    v21 = (v14 >> 8) & 1;
  }
  v22 = v19;
  v86 = 0.0;
  v85 = 0;
  sub_23A96C1B8(a5, (uint64_t)v91, &qword_2569D5700);
  v84 = 0.0;
  v23 = v18;
  v81 = a1;
  if (!v83 || !v22)
  {
    if ((v15 & 1) == 0)
    {
      v40 = a1;
      if ((v21 & 1) != 0)
      {
        if (v82)
        {
          v56 = a4;
          v57 = v18;
          v44 = 1.984248;
        }
        else
        {
          v41 = qword_2569D4B78;
          v42 = v18;
          v43 = a4;
          if (v41 != -1)
            swift_once();
          v44 = *(double *)&qword_2569E0508;
        }
      }
      else if (v82)
      {
        v58 = a4;
        v59 = v18;
        v44 = 1.88976;
      }
      else
      {
        v45 = qword_2569D4B70;
        v46 = v18;
        v47 = a4;
        if (v45 != -1)
          swift_once();
        v44 = *(double *)&qword_2569E0500;
      }
      v77 = 0;
      v39 = v44 >= v40;
      goto LABEL_51;
    }
    goto LABEL_32;
  }
  if ((v15 & 1) != 0)
  {
LABEL_32:
    v37 = a4;
    v38 = v18;
    v39 = 0;
    v77 = 0;
    goto LABEL_51;
  }
  v24 = (v92 == 1) | v93;
  v25 = a1;
  if (v82)
  {
    v48 = qword_2569D4B98;
    v49 = v18;
    v50 = a4;
    v51 = v83;
    v52 = v22;
    v35 = 2.5;
    if (v48 != -1)
    {
      swift_once();
      v35 = 2.5;
    }
    v36 = &qword_2569E0528;
    v34 = 1.9842;
    v33 = 1.8898;
  }
  else
  {
    v26 = qword_2569D4B70;
    v27 = v18;
    v28 = a4;
    v29 = v83;
    v30 = v22;
    if (v26 != -1)
      swift_once();
    v31 = *(double *)&qword_2569E0500;
    if (qword_2569D4B78 != -1)
      swift_once();
    v32 = *(double *)&qword_2569E0508;
    if (qword_2569D4B80 != -1)
    {
      v78 = qword_2569E0508;
      swift_once();
      v32 = *(double *)&v78;
    }
    v33 = v31;
    v34 = v32;
    v35 = *(double *)&qword_2569E0510;
    if (qword_2569D4B88 != -1)
    {
      v76 = *(double *)&qword_2569E0510;
      v79 = v31;
      v75 = v32;
      swift_once();
      v35 = v76;
      v33 = v79;
      v34 = v75;
    }
    v36 = &qword_2569E0518;
  }
  v53 = v25;
  v54 = *(double *)v36;
  v39 = sub_23A968584(v83, v53, v33, v34, v35, v54, (uint64_t)v22, v21, &v88, &v87, (BOOL *)&v85 + 1, (BOOL *)&v85, &v86, &v84, v24 & 1);

  if (v87 == 1)
  {
    v55 = v88 / 3.14159265 * -180.0;
    v77 = 1;
    goto LABEL_52;
  }
  v77 = 0;
LABEL_51:
  v55 = 1.79769313e308;
LABEL_52:
  v60 = v86;
  v61 = (v86 + -1.0) / 9.0;
  v62 = fmin(v61, 1.0);
  v63 = v61 < 0.0;
  v64 = 0.0;
  if (!v63)
    v64 = v62;
  v65 = v64 * 45.0 + (1.0 - v64) * 20.0;
  if (v80)
    v66 = v65 * 1.1;
  else
    v66 = v65;
  v67 = v22;
  v68 = v22;
  v69 = v83;
  sub_23A96BC60(a5);

  v70 = HIBYTE(v85);
  v71 = v85;
  v72 = (HIBYTE(v85) | v85) ^ 1;
  v73 = v84;

  result = v73;
  *(double *)a7 = v81;
  *(_BYTE *)(a7 + 8) = v15;
  *(_QWORD *)(a7 + 16) = v83;
  *(_QWORD *)(a7 + 24) = v67;
  *(double *)(a7 + 32) = v55;
  *(_BYTE *)(a7 + 40) = v77;
  *(double *)(a7 + 48) = v66;
  *(_BYTE *)(a7 + 56) = fabs(v55) <= v66;
  *(_BYTE *)(a7 + 57) = v39;
  *(double *)(a7 + 64) = v60;
  *(_BYTE *)(a7 + 72) = v70;
  *(_BYTE *)(a7 + 73) = v71;
  *(_BYTE *)(a7 + 74) = v72;
  *(double *)(a7 + 80) = v73;
  *(_QWORD *)(a7 + 88) = 0;
  *(_BYTE *)(a7 + 96) = 1;
  *(_BYTE *)(a7 + 97) = v82;
  return result;
}

uint64_t sub_23A96BC60(uint64_t a1)
{
  sub_23A963B0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24));
  return a1;
}

unint64_t sub_23A96BCB8()
{
  unint64_t result;

  result = qword_2569D5720;
  if (!qword_2569D5720)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36A3C, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D5720);
  }
  return result;
}

unint64_t sub_23A96BCFC()
{
  unint64_t result;

  result = qword_2569D5728;
  if (!qword_2569D5728)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA369EC, &type metadata for Threshold.PeopleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D5728);
  }
  return result;
}

unint64_t sub_23A96BD40()
{
  unint64_t result;

  result = qword_2569D5730;
  if (!qword_2569D5730)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3699C, &type metadata for Threshold.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D5730);
  }
  return result;
}

uint64_t sub_23A96BD84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v5 = sub_23A964084(&qword_2569D5760);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A96C130();
  sub_23AA3380C();
  if (v2)
    return sub_23A963B3C((uint64_t)a1);
  v45 = 0;
  sub_23AA33650();
  v10 = v9;
  v44 = 1;
  sub_23AA33650();
  v12 = v11;
  v43 = 2;
  v13 = sub_23AA33644();
  v42 = 3;
  sub_23AA33650();
  v15 = v14;
  v41 = 4;
  v32 = sub_23AA33644();
  v40 = 5;
  v31 = sub_23AA33644();
  v39 = 6;
  sub_23AA33650();
  v17 = v16;
  v38 = 7;
  v30 = sub_23AA33644();
  v37 = 8;
  v29 = sub_23AA33644();
  v36 = 9;
  v28 = sub_23AA33644();
  v35 = 10;
  sub_23AA33650();
  v19 = v18;
  v33 = 11;
  sub_23A96C174();
  sub_23AA33674();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v27 = v13 & 1;
  v32 &= 1u;
  v20 = v31 & 1;
  v21 = v30 & 1;
  v22 = v29 & 1;
  v23 = v28 & 1;
  v24 = v34;
  result = sub_23A963B3C((uint64_t)a1);
  *(_QWORD *)a2 = v10;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v12;
  *(_BYTE *)(a2 + 40) = v27;
  *(_QWORD *)(a2 + 48) = v15;
  *(_BYTE *)(a2 + 56) = v32;
  *(_BYTE *)(a2 + 57) = v20;
  *(_QWORD *)(a2 + 64) = v17;
  *(_BYTE *)(a2 + 72) = v21;
  *(_BYTE *)(a2 + 73) = v22;
  *(_BYTE *)(a2 + 74) = v23;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = 1;
  *(_BYTE *)(a2 + 97) = v24;
  return result;
}

unint64_t sub_23A96C130()
{
  unint64_t result;

  result = qword_2569D5768;
  if (!qword_2569D5768)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3694C, &type metadata for FMFindingDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D5768);
  }
  return result;
}

unint64_t sub_23A96C174()
{
  unint64_t result;

  result = qword_2569D5770;
  if (!qword_2569D5770)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3660C, &type metadata for Threshold);
    atomic_store(result, (unint64_t *)&qword_2569D5770);
  }
  return result;
}

uint64_t sub_23A96C1B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23A964084(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_23A96C1FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2569D5788;
  if (!qword_2569D5788)
  {
    v1 = sub_23A96C258(&qword_2569D5780);
    v2 = MEMORY[0x24BEE13D8];
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569D5788);
  }
  return result;
}

uint64_t sub_23A96C258(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B85DA4C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23A96C29C()
{
  unint64_t result;

  result = qword_2569D5790;
  if (!qword_2569D5790)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36634, &type metadata for Threshold);
    atomic_store(result, (unint64_t *)&qword_2569D5790);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingDistance.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingDistance.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23A96C3BC + 4 * byte_23AA3631D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23A96C3F0 + 4 * byte_23AA36318[v4]))();
}

uint64_t sub_23A96C3F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96C3F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A96C400);
  return result;
}

uint64_t sub_23A96C40C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A96C414);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23A96C418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96C420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96C42C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23A96C434(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingDistance.CodingKeys()
{
  return &type metadata for FMFindingDistance.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FMFindingConvergenceHint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11FMFindingUI9ThresholdOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A96C528 + 4 * byte_23AA36327[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A96C55C + 4 * byte_23AA36322[v4]))();
}

uint64_t sub_23A96C55C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96C564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A96C56CLL);
  return result;
}

uint64_t sub_23A96C578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A96C580);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A96C584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96C58C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23A96C598(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Threshold.CodingKeys()
{
  return &type metadata for Threshold.CodingKeys;
}

ValueMetadata *type metadata accessor for Threshold.DefaultCodingKeys()
{
  return &type metadata for Threshold.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for Threshold.PeopleCodingKeys()
{
  return &type metadata for Threshold.PeopleCodingKeys;
}

unint64_t sub_23A96C5D8()
{
  unint64_t result;

  result = qword_2569D5798;
  if (!qword_2569D5798)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36834, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D5798);
  }
  return result;
}

unint64_t sub_23A96C620()
{
  unint64_t result;

  result = qword_2569D57A0;
  if (!qword_2569D57A0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36924, &type metadata for FMFindingDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57A0);
  }
  return result;
}

unint64_t sub_23A96C668()
{
  unint64_t result;

  result = qword_2569D57A8;
  if (!qword_2569D57A8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3685C, &type metadata for FMFindingDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57A8);
  }
  return result;
}

unint64_t sub_23A96C6B0()
{
  unint64_t result;

  result = qword_2569D57B0;
  if (!qword_2569D57B0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36884, &type metadata for FMFindingDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57B0);
  }
  return result;
}

unint64_t sub_23A96C6F8()
{
  unint64_t result;

  result = qword_2569D57B8;
  if (!qword_2569D57B8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36754, &type metadata for Threshold.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57B8);
  }
  return result;
}

unint64_t sub_23A96C740()
{
  unint64_t result;

  result = qword_2569D57C0;
  if (!qword_2569D57C0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3677C, &type metadata for Threshold.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57C0);
  }
  return result;
}

unint64_t sub_23A96C788()
{
  unint64_t result;

  result = qword_2569D57C8;
  if (!qword_2569D57C8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36704, &type metadata for Threshold.PeopleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57C8);
  }
  return result;
}

unint64_t sub_23A96C7D0()
{
  unint64_t result;

  result = qword_2569D57D0;
  if (!qword_2569D57D0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3672C, &type metadata for Threshold.PeopleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57D0);
  }
  return result;
}

unint64_t sub_23A96C818()
{
  unint64_t result;

  result = qword_2569D57D8;
  if (!qword_2569D57D8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA367A4, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57D8);
  }
  return result;
}

unint64_t sub_23A96C860()
{
  unint64_t result;

  result = qword_2569D57E0;
  if (!qword_2569D57E0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA367CC, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D57E0);
  }
  return result;
}

void sub_23A96C8BC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, sel_navigationBar);
  objc_msgSend(v1, sel_setTranslucent_, 1);

  v2 = objc_msgSend(v0, sel_navigationBar);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  objc_msgSend(v2, sel_setBackgroundImage_forBarMetrics_, v3, 0);

  v4 = objc_msgSend(v0, sel_navigationBar);
  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  v6 = objc_msgSend(v0, sel_navigationBar);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  objc_msgSend(v6, sel_setShadowImage_, v7);

}

char *sub_23A96CA10(unsigned __int8 *a1, __int16 *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, double a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  char *v17;
  int v19;
  __int16 v20;
  uint64_t v21;
  objc_class *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  __int128 *v43;
  int v44;
  uint64_t v45;
  __int128 v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  int v58;
  id v59;
  uint64_t ObjCClassFromMetadata;
  void *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  double v66;
  id v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  id v72;
  id v73;
  objc_class *v74;
  char *v75;
  char *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  void *v95;
  double v96;
  double *v97;
  double v98;
  double *v99;
  double v100;
  double *v101;
  double v102;
  double *v103;
  double v104;
  double v105;
  double *v106;
  double v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  double v112;
  double v113;
  double *v114;
  char *v117;
  char *v118;
  __int16 v119;
  uint64_t v122;
  uint64_t v124;
  id v126;
  void *v128;
  uint64_t v129;
  objc_super v130;

  v19 = *a1;
  v20 = *a2;
  v21 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
  v22 = (objc_class *)type metadata accessor for FMPFSKNode();
  v23 = objc_allocWithZone(v22);
  v24 = v17;
  *(_QWORD *)&v17[v21] = objc_msgSend(v23, sel_init);
  v25 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode;
  *(_QWORD *)&v24[v25] = objc_msgSend(objc_allocWithZone(v22), sel_init);
  v26 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
  *(_QWORD *)&v24[v26] = objc_msgSend(objc_allocWithZone(v22), sel_init);
  v27 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  type metadata accessor for FMPFSKSpriteNode();
  v122 = v27;
  *(_QWORD *)&v24[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode] = 0;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] = 0;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction] = 0;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDiskRadius] = 1;
  v28 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
  *(_QWORD *)v28 = 0;
  v118 = v28;
  v28[8] = 1;
  v29 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
  *(_QWORD *)v29 = 0;
  v29[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDotScale] = 1;
  v30 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  v31 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyAngle] = 1;
  v32 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  v33 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOpacity] = 1;
  v34 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  v35 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyBrightness] = 1;
  v36 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness];
  *(_QWORD *)v36 = 0;
  v117 = v36;
  v36[8] = 1;
  v37 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOffset] = 1;
  v38 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v38[16] = 1;
  v39 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading] = 0;
  v40 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor];
  *(_QWORD *)v40 = 0;
  v40[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] = 1;
  v41 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor];
  *(_QWORD *)v41 = 0;
  v41[8] = 1;
  v42 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor];
  *(_QWORD *)v42 = 0;
  v42[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_experienceType] = v19;
  v119 = v20;
  *(_WORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_findingTechnology] = v20;
  if (v19 == 1)
  {
    if (qword_2569D4AD0 != -1)
      swift_once();
    v43 = &xmmword_2569D61D8;
  }
  else
  {
    if (qword_2569D4AC8 != -1)
      swift_once();
    v43 = &xmmword_2569D6180;
  }
  v44 = a7 & 1;
  v45 = *((_QWORD *)v43 + 10);
  v46 = v43[4];
  v47 = (void *)*((_QWORD *)v43 + 7);
  v49 = *((_QWORD *)v43 + 5);
  v48 = *((_QWORD *)v43 + 6);
  v50 = *(__int128 *)((char *)v43 + 24);
  v51 = *((_QWORD *)v43 + 2);
  v52 = *((_QWORD *)v43 + 1);
  v53 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style];
  *(_QWORD *)v53 = *(_QWORD *)v43;
  *((_QWORD *)v53 + 1) = v52;
  *((_QWORD *)v53 + 2) = v51;
  *(_OWORD *)(v53 + 24) = v50;
  *((_QWORD *)v53 + 5) = v49;
  *((_QWORD *)v53 + 6) = v48;
  *((_QWORD *)v53 + 7) = v47;
  *((_OWORD *)v53 + 4) = v46;
  *((_QWORD *)v53 + 10) = v45;
  *(double *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotDiameter] = a9;
  v54 = (void *)objc_opt_self();
  v55 = v47;
  v56 = objc_msgSend(v54, sel_mainScreen);
  v57 = (void *)sub_23AA32FB4();
  v58 = MGGetSInt32Answer();

  *(double *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_pixelsPerInch] = (double)v58;
  if (a5)
    v59 = a5;
  else
    v59 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor] = v59;
  type metadata accessor for FMPFView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v61 = (void *)objc_opt_self();
  v126 = a5;
  v62 = objc_msgSend(v61, sel_bundleForClass_, ObjCClassFromMetadata);
  v63 = (void *)sub_23AA32FB4();
  v64 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v63, v62, 0);

  if (v64)
  {
    v65 = objc_msgSend((id)objc_opt_self(), sel_textureWithImage_, v64);

    v62 = v64;
  }
  else
  {
    v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9ED0]), sel_init);
  }

  v128 = v65;
  objc_msgSend(v65, sel_size);
  *(double *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale] = 1.0 / (v66 / a9);
  LOWORD(v129) = v119;
  v67 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTRangingNode());
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode] = sub_23A9B18B4((__int16 *)&v129);
  *(_QWORD *)v118 = a6;
  v118[8] = v44 != 0;
  *(_QWORD *)v30 = a8;
  v30[8] = a10 & 1;
  *(_QWORD *)v32 = a11;
  v32[8] = a12 & 1;
  *(_QWORD *)v34 = a13;
  v34[8] = a14 & 1;
  *(_QWORD *)v117 = *((_QWORD *)v53 + 3);
  v117[8] = 0;
  *(_QWORD *)v38 = a15;
  *((_QWORD *)v38 + 1) = a16;
  v38[16] = a17 & 1;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring] = sub_23A9CCF6C(a6, v44, 0x3FE0000000000000, 0, 0, 1);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring] = sub_23A9CCF6C(*(_QWORD *)v30, v30[8], 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring] = sub_23A9CCF6C(*(_QWORD *)v32, v32[8], 0x3FA015BF9217271ALL, 0, 0, 1);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring] = sub_23A9CCF6C(*(_QWORD *)v34, v34[8], 0x3F847AE147AE147BLL, 0, 0, 1);
  v68 = sub_23A9CCC54(*(_QWORD *)v117, v117[8], 0x3F847AE147AE147BLL, 0);
  v69 = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightnessSpring] = v68;
  if ((v38[16] & 1) == 0)
    v69 = *(_QWORD *)v38;
  v70 = sub_23A9CCF6C(v69, v38[16], 0x3FE0000000000000, 0, 0, 1);
  v71 = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring] = v70;
  if ((v38[16] & 1) == 0)
    v71 = *((_QWORD *)v38 + 1);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring] = sub_23A9CCF6C(v71, v38[16], 0x3FE0000000000000, 0, 0, 1);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring] = sub_23A9CD2AC(0, 0, 0, 1, 0x3FE0000000000000, 0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  objc_msgSend(*(id *)&v24[v122], sel_setTexture_, v65);
  v72 = *(id *)&v24[v122];
  objc_msgSend(v65, sel_size);
  objc_msgSend(v72, sel_setSize_);

  v73 = *(id *)&v24[v122];
  objc_msgSend(v73, sel_setColorBlendFactor_, 1.0);

  v74 = (objc_class *)type metadata accessor for FMPFSKPeripheralDotNode();
  v130.receiver = v24;
  v130.super_class = v74;
  v75 = (char *)objc_msgSendSuper2(&v130, sel_init);
  v76 = v75;
  if (a4)
  {
    v77 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v77 = 0;
  }
  objc_msgSend(v75, sel_setName_, v77, a3);

  v78 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
  objc_msgSend(v75, sel_addChild_, *(_QWORD *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode]);
  v79 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode;
  objc_msgSend(*(id *)&v75[v78], sel_addChild_, *(_QWORD *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode]);
  v80 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
  objc_msgSend(*(id *)&v75[v79], sel_addChild_, *(_QWORD *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode]);
  v81 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  objc_msgSend(*(id *)&v75[v80], sel_addChild_, *(_QWORD *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode]);
  v124 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode;
  v82 = *(void **)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode];
  objc_msgSend(v75, sel_addChild_, v82);
  sub_23A964084(&qword_2569D6080);
  v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_23AA36180;
  v84 = (void *)objc_opt_self();
  v85 = (void *)objc_opt_self();
  v86 = v82;
  v87 = objc_msgSend(v85, sel_rangeWithConstantValue_, 0.0);
  v88 = objc_msgSend(v84, sel_distance_toNode_, v87, *(_QWORD *)&v75[v80]);

  *(_QWORD *)(v83 + 32) = v88;
  v129 = v83;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D5990);
  v89 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v86, sel_setConstraints_, v89);

  v90 = *(id *)&v75[v78];
  v91 = (void *)sub_23AA32FB4();
  objc_msgSend(v90, sel_setName_, v91);

  v92 = *(id *)&v75[v80];
  v93 = (void *)sub_23AA32FB4();
  objc_msgSend(v92, sel_setName_, v93);

  v94 = *(id *)&v75[v81];
  v95 = (void *)sub_23AA32FB4();
  objc_msgSend(v94, sel_setName_, v95);

  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius + 8] & 1) == 0)
  {
    v96 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
    v97 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
    *v97 = v96;
    *((_BYTE *)v97 + 8) = 0;
    objc_msgSend(*(id *)&v75[v79], sel_setPosition_, 0.0, v96);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale + 8] & 1) == 0)
  {
    v98 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
    v99 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
    *v99 = v98;
    *((_BYTE *)v99 + 8) = 0;
    objc_msgSend(*(id *)&v75[v80], sel_setScale_, *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale] * v98);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle + 8] & 1) == 0)
  {
    v100 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
    v101 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
    *v101 = v100;
    *((_BYTE *)v101 + 8) = 0;
    if (!*(_QWORD *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
      objc_msgSend(*(id *)&v75[v78], sel_setZRotation_, v100);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity + 8] & 1) == 0)
  {
    v102 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
    v103 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
    *v103 = v102;
    v104 = v102;
    *((_BYTE *)v103 + 8) = 0;
    objc_msgSend(*(id *)&v75[v80], sel_setAlpha_, v102);
    objc_msgSend(*(id *)&v75[v124], sel_setAlpha_, v104);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness + 8] & 1) == 0)
  {
    v105 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness];
    v106 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
    *v106 = v105;
    v107 = v105;
    *((_BYTE *)v106 + 8) = 0;
    v108 = *(void **)&v75[v81];
    v109 = *(void **)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor];
    v110 = v108;
    v111 = v109;
    sub_23AA14D9C(v111, v107);

  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset + 16] & 1) == 0)
  {
    v112 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset + 8];
    v113 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
    v114 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
    *v114 = v113;
    v114[1] = v112;
    *((_BYTE *)v114 + 16) = 0;
    objc_msgSend(v75, sel_setPosition_, v113, v112);
  }

  return v75;
}

uint64_t sub_23A96D7A0()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;

  sub_23AA33500();
  swift_bridgeObjectRelease();
  v1 = sub_23AA33824();
  v3 = sub_23A9E2E00(6uLL, v1, v2);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  MEMORY[0x23B85CBA0](v3, v5, v7, v9);
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v10 = objc_msgSend(v0, sel_name);
  if (v10)
  {
    v11 = v10;
    sub_23AA32FD8();

  }
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v12 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_23A96D950()
{
  uint64_t v0;
  id v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;

  type metadata accessor for FMPFSKSpriteNode();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  type metadata accessor for FMPFView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_23AA32FB4();
  v5 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  if (v5)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_textureWithImage_, v5);

    v3 = v5;
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9ED0]), sel_init);
  }

  objc_msgSend(v1, sel_setTexture_, v6);
  v7 = v1;
  objc_msgSend(v6, sel_size);
  objc_msgSend(v7, sel_setSize_);

  v8 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style;
  objc_msgSend(v7, sel_setColor_, *(_QWORD *)(v8 + 56));
  objc_msgSend(v7, sel_setColorBlendFactor_, 1.0);
  objc_msgSend(v7, sel_setAlpha_, *(double *)(v8 + 40));
  objc_msgSend(v7, sel_setScale_, 1.0);
  v9 = v7;
  v10 = (void *)sub_23AA32FB4();
  objc_msgSend(v9, sel_setName_, v10);

  return v9;
}

void sub_23A96DB58(void *a1, char *a2, double a3)
{
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  _QWORD v12[6];

  objc_msgSend(a1, sel_setSpeed_, *(double *)&a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 8] * a3);
  if ((a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness + 8] & 1) == 0)
  {
    v5 = *(_QWORD *)&a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
    if (!UIAccessibilityIsReduceMotionEnabled())
    {
      v6 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode];
      v7 = (_QWORD *)swift_allocObject();
      v7[2] = a1;
      v7[3] = v5;
      v7[4] = a2;
      v12[4] = sub_23A96F68C;
      v12[5] = v7;
      v12[0] = MEMORY[0x24BDAC760];
      v12[1] = 1107296256;
      v12[2] = sub_23A9C4DBC;
      v12[3] = &unk_250BC0558;
      v8 = _Block_copy(v12);
      v9 = v6;
      v10 = a1;
      v11 = a2;
      swift_release();
      objc_msgSend(v9, sel_runAction_completion_, v10, v8);
      _Block_release(v8);

    }
  }
}

void sub_23A96DC8C()
{
  char *v0;
  uint64_t v1;
  double *v2;
  double v3;
  uint64_t *v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  void *v10;
  double *v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  _QWORD aBlock[6];

  v1 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
  {
    v2 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
    if ((v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness + 8] & 1) == 0
      && (v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius + 8] & 1) == 0)
    {
      v3 = *v2;
      v4 = (uint64_t *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style];
      v5 = (*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius]
          + *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius])
         * 3.14159265
         / (*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style]
          * 0.5);
      v6 = dbl_23AA36AE0[(sub_23A9644D8(100) & 1) == 0];
      v7 = objc_msgSend((id)objc_opt_self(), sel_rotateByAngle_duration_, v6 / (double)v4[2], v5 / (double)v4[2]);
      objc_msgSend(v7, sel_setTimingMode_, 0);
      objc_msgSend(v7, sel_setSpeed_, v3 * *((double *)v4 + 1));
      v8 = *(void **)&v0[v1];
      *(_QWORD *)&v0[v1] = v7;
      v16 = v7;

      if (((_BYTE)v2[1] & 1) != 0 || (v9 = *v2, UIAccessibilityIsReduceMotionEnabled()))
      {

      }
      else
      {
        v10 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode];
        v11 = (double *)swift_allocObject();
        *((_QWORD *)v11 + 2) = v16;
        v11[3] = v9;
        *((_QWORD *)v11 + 4) = v0;
        aBlock[4] = sub_23A96F634;
        aBlock[5] = v11;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_23A9C4DBC;
        aBlock[3] = &unk_250BC0508;
        v12 = _Block_copy(aBlock);
        v13 = v16;
        v14 = v10;
        v15 = v0;
        swift_release();
        objc_msgSend(v14, sel_runAction_completion_, v13, v12);
        _Block_release(v12);

      }
    }
  }
}

void sub_23A96DEBC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  double *v3;
  double v4;
  uint64_t v5;
  void *v6;
  double v7;
  long double v8;
  double v9;
  double v10;
  double v11;
  double v13;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
  {
    v2 = v0;
    v3 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
    if (((_BYTE)v3[1] & 1) == 0)
    {
      v4 = *v3;
      v5 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode], sel_removeAllActions);
      v6 = *(void **)&v2[v1];
      *(_QWORD *)&v2[v1] = 0;

      v7 = fmod(*(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading]/ 180.0* 3.14159265, 6.28318531);
      if (v7 <= 3.14159265)
      {
        if (v7 < -3.14159265)
          v7 = v7 + 6.28318531;
      }
      else
      {
        v7 = v7 + -6.28318531;
      }
      objc_msgSend(*(id *)&v2[v5], sel_zRotation);
      v9 = fmod(v8, 6.28318531);
      if (v9 <= 3.14159265)
      {
        if (v9 < -3.14159265)
          v9 = v9 + 6.28318531;
      }
      else
      {
        v9 = v9 + -6.28318531;
      }
      v10 = v7 + v9;
      v11 = v4 - (v7 + v9);
      if (vabdd_f64(v4, v10) > 3.14159265)
      {
        if (v10 >= 0.0 || v4 < 0.0)
        {
          if (v4 < 0.0 && v10 >= 0.0)
            v11 = v11 + 6.28318531;
        }
        else
        {
          v11 = v11 + -6.28318531;
        }
      }
      v13 = v4 - v11;
      *v3 = v4 - v11;
      *((_BYTE *)v3 + 8) = 0;
      objc_msgSend(*(id *)&v2[v5], sel_setZRotation_, v4 - v11);
      v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring];
      sub_23A9829AC(v13);
      *(_BYTE *)(v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      objc_msgSend(v2, sel_setZRotation_, 0.0);
      v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring];
      sub_23A9829AC(0.0);
      *(_BYTE *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      sub_23A96E8F8(1, v4);
    }
  }
}

void sub_23A96E0B8(char a1, char a2)
{
  char *v2;
  char *v3;
  void *v4;
  double *v5;
  double v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  char v31;
  id v32;
  id v33;
  char v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t i;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  id (*v58)();
  uint64_t v59;

  v3 = v2;
  if ((a1 & 1) != 0)
  {
    v4 = (void *)objc_opt_self();
    v5 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style];
    v6 = *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 64];
    v7 = objc_msgSend(v4, sel_fadeAlphaTo_duration_, *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 48], v6);
    objc_msgSend(v7, sel_setTimingMode_, 2);
    if ((v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] & 1) != 0)
    {
      v8 = sub_23A96D950();
      v9 = objc_msgSend(v4, sel_scaleTo_duration_, v5[4], v6);
      objc_msgSend(v9, sel_setTimingMode_, 2);
      sub_23A964084(&qword_2569D6080);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_23AA36AF0;
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v9;
      aBlock = v10;
      sub_23AA330C8();
      sub_23A968488(0, (unint64_t *)&unk_2569D59A0);
      v11 = v7;
      v12 = v9;
      v13 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v4, sel_group_, v13);

      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_addChild_, v8);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v8;
      v58 = sub_23A96F624;
      v59 = v15;
      aBlock = MEMORY[0x24BDAC760];
      v55 = 1107296256;
      v56 = sub_23A9C4DBC;
      v57 = &unk_250BC04B8;
      v16 = _Block_copy(&aBlock);
      v17 = v8;
      swift_release();
      objc_msgSend(v17, sel_runAction_completion_, v14, v16);

      _Block_release(v16);
    }
    else
    {
      v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 1;
      v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] = 1;
      v35 = objc_msgSend(v4, sel_scaleTo_duration_, v5[4], v6);
      objc_msgSend(v35, sel_setTimingMode_, 2);
      sub_23A964084(&qword_2569D6080);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_23AA36AF0;
      *(_QWORD *)(v36 + 32) = v7;
      *(_QWORD *)(v36 + 40) = v35;
      aBlock = v36;
      sub_23AA330C8();
      sub_23A968488(0, (unint64_t *)&unk_2569D59A0);
      v37 = v7;
      v38 = v35;
      v39 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v4, sel_group_, v39);

      v41 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode];
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v3;
      v58 = sub_23A96F5B8;
      v59 = v42;
      aBlock = MEMORY[0x24BDAC760];
      v55 = 1107296256;
      v56 = sub_23A9C4DBC;
      v57 = &unk_250BC0468;
      v43 = _Block_copy(&aBlock);
      v44 = v41;
      v45 = v3;
      swift_release();
      objc_msgSend(v44, sel_runAction_completion_, v40, v43);

      _Block_release(v43);
    }
    return;
  }
  if ((a2 & 1) != 0)
    return;
  aBlock = MEMORY[0x24BEE4AF8];
  v18 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_children);
  sub_23A968488(0, (unint64_t *)&qword_2569D5998);
  v19 = sub_23AA330B0();

  if (v19 >> 62)
    goto LABEL_27;
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v20)
  {
LABEL_7:
    v52 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
    v53 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
    v21 = 4;
    v22 = v3;
    while (1)
    {
      if ((v19 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x23B85D0B0](v21 - 4, v19);
      else
        v23 = *(id *)(v19 + 8 * v21);
      v24 = v23;
      v25 = v21 - 3;
      if (__OFADD__(v21 - 4, 1))
      {
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        v20 = sub_23AA335C0();
        if (!v20)
          goto LABEL_28;
        goto LABEL_7;
      }
      objc_opt_self();
      v26 = swift_dynamicCastObjCClass();
      if (!v26)
        goto LABEL_9;
      v27 = (void *)v26;
      v28 = *(void **)&v3[v53];
      if (v28)
      {
        v29 = v24;
        v30 = v28;
        v31 = sub_23AA3338C();

        v3 = v22;
        if ((v31 & 1) != 0)
          break;
      }
      else
      {
        v32 = v24;
      }
      v33 = *(id *)&v3[v52];
      v34 = sub_23AA3338C();

      v3 = v22;
      if ((v34 & 1) != 0)
        break;
      MEMORY[0x23B85CC30](objc_msgSend(v27, sel_removeAllActions));
      if (*(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23AA330D4();
      sub_23AA330EC();
      sub_23AA330C8();

      v3 = v22;
      if (v25 == v20)
        goto LABEL_28;
LABEL_10:
      ++v21;
    }

LABEL_9:
    if (v25 == v20)
      goto LABEL_28;
    goto LABEL_10;
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  if (aBlock >> 62)
  {
    swift_bridgeObjectRetain_n();
    v46 = sub_23AA335C0();
    if (v46)
      goto LABEL_30;
  }
  else
  {
    v46 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v46)
    {
LABEL_30:
      if (v46 < 1)
      {
        __break(1u);
        return;
      }
      for (i = 0; i != v46; ++i)
      {
        if ((aBlock & 0xC000000000000001) != 0)
          v48 = (id)MEMORY[0x23B85D0B0](i, aBlock);
        else
          v48 = *(id *)(aBlock + 8 * i + 32);
        v49 = v48;
        objc_msgSend(v48, sel_removeFromParent);

      }
    }
  }
  swift_bridgeObjectRelease_n();
  v50 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse;
  if ((v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] & 1) != 0)
  {
    v51 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode], sel_removeAllActions);
    objc_msgSend(*(id *)&v3[v51], sel_setScale_, 1.0);
    objc_msgSend(*(id *)&v3[v51], sel_setAlpha_, 1.0);
  }
  v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 0;
  v3[v50] = 0;
  swift_bridgeObjectRelease();
}

void sub_23A96E7D4(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale;
  *(double *)v5 = a2;
  *(_BYTE *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring),
        v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    v10 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v10 = a2;
    *(_BYTE *)(v10 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring);
    sub_23A9829AC(a2);
    *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v9 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale;
    *(double *)v9 = a2;
    *(_BYTE *)(v9 + 8) = 0;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode), sel_setScale_, *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale) * a2);
  }
}

void sub_23A96E8F8(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle;
  *(double *)v5 = a2;
  *(_BYTE *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring),
        v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    v10 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v10 = a2;
    *(_BYTE *)(v10 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring);
    sub_23A9829AC(a2);
    *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v9 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle;
    *(double *)v9 = a2;
    *(_BYTE *)(v9 + 8) = 0;
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction))
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode), sel_setZRotation_, a2);
  }
}

void sub_23A96EA20(char a1, double a2, double a3)
{
  char *v3;
  char *v4;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  v7 = (double *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
  *v7 = a2;
  v7[1] = a3;
  *((_BYTE *)v7 + 16) = 0;
  if ((a1 & 1) == 0
    || (v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring],
        v9 = v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v9 + 280) + *(double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) == 1.79769313e308)
    || (v10 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring,
        v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring],
        v12 = v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v12 + 280) + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) == 1.79769313e308))
  {
    v13 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring];
    sub_23A9829AC(a2);
    *(_BYTE *)(v13 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v14 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring];
    sub_23A9829AC(a3);
    *(_BYTE *)(v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v15 = (double *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
    *v15 = a2;
    v15[1] = a3;
    *((_BYTE *)v15 + 16) = 0;
    objc_msgSend(v4, sel_setPosition_, a2, a3);
  }
  else
  {
    v16 = v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v16 = a2;
    *(_BYTE *)(v16 + 8) = 0;
    sub_23A9CC9DC();
    v17 = *(_QWORD *)&v4[v10] + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v17 = a3;
    *(_BYTE *)(v17 + 8) = 0;
    sub_23A9CC9DC();
  }
}

double sub_23A96EBCC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double result;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring);
  v4 = v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  v5 = v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  v6 = *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v7 = *(double *)(v4 + 280) + v6;
  v8 = v7 + a1;
  if (v7 == 1.79769313e308)
  {
    sub_23A9829AC(v8);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v6 = *(double *)(v5 + 40);
  }
  result = v8 - v6;
  *(double *)(v4 + 280) = result;
  *(double *)(v4 + 240) = result;
  *(_QWORD *)(v4 + 248) = 0;
  return result;
}

id sub_23A96EC88(id result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  double *v7;
  double v8;
  uint64_t v9;

  v3 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  if ((a2 & 1) == 0 && (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle + 8) & 1) == 0)
  {
    v4 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle);
    v5 = *(double *)&result;
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring);
    v7 = (double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    result = (id)swift_beginAccess();
    v8 = *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v8) <= *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
      v8 = v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v9 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle;
    *(double *)v9 = v4 * v5 + (1.0 - v5) * v8;
    *(_BYTE *)(v9 + 8) = 0;
    if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction))
      return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode), sel_setZRotation_);
  }
  return result;
}

void sub_23A96EDB4(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v5 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor;
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  if ((a2 & 1) != 0)
  {
    v6 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
    v7 = *(void **)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode);
    if (v7)
    {
      objc_msgSend(v7, sel_removeFromParent);
      v8 = *(void **)(v4 + v6);
    }
    else
    {
      v8 = 0;
    }
    *(_QWORD *)(v4 + v6) = 0;

    v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring);
    sub_23A9829AC(0.0);
    *(_BYTE *)(v19 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v20 = v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor;
    *(_QWORD *)v20 = 0;
    *(_BYTE *)(v20 + 8) = 1;
  }
  else
  {
    v11 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode))
    {
      v12 = sub_23A96D950();
      v13 = *(void **)(v3 + v11);
      *(_QWORD *)(v3 + v11) = v12;
      v14 = v12;

      v15 = v14;
      v16 = (void *)sub_23AA32FB4();
      objc_msgSend(v15, sel_setName_, v16);

      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode), sel_addChild_, v15);
    }
    v17 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring);
    if ((a3 & 1) != 0)
    {
      v18 = v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(_QWORD *)v18 = a1;
      *(_BYTE *)(v18 + 8) = 0;
      sub_23A9CC9DC();
    }
    else
    {
      sub_23A9829AC(*(double *)&a1);
      *(_BYTE *)(v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    }
  }
}

void sub_23A96EF6C()
{
  uint64_t v0;

}

id sub_23A96F09C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKPeripheralDotNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKPeripheralDotNode()
{
  return objc_opt_self();
}

void sub_23A96F228()
{
  _BYTE *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v1 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
  v2 = (objc_class *)type metadata accessor for FMPFSKNode();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v3 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v5 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  type metadata accessor for FMPFSKSpriteNode();
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDiskRadius] = 1;
  v6 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDotScale] = 1;
  v8 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyAngle] = 1;
  v10 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOpacity] = 1;
  v12 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyBrightness] = 1;
  v14 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOffset] = 1;
  v16 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading] = 0;
  v18 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] = 1;
  v19 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;

  sub_23AA335A8();
  __break(1u);
}

void sub_23A96F4D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  id v9;
  id v10;

  v2 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor) = a1;
  v4 = a1;

  v5 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode)
     + OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_previousBrightness;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness + 8) & 1) == 0)
  {
    v7 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness);
    v8 = *(void **)(v1 + v2);
    v9 = *(id *)(v1 + v5);
    v10 = v8;
    sub_23AA14D9C(v10, v7);

  }
}

uint64_t sub_23A96F594()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A96F5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse) = 0;
  v2 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode), sel_setScale_, 1.0);
  return objc_msgSend(*(id *)(v1 + v2), sel_setAlpha_, 1.0);
}

uint64_t sub_23A96F60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A96F61C()
{
  return swift_release();
}

id sub_23A96F624()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromParent);
}

void sub_23A96F634()
{
  uint64_t v0;

  sub_23A96DB58(*(void **)(v0 + 16), *(char **)(v0 + 32), *(double *)(v0 + 24));
}

uint64_t sub_23A96F644()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A96F694(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_23A9E2E00(9uLL, a1, a2);
  swift_bridgeObjectRelease();
  sub_23A96F764();
  sub_23AA3302C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  return 7876668;
}

unint64_t sub_23A96F764()
{
  unint64_t result;

  result = qword_2569D6060;
  if (!qword_2569D6060)
  {
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2569D6060);
  }
  return result;
}

BOOL FMItemActionStatus.isActionSuccessful.getter()
{
  unsigned __int8 *v0;

  return *v0 == 2;
}

uint64_t FMItemActionStatus.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A96F7E4 + 4 * byte_23AA36B50[*v0]))(0x726F727265, 0xE500000000000000);
}

uint64_t sub_23A96F7E4()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23A96F7FC()
{
  return 0x73736563637573;
}

uint64_t sub_23A96F814()
{
  return 0x676E69646E6570;
}

uint64_t sub_23A96F82C()
{
  return 0x64656C696166;
}

FMFindingUI::FMItemActionStatus_optional __swiftcall FMItemActionStatus.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if (rawValue <= 199)
  {
    if (rawValue == -1)
    {
      *v1 = 0;
      return (FMFindingUI::FMItemActionStatus_optional)rawValue;
    }
    if (!rawValue)
    {
      *v1 = 1;
      return (FMFindingUI::FMItemActionStatus_optional)rawValue;
    }
LABEL_12:
    *v1 = 5;
    return (FMFindingUI::FMItemActionStatus_optional)rawValue;
  }
  if (rawValue == 500)
  {
    *v1 = 4;
    return (FMFindingUI::FMItemActionStatus_optional)rawValue;
  }
  if (rawValue == 205)
  {
    *v1 = 3;
    return (FMFindingUI::FMItemActionStatus_optional)rawValue;
  }
  if (rawValue != 200)
    goto LABEL_12;
  *v1 = 2;
  return (FMFindingUI::FMItemActionStatus_optional)rawValue;
}

uint64_t FMItemActionStatus.rawValue.getter()
{
  char *v0;

  return qword_23AA36CB8[*v0];
}

BOOL sub_23A96F8C4(char *a1, char *a2)
{
  return qword_23AA36CB8[*a1] == qword_23AA36CB8[*a2];
}

uint64_t sub_23A96F8E8()
{
  sub_23AA337D0();
  sub_23AA337DC();
  return sub_23AA33800();
}

uint64_t sub_23A96F934()
{
  return sub_23AA337DC();
}

uint64_t sub_23A96F968()
{
  sub_23AA337D0();
  sub_23AA337DC();
  return sub_23AA33800();
}

FMFindingUI::FMItemActionStatus_optional sub_23A96F9B0(Swift::Int *a1)
{
  return FMItemActionStatus.init(rawValue:)(*a1);
}

void sub_23A96F9B8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_23AA36CB8[*v1];
}

unint64_t sub_23A96F9D4()
{
  unint64_t result;

  result = qword_2569D59B0;
  if (!qword_2569D59B0)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMItemActionStatus, &type metadata for FMItemActionStatus);
    atomic_store(result, (unint64_t *)&qword_2569D59B0);
  }
  return result;
}

uint64_t sub_23A96FA18()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A96FA44 + 4 * byte_23AA36B55[*v0]))(0x726F727265, 0xE500000000000000);
}

uint64_t sub_23A96FA44()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23A96FA5C()
{
  return 0x73736563637573;
}

uint64_t sub_23A96FA74()
{
  return 0x676E69646E6570;
}

uint64_t sub_23A96FA8C()
{
  return 0x64656C696166;
}

uint64_t getEnumTagSinglePayload for FMItemActionStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMItemActionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A96FB7C + 4 * byte_23AA36B5F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A96FBB0 + 4 * byte_23AA36B5A[v4]))();
}

uint64_t sub_23A96FBB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96FBB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A96FBC0);
  return result;
}

uint64_t sub_23A96FBCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A96FBD4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A96FBD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A96FBE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMItemActionStatus()
{
  return &type metadata for FMItemActionStatus;
}

_QWORD *sub_23A96FBFC(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v18[2];
  void *v19;
  uint64_t v20;

  v2 = v1;
  v19 = a1;
  v3 = sub_23AA33284();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA33260();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v7);
  v9 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v9);
  v18[1] = sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  sub_23AA32EE8();
  v20 = MEMORY[0x24BEE4AF8];
  sub_23A961DE4((unint64_t *)&unk_2569D6100, v8, MEMORY[0x24BEE5698]);
  sub_23A964084((uint64_t *)&unk_2569D5B40);
  sub_23A97221C((unint64_t *)&qword_2569D6110, (uint64_t *)&unk_2569D5B40);
  sub_23AA3344C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5750], v3);
  v1[3] = sub_23AA332B4();
  v1[4] = MEMORY[0x24BEE4AF8];
  swift_unknownObjectWeakInit();
  v10 = v19;
  v1[2] = v19;
  v11 = qword_2569D4AB8;
  v12 = v10;
  if (v11 != -1)
    swift_once();
  v13 = sub_23AA32EA0();
  sub_23A9620E8(v13, (uint64_t)qword_2569E0028);
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_23A95E000, v14, v15, "â˜Žï¸Ž FMIPConnectionManager: initialized", v16, 2u);
    MEMORY[0x23B85DB24](v16, -1, -1);
  }

  return v2;
}

uint64_t sub_23A96FEA8()
{
  uint64_t v0;

  if (MEMORY[0x23B85DBF0](v0 + 40))
  {
    swift_getObjectType();
    sub_23AA332F0();
    swift_unknownObjectRelease();
  }

  swift_bridgeObjectRelease();
  sub_23A972074(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPConnectionManager()
{
  return objc_opt_self();
}

void sub_23A96FF3C(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  uint64_t aBlock;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;

  if ((a2 & 1) != 0)
  {
    v7 = v4;
    if (qword_2569D4AB8 != -1)
      swift_once();
    v8 = sub_23AA32EA0();
    sub_23A9620E8(v8, (uint64_t)qword_2569E0028);
    v9 = sub_23AA32E88();
    v10 = sub_23AA33218();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23A95E000, v9, v10, "â˜Žï¸Ž FMIPConnectionManager: connect", v11, 2u);
      MEMORY[0x23B85DB24](v11, -1, -1);
    }

    v12 = (void *)objc_opt_self();
    v13 = (void *)sub_23AA32DEC();
    v14 = objc_msgSend(v12, sel_connectToBeaconUUID_, v13);

    v34 = v14;
    v15 = objc_msgSend(*(id *)(v7 + 16), sel_executeCommand_, v14);
    v16 = *(NSObject **)(v7 + 24);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v7;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_23A971F70;
    *(_QWORD *)(v18 + 24) = v17;
    v39 = sub_23A971F88;
    v40 = v18;
    v19 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_23A9AFD6C;
    v38 = &unk_250BC0660;
    v20 = _Block_copy(&aBlock);
    swift_retain();
    v21 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v16, v20);
    _Block_release(v20);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v16 & 1) == 0)
    {
      v22 = swift_allocObject();
      *(_BYTE *)(v22 + 16) = 1;
      *(_QWORD *)(v22 + 24) = v7;
      *(_QWORD *)(v22 + 32) = v21;
      *(_QWORD *)(v22 + 40) = a3;
      *(_QWORD *)(v22 + 48) = a4;
      v39 = sub_23A971FAC;
      v40 = v22;
      aBlock = v19;
      v36 = 1107296256;
      v37 = sub_23A970AE4;
      v38 = &unk_250BC06B0;
      v23 = _Block_copy(&aBlock);
      swift_retain();
      v24 = v21;
      sub_23A971FB8((uint64_t)a3);
      swift_release();
      v25 = objc_msgSend(v24, sel_addFailureBlock_, v23);
      _Block_release(v23);

      v26 = swift_allocObject();
      *(_BYTE *)(v26 + 16) = 1;
      *(_QWORD *)(v26 + 24) = v7;
      *(_QWORD *)(v26 + 32) = v24;
      *(_QWORD *)(v26 + 40) = a3;
      *(_QWORD *)(v26 + 48) = a4;
      v39 = sub_23A972008;
      v40 = v26;
      aBlock = v19;
      v36 = 1107296256;
      v37 = sub_23A970AE4;
      v38 = &unk_250BC0700;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      v28 = v24;
      sub_23A971FB8((uint64_t)a3);
      swift_release();
      v29 = objc_msgSend(v28, sel_addSuccessBlock_, v27);

      _Block_release(v27);
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (qword_2569D4AB8 != -1)
LABEL_15:
    swift_once();
  v30 = sub_23AA32EA0();
  sub_23A9620E8(v30, (uint64_t)qword_2569E0028);
  v31 = sub_23AA32E88();
  v32 = sub_23AA33218();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_23A95E000, v31, v32, "â˜Žï¸Ž FMIPConnectionManager: disconnect is not supported on this platform!", v33, 2u);
    MEMORY[0x23B85DB24](v33, -1, -1);
  }

  if (a3)
    a3(0);
}

uint64_t sub_23A9703BC(uint64_t a1, void *a2)
{
  id v4;

  swift_beginAccess();
  v4 = a2;
  MEMORY[0x23B85CC30]();
  if (*(_QWORD *)((*(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_23AA330D4();
  sub_23AA330EC();
  sub_23AA330C8();
  return swift_endAccess();
}

uint64_t sub_23A970454(void *a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t result;
  uint64_t v32;
  void *v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t aBlock;
  unint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v35 = a6;
  v36 = a3;
  v10 = sub_23AA32ED0();
  v39 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23AA32F00();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AB8 != -1)
    swift_once();
  v16 = sub_23AA32EA0();
  sub_23A9620E8(v16, (uint64_t)qword_2569E0028);
  v17 = a1;
  v18 = a1;
  v19 = sub_23AA32E88();
  v20 = sub_23AA33218();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v33 = a4;
    v23 = v22;
    v41 = v22;
    *(_DWORD *)v21 = 136315394;
    if ((a2 & 1) != 0)
      v24 = 0x7463656E6E6F63;
    else
      v24 = 0x656E6E6F63736964;
    if ((a2 & 1) != 0)
      v25 = 0xE700000000000000;
    else
      v25 = 0xEA00000000007463;
    v34 = a5;
    aBlock = sub_23A964DBC(v24, v25, &v41);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    aBlock = 0;
    v43 = 0xE000000000000000;
    v40 = a1;
    sub_23A964084((uint64_t *)&unk_2569D5AF0);
    sub_23AA33590();
    aBlock = sub_23A964DBC(aBlock, v43, &v41);
    sub_23AA333F8();
    a5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v19, v20, "â˜Žï¸Ž FMIPConnectionManager: %s action failed %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    v26 = v23;
    a4 = v33;
    MEMORY[0x23B85DB24](v26, -1, -1);
    MEMORY[0x23B85DB24](v21, -1, -1);
  }
  else
  {

  }
  v27 = v36;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v27;
  *(_QWORD *)(v28 + 24) = a4;
  v46 = sub_23A97225C;
  v47 = v28;
  aBlock = MEMORY[0x24BDAC760];
  v43 = 1107296256;
  v44 = sub_23A9C4DBC;
  v45 = &unk_250BC07A0;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  v30 = a4;
  sub_23AA32EE8();
  v41 = MEMORY[0x24BEE4AF8];
  sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A97221C((unint64_t *)&qword_2569D5AE0, (uint64_t *)&unk_2569D5D00);
  sub_23AA3344C();
  MEMORY[0x23B85CE40](0, v15, v12, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  result = swift_release();
  if (a5)
    return a5(a1);
  return result;
}

void sub_23A970878(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x23B85D0B0](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      sub_23A964084(&qword_2569D5AE8);
      v6 = sub_23AA3338C();

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)MEMORY[0x23B85D0B0](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = sub_23AA3338C();

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v3 = sub_23AA335C0();
        swift_bridgeObjectRelease();
        if (v3)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_23A970A04(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
    sub_23A9F6F48(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_23AA330C8();
      return v10;
    }
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A970AE8(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v35 = a6;
  v10 = sub_23AA32ED0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23AA32F00();
  v37 = *(_QWORD *)(v14 - 8);
  v38 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v36 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AB8 != -1)
    swift_once();
  v16 = sub_23AA32EA0();
  sub_23A9620E8(v16, (uint64_t)qword_2569E0028);
  v17 = sub_23AA32E88();
  v18 = sub_23AA33218();
  if (os_log_type_enabled(v17, v18))
  {
    v34 = a5;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v31 = a3;
    v21 = v20;
    v32 = a4;
    v33 = v13;
    *(_DWORD *)v19 = 136315138;
    aBlock[0] = v20;
    if ((a2 & 1) != 0)
      v22 = 0x7463656E6E6F63;
    else
      v22 = 0x656E6E6F63736964;
    if ((a2 & 1) != 0)
      v23 = 0xE700000000000000;
    else
      v23 = 0xEA00000000007463;
    v39 = sub_23A964DBC(v22, v23, aBlock);
    a4 = v32;
    v13 = v33;
    sub_23AA333F8();
    a5 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v17, v18, "â˜Žï¸Ž FMIPConnectionManager: %s action succeeded", v19, 0xCu);
    swift_arrayDestroy();
    v24 = v21;
    a3 = v31;
    MEMORY[0x23B85DB24](v24, -1, -1);
    MEMORY[0x23B85DB24](v19, -1, -1);
  }

  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a3;
  *(_QWORD *)(v25 + 24) = a4;
  aBlock[4] = (uint64_t)sub_23A97202C;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23A9C4DBC;
  aBlock[3] = (uint64_t)&unk_250BC0750;
  v26 = _Block_copy(aBlock);
  swift_retain();
  v27 = a4;
  v28 = v36;
  sub_23AA32EE8();
  v39 = MEMORY[0x24BEE4AF8];
  sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A97221C((unint64_t *)&qword_2569D5AE0, (uint64_t *)&unk_2569D5D00);
  sub_23AA3344C();
  MEMORY[0x23B85CE40](0, v28, v13, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v38);
  result = swift_release();
  if (a5)
    return a5(0);
  return result;
}

void sub_23A970E70(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  void *v9;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_23A970878(a2, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    swift_beginAccess();
    v9 = (void *)sub_23A970A04(v6);
    swift_endAccess();

  }
}

void sub_23A970F10(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_23A970F60(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t ObjectType;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t aBlock[7];

  v72 = a3;
  v73 = a1;
  v74 = a2;
  v3 = sub_23AA32ED0();
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32EB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (void (**)(char *, char *, uint64_t))((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23AA32F18();
  v61 = *(_QWORD *)(v10 - 8);
  v62 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_23AA332CC();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23AA32E1C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v59 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v70 = (char *)&v53 - v20;
  if (qword_2569D4AB8 != -1)
    swift_once();
  v21 = sub_23AA32EA0();
  v22 = sub_23A9620E8(v21, (uint64_t)qword_2569E0028);
  swift_bridgeObjectRetain_n();
  v23 = sub_23AA32E88();
  v24 = sub_23AA33218();
  v25 = os_log_type_enabled(v23, v24);
  v71 = v16;
  if (v25)
  {
    v26 = swift_slowAlloc();
    v53 = (void (*)(char *, char *, uint64_t))v22;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc();
    v54 = v7;
    v29 = v74;
    v30 = v28;
    aBlock[0] = v28;
    *(_DWORD *)v27 = 136315138;
    swift_bridgeObjectRetain();
    v75 = sub_23A964DBC(v73, v29, aBlock);
    v16 = v71;
    sub_23AA333F8();
    v7 = v54;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A95E000, v23, v24, "â˜Žï¸Ž FMIPConnectionManager: performing connect %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v30, -1, -1);
    MEMORY[0x23B85DB24](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23AA32DD4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23A972098((uint64_t)v15);
    v31 = sub_23AA32E88();
    v32 = sub_23AA33218();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23A95E000, v31, v32, "â˜Žï¸Ž FMIPConnectionManager: cannot connect for item with an invalid identifier", v33, 2u);
      MEMORY[0x23B85DB24](v33, -1, -1);
    }

    sub_23A9720D8();
    v34 = (void *)swift_allocError();
    swift_bridgeObjectRetain();
    sub_23A9C6858((uint64_t)aBlock, v34);

    return swift_bridgeObjectRelease();
  }
  else
  {
    v54 = v17;
    v53 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v53(v70, v15, v16);
    if (MEMORY[0x23B85DBF0](v72 + 40))
    {
      swift_getObjectType();
      sub_23AA332F0();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectWeakAssign();
    sub_23A968488(0, &qword_2569D5B08);
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v36 = (void *)sub_23AA33290();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A961DE4(&qword_2569D5B18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
    sub_23A964084(&qword_2569D5B20);
    sub_23A97221C(&qword_2569D5B28, &qword_2569D5B20);
    v37 = v55;
    v38 = v57;
    sub_23AA3344C();
    sub_23AA332D8();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v38);
    swift_unknownObjectWeakAssign();
    ObjectType = swift_getObjectType();
    v40 = v60;
    sub_23AA32F0C();
    v41 = v63;
    *v63 = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v41, *MEMORY[0x24BEE5400], v7);
    MEMORY[0x23B85CEB8](v40, v41, ObjectType, 30.0);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v41, v7);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v62);
    v42 = swift_allocObject();
    swift_weakInit();
    v43 = v54;
    v44 = v59;
    v45 = (uint64_t)v70;
    v46 = v71;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v59, v70, v71);
    v47 = (*(unsigned __int8 *)(v43 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = v42;
    v53((char *)(v48 + v47), v44, v46);
    aBlock[4] = (uint64_t)sub_23A9721B4;
    aBlock[5] = v48;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A9C4DBC;
    aBlock[3] = (uint64_t)&unk_250BC0818;
    v49 = _Block_copy(aBlock);
    swift_retain();
    v50 = v64;
    sub_23AA32EE8();
    v51 = v67;
    sub_23A9718C8();
    sub_23AA332E4();
    _Block_release(v49);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v69);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v66);
    swift_release();
    swift_release();
    sub_23AA332FC();
    v52 = (_QWORD *)swift_allocObject();
    v52[2] = sub_23A9C52FC;
    v52[3] = 0;
    v52[4] = v73;
    v52[5] = v74;
    swift_bridgeObjectRetain();
    sub_23A96FF3C(v45, 1, (void (*)(_QWORD))sub_23A972210, (uint64_t)v52);
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v45, v46);
  }
}

uint64_t sub_23A9717A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0028);
  v4 = sub_23AA32E88();
  v5 = sub_23AA33218();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23A95E000, v4, v5, "â˜Žï¸Ž FMIPConnectionManager: connect re-scheduled", v6, 2u);
    MEMORY[0x23B85DB24](v6, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A96FF3C(a2, 1, 0, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A9718C8()
{
  sub_23AA32ED0();
  sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A97221C((unint64_t *)&qword_2569D5AE0, (uint64_t *)&unk_2569D5D00);
  return sub_23AA3344C();
}

uint64_t sub_23A971974(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char v15;
  char v16;

  if (a1)
  {
    v15 = 4;
    sub_23A964084((uint64_t *)&unk_2569D5B30);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23AA35F90;
    *(_QWORD *)(v9 + 32) = a4;
    *(_QWORD *)(v9 + 40) = a5;
    swift_bridgeObjectRetain();
    a2(&v15, v9, a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_2569D4AB8 != -1)
      swift_once();
    v11 = sub_23AA32EA0();
    sub_23A9620E8(v11, (uint64_t)qword_2569E0028);
    v12 = sub_23AA32E88();
    v13 = sub_23AA33218();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23A95E000, v12, v13, "â˜Žï¸Ž FMIPConnectionManager: connect performed", v14, 2u);
      MEMORY[0x23B85DB24](v14, -1, -1);
    }

    v16 = 2;
    return ((uint64_t (*)(char *, _QWORD, _QWORD))a2)(&v16, 0, 0);
  }
}

uint64_t sub_23A971AE0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32E1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AB8 != -1)
    swift_once();
  v13 = sub_23AA32EA0();
  v14 = sub_23A9620E8(v13, (uint64_t)qword_2569E0028);
  swift_bridgeObjectRetain_n();
  v15 = sub_23AA32E88();
  v16 = sub_23AA33218();
  if (os_log_type_enabled(v15, v16))
  {
    v33 = v14;
    v17 = swift_slowAlloc();
    v35 = v9;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v36 = a1;
    v20 = v19;
    v38 = v19;
    v34 = v12;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    v37 = sub_23A964DBC(v36, a2, &v38);
    v12 = v34;
    sub_23AA333F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A95E000, v15, v16, "â˜Žï¸Ž FMIPConnectionManager: performing disconnect %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v20, -1, -1);
    v21 = v18;
    v9 = v35;
    MEMORY[0x23B85DB24](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23AA32DD4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23A972098((uint64_t)v8);
    v22 = sub_23AA32E88();
    v23 = sub_23AA33218();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23A95E000, v22, v23, "â˜Žï¸Ž FMIPConnectionManager: cannot disconnect for item with an invalid identifier", v24, 2u);
      MEMORY[0x23B85DB24](v24, -1, -1);
    }

    sub_23A9720D8();
    v25 = (void *)swift_allocError();
    swift_bridgeObjectRetain();
    sub_23A9C684C((uint64_t)&v38, v25);

    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    if (MEMORY[0x23B85DBF0](a3 + 40))
    {
      swift_getObjectType();
      sub_23AA332F0();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return swift_unknownObjectWeakAssign();
    }
    else
    {
      swift_bridgeObjectRetain();
      v27 = sub_23AA32E88();
      v28 = sub_23AA33218();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_23A95E000, v27, v28, "â˜Žï¸Ž FMIPConnectionManager: disconnect is not supported on this platform!", v29, 2u);
        MEMORY[0x23B85DB24](v29, -1, -1);
      }

      v30 = sub_23AA32E88();
      v31 = sub_23AA33218();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_23A95E000, v30, v31, "â˜Žï¸Ž FMIPConnectionManager: disconnect performed", v32, 2u);
        MEMORY[0x23B85DB24](v32, -1, -1);
      }

      sub_23A9C684C((uint64_t)&v38, 0);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
}

uint64_t sub_23A971F70()
{
  uint64_t v0;

  return sub_23A9703BC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23A971F78()
{
  return swift_deallocObject();
}

uint64_t sub_23A971F88()
{
  uint64_t v0;

  return sub_23A964D2C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23A971F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A971FA0()
{
  return swift_release();
}

uint64_t sub_23A971FAC(uint64_t a1)
{
  return sub_23A972014(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A970454);
}

uint64_t sub_23A971FB8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23A971FCC()
{
  uint64_t v0;

  swift_release();

  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A972008(uint64_t a1)
{
  return sub_23A972014(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A970AE8);
}

uint64_t sub_23A972014(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(unsigned __int8 *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_23A97202C()
{
  uint64_t v0;

  sub_23A970E70(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23A972048()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23A972074(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_23A972098(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23A9720D8()
{
  unint64_t result;

  result = qword_2569D5B00;
  if (!qword_2569D5B00)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA36124, &type metadata for FMConnectionManagerError);
    atomic_store(result, (unint64_t *)&qword_2569D5B00);
  }
  return result;
}

uint64_t sub_23A97211C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A972140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23AA32E1C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23A9721B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23AA32E1C() - 8) + 80);
  return sub_23A9717A4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_23A9721E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A972210(uint64_t a1)
{
  uint64_t v1;

  return sub_23A971974(a1, *(void (**)(char *, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23A97221C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23A96C258(a2);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A972288(uint64_t a1, void *a2)
{
  return sub_23A9722A4(a2);
}

void sub_23A972290()
{
  sub_23A9727A0();
}

uint64_t sub_23A97229C(uint64_t a1, int a2)
{
  return sub_23A972DDC(a2);
}

uint64_t sub_23A9722A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  int v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  id v30;
  void *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  unsigned __int8 v36;
  _BYTE *v37;
  uint64_t result;
  int v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;

  v2 = v1;
  v4 = sub_23AA3335C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - v9;
  v11 = sub_23AA33368();
  v12 = MEMORY[0x24BEDF358];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  v18 = objc_msgSend(a1, sel_camera);
  sub_23AA33374();

  sub_23A9732E0((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))v12);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v15, 2, v4);
  if (v19)
  {
    if (v19 != 1)
    {
      if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame) & 1) != 0)
        goto LABEL_8;
      *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame) = 1;
      if (qword_2569D4AC0 != -1)
        goto LABEL_28;
      while (1)
      {
        v20 = sub_23AA32EA0();
        sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
        v21 = sub_23AA32E88();
        v22 = sub_23AA33218();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_23A95E000, v21, v22, "ðŸ§­ FMFindingViewCtrl: Got initial AR Frame", v23, 2u);
          MEMORY[0x23B85DB24](v23, -1, -1);
        }

LABEL_8:
        v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount);
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (!v25)
          break;
        __break(1u);
LABEL_28:
        swift_once();
      }
      *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount) = v26;
      if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * v26 + 0x888888888888888, 1) <= 0x888888888888888uLL)
        sub_23A9AD9D4();
    }
    return sub_23A973324((uint64_t)v17, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v15, v4);
  swift_beginAccess();
  if (sub_23AA2B1B0() != 4)
  {
    v27 = (char *)&loc_23A972540 + dword_23A97278C[sub_23AA2B1B0()];
    __asm { BR              X10 }
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v28 == *MEMORY[0x24BEDF330] || (v29 = v28, v28 == *MEMORY[0x24BEDF340]))
  {
LABEL_22:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return sub_23A973324((uint64_t)v17, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  }
  if (v28 == *MEMORY[0x24BEDF348])
  {
    v30 = objc_msgSend(a1, sel_lightEstimate);
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, sel_ambientIntensity);
      if (v32 <= 500.0)
      {
        v33 = *(_QWORD *)(v2
                        + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount);
        v25 = __OFADD__(v33, 1);
        v34 = v33 + 1;
        if (v25)
        {
          __break(1u);
          JUMPOUT(0x23A97278CLL);
        }
        *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount) = v34;
        if (v34 >= 2)
        {
          sub_23A9AE104(1, 1);
          v35 = *(_BYTE **)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
          v36 = v35[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
          v35[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState] = 6;
          v37 = v35;
          sub_23AA087BC(v36);

          v31 = v37;
        }
      }

    }
    goto LABEL_22;
  }
  v39 = *MEMORY[0x24BEDF338];
  v40 = *(void (**)(char *, uint64_t))(v5 + 8);
  v40(v10, v4);
  result = sub_23A973324((uint64_t)v17, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  if (v29 != v39)
    return ((uint64_t (*)(char *, uint64_t))v40)(v8, v4);
  return result;
}

void sub_23A9727A0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;

  v1 = v0;
  v24 = (id)sub_23AA32CE4();
  v2 = objc_msgSend(v24, sel_domain);
  v3 = sub_23AA32FD8();
  v5 = v4;

  if (v3 == sub_23AA32FD8() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_23AA33728();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_9;
  }
  if (objc_msgSend(v24, sel_code))
  {
LABEL_9:
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isInternalBuild) == 1)
    {
      sub_23A9E4FD4(0xD00000000000001ALL, 0x800000023AA3C270, 0, 0);
      sub_23A964084((uint64_t *)&unk_2569D6690);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_23AA35F90;
      swift_getErrorValue();
      v10 = sub_23AA3377C();
      v12 = v11;
      *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v9 + 64) = sub_23A9640C4();
      *(_QWORD *)(v9 + 32) = v10;
      *(_QWORD *)(v9 + 40) = v12;
      v13 = sub_23AA32FE4();
      v15 = v14;
      swift_bridgeObjectRelease();
      sub_23A9E3150(v13, v15, 0, 0, 1, 0, 0);
      swift_bridgeObjectRelease();
    }
    if (qword_2569D4AC0 != -1)
      swift_once();
    v16 = sub_23AA32EA0();
    sub_23A9620E8(v16, (uint64_t)qword_2569E0040);
    v17 = sub_23AA32E88();
    v18 = sub_23AA33218();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23A95E000, v17, v18, "ðŸ§­ FMFindingViewCtrl: Resetiing", v19, 2u);
      MEMORY[0x23B85DB24](v19, -1, -1);
    }
    goto LABEL_15;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v21 = sub_23AA32EA0();
  sub_23A9620E8(v21, (uint64_t)qword_2569E0040);
  v17 = sub_23AA32E88();
  v22 = sub_23AA33218();
  if (os_log_type_enabled(v17, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23A95E000, v17, v22, "ðŸ§­ FMFindingViewCtrl: Resetiing", v23, 2u);
    MEMORY[0x23B85DB24](v23, -1, -1);
  }
LABEL_15:

  v20 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  sub_23A9FDFB4();
  sub_23A9FDCAC();

  sub_23AA17710();
}

uint64_t sub_23A972B64(double a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v3 = sub_23AA32ED0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32F00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(double *)(v11 + 24) = a1;
  v12 = (void *)objc_opt_self();
  v1;
  if (objc_msgSend(v12, sel_isMainThread))
  {
    sub_23AA03DA0(a1);
    return swift_release();
  }
  else
  {
    sub_23A9731D4();
    v14 = (void *)sub_23AA33290();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_23A9731A0;
    *(_QWORD *)(v15 + 24) = v11;
    aBlock[4] = sub_23A968410;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC0988;
    v16 = _Block_copy(aBlock);
    v19 = v4;
    v17 = v16;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v10, v6, v17);
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_23A972DDC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  __int128 v60;
  __int128 v61;

  v2 = v1;
  v4 = (int *)type metadata accessor for FMFindingViewState();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (unsigned __int16 *)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (unsigned __int16 *)((char *)&v50 - v8);
  v10 = sub_23A9B3278(a1);
  v59 = a1;
  if (v10 == 0xD00000000000001DLL && v11 == 0x800000023AA3AF30)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v13 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    v60 = 0u;
    v61 = 0u;
    v14 = v13;
    sub_23A9A87F0((uint64_t)&v60);
LABEL_11:

    sub_23A968C64((uint64_t)&v60);
    goto LABEL_12;
  }
  v12 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_5;
  if (sub_23A9B3278(a1) == 0xD00000000000001CLL && v15 == 0x800000023AA3AF50)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v17 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    v60 = 0u;
    v61 = 0u;
    v14 = v17;
    sub_23A9A8E90((uint64_t)&v60);
    goto LABEL_11;
  }
  v16 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    goto LABEL_10;
LABEL_12:
  v18 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_23A9732E0(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v56 = *v7;
  v19 = v4[5];
  v20 = (char *)v7 + v19;
  v21 = (char *)v9 + v19;
  v22 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v20, v22);
  v23 = (uint64_t *)((char *)v7 + v4[6]);
  v25 = *v23;
  v24 = v23[1];
  LOBYTE(v23) = *((_BYTE *)v7 + v4[7]);
  v26 = (char *)v7 + v4[8];
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  v30 = (void *)*((_QWORD *)v26 + 2);
  v29 = (void *)*((_QWORD *)v26 + 3);
  v32 = *((_QWORD *)v26 + 5);
  v54 = *((_QWORD *)v26 + 4);
  v31 = v54;
  v55 = v29;
  v34 = *((_QWORD *)v26 + 7);
  v52 = *((_QWORD *)v26 + 6);
  v33 = v52;
  v53 = v32;
  v51 = v34;
  v35 = *((_QWORD *)v26 + 8);
  v36 = *((_QWORD *)v26 + 9);
  v58 = v2;
  v37 = *((_QWORD *)v26 + 10);
  v38 = *((_QWORD *)v26 + 11);
  v39 = v26[100];
  v40 = *((unsigned int *)v26 + 24);
  v57 = v40 | (v39 << 32);
  v41 = *((_BYTE *)v7 + v4[10]);
  v42 = *((_BYTE *)v7 + v4[11]);
  v43 = *((_BYTE *)v7 + v4[12]);
  v44 = *((_BYTE *)v7 + v4[13]);
  v45 = *((_BYTE *)v7 + v4[14]);
  v46 = (_QWORD *)((char *)v9 + v4[15]);
  *v46 = 0;
  v46[1] = 0;
  *v9 = v56;
  v47 = (_QWORD *)((char *)v9 + v4[6]);
  *v47 = v25;
  v47[1] = v24;
  *((_BYTE *)v9 + v4[7]) = (_BYTE)v23;
  v48 = (char *)v9 + v4[8];
  *(_QWORD *)v48 = v27;
  *((_QWORD *)v48 + 1) = v28;
  *((_QWORD *)v48 + 2) = v30;
  *((_QWORD *)v48 + 3) = v29;
  *((_QWORD *)v48 + 4) = v31;
  *((_QWORD *)v48 + 5) = v32;
  *((_QWORD *)v48 + 6) = v33;
  *((_QWORD *)v48 + 7) = v34;
  *((_QWORD *)v48 + 8) = v35;
  *((_QWORD *)v48 + 9) = v36;
  *((_QWORD *)v48 + 10) = v37;
  *((_QWORD *)v48 + 11) = v38;
  v48[100] = v39;
  *((_DWORD *)v48 + 24) = v40;
  *((_BYTE *)v9 + v4[9]) = v59;
  *((_BYTE *)v9 + v4[10]) = v41;
  *((_BYTE *)v9 + v4[11]) = v42;
  *((_BYTE *)v9 + v4[12]) = v43;
  *((_BYTE *)v9 + v4[13]) = v44;
  *((_BYTE *)v9 + v4[14]) = v45;
  swift_bridgeObjectRetain();
  sub_23A963BDC(v27, v28, v30, v55, v54, v53, v52, v51, v35, v36, v37, v38, v57);
  sub_23A973324((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA12BC8(v9);
  return sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

uint64_t sub_23A97317C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9731A0()
{
  uint64_t v0;

  sub_23AA03DA0(*(double *)(v0 + 24));
}

unint64_t sub_23A9731D4()
{
  unint64_t result;

  result = qword_2569D5B10;
  if (!qword_2569D5B10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D5B10);
  }
  return result;
}

uint64_t sub_23A973210()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A973234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A973244()
{
  return swift_release();
}

unint64_t sub_23A97324C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D5AD0;
  if (!qword_2569D5AD0)
  {
    v1 = sub_23AA32ED0();
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2569D5AD0);
  }
  return result;
}

unint64_t sub_23A973294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D5AE0;
  if (!qword_2569D5AE0)
  {
    v1 = sub_23A96C258((uint64_t *)&unk_2569D5D00);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2569D5AE0);
  }
  return result;
}

uint64_t sub_23A9732E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A973324(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23A973360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  char v6;
  uint64_t (*v7)(uint64_t, _OWORD *);
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[6];
  int v13;
  char v14;

  v5 = *(_DWORD *)(a2 + 96);
  v6 = *(_BYTE *)(a2 + 100);
  v7 = *(uint64_t (**)(uint64_t, _OWORD *))(a5 + 8);
  v8 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v8;
  v9 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v9;
  v10 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v10;
  v14 = v6;
  v13 = v5;
  return v7(a1, v12);
}

uint64_t sub_23A9733AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int16 v6;
  char v7;
  uint64_t (*v8)(uint64_t, _OWORD *);
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[6];
  __int16 v14;
  char v15;

  v6 = *(_WORD *)(a2 + 96);
  v7 = *(_BYTE *)(a2 + 98);
  v8 = *(uint64_t (**)(uint64_t, _OWORD *))(a6 + 16);
  v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  v10 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v10;
  v11 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v11;
  v14 = v6;
  v15 = v7;
  return v8(a1, v13);
}

uint64_t sub_23A9733F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_23A973400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_23A973408(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23A973410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_23A973418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_23A973420(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_23A973428(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_23A973430(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_23A973438(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_23A973440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

id sub_23A9734C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingLocalizer.DelegateTrampoline();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23A97353C(_QWORD *a1, __int16 *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __int16 v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  id v99;
  objc_class *v100;
  char *v101;
  unsigned int v102;
  char *v103;
  uint64_t v104;
  void *v105;
  _QWORD *v106;
  id v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void *v111;
  _QWORD *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char v117;
  _QWORD *v118;
  id v119;
  void *v120;
  uint64_t result;
  uint64_t v122;
  id v123;
  void *v124;
  char *v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  int v135;
  id v136;
  char *v137;
  id v138;
  _QWORD *v139;
  int v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  objc_super v155;
  _QWORD v156[3];
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;

  v138 = a3;
  v6 = sub_23A964084((uint64_t *)&unk_2569D5D50);
  MEMORY[0x24BDAC7A8](v6);
  v145 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_23A964084((uint64_t *)&unk_2569D8C90);
  v151 = *(_QWORD *)(v144 - 8);
  v8 = MEMORY[0x24BDAC7A8](v144);
  v150 = (uint64_t)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v143 = (uint64_t)&v132 - v10;
  v148 = sub_23A964084((uint64_t *)&unk_2569D5D60);
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v12 = (unint64_t *)((char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v149 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v141 = (char *)&v132 - v16;
  v17 = sub_23AA32E1C();
  v152 = *(_QWORD *)(v17 - 8);
  v153 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v142 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v146 = (char *)&v132 - v20;
  v21 = *a2;
  v133 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer] = 0;
  v22 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_poseProvider;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_poseProvider] = 0;
  v23 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager] = 0;
  v24 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID] = MEMORY[0x24BEE4B00];
  v25 = &v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
  *(_OWORD *)v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  *((_OWORD *)v25 + 2) = 0u;
  *((_OWORD *)v25 + 3) = 0u;
  *((_OWORD *)v25 + 4) = 0u;
  *((_OWORD *)v25 + 5) = 0u;
  *(_DWORD *)(v25 + 95) = 0;
  v26 = &v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_mockIndex];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  v27 = objc_allocWithZone((Class)type metadata accessor for FMFindingLocalizer.DelegateTrampoline());
  v134 = v3;
  v137 = v3;
  v136 = objc_msgSend(v27, sel_init);
  v139 = a1;
  v135 = (unsigned __int16)v21;
  if ((v21 & 0x80000000) == 0)
  {
    if ((v21 & 0xFE) != 2)
    {
      v41 = v139;
      v42 = v139[2];
      if (v42)
      {
        v154 = MEMORY[0x24BEE4AF8];
        sub_23AA3356C();
        v140 = v135;
        v43 = (uint64_t)(v41 + 4);
        do
        {
          sub_23A963A14(v43, (uint64_t)&v162);
          sub_23A963A14((uint64_t)&v162, (uint64_t)v156);
          sub_23A964084((uint64_t *)&unk_2569D63B0);
          sub_23A964084((uint64_t *)&unk_2569D5D80);
          if ((swift_dynamicCast() & 1) == 0)
          {
            v161 = 0;
            v159 = 0u;
            v160 = 0u;
          }
          v46 = *((_QWORD *)&v163 + 1);
          v45 = v164;
          sub_23A96545C(&v162, *((uint64_t *)&v163 + 1));
          (*(void (**)(uint64_t, uint64_t))(v45 + 16))(v46, v45);
          sub_23A968378((uint64_t)&v159, (uint64_t)v156, (uint64_t *)&unk_2569D63C0);
          v47 = v157;
          if (v157)
          {
            v48 = v158;
            sub_23A96545C(v156, v157);
            v49 = v141;
            (*(void (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
            sub_23A963B3C((uint64_t)v156);
            v51 = v152;
            v50 = v153;
          }
          else
          {
            sub_23A9683BC((uint64_t)v156, (uint64_t *)&unk_2569D63C0);
            v51 = v152;
            v50 = v153;
            v49 = v141;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56))(v141, 1, 1, v153);
          }
          v52 = (void *)sub_23AA32DEC();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50) == 1)
          {
            v44 = 0;
          }
          else
          {
            v44 = (void *)sub_23AA32DEC();
            (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
          }
          objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7BA50]), sel_initWithUUID_productUUID_isOwned_, v52, v44, v140 != 1);

          (*(void (**)(char *, uint64_t))(v51 + 8))(v146, v50);
          sub_23A9683BC((uint64_t)&v159, (uint64_t *)&unk_2569D63C0);
          sub_23A963B3C((uint64_t)&v162);
          sub_23AA33554();
          sub_23AA33578();
          sub_23AA33584();
          sub_23AA33560();
          v43 += 40;
          --v42;
        }
        while (v42);
      }
      v30 = v138;
      sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
      v53 = v136;
      v54 = (void *)sub_23AA33290();
      v55 = objc_allocWithZone(MEMORY[0x24BE7BA40]);
      sub_23A968488(0, &qword_2569D5D28);
      v56 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      v57 = objc_msgSend(v55, sel_initWithDelegate_queue_id_, v53, v54, v56);

      v33 = *(void **)&v134[v133];
      *(_QWORD *)&v134[v133] = v57;
      goto LABEL_22;
    }
    if (qword_2569D4AE0 == -1)
    {
LABEL_4:
      v28 = (void *)qword_2569E00A0;
      v29 = *(void **)(qword_2569E00A0 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
      v30 = v138;
      *(_QWORD *)(qword_2569E00A0 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession) = v138;
      v31 = v28;
      v32 = v30;

      v33 = *(void **)&v134[v24];
      *(_QWORD *)&v134[v24] = v31;
LABEL_22:

      a1 = v139;
      v34 = (uint64_t)v145;
      goto LABEL_23;
    }
LABEL_86:
    swift_once();
    goto LABEL_4;
  }
  if (a1[2])
  {
    sub_23A963A14((uint64_t)(a1 + 4), (uint64_t)&v162);
    sub_23A9683BC((uint64_t)&v162, &qword_2569D53C8);
    v34 = (uint64_t)v145;
    v30 = v138;
    if (v138)
    {
      if ((v135 & 0x7E00) != 0x200)
      {
        v122 = qword_2569D4AD8;
        v123 = v138;
        if (v122 != -1)
          swift_once();
        v124 = (void *)qword_2569E0098;
        v125 = v134;
        v126 = *(void **)&v134[v23];
        *(_QWORD *)&v134[v23] = qword_2569E0098;
        v127 = v124;

        v128 = objc_allocWithZone((Class)type metadata accessor for FMR1DevicePoseProvider());
        v129 = v136;
        v130 = (char *)objc_msgSend(v128, sel_initWithARSession_, v123);
        *(_QWORD *)&v130[OBJC_IVAR____TtC11FMFindingUI22FMR1DevicePoseProvider_frameDelegate + 8] = &off_250BC09B8;
        swift_unknownObjectWeakAssign();
        v131 = v130;
        objc_msgSend(v131, sel_setDelegate_, v129);

        v40 = *(void **)&v125[v22];
        *(_QWORD *)&v125[v22] = v131;
        goto LABEL_84;
      }
      v35 = qword_2569D4AE0;
      v36 = v138;
      if (v35 != -1)
        goto LABEL_88;
      goto LABEL_9;
    }
  }
  else
  {
    v164 = 0;
    v162 = 0u;
    v163 = 0u;
    sub_23A9683BC((uint64_t)&v162, &qword_2569D53C8);
    v34 = (uint64_t)v145;
    v30 = v138;
  }
  while (1)
  {
LABEL_23:
    v58 = a1[2];
    v59 = MEMORY[0x24BEE4AF8];
    if (v58)
    {
      *(_QWORD *)&v159 = MEMORY[0x24BEE4AF8];
      sub_23AA1CF64(0, v58, 0);
      v60 = (uint64_t)(a1 + 4);
      v59 = v159;
      do
      {
        sub_23A963A14(v60, (uint64_t)&v162);
        v61 = *(int *)(v148 + 48);
        v62 = *((_QWORD *)&v163 + 1);
        v63 = v164;
        sub_23A96545C(&v162, *((uint64_t *)&v163 + 1));
        (*(void (**)(uint64_t, uint64_t))(v63 + 16))(v62, v63);
        *(unint64_t *)((char *)v12 + v61) = 1;
        sub_23A963B3C((uint64_t)&v162);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23AA1CF64(0, *(_QWORD *)(v59 + 16) + 1, 1);
          v59 = v159;
        }
        v65 = *(_QWORD *)(v59 + 16);
        v64 = *(_QWORD *)(v59 + 24);
        if (v65 >= v64 >> 1)
        {
          sub_23AA1CF64(v64 > 1, v65 + 1, 1);
          v59 = v159;
        }
        *(_QWORD *)(v59 + 16) = v65 + 1;
        sub_23A96C1B8((uint64_t)v12, v59+ ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ *(_QWORD *)(v147 + 72) * v65, (uint64_t *)&unk_2569D5D60);
        v60 += 40;
        --v58;
      }
      while (v58);
      v30 = v138;
      v34 = (uint64_t)v145;
    }
    v66 = v144;
    if (*(_QWORD *)(v59 + 16))
    {
      sub_23A964084((uint64_t *)&unk_2569D5D70);
      v67 = sub_23AA335E4();
    }
    else
    {
      v67 = MEMORY[0x24BEE4B00];
    }
    v68 = v139;
    *(_QWORD *)&v162 = v67;
    v69 = swift_bridgeObjectRetain();
    sub_23A97BBC0(v69, 1, &v162);
    v147 = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v137[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findableStatesByUUID] = v162;
    v70 = (char *)v68[2];
    if (v70)
    {
      v71 = (uint64_t)(v68 + 4);
      swift_bridgeObjectRetain();
      v72 = MEMORY[0x24BEE4AF8];
      v73 = (uint64_t *)&unk_2569D63C0;
      v146 = v70;
      while (1)
      {
        sub_23A963A14(v71, (uint64_t)&v162);
        sub_23A963A14((uint64_t)&v162, (uint64_t)v156);
        sub_23A964084((uint64_t *)&unk_2569D63B0);
        sub_23A964084((uint64_t *)&unk_2569D5D80);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v161 = 0;
          v159 = 0u;
          v160 = 0u;
        }
        sub_23A968378((uint64_t)&v159, (uint64_t)v156, v73);
        v74 = v73;
        v75 = v157;
        if (!v157)
          break;
        v76 = v158;
        sub_23A96545C(v156, v157);
        v77 = *(void (**)(uint64_t, uint64_t))(v76 + 16);
        v78 = v76;
        v79 = (uint64_t)v149;
        v77(v75, v78);
        sub_23A963B3C((uint64_t)v156);
        v73 = v74;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v79, 1, v153) == 1)
          goto LABEL_44;
        v80 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 32);
        v148 = v72;
        v81 = v142;
        v82 = v153;
        v80(v142, v79, v153);
        v83 = v34 + *(int *)(v144 + 48);
        v84 = v73;
        v85 = *((_QWORD *)&v163 + 1);
        v86 = v164;
        sub_23A96545C(&v162, *((uint64_t *)&v163 + 1));
        v87 = *(void (**)(uint64_t, uint64_t))(v86 + 16);
        v88 = v85;
        v73 = v84;
        v89 = v86;
        v34 = (uint64_t)v145;
        v87(v88, v89);
        v72 = v148;
        v80((char *)v83, (uint64_t)v81, v82);
        v66 = v144;
        v90 = 0;
LABEL_45:
        v91 = v151;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v151 + 56))(v34, v90, 1, v66);
        sub_23A9683BC((uint64_t)&v159, v73);
        sub_23A963B3C((uint64_t)&v162);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v34, 1, v66) == 1)
        {
          sub_23A9683BC(v34, (uint64_t *)&unk_2569D5D50);
        }
        else
        {
          v92 = v143;
          sub_23A96C1B8(v34, v143, (uint64_t *)&unk_2569D8C90);
          sub_23A96C1B8(v92, v150, (uint64_t *)&unk_2569D8C90);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v72 = sub_23AA1C8B0(0, *(_QWORD *)(v72 + 16) + 1, 1, v72);
          v94 = *(_QWORD *)(v72 + 16);
          v93 = *(_QWORD *)(v72 + 24);
          if (v94 >= v93 >> 1)
            v72 = sub_23AA1C8B0(v93 > 1, v94 + 1, 1, v72);
          *(_QWORD *)(v72 + 16) = v94 + 1;
          sub_23A96C1B8(v150, v72+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(_QWORD *)(v151 + 72) * v94, (uint64_t *)&unk_2569D8C90);
        }
        v71 += 40;
        if (!--v70)
        {
          v68 = v139;
          swift_bridgeObjectRelease();
          v30 = v138;
          v70 = v146;
          goto LABEL_53;
        }
      }
      sub_23A9683BC((uint64_t)v156, v74);
      v79 = (uint64_t)v149;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56))(v149, 1, 1, v153);
      v73 = v74;
LABEL_44:
      sub_23A9683BC(v79, (uint64_t *)&unk_2569D5D30);
      v90 = 1;
      goto LABEL_45;
    }
    v72 = MEMORY[0x24BEE4AF8];
LABEL_53:
    v95 = v135;
    if (*(_QWORD *)(v72 + 16))
    {
      sub_23A964084((uint64_t *)&unk_2569D5D90);
      v96 = sub_23AA335E4();
    }
    else
    {
      v96 = MEMORY[0x24BEE4B00];
    }
    *(_QWORD *)&v162 = v96;
    v97 = swift_bridgeObjectRetain();
    v24 = v147;
    sub_23A97B770(v97, 1, &v162);
    if (v24)
      break;
    swift_bridgeObjectRelease();
    v98 = v137;
    *(_QWORD *)&v137[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_productUUIDsByFindableUUID] = v162;
    *(_WORD *)&v98[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology] = v95;
    v12 = &qword_2569D5000;
    v99 = v136;
    *(_QWORD *)&v98[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline] = v136;
    a1 = v99;

    v100 = (objc_class *)type metadata accessor for FMFindingLocalizer();
    v155.receiver = v98;
    v155.super_class = v100;
    v101 = (char *)objc_msgSendSuper2(&v155, sel_init);
    swift_unknownObjectWeakAssign();
    v102 = *(__int16 *)&v101[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
    if ((v102 & 0x80000000) == 0)
    {
      if (v70)
      {
        if (!v68[2])
        {
          __break(1u);
          goto LABEL_86;
        }
        sub_23A963A14((uint64_t)(v68 + 4), (uint64_t)&v159);
      }
      else
      {
        v161 = 0;
        v159 = 0u;
        v160 = 0u;
      }
      v103 = v101;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v160 + 1))
      {
        v104 = sub_23A963B98(&v159, (uint64_t)&v162);
        if ((v102 & 0xFE) != 2)
          goto LABEL_79;
        v105 = *(void **)&v103[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
        if (!v105)
          goto LABEL_79;
        MEMORY[0x24BDAC7A8](v104);
        *(&v132 - 6) = (uint64_t)&v162;
        *(&v132 - 5) = (uint64_t)v105;
        *(&v132 - 4) = (uint64_t)v30;
        *(&v132 - 3) = (uint64_t)a1;
        *(&v132 - 2) = (uint64_t)&off_250BC09D0;
        *((_WORD *)&v132 - 4) = v95;
        type metadata accessor for FMNearbyInteractionManagerSubscription();
        v106 = a1;
        v107 = v105;
        sub_23AA3329C();

        v108 = v159;
        sub_23A963B3C((uint64_t)&v162);
        v109 = *(void **)&v103[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
        *(_QWORD *)&v103[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription] = v108;

        return (uint64_t)v101;
      }
      goto LABEL_75;
    }
    if (!v70)
    {
      v161 = 0;
      v159 = 0u;
      v160 = 0u;
LABEL_71:
      v103 = v101;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v160 + 1))
      {
        v110 = sub_23A963B98(&v159, (uint64_t)&v162);
        if (((v102 >> 8) & 0x7E) == 2)
        {
          v111 = *(void **)&v103[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
          if (v111)
          {
            MEMORY[0x24BDAC7A8](v110);
            *(&v132 - 6) = (uint64_t)&v162;
            *(&v132 - 5) = (uint64_t)v111;
            *(&v132 - 4) = (uint64_t)v30;
            *(&v132 - 3) = (uint64_t)a1;
            *(&v132 - 2) = (uint64_t)&off_250BC09D0;
            *((_WORD *)&v132 - 4) = v95;
            type metadata accessor for FMNearbyInteractionManagerSubscription();
            v112 = a1;
            v113 = v111;
            sub_23AA3329C();

            v114 = v159;
            sub_23A963B3C((uint64_t)&v162);
            v115 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription;
            goto LABEL_78;
          }
LABEL_79:

          sub_23A963B3C((uint64_t)&v162);
        }
        else
        {
          v116 = *(void **)&v103[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager];
          if (!v116)
            goto LABEL_79;
          MEMORY[0x24BDAC7A8](v110);
          *(&v132 - 6) = (uint64_t)&v162;
          *(&v132 - 5) = (uint64_t)v116;
          *(&v132 - 4) = (uint64_t)a1;
          *(&v132 - 3) = (uint64_t)&off_250BC0A20;
          *((_BYTE *)&v132 - 16) = v117;
          type metadata accessor for FMR1ProximityManagerSubscription();
          v118 = a1;
          v119 = v116;
          sub_23AA3329C();

          v114 = v159;
          sub_23A963B3C((uint64_t)&v162);
          v115 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription;
LABEL_78:
          v120 = *(void **)&v103[v115];
          *(_QWORD *)&v103[v115] = v114;

        }
        return (uint64_t)v101;
      }
LABEL_75:

      sub_23A9683BC((uint64_t)&v159, &qword_2569D53C8);
      return (uint64_t)v101;
    }
    if (v68[2])
    {
      sub_23A963A14((uint64_t)(v68 + 4), (uint64_t)&v159);
      goto LABEL_71;
    }
    __break(1u);
LABEL_88:
    swift_once();
LABEL_9:
    v37 = (void *)qword_2569E00A0;
    v38 = *(void **)(qword_2569E00A0 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
    *(_QWORD *)(qword_2569E00A0 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession) = v30;
    v39 = v37;

    v40 = *(void **)&v134[v24];
    *(_QWORD *)&v134[v24] = v39;
LABEL_84:

  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_23A974700()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  id v14;
  char *v15;
  id result;
  objc_class *v17;
  _QWORD v18[6];
  objc_super v19;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription];
  if (v2)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager];
    if (v3)
    {
      v4 = v2;
      v5 = v3;
      sub_23A99AD3C(v4);

    }
  }
  v6 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
  if (!v6)
    goto LABEL_7;
  v7 = *(char **)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
  if (!v7)
    goto LABEL_7;
  v8 = *(NSObject **)&v7[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v6;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_23A981D34;
  *(_QWORD *)(v10 + 24) = v9;
  v18[4] = sub_23A971F88;
  v18[5] = v10;
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 1107296256;
  v18[2] = sub_23A9AFD6C;
  v18[3] = &unk_250BC0BE8;
  v11 = _Block_copy(v18);
  v12 = v6;
  v13 = v7;
  v14 = v12;
  v15 = v13;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  result = (id)swift_release();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_7:
    v17 = (objc_class *)type metadata accessor for FMFindingLocalizer();
    v19.receiver = v1;
    v19.super_class = v17;
    return objc_msgSendSuper2(&v19, sel_dealloc);
  }
  return result;
}

uint64_t sub_23A974A48()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_23AA33824();
  sub_23A9E2E00(9uLL, v0, v1);
  sub_23A96F764();
  sub_23AA3302C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 7876668;
}

void sub_23A974B18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  int v6;
  void *v7;
  void *v8;
  id v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;

  v1 = v0;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v2 = sub_23AA32EA0();
  sub_23A9620E8(v2, (uint64_t)qword_2569E0040);
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMFindingLocalizer: Resetting", v5, 2u);
    MEMORY[0x23B85DB24](v5, -1, -1);
  }

  sub_23A9751E4();
  v6 = *(__int16 *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
  if ((v6 & 0x80000000) == 0)
  {
    if ((v6 & 0xFE) == 2)
    {
      if (qword_2569D4AE0 != -1)
        swift_once();
      v7 = (void *)qword_2569E00A0;
      v8 = *(void **)(qword_2569E00A0 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
      *(_QWORD *)(qword_2569E00A0 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession) = 0;

      v19 = *(id *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
      *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager] = v7;
      v9 = v7;

    }
    else
    {
      v10 = v1;
      v11 = swift_bridgeObjectRetain();
      sub_23A97FFE0(v11, (uint64_t)v10, v6);
      swift_bridgeObjectRelease();

      v12 = *(void **)&v10[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline];
      sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
      v13 = v12;
      v14 = (void *)sub_23AA33290();
      v15 = objc_allocWithZone(MEMORY[0x24BE7BA40]);
      sub_23A968488(0, &qword_2569D5D28);
      v16 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v15, sel_initWithDelegate_queue_id_, v13, v14, v16);

      v18 = *(void **)&v10[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer];
      *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer] = v17;

    }
  }
}

void sub_23A974D90()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  __int16 v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  _QWORD v34[3];
  _QWORD *v35;
  uint64_t v36;
  id v37[2];

  v37[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_QWORD *)((char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2569D4AC0 != -1)
    swift_once();
  v4 = sub_23AA32EA0();
  sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
  v5 = v0;
  v6 = sub_23AA32E88();
  v7 = sub_23AA33218();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (void *)swift_slowAlloc();
    v35 = v3;
    v10 = v9;
    v34[2] = v1;
    *(_DWORD *)v8 = 136315138;
    v37[0] = v9;
    v34[1] = v8 + 4;
    sub_23AA32E1C();
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    type metadata accessor for PRBTLocalizerState(0);
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, v11, MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v12 = sub_23AA32F90();
    v14 = v13;
    swift_bridgeObjectRelease();
    v36 = sub_23A964DBC(v12, v14, (uint64_t *)v37);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMFindingLocalizer: Starting localizer for %s", v8, 0xCu);
    swift_arrayDestroy();
    v15 = v10;
    v3 = v35;
    MEMORY[0x23B85DB24](v15, -1, -1);
    MEMORY[0x23B85DB24](v8, -1, -1);

  }
  else
  {

  }
  v16 = *(_WORD *)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
  if (v16 < 0)
  {
    if ((v16 & 0x7E00) == 0x200)
    {
      v20 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
      if (!v20)
        return;
      v18 = v20;
      v19 = 0;
      goto LABEL_13;
    }
    v27 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription];
    if (v27)
    {
      v28 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_poseProvider];
      v29 = v27;
      v30 = v28;
      sub_23A99878C(v28);

    }
  }
  else
  {
    if ((v16 & 0xFE) == 2)
    {
      v17 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
      if (!v17)
        return;
      v18 = v17;
      v19 = 1;
LABEL_13:
      sub_23A9889CC(v19);

      return;
    }
    v21 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer];
    if (v21)
    {
      v22 = v21;
      v23 = swift_bridgeObjectRetain();
      sub_23A9F6D5C(v23);
      swift_bridgeObjectRelease();
      sub_23AA32E1C();
      v24 = (void *)sub_23AA330A4();
      swift_release();
      v37[0] = 0;
      v25 = objc_msgSend(v22, sel_startRangingOn_withError_, v24, v37);

      if (v25)
      {
        v26 = v37[0];
      }
      else
      {
        v35 = v37[0];
        v31 = v37[0];
        v32 = (void *)sub_23AA32CF0();

        swift_willThrow();
        *v3 = v32;
        swift_storeEnumTagMultiPayload();
        v33 = v32;
        sub_23A975624((uint64_t)v3, 0);

        sub_23A980438((uint64_t)v3);
      }
    }
  }
}

void sub_23A9751E4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  __int16 v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  unsigned int v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  _QWORD v29[3];
  _QWORD *v30;
  uint64_t v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_QWORD *)((char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2569D4AC0 != -1)
    swift_once();
  v4 = sub_23AA32EA0();
  sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
  v5 = v0;
  v6 = sub_23AA32E88();
  v7 = sub_23AA33218();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (void *)swift_slowAlloc();
    v30 = v3;
    v10 = v9;
    v29[2] = v1;
    *(_DWORD *)v8 = 136315138;
    v32[0] = v9;
    v29[1] = v8 + 4;
    sub_23AA32E1C();
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    type metadata accessor for PRBTLocalizerState(0);
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, v11, MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v12 = sub_23AA32F90();
    v14 = v13;
    swift_bridgeObjectRelease();
    v31 = sub_23A964DBC(v12, v14, (uint64_t *)v32);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMFindingLocalizer: Stopping localizer for %s", v8, 0xCu);
    swift_arrayDestroy();
    v15 = v10;
    v3 = v30;
    MEMORY[0x23B85DB24](v15, -1, -1);
    MEMORY[0x23B85DB24](v8, -1, -1);

  }
  else
  {

  }
  if (*(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline]
                 + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  v16 = *(_WORD *)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
  if (v16 < 0)
  {
    if ((v16 & 0x7E00) != 0x200)
    {
      v25 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription];
      if (!v25)
        return;
      v24 = v25;
      sub_23A998EB0();
      goto LABEL_18;
    }
LABEL_14:
    v23 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
    if (!v23)
      return;
    v24 = v23;
    sub_23A989284();
LABEL_18:

    return;
  }
  if ((v16 & 0xFE) == 2)
    goto LABEL_14;
  v17 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer];
  if (v17)
  {
    v18 = v17;
    v19 = swift_bridgeObjectRetain();
    sub_23A9F6D5C(v19);
    swift_bridgeObjectRelease();
    sub_23AA32E1C();
    v20 = (void *)sub_23AA330A4();
    swift_release();
    v32[0] = 0;
    v21 = objc_msgSend(v18, sel_stopRangingOn_withError_, v20, v32);

    if (v21)
    {
      v22 = v32[0];
    }
    else
    {
      v30 = v32[0];
      v26 = v32[0];
      v27 = (void *)sub_23AA32CF0();

      swift_willThrow();
      *v3 = v27;
      swift_storeEnumTagMultiPayload();
      v28 = v27;
      sub_23A975624(v3, 0);

      sub_23A980438((uint64_t)v3);
    }
  }
}

uint64_t sub_23A975624(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t *, uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];

  v3 = v2;
  v6 = type metadata accessor for FMFindingLocalizerError();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - v10;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
  sub_23A981CC4(a1, (uint64_t)v11);
  v13 = sub_23AA32E88();
  v14 = sub_23AA33218();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v28 = a1;
    v16 = v15;
    v17 = swift_slowAlloc();
    v30[0] = v17;
    *(_DWORD *)v16 = 136315394;
    sub_23A981CC4((uint64_t)v11, (uint64_t)v9);
    v18 = sub_23AA32FFC();
    v29 = sub_23A964DBC(v18, v19, v30);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A980438((uint64_t)v11);
    *(_WORD *)(v16 + 12) = 1024;
    LODWORD(v29) = a2 & 1;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMFindingLocalizer: Did fail with error: %s, shouldRestart: %{BOOL}d", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v17, -1, -1);
    v20 = v16;
    a1 = v28;
    MEMORY[0x23B85DB24](v20, -1, -1);
  }
  else
  {
    sub_23A980438((uint64_t)v11);
  }

  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline]
      + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
  result = MEMORY[0x23B85DBF0](v21);
  if (result)
  {
    v23 = *(_QWORD *)(v21 + 8);
    ObjectType = swift_getObjectType();
    v30[3] = type metadata accessor for FMFindingLocalizer();
    v30[4] = (uint64_t)&off_250BC0A78;
    v30[0] = (uint64_t)v3;
    v25 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v23 + 24);
    v26 = v3;
    v25(v30, a1, ObjectType, v23);
    swift_unknownObjectRelease();
    result = sub_23A963B3C((uint64_t)v30);
  }
  if ((a2 & 1) != 0)
  {
    sub_23A974B18();
    return sub_23A974D90();
  }
  return result;
}

uint64_t type metadata accessor for FMFindingLocalizer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FMFindingLocalizer.DelegateTrampoline()
{
  return objc_opt_self();
}

void sub_23A97593C(_WORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_WORD *)(*v1 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology);
}

void sub_23A975954()
{
  sub_23A974D90();
}

void sub_23A975974()
{
  sub_23A9751E4();
}

void sub_23A975994()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription);
  if (v1)
  {
    v2 = v1;
    sub_23A99C144();

  }
}

uint64_t sub_23A975A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32E04();
  sub_23A980474((uint64_t)v9, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_23A975ADC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  void **p_weak_ivar_lyt;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  _OWORD v41[6];
  int v42;
  char v43;

  v2 = v1;
  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v8)
  {
    v9 = (void *)v8;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v10 = sub_23AA32EA0();
    sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
    v11 = a1;
    v12 = sub_23AA32E88();
    v13 = sub_23AA33218();
    p_weak_ivar_lyt = &FMProximityConnectionManager.weak_ivar_lyt;
    if (os_log_type_enabled(v12, v13))
    {
      v15 = swift_slowAlloc();
      v39 = v4;
      v16 = v15;
      v17 = swift_slowAlloc();
      v38 = v5;
      v18 = v17;
      *(_QWORD *)&v41[0] = v17;
      *(_DWORD *)v16 = 136315394;
      v19 = objc_msgSend(v11, sel_uuid);
      sub_23AA32E04();

      sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v20 = sub_23AA33710();
      v37 = v2;
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
      v40[0] = sub_23A964DBC(v20, v22, (uint64_t *)v41);
      sub_23AA333F8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v40[0] = objc_msgSend(v11, sel_proximityLevel);
      type metadata accessor for PRBTProximityLevel(0);
      v23 = sub_23AA32FFC();
      v40[0] = sub_23A964DBC(v23, v24, (uint64_t *)v41);
      v2 = v37;
      p_weak_ivar_lyt = (void **)(&FMProximityConnectionManager + 56);
      sub_23AA333F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v12, v13, "FMFindingLocalizer: Did update BT proximity measurement for %s: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      v25 = v18;
      v5 = v38;
      MEMORY[0x23B85DB24](v25, -1, -1);
      v26 = v16;
      v4 = v39;
      MEMORY[0x23B85DB24](v26, -1, -1);

    }
    else
    {

    }
    v27 = (char *)objc_msgSend(v11, (SEL)p_weak_ivar_lyt[292]);
    if ((unint64_t)(v27 - 1) >= 4)
    {
      if (!v27)
      {
        v31 = 83886080;
        goto LABEL_14;
      }
    }
    else
    {
      v28 = (char *)objc_msgSend(v11, (SEL)p_weak_ivar_lyt[292]);
      v29 = (_BYTE)v28 - 1;
      if ((unint64_t)(v28 - 1) <= 3)
      {
        v30 = (unint64_t)objc_msgSend(v11, sel_proximityTrend);
        if (v30 >= 4)
        {
          sub_23AA335A8();
          __break(1u);
          return;
        }
        v31 = (((0x2010100u >> (8 * v29)) & 3) << 16) | (0x1030200u >> (8 * v30) << 24) | 0x300000000;
        goto LABEL_14;
      }
    }
    v31 = 0x4000000;
LABEL_14:
    memset(v41, 0, sizeof(v41));
    v42 = v31;
    v43 = BYTE4(v31);
    v32 = v2
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v33 = *(_QWORD *)(v32 + 8);
      ObjectType = swift_getObjectType();
      v40[3] = type metadata accessor for FMFindingLocalizer();
      v40[4] = &off_250BC0A78;
      v40[0] = v9;
      v35 = v9;
      v36 = objc_msgSend(v11, sel_uuid);
      sub_23AA32E04();

      (*(void (**)(_QWORD *, _OWORD *, char *, uint64_t, uint64_t))(v33 + 8))(v40, v41, v7, ObjectType, v33);
      swift_unknownObjectRelease();
      sub_23A963F38(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v31);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_23A963B3C((uint64_t)v40);
    }
    else
    {
      sub_23A963F38(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v31);

    }
  }
}

void sub_23A976028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(_QWORD *, _OWORD *, uint64_t, uint64_t, uint64_t);
  id v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _OWORD v28[6];
  int v29;
  char v30;

  v2 = v1;
  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x23B85DBF0](v1+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v8)
  {
    v9 = (void *)v8;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v10 = sub_23AA32EA0();
    sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v11 = sub_23AA32E88();
    v12 = sub_23AA33218();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v25 = v1;
      v14 = (uint8_t *)v13;
      v15 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v15;
      v26 = a1;
      *(_DWORD *)v14 = 136315138;
      v24 = v14 + 4;
      sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v16 = sub_23AA33710();
      v27[0] = sub_23A964DBC(v16, v17, (uint64_t *)v28);
      a1 = v26;
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_23A95E000, v11, v12, "ðŸ§­ FMFindingLocalizer: Did find item: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v15, -1, -1);
      v18 = v14;
      v2 = v25;
      MEMORY[0x23B85DB24](v18, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    memset(v28, 0, sizeof(v28));
    v30 = 3;
    v29 = 50528256;
    v19 = v2
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v20 = *(_QWORD *)(v19 + 8);
      ObjectType = swift_getObjectType();
      v27[3] = type metadata accessor for FMFindingLocalizer();
      v27[4] = &off_250BC0A78;
      v27[0] = v9;
      v22 = *(void (**)(_QWORD *, _OWORD *, uint64_t, uint64_t, uint64_t))(v20 + 8);
      v23 = v9;
      v22(v27, v28, a1, ObjectType, v20);
      swift_unknownObjectRelease();

      sub_23A963B3C((uint64_t)v27);
    }
    else
    {

    }
  }
}

uint64_t sub_23A97639C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  id v38;
  void *v39;
  _BYTE v40[12];
  int v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23AA32E1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (result)
  {
    v46 = (void *)result;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v13 = sub_23AA32EA0();
    sub_23A9620E8(v13, (uint64_t)qword_2569E0040);
    v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
    v14(v11, a2, v8);
    v15 = a1;
    v16 = a1;
    v17 = sub_23AA32E88();
    v18 = sub_23AA33218();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v44 = a2;
      v21 = v20;
      v43 = swift_slowAlloc();
      v48 = v43;
      *(_DWORD *)v21 = 136315394;
      v45 = v5;
      sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v42 = v17;
      v22 = sub_23AA33710();
      v47 = sub_23A964DBC(v22, v23, &v48);
      v41 = v19;
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      v24 = v11;
      v25 = v8;
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v24, v8);
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      v26 = sub_23AA3377C();
      v47 = sub_23A964DBC(v26, v27, &v48);
      sub_23AA333F8();
      swift_bridgeObjectRelease();

      v28 = v42;
      _os_log_impl(&dword_23A95E000, v42, (os_log_type_t)v41, "ðŸ§­ FMFindingLocalizer: Did fail ranging on: %s error: %s", (uint8_t *)v21, 0x16u);
      v29 = v43;
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v29, -1, -1);
      v30 = v21;
      a2 = v44;
      MEMORY[0x23B85DB24](v30, -1, -1);

    }
    else
    {
      v31 = v11;
      v25 = v8;
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v31, v8);

    }
    swift_getErrorValue();
    if (sub_23AA33764() == 304)
    {
      swift_getErrorValue();
      v32 = sub_23AA33770();
      v34 = v33;
      if (v32 == sub_23AA32FD8() && v34 == v35)
      {
        swift_bridgeObjectRelease_n();
LABEL_12:
        v14(v7, a2, v25);
        swift_storeEnumTagMultiPayload();
        v37 = 0;
LABEL_14:
        v39 = v46;
        sub_23A975624((uint64_t)v7, v37);

        return sub_23A980438((uint64_t)v7);
      }
      v36 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_12;
    }
    *v7 = a1;
    swift_storeEnumTagMultiPayload();
    v38 = a1;
    v37 = 1;
    goto LABEL_14;
  }
  return result;
}

void sub_23A976870(char a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  void *v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  char *v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _UNKNOWN **v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  char *v90;
  _QWORD *v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  unsigned int v116;
  void *v117;
  id v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  _BOOL4 v124;
  char *v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v130;
  uint64_t v131;
  uint64_t v132;
  _UNKNOWN **v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  void *v140;
  void *v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  int v145;
  int v146;
  int v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  unsigned int v154;
  id v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  _BOOL4 v161;
  char *v162;
  uint8_t *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  uint64_t v172;
  void *v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  int v179;
  int v180;
  int v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  unsigned int v188;
  id v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  NSObject *v193;
  os_log_type_t v194;
  uint8_t *v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  NSObject *v201;
  os_log_type_t v202;
  _BOOL4 v203;
  char *v204;
  _QWORD *v205;
  uint8_t *v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  uint64_t v215;
  void *v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  int v222;
  int v223;
  uint64_t v224;
  int v225;
  int v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int v231;
  unsigned int v232;
  id v233;
  uint64_t v234;
  id v235;
  uint64_t v236;
  NSObject *v237;
  os_log_type_t v238;
  _BOOL4 v239;
  char *v240;
  uint8_t *v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  unint64_t v248;
  char v249;
  uint64_t v250;
  void *v251;
  void *v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  int v256;
  int v257;
  uint64_t v258;
  int v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  unsigned int v267;
  id v268;
  uint64_t v269;
  id v270;
  uint64_t v271;
  _UNKNOWN **v272;
  uint64_t v273;
  double v274;
  _QWORD *v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  void *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  int v303;
  _QWORD v304[2];
  uint64_t v305;
  void (*v306)(id *__return_ptr, uint64_t, uint64_t);
  void *v307;
  uint64_t v308;
  uint64_t v309;
  void (*v310)(char *, uint64_t);
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t ObjectType;
  _QWORD *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  id v326[3];
  uint64_t v327;
  uint64_t v328;
  _QWORD v329[3];
  uint64_t v330;
  _UNKNOWN **v331;
  uint64_t v332;
  uint64_t v333;
  void *v334;
  void *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  int v344;
  char v345;

  v325 = a2;
  v4 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v304 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v324 = sub_23AA32E1C();
  v322 = *(_QWORD **)(v324 - 8);
  v7 = MEMORY[0x24BDAC7A8](v324);
  v9 = (char *)v304 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v304 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v304 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v304 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v304 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v323 = (char *)v304 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v304 - v24;
  ObjectType = v2;
  v26 = (char *)MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v26)
  {
    if ((*(_WORD *)&v26[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology] & 0x8100) == 0x100)
    {
LABEL_3:

    }
    else
    {
      v319 = v26;
      switch(a1)
      {
        case 1:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v27 = sub_23AA32EA0();
          sub_23A9620E8(v27, (uint64_t)qword_2569E0040);
          v28 = sub_23AA32E88();
          v29 = sub_23AA33218();
          v30 = os_log_type_enabled(v28, v29);
          v31 = v325;
          if (v30)
          {
            v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v32 = 0;
            _os_log_impl(&dword_23A95E000, v28, v29, "ðŸ§­ FMFindingLocalizer: item state changed to: findable", v32, 2u);
            MEMORY[0x23B85DB24](v32, -1, -1);
          }

          v33 = *((_QWORD *)v31 + 3);
          v34 = *((_QWORD *)v31 + 4);
          sub_23A96545C(v31, v33);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 8))(&v332, v33, v34);
          v35 = v335;
          v36 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(void *, uint64_t))(v36 + 16))(v35, v36);
          v37 = &v319[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v38 = *(_QWORD *)v37;
          if (*(_QWORD *)(*(_QWORD *)v37 + 16))
          {
            swift_bridgeObjectRetain();
            v39 = sub_23AA1D250((uint64_t)v25);
            if ((v40 & 1) != 0)
            {
              v41 = *(_QWORD *)(v38 + 56) + 104 * v39;
              v309 = *(_QWORD *)v41;
              v313 = *(unsigned __int8 *)(v41 + 8);
              v43 = *(void **)(v41 + 16);
              v42 = *(void **)(v41 + 24);
              v312 = *(_QWORD *)(v41 + 32);
              v314 = *(unsigned __int8 *)(v41 + 40);
              v318 = *(_QWORD *)(v41 + 48);
              v44 = *(unsigned __int8 *)(v41 + 56);
              v45 = *(unsigned __int8 *)(v41 + 57);
              v46 = *(_QWORD *)(v41 + 64);
              v47 = *(unsigned __int8 *)(v41 + 72);
              v48 = *(unsigned __int8 *)(v41 + 73);
              v49 = *(unsigned __int8 *)(v41 + 74);
              v50 = *(_QWORD *)(v41 + 80);
              v51 = *(_QWORD *)(v41 + 88);
              v52 = *(unsigned __int8 *)(v41 + 96);
              v53 = *(unsigned __int8 *)(v41 + 97);
              if (v45)
                v54 = 256;
              else
                v54 = 0;
              v317 = v54 | v44;
              if (v48)
                v55 = 256;
              else
                v55 = 0;
              v56 = v55 | v47;
              v57 = 0x10000;
              if (!v49)
                v57 = 0;
              v320 = v56 | v57;
              if (v53)
                v58 = 256;
              else
                v58 = 0;
              v59 = v58 | v52;
              v60 = v42;
              v61 = v42;
              v62 = (uint64_t)v43;
              v63 = v43;
            }
            else
            {
              v309 = 0;
              v313 = 0;
              v60 = 0;
              v312 = 0;
              v314 = 0;
              v318 = 0;
              v317 = 0;
              v46 = 0;
              v320 = 0;
              v50 = 0;
              v51 = 0;
              v59 = 0;
              v62 = 1;
            }
            v137 = ObjectType;
            swift_bridgeObjectRelease();
            v78 = v62;
            v84 = v51;
          }
          else
          {
            v309 = 0;
            v313 = 0;
            v60 = 0;
            v312 = 0;
            v314 = 0;
            v318 = 0;
            v317 = 0;
            v46 = 0;
            v320 = 0;
            v50 = 0;
            v84 = 0;
            v59 = 0;
            v78 = 1;
            v137 = ObjectType;
          }
          v310 = (void (*)(char *, uint64_t))v322[1];
          v310(v25, v324);
          sub_23A963B3C((uint64_t)&v332);
          v85 = v59 | 0x300040000;
          v79 = v312;
          v81 = v318;
          v82 = v317;
          v76 = v309;
          v77 = v313;
          v83 = v320;
          goto LABEL_149;
        case 2:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v64 = sub_23AA32EA0();
          sub_23A9620E8(v64, (uint64_t)qword_2569E0040);
          v65 = sub_23AA32E88();
          v66 = sub_23AA33218();
          v67 = os_log_type_enabled(v65, v66);
          v68 = v325;
          if (v67)
          {
            v69 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v69 = 0;
            _os_log_impl(&dword_23A95E000, v65, v66, "ðŸ§­ FMFindingLocalizer: item state changed to: reconnecting", v69, 2u);
            MEMORY[0x23B85DB24](v69, -1, -1);
          }

          v70 = *((_QWORD *)v68 + 3);
          v71 = *((_QWORD *)v68 + 4);
          sub_23A96545C(v68, v70);
          (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v71 + 8))(v329, v70, v71);
          v72 = v330;
          v73 = v331;
          sub_23A96545C(v329, v330);
          v74 = (uint64_t)v323;
          ((void (*)(uint64_t, _UNKNOWN **))v73[2])(v72, v73);
          swift_beginAccess();
          v75 = sub_23A97EF34(v74, (uint64_t)&v332);
          v310 = (void (*)(char *, uint64_t))v322[1];
          ((void (*)(uint64_t, uint64_t, double))v310)(v74, v324, v75);
          sub_23A963B0C(v332, v333, v334, v335);
          swift_endAccess();
          sub_23A963B3C((uint64_t)v329);
          v76 = 0;
          v77 = 0;
          v78 = 0;
          v60 = 0;
          v79 = 0;
          v80 = 0;
          v81 = 0;
          v82 = 0;
          v46 = 0;
          v83 = 0;
          v50 = 0;
          v84 = 0;
          v85 = 0x4000000;
          goto LABEL_126;
        case 3:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v86 = sub_23AA32EA0();
          sub_23A9620E8(v86, (uint64_t)qword_2569E0040);
          v87 = sub_23AA32E88();
          v88 = sub_23AA33218();
          v89 = os_log_type_enabled(v87, v88);
          v90 = v325;
          v91 = v322;
          if (v89)
          {
            v92 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v92 = 0;
            _os_log_impl(&dword_23A95E000, v87, v88, "ðŸ§­ FMFindingLocalizer: item state changed to: reconnected", v92, 2u);
            MEMORY[0x23B85DB24](v92, -1, -1);
          }

          v93 = *((_QWORD *)v90 + 3);
          v94 = *((_QWORD *)v90 + 4);
          sub_23A96545C(v90, v93);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v94 + 8))(&v332, v93, v94);
          v95 = v335;
          v96 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(void *, uint64_t))(v96 + 16))(v95, v96);
          v97 = &v319[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v98 = *(_QWORD *)v97;
          if (*(_QWORD *)(*(_QWORD *)v97 + 16))
          {
            swift_bridgeObjectRetain();
            v99 = sub_23AA1D250((uint64_t)v15);
            if ((v100 & 1) != 0)
            {
              v101 = *(_QWORD *)(v98 + 56) + 104 * v99;
              v309 = *(_QWORD *)v101;
              v313 = *(unsigned __int8 *)(v101 + 8);
              v103 = *(void **)(v101 + 16);
              v102 = *(void **)(v101 + 24);
              v312 = *(_QWORD *)(v101 + 32);
              v314 = *(unsigned __int8 *)(v101 + 40);
              v318 = *(_QWORD *)(v101 + 48);
              v104 = *(unsigned __int8 *)(v101 + 56);
              v105 = *(unsigned __int8 *)(v101 + 57);
              v316 = *(_QWORD *)(v101 + 64);
              v106 = *(unsigned __int8 *)(v101 + 72);
              v107 = *(unsigned __int8 *)(v101 + 73);
              v108 = *(unsigned __int8 *)(v101 + 74);
              v84 = *(_QWORD *)(v101 + 88);
              v315 = *(_QWORD *)(v101 + 80);
              v109 = *(unsigned __int8 *)(v101 + 96);
              v110 = *(unsigned __int8 *)(v101 + 97);
              if (v105)
                v111 = 256;
              else
                v111 = 0;
              v82 = v111 | v104;
              if (v107)
                v112 = 256;
              else
                v112 = 0;
              v113 = v112 | v106;
              v114 = 0x10000;
              if (!v108)
                v114 = 0;
              v320 = v113 | v114;
              if (v110)
                v115 = 256;
              else
                v115 = 0;
              v116 = v115 | v109;
              v117 = v102;
              v118 = v102;
              v119 = (uint64_t)v103;
              v120 = v103;
            }
            else
            {
              v309 = 0;
              v313 = 0;
              v117 = 0;
              v312 = 0;
              v314 = 0;
              v318 = 0;
              v82 = 0;
              v316 = 0;
              v320 = 0;
              v315 = 0;
              v84 = 0;
              v116 = 0;
              v119 = 1;
            }
            v137 = ObjectType;
            swift_bridgeObjectRelease();
            v78 = v119;
          }
          else
          {
            v309 = 0;
            v313 = 0;
            v117 = 0;
            v312 = 0;
            v314 = 0;
            v318 = 0;
            v82 = 0;
            v316 = 0;
            v320 = 0;
            v315 = 0;
            v84 = 0;
            v116 = 0;
            v78 = 1;
            v137 = ObjectType;
          }
          v310 = (void (*)(char *, uint64_t))v91[1];
          v310(v15, v324);
          sub_23A963B3C((uint64_t)&v332);
          v85 = v116 | 0x300040000;
          v60 = v117;
          v79 = v312;
          v80 = v314;
          v81 = v318;
          v46 = v316;
          v50 = v315;
          v76 = v309;
          goto LABEL_141;
        case 4:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v121 = sub_23AA32EA0();
          sub_23A9620E8(v121, (uint64_t)qword_2569E0040);
          v122 = sub_23AA32E88();
          v123 = sub_23AA33218();
          v124 = os_log_type_enabled(v122, v123);
          v125 = v325;
          if (v124)
          {
            v126 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v126 = 0;
            _os_log_impl(&dword_23A95E000, v122, v123, "ðŸ§­ FMFindingLocalizer: item state changed to: startedMoving", v126, 2u);
            MEMORY[0x23B85DB24](v126, -1, -1);
          }

          v127 = *((_QWORD *)v125 + 3);
          v128 = *((_QWORD *)v125 + 4);
          sub_23A96545C(v125, v127);
          v129 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v128 + 8);
          v129(&v332, v127, v128);
          v130 = v335;
          v131 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(id *__return_ptr, void *, uint64_t))(v131 + 24))(v326, v130, v131);
          if ((_BYTE)v327 && v327 == 1)
          {

            swift_bridgeObjectRelease();
            v129(v329, v127, v128);
            v132 = v330;
            v133 = v331;
            sub_23A96545C(v329, v330);
            ((void (*)(uint64_t, _UNKNOWN **))v133[2])(v132, v133);
            v134 = &v319[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
            swift_beginAccess();
            v135 = *(_QWORD *)v134;
            if (*(_QWORD *)(*(_QWORD *)v134 + 16))
            {
              swift_bridgeObjectRetain();
              v136 = sub_23AA1D250((uint64_t)v12);
              v137 = ObjectType;
              if ((v138 & 1) != 0)
              {
                v139 = *(_QWORD *)(v135 + 56) + 104 * v136;
                v309 = *(_QWORD *)v139;
                v313 = *(unsigned __int8 *)(v139 + 8);
                v141 = *(void **)(v139 + 16);
                v140 = *(void **)(v139 + 24);
                v312 = *(_QWORD *)(v139 + 32);
                v314 = *(unsigned __int8 *)(v139 + 40);
                v318 = *(_QWORD *)(v139 + 48);
                v142 = *(unsigned __int8 *)(v139 + 56);
                v143 = *(unsigned __int8 *)(v139 + 57);
                v46 = *(_QWORD *)(v139 + 64);
                v144 = *(unsigned __int8 *)(v139 + 72);
                v145 = *(unsigned __int8 *)(v139 + 73);
                v146 = *(unsigned __int8 *)(v139 + 74);
                v84 = *(_QWORD *)(v139 + 88);
                v315 = *(_QWORD *)(v139 + 80);
                v147 = *(unsigned __int8 *)(v139 + 96);
                v148 = *(unsigned __int8 *)(v139 + 97);
                if (v143)
                  v149 = 256;
                else
                  v149 = 0;
                v82 = v149 | v142;
                if (v145)
                  v150 = 256;
                else
                  v150 = 0;
                v151 = v150 | v144;
                v152 = 0x10000;
                if (!v146)
                  v152 = 0;
                v320 = v151 | v152;
                if (v148)
                  v153 = 256;
                else
                  v153 = 0;
                v154 = v153 | v147;
                v60 = v140;
                v155 = v140;
                v156 = (uint64_t)v141;
                v157 = v141;
              }
              else
              {
                v309 = 0;
                v313 = 0;
                v60 = 0;
                v312 = 0;
                v314 = 0;
                v318 = 0;
                v82 = 0;
                v46 = 0;
                v320 = 0;
                v315 = 0;
                v84 = 0;
                v154 = 0;
                v156 = 1;
              }
              v301 = v322;
              swift_bridgeObjectRelease();
              v78 = v156;
            }
            else
            {
              v309 = 0;
              v313 = 0;
              v60 = 0;
              v312 = 0;
              v314 = 0;
              v318 = 0;
              v82 = 0;
              v46 = 0;
              v320 = 0;
              v315 = 0;
              v84 = 0;
              v154 = 0;
              v78 = 1;
              v137 = ObjectType;
              v301 = v322;
            }
            v310 = (void (*)(char *, uint64_t))v301[1];
            v310(v12, v324);
            sub_23A963B3C((uint64_t)v329);
            sub_23A963B3C((uint64_t)&v332);
            v85 = v154 | 0x200040000;
            v80 = v314;
            v81 = v318;
            v50 = v315;
            v76 = v309;
            v77 = v313;
            v83 = v320;
            v79 = v312;
          }
          else
          {
            sub_23A963B3C((uint64_t)&v332);
            v129(v329, v127, v128);
            v271 = v330;
            v272 = v331;
            sub_23A96545C(v329, v330);
            v273 = (uint64_t)v323;
            ((void (*)(uint64_t, _UNKNOWN **))v272[2])(v271, v272);
            swift_beginAccess();
            v274 = sub_23A97EF34(v273, (uint64_t)&v332);
            v310 = (void (*)(char *, uint64_t))v322[1];
            ((void (*)(uint64_t, uint64_t, double))v310)(v273, v324, v274);
            sub_23A963B0C(v332, v333, v334, v335);
            swift_endAccess();
            sub_23A963B3C((uint64_t)v329);
            v76 = 0;
            v77 = 0;
            v78 = 0;
            v60 = 0;
            v79 = 0;
            v80 = 0;
            v81 = 0;
            v82 = 0;
            v46 = 0;
            v83 = 0;
            v50 = 0;
            v84 = 0;
            v85 = 100663296;
LABEL_126:
            v137 = ObjectType;
          }
          break;
        case 5:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v158 = sub_23AA32EA0();
          sub_23A9620E8(v158, (uint64_t)qword_2569E0040);
          v159 = sub_23AA32E88();
          v160 = sub_23AA33218();
          v161 = os_log_type_enabled(v159, v160);
          v162 = v325;
          if (v161)
          {
            v163 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v163 = 0;
            _os_log_impl(&dword_23A95E000, v159, v160, "ðŸ§­ FMFindingLocalizer: item state changed to: stoppedMoving", v163, 2u);
            MEMORY[0x23B85DB24](v163, -1, -1);
          }

          v164 = *((_QWORD *)v162 + 3);
          v165 = *((_QWORD *)v162 + 4);
          sub_23A96545C(v162, v164);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v165 + 8))(&v332, v164, v165);
          v166 = v335;
          v167 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(void *, uint64_t))(v167 + 16))(v166, v167);
          v168 = &v319[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v169 = *(_QWORD *)v168;
          if (*(_QWORD *)(*(_QWORD *)v168 + 16))
          {
            swift_bridgeObjectRetain();
            v170 = sub_23AA1D250((uint64_t)v9);
            v137 = ObjectType;
            if ((v171 & 1) != 0)
            {
              v172 = *(_QWORD *)(v169 + 56) + 104 * v170;
              v309 = *(_QWORD *)v172;
              v313 = *(unsigned __int8 *)(v172 + 8);
              v174 = *(void **)(v172 + 16);
              v173 = *(void **)(v172 + 24);
              v312 = *(_QWORD *)(v172 + 32);
              v314 = *(unsigned __int8 *)(v172 + 40);
              v175 = *(_QWORD *)(v172 + 48);
              v176 = *(unsigned __int8 *)(v172 + 56);
              v177 = *(unsigned __int8 *)(v172 + 57);
              v316 = *(_QWORD *)(v172 + 64);
              v178 = *(unsigned __int8 *)(v172 + 72);
              v179 = *(unsigned __int8 *)(v172 + 73);
              v180 = *(unsigned __int8 *)(v172 + 74);
              v50 = *(_QWORD *)(v172 + 80);
              v311 = *(_QWORD *)(v172 + 88);
              v181 = *(unsigned __int8 *)(v172 + 96);
              v182 = *(unsigned __int8 *)(v172 + 97);
              if (v177)
                v183 = 256;
              else
                v183 = 0;
              v317 = v183 | v176;
              if (v179)
                v184 = 256;
              else
                v184 = 0;
              v185 = v184 | v178;
              v186 = 0x10000;
              if (!v180)
                v186 = 0;
              v320 = v185 | v186;
              if (v182)
                v187 = 256;
              else
                v187 = 0;
              v188 = v187 | v181;
              v60 = v173;
              v189 = v173;
              v190 = (uint64_t)v174;
              v191 = v174;
            }
            else
            {
              v309 = 0;
              v313 = 0;
              v60 = 0;
              v312 = 0;
              v314 = 0;
              v175 = 0;
              v317 = 0;
              v316 = 0;
              v320 = 0;
              v50 = 0;
              v311 = 0;
              v188 = 0;
              v190 = 1;
            }
            v275 = v322;
            swift_bridgeObjectRelease();
            v78 = v190;
            v46 = v316;
          }
          else
          {
            v309 = 0;
            v313 = 0;
            v60 = 0;
            v312 = 0;
            v314 = 0;
            v175 = 0;
            v317 = 0;
            v46 = 0;
            v320 = 0;
            v50 = 0;
            v311 = 0;
            v188 = 0;
            v78 = 1;
            v137 = ObjectType;
            v275 = v322;
          }
          v310 = (void (*)(char *, uint64_t))v275[1];
          v310(v9, v324);
          sub_23A963B3C((uint64_t)&v332);
          v85 = v188 | 0x300040000;
          v76 = v309;
          v79 = v312;
          v80 = v314;
          v81 = v175;
          v84 = v311;
          v82 = v317;
LABEL_141:
          v77 = v313;
          goto LABEL_145;
        case 6:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v192 = sub_23AA32EA0();
          sub_23A9620E8(v192, (uint64_t)qword_2569E0040);
          v193 = sub_23AA32E88();
          v194 = sub_23AA33218();
          if (os_log_type_enabled(v193, v194))
          {
            v195 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v195 = 0;
            _os_log_impl(&dword_23A95E000, v193, v194, "ðŸ§­ FMFindingLocalizer: item state changed to: inUse", v195, 2u);
            MEMORY[0x23B85DB24](v195, -1, -1);
          }

          v196 = *((_QWORD *)v325 + 3);
          v197 = *((_QWORD *)v325 + 4);
          sub_23A96545C(v325, v196);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v197 + 8))(&v332, v196, v197);
          v198 = v335;
          v199 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(void *, uint64_t))(v199 + 16))(v198, v199);
          swift_storeEnumTagMultiPayload();
          sub_23A975624((uint64_t)v6, 0);
          sub_23A980438((uint64_t)v6);
          sub_23A963B3C((uint64_t)&v332);
          goto LABEL_153;
        case 7:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v200 = sub_23AA32EA0();
          sub_23A9620E8(v200, (uint64_t)qword_2569E0040);
          v201 = sub_23AA32E88();
          v202 = sub_23AA33218();
          v203 = os_log_type_enabled(v201, v202);
          v204 = v325;
          v205 = v322;
          if (v203)
          {
            v206 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v206 = 0;
            _os_log_impl(&dword_23A95E000, v201, v202, "ðŸ§­ FMFindingLocalizer: item state changed to: insufficient horizontal movement", v206, 2u);
            MEMORY[0x23B85DB24](v206, -1, -1);
          }

          v207 = *((_QWORD *)v204 + 3);
          v208 = *((_QWORD *)v204 + 4);
          sub_23A96545C(v204, v207);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v208 + 8))(&v332, v207, v208);
          v209 = v335;
          v210 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(void *, uint64_t))(v210 + 16))(v209, v210);
          v211 = &v319[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v212 = *(_QWORD *)v211;
          if (*(_QWORD *)(*(_QWORD *)v211 + 16))
          {
            swift_bridgeObjectRetain();
            v213 = sub_23AA1D250((uint64_t)v21);
            if ((v214 & 1) != 0)
            {
              v215 = *(_QWORD *)(v212 + 56) + 104 * v213;
              v309 = *(_QWORD *)v215;
              v313 = *(unsigned __int8 *)(v215 + 8);
              v217 = *(void **)(v215 + 16);
              v216 = *(void **)(v215 + 24);
              v312 = *(_QWORD *)(v215 + 32);
              v314 = *(unsigned __int8 *)(v215 + 40);
              v218 = *(_QWORD *)(v215 + 48);
              v219 = *(unsigned __int8 *)(v215 + 56);
              v220 = *(unsigned __int8 *)(v215 + 57);
              v316 = *(_QWORD *)(v215 + 64);
              v221 = *(unsigned __int8 *)(v215 + 72);
              v222 = *(unsigned __int8 *)(v215 + 73);
              v223 = *(unsigned __int8 *)(v215 + 74);
              v224 = *(_QWORD *)(v215 + 80);
              v84 = *(_QWORD *)(v215 + 88);
              v225 = *(unsigned __int8 *)(v215 + 96);
              v226 = *(unsigned __int8 *)(v215 + 97);
              if (v220)
                v227 = 256;
              else
                v227 = 0;
              v317 = v227 | v219;
              if (v222)
                v228 = 256;
              else
                v228 = 0;
              v229 = v228 | v221;
              v230 = 0x10000;
              if (!v223)
                v230 = 0;
              v320 = v229 | v230;
              if (v226)
                v231 = 256;
              else
                v231 = 0;
              v232 = v231 | v225;
              v60 = v216;
              v233 = v216;
              v234 = (uint64_t)v217;
              v235 = v217;
            }
            else
            {
              v309 = 0;
              v313 = 0;
              v60 = 0;
              v312 = 0;
              v314 = 0;
              v218 = 0;
              v317 = 0;
              v316 = 0;
              v320 = 0;
              v224 = 0;
              v84 = 0;
              v232 = 0;
              v234 = 1;
            }
            v137 = ObjectType;
            swift_bridgeObjectRelease();
            v78 = v234;
            v46 = v316;
            v205 = v322;
          }
          else
          {
            v309 = 0;
            v313 = 0;
            v60 = 0;
            v312 = 0;
            v314 = 0;
            v218 = 0;
            v317 = 0;
            v46 = 0;
            v320 = 0;
            v224 = 0;
            v84 = 0;
            v232 = 0;
            v78 = 1;
            v137 = ObjectType;
          }
          v310 = (void (*)(char *, uint64_t))v205[1];
          v310(v21, v324);
          sub_23A963B3C((uint64_t)&v332);
          v85 = v232 | 0x100040000;
          v77 = v313;
          v79 = v312;
          v80 = v314;
          v81 = v218;
          v50 = v224;
          v82 = v317;
          v76 = v309;
LABEL_145:
          v83 = v320;
          break;
        case 8:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v236 = sub_23AA32EA0();
          sub_23A9620E8(v236, (uint64_t)qword_2569E0040);
          v237 = sub_23AA32E88();
          v238 = sub_23AA33218();
          v239 = os_log_type_enabled(v237, v238);
          v240 = v325;
          if (v239)
          {
            v241 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v241 = 0;
            _os_log_impl(&dword_23A95E000, v237, v238, "ðŸ§­ FMFindingLocalizer: item state changed to: insufficient horizontal movement", v241, 2u);
            MEMORY[0x23B85DB24](v241, -1, -1);
          }

          v242 = *((_QWORD *)v240 + 3);
          v243 = *((_QWORD *)v240 + 4);
          sub_23A96545C(v240, v242);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v243 + 8))(&v332, v242, v243);
          v244 = v335;
          v245 = v336;
          sub_23A96545C(&v332, (uint64_t)v335);
          (*(void (**)(void *, uint64_t))(v245 + 16))(v244, v245);
          v246 = &v319[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v247 = *(_QWORD *)v246;
          if (*(_QWORD *)(v247 + 16))
          {
            swift_bridgeObjectRetain();
            v248 = sub_23AA1D250((uint64_t)v18);
            if ((v249 & 1) != 0)
            {
              v250 = *(_QWORD *)(v247 + 56) + 104 * v248;
              v309 = *(_QWORD *)v250;
              v313 = *(unsigned __int8 *)(v250 + 8);
              v252 = *(void **)(v250 + 16);
              v251 = *(void **)(v250 + 24);
              v312 = *(_QWORD *)(v250 + 32);
              v314 = *(unsigned __int8 *)(v250 + 40);
              v318 = *(_QWORD *)(v250 + 48);
              v253 = *(unsigned __int8 *)(v250 + 56);
              v254 = *(unsigned __int8 *)(v250 + 57);
              v316 = *(_QWORD *)(v250 + 64);
              v255 = *(unsigned __int8 *)(v250 + 72);
              v256 = *(unsigned __int8 *)(v250 + 73);
              v257 = *(unsigned __int8 *)(v250 + 74);
              v258 = *(_QWORD *)(v250 + 88);
              v315 = *(_QWORD *)(v250 + 80);
              v259 = *(unsigned __int8 *)(v250 + 96);
              v260 = *(unsigned __int8 *)(v250 + 97);
              if (v254)
                v261 = 256;
              else
                v261 = 0;
              v262 = v261 | v253;
              if (v256)
                v263 = 256;
              else
                v263 = 0;
              v264 = v263 | v255;
              v265 = 0x10000;
              if (!v257)
                v265 = 0;
              v320 = v264 | v265;
              if (v260)
                v266 = 256;
              else
                v266 = 0;
              v267 = v266 | v259;
              v60 = v251;
              v268 = v251;
              v269 = (uint64_t)v252;
              v270 = v252;
            }
            else
            {
              v309 = 0;
              v313 = 0;
              v60 = 0;
              v312 = 0;
              v314 = 0;
              v318 = 0;
              v262 = 0;
              v316 = 0;
              v320 = 0;
              v315 = 0;
              v258 = 0;
              v267 = 0;
              v269 = 1;
            }
            v276 = v322;
            swift_bridgeObjectRelease();
            v78 = v269;
            v46 = v316;
            v50 = v315;
            v84 = v258;
            v82 = v262;
          }
          else
          {
            v309 = 0;
            v313 = 0;
            v60 = 0;
            v312 = 0;
            v314 = 0;
            v318 = 0;
            v82 = 0;
            v46 = 0;
            v320 = 0;
            v50 = 0;
            v84 = 0;
            v267 = 0;
            v78 = 1;
            v276 = v322;
          }
          v310 = (void (*)(char *, uint64_t))v276[1];
          v310(v18, v324);
          sub_23A963B3C((uint64_t)&v332);
          v85 = v267 | 0x40000;
          v137 = ObjectType;
          v81 = v318;
          v76 = v309;
          v77 = v313;
          v83 = v320;
          v79 = v312;
LABEL_149:
          v80 = v314;
          break;
        default:
          goto LABEL_3;
      }
      v315 = v50;
      v320 = v83;
      v316 = v46;
      v322 = (_QWORD *)v78;
      v317 = v82;
      v332 = v76;
      v333 = v77;
      v334 = (void *)v78;
      v335 = v60;
      v336 = v79;
      v337 = v80;
      v318 = v81;
      v338 = v81;
      v339 = v82;
      v340 = v46;
      v341 = v83;
      v342 = v50;
      v343 = v84;
      v344 = v85;
      v277 = v84;
      v278 = v137
           + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
      v279 = v85;
      v345 = BYTE4(v85);
      v280 = v76;
      v281 = v79;
      v282 = v80;
      if (MEMORY[0x23B85DBF0](v137+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
      {
        v309 = *(_QWORD *)(v278 + 8);
        ObjectType = swift_getObjectType();
        v330 = type metadata accessor for FMFindingLocalizer();
        v331 = &off_250BC0A78;
        v329[0] = v319;
        v314 = v282;
        v312 = v281;
        v313 = v77;
        v283 = v280;
        v284 = *((_QWORD *)v325 + 3);
        v285 = *((_QWORD *)v325 + 4);
        v307 = v60;
        v305 = v285;
        v304[1] = sub_23A96545C(v325, v284);
        v306 = *(void (**)(id *__return_ptr, uint64_t, uint64_t))(v285 + 8);
        v308 = v279;
        v303 = v279;
        v311 = v277;
        v286 = v315;
        v287 = v322;
        sub_23A980BD4(v283, v77, v322, v60, v281, v282, v318, v317, v316, v320, v315, v277, v303);
        v288 = v283;
        v325 = v319;
        v306(v326, v284, v305);
        v289 = v327;
        v290 = v328;
        sub_23A96545C(v326, v327);
        v291 = v323;
        (*(void (**)(uint64_t, uint64_t))(v290 + 16))(v289, v290);
        (*(void (**)(_QWORD *, uint64_t *, char *, uint64_t))(v309 + 8))(v329, &v332, v291, ObjectType);
        swift_unknownObjectRelease();
        LODWORD(v291) = v308;
        v302 = v286;
        v292 = v320;
        v293 = v316;
        v294 = v313;
        v295 = v287;
        v296 = v307;
        v297 = v312;
        v298 = v314;
        v299 = v318;
        v300 = v317;
        sub_23A980C04(v288, v313, v295, v307, v312, v314, v318, v317, v316, v320, v302, v311, v308);

        sub_23A980C04(v288, v294, v322, v296, v297, v298, v299, v300, v293, v292, v315, v311, (int)v291);
        v310(v323, v324);
        sub_23A963B3C((uint64_t)v326);
        sub_23A963B3C((uint64_t)v329);
      }
      else
      {
        sub_23A980C04(v280, v77, v322, v60, v281, v282, v318, v317, v316, v320, v315, v277, v279);
LABEL_153:

      }
    }
  }
}

void sub_23A978708(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)();
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  double v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  void *v73;
  void (*v74)();
  void *v75;
  void *v76;
  int v77;
  unsigned int v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  void (*v85)();
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void (*v91)();
  uint64_t v92;
  id v93;
  id v94;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  _QWORD *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  char *v122;
  int v123;
  int v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  _QWORD *v141;
  void *v142;
  uint64_t ObjectType;
  int v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[3];
  uint64_t v154;
  uint64_t v155;
  _QWORD v156[8];
  void *v157;
  unsigned __int8 v158;
  uint64_t v159;
  void *v160;
  void (*v161)();
  unsigned __int8 v162;
  uint64_t v163;
  unsigned __int8 v164;
  unsigned __int8 v165;
  uint64_t v166;
  unsigned __int8 v167;
  unsigned __int8 v168;
  unsigned __int8 v169;
  uint64_t v170;
  uint64_t v171;
  unsigned __int8 v172;
  unsigned __int8 v173;
  void *v174;
  uint64_t v175;
  uint64_t (*v176)(uint64_t);
  void *v177;
  void (*v178)();
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  char v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  void (*v192)();
  unsigned __int8 v193;
  uint64_t v194;
  unsigned __int8 v195;
  unsigned __int8 v196;
  uint64_t v197;
  unsigned __int8 v198;
  unsigned __int8 v199;
  unsigned __int8 v200;
  uint64_t v201;
  uint64_t v202;
  unsigned __int8 v203;
  unsigned __int8 v204;
  __int128 v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __int16 v216;

  v3 = v2;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v146 = (char *)&v121 - v11;
  v12 = sub_23AA32F30();
  v151 = *(_QWORD *)(v12 - 8);
  v152 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v121 - v16;
  v18 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v18);
  v147 = (char *)MEMORY[0x23B85DBF0](v3+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v147)
  {
    v132 = v7;
    v140 = v10;
    v148 = v6;
    v150 = (char *)OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem;
    if (*(_QWORD *)(v3
                   + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem))
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v20 = (_QWORD *)a1;
    sub_23A963A14(a1, (uint64_t)&v205);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v19;
    sub_23A963B98(&v205, v21 + 24);
    v178 = sub_23A980BB0;
    v179 = v21;
    v174 = (void *)MEMORY[0x24BDAC760];
    v175 = 1107296256;
    v176 = sub_23A9C4DBC;
    v177 = &unk_250BC0B20;
    _Block_copy(&v174);
    ObjectType = v3;
    v188 = (void *)MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v22 = ObjectType;
    v23 = sub_23AA32F3C();
    v24 = v20;
    v141 = v20;
    swift_release();
    swift_release();
    *(_QWORD *)&v150[v22] = v23;
    swift_retain();
    swift_release();
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v25 = (void *)sub_23AA33290();
    sub_23AA32F24();
    MEMORY[0x23B85CB04](v15, 3.0);
    v26 = v152;
    v27 = *(void (**)(char *, uint64_t))(v151 + 8);
    v27(v15, v152);
    v137 = v23;
    sub_23AA3326C();

    v27(v17, v26);
    if (a2 < 0.0)
      a2 = 0.0;
    v28 = v24[3];
    v29 = v24[4];
    sub_23A96545C(v24, v28);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v29 + 8))(&v174, v28, v29);
    v30 = v177;
    v31 = v178;
    sub_23A96545C(&v174, (uint64_t)v177);
    v32 = (uint64_t)v146;
    (*((void (**)(void *, void (*)()))v31 + 2))(v30, v31);
    v33 = &v147[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(*(_QWORD *)v33 + 16);
    v122 = v33;
    if (v35)
    {
      swift_bridgeObjectRetain();
      v36 = sub_23AA1D250(v32);
      if ((v37 & 1) != 0)
      {
        v38 = *(_QWORD *)(v34 + 56) + 104 * v36;
        v39 = *(_QWORD *)v38;
        v151 = *(unsigned __int8 *)(v38 + 8);
        v152 = v39;
        v41 = *(_QWORD *)(v38 + 16);
        v40 = *(char **)(v38 + 24);
        v42 = *(_QWORD *)(v38 + 32);
        v43 = *(unsigned __int8 *)(v38 + 40);
        v44 = *(_QWORD *)(v38 + 48);
        v45 = *(unsigned __int8 *)(v38 + 56);
        LODWORD(v39) = *(unsigned __int8 *)(v38 + 57);
        v149 = *(_QWORD *)(v38 + 64);
        v46 = *(unsigned __int8 *)(v38 + 72);
        v47 = *(unsigned __int8 *)(v38 + 73);
        v48 = *(unsigned __int8 *)(v38 + 74);
        v49 = *(_QWORD *)(v38 + 80);
        v50 = *(_QWORD *)(v38 + 88);
        v51 = *(unsigned __int8 *)(v38 + 96);
        v52 = *(unsigned __int8 *)(v38 + 97);
        if ((_DWORD)v39)
          v53 = 256;
        else
          v53 = 0;
        v54 = v53 | v45;
        if (v47)
          v55 = 256;
        else
          v55 = 0;
        v56 = v55 | v46;
        v57 = 0x10000;
        if (!v48)
          v57 = 0;
        v145 = v56 | v57;
        if (v52)
          v58 = 256;
        else
          v58 = 0;
        v144 = v58 | v51;
        v150 = v40;
        v59 = v40;
        v60 = (id)v41;
      }
      else
      {
        v151 = 0;
        v152 = 0;
        v149 = 0;
        v150 = 0;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        v54 = 0;
        v145 = 0;
        v49 = 0;
        v50 = 0;
        v144 = 0;
        v41 = 1;
      }
      swift_bridgeObjectRelease();
      v64 = v149;
      v63 = v150;
      v65 = v145;
      v66 = v144;
      v62 = v151;
      v61 = v152;
    }
    else
    {
      v61 = 0;
      v62 = 0;
      v63 = 0;
      v42 = 0;
      v43 = 0;
      v44 = 0;
      v54 = 0;
      v64 = 0;
      v65 = 0;
      v49 = 0;
      v50 = 0;
      v66 = 0;
      v41 = 1;
    }
    v138 = v54;
    v139 = v44;
    v149 = v64;
    v150 = v63;
    v151 = v62;
    v152 = v61;
    v142 = (void *)v41;
    v67 = a2;
    *(_QWORD *)&v205 = v61;
    *((_QWORD *)&v205 + 1) = v62;
    v206 = v41;
    v207 = v63;
    v208 = v42;
    v209 = v43;
    v210 = v44;
    v211 = v54;
    v212 = v64;
    v213 = v65;
    v214 = v49;
    v215 = v50;
    v216 = v66;
    v68 = v146;
    v69 = v50;
    v146 = *(char **)(v132 + 8);
    ((void (*)(char *, uint64_t))v146)(v68, v148);
    sub_23A963B3C((uint64_t)&v174);
    v70 = v141[3];
    v71 = v141[4];
    sub_23A96545C(v141, v70);
    v72 = v66;
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v71 + 8))(&v174, v70, v71);
    v73 = v177;
    v74 = v178;
    sub_23A96545C(&v174, (uint64_t)v177);
    v75 = v73;
    v76 = v142;
    (*((void (**)(void **__return_ptr, void *, void (*)()))v74 + 3))(&v188, v75, v74);
    v77 = v191;
    sub_23A980B18(v188, v189, v190, (char)v191);
    sub_23A963B3C((uint64_t)&v174);
    v135 = v43;
    v136 = v42;
    v133 = v69;
    v134 = v49;
    v145 = v65;
    v144 = v72;
    if (v76 == (void *)1)
    {
      LOBYTE(v78) = v77 == 1;
    }
    else
    {
      sub_23A963C40(v152, v151, v76, v150);
      v78 = v72 >> 8;
    }
    sub_23A96B688(v67, 0, 0, 0, (uint64_t)&v205, v78, (uint64_t)&v157);
    v79 = v141;
    v80 = v122;
    v81 = v170;
    v125 = v169;
    v126 = v172;
    v123 = v173;
    v124 = v168;
    v127 = v167;
    v82 = v166;
    v83 = v165;
    v128 = v164;
    v129 = v171;
    v84 = v163;
    v85 = v161;
    v86 = (void *)v159;
    v87 = v160;
    v130 = v158;
    v131 = v157;
    v132 = v162;
    v188 = v157;
    LOBYTE(v189) = v158;
    v190 = v159;
    v191 = v160;
    v192 = v161;
    v193 = v162;
    v194 = v163;
    v195 = v164;
    v196 = v165;
    v197 = v166;
    v198 = v167;
    v199 = v168;
    v200 = v169;
    v201 = v170;
    v202 = v171;
    v203 = v172;
    v204 = v173;
    v88 = v141[3];
    v89 = v141[4];
    sub_23A96545C(v141, v88);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v89 + 8))(&v174, v88, v89);
    v90 = v177;
    v91 = v178;
    sub_23A96545C(&v174, (uint64_t)v177);
    v92 = (uint64_t)v140;
    (*((void (**)(void *, void (*)()))v91 + 2))(v90, v91);
    swift_beginAccess();
    v93 = v87;
    v94 = v86;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v153[0] = *(_QWORD *)v80;
    *(_QWORD *)v80 = 0x8000000000000000;
    sub_23A97F890((uint64_t)&v188, v92, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v80 = v153[0];
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v146)(v92, v148);
    swift_endAccess();
    sub_23A963B3C((uint64_t)&v174);
    if (v83)
      v96 = 256;
    else
      v96 = 0;
    v174 = v131;
    v175 = v130;
    v97 = v96 | v128;
    if (v124)
      v98 = 256;
    else
      v98 = 0;
    v99 = v98 | v127;
    v100 = 0x10000;
    if (!v125)
      v100 = 0;
    v101 = v99 | v100;
    if (v123)
      v102 = 256;
    else
      v102 = 0;
    v176 = (uint64_t (*)(uint64_t))v86;
    v177 = v87;
    v178 = v85;
    v179 = v132;
    v180 = v84;
    v181 = v97;
    v182 = v82;
    v183 = v101;
    v184 = v81;
    v185 = v129;
    v187 = 3;
    v103 = ObjectType
         + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    v186 = v102 | v126 | 0x3040000;
    if (MEMORY[0x23B85DBF0](ObjectType+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v132 = *(_QWORD *)(v103 + 8);
      ObjectType = swift_getObjectType();
      v156[3] = type metadata accessor for FMFindingLocalizer();
      v156[4] = &off_250BC0A78;
      v104 = v79;
      v105 = v147;
      v156[0] = v147;
      v106 = v104[3];
      v107 = v104[4];
      sub_23A96545C(v104, v106);
      v108 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v107 + 8);
      v109 = v94;
      v110 = v93;
      v111 = v109;
      v112 = v110;
      v113 = v105;
      v108(v153, v106, v107);
      v114 = v154;
      v115 = v155;
      sub_23A96545C(v153, v154);
      v116 = v140;
      (*(void (**)(uint64_t, uint64_t))(v115 + 16))(v114, v115);
      (*(void (**)(_QWORD *, void **, char *, uint64_t))(v132 + 8))(v156, &v174, v116, ObjectType);

      swift_unknownObjectRelease();
      sub_23A963B0C(v152, v151, v142, v150);
      swift_release();
      ((void (*)(char *, uint64_t))v146)(v116, v148);
      sub_23A963B3C((uint64_t)v153);
      sub_23A963B3C((uint64_t)v156);
    }
    else
    {
      v117 = v94;
      v118 = v93;
      v119 = v117;
      v120 = v118;
      swift_release();
      sub_23A963B0C(v152, v151, v142, v150);

    }
  }
}

void sub_23A9791B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  _UNKNOWN **v21;
  double v22;
  void (*v23)(char *, uint64_t, double);
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[26];
  char v46;

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = MEMORY[0x23B85DBF0](a1 + 16);
  if (v8)
  {
    v9 = (char *)v8;
    v10 = MEMORY[0x23B85DBF0](v8+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (v10)
    {
      v11 = (void *)v10;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v32 = v4;
      v12 = sub_23AA32EA0();
      sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
      v13 = sub_23AA32E88();
      v14 = sub_23AA33218();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMFindingLocalizer: Did not update range estimate so reset state", v15, 2u);
        MEMORY[0x23B85DB24](v15, -1, -1);
      }

      v16 = a2[3];
      v17 = a2[4];
      v18 = sub_23A96545C(a2, v16);
      v19 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 8);
      v30 = v18;
      v31 = v19;
      v19(v36, v16, v17);
      v20 = v37;
      v21 = v38;
      sub_23A96545C(v36, v37);
      ((void (*)(uint64_t, _UNKNOWN **))v21[2])(v20, v21);
      swift_beginAccess();
      v22 = sub_23A97EF34((uint64_t)v7, (uint64_t)&v39);
      v23 = *(void (**)(char *, uint64_t, double))(v5 + 8);
      v23(v7, v32, v22);
      sub_23A963B0C(v39, v40, (void *)v41, (void *)v42);
      swift_endAccess();
      sub_23A963B3C((uint64_t)v36);
      v39 = 0;
      v40 = 0;
      v41 = 1;
      v42 = 0u;
      v43 = 0u;
      v44 = 0u;
      memset(v45, 0, sizeof(v45));
      v46 = 4;
      v24 = &v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate];
      if (MEMORY[0x23B85DBF0](&v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate]))
      {
        v25 = *((_QWORD *)v24 + 1);
        ObjectType = swift_getObjectType();
        v37 = type metadata accessor for FMFindingLocalizer();
        v38 = &off_250BC0A78;
        v36[0] = v11;
        v27 = v11;
        v31(v33, v16, v17);
        v28 = v34;
        v29 = v35;
        sub_23A96545C(v33, v34);
        (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
        (*(void (**)(_QWORD *, uint64_t *, uint64_t, char *, uint64_t, uint64_t))(v25 + 16))(v36, &v39, 3, v7, ObjectType, v25);

        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v23)(v7, v32);
        sub_23A963B3C((uint64_t)v33);
        sub_23A963B3C((uint64_t)v36);
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_23A979540(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  void (**v18)(uint64_t, void *);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (**v58)(void **__return_ptr, uint64_t, void *);
  unsigned int v59;
  id v60;
  uint64_t v61;
  char v62;
  double v63;
  char v64;
  void **v65;
  void **v66;
  void **v67;
  void *v68;
  unsigned int v69;
  id v70;
  double v71;
  int v72;
  void *v73;
  int v74;
  void *v75;
  int v76;
  void *v77;
  int v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void (**v86)(uint64_t, void *);
  char *v87;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int16 v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  id v112;
  char *v113;
  id v114;
  char *v115;
  void *v116;
  uint64_t ObjectType;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  void (*v134)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[3];
  uint64_t v138;
  uint64_t v139;
  _QWORD v140[8];
  _BYTE v141[104];
  _QWORD v142[3];
  uint64_t v143;
  void (**v144)(uint64_t, void *);
  uint64_t v145;
  void *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  void *v151;
  __int16 v152;
  char v153;
  void *v154;
  char v155;
  void *v156;
  void *v157;
  void *v158;
  char v159;
  void *v160;
  char v161;
  char v162;
  void *v163;
  char v164;
  char v165;
  char v166;
  void *v167;
  void *v168;
  char v169;
  char v170;
  _QWORD v171[12];
  __int16 v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  _BYTE v179[26];

  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v104 - v10;
  v12 = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v12)
  {
    v13 = (char *)v12;
    v121 = v6;
    v114 = a1;
    ObjectType = v2;
    v14 = a2[3];
    v15 = a2[4];
    v133 = sub_23A96545C(a2, v14);
    v16 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 8);
    v135 = v15;
    v136 = v14;
    v134 = v16;
    v16(v142, v14, v15);
    v17 = v143;
    v18 = v144;
    sub_23A96545C(v142, v143);
    v18[2](v17, v18);
    v19 = &v13[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    v115 = v19;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v20 + 16);
    v113 = v9;
    if (v21)
    {
      swift_bridgeObjectRetain();
      v22 = sub_23AA1D250((uint64_t)v11);
      if ((v23 & 1) != 0)
      {
        v24 = *(_QWORD *)(v20 + 56) + 104 * v22;
        v25 = *(_QWORD *)v24;
        v132 = *(unsigned __int8 *)(v24 + 8);
        v27 = *(void **)(v24 + 16);
        v26 = *(void **)(v24 + 24);
        v28 = *(_QWORD *)(v24 + 32);
        v130 = *(unsigned __int8 *)(v24 + 40);
        v131 = v28;
        v129 = *(_QWORD *)(v24 + 48);
        v29 = *(unsigned __int8 *)(v24 + 56);
        LODWORD(v28) = *(unsigned __int8 *)(v24 + 57);
        v128 = *(_QWORD *)(v24 + 64);
        v30 = *(unsigned __int8 *)(v24 + 72);
        v31 = *(unsigned __int8 *)(v24 + 73);
        v32 = *(unsigned __int8 *)(v24 + 74);
        v33 = *(_QWORD *)(v24 + 80);
        v125 = *(_QWORD *)(v24 + 88);
        v126 = v33;
        v34 = *(unsigned __int8 *)(v24 + 96);
        v35 = *(unsigned __int8 *)(v24 + 97);
        if ((_DWORD)v28)
          v36 = 256;
        else
          v36 = 0;
        v127 = v36 | v29;
        if (v31)
          v37 = 256;
        else
          v37 = 0;
        v38 = v37 | v30;
        v39 = 0x10000;
        if (!v32)
          v39 = 0;
        v124 = v38 | v39;
        if (v35)
          v40 = 256;
        else
          v40 = 0;
        v123 = v40 | v34;
        v41 = v26;
        v42 = v26;
        v43 = (uint64_t)v27;
        v44 = v27;
      }
      else
      {
        v25 = 0;
        v131 = 0;
        v132 = 0;
        v41 = 0;
        v129 = 0;
        v130 = 0;
        v127 = 0;
        v128 = 0;
        v124 = 0;
        v125 = 0;
        v126 = 0;
        v123 = 0;
        v43 = 1;
      }
      v54 = v136;
      swift_bridgeObjectRelease();
      v21 = v131;
      v45 = v132;
      v47 = v129;
      v46 = v130;
      v48 = v127;
      v49 = v128;
      v52 = v125;
      v51 = v126;
      v50 = v124;
      v53 = v123;
    }
    else
    {
      v25 = 0;
      v45 = 0;
      v41 = 0;
      v46 = 0;
      v47 = 0;
      v48 = 0;
      v49 = 0;
      v50 = 0;
      v51 = 0;
      v52 = 0;
      v53 = 0;
      v43 = 1;
      v54 = v136;
    }
    v171[0] = v25;
    v171[1] = v45;
    v171[2] = v43;
    v119 = v41;
    v171[3] = v41;
    v130 = v46;
    v131 = v21;
    v171[4] = v21;
    v171[5] = v46;
    v128 = v49;
    v129 = v47;
    v171[6] = v47;
    v126 = v51;
    v127 = v48;
    v171[7] = v48;
    v171[8] = v49;
    v124 = v50;
    v125 = v52;
    v171[9] = v50;
    v171[10] = v51;
    v171[11] = v52;
    v123 = v53;
    v172 = v53;
    v55 = (void *)v43;
    v121 = *(_QWORD *)(v121 + 8);
    ((void (*)(char *, uint64_t))v121)(v11, v5);
    sub_23A963B3C((uint64_t)v142);
    v134(v142, v54, v135);
    v56 = v25;
    v57 = v143;
    v58 = (void (**)(void **__return_ptr, uint64_t, void *))v144;
    sub_23A96545C(v142, v143);
    v58[3](&v173, v57, v58);
    v59 = v176;
    sub_23A980B18(v173, v174, v175, v176);
    sub_23A963B3C((uint64_t)v142);
    v60 = v114;
    v122 = v5;
    v118 = v13;
    v120 = v56;
    v132 = v45;
    v116 = v55;
    if (v114)
    {
      v61 = (uint64_t)v113;
      if (v55 == (void *)1)
      {
        LOBYTE(v59) = v59 == 1;
      }
      else
      {
        v69 = v123;
        sub_23A963C40(v120, v132, v55, v119);
        v59 = v69 >> 8;
      }
      v70 = v60;
      v65 = &v173;
      v66 = &v173;
      v67 = (void **)v171;
      v63 = 0.0;
      v64 = 1;
      v68 = v60;
      v62 = v59;
    }
    else
    {
      v61 = (uint64_t)v113;
      v62 = v59 == 1;
      v173 = 0;
      v174 = 0;
      v175 = 1;
      v176 = 0u;
      if (v55 == (void *)1)
        v63 = 0.0;
      else
        v63 = *(double *)&v56;
      v177 = 0uLL;
      if (v45)
        v64 = 1;
      else
        v64 = v55 == (void *)1;
      v178 = 0uLL;
      memset(v179, 0, sizeof(v179));
      v65 = (void **)v141;
      v66 = (void **)v141;
      v67 = &v173;
      v68 = 0;
    }
    v71 = sub_23A96B688(v63, v64, v68, 0, (uint64_t)v67, v62, (uint64_t)v66);
    v72 = *((unsigned __int8 *)v65 + 97);
    v73 = v65[11];
    v74 = *((unsigned __int8 *)v65 + 96);
    v75 = v65[10];
    v106 = *((unsigned __int8 *)v65 + 74);
    v107 = v74;
    v76 = *((unsigned __int8 *)v65 + 73);
    v104 = v72;
    v105 = v76;
    v108 = *((unsigned __int8 *)v65 + 72);
    v77 = v65[8];
    v78 = *((unsigned __int8 *)v65 + 57);
    v109 = *((unsigned __int8 *)v65 + 56);
    v110 = v73;
    v79 = v65[6];
    v111 = *((unsigned __int8 *)v65 + 40);
    v80 = v65[4];
    v81 = v65[2];
    v82 = v65[3];
    v83 = *((unsigned __int8 *)v65 + 8);
    v84 = *v65;
    v154 = *v65;
    v155 = v83;
    v156 = v81;
    v157 = v82;
    v158 = v80;
    v159 = v111;
    v160 = v79;
    v161 = v109;
    v162 = v78;
    v163 = v77;
    v164 = v108;
    v165 = v76;
    v166 = v106;
    v167 = v75;
    v168 = v73;
    v169 = v74;
    v170 = v72;
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, double))v134)(v142, v136, v135, v71);
    v85 = v143;
    v86 = v144;
    sub_23A96545C(v142, v143);
    v86[2](v85, v86);
    v87 = v115;
    swift_beginAccess();
    v114 = v82;
    v112 = v81;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v137[0] = *(_QWORD *)v87;
    *(_QWORD *)v87 = 0x8000000000000000;
    sub_23A97F890((uint64_t)&v154, v61, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v87 = v137[0];
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v121)(v61, v122);
    swift_endAccess();
    sub_23A963B3C((uint64_t)v142);
    if (v78)
      v89 = 256;
    else
      v89 = 0;
    v142[0] = v84;
    v142[1] = v83;
    v90 = v89 | v109;
    if (v105)
      v91 = 256;
    else
      v91 = 0;
    v92 = v91 | v108;
    v93 = 0x10000;
    if (!v106)
      v93 = 0;
    v94 = v92 | v93;
    if (v104)
      v95 = 256;
    else
      v95 = 0;
    v142[2] = v81;
    v143 = (uint64_t)v82;
    v144 = (void (**)(uint64_t, void *))v80;
    v145 = v111;
    v146 = v79;
    v147 = v90;
    v148 = v77;
    v149 = v94;
    v150 = v75;
    v151 = v110;
    v152 = v95 | v107;
    v96 = ObjectType
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    v153 = 4;
    if (MEMORY[0x23B85DBF0](ObjectType+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v97 = *(_QWORD *)(v96 + 8);
      ObjectType = swift_getObjectType();
      v140[3] = type metadata accessor for FMFindingLocalizer();
      v140[4] = &off_250BC0A78;
      v98 = v118;
      v140[0] = v118;
      v99 = v112;
      v100 = v114;
      v101 = v98;
      v134(v137, v136, v135);
      v103 = v138;
      v102 = v139;
      sub_23A96545C(v137, v138);
      (*(void (**)(uint64_t, uint64_t))(v102 + 16))(v103, v102);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 16))(v140, v142, 3, v61, ObjectType, v97);

      swift_unknownObjectRelease();
      sub_23A963B0C(v120, v132, v116, v119);
      ((void (*)(uint64_t, uint64_t))v121)(v61, v122);
      sub_23A963B3C((uint64_t)v137);
      sub_23A963B3C((uint64_t)v140);
    }
    else
    {
      sub_23A963B0C(v120, v132, v116, v119);

    }
  }
}

void sub_23A979D4C(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  unsigned int v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  id v64;
  id v65;
  double v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int16 v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  int v96;
  int v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  void *v107;
  uint64_t ObjectType;
  uint64_t v109;
  uint64_t v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void (*v116)(uint64_t, uint64_t);
  int v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  void (*v121)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[3];
  uint64_t v130;
  uint64_t v131;
  _QWORD v132[8];
  void *v133;
  unsigned __int8 v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  unsigned __int8 v138;
  uint64_t v139;
  unsigned __int8 v140;
  unsigned __int8 v141;
  uint64_t v142;
  unsigned __int8 v143;
  unsigned __int8 v144;
  unsigned __int8 v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  unsigned __int8 v149;
  _QWORD v150[3];
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int16 v160;
  char v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  unsigned __int8 v167;
  uint64_t v168;
  unsigned __int8 v169;
  unsigned __int8 v170;
  uint64_t v171;
  unsigned __int8 v172;
  unsigned __int8 v173;
  unsigned __int8 v174;
  uint64_t v175;
  uint64_t v176;
  unsigned __int8 v177;
  unsigned __int8 v178;
  _QWORD v179[12];
  __int16 v180;

  v5 = sub_23AA32E1C();
  v6 = *(void (**)(uint64_t, uint64_t))(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v95 - v10;
  v12 = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v12)
  {
    v13 = (char *)v12;
    v116 = v6;
    v124 = v5;
    ObjectType = v2;
    v14 = a2[3];
    v15 = a2[4];
    v16 = sub_23A96545C(a2, v14);
    v17 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 8);
    v120 = v16;
    v121 = v17;
    v122 = v15;
    v123 = v14;
    v17(v150, v14, v15);
    v18 = v151;
    v19 = v152;
    sub_23A96545C(v150, v151);
    (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    v111 = v13;
    v20 = &v13[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    v112 = v9;
    v95 = v20;
    v106 = a1;
    if (v22)
    {
      swift_bridgeObjectRetain();
      v23 = sub_23AA1D250((uint64_t)v11);
      if ((v24 & 1) != 0)
      {
        v25 = *(_QWORD *)(v21 + 56) + 104 * v23;
        v26 = *(_QWORD *)v25;
        v27 = *(unsigned __int8 *)(v25 + 8);
        v29 = *(void **)(v25 + 16);
        v28 = *(void **)(v25 + 24);
        v128 = *(_QWORD *)(v25 + 32);
        v30 = *(unsigned __int8 *)(v25 + 40);
        v31 = *(_QWORD *)(v25 + 48);
        v32 = *(unsigned __int8 *)(v25 + 56);
        v33 = *(unsigned __int8 *)(v25 + 57);
        v127 = *(_QWORD *)(v25 + 64);
        v34 = *(unsigned __int8 *)(v25 + 72);
        v35 = *(unsigned __int8 *)(v25 + 73);
        v36 = *(unsigned __int8 *)(v25 + 74);
        v37 = *(_QWORD *)(v25 + 80);
        v118 = *(_QWORD *)(v25 + 88);
        v119 = v37;
        v38 = *(unsigned __int8 *)(v25 + 96);
        v39 = *(unsigned __int8 *)(v25 + 97);
        if (v33)
          v40 = 256;
        else
          v40 = 0;
        v126 = v40 | v32;
        if (v35)
          v41 = 256;
        else
          v41 = 0;
        v42 = v41 | v34;
        v43 = 0x10000;
        if (!v36)
          v43 = 0;
        v125 = v42 | v43;
        if (v39)
          v44 = 256;
        else
          v44 = 0;
        v117 = v44 | v38;
        v45 = v28;
        v46 = v28;
        v47 = (uint64_t)v29;
        v48 = v29;
      }
      else
      {
        v26 = 0;
        v27 = 0;
        v45 = 0;
        v127 = 0;
        v128 = 0;
        v30 = 0;
        v31 = 0;
        v125 = 0;
        v126 = 0;
        v118 = 0;
        v119 = 0;
        v117 = 0;
        v47 = 1;
      }
      swift_bridgeObjectRelease();
      v22 = v127;
      v49 = v128;
      v51 = v125;
      v50 = v126;
      v53 = v118;
      v52 = v119;
      v54 = v117;
    }
    else
    {
      v26 = 0;
      v27 = 0;
      v45 = 0;
      v49 = 0;
      v30 = 0;
      v31 = 0;
      v50 = 0;
      v51 = 0;
      v52 = 0;
      v53 = 0;
      v54 = 0;
      v47 = 1;
    }
    v125 = v51;
    v126 = v50;
    v127 = v22;
    v128 = v49;
    v113 = v31;
    v114 = v30;
    v179[0] = v26;
    v179[1] = v27;
    v179[2] = v47;
    v179[3] = v45;
    v179[4] = v49;
    v179[5] = v30;
    v179[6] = v31;
    v179[7] = v50;
    v179[8] = v22;
    v179[9] = v51;
    v179[10] = v52;
    v179[11] = v53;
    v180 = v54;
    v55 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v116 + 1);
    v56 = v52;
    v57 = v54;
    v115 = v45;
    v116 = v55;
    v58 = (void *)v47;
    v55((uint64_t)v11, v124);
    sub_23A963B3C((uint64_t)v150);
    v121(v150, v123, v122);
    v59 = v26;
    v60 = v27;
    v61 = v151;
    v62 = v152;
    sub_23A96545C(v150, v151);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v62 + 24))(&v162, v61, v62);
    v63 = v165;
    sub_23A980B18(v162, v163, v164, (char)v165);
    sub_23A963B3C((uint64_t)v150);
    v109 = v60;
    v110 = v59;
    v107 = v58;
    v118 = v53;
    v119 = v56;
    v117 = v57;
    if (v58 == (void *)1)
    {
      LOBYTE(v63) = v63 == 1;
    }
    else
    {
      sub_23A963C40(v59, v60, v58, v115);
      v63 = v57 >> 8;
    }
    v64 = v106;
    v65 = v106;
    v66 = sub_23A96B688(0.0, 1, 0, v64, (uint64_t)v179, v63, (uint64_t)&v133);
    v67 = v95;
    v68 = v146;
    v98 = v145;
    v99 = v148;
    v96 = v149;
    v97 = v144;
    v100 = v143;
    v69 = v142;
    v70 = v141;
    v101 = v140;
    v102 = v147;
    v71 = v139;
    v72 = v137;
    v73 = (void *)v135;
    v74 = v136;
    v103 = v134;
    v104 = v138;
    v75 = v133;
    v162 = v133;
    LOBYTE(v163) = v134;
    v164 = v135;
    v165 = v136;
    v166 = v137;
    v167 = v138;
    v168 = v139;
    v169 = v140;
    v170 = v141;
    v171 = v142;
    v172 = v143;
    v173 = v144;
    v174 = v145;
    v175 = v146;
    v176 = v147;
    v177 = v148;
    v178 = v149;
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, double))v121)(v150, v123, v122, v66);
    v76 = v151;
    v77 = v152;
    sub_23A96545C(v150, v151);
    v78 = (uint64_t)v112;
    (*(void (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77);
    swift_beginAccess();
    v106 = v74;
    v105 = v73;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v129[0] = *(_QWORD *)v67;
    *(_QWORD *)v67 = 0x8000000000000000;
    sub_23A97F890((uint64_t)&v162, v78, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v67 = v129[0];
    swift_bridgeObjectRelease();
    v116(v78, v124);
    swift_endAccess();
    sub_23A963B3C((uint64_t)v150);
    if (v70)
      v80 = 256;
    else
      v80 = 0;
    v150[0] = v75;
    v150[1] = v103;
    v81 = v80 | v101;
    if (v97)
      v82 = 256;
    else
      v82 = 0;
    v83 = v82 | v100;
    v84 = 0x10000;
    if (!v98)
      v84 = 0;
    v85 = v83 | v84;
    if (v96)
      v86 = 256;
    else
      v86 = 0;
    v150[2] = v73;
    v151 = (uint64_t)v74;
    v152 = v72;
    v153 = v104;
    v154 = v71;
    v155 = v81;
    v156 = v69;
    v157 = v85;
    v158 = v68;
    v159 = v102;
    v160 = v86 | v99;
    v87 = ObjectType
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    v161 = 4;
    if (MEMORY[0x23B85DBF0](ObjectType+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v88 = *(_QWORD *)(v87 + 8);
      ObjectType = swift_getObjectType();
      v132[3] = type metadata accessor for FMFindingLocalizer();
      v132[4] = &off_250BC0A78;
      v89 = v111;
      v132[0] = v111;
      v90 = v105;
      v91 = v106;
      v92 = v89;
      v121(v129, v123, v122);
      v94 = v130;
      v93 = v131;
      sub_23A96545C(v129, v130);
      (*(void (**)(uint64_t, uint64_t))(v93 + 16))(v94, v93);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 16))(v132, v150, 3, v78, ObjectType, v88);

      swift_unknownObjectRelease();
      sub_23A963B0C(v110, v109, v107, v115);
      v116(v78, v124);
      sub_23A963B3C((uint64_t)v129);
      sub_23A963B3C((uint64_t)v132);
    }
    else
    {
      sub_23A963B0C(v110, v109, v107, v115);

    }
  }
}

uint64_t sub_23A97A4D4(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  result = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (result)
  {
    v9 = (void *)result;
    swift_getErrorValue();
    if (sub_23AA33764() != 300)
    {
LABEL_8:
      v16 = *(int *)(sub_23A964084(&qword_2569D5CE0) + 48);
      v17 = a2[3];
      v18 = a2[4];
      sub_23A96545C(a2, v17);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v23, v17, v18);
      v19 = v24;
      v20 = v25;
      sub_23A96545C(v23, v24);
      (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
      *(_QWORD *)&v7[v16] = a1;
      swift_storeEnumTagMultiPayload();
      v21 = a1;
      sub_23A975624((uint64_t)v7, 0);

      sub_23A980438((uint64_t)v7);
      return sub_23A963B3C((uint64_t)v23);
    }
    swift_getErrorValue();
    v10 = sub_23AA33770();
    v12 = v11;
    if (v10 == sub_23AA32FD8() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v15 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
    sub_23A975624((uint64_t)v7, 0);

    return sub_23A980438((uint64_t)v7);
  }
  return result;
}

void sub_23A97A6E4(char a1, _QWORD *a2)
{
  sub_23A97B3D8(a1, a2);
}

void sub_23A97A708(uint64_t a1, _QWORD *a2)
{
  sub_23A980944(a2);
}

void sub_23A97A714(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  _UNKNOWN **v22;
  double v23;
  void (*v24)(char *, uint64_t, double);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t ObjectType;
  id v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  char v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  _QWORD *v52;
  void (*v53)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  _UNKNOWN **v72;
  uint64_t v73[4];

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = MEMORY[0x23B85DBF0](a1 + 16);
  if (v8)
  {
    v9 = (char *)v8;
    v10 = v8
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner;
    v11 = MEMORY[0x23B85DBF0](v8+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (v11)
    {
      v12 = (void *)v11;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v66 = v4;
      v13 = sub_23AA32EA0();
      sub_23A9620E8(v13, (uint64_t)qword_2569E0040);
      v14 = sub_23AA32E88();
      v15 = sub_23AA33218();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_23A95E000, v14, v15, "ðŸ§­ FMFindingLocalizer: Did not update range estimate so reset state", v16, 2u);
        MEMORY[0x23B85DB24](v16, -1, -1);
      }

      v17 = a2[3];
      v18 = a2[4];
      v19 = sub_23A96545C(a2, v17);
      v20 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v18 + 8);
      v52 = v19;
      v53 = v20;
      v20(v70, v17, v18);
      v21 = v71;
      v22 = v72;
      sub_23A96545C(v70, v71);
      ((void (*)(uint64_t, _UNKNOWN **))v22[2])(v21, v22);
      swift_beginAccess();
      v23 = sub_23A97EF34((uint64_t)v7, (uint64_t)v73);
      v24 = *(void (**)(char *, uint64_t, double))(v5 + 8);
      v24(v7, v66, v23);
      sub_23A963B0C(v73[0], v73[1], (void *)v73[2], (void *)v73[3]);
      swift_endAccess();
      sub_23A963B3C((uint64_t)v70);
      if ((*(_WORD *)((_BYTE *)v12 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology) & 0x8100) == 0x100)
      {
        v25 = MEMORY[0x23B85DBF0](v10);
        if (v25)
        {
          v26 = (void *)v25;
          v27 = v25 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement;
          v28 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement);
          v29 = *(_QWORD *)(v27 + 8);
          v30 = *(void **)(v27 + 16);
          v31 = *(void **)(v27 + 24);
          v32 = *(_QWORD *)(v27 + 32);
          v33 = *(_QWORD *)(v27 + 40);
          v34 = *(_QWORD *)(v27 + 48);
          v35 = *(_QWORD *)(v27 + 56);
          v36 = *(_QWORD *)(v27 + 64);
          v37 = *(_QWORD *)(v27 + 72);
          v38 = *(_QWORD *)(v27 + 80);
          v39 = *(unsigned __int16 *)(v27 + 96);
          v40 = *(unsigned __int8 *)(v27 + 98);
          v49 = *(_BYTE *)(v27 + 98);
          v48 = *(_WORD *)(v27 + 96);
          v54 = *(_QWORD *)(v27 + 88);
          v55 = v38;
          v56 = v37;
          v57 = v36;
          v65 = v28;
          v64 = v29;
          v58 = (uint64_t)v30;
          v63 = v31;
          v62 = v32;
          v61 = v33;
          v60 = v34;
          v59 = v35;
          sub_23A963C14(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v54, v48, v49);

          v41 = v39 | (v40 << 16);
        }
        else
        {
          v65 = 0;
          v64 = 0;
          v58 = 0;
          v63 = 0;
          v62 = 0;
          v61 = 0;
          v60 = 0;
          v59 = 0;
          v57 = 0;
          v56 = 0;
          v55 = 0;
          v54 = 0;
          v41 = 16711680;
        }
      }
      else
      {
        v65 = 0;
        v64 = 0;
        v63 = 0;
        v62 = 0;
        v61 = 0;
        v60 = 0;
        v59 = 0;
        v57 = 0;
        v56 = 0;
        v55 = 0;
        v54 = 0;
        v41 = 0x40000;
        v58 = 1;
      }
      v42 = &v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate];
      if (MEMORY[0x23B85DBF0](&v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate]))
      {
        v51 = (void (*)(char *, uint64_t))v24;
        v43 = *((_QWORD *)v42 + 1);
        ObjectType = swift_getObjectType();
        v71 = type metadata accessor for FMFindingLocalizer();
        v72 = &off_250BC0A78;
        v70[0] = v12;
        sub_23A964108((__int128 *)((char *)v12 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement), (uint64_t)v73);
        v45 = v12;
        sub_23A981C24((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23A963C14);
        v53(v67, v17, v18);
        v46 = v68;
        v47 = v69;
        sub_23A96545C(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
        (*(void (**)(_QWORD *, uint64_t *, uint64_t, char *, uint64_t, uint64_t))(v43 + 16))(v70, v73, 3, v7, ObjectType, v43);

        sub_23A980C94(v65, v64, (void *)v58, v63, v62, v61, v60, v59, v57, v56, v55, v54, v41, BYTE2(v41));
        sub_23A981C24((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23A963AE0);

        swift_unknownObjectRelease();
        v51(v7, v66);
        sub_23A963B3C((uint64_t)v67);
        sub_23A963B3C((uint64_t)v70);
      }
      else
      {
        sub_23A980C94(v65, v64, (void *)v58, v63, v62, v61, v60, v59, v57, v56, v55, v54, v41, BYTE2(v41));

      }
    }
    else
    {

    }
  }
}

void sub_23A97AD6C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[5];
  _QWORD v119[12];
  unsigned __int16 v120;
  unsigned __int8 v121;
  _QWORD v122[12];
  unsigned __int16 v123;
  unsigned __int8 v124;
  _QWORD v125[12];
  int v126;
  char v127;

  v107 = a3;
  sub_23A96C1B8(a1, (uint64_t)v119, &qword_2569D60C0);
  v102 = v119[0];
  v103 = v119[1];
  v104 = (void *)v119[3];
  v105 = v119[4];
  v114 = v119[5];
  v106 = v119[6];
  v6 = v119[7];
  v100 = v119[9];
  v101 = v119[8];
  v112 = (void *)v119[2];
  v113 = v119[10];
  v7 = v119[11];
  v8 = v121;
  v9 = v120;
  v10 = sub_23AA32E1C();
  v109 = *(_QWORD *)(v10 - 8);
  v110 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v108 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v3
      + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner;
  v13 = MEMORY[0x23B85DBF0](v3+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v13)
  {
    v14 = (void *)v13;
    v98 = a2;
    v99 = a1;
    sub_23A96C1B8(a1, (uint64_t)v122, &qword_2569D60C0);
    v15 = v124;
    if (v124 == 255)
    {
      v111 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0x4000000;
    }
    else
    {
      v87 = v6;
      v90 = v3;
      v86 = v9 | (v8 << 16);
      v111 = v122[0];
      v28 = v122[1];
      v29 = v123 | (v124 << 16);
      v30 = v122[2];
      v31 = v122[3];
      v32 = v122[4];
      v96 = v122[6];
      v97 = v122[5];
      v94 = v122[8];
      v95 = v122[7];
      v92 = v122[10];
      v93 = v122[9];
      v91 = v122[11];
      v33 = (char *)MEMORY[0x23B85DBF0](v12);
      v88 = v30;
      v89 = v28;
      if (v33)
      {
        v34 = &v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
        v35 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
        v82 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 8];
        v83 = v35;
        v36 = *(void **)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 16];
        v80 = *(void **)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 24];
        v81 = v36;
        v37 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 32];
        v78 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 40];
        v79 = v37;
        v38 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 48];
        v76 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 56];
        v77 = v38;
        v75 = *(_OWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 64];
        v39 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 80];
        v73 = *(_QWORD *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 88];
        v74 = v39;
        LODWORD(v39) = *(unsigned __int16 *)&v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 96];
        v71 = v33[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 98];
        v72 = v39;
        *(_QWORD *)v34 = v111;
        *((_QWORD *)v34 + 1) = v28;
        *((_QWORD *)v34 + 2) = v30;
        *((_QWORD *)v34 + 3) = v31;
        v40 = v97;
        *((_QWORD *)v34 + 4) = v32;
        *((_QWORD *)v34 + 5) = v40;
        v41 = v95;
        *((_QWORD *)v34 + 6) = v96;
        *((_QWORD *)v34 + 7) = v41;
        v42 = v93;
        *((_QWORD *)v34 + 8) = v94;
        *((_QWORD *)v34 + 9) = v42;
        v43 = v91;
        *((_QWORD *)v34 + 10) = v92;
        *((_QWORD *)v34 + 11) = v43;
        *((_WORD *)v34 + 48) = v29;
        v44 = v86;
        v67 = HIWORD(v86);
        v34[98] = v15;
        v66 = v7;
        v65 = v7;
        v70 = v32;
        v45 = v100;
        v84 = v29;
        v46 = v101;
        v68 = v33;
        v69 = v31;
        v47 = v102;
        v85 = v14;
        v49 = v103;
        v48 = v104;
        v50 = v105;
        v51 = v106;
        v52 = v87;
        sub_23A963C14(v102, v103, v112, v104, v105, v114, v106, v87, v101, v100, v113, v65, v44, SBYTE2(v44));
        v64 = v46;
        v53 = v49;
        v29 = v84;
        v14 = v85;
        sub_23A963C14(v47, v53, v112, v48, v50, v114, v51, v52, v64, v45, v113, v66, v44, v67);
        sub_23A963AE0(v83, v82, v81, v80, v79, v78, v77, v76, v75, *((uint64_t *)&v75 + 1), v74, v73, v72, v71);

        v18 = v69;
        v19 = v70;
      }
      else
      {
        sub_23A963C14(v102, v103, v112, v104, v105, v114, v106, v87, v101, v100, v113, v7, v86, SBYTE2(v86));
        v18 = v31;
        v19 = v32;
      }
      v21 = v96;
      v20 = v97;
      v23 = v94;
      v22 = v95;
      v25 = v92;
      v24 = v93;
      v3 = v90;
      v26 = v91;
      v27 = v29 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v98 << 24) | 0x300000000;
      v17 = v88;
      v16 = v89;
    }
    v125[0] = v111;
    v125[1] = v16;
    v125[2] = v17;
    v125[3] = v18;
    v125[4] = v19;
    v125[5] = v20;
    v125[6] = v21;
    v125[7] = v22;
    v125[8] = v23;
    v125[9] = v24;
    v125[10] = v25;
    v125[11] = v26;
    v126 = v27;
    v54 = v3
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    v127 = BYTE4(v27);
    if (MEMORY[0x23B85DBF0](v54))
    {
      v55 = *(_QWORD *)(v54 + 8);
      ObjectType = swift_getObjectType();
      v118[3] = type metadata accessor for FMFindingLocalizer();
      v118[4] = &off_250BC0A78;
      v118[0] = v14;
      v57 = v107[3];
      v58 = v107[4];
      sub_23A96545C(v107, v57);
      v59 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v58 + 8);
      v60 = v14;
      v59(v115, v57, v58);
      v61 = v116;
      v62 = v117;
      sub_23A96545C(v115, v116);
      v63 = v108;
      (*(void (**)(uint64_t, uint64_t))(v62 + 16))(v61, v62);
      (*(void (**)(_QWORD *, _QWORD *, char *, uint64_t, uint64_t))(v55 + 8))(v118, v125, v63, ObjectType, v55);

      swift_unknownObjectRelease();
      sub_23A980C34(v99);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v63, v110);
      sub_23A963B3C((uint64_t)v115);
      sub_23A963B3C((uint64_t)v118);
    }
    else
    {
      sub_23A980C34(v99);

    }
  }
}

uint64_t sub_23A97B2A0(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(int *)(sub_23A964084(&qword_2569D5CE0) + 48);
    v11 = a2[3];
    v12 = a2[4];
    sub_23A96545C(a2, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v17, v11, v12);
    v13 = v18;
    v14 = v19;
    sub_23A96545C(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    *(_QWORD *)&v7[v10] = a1;
    swift_storeEnumTagMultiPayload();
    v15 = a1;
    sub_23A975624((uint64_t)v7, 1);

    sub_23A980438((uint64_t)v7);
    return sub_23A963B3C((uint64_t)v17);
  }
  return result;
}

void sub_23A97B3D8(char a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v8)
  {
    if (a1 == 3)
    {
      v9 = a2[3];
      v10 = a2[4];
      v13 = v8;
      sub_23A96545C(a2, v9);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v14, v9, v10);
      v11 = v15;
      v12 = v16;
      sub_23A96545C(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      swift_storeEnumTagMultiPayload();
      sub_23A975624((uint64_t)v7, 0);

      sub_23A980438((uint64_t)v7);
      sub_23A963B3C((uint64_t)v14);
    }
    else
    {

    }
  }
}

void sub_23A97B50C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  id v10;
  id v11;
  _QWORD v12[5];

  v5 = MEMORY[0x23B85DBF0](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v5)
  {
    v11 = (id)v5;
    v6 = v2
       + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x23B85DBF0](v6))
    {
      v7 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType();
      v12[3] = type metadata accessor for FMFindingLocalizer();
      v12[4] = &off_250BC0A78;
      v12[0] = v11;
      v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32);
      v10 = v11;
      v9(v12, a1, a2, ObjectType, v7);
      swift_unknownObjectRelease();

      sub_23A963B3C((uint64_t)v12);
    }
    else
    {

    }
  }
}

uint64_t sub_23A97B600()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_description);
  v2 = sub_23AA32FD8();

  return v2;
}

void sub_23A97B654(unint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, _QWORD *a6)
{
  sub_23A980CC8(a1 | ((HIDWORD(a1) & 1) << 32), a2 | ((HIDWORD(a2) & 1) << 32), a4, a6);
}

void sub_23A97B770(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  id v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  id v53;

  v48 = a3;
  v5 = sub_23AA32E1C();
  v49 = *(_QWORD **)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)v42 - v9;
  v10 = sub_23A964084((uint64_t *)&unk_2569D5D50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v42[1] = a1;
  if (v13)
  {
    v14 = sub_23A964084((uint64_t *)&unk_2569D8C90);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v47 = v15;
    v44 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    v45 = v14;
    v46 = v5;
    v43 = v12;
    while (1)
    {
      sub_23A968378(v16, (uint64_t)v12, (uint64_t *)&unk_2569D8C90);
      v17 = v47;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v12, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v14) == 1)
        goto LABEL_19;
      v18 = &v12[*(int *)(v14 + 48)];
      v19 = (uint64_t)v50;
      v20 = (void (*)(uint64_t, char *, uint64_t))v49[4];
      v20((uint64_t)v50, v12, v5);
      v21 = v8;
      v20((uint64_t)v8, v18, v5);
      v22 = v48;
      v23 = *v48;
      v25 = sub_23AA1D250(v19);
      v26 = *(_QWORD *)(v23 + 16);
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (*(_QWORD *)(v23 + 24) >= v28)
      {
        if ((a2 & 1) != 0)
        {
          if ((v24 & 1) != 0)
            goto LABEL_15;
        }
        else
        {
          sub_23A97C050();
          if ((v29 & 1) != 0)
            goto LABEL_15;
        }
      }
      else
      {
        sub_23A97D1D4(v28, a2 & 1);
        v30 = sub_23AA1D250((uint64_t)v50);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_22;
        v25 = v30;
        if ((v29 & 1) != 0)
        {
LABEL_15:
          v37 = (void *)swift_allocError();
          swift_willThrow();
          v53 = v37;
          v38 = v37;
          sub_23A964084((uint64_t *)&unk_2569D5AF0);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v39 = (void (*)(char *, uint64_t))v49[1];
            v40 = v46;
            v39(v21, v46);
            v39(v50, v40);
            swift_bridgeObjectRelease();

            return;
          }
          goto LABEL_23;
        }
      }
      v32 = (_QWORD *)*v22;
      *(_QWORD *)(*v22 + 8 * (v25 >> 6) + 64) |= 1 << v25;
      v33 = v49[9] * v25;
      v5 = v46;
      v20(v32[6] + v33, v50, v46);
      v8 = v21;
      v20(v32[7] + v33, v21, v5);
      v34 = v32[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_21;
      v32[2] = v36;
      v14 = v45;
      v16 += v44;
      a2 = 1;
      --v13;
      v12 = v43;
      if (!v13)
        goto LABEL_18;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_23AA33758();
    __break(1u);
LABEL_23:
    v51 = 0;
    v52 = 0xE000000000000000;
    sub_23AA33500();
    sub_23AA33038();
    sub_23AA33590();
    sub_23AA33038();
    sub_23AA335A8();
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
LABEL_18:
  v41 = sub_23A964084((uint64_t *)&unk_2569D8C90);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v12, 1, 1, v41);
LABEL_19:
  swift_bridgeObjectRelease_n();
}

void sub_23A97BBC0(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(unint64_t, char *, uint64_t);
  uint64_t v63;
  unint64_t v64;
  id v65;

  v7 = sub_23AA32E1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A964084((uint64_t *)&unk_2569D5D60);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v58) = a2;
  v55 = v3;
  v17 = *(int *)(v12 + 48);
  v54 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v54;
  v60 = *(_QWORD *)(v13 + 72);
  v57 = a1;
  swift_bridgeObjectRetain();
  sub_23A968378(v18, (uint64_t)v15, (uint64_t *)&unk_2569D5D60);
  v56 = v8;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v61 = v7;
  v62 = v19;
  v19((unint64_t)v10, v15, v7);
  v59 = v17;
  v20 = *(_QWORD *)&v15[v17];
  v21 = (_QWORD *)*a3;
  v23 = sub_23AA1D250((uint64_t)v10);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
    goto LABEL_24;
  v27 = v22;
  if (v21[3] >= v26)
  {
    if ((v58 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_23A97C2AC();
      if ((v27 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v32 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v33 = v32[6];
    v58 = *(_QWORD *)(v56 + 72);
    v34 = v61;
    v62(v33 + v58 * v23, v10, v61);
    *(_QWORD *)(v32[7] + 8 * v23) = v20;
    v35 = v32[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v32[2] = v37;
    v38 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v39 = v57 + v60 + v54;
    while (1)
    {
      sub_23A968378(v39, (uint64_t)v15, (uint64_t *)&unk_2569D5D60);
      v62((unint64_t)v10, v15, v34);
      v40 = *(_QWORD *)&v15[v59];
      v41 = (_QWORD *)*a3;
      v43 = sub_23AA1D250((uint64_t)v10);
      v44 = v41[2];
      v45 = (v42 & 1) == 0;
      v46 = v44 + v45;
      if (__OFADD__(v44, v45))
        break;
      v47 = v42;
      if (v41[3] < v46)
      {
        sub_23A97D5AC(v46, 1);
        v48 = sub_23AA1D250((uint64_t)v10);
        if ((v47 & 1) != (v49 & 1))
          goto LABEL_26;
        v43 = v48;
      }
      if ((v47 & 1) != 0)
        goto LABEL_10;
      v50 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v43 >> 6) + 64) |= 1 << v43;
      v34 = v61;
      v62(v50[6] + v58 * v43, v10, v61);
      *(_QWORD *)(v50[7] + 8 * v43) = v40;
      v51 = v50[2];
      v36 = __OFADD__(v51, 1);
      v52 = v51 + 1;
      if (v36)
        goto LABEL_25;
      v50[2] = v52;
      v39 += v60;
      if (!--v38)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_23A97D5AC(v26, v58 & 1);
  v28 = sub_23AA1D250((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    if ((v27 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v30 = (void *)swift_allocError();
    swift_willThrow();
    v65 = v30;
    v31 = v30;
    sub_23A964084((uint64_t *)&unk_2569D5AF0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v61);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_23AA33758();
  __break(1u);
LABEL_27:
  v63 = 0;
  v64 = 0xE000000000000000;
  sub_23AA33500();
  sub_23AA33038();
  sub_23AA33590();
  sub_23AA33038();
  sub_23AA335A8();
  __break(1u);
}

void *sub_23A97C050()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(unint64_t, char *, uint64_t);
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v1 = sub_23AA32E1C();
  v2 = *(_QWORD **)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  sub_23A964084((uint64_t *)&unk_2569D5D90);
  v26 = v0;
  v8 = *v0;
  v9 = sub_23AA335CC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_23;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v19 = v2[9] * v18;
    v20 = (void (*)(char *, unint64_t, uint64_t))v2[2];
    v20(v7, *(_QWORD *)(v8 + 48) + v19, v1);
    v20(v5, *(_QWORD *)(v8 + 56) + v19, v1);
    v21 = (void (*)(unint64_t, char *, uint64_t))v2[4];
    v21(*(_QWORD *)(v10 + 48) + v19, v7, v1);
    result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v21)(*(_QWORD *)(v10 + 56) + v19, v5, v1);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_23;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_23A97C2AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23AA32E1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084((uint64_t *)&unk_2569D5D70);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23AA335CC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A97C4D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  const void *v51;
  int64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = sub_23AA32E1C();
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v53 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084(&qword_2569D5D18);
  v50 = v0;
  v3 = *v0;
  v4 = sub_23AA335CC();
  v5 = *(_QWORD *)(v3 + 16);
  v57 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v49 = v57;
    v48 = v50;
LABEL_28:
    *v48 = v49;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v51 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v51, 8 * v8);
    v6 = v57;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v56 = v3;
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v52 = (unint64_t)(v11 + 63) >> 6;
  v15 = v53;
  v14 = v54;
  v16 = v55;
  v17 = v57;
  while (1)
  {
    if (v13)
    {
      v58 = (v13 - 1) & v13;
      v59 = v10;
      v18 = __clz(__rbit64(v13)) | (v10 << 6);
      v19 = v56;
      goto LABEL_12;
    }
    v44 = v10 + 1;
    v19 = v56;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v44 >= v52)
      goto LABEL_26;
    v45 = *((_QWORD *)v51 + v44);
    v46 = v10 + 1;
    if (!v45)
    {
      v46 = v44 + 1;
      if (v44 + 1 >= v52)
        goto LABEL_26;
      v45 = *((_QWORD *)v51 + v46);
      if (!v45)
        break;
    }
LABEL_25:
    v58 = (v45 - 1) & v45;
    v59 = v46;
    v18 = __clz(__rbit64(v45)) + (v46 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v14 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v16);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 104 * v18;
    v23 = v21 + 104 * v18;
    v24 = *(_QWORD *)v23;
    v68 = *(_QWORD *)(v23 + 8);
    v69 = v24;
    v25 = *(void **)(v23 + 16);
    v66 = *(void **)(v23 + 24);
    v67 = v25;
    v26 = *(_QWORD *)(v23 + 32);
    v64 = *(_QWORD *)(v23 + 40);
    v65 = v26;
    v27 = *(_QWORD *)(v23 + 48);
    v62 = *(_QWORD *)(v23 + 56);
    v63 = v27;
    v28 = *(_QWORD *)(v23 + 64);
    v29 = *(_QWORD *)(v23 + 80);
    v60 = *(_QWORD *)(v23 + 72);
    v61 = v28;
    v30 = *(_QWORD *)(v23 + 88);
    v31 = *(unsigned __int8 *)(v23 + 100);
    v32 = *(unsigned int *)(v23 + 96);
    v70 = v32 | (v31 << 32);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v17 + 48) + v20, v15, v16);
    v33 = *(_QWORD *)(v17 + 56) + v22;
    v35 = v68;
    v34 = v69;
    *(_QWORD *)v33 = v69;
    *(_QWORD *)(v33 + 8) = v35;
    v37 = v66;
    v36 = v67;
    *(_QWORD *)(v33 + 16) = v67;
    *(_QWORD *)(v33 + 24) = v37;
    v39 = v64;
    v38 = v65;
    *(_QWORD *)(v33 + 32) = v65;
    *(_QWORD *)(v33 + 40) = v39;
    v41 = v62;
    v40 = v63;
    *(_QWORD *)(v33 + 48) = v63;
    *(_QWORD *)(v33 + 56) = v41;
    v43 = v60;
    v42 = v61;
    *(_QWORD *)(v33 + 64) = v61;
    *(_QWORD *)(v33 + 72) = v43;
    *(_QWORD *)(v33 + 80) = v29;
    *(_QWORD *)(v33 + 88) = v30;
    *(_BYTE *)(v33 + 100) = v31;
    *(_DWORD *)(v33 + 96) = v32;
    result = (void *)sub_23A963BDC(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v29, v30, v70);
    v13 = v58;
    v10 = v59;
  }
  v47 = v44 + 2;
  if (v47 >= v52)
  {
LABEL_26:
    result = (void *)swift_release();
    v48 = v50;
    v49 = v57;
    goto LABEL_28;
  }
  v45 = *((_QWORD *)v51 + v47);
  if (v45)
  {
    v46 = v47;
    goto LABEL_25;
  }
  while (1)
  {
    v46 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v46 >= v52)
      goto LABEL_26;
    v45 = *((_QWORD *)v51 + v46);
    ++v47;
    if (v45)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23A97C7F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  int64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  const void *v44;
  int64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;

  v1 = sub_23AA32E1C();
  v47 = *(_QWORD *)(v1 - 8);
  v48 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v46 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084(&qword_2569D5CE8);
  v43 = v0;
  v3 = *v0;
  v4 = sub_23AA335CC();
  v5 = *(_QWORD *)(v3 + 16);
  v50 = v4;
  if (!v5)
  {
    result = (id)swift_release();
    v42 = v50;
    v41 = v43;
LABEL_28:
    *v41 = v42;
    return result;
  }
  v6 = v4;
  result = (id)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v44 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v44, 8 * v8);
    v6 = v50;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v49 = v3;
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v45 = (unint64_t)(v11 + 63) >> 6;
  v15 = v46;
  v14 = v47;
  v16 = v48;
  while (1)
  {
    if (v13)
    {
      v51 = (v13 - 1) & v13;
      v52 = v10;
      v17 = __clz(__rbit64(v13)) | (v10 << 6);
      v18 = v49;
      goto LABEL_12;
    }
    v37 = v10 + 1;
    v18 = v49;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v37 >= v45)
      goto LABEL_26;
    v38 = *((_QWORD *)v44 + v37);
    v39 = v10 + 1;
    if (!v38)
    {
      v39 = v37 + 1;
      if (v37 + 1 >= v45)
        goto LABEL_26;
      v38 = *((_QWORD *)v44 + v39);
      if (!v38)
        break;
    }
LABEL_25:
    v51 = (v38 - 1) & v38;
    v52 = v39;
    v17 = __clz(__rbit64(v38)) + (v39 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v14 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v18 + 48) + v19, v16);
    v20 = 104 * v17;
    v21 = *(_QWORD *)(v18 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(unsigned __int8 *)(v21 + 8);
    v24 = *(void **)(v21 + 16);
    v25 = *(void **)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v60 = *(unsigned __int8 *)(v21 + 40);
    v61 = v23;
    v27 = *(_QWORD *)(v21 + 48);
    v28 = *(unsigned __int8 *)(v21 + 56);
    v29 = *(_BYTE *)(v21 + 57);
    v30 = *(_QWORD *)(v21 + 64);
    v58 = *(unsigned __int8 *)(v21 + 72);
    v59 = v28;
    v31 = *(unsigned __int8 *)(v21 + 73);
    v56 = *(unsigned __int8 *)(v21 + 74);
    v57 = v31;
    v32 = *(_QWORD *)(v21 + 80);
    v55 = *(_QWORD *)(v21 + 88);
    v33 = *(unsigned __int8 *)(v21 + 96);
    v53 = *(unsigned __int8 *)(v21 + 97);
    v54 = v33;
    v34 = v50;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v50 + 48) + v19, v15, v16);
    v35 = *(_QWORD *)(v34 + 56) + v20;
    *(_QWORD *)v35 = v22;
    *(_BYTE *)(v35 + 8) = v61;
    *(_QWORD *)(v35 + 16) = v24;
    *(_QWORD *)(v35 + 24) = v25;
    *(_QWORD *)(v35 + 32) = v26;
    *(_BYTE *)(v35 + 40) = v60;
    *(_QWORD *)(v35 + 48) = v27;
    *(_BYTE *)(v35 + 56) = v59;
    *(_BYTE *)(v35 + 57) = v29;
    *(_QWORD *)(v35 + 64) = v30;
    *(_BYTE *)(v35 + 72) = v58;
    *(_BYTE *)(v35 + 73) = v57;
    *(_BYTE *)(v35 + 74) = v56;
    *(_QWORD *)(v35 + 80) = v32;
    *(_QWORD *)(v35 + 88) = v55;
    *(_BYTE *)(v35 + 96) = v54;
    *(_BYTE *)(v35 + 97) = v53;
    v36 = v25;
    result = v24;
    v13 = v51;
    v10 = v52;
  }
  v40 = v37 + 2;
  if (v40 >= v45)
  {
LABEL_26:
    result = (id)swift_release();
    v41 = v43;
    v42 = v50;
    goto LABEL_28;
  }
  v38 = *((_QWORD *)v44 + v40);
  if (v38)
  {
    v39 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    v39 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v39 >= v45)
      goto LABEL_26;
    v38 = *((_QWORD *)v44 + v39);
    ++v40;
    if (v38)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23A97CB40(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_23AA32E1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_23AA335CC();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v26 = v9;
    return result;
  }
  result = (id)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v27 = v7 + 64;
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v7 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A97CD68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[2];

  v1 = v0;
  v2 = sub_23AA32E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084(qword_2569D5DA0);
  v6 = *v0;
  v7 = sub_23AA335CC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 40 * v18;
    sub_23A963A14(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = (void *)sub_23A963B98(v27, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23A97CFA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;

  v1 = v0;
  sub_23A964084(&qword_2569D5D10);
  v2 = *v0;
  v3 = sub_23AA335CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v39 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v39 >= v13)
      goto LABEL_26;
    v40 = *(_QWORD *)(v6 + 8 * v39);
    ++v9;
    if (!v40)
    {
      v9 = v39 + 1;
      if (v39 + 1 >= v13)
        goto LABEL_26;
      v40 = *(_QWORD *)(v6 + 8 * v9);
      if (!v40)
        break;
    }
LABEL_25:
    v12 = (v40 - 1) & v40;
    v15 = __clz(__rbit64(v40)) + (v9 << 6);
LABEL_12:
    v16 = 104 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 104 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(void **)(v17 + 16);
    v21 = *(void **)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_QWORD *)(v17 + 40);
    v24 = *(_QWORD *)(v17 + 48);
    v25 = *(_QWORD *)(v17 + 56);
    v26 = *(_QWORD *)(v17 + 64);
    v27 = *(_QWORD *)(v17 + 72);
    v28 = *(_QWORD *)(v17 + 80);
    v29 = *(_QWORD *)(v17 + 88);
    v30 = *(_BYTE *)(v17 + 100);
    LODWORD(v17) = *(_DWORD *)(v17 + 96);
    v31 = 40 * v15;
    v32 = *(_QWORD *)(v2 + 56) + v31;
    v33 = *(_QWORD *)(v32 + 16);
    v34 = *(_DWORD *)(v32 + 24);
    v35 = *(_QWORD *)(v32 + 32);
    v36 = *(_QWORD *)(v4 + 48) + v16;
    v37 = *(_OWORD *)v32;
    *(_QWORD *)v36 = v18;
    *(_QWORD *)(v36 + 8) = v19;
    *(_QWORD *)(v36 + 16) = v20;
    *(_QWORD *)(v36 + 24) = v21;
    *(_QWORD *)(v36 + 32) = v22;
    *(_QWORD *)(v36 + 40) = v23;
    *(_QWORD *)(v36 + 48) = v24;
    *(_QWORD *)(v36 + 56) = v25;
    *(_QWORD *)(v36 + 64) = v26;
    *(_QWORD *)(v36 + 72) = v27;
    *(_QWORD *)(v36 + 80) = v28;
    *(_QWORD *)(v36 + 88) = v29;
    *(_BYTE *)(v36 + 100) = v30;
    *(_DWORD *)(v36 + 96) = v17;
    v38 = *(_QWORD *)(v4 + 56) + v31;
    *(_OWORD *)v38 = v37;
    *(_QWORD *)(v38 + 16) = v33;
    *(_DWORD *)(v38 + 24) = v34;
    *(_QWORD *)(v38 + 32) = v35;
    result = (void *)sub_23A963BDC(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v17);
  }
  v41 = v39 + 2;
  if (v41 >= v13)
    goto LABEL_26;
  v40 = *(_QWORD *)(v6 + 8 * v41);
  if (v40)
  {
    v9 = v41;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v40 = *(_QWORD *)(v6 + 8 * v9);
    ++v41;
    if (v40)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23A97D1D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _BYTE *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(_BYTE *, unint64_t, uint64_t);
  unint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v5 = sub_23AA32E1C();
  v55 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v47[-v9];
  v11 = *v2;
  sub_23A964084((uint64_t *)&unk_2569D5D90);
  v12 = sub_23AA335D8();
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v49 = v2;
  v50 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11;
  v18 = v12 + 64;
  v54 = v17;
  result = swift_retain();
  v20 = 0;
  v48 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v52 = v21;
  v53 = v8;
  while (1)
  {
    if (v16)
    {
      v26 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v27 = v26 | (v20 << 6);
      goto LABEL_24;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v50)
      break;
    v29 = v51;
    v30 = v51[v28];
    ++v20;
    if (!v30)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v50)
        goto LABEL_34;
      v30 = v51[v20];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v50)
        {
LABEL_34:
          v45 = v54;
          swift_release();
          v3 = v49;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v51[v31];
        if (!v30)
        {
          while (1)
          {
            v20 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v20 >= v50)
              goto LABEL_34;
            v30 = v51[v20];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v20 = v31;
      }
    }
LABEL_23:
    v16 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v20 << 6);
LABEL_24:
    v32 = v54;
    v33 = *(_QWORD *)(v55 + 72);
    v34 = v33 * v27;
    v35 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v55 + v52);
    v35(v10, *(_QWORD *)(v54 + 48) + v33 * v27, v5);
    v36 = *(_QWORD *)(v32 + 56) + v34;
    v37 = v53;
    v35(v53, v36, v5);
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23AA32F9C();
    v38 = -1 << *(_BYTE *)(v12 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v18 + 8 * v40);
      }
      while (v44 == -1);
      v22 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v33 * v22;
    v24 = *(_QWORD *)(v12 + 48) + v33 * v22;
    v25 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32);
    v25(v24, v10, v5);
    result = ((uint64_t (*)(unint64_t, _BYTE *, uint64_t))v25)(*(_QWORD *)(v12 + 56) + v23, v37, v5);
    ++*(_QWORD *)(v12 + 16);
  }
  v45 = v54;
  swift_release();
  v3 = v49;
  v29 = v51;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v46 = 1 << *(_BYTE *)(v45 + 32);
  if (v46 >= 64)
    bzero(v29, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v46;
  *(_QWORD *)(v45 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_23A97D5AC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_23AA32E1C();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  sub_23A964084((uint64_t *)&unk_2569D5D70);
  v8 = sub_23AA335D8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23AA32F9C();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23A97D948(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  int64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  char *v79;
  uint64_t v80;

  v3 = v2;
  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_23A964084(&qword_2569D5D18);
  v67 = a2;
  v10 = sub_23AA335D8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v79 = v8;
  v80 = v5;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v64 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v62 = v2;
  v63 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v65 = v9;
  v66 = v6;
  while (1)
  {
    if (v15)
    {
      v77 = (v15 - 1) & v15;
      v25 = __clz(__rbit64(v15)) | (v18 << 6);
      goto LABEL_22;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v63)
      break;
    v27 = v64;
    v28 = v64[v26];
    ++v18;
    if (!v28)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v63)
        goto LABEL_34;
      v28 = v64[v18];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v63)
        {
LABEL_34:
          swift_release();
          v3 = v62;
          if ((v67 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v64[v29];
        if (!v28)
        {
          while (1)
          {
            v18 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v18 >= v63)
              goto LABEL_34;
            v28 = v64[v18];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v18 = v29;
      }
    }
LABEL_21:
    v77 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v6 + 72);
    v31 = *(_QWORD *)(v9 + 48) + v30 * v25;
    v32 = 104 * v25;
    v78 = v18;
    if ((v67 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v79, v31, v80);
      v33 = *(_QWORD *)(v9 + 56) + v32;
      v34 = *(_QWORD *)v33;
      v75 = *(_QWORD *)(v33 + 8);
      v76 = v34;
      v35 = *(void **)(v33 + 16);
      v73 = *(void **)(v33 + 24);
      v74 = v35;
      v36 = *(_QWORD *)(v33 + 32);
      v71 = *(_QWORD *)(v33 + 40);
      v72 = v36;
      v37 = *(_QWORD *)(v33 + 48);
      v69 = *(_QWORD *)(v33 + 56);
      v70 = v37;
      v38 = *(_QWORD *)(v33 + 72);
      v68 = *(_QWORD *)(v33 + 64);
      v39 = *(_QWORD *)(v33 + 80);
      v40 = *(_QWORD *)(v33 + 88);
      v41 = *(unsigned int *)(v33 + 96) | ((unint64_t)*(unsigned __int8 *)(v33 + 100) << 32);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v79, v31, v80);
      v42 = *(_QWORD *)(v9 + 56) + v32;
      v43 = *(_QWORD *)v42;
      v44 = *(_QWORD *)(v42 + 8);
      v45 = *(void **)(v42 + 16);
      v46 = *(void **)(v42 + 24);
      v47 = *(_QWORD *)(v42 + 32);
      v48 = *(_QWORD *)(v42 + 40);
      v49 = *(_QWORD *)(v42 + 48);
      v50 = *(_QWORD *)(v42 + 56);
      v51 = *(_QWORD *)(v42 + 64);
      v38 = *(_QWORD *)(v42 + 72);
      v39 = *(_QWORD *)(v42 + 80);
      v40 = *(_QWORD *)(v42 + 88);
      v52 = *(unsigned __int8 *)(v42 + 100);
      v53 = *(unsigned int *)(v42 + 96);
      v41 = v53 | (v52 << 32);
      v68 = v51;
      v75 = v44;
      v76 = v43;
      v73 = v46;
      v74 = v45;
      v71 = v48;
      v72 = v47;
      v69 = v50;
      v70 = v49;
      sub_23A963BDC(v43, v44, v45, v46, v47, v48, v49, v50, v51, v38, v39, v40, v53);
    }
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23AA32F9C();
    v54 = -1 << *(_BYTE *)(v11 + 32);
    v55 = result & ~v54;
    v56 = v55 >> 6;
    if (((-1 << v55) & ~*(_QWORD *)(v16 + 8 * (v55 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v55) & ~*(_QWORD *)(v16 + 8 * (v55 >> 6)))) | v55 & 0x7FFFFFFFFFFFFFC0;
      v6 = v66;
    }
    else
    {
      v57 = 0;
      v58 = (unint64_t)(63 - v54) >> 6;
      v6 = v66;
      do
      {
        if (++v56 == v58 && (v57 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v59 = v56 == v58;
        if (v56 == v58)
          v56 = 0;
        v57 |= v59;
        v60 = *(_QWORD *)(v16 + 8 * v56);
      }
      while (v60 == -1);
      v19 = __clz(__rbit64(~v60)) + (v56 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v30 * v19, v79, v80);
    v20 = *(_QWORD *)(v11 + 56) + 104 * v19;
    v21 = v75;
    *(_QWORD *)v20 = v76;
    *(_QWORD *)(v20 + 8) = v21;
    v22 = v73;
    *(_QWORD *)(v20 + 16) = v74;
    *(_QWORD *)(v20 + 24) = v22;
    v23 = v71;
    *(_QWORD *)(v20 + 32) = v72;
    *(_QWORD *)(v20 + 40) = v23;
    v24 = v69;
    *(_QWORD *)(v20 + 48) = v70;
    *(_QWORD *)(v20 + 56) = v24;
    *(_QWORD *)(v20 + 64) = v68;
    *(_QWORD *)(v20 + 72) = v38;
    *(_QWORD *)(v20 + 80) = v39;
    *(_QWORD *)(v20 + 88) = v40;
    *(_BYTE *)(v20 + 100) = BYTE4(v41);
    *(_DWORD *)(v20 + 96) = v41;
    ++*(_QWORD *)(v11 + 16);
    v9 = v65;
    v15 = v77;
    v18 = v78;
  }
  swift_release();
  v3 = v62;
  v27 = v64;
  if ((v67 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v61 = 1 << *(_BYTE *)(v9 + 32);
  if (v61 >= 64)
    bzero(v27, ((unint64_t)(v61 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v61;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23A97DDE0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;

  v3 = v2;
  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_23A964084(&qword_2569D5CE8);
  v61 = a2;
  v10 = sub_23AA335D8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v73 = v8;
  v74 = v5;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v58 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v56 = v2;
  v57 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v59 = v9;
  v60 = v6;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v57)
      break;
    v24 = v58;
    v25 = v58[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v57)
        goto LABEL_34;
      v25 = v58[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v57)
        {
LABEL_34:
          swift_release();
          v3 = v56;
          if ((v61 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v58[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v57)
              goto LABEL_34;
            v25 = v58[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    v29 = 104 * v22;
    if ((v61 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v73, v28, v74);
      v30 = *(_QWORD *)(v9 + 56) + v29;
      v72 = *(_QWORD *)v30;
      v31 = *(unsigned __int8 *)(v30 + 8);
      v32 = *(void **)(v30 + 16);
      v33 = *(void **)(v30 + 24);
      v34 = *(_QWORD *)(v30 + 32);
      v70 = *(unsigned __int8 *)(v30 + 40);
      v71 = v31;
      v35 = *(_QWORD *)(v30 + 48);
      v36 = *(unsigned __int8 *)(v30 + 56);
      v68 = *(unsigned __int8 *)(v30 + 57);
      v69 = v36;
      v37 = *(_QWORD *)(v30 + 64);
      v38 = *(unsigned __int8 *)(v30 + 72);
      v66 = *(unsigned __int8 *)(v30 + 73);
      v67 = v38;
      v65 = *(unsigned __int8 *)(v30 + 74);
      v39 = *(_QWORD *)(v30 + 80);
      v64 = *(_QWORD *)(v30 + 88);
      v40 = *(unsigned __int8 *)(v30 + 96);
      v62 = *(unsigned __int8 *)(v30 + 97);
      v63 = v40;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v73, v28, v74);
      v41 = *(_QWORD *)(v9 + 56) + v29;
      v72 = *(_QWORD *)v41;
      v42 = *(unsigned __int8 *)(v41 + 8);
      v32 = *(void **)(v41 + 16);
      v33 = *(void **)(v41 + 24);
      v34 = *(_QWORD *)(v41 + 32);
      v70 = *(unsigned __int8 *)(v41 + 40);
      v71 = v42;
      v35 = *(_QWORD *)(v41 + 48);
      v43 = *(unsigned __int8 *)(v41 + 56);
      v68 = *(unsigned __int8 *)(v41 + 57);
      v69 = v43;
      v37 = *(_QWORD *)(v41 + 64);
      v44 = *(unsigned __int8 *)(v41 + 72);
      v66 = *(unsigned __int8 *)(v41 + 73);
      v67 = v44;
      v65 = *(unsigned __int8 *)(v41 + 74);
      v39 = *(_QWORD *)(v41 + 80);
      v64 = *(_QWORD *)(v41 + 88);
      v45 = *(unsigned __int8 *)(v41 + 96);
      v62 = *(unsigned __int8 *)(v41 + 97);
      v63 = v45;
      v46 = v33;
      v47 = v32;
    }
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23AA32F9C();
    v48 = -1 << *(_BYTE *)(v11 + 32);
    v49 = result & ~v48;
    v50 = v49 >> 6;
    if (((-1 << v49) & ~*(_QWORD *)(v16 + 8 * (v49 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v49) & ~*(_QWORD *)(v16 + 8 * (v49 >> 6)))) | v49 & 0x7FFFFFFFFFFFFFC0;
      v6 = v60;
    }
    else
    {
      v51 = 0;
      v52 = (unint64_t)(63 - v48) >> 6;
      v6 = v60;
      do
      {
        if (++v50 == v52 && (v51 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v53 = v50 == v52;
        if (v50 == v52)
          v50 = 0;
        v51 |= v53;
        v54 = *(_QWORD *)(v16 + 8 * v50);
      }
      while (v54 == -1);
      v19 = __clz(__rbit64(~v54)) + (v50 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v73, v74);
    v20 = *(_QWORD *)(v11 + 56) + 104 * v19;
    *(_QWORD *)v20 = v72;
    *(_BYTE *)(v20 + 8) = v71;
    *(_QWORD *)(v20 + 16) = v32;
    *(_QWORD *)(v20 + 24) = v33;
    *(_QWORD *)(v20 + 32) = v34;
    *(_BYTE *)(v20 + 40) = v70;
    *(_QWORD *)(v20 + 48) = v35;
    *(_BYTE *)(v20 + 56) = v69;
    *(_BYTE *)(v20 + 57) = v68;
    *(_QWORD *)(v20 + 64) = v37;
    *(_BYTE *)(v20 + 72) = v67;
    *(_BYTE *)(v20 + 73) = v66;
    *(_BYTE *)(v20 + 74) = v65;
    *(_QWORD *)(v20 + 80) = v39;
    *(_QWORD *)(v20 + 88) = v64;
    *(_BYTE *)(v20 + 96) = v63;
    *(_BYTE *)(v20 + 97) = v62;
    ++*(_QWORD *)(v11 + 16);
    v9 = v59;
  }
  swift_release();
  v3 = v56;
  v24 = v58;
  if ((v61 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v55 = 1 << *(_BYTE *)(v9 + 32);
  if (v55 >= 64)
    bzero(v24, ((unint64_t)(v55 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v55;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23A97E2C4(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = sub_23AA32E1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  sub_23A964084(a3);
  v44 = a2;
  v12 = sub_23AA335D8();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23AA32F9C();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_23A97E65C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_23A964084(qword_2569D5DA0);
  v40 = a2;
  v10 = sub_23AA335D8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_23A963B98((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_23A963A14(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23AA32F9C();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_23A963B98(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

void sub_23A97EA04(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  int64_t v46;
  __int128 v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char v59;
  __int128 v60;
  uint64_t v61;
  int v62;
  uint64_t v63;

  v4 = *v2;
  sub_23A964084(&qword_2569D5D10);
  v43 = a2;
  v44 = (_QWORD *)sub_23AA335D8();
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = 1 << *(_BYTE *)(v4 + 32);
    v37 = (_QWORD *)(v4 + 64);
    v6 = -1;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    v7 = v6 & *(_QWORD *)(v4 + 64);
    v36 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    v8 = 0;
    v42 = v4;
    while (1)
    {
      if (v7)
      {
        v45 = (v7 - 1) & v7;
        v46 = v8;
        v9 = __clz(__rbit64(v7)) | (v8 << 6);
      }
      else
      {
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v10 >= v36)
          goto LABEL_22;
        v11 = v37[v10];
        v12 = v8 + 1;
        if (!v11)
        {
          v12 = v8 + 2;
          if (v8 + 2 >= v36)
            goto LABEL_22;
          v11 = v37[v12];
          if (!v11)
          {
            v13 = v8 + 3;
            if (v8 + 3 >= v36)
            {
LABEL_22:
              swift_release();
              if ((v43 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v4 + 32);
                if (v34 > 63)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v11 = v37[v13];
            if (!v11)
            {
              while (1)
              {
                v12 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_29;
                if (v12 >= v36)
                  goto LABEL_22;
                v11 = v37[v12];
                ++v13;
                if (v11)
                  goto LABEL_19;
              }
            }
            v12 = v8 + 3;
          }
        }
LABEL_19:
        v45 = (v11 - 1) & v11;
        v46 = v12;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
      }
      v14 = *(_QWORD *)(v4 + 56);
      v15 = *(_QWORD *)(v4 + 48) + 104 * v9;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(void **)(v15 + 16);
      v19 = *(void **)(v15 + 24);
      v21 = *(_QWORD *)(v15 + 32);
      v20 = *(_QWORD *)(v15 + 40);
      v23 = *(_QWORD *)(v15 + 48);
      v22 = *(_QWORD *)(v15 + 56);
      v25 = *(_QWORD *)(v15 + 64);
      v24 = *(_QWORD *)(v15 + 72);
      v26 = *(unsigned int *)(v15 + 96) | ((unint64_t)*(unsigned __int8 *)(v15 + 100) << 32);
      v28 = *(_QWORD *)(v15 + 80);
      v27 = *(_QWORD *)(v15 + 88);
      v29 = (__int128 *)(v14 + 40 * v9);
      v30 = *v29;
      v31 = *((_QWORD *)v29 + 2);
      v32 = *((_DWORD *)v29 + 6);
      v33 = *((_QWORD *)v29 + 4);
      if ((v43 & 1) == 0)
      {
        v40 = *(_QWORD *)(v15 + 64);
        v41 = *(_QWORD *)(v15 + 72);
        v39 = *(_QWORD *)(v15 + 88);
        v38 = *v29;
        sub_23A963BDC(v16, v17, v18, v19, v21, v20, v23, v22, v25, v24, v28, v27, *(_DWORD *)(v15 + 96));
        v30 = v38;
        v27 = v39;
        v25 = v40;
        v24 = v41;
      }
      v60 = v30;
      v61 = v31;
      v62 = v32;
      v63 = v33;
      *(_QWORD *)&v47 = v16;
      *((_QWORD *)&v47 + 1) = v17;
      v48 = v18;
      v49 = v19;
      v50 = v21;
      v51 = v20;
      v52 = v23;
      v53 = v22;
      v54 = v25;
      v55 = v24;
      v56 = v28;
      v57 = v27;
      v58 = v26;
      v59 = BYTE4(v26);
      sub_23A97ECE0(&v47, (uint64_t)&v60, v44);
      v4 = v42;
      v7 = v45;
      v8 = v46;
    }
  }
  swift_release();
  *v35 = v44;
}

__n128 sub_23A97ECE0(__int128 *a1, uint64_t a2, _QWORD *a3)
{
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  __n128 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;

  sub_23AA337D0();
  sub_23A963B5C(a1, (uint64_t)&v23);
  v6 = v36;
  v7 = v35;
  switch((unsigned __int16)(((unint64_t)(v35 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_23AA337DC();
LABEL_3:
      sub_23AA33800();
      v8 = sub_23AA33464();
      *(_QWORD *)((char *)a3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      sub_23A963B5C(a1, a3[6] + 104 * v8);
      v9 = a3[7] + 40 * v8;
      *(_QWORD *)(v9 + 32) = *(_QWORD *)(a2 + 32);
      result = *(__n128 *)(a2 + 16);
      *(_OWORD *)v9 = *(_OWORD *)a2;
      *(__n128 *)(v9 + 16) = result;
      ++a3[2];
      return result;
    default:
      v21 = v24;
      v22 = v23;
      v19 = v26;
      v20 = v25;
      v17 = v28;
      v18 = v27;
      v15 = v30;
      v16 = v29;
      v11 = v32;
      v14 = v31;
      v13 = v33;
      v12 = v34;
      v37 = v23;
      v38 = v24;
      v39 = v25;
      v40 = v26;
      v41 = v27;
      v42 = v28;
      v43 = v29;
      v44 = v30;
      v45 = v31;
      v46 = v32;
      v47 = v33;
      v48 = v34;
      v49 = v35;
      v50 = BYTE2(v35);
      sub_23AA337DC();
      sub_23A963C14(v22, v21, v20, v19, v18, v17, v16, v15, v14, v11, v13, v12, v7, SBYTE2(v7));
      sub_23A9CADC4();
      sub_23AA337DC();
      if (v6 == 3)
        goto LABEL_8;
      sub_23AA337E8();
      if (v6 == 2)
      {
        sub_23AA337DC();
      }
      else
      {
        sub_23AA337DC();
LABEL_8:
        sub_23AA337E8();
      }
      sub_23A963ED4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
      goto LABEL_3;
  }
}

double sub_23A97EF34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  double result;
  uint64_t v28;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23AA1D250(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v28 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23A97C7F0();
      v9 = v28;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_23AA32E1C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56) + 104 * v6;
    v13 = *(_BYTE *)(v12 + 8);
    v14 = *(_QWORD *)(v12 + 32);
    v15 = *(_BYTE *)(v12 + 40);
    v16 = *(_QWORD *)(v12 + 48);
    v17 = *(_BYTE *)(v12 + 56);
    v18 = *(_BYTE *)(v12 + 57);
    v19 = *(_QWORD *)(v12 + 64);
    v20 = *(_BYTE *)(v12 + 72);
    v21 = *(_BYTE *)(v12 + 73);
    v22 = *(_BYTE *)(v12 + 74);
    v23 = *(_QWORD *)(v12 + 80);
    v24 = *(_QWORD *)(v12 + 88);
    v25 = *(_BYTE *)(v12 + 96);
    v26 = *(_BYTE *)(v12 + 97);
    *(_QWORD *)a2 = *(_QWORD *)v12;
    *(_BYTE *)(a2 + 8) = v13;
    *(_OWORD *)(a2 + 16) = *(_OWORD *)(v12 + 16);
    *(_QWORD *)(a2 + 32) = v14;
    *(_BYTE *)(a2 + 40) = v15;
    *(_QWORD *)(a2 + 48) = v16;
    *(_BYTE *)(a2 + 56) = v17;
    *(_BYTE *)(a2 + 57) = v18;
    *(_QWORD *)(a2 + 64) = v19;
    *(_BYTE *)(a2 + 72) = v20;
    *(_BYTE *)(a2 + 73) = v21;
    *(_BYTE *)(a2 + 74) = v22;
    *(_QWORD *)(a2 + 80) = v23;
    *(_QWORD *)(a2 + 88) = v24;
    *(_BYTE *)(a2 + 96) = v25;
    *(_BYTE *)(a2 + 97) = v26;
    sub_23A97F1C8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 1;
    result = 0.0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 82) = 0u;
  }
  return result;
}

uint64_t sub_23A97F0C8(uint64_t a1)
{
  return sub_23A97F0E0(a1, &qword_2569D5D40);
}

uint64_t sub_23A97F0D4(uint64_t a1)
{
  return sub_23A97F0E0(a1, &qword_2569D5D48);
}

uint64_t sub_23A97F0E0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23AA1D250(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v4;
  v14 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23A97CB40(a2);
    v9 = v14;
  }
  v10 = *(_QWORD *)(v9 + 48);
  v11 = sub_23AA32E1C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_23A97F47C(v6, v9);
  *v4 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

char *sub_23A97F1C8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  char *v23;
  BOOL v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_23AA32E1C();
  v34 = *(_QWORD *)(v4 - 8);
  result = (char *)MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = (char *)sub_23AA33458();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v33 = (unint64_t)(result + 1) & v11;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v32(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23AA32F9C();
        result = (char *)(*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = (char *)(v22 + 104 * a1);
            v23 = (char *)(v22 + 104 * v10);
            if (104 * a1 < (uint64_t)(104 * v10) || result >= v23 + 104 || (v24 = a1 == v10, a1 = v10, !v24))
            {
              result = (char *)memmove(result, v23, 0x68uLL);
              v13 = v17;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v25 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23A97F47C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_23AA32E1C();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23AA33458();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23AA32F9C();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23A97F71C(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23AA32E1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23AA1D250(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23A981C88((uint64_t)a1, v20[7] + 104 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23A97C4D0();
      goto LABEL_7;
    }
    sub_23A97D948(v17, a3 & 1);
    v22 = sub_23AA1D250(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23A981C88((uint64_t)a1, v20[7] + 104 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_23A97FCA8(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_23AA33758();
  __break(1u);
  return result;
}

uint64_t sub_23A97F890(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23AA32E1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23AA1D250(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23A980B4C(a1, v20[7] + 104 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23A97C7F0();
      goto LABEL_7;
    }
    sub_23A97DDE0(v17, a3 & 1);
    v22 = sub_23AA1D250(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23A980B4C(a1, v20[7] + 104 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_23A97FD4C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_23AA33758();
  __break(1u);
  return result;
}

void sub_23A97FA04(uint64_t a1, uint64_t a2, char a3)
{
  sub_23A97FA1C(a1, a2, a3, &qword_2569D5D40);
}

void sub_23A97FA10(uint64_t a1, uint64_t a2, char a3)
{
  sub_23A97FA1C(a1, a2, a3, &qword_2569D5D48);
}

void sub_23A97FA1C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD **v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v6 = (_QWORD **)v4;
  v26 = a1;
  v9 = sub_23AA32E1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_23AA1D250(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v6;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];

      *(_QWORD *)(v22 + 8 * v15) = v26;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_23A97CB40(a4);
    goto LABEL_7;
  }
  sub_23A97E2C4(v18, a3 & 1, a4);
  v23 = sub_23AA1D250(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_14:
    sub_23AA33758();
    __break(1u);
    return;
  }
  v15 = v23;
  v21 = *v6;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_23A97FE08(v15, (uint64_t)v12, v26, v21);
}

uint64_t sub_23A97FB8C(uint64_t a1, __int128 *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23AA1CFF0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7] + 40 * v10;
        v18 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)v17 = *(_OWORD *)a1;
        *(_OWORD *)(v17 + 16) = v18;
        *(_QWORD *)(v17 + 32) = *(_QWORD *)(a1 + 32);
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_23A97CFA8();
      goto LABEL_7;
    }
    sub_23A97EA04(result, a3 & 1);
    result = sub_23AA1CFF0(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23A97FEA0(v10, a2, a1, v16);
      return sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
    }
  }
  result = sub_23AA33758();
  __break(1u);
  return result;
}

uint64_t sub_23A97FCA8(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23AA32E1C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_23A963B5C(a3, a4[7] + 104 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23A97FD4C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23AA32E1C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7] + 104 * a1;
  v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 96) = *(_WORD *)(a3 + 96);
  v13 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v11 + 80) = v13;
  v14 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v14;
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_23A97FE08(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23AA32E1C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23A97FEA0(unint64_t a1, __int128 *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  result = sub_23A963B5C(a2, a4[6] + 104 * a1);
  v8 = a4[7] + 40 * a1;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(a3 + 32);
  v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a3;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_23A97FF30(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23A97FFE0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v7 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32E1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v63 = (char *)&v51 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v51 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v16)
  {
    v51 = v3;
    v65 = MEMORY[0x24BEE4AF8];
    v60 = a1;
    sub_23AA3356C();
    v18 = v60;
    result = sub_23A97FF30(v60);
    v20 = result;
    v21 = 0;
    v22 = v18 + 64;
    v57 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_productUUIDsByFindableUUID);
    v23 = *(_BYTE *)(v18 + 32);
    v52 = v18 + 80;
    v53 = v16;
    v56 = a3;
    v24 = v63;
    v54 = v19;
    v55 = v18 + 64;
    while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << v23)
    {
      v26 = (unint64_t)v20 >> 6;
      if ((*(_QWORD *)(v22 + 8 * ((unint64_t)v20 >> 6)) & (1 << v20)) == 0)
        goto LABEL_29;
      if (*(_DWORD *)(v18 + 36) != (_DWORD)v19)
        goto LABEL_30;
      v61 = v21;
      v62 = 1 << v20;
      v27 = *(_QWORD *)(v10 + 72);
      v28 = *(_QWORD *)(v18 + 48) + v27 * v20;
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      v30 = v9;
      v31 = v10;
      v32 = v59;
      v29(v59, v28, v30);
      v33 = v31;
      v34 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v9 = v30;
      v34(v24, v32, v30);
      v29(v64, (uint64_t)v24, v30);
      v35 = (uint64_t)v24;
      v36 = v57;
      if (*(_QWORD *)(v57 + 16) && (v37 = sub_23AA1D250(v35), (v38 & 1) != 0))
      {
        v39 = *(_QWORD *)(v36 + 56) + v37 * v27;
        v40 = v58;
        v29(v58, v39, v30);
        v41 = v40;
        v42 = 0;
      }
      else
      {
        v42 = 1;
        v41 = v58;
      }
      v10 = v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v41, v42, 1, v30);
      v43 = (void *)sub_23AA32DEC();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v41, 1, v30) == 1)
      {
        v44 = 0;
      }
      else
      {
        v44 = (void *)sub_23AA32DEC();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v30);
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7BA50]), sel_initWithUUID_productUUID_isOwned_, v43, v44, v56 != 1);

      v45 = *(void (**)(char *, uint64_t))(v33 + 8);
      v45(v64, v30);
      v45(v63, v30);
      sub_23AA33554();
      sub_23AA33578();
      sub_23AA33584();
      result = sub_23AA33560();
      v18 = v60;
      v23 = *(_BYTE *)(v60 + 32);
      v25 = 1 << v23;
      if (v20 >= 1 << v23)
        goto LABEL_31;
      v22 = v55;
      v46 = *(_QWORD *)(v55 + 8 * v26);
      if ((v46 & v62) == 0)
        goto LABEL_32;
      LODWORD(v19) = v54;
      if (*(_DWORD *)(v60 + 36) != (_DWORD)v54)
        goto LABEL_33;
      v47 = v46 & (-2 << (v20 & 0x3F));
      if (v47)
      {
        v25 = __clz(__rbit64(v47)) | v20 & 0xFFFFFFFFFFFFFFC0;
        v24 = v63;
      }
      else
      {
        v48 = v26 + 1;
        v49 = (v25 + 63) >> 6;
        v24 = v63;
        if (v26 + 1 < v49)
        {
          v50 = *(_QWORD *)(v55 + 8 * v48);
          if (v50)
          {
LABEL_25:
            v25 = __clz(__rbit64(v50)) + (v48 << 6);
          }
          else
          {
            while (v49 - 2 != v26)
            {
              v50 = *(_QWORD *)(v52 + 8 * v26++);
              if (v50)
              {
                v48 = v26 + 1;
                goto LABEL_25;
              }
            }
          }
        }
      }
      v21 = v61 + 1;
      v20 = v25;
      if (v61 + 1 == v53)
        return v65;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FMFindingLocalizerError()
{
  uint64_t result;

  result = qword_2569D5E18;
  if (!qword_2569D5E18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A980438(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFindingLocalizerError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23A980474(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = sub_23AA32E88();
  v10 = sub_23AA33218();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v17 = a2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136315138;
    sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v14 = sub_23AA33710();
    v18 = sub_23A964DBC(v14, v15, &v19);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_23A95E000, v9, v10, v17, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v13, -1, -1);
    MEMORY[0x23B85DB24](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

}

void sub_23A980688(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_23AA32E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v6 = sub_23AA32EA0();
  sub_23A9620E8(v6, (uint64_t)qword_2569E0040);
  v17 = a1;
  v7 = sub_23AA32E88();
  v8 = sub_23AA33218();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = objc_msgSend(v17, sel_uuid);
    sub_23AA32E04();

    sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v12 = sub_23AA33710();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v18 = sub_23A964DBC(v12, v14, &v19);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    v15 = objc_msgSend(v17, sel_rssi);

    LODWORD(v18) = v15;
    sub_23AA333F8();

    _os_log_impl(&dword_23A95E000, v7, v8, "ðŸ§­ FMFindingLocalizer: Will integrate BT RSSI measurement for %s: %d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v10, -1, -1);
    MEMORY[0x23B85DB24](v9, -1, -1);

  }
  else
  {

  }
}

void sub_23A980944(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _OWORD v22[6];
  int v23;
  char v24;

  v3 = sub_23AA32E1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&ObjectType - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)MEMORY[0x23B85DBF0](v1+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v7)
  {
    v17 = v7;
    v8 = v1
       + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x23B85DBF0](v8))
    {
      v9 = *(_QWORD *)(v8 + 8);
      ObjectType = swift_getObjectType();
      v21[3] = type metadata accessor for FMFindingLocalizer();
      v21[4] = &off_250BC0A78;
      v21[0] = v17;
      memset(v22, 0, sizeof(v22));
      v24 = 0;
      v23 = 117440512;
      v10 = a1[3];
      v11 = a1[4];
      sub_23A96545C(a1, v10);
      v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 8);
      v13 = v17;
      v12(v18, v10, v11);
      v14 = v19;
      v15 = v20;
      sub_23A96545C(v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      (*(void (**)(_QWORD *, _OWORD *, char *, uint64_t, uint64_t))(v9 + 8))(v21, v22, v6, ObjectType, v9);

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_23A963B3C((uint64_t)v18);
      sub_23A963B3C((uint64_t)v21);
    }
    else
    {

    }
  }
}

void *sub_23A980B18(void *result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A980B4C(uint64_t a1, uint64_t a2)
{
  assignWithTake for FMFindingDistance(a2, a1);
  return a2;
}

uint64_t sub_23A980B88()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A980BB0()
{
  uint64_t v0;

  sub_23A9791B8(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_23A980BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A980BCC()
{
  return swift_release();
}

uint64_t sub_23A980BD4(uint64_t result, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 & 0xFF000000) != 0x8000000)
    return sub_23A963BDC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return result;
}

void sub_23A980C04(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 & 0xFF000000) != 0x8000000)
    sub_23A963F38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_23A980C34(uint64_t a1)
{
  int v3;

  v3 = *(unsigned __int16 *)(a1 + 96) | (*(unsigned __int8 *)(a1 + 98) << 16);
  sub_23A980C94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v3, BYTE2(v3));
  return a1;
}

void sub_23A980C94(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, unsigned __int8 a14)
{
  if (a14 != 255)
    sub_23A963AE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_23A980CC8(uint64_t a1, unint64_t a2, int a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  float v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void (*v40)();
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void (*v82)();
  int v83;
  unint64_t v84;
  unsigned int v85;
  uint64_t v86;
  __int128 *v87;
  __int128 *v88;
  __int128 *v89;
  double v90;
  char v91;
  id v92;
  id v93;
  int v94;
  int v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)();
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void (*v113)();
  void (*v114)(void *, void (*)());
  uint64_t v115;
  void (*v116)();
  _QWORD *v117;
  id v118;
  char isUniquelyReferenced_nonNull_native;
  void *v120;
  __int16 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  id v128;
  id v129;
  uint64_t v130;
  void (*v131)();
  void (*v132)();
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int16 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  void (*v142)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _QWORD v146[4];
  int v147;
  uint64_t ObjectType;
  int v149;
  uint64_t v150;
  id v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)();
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  id v159;
  uint64_t v160;
  double v161;
  _QWORD *v162;
  char *v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD v182[3];
  uint64_t v183;
  uint64_t v184;
  _QWORD v185[9];
  _BYTE v186[104];
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(uint64_t);
  void *v190;
  void (*v191)();
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  __int16 v199;
  char v200;
  uint64_t v201;
  char v202;
  void *v203;
  void *v204;
  void (*v205)();
  char v206;
  uint64_t v207;
  char v208;
  char v209;
  uint64_t v210;
  char v211;
  char v212;
  char v213;
  uint64_t v214;
  unint64_t v215;
  char v216;
  char v217;
  _QWORD v218[12];
  __int16 v219;
  __int128 v220;
  uint64_t v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  _BYTE v225[26];

  v178 = a1;
  v179 = sub_23AA32E1C();
  v8 = *(_QWORD **)(v179 - 8);
  v9 = MEMORY[0x24BDAC7A8](v179);
  v163 = (char *)v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v146 - v11;
  v175 = sub_23AA32F30();
  v173 = *(_QWORD *)(v175 - 8);
  v13 = MEMORY[0x24BDAC7A8](v175);
  v15 = (char *)v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v174 = (char *)v146 - v16;
  v17 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v17);
  v180 = v4;
  v18 = v4
      + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner;
  v19 = MEMORY[0x23B85DBF0](v18);
  if (v19)
  {
    v164 = a2;
    v176 = (char *)v19;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v162 = v8;
    LODWORD(v165) = a3;
    v146[3] = v18;
    v20 = sub_23AA32EA0();
    sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
    v21 = sub_23AA32E88();
    v22 = sub_23AA33200();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_23A95E000, v21, v22, "ðŸ§­ FMFindingLocalizer: Did update esitmates", v23, 2u);
      MEMORY[0x23B85DB24](v23, -1, -1);
    }
    v177 = v12;

    v24 = OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem;
    if (*(_QWORD *)(v180
                   + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem))
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    v25 = swift_allocObject();
    v26 = v180;
    swift_unknownObjectWeakInit();
    sub_23A963A14((uint64_t)a4, (uint64_t)&v220);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v25;
    sub_23A963B98(&v220, v27 + 24);
    v191 = sub_23A981C18;
    v192 = v27;
    v187 = MEMORY[0x24BDAC760];
    v188 = 1107296256;
    v189 = sub_23A9C4DBC;
    v190 = &unk_250BC0B70;
    _Block_copy(&v187);
    v218[0] = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v181 = a4;
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    v28 = v181;
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v29 = sub_23AA32F3C();
    swift_release();
    swift_release();
    *(_QWORD *)(v26 + v24) = v29;
    swift_retain();
    swift_release();
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v30 = (void *)sub_23AA33290();
    sub_23AA32F24();
    v31 = v174;
    MEMORY[0x23B85CB04](v15, 3.0);
    v32 = *(void (**)(char *, uint64_t))(v173 + 8);
    v33 = v175;
    v32(v15, v175);
    v154 = v29;
    sub_23AA3326C();

    v32(v31, v33);
    v34 = *(float *)&v178;
    if (*(float *)&v178 < 0.0)
      v34 = 0.0;
    v35 = v34;
    if ((v178 & 0x100000000) != 0)
      v36 = 0;
    else
      v36 = *(_QWORD *)&v35;
    v37 = v28[3];
    v38 = v28[4];
    sub_23A96545C(v28, v37);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 8))(&v187, v37, v38);
    v39 = v190;
    v40 = v191;
    sub_23A96545C(&v187, (uint64_t)v190);
    v41 = (uint64_t)v177;
    (*((void (**)(void *, void (*)()))v40 + 2))(v39, v40);
    v42 = &v176[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    v43 = *(_QWORD *)v42;
    v44 = *(_QWORD *)(*(_QWORD *)v42 + 16);
    v161 = *(double *)&v36;
    if (v44)
    {
      swift_bridgeObjectRetain();
      v45 = sub_23AA1D250(v41);
      if ((v46 & 1) != 0)
      {
        v47 = *(_QWORD *)(v43 + 56) + 104 * v45;
        v171 = *(_QWORD *)v47;
        v48 = *(unsigned __int8 *)(v47 + 8);
        v50 = *(void **)(v47 + 16);
        v49 = *(void **)(v47 + 24);
        v51 = *(char **)(v47 + 32);
        v173 = *(unsigned __int8 *)(v47 + 40);
        v174 = v51;
        v52 = *(_QWORD *)(v47 + 48);
        v53 = *(unsigned __int8 *)(v47 + 56);
        LODWORD(v51) = *(unsigned __int8 *)(v47 + 57);
        v169 = *(_QWORD *)(v47 + 64);
        v54 = *(unsigned __int8 *)(v47 + 72);
        v55 = *(unsigned __int8 *)(v47 + 73);
        v56 = *(unsigned __int8 *)(v47 + 74);
        v57 = *(_QWORD *)(v47 + 80);
        v167 = *(_QWORD *)(v47 + 88);
        v168 = v57;
        v58 = *(unsigned __int8 *)(v47 + 96);
        v59 = *(unsigned __int8 *)(v47 + 97);
        if ((_DWORD)v51)
          v60 = 256;
        else
          v60 = 0;
        v170 = v60 | v53;
        if (v55)
          v61 = 256;
        else
          v61 = 0;
        v62 = v61 | v54;
        v63 = 0x10000;
        if (!v56)
          v63 = 0;
        v166 = v62 | v63;
        if (v59)
          v64 = 256;
        else
          v64 = 0;
        LODWORD(v175) = v64 | v58;
        v172 = v49;
        v65 = v49;
        v66 = (uint64_t)v50;
        v67 = v50;
      }
      else
      {
        v171 = 0;
        v172 = 0;
        v48 = 0;
        v173 = 0;
        v174 = 0;
        v52 = 0;
        v169 = 0;
        v170 = 0;
        v166 = 0;
        v167 = 0;
        v168 = 0;
        LODWORD(v175) = 0;
        v66 = 1;
      }
      swift_bridgeObjectRelease();
      v44 = v170;
      v68 = v171;
      v74 = v168;
      v72 = v169;
      v73 = v166;
      v75 = v167;
      v71 = v173;
      v70 = v174;
      v69 = v172;
      v76 = v175;
    }
    else
    {
      v68 = 0;
      v48 = 0;
      v69 = 0;
      v70 = 0;
      v71 = 0;
      v52 = 0;
      v72 = 0;
      v73 = 0;
      v74 = 0;
      v75 = 0;
      v76 = 0;
      v66 = 1;
    }
    v170 = v44;
    v171 = v68;
    v218[0] = v68;
    v156 = v48;
    v218[1] = v48;
    v218[2] = v66;
    v218[3] = v69;
    v218[4] = v70;
    v218[5] = v71;
    v153 = v52;
    v218[6] = v52;
    v218[7] = v44;
    v168 = v74;
    v169 = v72;
    v218[8] = v72;
    v166 = v73;
    v167 = v75;
    v218[9] = v73;
    v218[10] = v74;
    v218[11] = v75;
    v219 = v76;
    v77 = (void *)v66;
    v158 = (void (*)(char *, uint64_t))v162[1];
    v78 = v70;
    v158(v177, v179);
    sub_23A963B3C((uint64_t)&v187);
    v79 = v181[3];
    v80 = v181[4];
    sub_23A96545C(v181, v79);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v80 + 8))(&v187, v79, v80);
    v81 = v190;
    v82 = v191;
    sub_23A96545C(&v187, (uint64_t)v190);
    (*((void (**)(__int128 *__return_ptr, void *, void (*)()))v82 + 3))(&v220, v81, v82);
    v83 = v222;
    sub_23A980B18((void *)v220, *((uint64_t *)&v220 + 1), v221, v222);
    sub_23A963B3C((uint64_t)&v187);
    v173 = v71;
    v174 = v78;
    v172 = v69;
    v152 = v77;
    LODWORD(v175) = v76;
    if ((v178 & 0x100000000) != 0)
    {
      LOBYTE(v85) = v83 == 1;
      v220 = 0uLL;
      v221 = 1;
      v222 = 0u;
      v223 = 0u;
      v224 = 0u;
      memset(v225, 0, sizeof(v225));
      v86 = v164 | ((HIDWORD(v164) & 1) << 32);
      v87 = (__int128 *)v186;
      v88 = (__int128 *)v186;
      v89 = &v220;
      v90 = v161;
      v91 = 1;
    }
    else
    {
      v84 = v164;
      if (v77 == (void *)1)
      {
        LOBYTE(v85) = v83 == 1;
        v86 = v164 | ((HIDWORD(v164) & 1) << 32);
      }
      else
      {
        v92 = v69;
        v93 = v77;
        v86 = v84 | ((HIDWORD(v84) & 1) << 32);
        v85 = v76 >> 8;
      }
      v87 = &v220;
      v88 = &v220;
      v89 = (__int128 *)v218;
      v90 = v161;
      v91 = 0;
    }
    sub_23A96B328(v90, v91, v86, v165, (uint64_t)v89, v85, (uint64_t)v88);
    v94 = *((unsigned __int8 *)v87 + 97);
    v95 = *((unsigned __int8 *)v87 + 96);
    v96 = *((_QWORD *)v87 + 10);
    v97 = *((_QWORD *)v87 + 11);
    v98 = *((unsigned __int8 *)v87 + 74);
    v99 = *((unsigned __int8 *)v87 + 73);
    v100 = *((unsigned __int8 *)v87 + 72);
    v101 = *((_QWORD *)v87 + 8);
    v102 = *((unsigned __int8 *)v87 + 57);
    v103 = *((unsigned __int8 *)v87 + 56);
    v104 = *((_QWORD *)v87 + 6);
    v105 = *((unsigned __int8 *)v87 + 40);
    v107 = (void *)*((_QWORD *)v87 + 3);
    v106 = (void (*)())*((_QWORD *)v87 + 4);
    v108 = (void *)*((_QWORD *)v87 + 2);
    v109 = *((unsigned __int8 *)v87 + 8);
    v177 = *(char **)v87;
    v178 = v109;
    v201 = (uint64_t)v177;
    v202 = v109;
    v203 = v108;
    v204 = v107;
    v155 = v106;
    v205 = v106;
    v160 = v105;
    v161 = *(double *)&v104;
    v206 = v105;
    v207 = v104;
    v208 = v103;
    v209 = v102;
    v150 = v101;
    v210 = v101;
    ObjectType = v100;
    v211 = v100;
    v147 = v99;
    v212 = v99;
    LODWORD(v157) = v98;
    v213 = v98;
    v164 = v97;
    v165 = v96;
    v214 = v96;
    v215 = v97;
    v149 = v95;
    v216 = v95;
    LODWORD(v151) = v94;
    v217 = v94;
    v110 = v181[3];
    v111 = v181[4];
    sub_23A96545C(v181, v110);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v111 + 8))(&v187, v110, v111);
    v112 = v190;
    v113 = v191;
    sub_23A96545C(&v187, (uint64_t)v190);
    v114 = (void (*)(void *, void (*)()))*((_QWORD *)v113 + 2);
    v115 = (uint64_t)v163;
    v116 = v113;
    v117 = v107;
    v114(v112, v116);
    swift_beginAccess();
    v159 = v107;
    v118 = v108;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v182[0] = *(_QWORD *)v42;
    *(_QWORD *)v42 = 0x8000000000000000;
    sub_23A97F890((uint64_t)&v201, v115, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v42 = v182[0];
    swift_bridgeObjectRelease();
    v158((char *)v115, v179);
    swift_endAccess();
    sub_23A963B3C((uint64_t)&v187);
    v120 = v176;
    v121 = *(_WORD *)&v176[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
    v162 = v117;
    if ((v121 & 0x8100) == 0x100)
      __asm { BR              X9 }
    if (v102)
      v122 = 256;
    else
      v122 = 0;
    v123 = v122 | v103;
    if (v147)
      v124 = 256;
    else
      v124 = 0;
    v125 = v124 | ObjectType;
    v126 = 0x10000;
    if (!(_DWORD)v157)
      v126 = 0;
    v157 = v125 | v126;
    if ((_DWORD)v151)
      v127 = 256;
    else
      v127 = 0;
    v149 |= v127;
    v151 = v118;
    v128 = v118;
    v129 = v159;
    v130 = v160;
    v131 = (void (*)())v108;
    v132 = v155;
    v133 = v150;
    v187 = (uint64_t)v177;
    v188 = v178;
    v155 = v131;
    v189 = (uint64_t (*)(uint64_t))v131;
    v190 = v162;
    v191 = v132;
    v192 = v160;
    v134 = *(_QWORD *)&v161;
    v193 = *(_QWORD *)&v161;
    v150 = v123;
    v194 = v123;
    v135 = v133;
    v195 = v133;
    v196 = v157;
    v197 = v165;
    v198 = v164;
    v136 = v149;
    v199 = v149;
    v137 = v180
         + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    LODWORD(v180) = 4;
    v200 = 4;
    if (MEMORY[0x23B85DBF0](v137))
    {
      v160 = v130;
      v138 = *(_QWORD *)(v137 + 8);
      ObjectType = swift_getObjectType();
      v185[3] = type metadata accessor for FMFindingLocalizer();
      v185[4] = &off_250BC0A78;
      v185[0] = v120;
      v161 = *(double *)&v134;
      v139 = v181[3];
      v140 = v181[4];
      sub_23A96545C(v181, v139);
      v141 = v120;
      v142 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v140 + 8);
      v181 = v141;
      v142(v182, v139, v140);
      v143 = v183;
      v144 = v184;
      sub_23A96545C(v182, v183);
      v145 = v163;
      (*(void (**)(uint64_t, uint64_t))(v144 + 16))(v143, v144);
      (*(void (**)(_QWORD *, uint64_t *, uint64_t, char *, uint64_t, uint64_t))(v138 + 16))(v185, &v187, 3, v145, ObjectType, v138);
      swift_unknownObjectRelease();
      sub_23A963AE0((uint64_t)v177, v178, v155, v162, (uint64_t)v132, v160, *(uint64_t *)&v161, v150, v135, v157, v165, v164, v136, v180);
      sub_23A963B0C(v171, v156, v152, v172);

      swift_release();
      v158(v145, v179);
      sub_23A963B3C((uint64_t)v182);
      sub_23A963B3C((uint64_t)v185);
    }
    else
    {
      swift_release();

      sub_23A963B0C(v171, v156, v152, v172);
      sub_23A963AE0((uint64_t)v177, v178, v155, v162, (uint64_t)v132, v130, v134, v150, v133, v157, v165, v164, v136, v180);

    }
  }
}

uint64_t sub_23A981BEC()
{
  uint64_t v0;

  swift_release();
  sub_23A963B3C(v0 + 24);
  return swift_deallocObject();
}

void sub_23A981C18()
{
  uint64_t v0;

  sub_23A97A714(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_23A981C24(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  int v4;

  BYTE2(v4) = *(_BYTE *)(a1 + 98);
  LOWORD(v4) = *(_WORD *)(a1 + 96);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v4);
  return a1;
}

uint64_t sub_23A981C88(uint64_t a1, uint64_t a2)
{
  assignWithTake for FMFindingState(a2, a1);
  return a2;
}

uint64_t sub_23A981CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingLocalizerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A981D08()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A981D34()
{
  uint64_t v0;

  return sub_23A98BCCC(*(NSObject **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23A981D3C()
{
  return swift_deallocObject();
}

uint64_t sub_23A981D4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23A999C48(*(_QWORD **)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(NSObject **)(v1 + 40), *(_BYTE *)(v1 + 48), a1);
}

uint64_t sub_23A981D6C@<X0>(_QWORD *a1@<X8>)
{
  return sub_23A981D80(a1);
}

uint64_t sub_23A981D80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23A98A794(*(_QWORD **)(v1 + 16), *(NSObject **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void (**)(uint64_t, uint64_t))(v1 + 48), *(_WORD *)(v1 + 56), a1);
}

char *sub_23A981DA4(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v7 = *a2;
        v8 = v7;
        *(_QWORD *)a1 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        v11 = sub_23AA32E1C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v12 = sub_23AA32E1C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = *(int *)(sub_23A964084(&qword_2569D5CE0) + 48);
        v14 = *(char **)((char *)a2 + v13);
        v15 = v14;
        *(_QWORD *)&a1[v13] = v14;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_23A981F44(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:

      break;
    case 1u:
    case 2u:
      v2 = sub_23AA32E1C();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 3u:
      v3 = sub_23AA32E1C();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = *(id *)((char *)a1 + *(int *)(sub_23A964084(&qword_2569D5CE0) + 48));

      break;
    default:
      return;
  }
}

_QWORD *sub_23A981FF0(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v11 = *a2;
      v12 = v11;
      *a1 = v11;
      goto LABEL_6;
    case 1u:
    case 2u:
      v6 = sub_23AA32E1C();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_6;
    case 3u:
      v7 = sub_23AA32E1C();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_23A964084(&qword_2569D5CE0) + 48);
      v9 = *(void **)((char *)a2 + v8);
      v10 = v9;
      *(_QWORD *)((char *)a1 + v8) = v9;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_23A982158(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  if (a1 != a2)
  {
    sub_23A980438((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v11 = *a2;
        v12 = v11;
        *a1 = v11;
        goto LABEL_7;
      case 1u:
      case 2u:
        v6 = sub_23AA32E1C();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 3u:
        v7 = sub_23AA32E1C();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = *(int *)(sub_23A964084(&qword_2569D5CE0) + 48);
        v9 = *(void **)((char *)a2 + v8);
        v10 = v9;
        *(void **)((char *)a1 + v8) = v9;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_23A9822D0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v8 = sub_23AA32E1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = sub_23A964084(&qword_2569D5CE0);
    *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v7 = sub_23AA32E1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_23A9823EC(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23A980438((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v8 = sub_23AA32E1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = sub_23A964084(&qword_2569D5CE0);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v7 = sub_23AA32E1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23A982518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_23A982524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23A982534()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A982544()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;

  v3 = "\b";
  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v5 = v4;
    swift_getTupleTypeLayout2();
    v6 = &v2;
    v7 = &unk_23AA36E30;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23A9825E8(double *a1@<X8>, double a2@<D0>)
{
  double *v2;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  __double2 v26;
  double v27;
  double v28;
  double v29;
  long double v30;
  long double v31;
  long double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;

  v5 = *v2;
  v6 = v2[1];
  v8 = v2[5];
  v7 = v2[6];
  if (vabdd_f64(*v2, v8) <= v7)
  {
    v12 = v2[7];
    v11 = v2[8];
    v10 = v2[3];
    v9 = v2[4];
    if (fabs(v6) <= v12)
    {
      v18 = v2[12];
      v17 = v2[13];
      v14 = v2[10];
      v15 = v2[11];
      v19 = v2[9];
      v20 = v2[2];
      goto LABEL_16;
    }
  }
  else
  {
    v10 = v2[3];
    v9 = v2[4];
    v11 = v2[8];
  }
  v13 = v5 - v8;
  v37 = v10;
  v38 = v9;
  if (v10 == v11 && v9 == v2[9])
  {
    v14 = v2[10];
    v15 = v2[11];
    v35 = v2[12];
    v16 = v2[13];
  }
  else
  {
    v14 = v9 * 0.5;
    v15 = sqrt(v10);
    v35 = sqrt(v15 * v15 - v14 * v14);
    v16 = sqrt(v14 * v14 - v15 * v15);
  }
  v36 = v16;
  v21 = -v14;
  v22 = exp(-(v14 * a2));
  v23 = v6 + v13 * v14;
  if (v14 >= v15)
  {
    if (v15 >= v14)
    {
      v27 = v13 + v23 * a2;
      v29 = v22 * v23;
      v28 = v22 * v21 * v27;
      v10 = v37;
      v9 = v38;
      v17 = v36;
    }
    else
    {
      v30 = v36 * a2;
      v34 = v23 / v36;
      v33 = cosh(v30);
      v31 = v30;
      v17 = v36;
      v32 = sinh(v31);
      v27 = v13 * v33 + v34 * v32;
      v28 = v22 * (v17 * (v34 * v33) + v17 * (v13 * v32));
      v29 = v22 * v21 * v27;
      v10 = v37;
      v9 = v38;
    }
    v18 = v35;
  }
  else
  {
    v24 = v35 * a2;
    v25 = v23 / v35;
    v26 = __sincos_stret(v24);
    v27 = v13 * v26.__cosval + v25 * v26.__sinval;
    v18 = v35;
    v28 = v22 * (v18 * (v25 * v26.__cosval) - v18 * (v13 * v26.__sinval));
    v29 = v22 * v21 * v27;
    v10 = v37;
    v9 = v38;
    v17 = v36;
  }
  v6 = v29 + v28;
  v5 = v8 + v22 * v27;
  v7 = 0.0;
  v20 = 1.0;
  v12 = 0.0;
  v11 = v10;
  v19 = v9;
LABEL_16:
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v20;
  a1[3] = v10;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v7;
  a1[7] = v12;
  a1[8] = v11;
  a1[9] = v19;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v18;
  a1[13] = v17;
}

BOOL sub_23A982804()
{
  double *v0;
  double v1;
  double v3;
  double v5;

  v1 = v0[30];
  if (vabdd_f64(*v0, v1) > v0[44])
    return 0;
  if (fabs(v0[1]) > v0[45])
    return 0;
  v3 = fabs(v0[31]);
  if (vabdd_f64(v1, v0[35]) > v0[36] || v3 > v0[37])
    return 0;
  v5 = fabs(v0[3]);
  if (vabdd_f64(v0[2], v0[7]) > v0[8] || v5 > v0[9])
    return 0;
  if (vabdd_f64(v0[16], v0[21]) <= v0[22])
    return fabs(v0[17]) <= v0[23];
  return 0;
}

uint64_t sub_23A9828C4(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t result;

  v5 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v6 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v7 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v8 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  if (v5 != a1 || v6 != a2 || v7 != a3 || v8 != a4)
  {
    v12 = v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
    swift_beginAccess();
    if (v6 == 0.0)
    {
      *(double *)(v12 + 16) = v5;
      *(_QWORD *)(v12 + 24) = 0;
    }
    else
    {
      v13 = 6.28318531 / v6 * (6.28318531 / v6);
      v14 = sqrt(v13);
      *(double *)(v12 + 40) = v13;
      *(double *)(v12 + 48) = v14 + v14;
    }
    *(double *)(v12 + 56) = v5;
    if (v8 == 0.0)
    {
      *(double *)(v12 + 128) = v7;
      *(_QWORD *)(v12 + 136) = 0;
    }
    else
    {
      v15 = 6.28318531 / v8 * (6.28318531 / v8);
      v16 = sqrt(v15);
      *(double *)(v12 + 152) = v15;
      *(double *)(v12 + 160) = v16 + v16;
    }
    *(double *)(v12 + 168) = v7;
    return swift_endAccess();
  }
  return result;
}

double sub_23A9829AC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t v6;
  double result;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v5 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  *(double *)v5 = a1;
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = xmmword_23AA36E50;
  *(_OWORD *)(v5 + 40) = xmmword_23AA36E60;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = vdupq_n_s64(0x4341C37937E08000uLL);
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = 0;
  *(int64x2_t *)(v5 + 80) = v6;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_QWORD *)(v5 + 128) = v4;
  *(_OWORD *)(v5 + 136) = xmmword_23AA36E50;
  *(_OWORD *)(v5 + 152) = xmmword_23AA36E60;
  *(_QWORD *)(v5 + 168) = v4;
  *(_QWORD *)(v5 + 176) = 0;
  *(_QWORD *)(v5 + 184) = 0;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(int64x2_t *)(v5 + 192) = v6;
  *(double *)(v5 + 240) = a1;
  *(_OWORD *)(v5 + 248) = xmmword_23AA36E50;
  *(_QWORD *)(v5 + 264) = 0x4063BD3CC9BE45DELL;
  *(_QWORD *)(v5 + 272) = 0x403921FB54442D18;
  *(double *)(v5 + 280) = a1;
  *(_QWORD *)(v5 + 288) = 0;
  *(_QWORD *)(v5 + 296) = 0;
  *(_OWORD *)(v5 + 320) = 0u;
  *(_OWORD *)(v5 + 336) = 0u;
  *(int64x2_t *)(v5 + 304) = v6;
  result = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
  *(double *)(v5 + 352) = result;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
  *(_QWORD *)(v5 + 360) = v8;
  v9 = 6.28318531
     / *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
     * (6.28318531
      / *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
  v10 = sqrt(v9);
  v11 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v10 + v10);
  v12 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  *(_QWORD *)v12 = 0;
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = 0x3FF0000000000000;
  *(double *)(v12 + 24) = v9;
  *(double *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = 0;
  *(int64x2_t *)(v12 + 64) = v6;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(double *)(v12 + 48) = result;
  *(_QWORD *)(v12 + 56) = v8;
  *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
  return result;
}

__n128 sub_23A982B4C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __n128 result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  double v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[6];
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[6];
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[6];
  uint64_t v55;
  uint64_t v56;
  double v57[14];
  _OWORD v58[7];
  double v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64x2_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  double v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  v4 = *(double *)(v3 + 280);
  v5 = v4 - *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget);
  *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = v4;
  *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = v5 / a1 * 0.25
                                                                           + *(double *)(v1
                                                                                       + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity)
                                                                           * 0.75;
  v28 = *(double *)(v3 + 16);
  v6 = *(double *)(v3 + 128);
  v8 = *(double *)v3;
  v7 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 272);
  v10 = *(_OWORD *)(v3 + 256);
  v70 = *(_OWORD *)(v3 + 240);
  v29 = v70;
  v71 = v10;
  v72 = v9;
  v73 = v4;
  v11 = *(_OWORD *)(v3 + 304);
  v74 = *(_OWORD *)(v3 + 288);
  v75 = v11;
  v12 = *(_OWORD *)(v3 + 336);
  v76 = *(_OWORD *)(v3 + 320);
  v77 = v12;
  v13 = *(_QWORD *)(v3 + 352);
  v14 = *(_QWORD *)(v3 + 360);
  sub_23A9825E8((double *)v48, a1);
  v46 = v48[1];
  v47 = v48[0];
  v44 = v48[3];
  v45 = v48[2];
  v42 = v48[5];
  v43 = v48[4];
  v40 = v50;
  v41 = v49;
  sub_23A9825E8((double *)v51, a1);
  v37 = v51[1];
  v38 = v51[0];
  v35 = v51[3];
  v36 = v51[2];
  v33 = v51[5];
  v34 = v51[4];
  v31 = v53;
  v32 = v52;
  sub_23A9825E8((double *)v54, a1);
  v26 = v54[1];
  v27 = v54[0];
  v24 = v54[3];
  v25 = v54[2];
  v39 = v54[4];
  v30 = v54[5];
  v15 = v55;
  v16 = v56;
  v17 = sqrt(6.28318531 / v6 * (6.28318531 / v6));
  v59 = v8;
  v60 = v7;
  v61 = 0x3FF0000000000000;
  v62 = 6.28318531 / v6 * (6.28318531 / v6);
  v63 = v28 * (v17 + v17);
  v64 = v29;
  v65 = v13;
  v66 = v14;
  v67 = vdupq_n_s64(0x4341C37937E08000uLL);
  v68 = 0u;
  v69 = 0u;
  sub_23A9825E8(v57, a1);
  v18 = v57[0];
  v19 = v57[1];
  swift_beginAccess();
  *(double *)v3 = v18;
  *(double *)(v3 + 8) = v19;
  *(_OWORD *)(v3 + 16) = v47;
  *(_OWORD *)(v3 + 32) = v46;
  *(_OWORD *)(v3 + 48) = v45;
  *(_OWORD *)(v3 + 64) = v44;
  *(_OWORD *)(v3 + 80) = v43;
  *(_OWORD *)(v3 + 96) = v42;
  *(_QWORD *)(v3 + 112) = v41;
  *(_QWORD *)(v3 + 120) = v40;
  *(_OWORD *)(v3 + 128) = v38;
  *(_OWORD *)(v3 + 144) = v37;
  *(_OWORD *)(v3 + 160) = v36;
  *(_OWORD *)(v3 + 176) = v35;
  *(_OWORD *)(v3 + 192) = v34;
  *(_OWORD *)(v3 + 208) = v33;
  *(_QWORD *)(v3 + 224) = v32;
  *(_QWORD *)(v3 + 232) = v31;
  *(_OWORD *)(v3 + 240) = v27;
  *(_OWORD *)(v3 + 256) = v26;
  *(_OWORD *)(v3 + 272) = v25;
  *(_OWORD *)(v3 + 288) = v24;
  *(_QWORD *)(v3 + 336) = v15;
  *(_QWORD *)(v3 + 344) = v16;
  *(_QWORD *)(v3 + 352) = v13;
  *(_QWORD *)(v3 + 360) = v14;
  v20 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  *(_OWORD *)(v3 + 304) = v39;
  *(_OWORD *)(v3 + 320) = v30;
  sub_23A9825E8((double *)v58, a1);
  v21 = v58[5];
  *(_OWORD *)(v20 + 64) = v58[4];
  *(_OWORD *)(v20 + 80) = v21;
  *(_OWORD *)(v20 + 96) = v58[6];
  v22 = v58[1];
  *(_OWORD *)v20 = v58[0];
  *(_OWORD *)(v20 + 16) = v22;
  result = (__n128)v58[3];
  *(_OWORD *)(v20 + 32) = v58[2];
  *(__n128 *)(v20 + 48) = result;
  return result;
}

id sub_23A982E98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FLSpring();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FLSpring()
{
  return objc_opt_self();
}

__n128 initializeWithCopy for FLSimpleSpring(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for FLSimpleSpring(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FLSimpleSpring(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 112) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FLSimpleSpring()
{
  return &type metadata for FLSimpleSpring;
}

void *initializeWithCopy for FLCompoundSpring(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t getEnumTagSinglePayload for FLCompoundSpring(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 368))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FLCompoundSpring(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 368) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FLCompoundSpring()
{
  return &type metadata for FLCompoundSpring;
}

ValueMetadata *type metadata accessor for FLSpringParameters()
{
  return &type metadata for FLSpringParameters;
}

ValueMetadata *type metadata accessor for FLSimpleSpringState()
{
  return &type metadata for FLSimpleSpringState;
}

uint64_t sub_23A983068(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, unint64_t))(a8 + 16))(a1 | ((HIDWORD(a1) & 1) << 32), a2 | ((HIDWORD(a2) & 1) << 32), a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t sub_23A98309C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5;
  char v6;
  uint64_t (*v7)(_OWORD *);
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[6];
  __int16 v13;
  char v14;

  v5 = *(_WORD *)(a1 + 96);
  v6 = *(_BYTE *)(a1 + 98);
  v7 = *(uint64_t (**)(_OWORD *))(a5 + 24);
  v8 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v9;
  v10 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v10;
  v14 = v6;
  v13 = v5;
  return v7(v12);
}

uint64_t sub_23A9830E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_23A9830F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_23A9830F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_23A983100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_23A983108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_23A983110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

BOOL sub_23A983118(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_23A98312C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

id sub_23A983138(uint64_t a1, char *a2, __int16 *a3, void *a4)
{
  _BYTE *v4;
  char v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  __int16 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v49;
  uint64_t v50;
  void *v51;
  objc_super v52;
  objc_super v53;
  __int128 v54[2];
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[6];

  v7 = *a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions] = MEMORY[0x24BEE4AF8];
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error] = 0;
  v8 = &v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_backgroundTaskID];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession] = 0;
  v11 = *a3;
  v12 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] = 0;
  sub_23A963A14(a1, (uint64_t)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable]);
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_connectionContext] = v7;
  *(_WORD *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology] = v11;
  v13 = *(void **)&v4[v12];
  *(_QWORD *)&v4[v12] = a4;
  v14 = v4;
  v15 = a4;

  sub_23A963A14(a1, (uint64_t)v56);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23A963B98(v54, (uint64_t)v59);
    LOWORD(v56[0]) = v11;
    v16 = sub_23A98CF14((__int16 *)v56, v59, 2);
    if (v16)
    {
      *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v16;
      v17 = v16;

      v52.receiver = v14;
      v52.super_class = (Class)type metadata accessor for FMNearbyInteractionLocalizerContext();
      v18 = (char *)objc_msgSendSuper2(&v52, sel_init);
      v19 = v18;
      v20 = *(void **)&v18[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
      if (v20)
        objc_msgSend(v20, sel_setDelegate_, v18);
      else
        v32 = v18;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v33 = sub_23AA32EA0();
      sub_23A9620E8(v33, (uint64_t)qword_2569E0040);
      sub_23A963A14((uint64_t)v59, (uint64_t)v56);
      v26 = v19;
      v34 = sub_23AA32E88();
      v35 = sub_23AA33218();
      if (os_log_type_enabled(v34, v35))
      {
        v51 = v15;
        v36 = swift_slowAlloc();
        v50 = swift_slowAlloc();
        *(_QWORD *)&v54[0] = v50;
        *(_DWORD *)v36 = 136315394;
        v37 = objc_msgSend(v26, sel_description);
        v38 = sub_23AA32FD8();
        v49 = v17;
        v40 = v39;

        sub_23A964DBC(v38, v40, (uint64_t *)v54);
        sub_23AA333F8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        v41 = v57;
        v42 = v58;
        sub_23A96545C(v56, v57);
        v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
        v44 = objc_msgSend(v43, sel_description);
        v45 = sub_23AA32FD8();
        v47 = v46;

        sub_23A964DBC(v45, v47, (uint64_t *)v54);
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        sub_23A963B3C((uint64_t)v56);
        _os_log_impl(&dword_23A95E000, v34, v35, "ðŸ§­ FMR1NIContxt%s: init with discovery token: %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v50, -1, -1);
        MEMORY[0x23B85DB24](v36, -1, -1);

      }
      else
      {

        sub_23A963B3C((uint64_t)v56);
      }
      sub_23A963B3C(a1);
      v31 = v59;
      goto LABEL_19;
    }
    sub_23A963B3C((uint64_t)v59);
  }
  else
  {
    v55 = 0;
    memset(v54, 0, sizeof(v54));
    sub_23A98CDD4((uint64_t)v54);
  }
  v21 = objc_allocWithZone(MEMORY[0x24BDDFE00]);
  v22 = (void *)sub_23AA32D5C();
  v23 = objc_msgSend(v21, sel_initWithBytes_, v22);

  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFE08]), sel_initWithRole_discoveryToken_preferredUpdateRate_, 0, v23, 2);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v24;
  v25 = v24;

  v53.receiver = v14;
  v53.super_class = (Class)type metadata accessor for FMNearbyInteractionLocalizerContext();
  v26 = objc_msgSendSuper2(&v53, sel_init);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v27 = sub_23AA32EA0();
  sub_23A9620E8(v27, (uint64_t)qword_2569E0040);
  v28 = sub_23AA32E88();
  v29 = sub_23AA3320C();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_23A95E000, v28, v29, "ðŸ§­ FMR1NIContxt: Error initializing FMNearbyInteractionLocalizerContext. Findable does not conform to FMNIFindable protocol.", v30, 2u);
    MEMORY[0x23B85DB24](v30, -1, -1);
  }

  v31 = (_QWORD *)a1;
LABEL_19:
  sub_23A963B3C((uint64_t)v31);
  return v26;
}

uint64_t sub_23A983770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = sub_23AA33824();
  v4 = v3;
  sub_23AA33500();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A9E2E00(9uLL, v2, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  v24 = 7876668;
  v25 = 0xE300000000000000;
  v21[2] = v6;
  v22 = v8;
  sub_23A96F764();
  sub_23AA3302C();
  swift_bridgeObjectRelease();
  v21[0] = 7876668;
  v21[1] = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  sub_23A964084((uint64_t *)&unk_2569D6690);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23AA36190;
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v21);
  v10 = v22;
  v11 = v23;
  sub_23A96545C(v21, v22);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v14 = v13;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_23A9640C4();
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v14;
  v15 = (unint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
  swift_beginAccess();
  v16 = *v15;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v9 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v9 + 104) = v18;
  *(_QWORD *)(v9 + 72) = v17;
  sub_23A963B3C((uint64_t)v21);
  v19 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v19;
}

id sub_23A983A00(uint64_t a1, uint64_t a2)
{
  return sub_23A9886FC("ðŸ§­ FMR1NIContxt%s: deinit", a2, (uint64_t (*)(_QWORD))type metadata accessor for FMNearbyInteractionLocalizerContext);
}

uint64_t sub_23A983AD8(void *a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  _UNKNOWN **v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  id v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  void (*v39)(uint64_t, _QWORD *, uint64_t, uint64_t);
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _QWORD *, uint64_t, uint64_t);
  NSObject *v45;
  unint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  _UNKNOWN **v50;
  _OWORD v51[2];
  uint64_t v52;
  uint64_t v53;

  v3 = v2;
  v53 = *MEMORY[0x24BDAC8D0];
  sub_23A963A14((uint64_t)v3 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v48);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v52 = 0;
    memset(v51, 0, sizeof(v51));
  }
  v6 = objc_msgSend(a2, sel_discoveryToken);
  sub_23A9906C8((uint64_t)v51, (uint64_t)v48);
  v7 = v49;
  if (!v49)
  {
    sub_23A98CDD4((uint64_t)v48);
    if (!v6)
      goto LABEL_16;
    goto LABEL_9;
  }
  v8 = v50;
  sub_23A96545C(v48, v49);
  v9 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v8[2])(v7, v8);
  sub_23A963B3C((uint64_t)v48);
  if (!v6)
  {
    v6 = v9;
    if (!v9)
      goto LABEL_16;
    goto LABEL_9;
  }
  if (!v9)
  {
LABEL_9:

    goto LABEL_10;
  }
  sub_23A968488(0, &qword_2569D6098);
  v10 = v6;
  v11 = sub_23AA3338C();

  if ((v11 & 1) != 0)
  {
LABEL_16:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v19 = sub_23AA32EA0();
    sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
    v20 = v3;
    v21 = a1;
    v22 = sub_23AA32E88();
    v23 = sub_23AA33218();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412546;
      v48[0] = v20;
      v26 = v20;
      sub_23AA333F8();
      *v25 = v20;

      *(_WORD *)(v24 + 12) = 2112;
      v27 = objc_msgSend(v21, sel_configuration);
      v28 = v27;
      if (v27)
        v48[0] = v27;
      else
        v48[0] = 0;
      sub_23AA333F8();
      v25[1] = v28;

      _os_log_impl(&dword_23A95E000, v22, v23, "ðŸ§­ FMR1NIContxt%@: nearby object discover token matches!! setting ready. Config: %@", (uint8_t *)v24, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v25, -1, -1);
      MEMORY[0x23B85DB24](v24, -1, -1);
    }
    else
    {

      v22 = v20;
    }

    *((_BYTE *)&v20->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState) = 2;
    *((_BYTE *)&v20->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState) = 1;
    v29 = (uint64_t *)((char *)v20 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
    swift_beginAccess();
    v30 = *v29;
    if ((unint64_t)*v29 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v31 = sub_23AA335C0();
      if (v31)
        goto LABEL_26;
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v31)
      {
LABEL_26:
        if (v31 < 1)
          __break(1u);
        v32 = 0;
        v47 = v30 & 0xC000000000000001;
        do
        {
          if (v47)
            v33 = (char *)MEMORY[0x23B85D0B0](v32, v30);
          else
            v33 = (char *)*(id *)(v30 + 8 * v32 + 32);
          v34 = v33;
          v35 = &v33[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x23B85DBF0](&v33[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            v36 = *((_QWORD *)v35 + 1);
            v37 = v30;
            ObjectType = swift_getObjectType();
            v49 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            v50 = &off_250BC0E70;
            v48[0] = v20;
            v39 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v36 + 32);
            v40 = v20;
            v41 = ObjectType;
            v30 = v37;
            v39(2, v48, v41, v36);
            swift_unknownObjectRelease();
            sub_23A963B3C((uint64_t)v48);
          }
          if (MEMORY[0x23B85DBF0](v35))
          {
            v42 = *((_QWORD *)v35 + 1);
            v43 = swift_getObjectType();
            v49 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            v50 = &off_250BC0E70;
            v48[0] = v20;
            v44 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v42 + 48);
            v45 = v20;
            v44(1, v48, v43, v42);
            swift_unknownObjectRelease();
            sub_23A963B3C((uint64_t)v48);
          }

          ++v32;
        }
        while (v31 != v32);
      }
    }
    swift_bridgeObjectRelease_n();
    return sub_23A98CDD4((uint64_t)v51);
  }
LABEL_10:
  if (qword_2569D4AC0 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
  v13 = v3;
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v16 = 138412290;
    v48[0] = v13;
    v18 = v13;
    sub_23AA333F8();
    *v17 = v13;

    _os_log_impl(&dword_23A95E000, v14, v15, "ðŸ§­ FMR1NIContxt%@: nearby object discover token doesn't match", v16, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v17, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);

  }
  else
  {

  }
  return sub_23A98CDD4((uint64_t)v51);
}

uint64_t sub_23A9842A4(id *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v3 = objc_msgSend(*a1, sel_discoveryToken);
  sub_23A9906C8(a2, (uint64_t)v10);
  v4 = v11;
  if (!v11)
  {
    sub_23A98CDD4((uint64_t)v10);
    if (v3)
      goto LABEL_6;
LABEL_11:
    v8 = 1;
    return v8 & 1;
  }
  v5 = v12;
  sub_23A96545C(v10, v11);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  sub_23A963B3C((uint64_t)v10);
  if (!v3)
  {
    if (v6)
    {
      v8 = 0;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v6)
  {
    sub_23A968488(0, &qword_2569D6098);
    v7 = v3;
    v8 = sub_23AA3338C();

LABEL_9:
    v3 = (id)v6;
    goto LABEL_10;
  }
LABEL_6:
  v8 = 0;
LABEL_10:

  return v8 & 1;
}

void sub_23A9845D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  char *v20;
  void *v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, sel_setDelegate_, 0);
    v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
    if (v5)
      objc_msgSend(v5, sel_setDelegate_, 0);
    v6 = sub_23AA33824();
    v8 = v7;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v9 = sub_23AA32EA0();
    sub_23A9620E8(v9, (uint64_t)qword_2569E0040);
    v10 = v0;
    swift_bridgeObjectRetain();
    v11 = sub_23AA32E88();
    v12 = sub_23AA33218();
    if (os_log_type_enabled(v11, v12))
    {
      v24 = v6;
      v13 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v27 = v26;
      *(_DWORD *)v13 = 138412546;
      v14 = v10;
      sub_23AA333F8();
      *v25 = v10;

      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_23A9E2E00(9uLL, v24, v8);
      swift_bridgeObjectRelease();
      sub_23A96F764();
      sub_23AA3302C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23AA33038();
      swift_bridgeObjectRelease();
      sub_23A964DBC(7876668, 0xE300000000000000, &v27);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v11, v12, "ðŸ§­ FMR1NIContxt%@: released NI session <%s> and reset state to unknown", (uint8_t *)v13, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v26, -1, -1);
      MEMORY[0x23B85DB24](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v21 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = 0;

    v22 = *(void (**)(uint64_t))&v10[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
    if (v22)
    {
      v23 = swift_retain();
      v22(v23);

      sub_23A98C874((uint64_t)v22);
      goto LABEL_17;
    }
LABEL_16:

    goto LABEL_17;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v15 = sub_23AA32EA0();
  sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
  v4 = v0;
  v16 = sub_23AA32E88();
  v17 = sub_23AA33218();
  if (!os_log_type_enabled(v16, v17))
  {

    goto LABEL_16;
  }
  v18 = (uint8_t *)swift_slowAlloc();
  v19 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v18 = 138412290;
  v20 = v4;
  sub_23AA333F8();
  *v19 = v4;

  _os_log_impl(&dword_23A95E000, v16, v17, "ðŸ§­ FMR1NIContxt%@: reset item localizer state to unknown", v18, 0xCu);
  sub_23A964084(&qword_2569D6058);
  swift_arrayDestroy();
  MEMORY[0x23B85DB24](v19, -1, -1);
  MEMORY[0x23B85DB24](v18, -1, -1);

LABEL_17:
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure] = 0;
}

void sub_23A984AD4()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  NSObject *log;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v1 = v0;
  if (v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] == 1)
  {
    sub_23A986948();
    return;
  }
  v2 = &v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_backgroundTaskID];
  v3 = *MEMORY[0x24BEBE030];
  if ((v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_backgroundTaskID + 8] & 1) == 0)
  {
    v4 = *(_QWORD *)v2;
    if (*(_QWORD *)v2 != v3)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      objc_msgSend(v5, sel_endBackgroundTask_, v4);

    }
  }
  *(_QWORD *)v2 = v3;
  v2[8] = 0;
  v6 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession])
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v7 = sub_23AA32EA0();
    sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
    v8 = v1;
    v9 = sub_23AA32E88();
    v10 = sub_23AA33218();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v8;
      sub_23AA333F8();
      *v12 = v8;

      _os_log_impl(&dword_23A95E000, v9, v10, "ðŸ§­ FMR1NIContxt%@: entering foreground", v11, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v12, -1, -1);
      MEMORY[0x23B85DB24](v11, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFE38]), sel_init);
    v15 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v14, sel_setARSession_, v16);
      objc_msgSend(v16, sel_setDelegate_, v1);

    }
    objc_msgSend(v14, sel_setDelegate_, v1);
    v17 = sub_23AA33824();
    v19 = v18;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v20 = sub_23AA32EA0();
    sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
    v21 = v1;
    swift_bridgeObjectRetain();
    v22 = sub_23AA32E88();
    v23 = sub_23AA33218();
    if (os_log_type_enabled(v22, v23))
    {
      v38 = v14;
      v24 = swift_slowAlloc();
      v35 = v17;
      v25 = (_QWORD *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v39 = v37;
      *(_DWORD *)v24 = 138412546;
      log = v22;
      v26 = v21;
      sub_23AA333F8();
      *v25 = v1;

      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_23A9E2E00(9uLL, v35, v19);
      swift_bridgeObjectRelease();
      sub_23A96F764();
      sub_23AA3302C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23AA33038();
      swift_bridgeObjectRelease();
      sub_23A964DBC(7876668, 0xE300000000000000, &v39);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, log, v23, "ðŸ§­ FMR1NIContxt%@: entering foreground, created item localizer <%s> and will reconfigure", (uint8_t *)v24, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v37, -1, -1);
      v27 = v24;
      v14 = v38;
      MEMORY[0x23B85DB24](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v28 = *(void (**)(uint64_t))&v21[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
    if (v28)
    {
      v29 = swift_retain();
      v28(v29);
      sub_23A98C874((uint64_t)v28);
    }
    v30 = *(void **)&v1[v6];
    *(_QWORD *)&v1[v6] = v14;

  }
  v31 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
  objc_opt_self();
  v32 = swift_dynamicCastObjCClass();
  if (v32)
  {
    v33 = (void *)v32;
    v34 = v31;
    if (objc_msgSend(v33, sel_preferredUpdateRate) == (id)3)
    {
      sub_23A98603C();

      return;
    }

  }
  sub_23A98580C();

}

uint64_t sub_23A9850F8(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void *, uint64_t *, uint64_t, uint64_t);
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42[3];
  uint64_t v43;
  _UNKNOWN **v44;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = a1;
  v5 = v1;
  v6 = v4;
  v7 = (char *)v5;
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  v10 = (_QWORD *)&unk_2569DF000;
  if (os_log_type_enabled(v8, v9))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v42[0] = v41;
    *(_DWORD *)v11 = 138412802;
    v13 = v7;
    sub_23AA333F8();
    *v12 = v7;

    *(_WORD *)(v11 + 12) = 2112;
    v14 = (char *)v6;
    sub_23AA333F8();
    v12[1] = v6;

    *(_WORD *)(v11 + 22) = 2080;
    v15 = &v14[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
    if (MEMORY[0x23B85DBF0](&v14[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
    {
      v16 = *((_QWORD *)v15 + 1);
      ObjectType = swift_getObjectType();
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease();
    }
    else
    {
      v20 = 0xE100000000000000;
      v18 = 63;
    }
    sub_23A964DBC(v18, v20, v42);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMR1NIContxt%@: subscribing %@ for %s", (uint8_t *)v11, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v41, -1, -1);
    MEMORY[0x23B85DB24](v11, -1, -1);

    v10 = &unk_2569DF000;
  }
  else
  {

  }
  v21 = &v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v22 = (char *)v6;
  MEMORY[0x23B85CC30]();
  if (*(_QWORD *)((*(_QWORD *)v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v21 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_23AA330D4();
  sub_23AA330EC();
  sub_23AA330C8();
  swift_endAccess();
  v23 = &v22[v10[510]];
  if (MEMORY[0x23B85DBF0](v23))
  {
    v24 = *((_QWORD *)v23 + 1);
    v25 = swift_getObjectType();
    v26 = v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState];
    v43 = type metadata accessor for FMNearbyInteractionLocalizerContext();
    v44 = &off_250BC0E70;
    v42[0] = (uint64_t)v7;
    v27 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 32);
    v28 = v7;
    v27(v26, v42, v25, v24);
    swift_unknownObjectRelease();
    sub_23A963B3C((uint64_t)v42);
  }
  result = MEMORY[0x23B85DBF0](v23);
  if (result)
  {
    v30 = *((_QWORD *)v23 + 1);
    v31 = swift_getObjectType();
    v32 = v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState];
    v43 = type metadata accessor for FMNearbyInteractionLocalizerContext();
    v44 = &off_250BC0E70;
    v42[0] = (uint64_t)v7;
    v33 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v30 + 48);
    v34 = v7;
    v33(v32, v42, v31, v30);
    swift_unknownObjectRelease();
    result = sub_23A963B3C((uint64_t)v42);
  }
  v35 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error];
  if (v35)
  {
    result = MEMORY[0x23B85DBF0](v23);
    if (result)
    {
      v36 = *((_QWORD *)v23 + 1);
      v37 = swift_getObjectType();
      v43 = type metadata accessor for FMNearbyInteractionLocalizerContext();
      v44 = &off_250BC0E70;
      v42[0] = (uint64_t)v7;
      v38 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v36 + 40);
      v39 = v7;
      v40 = v35;
      v38(v35, v42, v37, v36);
      swift_unknownObjectRelease();

      return sub_23A963B3C((uint64_t)v42);
    }
  }
  return result;
}

void sub_23A985580(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  id v13;
  uint64_t *v14;
  id v15;
  int64_t v16;
  uint64_t v17;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = a1;
  v6 = (char *)v4;
  v7 = v5;
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412546;
    v12 = v6;
    sub_23AA333F8();
    *v11 = v6;

    *(_WORD *)(v10 + 12) = 2112;
    v13 = v7;
    sub_23AA333F8();
    v11[1] = v7;

    _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMR1NIContxt%@: unsubscribing %@", (uint8_t *)v10, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v11, -1, -1);
    MEMORY[0x23B85DB24](v10, -1, -1);

  }
  else
  {

  }
  v14 = (uint64_t *)&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v15 = v7;
  v16 = sub_23A990940(v14, (uint64_t)v15);

  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (v17 >= v16)
      goto LABEL_8;
  }
  else
  {
    v17 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v16)
    {
LABEL_8:
      sub_23A99C484(v16, v17);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_23A98580C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  char *v9;
  const char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  unint64_t *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v52;
  id v53;
  uint64_t v54;
  char *v55;
  NSObject *loga;
  os_log_t log;
  _QWORD *v58;
  uint64_t v59;
  os_log_type_t typea;
  os_log_type_t type[8];
  uint64_t v62;
  unint64_t v63;
  __int128 v64[2];
  uint64_t v65;
  uint64_t v66[3];
  uint64_t v67;
  _UNKNOWN **v68;
  _QWORD v69[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity;
  if (v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] == 1)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v3 = sub_23AA32EA0();
    sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
    v4 = v0;
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v69[0] = v4;
      v9 = v4;
      sub_23AA333F8();
      *v8 = v4;

      v10 = "ðŸ§­ FMR1NIContxt%@: not starting niSession: already started)";
LABEL_18:
      _os_log_impl(&dword_23A95E000, v5, v6, v10, v7, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v8, -1, -1);
      MEMORY[0x23B85DB24](v7, -1, -1);

      return 0;
    }
    goto LABEL_19;
  }
  sub_23A963A14((uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v66);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v65 = 0;
    memset(v64, 0, sizeof(v64));
    sub_23A98CDD4((uint64_t)v64);
    goto LABEL_14;
  }
  sub_23A963B98(v64, (uint64_t)v69);
  LOWORD(v66[0]) = *(_WORD *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology];
  v11 = sub_23A98CF14((__int16 *)v66, v69, 2);
  if (!v11)
  {
    sub_23A963B3C((uint64_t)v69);
LABEL_14:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v30 = sub_23AA32EA0();
    sub_23A9620E8(v30, (uint64_t)qword_2569E0040);
    v4 = v0;
    v5 = sub_23AA32E88();
    v6 = sub_23AA3320C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v69[0] = v4;
      v31 = v4;
      sub_23AA333F8();
      *v8 = v4;

      v10 = "ðŸ§­ FMR1NIContxt%@: Findable does not conform to FMNIFindable protocol.";
      goto LABEL_18;
    }
LABEL_19:

    return 0;
  }
  v54 = v2;
  v12 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration;
  v13 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v11;
  v53 = v11;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v14 = sub_23AA32EA0();
  sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
  v15 = v1;
  v16 = sub_23AA32E88();
  v17 = sub_23AA33218();
  v18 = &qword_2569D5000;
  v55 = v1;
  if (os_log_type_enabled(v16, v17))
  {
    typea = v17;
    v19 = swift_slowAlloc();
    v58 = (_QWORD *)swift_slowAlloc();
    v62 = swift_slowAlloc();
    v66[0] = v62;
    *(_DWORD *)v19 = 138412802;
    *(_QWORD *)&v64[0] = v15;
    v20 = v15;
    sub_23AA333F8();
    *v58 = v15;

    loga = v16;
    *(_WORD *)(v19 + 12) = 2080;
    *(_QWORD *)&v64[0] = *(_QWORD *)&v20[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
    v21 = *(id *)&v64[0];
    sub_23A964084(&qword_2569D6090);
    v22 = sub_23AA32FFC();
    *(_QWORD *)&v64[0] = sub_23A964DBC(v22, v23, v66);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    v24 = *(id *)&v1[v12];
    v25 = objc_msgSend(v24, sel_description, v53);
    v26 = sub_23AA32FD8();
    v28 = v27;

    v29 = v26;
    v18 = &qword_2569D5000;
    *(_QWORD *)&v64[0] = sub_23A964DBC(v29, v28, v66);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, loga, typea, "ðŸ§­ FMR1NIContxt%@: starting niSession %s with configuration: %s", (uint8_t *)v19, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v58, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v62, -1, -1);
    MEMORY[0x23B85DB24](v19, -1, -1);

  }
  else
  {

  }
  v32 = *(void **)&v15[v18[485]];
  if (v32)
    objc_msgSend(v32, sel_runWithConfiguration_, *(_QWORD *)&v1[v12]);
  v33 = &v15[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v34 = *(_QWORD *)v33;
  if (!(*(_QWORD *)v33 >> 62))
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v35)
      goto LABEL_25;
LABEL_36:

    swift_bridgeObjectRelease_n();
    sub_23A963B3C((uint64_t)v69);
    v55[v54] = 1;
    return 0;
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v35 = result;
  if (!result)
    goto LABEL_36;
LABEL_25:
  if (v35 >= 1)
  {
    v37 = 0;
    v59 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState;
    *(_QWORD *)type = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState;
    v63 = v34 & 0xC000000000000001;
    log = (os_log_t)v35;
    do
    {
      if (v63)
        v38 = (char *)MEMORY[0x23B85D0B0](v37, v34);
      else
        v38 = (char *)*(id *)(v34 + 8 * v37 + 32);
      v39 = v38;
      v40 = &v38[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v38[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v41 = *((_QWORD *)v40 + 1);
        v42 = v34;
        ObjectType = swift_getObjectType();
        v44 = v15[*(_QWORD *)type];
        v67 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v68 = &off_250BC0E70;
        v66[0] = (uint64_t)v15;
        v45 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v41 + 32);
        v46 = v15;
        v47 = ObjectType;
        v34 = v42;
        v35 = (uint64_t)log;
        v45(v44, v66, v47, v41);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v66);
      }
      if (MEMORY[0x23B85DBF0](v40))
      {
        v48 = *((_QWORD *)v40 + 1);
        v49 = swift_getObjectType();
        v50 = v15[v59];
        v67 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v68 = &off_250BC0E70;
        v66[0] = (uint64_t)v15;
        v51 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v48 + 48);
        v52 = v15;
        v51(v50, v66, v49, v48);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v66);
      }

      ++v37;
    }
    while (v35 != v37);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A98603C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  char *v9;
  const char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  _QWORD *v33;
  os_log_type_t type;
  uint64_t v35;
  __int128 v36[2];
  uint64_t v37;
  uint64_t v38[5];
  _QWORD v39[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity;
  if (v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] == 5)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v3 = sub_23AA32EA0();
    sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
    v4 = v0;
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v39[0] = v4;
      v9 = v4;
      sub_23AA333F8();
      *v8 = v4;

      v10 = "ðŸ§­ FMR1NIContxt%@: not starting niSession with low preferred update rate: already started)";
LABEL_18:
      _os_log_impl(&dword_23A95E000, v5, v6, v10, v7, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v8, -1, -1);
      MEMORY[0x23B85DB24](v7, -1, -1);

      return 0;
    }
    goto LABEL_19;
  }
  sub_23A963A14((uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v38);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v37 = 0;
    memset(v36, 0, sizeof(v36));
    sub_23A98CDD4((uint64_t)v36);
    goto LABEL_14;
  }
  sub_23A963B98(v36, (uint64_t)v39);
  LOWORD(v38[0]) = *(_WORD *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology];
  v11 = sub_23A98CF14((__int16 *)v38, v39, 3);
  if (!v11)
  {
    sub_23A963B3C((uint64_t)v39);
LABEL_14:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v29 = sub_23AA32EA0();
    sub_23A9620E8(v29, (uint64_t)qword_2569E0040);
    v4 = v0;
    v5 = sub_23AA32E88();
    v6 = sub_23AA3320C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v39[0] = v4;
      v30 = v4;
      sub_23AA333F8();
      *v8 = v4;

      v10 = "ðŸ§­ FMR1NIContxt%@: Findable does not conform to FMNIFindable protocol.";
      goto LABEL_18;
    }
LABEL_19:

    return 0;
  }
  v12 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v11;
  v13 = v11;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v14 = sub_23AA32EA0();
  sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
  v15 = v13;
  v16 = v1;
  v17 = v15;
  v18 = (char *)v16;
  v19 = sub_23AA32E88();
  v20 = sub_23AA33218();
  if (os_log_type_enabled(v19, v20))
  {
    type = v20;
    v21 = swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    *(_QWORD *)&v36[0] = v18;
    v38[0] = v35;
    *(_DWORD *)v21 = 138412546;
    v22 = v18;
    sub_23AA333F8();
    *v33 = v18;

    *(_WORD *)(v21 + 12) = 2080;
    v23 = v17;
    v24 = objc_msgSend(v23, sel_description);
    v25 = sub_23AA32FD8();
    v26 = v17;
    v28 = v27;

    *(_QWORD *)&v36[0] = sub_23A964DBC(v25, v28, v38);
    sub_23AA333F8();

    v17 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v19, type, "ðŸ§­ FMR1NIContxt%@: starting niSession (low update rate) with configuration: %s", (uint8_t *)v21, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v33, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v35, -1, -1);
    MEMORY[0x23B85DB24](v21, -1, -1);

  }
  else
  {

  }
  v31 = *(void **)&v18[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v31)
  {
    objc_msgSend(v31, sel_runWithConfiguration_, v17);

    sub_23A963B3C((uint64_t)v39);
  }
  else
  {
    sub_23A963B3C((uint64_t)v39);

  }
  *((_BYTE *)v1 + v2) = 5;
  return 0;
}

uint64_t sub_23A98660C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  char *v9;
  uint8_t *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  char *v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity;
  if ((v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] | 4) == 5)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v3 = sub_23AA32EA0();
    sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
    v4 = v0;
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v21 = v2;
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v22 = (char *)v4;
      v9 = v4;
      sub_23AA333F8();
      *v8 = v4;

      _os_log_impl(&dword_23A95E000, v5, v6, "ðŸ§­ FMR1NIContxt%@: stopping niSession", v7, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v8, -1, -1);
      v10 = v7;
      v2 = v21;
      MEMORY[0x23B85DB24](v10, -1, -1);

    }
    else
    {

    }
    v18 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession], sel_invalidate, v21, v22);
    v19 = *(void **)&v4[v18];
    *(_QWORD *)&v4[v18] = 0;

    v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 0;
    v1[v2] = 2;
  }
  else
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v11 = sub_23AA32EA0();
    sub_23A9620E8(v11, (uint64_t)qword_2569E0040);
    v12 = v0;
    v13 = sub_23AA32E88();
    v14 = sub_23AA33218();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v17 = v12;
      sub_23AA333F8();
      *v16 = v12;

      _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMR1NIContxt%@: not stopping niSession: not running", v15, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v16, -1, -1);
      MEMORY[0x23B85DB24](v15, -1, -1);

    }
    else
    {

    }
  }
  return 0;
}

id sub_23A986948()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  id result;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v2;
    sub_23AA333F8();
    *v6 = v2;

    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1NIContxt%@: pausing NISession", v5, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  result = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession], sel_pause);
  v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 1;
  v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] = 2;
  return result;
}

void sub_23A986B10()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  int v10;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  NSObject *v18;
  uint64_t v19;
  _BYTE *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  _BYTE *v35;
  const char *v36;
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD *v42;
  NSObject *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  _BYTE *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD *v52;
  _BYTE *v53;
  uint64_t v54;
  NSObject *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  NSObject *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  _QWORD *v67;
  os_log_type_t type;
  uint64_t v69;
  __int128 v70[2];
  uint64_t v71;
  __int16 v72[20];
  uint64_t v73[5];

  v2 = v0;
  v3 = (unint64_t *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v4 = *v3;
  if (v4 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v5)
  {
LABEL_14:
    v1 = 0;
LABEL_15:
    swift_bridgeObjectRelease_n();
    if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] != 2)
    {
      if (qword_2569D4AC0 == -1)
        goto LABEL_27;
      goto LABEL_83;
    }
    v10 = v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState];
    if (v10 != 1 && v10 != 4)
    {
      v28 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure;
      if ((v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure] & 1) != 0)
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v29 = sub_23AA32EA0();
        sub_23A9620E8(v29, (uint64_t)qword_2569E0040);
        v30 = v2;
        v31 = sub_23AA32E88();
        v32 = sub_23AA33218();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          v34 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v33 = 138412290;
          v73[0] = (uint64_t)v30;
          v35 = v30;
          sub_23AA333F8();
          *v34 = v30;

          v36 = "ðŸ§­ FMR1NIContxt%@: waiting to be findable";
          goto LABEL_77;
        }
      }
      else
      {
        sub_23A963A14((uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v72);
        sub_23A964084((uint64_t *)&unk_2569D63B0);
        sub_23A964084(&qword_2569D6070);
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_23A963B98(v70, (uint64_t)v73);
          v72[0] = *(_WORD *)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology];
          v44 = sub_23A98CF14(v72, v73, 2);
          if (v44)
          {
            v45 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
            *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v44;
            v46 = v44;

            v2[v28] = 1;
            if (qword_2569D4AC0 != -1)
              swift_once();
            v47 = sub_23AA32EA0();
            sub_23A9620E8(v47, (uint64_t)qword_2569E0040);
            v48 = v2;
            v49 = sub_23AA32E88();
            v50 = sub_23AA33218();
            if (os_log_type_enabled(v49, v50))
            {
              v51 = (uint8_t *)swift_slowAlloc();
              v52 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v51 = 138412290;
              *(_QWORD *)v72 = v48;
              v53 = v48;
              sub_23AA333F8();
              *v52 = v48;

              _os_log_impl(&dword_23A95E000, v49, v50, "ðŸ§­ FMR1NIContxt%@: completed configuring", v51, 0xCu);
              sub_23A964084(&qword_2569D6058);
              swift_arrayDestroy();
              MEMORY[0x23B85DB24](v52, -1, -1);
              MEMORY[0x23B85DB24](v51, -1, -1);
            }
            else
            {

              v46 = v48;
            }

            sub_23A963B3C((uint64_t)v73);
            return;
          }
          sub_23A963B3C((uint64_t)v73);
        }
        else
        {
          v71 = 0;
          memset(v70, 0, sizeof(v70));
          sub_23A98CDD4((uint64_t)v70);
        }
        if (qword_2569D4AC0 != -1)
          swift_once();
        v65 = sub_23AA32EA0();
        sub_23A9620E8(v65, (uint64_t)qword_2569E0040);
        v30 = v2;
        v31 = sub_23AA32E88();
        v32 = sub_23AA3320C();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          v34 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v33 = 138412290;
          v73[0] = (uint64_t)v30;
          v66 = v30;
          sub_23AA333F8();
          *v34 = v30;

          v36 = "ðŸ§­ FMR1NIContxt%@: Findable does not conform to FMNIFindable protocol.";
          goto LABEL_77;
        }
      }
LABEL_78:

      return;
    }
    if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] == 1)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v12 = sub_23AA32EA0();
      sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
      v13 = v2;
      v14 = sub_23AA32E88();
      v15 = sub_23AA33218();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v16 = 138412290;
        v73[0] = (uint64_t)v13;
        v18 = v13;
        sub_23AA333F8();
        *v17 = v13;

        _os_log_impl(&dword_23A95E000, v14, v15, "ðŸ§­ FMR1NIContxt%@: application is in background", v16, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v17, -1, -1);
        MEMORY[0x23B85DB24](v16, -1, -1);
      }
      else
      {

        v14 = v13;
      }

      sub_23A986948();
      return;
    }
    if (v1 < 1)
    {
      if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] != 1)
        return;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v54 = sub_23AA32EA0();
      sub_23A9620E8(v54, (uint64_t)qword_2569E0040);
      v27 = v2;
      goto LABEL_56;
    }
    switch(v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity])
    {
      case 0:
      case 2:
      case 5:
        if (qword_2569D4AC0 != -1)
          swift_once();
        v37 = sub_23AA32EA0();
        sub_23A9620E8(v37, (uint64_t)qword_2569E0040);
        v38 = v2;
        v39 = sub_23AA32E88();
        v40 = sub_23AA33218();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          v42 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v41 = 138412290;
          v73[0] = (uint64_t)v38;
          v43 = v38;
          sub_23AA333F8();
          *v42 = v38;

          _os_log_impl(&dword_23A95E000, v39, v40, "ðŸ§­ FMR1NIContxt%@: asked to start localizer now", v41, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v42, -1, -1);
          MEMORY[0x23B85DB24](v41, -1, -1);
        }
        else
        {

          v39 = v38;
        }

        sub_23A98580C();
        goto LABEL_63;
      case 1:
        if (qword_2569D4AC0 != -1)
          swift_once();
        v61 = sub_23AA32EA0();
        sub_23A9620E8(v61, (uint64_t)qword_2569E0040);
        v30 = v2;
        v31 = sub_23AA32E88();
        v32 = sub_23AA33218();
        if (!os_log_type_enabled(v31, v32))
          goto LABEL_78;
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v33 = 138412290;
        v73[0] = (uint64_t)v30;
        v62 = v30;
        sub_23AA333F8();
        *v34 = v30;

        v36 = "ðŸ§­ FMR1NIContxt%@: asked to start localizer (but already is)";
        break;
      default:
        if (qword_2569D4AC0 != -1)
          swift_once();
        v63 = sub_23AA32EA0();
        sub_23A9620E8(v63, (uint64_t)qword_2569E0040);
        v30 = v2;
        v31 = sub_23AA32E88();
        v32 = sub_23AA33218();
        if (!os_log_type_enabled(v31, v32))
          goto LABEL_78;
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v33 = 138412290;
        v73[0] = (uint64_t)v30;
        v64 = v30;
        sub_23AA333F8();
        *v34 = v30;

        v36 = "ðŸ§­ FMR1NIContxt%@: asked to start localizer (but waiting to be stopped first)";
        break;
    }
LABEL_77:
    _os_log_impl(&dword_23A95E000, v31, v32, v36, v33, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v34, -1, -1);
    MEMORY[0x23B85DB24](v33, -1, -1);

    return;
  }
  while (v5 >= 1)
  {
    v6 = 0;
    v1 = 0;
    while (1)
    {
      v7 = (v4 & 0xC000000000000001) != 0
         ? (unsigned __int8 *)MEMORY[0x23B85D0B0](v6, v4)
         : (unsigned __int8 *)*(id *)(v4 + 8 * v6 + 32);
      v8 = v7[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession];

      if (v8 == 1 && __OFADD__(v1++, 1))
        break;
      if (v5 == ++v6)
        goto LABEL_15;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain_n();
    v5 = sub_23AA335C0();
    if (!v5)
      goto LABEL_14;
  }
  __break(1u);
LABEL_83:
  swift_once();
LABEL_27:
  v19 = sub_23AA32EA0();
  sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
  v20 = v2;
  v21 = sub_23AA32E88();
  v22 = sub_23AA33218();
  if (os_log_type_enabled(v21, v22))
  {
    type = v22;
    v23 = swift_slowAlloc();
    v67 = (_QWORD *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    v73[0] = v69;
    *(_DWORD *)v23 = 138412546;
    v24 = v20;
    sub_23AA333F8();
    *v67 = v20;

    *(_WORD *)(v23 + 12) = 2080;
    v25 = sub_23AA32FFC();
    *(_QWORD *)v72 = sub_23A964DBC(v25, v26, v73);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v21, type, "ðŸ§­ FMR1NIContxt%@: waiting to be ready: itemLocalizerState: %s", (uint8_t *)v23, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v67, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v69, -1, -1);
    MEMORY[0x23B85DB24](v23, -1, -1);

    if (v1)
      return;
  }
  else
  {

    if (v1)
      return;
  }
  if (v20[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] == 1)
  {
    v27 = v20;
LABEL_56:
    v55 = v27;
    v56 = sub_23AA32E88();
    v57 = sub_23AA33218();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v58 = 138412290;
      v73[0] = (uint64_t)v55;
      v60 = v55;
      sub_23AA333F8();
      *v59 = v55;

      _os_log_impl(&dword_23A95E000, v56, v57, "ðŸ§­ FMR1NIContxt%@: asked to stop everything now", v58, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v59, -1, -1);
      MEMORY[0x23B85DB24](v58, -1, -1);
    }
    else
    {

      v56 = v55;
    }

    sub_23A98660C();
LABEL_63:

  }
}

void sub_23A98794C(void *a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = a1;
  v6 = sub_23AA32E88();
  v7 = sub_23AA33200();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412546;
    v10 = v4;
    sub_23AA333F8();
    *v9 = v4;

    *(_WORD *)(v8 + 12) = 2112;
    v14 = sub_23AA10B2C();
    sub_23AA333F8();
    v9[1] = v14;

    _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMR1NIContxt%@: Updating local device location: %@", (uint8_t *)v8, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v9, -1, -1);
    MEMORY[0x23B85DB24](v8, -1, -1);

  }
  else
  {

  }
  v11 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v11)
  {
    v12 = objc_msgSend(v11, sel_findingNotifier);
    v13 = sub_23AA10B2C();
    objc_msgSend(v12, sel_notifyUpdatedLocationForLocalDevice_, v13);

  }
}

void sub_23A987B70(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  id v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;

  v3 = sub_23AA32DC8();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  v6 = v1;
  v7 = a1;
  v8 = (char *)v6;
  v9 = v7;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33200();
  v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    v40 = v12;
    v44 = v8;
    v15 = v8;
    sub_23AA333F8();
    *v14 = v8;

    *(_WORD *)(v13 + 12) = 2112;
    v16 = objc_msgSend(v9, sel_timestamp);
    v17 = v41;
    sub_23AA32DA4();

    objc_msgSend(v9, sel_trueHeading);
    v19 = v18;
    objc_msgSend(v9, sel_magneticHeading);
    v21 = v20;
    objc_msgSend(v9, sel_headingAccuracy);
    v23 = v22;
    v24 = objc_allocWithZone(MEMORY[0x24BDDFE10]);
    v25 = (void *)sub_23AA32D8C();
    v26 = (char *)objc_msgSend(v24, sel_initWithTimestamp_trueHeading_magneticHeading_headingAccuracy_, v25, v19, v21, v23);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
    v44 = v26;
    sub_23AA333F8();
    v14[1] = v26;

    _os_log_impl(&dword_23A95E000, v10, (os_log_type_t)v40, "ðŸ§­ FMR1NIContxt%@: Updating local device heading: %@", (uint8_t *)v13, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v14, -1, -1);
    MEMORY[0x23B85DB24](v13, -1, -1);

  }
  else
  {

    v17 = v41;
  }
  v27 = *(void **)&v8[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v27)
  {
    v28 = objc_msgSend(v27, sel_findingNotifier);
    v29 = objc_msgSend(v9, sel_timestamp);
    sub_23AA32DA4();

    objc_msgSend(v9, sel_trueHeading);
    v31 = v30;
    objc_msgSend(v9, sel_magneticHeading);
    v33 = v32;
    objc_msgSend(v9, sel_headingAccuracy);
    v35 = v34;
    v36 = objc_allocWithZone(MEMORY[0x24BDDFE10]);
    v37 = (void *)sub_23AA32D8C();
    v38 = objc_msgSend(v36, sel_initWithTimestamp_trueHeading_magneticHeading_headingAccuracy_, v37, v31, v33, v35);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
    objc_msgSend(v28, sel_notifyUpdatedHeadingForLocalDevice_, v38);

  }
}

uint64_t sub_23A987F58(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31[5];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  sub_23A963A14(a1, (uint64_t)v32);
  v6 = v2;
  v7 = a2;
  v8 = (char *)v6;
  v9 = v7;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33200();
  if (os_log_type_enabled(v10, v11))
  {
    v28 = a1;
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v31[0] = v27;
    *(_DWORD *)v12 = 138412802;
    *(_QWORD *)&v29[0] = v8;
    v14 = v8;
    sub_23AA333F8();
    *v13 = v8;

    *(_WORD *)(v12 + 12) = 2080;
    v16 = v33;
    v15 = v34;
    sub_23A96545C(v32, v33);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
    sub_23A964DBC(v17, v18, v31);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)v32);
    *(_WORD *)(v12 + 22) = 2112;
    *(_QWORD *)&v29[0] = sub_23AA10B2C();
    sub_23AA333F8();
    v13[1] = *(_QWORD *)&v29[0];

    _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMR1NIContxt%@: Updating findable location findable: %s, location: %@", (uint8_t *)v12, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v27, -1, -1);
    v19 = v12;
    a1 = v28;
    MEMORY[0x23B85DB24](v19, -1, -1);

  }
  else
  {

    sub_23A963B3C((uint64_t)v32);
  }
  sub_23A963A14(a1, (uint64_t)v31);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if (swift_dynamicCast())
  {
    sub_23A963B98(v29, (uint64_t)v32);
    v20 = *(void **)&v8[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
    if (v20)
    {
      v21 = objc_msgSend(v20, sel_findingNotifier);
      v22 = sub_23AA10B2C();
      v23 = v33;
      v24 = v34;
      sub_23A96545C(v32, v33);
      v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
      objc_msgSend(v21, sel_notifyUpdatedLocation_forNearbyObjectWithToken_, v22, v25);

    }
    return sub_23A963B3C((uint64_t)v32);
  }
  else
  {
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    return sub_23A98CDD4((uint64_t)v29);
  }
}

uint64_t type metadata accessor for FMNearbyInteractionLocalizerContext()
{
  return objc_opt_self();
}

uint64_t sub_23A988344@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23A963A14(*v1 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, a1);
}

uint64_t sub_23A98836C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t i;
  char *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  v6 = v2;
  v7 = sub_23AA32E88();
  v8 = sub_23AA33200();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v10 = v6;
    sub_23AA333F8();
    *v21 = v6;

    _os_log_impl(&dword_23A95E000, v7, v8, "ðŸ§­ FMR1NIContxt%@: didUpdate ARFrame", v9, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v21, -1, -1);
    MEMORY[0x23B85DB24](v9, -1, -1);

  }
  else
  {

  }
  v11 = &v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  if (!(*(_QWORD *)v11 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v13)
      goto LABEL_8;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v13 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_8:
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (char *)MEMORY[0x23B85D0B0](i, v12);
      else
        v16 = (char *)*(id *)(v12 + 8 * i + 32);
      v17 = v16;
      v18 = &v16[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v16[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v19 = *((_QWORD *)v18 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 64))(a1, a2, ObjectType, v19);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_23A9886E4()
{
  return sub_23A9886FC("ðŸ§­ FMR1NISubscr%s: deinit", 0, (uint64_t (*)(_QWORD))type metadata accessor for FMNearbyInteractionManagerSubscription);
}

id sub_23A9886FC(char *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  void *v3;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *format;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  objc_super v23;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
  v8 = v3;
  v9 = sub_23AA32E88();
  v10 = sub_23AA33218();
  if (os_log_type_enabled(v9, v10))
  {
    v21 = a3;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v22 = v12;
    *(_DWORD *)v11 = 136315138;
    format = a1;
    v13 = objc_msgSend(v8, sel_description);
    v14 = sub_23AA32FD8();
    v16 = v15;

    v17 = v14;
    a3 = v21;
    sub_23A964DBC(v17, v16, &v22);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v9, v10, format, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v12, -1, -1);
    MEMORY[0x23B85DB24](v11, -1, -1);

  }
  else
  {

  }
  v18 = (objc_class *)a3(a2);
  v23.receiver = v8;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, sel_dealloc);
}

uint64_t sub_23A988988()
{
  return type metadata accessor for FMNearbyInteractionManagerSubscription();
}

uint64_t type metadata accessor for FMNearbyInteractionManagerSubscription()
{
  uint64_t result;

  result = qword_2569D5FF0;
  if (!qword_2569D5FF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23A9889CC(char a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(uint64_t, uint64_t *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t *, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  NSObject *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  NSObject *log;
  os_log_type_t type;
  uint64_t v67;
  void *v68;
  char *v69;
  char *v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _UNKNOWN **v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context];
  v5 = MEMORY[0x23B85DBF0](v4);
  if (v5)
  {
    v6 = (char *)v5;
    if ((a1 & 1) == 0)
      goto LABEL_23;
    v7 = MEMORY[0x23B85DBF0](v4);
    if (!v7)
      goto LABEL_23;
    v8 = (id)v7;
    *(_BYTE *)(v7 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState) = 2;
    *(_BYTE *)(v7 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState) = 1;
    v9 = (uint64_t *)(v7 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
    swift_beginAccess();
    v10 = *v9;
    v68 = v2;
    v69 = v6;
    if ((unint64_t)*v9 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v11 = sub_23AA335C0();
      if (v11)
        goto LABEL_6;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v11)
      {
LABEL_6:
        if (v11 < 1)
        {
          __break(1u);
          return;
        }
        v12 = 0;
        v71 = (id)(v10 & 0xC000000000000001);
        do
        {
          if (v71)
            v13 = (char *)MEMORY[0x23B85D0B0](v12, v10);
          else
            v13 = (char *)*(id *)(v10 + 8 * v12 + 32);
          v14 = v13;
          v15 = &v13[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x23B85DBF0](&v13[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            v16 = v10;
            v17 = v11;
            v18 = *((_QWORD *)v15 + 1);
            ObjectType = swift_getObjectType();
            v77 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            v78 = &off_250BC0E70;
            v74 = (uint64_t)v8;
            v20 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 32);
            v21 = v8;
            v22 = v18;
            v11 = v17;
            v10 = v16;
            v20(2, &v74, ObjectType, v22);
            swift_unknownObjectRelease();
            sub_23A963B3C((uint64_t)&v74);
          }
          if (MEMORY[0x23B85DBF0](v15))
          {
            v23 = *((_QWORD *)v15 + 1);
            v24 = swift_getObjectType();
            v77 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            v78 = &off_250BC0E70;
            v74 = (uint64_t)v8;
            v25 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v23 + 48);
            v26 = v8;
            v25(1, &v74, v24, v23);
            swift_unknownObjectRelease();
            sub_23A963B3C((uint64_t)&v74);
          }

          ++v12;
        }
        while (v11 != v12);
      }
    }
    swift_bridgeObjectRelease_n();

    v2 = v68;
    v6 = v69;
LABEL_23:
    v33 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
    if (*(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession])
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v34 = sub_23AA32EA0();
      sub_23A9620E8(v34, (uint64_t)qword_2569E0040);
      v35 = v2;
      v36 = sub_23AA32E88();
      v37 = sub_23AA33218();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v38 = 138412290;
        v74 = (uint64_t)v35;
        v40 = v35;
        sub_23AA333F8();
        *v39 = v35;

        _os_log_impl(&dword_23A95E000, v36, v37, "ðŸ§­ FMR1NISubscr%@: asking to start localizer", v38, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v39, -1, -1);
        MEMORY[0x23B85DB24](v38, -1, -1);
      }
      else
      {

        v36 = v35;
      }
    }
    else
    {
      v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFE38]), sel_init);
      v42 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
      if (v42)
      {
        v43 = v42;
        objc_msgSend(v41, sel_setARSession_, v43);
        objc_msgSend(v43, sel_setDelegate_, v6);

      }
      objc_msgSend(v41, sel_setDelegate_, v6);
      v74 = (uint64_t)v41;
      v44 = sub_23AA33824();
      v46 = v45;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v47 = sub_23AA32EA0();
      sub_23A9620E8(v47, (uint64_t)qword_2569E0040);
      v48 = v2;
      swift_bridgeObjectRetain();
      v49 = sub_23AA32E88();
      v50 = sub_23AA33218();
      if (os_log_type_enabled(v49, v50))
      {
        v70 = v6;
        v51 = swift_slowAlloc();
        v64 = v44;
        v52 = (_QWORD *)swift_slowAlloc();
        v67 = swift_slowAlloc();
        v81 = v67;
        *(_DWORD *)v51 = 138412546;
        type = v50;
        log = v49;
        v74 = (uint64_t)v48;
        v73 = v41;
        v53 = v48;
        sub_23AA333F8();
        *v52 = v48;

        *(_WORD *)(v51 + 12) = 2080;
        swift_bridgeObjectRetain();
        v54 = sub_23A9E2E00(9uLL, v64, v46);
        v56 = v55;
        v58 = v57;
        v60 = v59;
        swift_bridgeObjectRelease();
        v79 = 7876668;
        v80 = 0xE300000000000000;
        v74 = v54;
        v75 = v56;
        v76 = v58;
        v77 = v60;
        sub_23A96F764();
        sub_23AA3302C();
        swift_bridgeObjectRelease();
        v74 = v79;
        v75 = v80;
        swift_bridgeObjectRetain();
        sub_23AA33038();
        swift_bridgeObjectRelease();
        v74 = sub_23A964DBC(v74, v75, &v81);
        v41 = v73;
        sub_23AA333F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A95E000, log, type, "ðŸ§­ FMR1NISubscr%@: asking to start localizer, created item localizer <%s> and will re-configure", (uint8_t *)v51, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v52, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v67, -1, -1);
        v61 = v51;
        v6 = v70;
        MEMORY[0x23B85DB24](v61, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v62 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
      if (v62)
      {
        v63 = swift_retain();
        v62(v63);
        sub_23A98C874((uint64_t)v62);
      }
      v36 = *(NSObject **)&v6[v33];
      *(_QWORD *)&v6[v33] = v41;
    }

    *((_BYTE *)v2 + OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession) = 1;
    sub_23A986B10();

    return;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v27 = sub_23AA32EA0();
  sub_23A9620E8(v27, (uint64_t)qword_2569E0040);
  v72 = v2;
  v28 = sub_23AA32E88();
  v29 = sub_23AA33218();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v30 = 138412290;
    v74 = (uint64_t)v72;
    v32 = v72;
    sub_23AA333F8();
    *v31 = v72;

    _os_log_impl(&dword_23A95E000, v28, v29, "ðŸ§­ FMR1NISubscr%@: asking to start localizer but no context", v30, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v31, -1, -1);
    MEMORY[0x23B85DB24](v30, -1, -1);

  }
  else
  {

  }
}

void sub_23A989284()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  void *v9;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v2;
    sub_23AA333F8();
    *v6 = v2;

    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1NISubscr%@: asking to stop localizer", v5, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v2[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession] = 0;
  v8 = MEMORY[0x23B85DBF0](&v2[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context]);
  if (v8)
  {
    v9 = (void *)v8;
    sub_23A986B10();

  }
}

uint64_t sub_23A98946C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_23A989500(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  objc_class *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  objc_super v35;
  uint64_t v36;

  v33 = a1;
  v32 = sub_23AA33284();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA33260();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts] = MEMORY[0x24BEE4B00];
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions] = MEMORY[0x24BEE4AF8];
  v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount] = 0;
  v31 = OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v9 = v1;
  sub_23AA32EF4();
  v36 = v8;
  sub_23A961DE4((unint64_t *)&unk_2569D6100, v6, MEMORY[0x24BEE5698]);
  sub_23A964084((uint64_t *)&unk_2569D5B40);
  sub_23A990C70();
  sub_23AA3344C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5750], v32);
  *(_QWORD *)&v1[v31] = sub_23AA332B4();
  v10 = v33;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession] = v33;
  v11 = v10;

  v12 = (objc_class *)type metadata accessor for FMNearbyInteractionManager();
  v35.receiver = v9;
  v35.super_class = v12;
  v13 = objc_msgSendSuper2(&v35, sel_init);
  v14 = (void *)objc_opt_self();
  v15 = v13;
  v16 = objc_msgSend(v14, sel_defaultCenter);
  objc_msgSend(v16, sel_addObserver_selector_name_object_, v15, sel_applicationDidEnterBackground, *MEMORY[0x24BEBDF98], 0);

  v17 = objc_msgSend(v14, sel_defaultCenter);
  objc_msgSend(v17, sel_addObserver_selector_name_object_, v15, sel_applicationWillEnterForeground, *MEMORY[0x24BEBE008], 0);

  if (qword_2569D4AC0 != -1)
    swift_once();
  v18 = sub_23AA32EA0();
  sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
  v19 = v15;
  v20 = sub_23AA32E88();
  v21 = sub_23AA33218();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v33 = v11;
    v24 = v23;
    v36 = v23;
    *(_DWORD *)v22 = 136315138;
    v25 = objc_msgSend(v19, sel_description);
    v26 = sub_23AA32FD8();
    v28 = v27;

    v34 = sub_23A964DBC(v26, v28, &v36);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMR1NIMgr%s: init (v14)", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v24, -1, -1);
    MEMORY[0x23B85DB24](v22, -1, -1);

  }
  else
  {

  }
  return v19;
}

void sub_23A989984()
{
  NSObject *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  NSObject *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  if (qword_2569D4AC0 != -1)
LABEL_31:
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v0 = sub_23AA32E88();
  v3 = sub_23AA33218();
  if (os_log_type_enabled(v0, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    v6 = v2;
    sub_23AA333F8();
    *v5 = v2;

    _os_log_impl(&dword_23A95E000, v0, v3, "ðŸ§­ FMR1NIMgr%@: entering background", v4, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v5, -1, -1);
    MEMORY[0x23B85DB24](v4, -1, -1);

  }
  else
  {

  }
  *((_BYTE *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground) = 1;
  v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts);
  swift_beginAccess();
  v8 = *v7;
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_29;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_29;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_29;
          v18 = *(_QWORD *)(v9 + 8 * v14);
          if (!v18)
          {
            v14 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_29;
            v18 = *(_QWORD *)(v9 + 8 * v14);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_28:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    v0 = *(NSObject **)(*(_QWORD *)(v8 + 56) + 8 * v16);
    *((_BYTE *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground) = 1;
    sub_23A984AD4();
    sub_23A986B10();
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_28;
  }
  __break(1u);
}

void sub_23A989CC4()
{
  NSObject *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  NSObject *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  if (qword_2569D4AC0 != -1)
LABEL_31:
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v0 = sub_23AA32E88();
  v3 = sub_23AA33218();
  if (os_log_type_enabled(v0, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    v6 = v2;
    sub_23AA333F8();
    *v5 = v2;

    _os_log_impl(&dword_23A95E000, v0, v3, "ðŸ§­ FMR1NIMgr%@: entering foreground", v4, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v5, -1, -1);
    MEMORY[0x23B85DB24](v4, -1, -1);

  }
  else
  {

  }
  *((_BYTE *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground) = 0;
  v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts);
  swift_beginAccess();
  v8 = *v7;
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_29;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_29;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_29;
          v18 = *(_QWORD *)(v9 + 8 * v14);
          if (!v18)
          {
            v14 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_29;
            v18 = *(_QWORD *)(v9 + 8 * v14);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_28:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    v0 = *(NSObject **)(*(_QWORD *)(v8 + 56) + 8 * v16);
    *((_BYTE *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground) = 0;
    sub_23A984AD4();
    sub_23A986B10();
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_23A98A008(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  uint64_t v29;
  uint8_t *v30;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  char *v44;
  uint8_t *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint8_t *v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v61;
  unint64_t v62;
  uint8_t *v63;
  int v64;
  _QWORD *v65;
  os_log_t v66;
  uint64_t v67;
  id v68;
  uint8_t *v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_23A96545C(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v10 = &a2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts];
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_23AA1D250((uint64_t)v7);
    if ((v13 & 1) != 0)
    {
      v14 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if ((a2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground] & 1) != 0)
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v15 = sub_23AA32EA0();
        sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
        v16 = sub_23AA32E88();
        v17 = sub_23AA33218();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v18 = 0;
          _os_log_impl(&dword_23A95E000, v16, v17, "FMR1NIMgr: Cannot start discovering while application is in the background. Discovery will start when it's foregrounded", v18, 2u);
          MEMORY[0x23B85DB24](v18, -1, -1);
        }

        v14 = v16;
      }
      else
      {
        v22 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
        if (*(Class *)((char *)&v14->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession))
        {
          if (qword_2569D4AC0 != -1)
            swift_once();
          v23 = sub_23AA32EA0();
          sub_23A9620E8(v23, (uint64_t)qword_2569E0040);
          v24 = a2;
          v25 = sub_23AA32E88();
          v26 = sub_23AA33218();
          if (os_log_type_enabled(v25, v26))
          {
            v27 = (uint8_t *)swift_slowAlloc();
            v70 = swift_slowAlloc();
            v71 = v27;
            v72 = (uint64_t)v24;
            *(_DWORD *)v27 = 138412290;
            v69 = v27 + 4;
            v28 = v24;
            sub_23AA333F8();
            v29 = v70;
            *(_QWORD *)v70 = v24;

            v30 = v71;
            _os_log_impl(&dword_23A95E000, v25, v26, "ðŸ§­ FMR1NISubscr%@: asking to start discovering", v71, 0xCu);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v29, -1, -1);
            MEMORY[0x23B85DB24](v30, -1, -1);
          }
          else
          {

            v25 = v24;
          }
        }
        else
        {
          v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFE38]), sel_init);
          v32 = *(Class *)((char *)&v14->isa
                         + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession);
          if (v32)
          {
            v33 = v32;
            objc_msgSend(v31, sel_setARSession_, v33);
            objc_msgSend(v33, sel_setDelegate_, v14);

          }
          objc_msgSend(v31, sel_setDelegate_, v14);
          v72 = (uint64_t)v31;
          v71 = (uint8_t *)sub_23AA33824();
          v35 = v34;
          if (qword_2569D4AC0 != -1)
            swift_once();
          v36 = sub_23AA32EA0();
          sub_23A9620E8(v36, (uint64_t)qword_2569E0040);
          v37 = a2;
          swift_bridgeObjectRetain();
          v38 = sub_23AA32E88();
          v39 = sub_23AA33218();
          v40 = v39;
          if (os_log_type_enabled(v38, v39))
          {
            v41 = swift_slowAlloc();
            v68 = v31;
            v70 = v41;
            v42 = (_QWORD *)swift_slowAlloc();
            v65 = v42;
            v67 = swift_slowAlloc();
            v78 = v67;
            *(_DWORD *)v70 = 138412546;
            v66 = v38;
            v62 = v35;
            v72 = (uint64_t)v37;
            v69 = (uint8_t *)v22;
            v43 = v37;
            v64 = v40;
            v44 = v43;
            sub_23AA333F8();
            *v42 = v37;

            v45 = (uint8_t *)v70;
            *(_WORD *)(v70 + 12) = 2080;
            v63 = v45 + 14;
            v46 = v62;
            swift_bridgeObjectRetain();
            v47 = sub_23A9E2E00(9uLL, (uint64_t)v71, v46);
            v49 = v48;
            v51 = v50;
            v53 = v52;
            swift_bridgeObjectRelease();
            v76 = 7876668;
            v77 = 0xE300000000000000;
            v72 = v47;
            v73 = v49;
            v74 = v51;
            v75 = v53;
            sub_23A96F764();
            sub_23AA3302C();
            v22 = (uint64_t)v69;
            swift_bridgeObjectRelease();
            v72 = v76;
            v73 = v77;
            swift_bridgeObjectRetain();
            sub_23AA33038();
            swift_bridgeObjectRelease();
            v72 = sub_23A964DBC(v72, v73, &v78);
            sub_23AA333F8();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            v54 = v66;
            _os_log_impl(&dword_23A95E000, v66, (os_log_type_t)v64, "ðŸ§­ FMR1NISubscr%@: asking to start discovering, created item localizer <%s> and will re-configure", v45, 0x16u);
            sub_23A964084(&qword_2569D6058);
            v55 = v65;
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v55, -1, -1);
            v56 = v67;
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v56, -1, -1);
            v57 = v45;
            v31 = v68;
            MEMORY[0x23B85DB24](v57, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v58 = *(void (**)(uint64_t))((char *)&v14->isa
                                               + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler);
          if (v58)
          {
            v59 = swift_retain();
            v58(v59);
            sub_23A98C874((uint64_t)v58);
          }
          v25 = *(NSObject **)((char *)&v14->isa + v22);
          *(Class *)((char *)&v14->isa + v22) = (Class)v31;
        }

        sub_23A98603C();
      }
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v19 = sub_23AA32EA0();
  sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
  v14 = sub_23AA32E88();
  v20 = sub_23AA33218();
  if (os_log_type_enabled(v14, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_23A95E000, v14, v20, "FMR1NIMgr: Cannot start discovering without subscribing first.", v21, 2u);
    MEMORY[0x23B85DB24](v21, -1, -1);
  }
LABEL_31:

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23A98A794@<X0>(_QWORD *a1@<X0>, NSObject *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void (*a5)(uint64_t, uint64_t)@<X4>, __int16 a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  os_log_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  NSObject *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  char v44;
  void *v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  void (**v53)();
  uint64_t v54;
  void (**v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char isUniquelyReferenced_nonNull_native;
  objc_class *v62;
  _BYTE *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  char *v69;
  id v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t (*v89)(char *, uint64_t);
  id v90;
  void (*v91)(uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  id v94;
  Class isa;
  uint64_t v96;
  void *v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  os_log_t v114;
  id v115;
  id v116;
  uint64_t result;
  id v118;
  void (*v119)(uint64_t, uint64_t);
  unint64_t v120;
  char v121;
  char *v122;
  char *v123;
  void *v124;
  id v125;
  objc_class *v126;
  _BYTE *v127;
  char *v128;
  char *v129;
  id v130;
  char *v131;
  id v132;
  id v133;
  _QWORD *v134;
  char *v135;
  _QWORD v136[3];
  int v137;
  _QWORD *v138;
  os_log_t v139;
  void (*v140)(uint64_t, uint64_t);
  os_log_t v141;
  id v142;
  uint64_t v143;
  id v144;
  char *v145;
  _QWORD *v146;
  void (*v147)(uint64_t, uint64_t);
  void (**v148)(_QWORD, _QWORD, _QWORD);
  char *v149;
  id v150;
  uint64_t v151;
  objc_super v152;
  uint64_t v153;
  objc_super v154;
  _QWORD v155[3];
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);

  v147 = a5;
  v150 = a4;
  v142 = a3;
  v146 = a7;
  v151 = sub_23AA32E1C();
  v148 = *(void (***)(_QWORD, _QWORD, _QWORD))(v151 - 8);
  v11 = MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v136 - v13;
  v15 = a1[3];
  v16 = a1[4];
  sub_23A96545C(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  v17 = (char *)a2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
  swift_beginAccess();
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 16);
  v145 = v14;
  if (!v18
    || (swift_bridgeObjectRetain(), sub_23AA1D250((uint64_t)v14), v20 = v19, swift_bridgeObjectRelease(), (v20 & 1) == 0))
  {
    v143 = v7;
    sub_23A963A14((uint64_t)a1, (uint64_t)v155);
    if (a6 >= 0)
      v44 = a6;
    else
      v44 = HIBYTE(a6) & 0x7F;
    LOBYTE(v153) = v44;
    LOWORD(v158) = a6;
    v45 = *(Class *)((char *)&a2->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
    v46 = objc_allocWithZone((Class)type metadata accessor for FMNearbyInteractionLocalizerContext());
    v47 = v45;
    v48 = (char *)sub_23A983138((uint64_t)v155, (char *)&v153, (__int16 *)&v158, v45);
    v49 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v50 = &v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
    v51 = *(_QWORD *)&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
    v50->isa = (Class)sub_23A990798;
    v50[1].isa = (Class)v49;
    v139 = v50;
    sub_23A98C874(v51);
    v52 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v53 = (void (**)())&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
    v54 = *(_QWORD *)&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
    *v53 = sub_23A9907A0;
    v53[1] = (void (*)())v52;
    sub_23A98C874(v54);
    v141 = a2;
    v55 = v148;
    v56 = (uint64_t)a1;
    v57 = (uint64_t)v149;
    v58 = v14;
    v59 = v151;
    ((void (**)(char *, char *, uint64_t))v148)[2](v149, v58, v151);
    swift_beginAccess();
    v60 = v48;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v158 = *(void (**)(uint64_t, uint64_t))v17;
    *(_QWORD *)v17 = 0x8000000000000000;
    sub_23A97FA04((uint64_t)v60, v57, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v17 = v158;
    swift_bridgeObjectRelease();
    v140 = (void (*)(uint64_t, uint64_t))v55[1];
    v140(v57, v59);
    swift_endAccess();
    v144 = (id)v56;
    sub_23A963A14(v56, (uint64_t)v155);
    v62 = (objc_class *)type metadata accessor for FMNearbyInteractionManagerSubscription();
    v63 = objc_allocWithZone(v62);
    v64 = &v63[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
    *(_QWORD *)&v63[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber + 8] = 0;
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    v63[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession] = 0;
    v65 = v60;
    swift_unknownObjectRetain();
    v66 = v63;
    sub_23AA32E10();
    v67 = (void (*)(char *, uint64_t, uint64_t))v55[4];
    v68 = (char *)v141;
    v67(&v66[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier], v57, v59);
    *((_QWORD *)v64 + 1) = v147;
    v69 = v65;
    swift_unknownObjectWeakAssign();
    sub_23A963A14((uint64_t)v155, (uint64_t)&v66[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_findable]);
    swift_unknownObjectWeakAssign();

    v154.receiver = v66;
    v154.super_class = v62;
    v70 = objc_msgSendSuper2(&v154, sel_init);
    swift_unknownObjectRelease();

    sub_23A963B3C((uint64_t)v155);
    sub_23A9850F8(v70);
    v71 = &v68[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions];
    swift_beginAccess();
    v150 = v70;
    MEMORY[0x23B85CC30]();
    if (*(_QWORD *)((*(_QWORD *)v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v71 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_23AA330D4();
    sub_23AA330EC();
    sub_23AA330C8();
    swift_endAccess();
    if ((v68[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground] & 1) != 0)
    {
      v72 = (uint64_t)v144;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v73 = sub_23AA32EA0();
      sub_23A9620E8(v73, (uint64_t)qword_2569E0040);
      sub_23A963A14(v72, (uint64_t)v155);
      v74 = v68;
      v75 = sub_23AA32E88();
      v76 = sub_23AA33218();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = swift_slowAlloc();
        v148 = (void (**)(_QWORD, _QWORD, _QWORD))v69;
        v78 = v77;
        v79 = (_QWORD *)swift_slowAlloc();
        v144 = v79;
        v147 = (void (*)(uint64_t, uint64_t))swift_slowAlloc();
        v158 = v147;
        *(_DWORD *)v78 = 138412546;
        v153 = (uint64_t)v74;
        v80 = v74;
        sub_23AA333F8();
        *v79 = v68;

        *(_WORD *)(v78 + 12) = 2080;
        v142 = (id)(v78 + 14);
        v81 = v156;
        v82 = v157;
        sub_23A96545C(v155, v156);
        v83 = v149;
        (*(void (**)(uint64_t, uint64_t))(v82 + 16))(v81, v82);
        sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v84 = v151;
        v85 = sub_23AA33710();
        v87 = v86;
        v88 = v83;
        v89 = (uint64_t (*)(char *, uint64_t))v140;
        v140((uint64_t)v88, v84);
        v153 = sub_23A964DBC(v85, v87, (uint64_t *)&v158);
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        sub_23A963B3C((uint64_t)v155);
        _os_log_impl(&dword_23A95E000, v75, v76, "ðŸ§­ FMR1NIMgr%@: setting up for '%s', but in background", (uint8_t *)v78, 0x16u);
        sub_23A964084(&qword_2569D6058);
        v90 = v144;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v90, -1, -1);
        v91 = v147;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v91, -1, -1);
        MEMORY[0x23B85DB24](v78, -1, -1);

LABEL_31:
        result = v89(v145, v84);
        goto LABEL_52;
      }

      sub_23A963B3C((uint64_t)v155);
    }
    else
    {
      v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFE38]), sel_init);
      v93 = (uint64_t)v144;
      if (v142)
      {
        v94 = v142;
        objc_msgSend(v92, sel_setARSession_, v94);
        objc_msgSend(v94, sel_setDelegate_, v65);

      }
      objc_msgSend(v92, sel_setDelegate_, v65);
      isa = v139->isa;
      if (v139->isa)
      {
        v96 = swift_retain();
        ((void (*)(uint64_t))isa)(v96);
        sub_23A98C874((uint64_t)isa);
      }
      v97 = *(void **)&v69[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
      *(_QWORD *)&v69[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession] = v92;
      v98 = (void (*)(uint64_t, uint64_t))v92;

      if (qword_2569D4AC0 != -1)
        swift_once();
      v99 = sub_23AA32EA0();
      sub_23A9620E8(v99, (uint64_t)qword_2569E0040);
      sub_23A963A14(v93, (uint64_t)v155);
      v100 = v68;
      v101 = sub_23AA32E88();
      v102 = sub_23AA33218();
      if (os_log_type_enabled(v101, v102))
      {
        v103 = swift_slowAlloc();
        v148 = (void (**)(_QWORD, _QWORD, _QWORD))v69;
        v104 = v103;
        v105 = (_QWORD *)swift_slowAlloc();
        v142 = v105;
        v144 = (id)swift_slowAlloc();
        v158 = (void (*)(uint64_t, uint64_t))v144;
        *(_DWORD *)v104 = 138412546;
        v139 = v101;
        v147 = v98;
        v153 = (uint64_t)v100;
        v106 = v100;
        sub_23AA333F8();
        *v105 = v68;

        *(_WORD *)(v104 + 12) = 2080;
        v107 = v156;
        v108 = v157;
        sub_23A96545C(v155, v156);
        v109 = v149;
        (*(void (**)(uint64_t, uint64_t))(v108 + 16))(v107, v108);
        sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v84 = v151;
        v110 = sub_23AA33710();
        v112 = v111;
        v113 = v109;
        v89 = (uint64_t (*)(char *, uint64_t))v140;
        v140((uint64_t)v113, v84);
        v153 = sub_23A964DBC(v110, v112, (uint64_t *)&v158);
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        sub_23A963B3C((uint64_t)v155);
        v114 = v139;
        _os_log_impl(&dword_23A95E000, v139, v102, "ðŸ§­ FMR1NIMgr%@: setting up for '%s', created niSession", (uint8_t *)v104, 0x16u);
        sub_23A964084(&qword_2569D6058);
        v115 = v142;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v115, -1, -1);
        v116 = v144;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v116, -1, -1);
        MEMORY[0x23B85DB24](v104, -1, -1);

        goto LABEL_31;
      }

      sub_23A963B3C((uint64_t)v155);
    }
    result = ((uint64_t (*)(char *, uint64_t))v140)(v145, v151);
    goto LABEL_52;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v21 = sub_23AA32EA0();
  sub_23A9620E8(v21, (uint64_t)qword_2569E0040);
  sub_23A963A14((uint64_t)a1, (uint64_t)v155);
  v22 = a2;
  v23 = sub_23AA32E88();
  v24 = sub_23AA33218();
  v25 = v24;
  v26 = os_log_type_enabled(v23, v24);
  v141 = v22;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v144 = a1;
    v28 = v27;
    v29 = (_QWORD *)swift_slowAlloc();
    v138 = v29;
    v140 = (void (*)(uint64_t, uint64_t))swift_slowAlloc();
    v158 = v140;
    *(_DWORD *)v28 = 138412802;
    v139 = v23;
    v143 = v7;
    v153 = (uint64_t)v22;
    v136[2] = &v154;
    v30 = v22;
    v137 = v25;
    v31 = v30;
    sub_23AA333F8();
    *v29 = v22;

    *(_WORD *)(v28 + 12) = 2080;
    v136[1] = v28 + 14;
    v33 = v156;
    v32 = v157;
    sub_23A96545C(v155, v156);
    v34 = v149;
    (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v33, v32);
    sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v35 = v151;
    v36 = sub_23AA33710();
    v38 = v37;
    ((void (*)(char *, uint64_t))v148[1])(v34, v35);
    v153 = sub_23A964DBC(v36, v38, (uint64_t *)&v158);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)v155);
    *(_WORD *)(v28 + 22) = 2080;
    if (*((_BYTE *)&v31->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground))
      v39 = 0x6B636162206E6928;
    else
      v39 = 0;
    if (*((_BYTE *)&v31->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground))
      v40 = 0xEF29646E756F7267;
    else
      v40 = 0xE000000000000000;
    v153 = sub_23A964DBC(v39, v40, (uint64_t *)&v158);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    v22 = v139;
    _os_log_impl(&dword_23A95E000, v139, (os_log_type_t)v137, "ðŸ§­ FMR1NIMgr%@: setting up for '%s' but item already known %s", (uint8_t *)v28, 0x20u);
    sub_23A964084(&qword_2569D6058);
    v41 = v138;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v41, -1, -1);
    v42 = v140;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v42, -1, -1);
    v43 = v28;
    a1 = v144;
    MEMORY[0x23B85DB24](v43, -1, -1);
  }
  else
  {

    sub_23A963B3C((uint64_t)v155);
  }

  v118 = v142;
  v119 = *(void (**)(uint64_t, uint64_t))v17;
  if (*(_QWORD *)(*(_QWORD *)v17 + 16))
  {
    swift_bridgeObjectRetain();
    v120 = sub_23AA1D250((uint64_t)v14);
    if ((v121 & 1) != 0)
    {
      v122 = *(char **)(*((_QWORD *)v119 + 7) + 8 * v120);
      v123 = v122;
    }
    else
    {
      v122 = 0;
    }
    swift_bridgeObjectRelease();
    if (v118)
      goto LABEL_43;
  }
  else
  {
    v122 = 0;
    if (v142)
    {
LABEL_43:
      if (v122)
      {
        objc_msgSend(*(id *)&v122[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession], sel_setARSession_, v118);
        v124 = v122;
      }
      else
      {
        v125 = v118;
        v124 = 0;
      }
      objc_msgSend(v118, sel_setDelegate_, v124);

      goto LABEL_47;
    }
  }
  v124 = v122;
LABEL_47:
  sub_23A963A14((uint64_t)a1, (uint64_t)v155);
  v126 = (objc_class *)type metadata accessor for FMNearbyInteractionManagerSubscription();
  v127 = objc_allocWithZone(v126);
  v128 = &v127[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
  *(_QWORD *)&v127[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v127[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession] = 0;
  swift_unknownObjectRetain();
  v129 = v127;
  v130 = v124;
  v131 = v149;
  sub_23AA32E10();
  ((void (**)(char *, char *, uint64_t))v148)[4](&v129[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier], v131, v151);
  *((_QWORD *)v128 + 1) = v147;
  swift_unknownObjectWeakAssign();
  sub_23A963A14((uint64_t)v155, (uint64_t)&v129[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_findable]);
  swift_unknownObjectWeakAssign();

  v152.receiver = v129;
  v152.super_class = v126;
  v132 = objc_msgSendSuper2(&v152, sel_init);
  swift_unknownObjectRelease();

  sub_23A963B3C((uint64_t)v155);
  if (v122)
  {
    v133 = v130;
    sub_23A9850F8(v132);

  }
  v134 = (Class *)((char *)&v141->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions);
  swift_beginAccess();
  v150 = v132;
  MEMORY[0x23B85CC30]();
  v135 = v145;
  if (*(_QWORD *)((*v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v134 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23AA330D4();
  sub_23AA330EC();
  sub_23AA330C8();
  swift_endAccess();

  result = ((uint64_t (*)(char *, uint64_t))v148[1])(v135, v151);
LABEL_52:
  *v146 = v150;
  return result;
}

void sub_23A98B7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount;
    if (*(uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount) < 1)
    {
LABEL_18:
      v19 = *(_QWORD *)&v3[v4];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (!v20)
      {
        *(_QWORD *)&v3[v4] = v21;

        return;
      }
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    if (qword_2569D4AC0 != -1)
      swift_once();
    v5 = sub_23AA32EA0();
    sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
    v6 = v3;
    v7 = sub_23AA32E88();
    v8 = sub_23AA33218();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412546;
      v11 = v6;
      sub_23AA333F8();
      *v10 = v3;

      *(_WORD *)(v9 + 12) = 2048;
      sub_23AA333F8();

      _os_log_impl(&dword_23A95E000, v7, v8, "ðŸ§­ FMR1NIMgr%@: previous item localizers still exist (%ld)", (uint8_t *)v9, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v10, -1, -1);
      MEMORY[0x23B85DB24](v9, -1, -1);
    }
    else
    {

      v7 = v6;
    }

    swift_beginAccess();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_23A98BAB8(v12);
    v14 = v13;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_23AA335C0();
      if (v15)
        goto LABEL_10;
    }
    else
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_10:
        if (v15 < 1)
          goto LABEL_22;
        for (i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0)
            v17 = (id)MEMORY[0x23B85D0B0](i, v14);
          else
            v17 = *(id *)(v14 + 8 * i + 32);
          v18 = v17;
          sub_23A9845D0();

        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
}

uint64_t sub_23A98BAB8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v15 = MEMORY[0x24BEE4AF8];
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_22:
    v13 = *(char **)(*(_QWORD *)(v1 + 56) + 8 * v9);
    if (*(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession])
    {
      v14 = v13;
      sub_23AA33554();
      sub_23AA33578();
      sub_23AA33584();
      result = sub_23AA33560();
    }
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v10);
  ++v2;
  if (v11)
    goto LABEL_21;
  v2 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 2;
  if (v10 + 2 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 3;
  if (v10 + 3 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_24:
    swift_release();
    return v15;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_24;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_23A98BC68(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (char *)MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount];
    v4 = __OFSUB__(v3, 1);
    v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount] = v5;

    }
  }
}

uint64_t sub_23A98BCCC(NSObject *a1, void *a2)
{
  NSObject *v2;
  NSObject *v5;
  Class isa;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(uint64_t, id);
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  char *v21;
  NSObject *v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  void (**v34)(uint64_t, id);
  void (*v35)(uint64_t, id);
  void (**v36)(uint64_t, id);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  BOOL v44;
  uint64_t v45;
  NSObject *v46;
  char *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint8_t *v53;
  char *v54;
  char *v55;
  uint8_t *v56;
  uint64_t v57;
  void (**v58)(uint64_t, id);
  void (*v59)(uint64_t, id);
  void (**v60)(uint64_t, id);
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  os_log_t v64;
  uint8_t *v65;
  os_log_t v66;
  uint8_t *v67;
  uint64_t v68;
  NSObject *v69;
  char *v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  char *v77;
  uint8_t *v78;
  os_log_t v79;
  uint64_t v80;
  void (**v81)(uint64_t, id);
  void (*v82)(uint64_t, id);
  void (**v83)(uint64_t, id);
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  os_log_t v87;
  NSObject *v88;
  uint64_t v89;
  NSObject *v90;
  uint64_t *v91;
  void (**v92)(uint64_t, id);
  uint8_t *v94;
  uint8_t *v95;
  os_log_t v96;
  os_log_t v97;
  uint64_t v98;
  NSObject *v99;
  NSObject *v100;
  objc_class *v101;
  uint64_t v102;
  void (**v103)(uint64_t, id);
  os_log_t v104;
  _QWORD v105[3];
  uint64_t v106;
  void (**v107)(uint64_t, id);

  v5 = sub_23AA32E1C();
  isa = v5[-1].isa;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A963A14((uint64_t)a2 + OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_findable, (uint64_t)v105);
  v9 = v106;
  v10 = v107;
  sub_23A96545C(v105, v106);
  v10[2](v9, v10);
  sub_23A963B3C((uint64_t)v105);
  v11 = (char *)a1 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_23AA1D250((uint64_t)v8);
    if ((v14 & 1) != 0)
    {
      v2 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v10 = a2;
      v15 = swift_bridgeObjectRetain();
      v16 = 0;
      v17 = sub_23A9907A8(v15);
      swift_bridgeObjectRelease();

      if (v17 >> 62)
        v18 = sub_23AA335C0();
      else
        v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v18)
      {
        v102 = 0;
        v103 = v10;
        if (qword_2569D4AC0 != -1)
          goto LABEL_37;
        while (1)
        {
          v19 = sub_23AA32EA0();
          sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
          v20 = v2;
          v21 = a1;
          v22 = v20;
          v23 = v21;
          v24 = sub_23AA32E88();
          v25 = sub_23AA33218();
          v26 = v25;
          if (os_log_type_enabled(v24, v25))
          {
            v27 = swift_slowAlloc();
            v101 = isa;
            v28 = v27;
            v29 = (_QWORD *)swift_slowAlloc();
            v98 = swift_slowAlloc();
            v104 = (os_log_t)v98;
            *(_DWORD *)v28 = 138412546;
            LODWORD(v97) = v26;
            v105[0] = v23;
            v100 = a1;
            v30 = v23;
            v99 = v5;
            v31 = v30;
            sub_23AA333F8();
            *v29 = v23;
            v32 = v29;

            *(_WORD *)(v28 + 12) = 2080;
            v2 = v105;
            sub_23A963A14((uint64_t)v22 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v105);
            v33 = v106;
            v34 = v107;
            sub_23A96545C(v105, v106);
            v35 = v34[1];
            v36 = v34;
            a1 = v100;
            v37 = ((uint64_t (*)(uint64_t, _QWORD))v35)(v33, v36);
            v39 = v38;
            sub_23A963B3C((uint64_t)v105);
            v105[0] = sub_23A964DBC(v37, v39, (uint64_t *)&v104);
            v5 = v99;
            sub_23AA333F8();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23A95E000, v24, (os_log_type_t)v97, "ðŸ§­ FMR1NIMgr%@: unsubscribing, did not tear down, subscriptions still exist '%s'", (uint8_t *)v28, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v32, -1, -1);
            v40 = v98;
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v40, -1, -1);
            v41 = v28;
            isa = v101;
            MEMORY[0x23B85DB24](v41, -1, -1);

          }
          else
          {

          }
          v10 = v103;
          sub_23A985580(v103);
LABEL_29:

          (*((void (**)(char *, NSObject *))isa + 1))(v8, v5);
          v91 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions);
          swift_beginAccess();
          v92 = v10;
          v5 = sub_23A990940(v91, (uint64_t)v92);

          if ((unint64_t)*v91 >> 62)
          {
            swift_bridgeObjectRetain();
            a1 = sub_23AA335C0();
            swift_bridgeObjectRelease();
            if ((uint64_t)a1 >= (uint64_t)v5)
              goto LABEL_31;
          }
          else
          {
            a1 = *(NSObject **)((*v91 & 0xFFFFFFFFFFFFF8) + 0x10);
            if ((uint64_t)a1 >= (uint64_t)v5)
              goto LABEL_31;
          }
          __break(1u);
LABEL_37:
          swift_once();
        }
      }
LABEL_13:
      v44 = (*((unsigned __int8 *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity) | 4) == 5;
      v100 = v2;
      if (v44)
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v45 = sub_23AA32EA0();
        sub_23A9620E8(v45, (uint64_t)qword_2569E0040);
        v46 = v2;
        v47 = a1;
        v2 = v46;
        v48 = v47;
        v49 = sub_23AA32E88();
        v50 = sub_23AA33218();
        LODWORD(v98) = v50;
        if (os_log_type_enabled(v49, v50))
        {
          v51 = swift_slowAlloc();
          v102 = v16;
          v99 = v2;
          v52 = (uint8_t *)v51;
          v53 = (uint8_t *)swift_slowAlloc();
          v95 = v53;
          v97 = (os_log_t)swift_slowAlloc();
          v104 = v97;
          v94 = v52;
          *(_DWORD *)v52 = 138412546;
          v96 = v49;
          v105[0] = v48;
          v101 = isa;
          v54 = v48;
          v103 = v10;
          v55 = v54;
          sub_23AA333F8();
          *(_QWORD *)v53 = v48;

          v56 = v94;
          *((_WORD *)v94 + 6) = 2080;
          sub_23A963A14((uint64_t)v99 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v105);
          v57 = v106;
          v58 = v107;
          sub_23A96545C(v105, v106);
          v59 = v58[1];
          v60 = v58;
          v10 = v103;
          v61 = ((uint64_t (*)(uint64_t, _QWORD))v59)(v57, v60);
          v63 = v62;
          sub_23A963B3C((uint64_t)v105);
          v105[0] = sub_23A964DBC(v61, v63, (uint64_t *)&v104);
          isa = v101;
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          v64 = v96;
          _os_log_impl(&dword_23A95E000, v96, (os_log_type_t)v98, "ðŸ§­ FMR1NIMgr%@: tore down '%s' (stopping first)", v56, 0x16u);
          sub_23A964084(&qword_2569D6058);
          v65 = v95;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v65, -1, -1);
          v66 = v97;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v66, -1, -1);
          v67 = v56;
          v2 = v99;
          MEMORY[0x23B85DB24](v67, -1, -1);

        }
        else
        {

        }
        sub_23A9845D0();
      }
      else
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v68 = sub_23AA32EA0();
        sub_23A9620E8(v68, (uint64_t)qword_2569E0040);
        v69 = v2;
        v70 = a1;
        v2 = v69;
        v71 = v70;
        v72 = sub_23AA32E88();
        v73 = sub_23AA33218();
        LODWORD(v102) = v73;
        if (os_log_type_enabled(v72, v73))
        {
          v74 = swift_slowAlloc();
          v96 = v2;
          v75 = (uint8_t *)v74;
          v99 = swift_slowAlloc();
          v76 = swift_slowAlloc();
          v98 = v76;
          v94 = v75;
          *(_DWORD *)v75 = 138412546;
          v97 = v72;
          v103 = v10;
          v104 = (os_log_t)v76;
          v105[0] = v71;
          v101 = isa;
          v77 = v71;
          sub_23AA333F8();
          v99->isa = (Class)v71;

          v78 = v94;
          *((_WORD *)v94 + 6) = 2080;
          v95 = v78 + 14;
          v79 = v96;
          sub_23A963A14((uint64_t)v96 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v105);
          v80 = v106;
          v81 = v107;
          sub_23A96545C(v105, v106);
          v82 = v81[1];
          v83 = v81;
          isa = v101;
          v84 = ((uint64_t (*)(uint64_t, _QWORD))v82)(v80, v83);
          v86 = v85;
          sub_23A963B3C((uint64_t)v105);
          v105[0] = sub_23A964DBC(v84, v86, (uint64_t *)&v104);
          sub_23AA333F8();

          v10 = v103;
          swift_bridgeObjectRelease();
          v87 = v97;
          v2 = v78;
          _os_log_impl(&dword_23A95E000, v97, (os_log_type_t)v102, "ðŸ§­ FMR1NIMgr%@: unsubscribing, tore down '%s'", v78, 0x16u);
          sub_23A964084(&qword_2569D6058);
          v88 = v99;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v88, -1, -1);
          v89 = v98;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v89, -1, -1);
          MEMORY[0x23B85DB24](v2, -1, -1);

        }
        else
        {

        }
      }
      v90 = v100;
      sub_23A9845D0();
      swift_beginAccess();
      v22 = sub_23A97F0C8((uint64_t)v8);
      swift_endAccess();

      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
  }
  (*((void (**)(char *, NSObject *))isa + 1))(v8, v5);
  v42 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions);
  swift_beginAccess();
  v43 = a2;
  v5 = sub_23A990940(v42, (uint64_t)v43);

  v16 = *v42;
  if ((unint64_t)*v42 >> 62)
  {
    swift_bridgeObjectRetain();
    a1 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if ((uint64_t)a1 < (uint64_t)v5)
      goto LABEL_12;
  }
  else
  {
    a1 = *(NSObject **)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)a1 < (uint64_t)v5)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
  }
LABEL_31:
  sub_23A99C484((uint64_t)v5, (uint64_t)a1);
  return swift_endAccess();
}

id sub_23A98C7CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNearbyInteractionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMNearbyInteractionManager()
{
  return objc_opt_self();
}

uint64_t sub_23A98C874(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23A98C884(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_23A98CA04((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_23A98CA04((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x23B85DB24](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23A98CA04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a1;
  v8 = sub_23AA32E64();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v28 - v13;
  v34 = *(_QWORD *)(a3 + 16);
  if (v34)
  {
    v29 = a2;
    v30 = v4;
    v36 = v12;
    v37 = a4 + 56;
    v33 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v38 = *(_QWORD *)(v12 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v28 = a3;
    swift_bridgeObjectRetain();
    v31 = 0;
    v16 = 0;
    while (1)
    {
      v35 = v16;
      v15(v14, v33 + v38 * v16, v8);
      v18 = a4;
      sub_23A961DE4((unint64_t *)&unk_2569D8C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], MEMORY[0x24BDDFDB0]);
      v19 = sub_23AA32F9C();
      v20 = -1 << *(_BYTE *)(a4 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v37 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      {
        v22 = ~v20;
        while (1)
        {
          v15(v11, *(_QWORD *)(a4 + 48) + v21 * v38, v8);
          sub_23A961DE4(&qword_2569D60B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], MEMORY[0x24BDDFDB8]);
          v23 = sub_23AA32FA8();
          v17 = *(void (**)(char *, uint64_t))(v36 + 8);
          v17(v11, v8);
          if ((v23 & 1) != 0)
            break;
          v21 = (v21 + 1) & v22;
          a4 = v18;
          if (((*(_QWORD *)(v37 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
            goto LABEL_4;
        }
        result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
        v25 = (v21 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v26 = *(unint64_t *)((char *)v32 + v25);
        *(unint64_t *)((char *)v32 + v25) = v26 | (1 << v21);
        if ((v26 & (1 << v21)) != 0)
        {
          a4 = v18;
        }
        else
        {
          if (__OFADD__(v31, 1))
          {
            __break(1u);
            return result;
          }
          a4 = v18;
          ++v31;
        }
      }
      else
      {
        v17 = *(void (**)(char *, uint64_t))(v36 + 8);
LABEL_4:
        v17(v14, v8);
      }
      v16 = v35 + 1;
      if (v35 + 1 == v34)
      {
        swift_bridgeObjectRelease();
        a2 = v29;
        v27 = v31;
        goto LABEL_17;
      }
    }
  }
  v27 = 0;
LABEL_17:
  swift_retain();
  return sub_23AA1F4F0(v32, a2, v27, a4);
}

uint64_t sub_23A98CCC4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B85D0B0](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = sub_23AA32DF8();

    if ((v8 & 1) != 0)
      return v5;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
      return 0;
  }
}

uint64_t sub_23A98CDD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084(&qword_2569D6078);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_23A98CE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_23A968488(0, &qword_2569D6088);
  v6 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v11[0] = 0;
  v7 = objc_msgSend(v3, sel_initWithDiscoveryToken_regions_preferredUpdateRate_error_, a1, v6, a3, v11);

  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    sub_23AA32CF0();

    swift_willThrow();
  }
  return v7;
}

id sub_23A98CF14(__int16 *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;

  if (*a1 < 0)
  {
    v20 = a2[3];
    v21 = a2[4];
    sub_23A96545C(a2, v20);
    v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFE08]), sel_initWithRole_discoveryToken_preferredUpdateRate_, 0, v22, a3);

    v23 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_deviceCapabilities), sel_supportsCameraAssistance);
    swift_unknownObjectRelease();
    objc_msgSend(v19, sel_setCameraAssistanceEnabled_, v23);
  }
  else
  {
    sub_23A964084(&qword_2569D6080);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_23AA36F20;
    v6 = objc_allocWithZone(MEMORY[0x24BDDFE30]);
    v7 = (void *)sub_23AA32FB4();
    v8 = objc_msgSend(v6, sel_initWithName_devicePresencePreset_, v7, 1);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = objc_allocWithZone(MEMORY[0x24BDDFE30]);
    v10 = (void *)sub_23AA32FB4();
    v11 = objc_msgSend(v9, sel_initWithName_devicePresencePreset_, v10, 4);

    *(_QWORD *)(v5 + 40) = v11;
    v12 = objc_allocWithZone(MEMORY[0x24BDDFE30]);
    v13 = (void *)sub_23AA32FB4();
    v14 = objc_msgSend(v12, sel_initWithName_devicePresencePreset_, v13, 5);

    *(_QWORD *)(v5 + 48) = v14;
    sub_23AA330C8();
    v15 = a2[3];
    v16 = a2[4];
    sub_23A96545C(a2, v15);
    v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    v18 = objc_allocWithZone(MEMORY[0x24BDDFDF8]);
    v19 = sub_23A98CE14((uint64_t)v17, v5, a3);

  }
  return v19;
}

uint64_t sub_23A98D2DC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t i;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(uint64_t, uint64_t *, uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t k;
  char *v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t *, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  id v58;
  char *v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  id v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t j;
  id v90;
  char *v91;
  char *v92;
  void *v93;
  id v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  float v103;
  double v104;
  void (*v105)(uint64_t, unint64_t, unint64_t, _QWORD *, id, uint64_t *, uint64_t, uint64_t, double);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[5];
  char *v110;
  unint64_t v111;
  id v112;
  id v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  id v117;
  uint64_t v118[3];
  uint64_t v119;
  _UNKNOWN **v120;
  _OWORD v121[2];
  uint64_t v122;

  v2 = v1;
  sub_23A963A14(v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v118);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  v4 = swift_dynamicCast();
  if ((v4 & 1) == 0)
  {
    v122 = 0;
    memset(v121, 0, sizeof(v121));
  }
  MEMORY[0x24BDAC7A8](v4);
  v109[2] = v121;
  v5 = sub_23AA15B88(sub_23A990CBC, (uint64_t)v109, a1);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_motionState);
    v8 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState;
    v9 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState);
    if (v7 == (id)2)
    {
      if (v9 == 4)
        goto LABEL_41;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v10 = sub_23AA32EA0();
      sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
      v11 = sub_23AA32E88();
      v12 = sub_23AA33218();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_23A95E000, v11, v12, "ðŸ§­ FMR1NIContxt: Findable motion state changed to moving", v13, 2u);
        MEMORY[0x23B85DB24](v13, -1, -1);
      }

      *(_BYTE *)(v2 + v8) = 4;
      v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
      swift_beginAccess();
      v15 = *v14;
      if ((unint64_t)*v14 >> 62)
      {
        swift_bridgeObjectRetain_n();
        result = sub_23AA335C0();
        v16 = result;
        if (!result)
          goto LABEL_40;
        goto LABEL_12;
      }
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_12:
        v116 = (uint64_t)v6;
        if (v16 >= 1)
        {
          for (i = 0; i != v16; ++i)
          {
            if ((v15 & 0xC000000000000001) != 0)
              v19 = (char *)MEMORY[0x23B85D0B0](i, v15);
            else
              v19 = (char *)*(id *)(v15 + 8 * i + 32);
            v20 = v19;
            v21 = &v19[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
            if (MEMORY[0x23B85DBF0](&v19[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
            {
              v22 = *((_QWORD *)v21 + 1);
              ObjectType = swift_getObjectType();
              v119 = type metadata accessor for FMNearbyInteractionLocalizerContext();
              v120 = &off_250BC0E70;
              v118[0] = v2;
              v24 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v22 + 48);
              v25 = (id)v2;
              v24(4, v118, ObjectType, v22);
              swift_unknownObjectRelease();
              sub_23A963B3C((uint64_t)v118);
            }

          }
LABEL_39:
          v6 = (void *)v116;
          goto LABEL_40;
        }
        __break(1u);
LABEL_73:
        __break(1u);
        return result;
      }
LABEL_40:
      swift_bridgeObjectRelease_n();
LABEL_41:
      if (qword_2569D4AC0 != -1)
        goto LABEL_65;
      while (1)
      {
        v48 = sub_23AA32EA0();
        sub_23A9620E8(v48, (uint64_t)qword_2569E0040);
        v49 = v6;
        v50 = sub_23AA32E88();
        v51 = sub_23AA33200();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          v118[0] = v53;
          *(_DWORD *)v52 = 136315138;
          objc_msgSend(v49, (SEL)0x1F41A7485);
          v54 = sub_23AA33164();
          v117 = (id)sub_23A964DBC(v54, v55, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A95E000, v50, v51, "FMNearbyInteractionContext: btUpdate: RSSI update: %s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v53, -1, -1);
          MEMORY[0x23B85DB24](v52, -1, -1);

        }
        else
        {

        }
        v56 = v49;
        v57 = (id)v2;
        v58 = v56;
        v59 = (char *)v57;
        v60 = v58;
        v61 = sub_23AA32E88();
        v62 = sub_23AA33200();
        v63 = os_log_type_enabled(v61, v62);
        v110 = v59;
        v112 = v60;
        if (v63)
        {
          v64 = swift_slowAlloc();
          v65 = (_QWORD *)swift_slowAlloc();
          v115 = v65;
          v116 = swift_slowAlloc();
          v118[0] = v116;
          *(_DWORD *)v64 = 138413826;
          v117 = v59;
          v66 = v59;
          sub_23AA333F8();
          *v65 = v59;

          *(_WORD *)(v64 + 12) = 2080;
          v67 = objc_msgSend(v112, sel_discoveryToken);
          v68 = objc_msgSend(v67, sel_description);
          v69 = sub_23AA32FD8();
          v71 = v70;

          LOBYTE(v68) = v62;
          v72 = v112;
          v117 = (id)sub_23A964DBC(v69, v71, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 22) = 2080;
          v73 = sub_23AA3323C();
          LODWORD(v117) = v73;
          BYTE4(v117) = BYTE4(v73) & 1;
          sub_23A964084((uint64_t *)&unk_2569D60D0);
          v74 = sub_23AA32FFC();
          v117 = (id)sub_23A964DBC(v74, v75, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 32) = 2080;
          v76 = sub_23AA33224();
          LODWORD(v117) = v76;
          BYTE4(v117) = BYTE4(v76) & 1;
          v77 = sub_23AA32FFC();
          v117 = (id)sub_23A964DBC(v77, v78, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 42) = 2080;
          v79 = sub_23AA33230();
          LODWORD(v117) = v79;
          BYTE4(v117) = BYTE4(v79) & 1;
          v80 = sub_23AA32FFC();
          v117 = (id)sub_23A964DBC(v80, v81, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 52) = 2080;
          v117 = objc_msgSend(v72, sel_motionState);
          type metadata accessor for NIMotionActivityState(0);
          v82 = sub_23AA32FFC();
          v117 = (id)sub_23A964DBC(v82, v83, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 62) = 2080;
          v59 = v110;
          objc_msgSend(v72, sel_boundedRegionRange);
          v84 = sub_23AA33164();
          v117 = (id)sub_23A964DBC(v84, v85, v118);
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A95E000, v61, (os_log_type_t)v68, "ðŸ§­ FMR1NIContxt%@: nearby object updated!!  %s, distance: %s Angle: %s Angle Accuracy: %s Motion State: %s Prox Measurement: %s", (uint8_t *)v64, 0x48u);
          sub_23A964084(&qword_2569D6058);
          v86 = v115;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v86, -1, -1);
          v87 = v116;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v87, -1, -1);
          MEMORY[0x23B85DB24](v64, -1, -1);

        }
        else
        {

        }
        v88 = (uint64_t *)&v59[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
        swift_beginAccess();
        v2 = *v88;
        if ((unint64_t)*v88 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v6 = (void *)sub_23AA335C0();
          if (!v6)
          {
LABEL_61:

            swift_bridgeObjectRelease_n();
            return sub_23A98CDD4((uint64_t)v121);
          }
        }
        else
        {
          v6 = *(void **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v6)
            goto LABEL_61;
        }
        v111 = v2 & 0xC000000000000001;
        for (j = 4; ; j = v116 + 1)
        {
          v90 = v112;
          v91 = v111 ? (char *)MEMORY[0x23B85D0B0](j - 4, v2) : (char *)*(id *)(v2 + 8 * j);
          v92 = v91;
          v93 = (void *)(j - 3);
          if (__OFADD__(j - 4, 1))
            break;
          v116 = j;
          v94 = objc_msgSend(v90, sel_verticalDirectionEstimate);
          v95 = &v92[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x23B85DBF0](&v92[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            v96 = 5;
            if ((unint64_t)v94 < 5)
              v96 = (uint64_t)v94;
            v115 = (_QWORD *)v96;
            v97 = *((_QWORD *)v95 + 1);
            v114 = swift_getObjectType();
            v98 = v6;
            v99 = v2;
            v100 = sub_23AA3323C();
            v101 = sub_23AA33224();
            v102 = sub_23AA33230();
            v113 = objc_msgSend(v90, sel_motionState);
            objc_msgSend(v90, sel_boundedRegionRange);
            v104 = v103;
            v119 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            v120 = &off_250BC0E70;
            v118[0] = (uint64_t)v110;
            v105 = *(void (**)(uint64_t, unint64_t, unint64_t, _QWORD *, id, uint64_t *, uint64_t, uint64_t, double))(v97 + 16);
            v106 = v110;
            v107 = HIDWORD(v100) & 1;
            v108 = v100;
            v2 = v99;
            v6 = v98;
            v105(v108 | (v107 << 32), v101 | ((HIDWORD(v101) & 1) << 32), v102 | ((HIDWORD(v102) & 1) << 32), v115, v113, v118, v114, v97, v104);
            swift_unknownObjectRelease();
            sub_23A963B3C((uint64_t)v118);

            if (v93 == v98)
              goto LABEL_61;
          }
          else
          {

            if (v93 == v6)
              goto LABEL_61;
          }
        }
        __break(1u);
LABEL_65:
        swift_once();
      }
    }
    if (v9 != 4)
      goto LABEL_41;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v33 = sub_23AA32EA0();
    sub_23A9620E8(v33, (uint64_t)qword_2569E0040);
    v34 = sub_23AA32E88();
    v35 = sub_23AA33218();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_23A95E000, v34, v35, "ðŸ§­ FMR1NIContxt: Findable motion state changed to stopped moving", v36, 2u);
      MEMORY[0x23B85DB24](v36, -1, -1);
    }

    *(_BYTE *)(v2 + v8) = 5;
    v37 = (uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
    swift_beginAccess();
    v38 = *v37;
    if ((unint64_t)*v37 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_23AA335C0();
      v39 = result;
      if (!result)
        goto LABEL_40;
    }
    else
    {
      v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (!v39)
        goto LABEL_40;
    }
    v116 = (uint64_t)v6;
    if (v39 >= 1)
    {
      for (k = 0; k != v39; ++k)
      {
        if ((v38 & 0xC000000000000001) != 0)
          v41 = (char *)MEMORY[0x23B85D0B0](k, v38);
        else
          v41 = (char *)*(id *)(v38 + 8 * k + 32);
        v42 = v41;
        v43 = &v41[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
        if (MEMORY[0x23B85DBF0](&v41[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
        {
          v44 = *((_QWORD *)v43 + 1);
          v45 = swift_getObjectType();
          v119 = type metadata accessor for FMNearbyInteractionLocalizerContext();
          v120 = &off_250BC0E70;
          v118[0] = v2;
          v46 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v44 + 48);
          v47 = (id)v2;
          v46(5, v118, v45, v44);
          swift_unknownObjectRelease();
          sub_23A963B3C((uint64_t)v118);
        }

      }
      goto LABEL_39;
    }
    goto LABEL_73;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v26 = sub_23AA32EA0();
  sub_23A9620E8(v26, (uint64_t)qword_2569E0040);
  v27 = (id)v2;
  v28 = sub_23AA32E88();
  v29 = sub_23AA33218();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v30 = 138412290;
    v118[0] = (uint64_t)v27;
    v32 = v27;
    sub_23AA333F8();
    *v31 = v27;

    _os_log_impl(&dword_23A95E000, v28, v29, "ðŸ§­ FMR1NIContxt%@: nearby objects updated!! However, nearby object discover token don't match", v30, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v31, -1, -1);
    MEMORY[0x23B85DB24](v30, -1, -1);

  }
  else
  {

  }
  return sub_23A98CDD4((uint64_t)v121);
}

uint64_t sub_23A98E120(void *a1, void *a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t i;
  int v52;
  uint64_t ObjectType;
  void (*v54)(_OWORD *, _QWORD, _QWORD *, uint64_t, uint64_t);
  char *v55;
  char *v56;
  void *v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  unsigned int v73;
  void *v74;
  char *v75;
  _QWORD v76[5];
  _OWORD v77[2];
  uint64_t v78;
  _BYTE v79[104];
  _QWORD v80[12];
  unsigned __int16 v81;
  unsigned __int8 v82;
  __int128 v83[6];
  unsigned __int8 v84;
  char v85[104];
  _OWORD v86[6];
  __int16 v87;
  char v88;
  uint64_t v89[3];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int16 v99;
  char v100;

  sub_23A963A14((uint64_t)v3 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v89);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v78 = 0;
    memset(v77, 0, sizeof(v77));
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
  v8 = a2;
  v9 = v3;
  v10 = v8;
  v11 = (char *)v9;
  v12 = sub_23AA32E88();
  v13 = sub_23AA33218();
  v75 = v11;
  v72 = v10;
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    v89[0] = v67;
    *(_DWORD *)v14 = 138412546;
    v69 = a1;
    v16 = v11;
    sub_23AA333F8();
    *v15 = v75;

    *(_WORD *)(v14 + 12) = 2080;
    v17 = v10;
    sub_23A964084(&qword_2569D60C8);
    v18 = sub_23AA32FFC();
    *(_QWORD *)&v86[0] = sub_23A964DBC(v18, v19, v89);
    sub_23AA333F8();

    a1 = v69;
    v11 = v75;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v12, v13, "ðŸ§­ FMR1NIContxt%@: didUpdateRegion %s", (uint8_t *)v14, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v67, -1, -1);
    MEMORY[0x23B85DB24](v14, -1, -1);

  }
  else
  {

  }
  v20 = objc_msgSend(a1, sel_discoveryToken);
  sub_23A9906C8((uint64_t)v77, (uint64_t)v89);
  v21 = v90;
  if (v90)
  {
    v22 = v91;
    sub_23A96545C(v89, v90);
    v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
    sub_23A963B3C((uint64_t)v89);
    if (v20)
    {
      if (v23)
      {
        sub_23A968488(0, &qword_2569D6098);
        v24 = v20;
        v25 = sub_23AA3338C();

        if ((v25 & 1) != 0)
          goto LABEL_19;
LABEL_15:
        v26 = v11;
        v27 = sub_23AA32E88();
        v28 = sub_23AA33218();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          v30 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v29 = 138412290;
          v89[0] = (uint64_t)v26;
          v31 = v26;
          sub_23AA333F8();
          *v30 = v26;

          _os_log_impl(&dword_23A95E000, v27, v28, "ðŸ§­ FMR1NIContxt%@: region updated, However, nearby object discover tokens don't match", v29, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v30, -1, -1);
          MEMORY[0x23B85DB24](v29, -1, -1);

        }
        else
        {

        }
        return sub_23A98CDD4((uint64_t)v77);
      }
LABEL_14:

      goto LABEL_15;
    }
    v20 = v23;
    if (v23)
      goto LABEL_14;
  }
  else
  {
    sub_23A98CDD4((uint64_t)v89);
    if (v20)
      goto LABEL_14;
  }
LABEL_19:
  v74 = a2;
  if (a2 && (sub_23A9C9BE4((uint64_t)v79), sub_23A99072C((uint64_t)v79, (uint64_t)v83), v84 != 255))
  {
    sub_23A964108(v83, (uint64_t)v85);
    if (a3)
    {
      sub_23A9C9BE4((uint64_t)v80);
      v34 = v80[0];
      v33 = v80[1];
      v35 = (void *)v80[2];
      v36 = (void *)v80[3];
      v38 = v80[4];
      v37 = v80[5];
      v39 = v80[6];
      v40 = v80[7];
      v42 = v80[8];
      v41 = v80[9];
      v43 = v81 | (v82 << 16);
      v44 = v80[10];
      v45 = v80[11];
    }
    else
    {
      v34 = 0;
      v33 = 0;
      v35 = 0;
      v36 = 0;
      v38 = 0;
      v37 = 0;
      v39 = 0;
      v40 = 0;
      v42 = 0;
      v41 = 0;
      v44 = 0;
      v45 = 0;
      v43 = 16711680;
    }
    v66 = v37;
    v68 = v44;
    v70 = v39;
    v71 = v40;
    v89[0] = v34;
    v89[1] = v33;
    v89[2] = (uint64_t)v35;
    v90 = (uint64_t)v36;
    v91 = v38;
    v92 = v37;
    v93 = v39;
    v94 = v40;
    v95 = v42;
    v96 = v41;
    v97 = v44;
    v98 = v45;
    v99 = v43;
    v100 = BYTE2(v43);
    sub_23A9C9DB0();
    v73 = v46;
    sub_23A980C34((uint64_t)v79);
    sub_23A980C94(v34, v33, v35, v36, v38, v66, v70, v71, v42, v41, v68, v45, v43, BYTE2(v43));
    v11 = v75;
  }
  else
  {
    if (a3)
      v32 = 2;
    else
      v32 = 3;
    v73 = v32;
  }
  v47 = &v11[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v48 = *(_QWORD *)v47;
  if (!(*(_QWORD *)v47 >> 62))
  {
    v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v49)
      goto LABEL_31;
LABEL_62:
    swift_bridgeObjectRelease_n();
    return sub_23A98CDD4((uint64_t)v77);
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v49 = result;
  if (!result)
    goto LABEL_62;
LABEL_31:
  if (v49 >= 1)
  {
    for (i = 0; i != v49; ++i)
    {
      if ((v48 & 0xC000000000000001) != 0)
        v56 = (char *)MEMORY[0x23B85D0B0](i, v48);
      else
        v56 = (char *)*(id *)(v48 + 8 * i + 32);
      v57 = v56;
      v58 = &v56[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v56[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v59 = *((_QWORD *)v58 + 1);
        if (v74)
        {
          v60 = objc_msgSend(v72, sel_name);
          v61 = sub_23AA32FD8();
          v63 = v62;

          v64 = v61 == 0x646E756F66 && v63 == 0xE500000000000000;
          if (v64 || (sub_23AA33728() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v52 = 196608;
          }
          else if (v61 == 1701995880 && v63 == 0xE400000000000000 || (sub_23AA33728() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v52 = 0x20000;
          }
          else if (v61 == 1918985582 && v63 == 0xE400000000000000 || (sub_23AA33728() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v52 = 0x10000;
          }
          else if (v61 == 7496038 && v63 == 0xE300000000000000)
          {
            swift_bridgeObjectRelease();
            v52 = 0;
          }
          else
          {
            v65 = sub_23AA33728();
            swift_bridgeObjectRelease();
            if ((v65 & 1) != 0)
              v52 = 0;
            else
              v52 = -65536;
          }
        }
        else
        {
          v52 = 16711680;
        }
        memset(v86, 0, sizeof(v86));
        v87 = v52;
        v88 = BYTE2(v52);
        ObjectType = swift_getObjectType();
        v76[3] = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v76[4] = &off_250BC0E70;
        v76[0] = v75;
        v54 = *(void (**)(_OWORD *, _QWORD, _QWORD *, uint64_t, uint64_t))(v59 + 24);
        v55 = v75;
        v54(v86, v73, v76, ObjectType, v59);
        sub_23A980C94(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v52, BYTE2(v52));
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v76);
      }

    }
    goto LABEL_62;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A98EA28(unint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  void (*v39)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v45;
  _QWORD v46[4];
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t v52;
  _UNKNOWN **v53;
  _OWORD v54[2];
  uint64_t v55;

  sub_23A963A14((uint64_t)v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v51);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  v5 = swift_dynamicCast();
  if ((v5 & 1) == 0)
  {
    v55 = 0;
    memset(v54, 0, sizeof(v54));
  }
  MEMORY[0x24BDAC7A8](v5);
  v46[2] = v54;
  v6 = sub_23AA15B88(sub_23A990710, (uint64_t)v46, a1);
  if (!v6)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v20 = sub_23AA32EA0();
    sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
    v21 = v2;
    v22 = sub_23AA32E88();
    v23 = sub_23AA33218();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v51[0] = (uint64_t)v21;
      v26 = v21;
      sub_23AA333F8();
      *v25 = v21;

      _os_log_impl(&dword_23A95E000, v22, v23, "ðŸ§­ FMR1NIContxt%@: nearby object discover token doesn't match", v24, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v25, -1, -1);
      MEMORY[0x23B85DB24](v24, -1, -1);

    }
    else
    {

    }
    return sub_23A98CDD4((uint64_t)v54);
  }
  v7 = v6;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  v9 = v2;
  v10 = v7;
  v11 = sub_23AA32E88();
  v12 = sub_23AA33218();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v50 = (uint64_t)v9;
    v51[0] = v49;
    *(_DWORD *)v13 = 138412802;
    v47 = a2;
    v15 = v9;
    sub_23AA333F8();
    *v14 = v9;

    *(_WORD *)(v13 + 12) = 2112;
    v16 = objc_msgSend(v10, sel_discoveryToken);
    v50 = (uint64_t)v16;
    sub_23AA333F8();
    v14[1] = v16;

    *(_WORD *)(v13 + 22) = 2080;
    v50 = v47;
    type metadata accessor for RemovalReason(0);
    v17 = sub_23AA32FFC();
    v50 = sub_23A964DBC(v17, v18, v51);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v11, v12, "ðŸ§­ FMR1NIContxt%@: nearby object discover token matches %@ removing. Reason: %s", (uint8_t *)v13, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v14, -1, -1);
    v19 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v19, -1, -1);
    MEMORY[0x23B85DB24](v13, -1, -1);

  }
  else
  {

  }
  v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] = 1;
  v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 2;
  v27 = &v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v28 = *(_QWORD *)v27;
  v29 = *(_QWORD *)v27 >> 62;
  v48 = v10;
  if (!v29)
  {
    v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v30)
      goto LABEL_15;
LABEL_27:

    swift_bridgeObjectRelease_n();
    return sub_23A98CDD4((uint64_t)v54);
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v30 = result;
  if (!result)
    goto LABEL_27;
LABEL_15:
  if (v30 >= 1)
  {
    v32 = 0;
    v49 = v28 & 0xC000000000000001;
    do
    {
      if (v49)
        v33 = (char *)MEMORY[0x23B85D0B0](v32, v28);
      else
        v33 = (char *)*(id *)(v28 + 8 * v32 + 32);
      v34 = v33;
      v35 = &v33[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v33[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v36 = *((_QWORD *)v35 + 1);
        v37 = v28;
        ObjectType = swift_getObjectType();
        v52 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v53 = &off_250BC0E70;
        v51[0] = (uint64_t)v9;
        v39 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v36 + 32);
        v40 = v9;
        v41 = ObjectType;
        v28 = v37;
        v39(1, v51, v41, v36);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v51);
      }
      if (MEMORY[0x23B85DBF0](v35))
      {
        v42 = *((_QWORD *)v35 + 1);
        v43 = swift_getObjectType();
        v52 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v53 = &off_250BC0E70;
        v51[0] = (uint64_t)v9;
        v44 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v42 + 48);
        v45 = v9;
        v44(2, v51, v43, v42);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v51);
      }

      ++v32;
    }
    while (v30 != v32);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A98F074(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  _UNKNOWN **v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, _QWORD *);
  uint64_t v46;
  char *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t *, _QWORD *);
  uint64_t *v62;
  _QWORD *v63;
  char *v64;
  int v65;
  int v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t i;
  char *v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t ObjectType;
  void (*v76)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t j;
  char *v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t *, uint64_t, uint64_t);
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t k;
  char *v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t *, uint64_t, uint64_t);
  _QWORD *v106;
  uint64_t v107;
  uint64_t result;
  uint64_t m;
  char *v110;
  void *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t *, uint64_t, uint64_t);
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  os_log_t v119;
  int v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126[3];
  uint64_t v127;
  _UNKNOWN **v128;
  _OWORD v129[2];
  uint64_t v130;

  v3 = v2;
  v124 = (_QWORD *)sub_23AA32E70();
  v6 = *(v124 - 1);
  v7 = MEMORY[0x24BDAC7A8](v124);
  v122 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v117 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v117 - v12;
  sub_23A963A14((uint64_t)v3 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v126);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084(&qword_2569D6070);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v130 = 0;
    memset(v129, 0, sizeof(v129));
  }
  v123 = v6;
  if (a2)
    v14 = objc_msgSend(a2, sel_discoveryToken);
  else
    v14 = 0;
  sub_23A9906C8((uint64_t)v129, (uint64_t)v126);
  v15 = v127;
  if (!v127)
  {
    sub_23A98CDD4((uint64_t)v126);
    if (!v14)
      goto LABEL_19;
    goto LABEL_12;
  }
  v16 = v128;
  sub_23A96545C(v126, v127);
  v17 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v16[2])(v15, v16);
  sub_23A963B3C((uint64_t)v126);
  if (!v14)
  {
    if (!v17)
      goto LABEL_19;
    goto LABEL_14;
  }
  if (!v17)
  {
LABEL_12:
    v17 = v14;
LABEL_14:

    goto LABEL_15;
  }
  sub_23A968488(0, &qword_2569D6098);
  v18 = v14;
  v19 = sub_23AA3338C();

  if ((v19 & 1) == 0)
  {
LABEL_15:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v20 = sub_23AA32EA0();
    sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
    v21 = v3;
    v22 = sub_23AA32E88();
    v23 = sub_23AA33218();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v126[0] = (uint64_t)v21;
      v26 = v21;
      sub_23AA333F8();
      *v25 = v21;

      _os_log_impl(&dword_23A95E000, v22, v23, "ðŸ§­ FMR1NIContxt%@: nearby object discover token doesn't match", v24, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v25, -1, -1);
      MEMORY[0x23B85DB24](v24, -1, -1);

    }
    else
    {

    }
    return sub_23A98CDD4((uint64_t)v129);
  }
LABEL_19:
  if (qword_2569D4AC0 != -1)
    swift_once();
  v27 = sub_23AA32EA0();
  sub_23A9620E8(v27, (uint64_t)qword_2569E0040);
  v28 = v3;
  v29 = a1;
  v30 = (char *)v28;
  v31 = v29;
  v32 = sub_23AA32E88();
  v33 = sub_23AA33218();
  v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v117 = v13;
    v118 = v36;
    v37 = (_QWORD *)v36;
    v121 = swift_slowAlloc();
    v126[0] = v121;
    *(_DWORD *)v35 = 138412546;
    v119 = v32;
    v120 = v34;
    v125 = (uint64_t)v30;
    v38 = v30;
    sub_23AA333F8();
    *v37 = v30;

    *(_WORD *)(v35 + 12) = 2080;
    sub_23AA33308();
    v39 = sub_23AA32FFC();
    v125 = sub_23A964DBC(v39, v40, v126);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    v41 = v119;
    _os_log_impl(&dword_23A95E000, v119, (os_log_type_t)v120, "ðŸ§­ FMR1NIContxt%@: Updated convergence status! %s", (uint8_t *)v35, 0x16u);
    sub_23A964084(&qword_2569D6058);
    v42 = v118;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v42, -1, -1);
    v43 = v121;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v43, -1, -1);
    MEMORY[0x23B85DB24](v35, -1, -1);

  }
  else
  {

  }
  v44 = v123;
  sub_23AA33308();
  v45 = *(uint64_t (**)(char *, _QWORD *))(v44 + 88);
  if (v45((char *)v11, v124) != *MEMORY[0x24BDDFD80])
  {
    v61 = *(void (**)(uint64_t *, _QWORD *))(v44 + 8);
    v62 = v11;
    v63 = v124;
    v61(v62, v124);
    v64 = v122;
    sub_23AA33308();
    v65 = v45(v64, v63);
    v66 = *MEMORY[0x24BDDFDC0];
    v61((uint64_t *)v64, v63);
    if (v65 != v66)
      return sub_23A98CDD4((uint64_t)v129);
    v67 = &v30[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
    swift_beginAccess();
    v68 = *(_QWORD *)v67;
    if (v68 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v69 = sub_23AA335C0();
      if (!v69)
        goto LABEL_82;
    }
    else
    {
      v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v69)
        goto LABEL_82;
    }
    if (v69 >= 1)
    {
      for (i = 0; i != v69; ++i)
      {
        if ((v68 & 0xC000000000000001) != 0)
          v71 = (char *)MEMORY[0x23B85D0B0](i, v68);
        else
          v71 = (char *)*(id *)(v68 + 8 * i + 32);
        v72 = v71;
        v73 = &v71[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
        if (MEMORY[0x23B85DBF0](&v71[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
        {
          v74 = *((_QWORD *)v73 + 1);
          ObjectType = swift_getObjectType();
          v127 = type metadata accessor for FMNearbyInteractionLocalizerContext();
          v128 = &off_250BC0E70;
          v126[0] = (uint64_t)v30;
          v76 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v74 + 48);
          v77 = v30;
          v76(3, v126, ObjectType, v74);
          swift_unknownObjectRelease();
          sub_23A963B3C((uint64_t)v126);
        }

      }
      goto LABEL_82;
    }
    goto LABEL_77;
  }
  (*(void (**)(uint64_t *, _QWORD *))(v44 + 96))(v11, v124);
  v46 = *v11;
  v47 = v30;
  swift_bridgeObjectRetain_n();
  v48 = v47;
  v49 = sub_23AA32E88();
  v50 = sub_23AA33218();
  v51 = os_log_type_enabled(v49, v50);
  v124 = v48;
  if (v51)
  {
    v52 = swift_slowAlloc();
    v53 = (_QWORD *)swift_slowAlloc();
    v123 = swift_slowAlloc();
    v126[0] = v123;
    *(_DWORD *)v52 = 138412546;
    v125 = (uint64_t)v48;
    v54 = v48;
    sub_23AA333F8();
    *v53 = v48;

    *(_WORD *)(v52 + 12) = 2080;
    v55 = sub_23AA32E64();
    v56 = swift_bridgeObjectRetain();
    v57 = MEMORY[0x23B85CC54](v56, v55);
    v59 = v58;
    swift_bridgeObjectRelease();
    v125 = sub_23A964DBC(v57, v59, v126);
    sub_23AA333F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v49, v50, "ðŸ§­ FMR1NIContxt%@: No longer converged!! What's the reason? %s", (uint8_t *)v52, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v53, -1, -1);
    v60 = v123;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v60, -1, -1);
    MEMORY[0x23B85DB24](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v78 = swift_bridgeObjectRetain();
  v79 = sub_23AA21DEC(v78);
  swift_bridgeObjectRelease();
  sub_23A964084((uint64_t *)&unk_2569D60A0);
  sub_23AA32E64();
  v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_23AA35F90;
  sub_23AA32E58();
  v81 = sub_23A98C884(v80, v79);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v82 = *(_QWORD *)(v81 + 16);
  swift_release();
  if (v82)
  {
    swift_bridgeObjectRelease();
    v83 = (_QWORD *)((char *)v124 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
    swift_beginAccess();
    v69 = *v83;
    if ((unint64_t)*v83 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v84 = sub_23AA335C0();
      if (!v84)
        goto LABEL_82;
      goto LABEL_43;
    }
    v84 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v84)
    {
LABEL_43:
      if (v84 >= 1)
      {
        for (j = 0; j != v84; ++j)
        {
          if ((v69 & 0xC000000000000001) != 0)
            v86 = (char *)MEMORY[0x23B85D0B0](j, v69);
          else
            v86 = (char *)*(id *)(v69 + 8 * j + 32);
          v87 = v86;
          v88 = &v86[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x23B85DBF0](&v86[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            v89 = *((_QWORD *)v88 + 1);
            v90 = swift_getObjectType();
            v127 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            v128 = &off_250BC0E70;
            v126[0] = (uint64_t)v124;
            v91 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v89 + 48);
            v92 = v124;
            v91(7, v126, v90, v89);
            swift_unknownObjectRelease();
            sub_23A963B3C((uint64_t)v126);
          }

        }
        goto LABEL_82;
      }
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain_n();
      v98 = sub_23AA335C0();
      if (!v98)
        goto LABEL_82;
      goto LABEL_54;
    }
    goto LABEL_82;
  }
  v93 = sub_23AA21DEC(v46);
  swift_bridgeObjectRelease();
  v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_23AA36190;
  sub_23AA32E4C();
  sub_23AA32E40();
  v95 = sub_23A98C884(v94, v93);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v96 = *(_QWORD *)(v95 + 16);
  swift_release();
  v97 = (_QWORD *)((char *)v124 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
  if (!v96)
  {
    swift_beginAccess();
    v69 = *v97;
    if ((unint64_t)*v97 >> 62)
      goto LABEL_81;
    v107 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v107)
      goto LABEL_64;
    goto LABEL_82;
  }
  swift_beginAccess();
  v69 = *v97;
  if ((unint64_t)*v97 >> 62)
    goto LABEL_78;
  v98 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v98)
  {
LABEL_82:
    swift_bridgeObjectRelease_n();
    return sub_23A98CDD4((uint64_t)v129);
  }
LABEL_54:
  if (v98 >= 1)
  {
    for (k = 0; k != v98; ++k)
    {
      if ((v69 & 0xC000000000000001) != 0)
        v100 = (char *)MEMORY[0x23B85D0B0](k, v69);
      else
        v100 = (char *)*(id *)(v69 + 8 * k + 32);
      v101 = v100;
      v102 = &v100[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v100[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v103 = *((_QWORD *)v102 + 1);
        v104 = swift_getObjectType();
        v127 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v128 = &off_250BC0E70;
        v126[0] = (uint64_t)v124;
        v105 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v103 + 48);
        v106 = v124;
        v105(8, v126, v104, v103);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v126);
      }

    }
    goto LABEL_82;
  }
  __break(1u);
LABEL_81:
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v107 = result;
  if (!result)
    goto LABEL_82;
LABEL_64:
  if (v107 >= 1)
  {
    for (m = 0; m != v107; ++m)
    {
      if ((v69 & 0xC000000000000001) != 0)
        v110 = (char *)MEMORY[0x23B85D0B0](m, v69);
      else
        v110 = (char *)*(id *)(v69 + 8 * m + 32);
      v111 = v110;
      v112 = &v110[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v110[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v113 = *((_QWORD *)v112 + 1);
        v114 = swift_getObjectType();
        v127 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v128 = &off_250BC0E70;
        v126[0] = (uint64_t)v124;
        v115 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v113 + 48);
        v116 = v124;
        v115(3, v126, v114, v113);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v126);
      }

    }
    goto LABEL_82;
  }
  __break(1u);
  return result;
}

void sub_23A98FE6C()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v5 = 138412802;
    v7 = v2;
    sub_23AA333F8();
    *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    type metadata accessor for NISessionSuspensionReason(0);
    v8 = sub_23AA32FFC();
    sub_23A964DBC(v8, v9, &v15);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 1024;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1NIContxt%@: suspensionReasonEneded: %s, isNoLongerSuspended: %{BOOL}d", (uint8_t *)v5, 0x1Cu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v14, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  if ((v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] & 1) == 0)
  {
    v10 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
    objc_opt_self();
    v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v10;
      if (objc_msgSend(v12, sel_preferredUpdateRate) == (id)3)
      {
        sub_23A98603C();

        return;
      }

    }
    sub_23A98580C();

  }
}

void sub_23A990144()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v5 = 138412546;
    v7 = v2;
    sub_23AA333F8();
    *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    type metadata accessor for NISessionSuspensionReason(0);
    v8 = sub_23AA32FFC();
    sub_23A964DBC(v8, v9, &v11);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1NIContxt%@: suspendedWithReason: %s", (uint8_t *)v5, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v10, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  *((_BYTE *)v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity) = 4;
}

uint64_t sub_23A990374(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t i;
  char *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(void *, _QWORD *, uint64_t, uint64_t);
  char *v27;
  void *v28;
  _QWORD v29[5];

  v3 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error] = a1;
  v4 = a1;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  v6 = a1;
  v7 = v1;
  v8 = a1;
  v9 = v7;
  v10 = sub_23AA32E88();
  v11 = sub_23AA3320C();
  v28 = a1;
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412546;
    v14 = v9;
    sub_23AA333F8();
    *v13 = v9;

    *(_WORD *)(v12 + 12) = 2112;
    v15 = a1;
    v29[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_23AA333F8();
    v13[1] = v29[0];

    _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMR1NIContxt%@: item localizer failed (%@)", (uint8_t *)v12, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v13, -1, -1);
    MEMORY[0x23B85DB24](v12, -1, -1);
  }
  else
  {

  }
  sub_23A986B10();
  v16 = &v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  v17 = *(_QWORD *)v16;
  if (!(*(_QWORD *)v16 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v18)
      goto LABEL_8;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v18 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_8:
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v21 = (char *)MEMORY[0x23B85D0B0](i, v17);
      else
        v21 = (char *)*(id *)(v17 + 8 * i + 32);
      v22 = v21;
      v23 = &v21[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v21[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        v24 = *((_QWORD *)v23 + 1);
        ObjectType = swift_getObjectType();
        v29[3] = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v29[4] = &off_250BC0E70;
        v29[0] = v9;
        v26 = *(void (**)(void *, _QWORD *, uint64_t, uint64_t))(v24 + 40);
        v27 = v9;
        v26(v28, v29, ObjectType, v24);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v29);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9906C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D6078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A990710(id *a1)
{
  uint64_t v1;

  return sub_23A9842A4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23A99072C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D60C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A990774()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A990798()
{
  uint64_t v0;

  sub_23A98B7C0(v0);
}

void sub_23A9907A0()
{
  uint64_t v0;

  sub_23A98BC68(v0);
}

uint64_t sub_23A9907A8(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x23B85D0B0](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        sub_23AA32E1C();
        sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        if ((sub_23AA32FA8() & 1) != 0)
        {

        }
        else
        {
          sub_23AA33554();
          sub_23AA33578();
          sub_23AA33584();
          sub_23AA33560();
        }
        ++v3;
        if (v6 == v2)
          return v8;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_23AA335C0();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23A990940(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t i;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_23A98CCC4(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if ((v8 & 1) != 0)
    {
      v24 = *a1;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v6 = sub_23AA335C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v9 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_54;
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        v26 = sub_23AA335C0();
        swift_bridgeObjectRelease();
        if (v9 != v26)
          goto LABEL_6;
      }
      else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier;
        for (i = v6 + 5; ; ++i)
        {
          v11 = i - 4;
          v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v13 = (id)MEMORY[0x23B85D0B0](i - 4);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_45;
            v13 = *(id *)(v12 + 8 * i);
          }
          v14 = v13;
          v9 = sub_23AA32DF8();

          if ((v9 & 1) == 0)
            break;
LABEL_32:
          v9 = i - 3;
          if (__OFADD__(v11, 1))
            goto LABEL_46;
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v23 = sub_23AA335C0();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v23)
            return v6;
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1))
            goto LABEL_47;
          goto LABEL_32;
        }
        v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = (id)MEMORY[0x23B85D0B0](v6, *a1);
          v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_50;
            if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_51;
            v16 = *(id *)(v9 + 8 * i);
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_48;
          if (v6 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_49;
          v15 = *(id *)(v9 + 8 * v6 + 32);
          if ((v9 & 0xC000000000000001) == 0)
            goto LABEL_17;
        }
        v16 = (id)MEMORY[0x23B85D0B0](i - 4, v9);
        v9 = *a1;
LABEL_20:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
          sub_23A9F6F48(v9);
        v18 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
        *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;

        sub_23AA330C8();
        v9 = *a1;
        v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v19 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
          sub_23A9F6F48(v9);
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_52;
        v20 = v9 & 0xFFFFFFFFFFFFFF8;
        if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_53;
        v21 = *(void **)(v20 + 8 * i);
        *(_QWORD *)(v20 + 8 * i) = v15;

        sub_23AA330C8();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

unint64_t sub_23A990C70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D6110;
  if (!qword_2569D6110)
  {
    v1 = sub_23A96C258((uint64_t *)&unk_2569D5B40);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2569D6110);
  }
  return result;
}

uint64_t sub_23A990CBC(id *a1)
{
  return sub_23A990710(a1) & 1;
}

uint64_t sub_23A990CD4(uint64_t a1)
{
  return sub_23A990D70(a1, qword_2569E0010);
}

uint64_t sub_23A990CE8(uint64_t a1)
{
  return sub_23A990D70(a1, qword_2569E0028);
}

uint64_t *sub_23A990D0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23A990D4C(uint64_t a1)
{
  return sub_23A990D70(a1, qword_2569E0040);
}

uint64_t sub_23A990D70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23AA32EA0();
  sub_23A990D0C(v3, a2);
  sub_23A9620E8(v3, (uint64_t)a2);
  return sub_23AA32E94();
}

ValueMetadata *type metadata accessor for FMPFViewStyle()
{
  return &type metadata for FMPFViewStyle;
}

void destroy for FMPFSKPeripheralDotNodeStyle(uint64_t a1)
{

}

uint64_t initializeWithCopy for FMPFSKPeripheralDotNodeStyle(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for FMPFSKPeripheralDotNodeStyle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v4 = (void *)a2[7];
  v5 = (void *)a1[7];
  a1[7] = v4;
  v6 = v4;

  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

__n128 initializeWithTake for FMPFSKPeripheralDotNodeStyle(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FMPFSKPeripheralDotNodeStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFSKPeripheralDotNodeStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPeripheralDotNodeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPeripheralDotNodeStyle()
{
  return &type metadata for FMPFSKPeripheralDotNodeStyle;
}

double sub_23A99100C()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.4);

  xmmword_2569D6180 = xmmword_23AA37080;
  qword_2569D6190 = 16;
  unk_2569D6198 = xmmword_23AA37090;
  *(_OWORD *)&qword_2569D61A8 = xmmword_23AA370A0;
  qword_2569D61B8 = (uint64_t)v1;
  result = 0.5;
  xmmword_2569D61C0 = xmmword_23AA370B0;
  qword_2569D61D0 = 0x4040000000000000;
  return result;
}

double sub_23A9910B8()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.4);

  xmmword_2569D61D8 = xmmword_23AA37080;
  qword_2569D61E8 = 16;
  *(_OWORD *)algn_2569D61F0 = xmmword_23AA37090;
  *(_OWORD *)&qword_2569D6200 = xmmword_23AA370A0;
  qword_2569D6210 = (uint64_t)v1;
  result = 0.5;
  xmmword_2569D6218 = xmmword_23AA370B0;
  qword_2569D6228 = 0x4040000000000000;
  return result;
}

uint64_t sub_23A991164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_23A99116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_23A991174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_23A99117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_23A991184(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v15 = MEMORY[0x24BEE4AF8];
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_22:
    v13 = *(char **)(*(_QWORD *)(v1 + 56) + 8 * v9);
    if (*(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer])
    {
      v14 = v13;
      sub_23AA33554();
      sub_23AA33578();
      sub_23AA33584();
      result = sub_23AA33560();
    }
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v10);
  ++v2;
  if (v11)
    goto LABEL_21;
  v2 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 2;
  if (v10 + 2 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 3;
  if (v10 + 3 >= v7)
    goto LABEL_24;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_24:
    swift_release();
    return v15;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_24;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_23A991334@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23A99C62C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23A99135C()
{
  sub_23A99C6E4();
  return sub_23AA3308C();
}

uint64_t sub_23A9913B8()
{
  sub_23A99C6E4();
  return sub_23AA33074();
}

unint64_t sub_23A991404@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23A99C63C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23A99142C()
{
  sub_23A99C6A0();
  return sub_23AA3308C();
}

uint64_t sub_23A991488()
{
  sub_23A99C6A0();
  return sub_23AA33074();
}

unint64_t sub_23A9914D4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23A99C64C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23A9914FC()
{
  sub_23A99C65C();
  return sub_23AA3308C();
}

uint64_t sub_23A991558()
{
  sub_23A99C65C();
  return sub_23AA33074();
}

id sub_23A9915A4(uint64_t a1, char *a2)
{
  _BYTE *v2;
  char v4;
  char *v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;

  v4 = *a2;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions] = MEMORY[0x24BEE4AF8];
  v5 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_updateRangeEstimateLogCounter] = 0;
  v6 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
  *v8 = 0;
  v8[1] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer] = 0;
  sub_23A963A14(a1, (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable]);
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_connectionContext] = v4;
  v26.receiver = v2;
  v26.super_class = (Class)type metadata accessor for FMR1ItemLocalizerContext();
  v9 = objc_msgSendSuper2(&v26, sel_init);
  v10 = qword_2569D4AC0;
  v11 = v9;
  if (v10 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
  v13 = v11;
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v24 = a1;
    v17 = swift_slowAlloc();
    v25 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = objc_msgSend(v13, sel_description);
    v19 = sub_23AA32FD8();
    v21 = v20;

    sub_23A964DBC(v19, v21, &v25);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v14, v15, "ðŸ§­ FMR1PrxContxt%s: init", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v17, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);

    v22 = v24;
  }
  else
  {

    v22 = a1;
  }
  sub_23A963B3C(v22);
  return v13;
}

uint64_t sub_23A991900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = sub_23AA33824();
  v4 = v3;
  sub_23AA33500();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A9E2E00(9uLL, v2, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  v24 = 7876668;
  v25 = 0xE300000000000000;
  v21[2] = v6;
  v22 = v8;
  sub_23A96F764();
  sub_23AA3302C();
  swift_bridgeObjectRelease();
  v21[0] = 7876668;
  v21[1] = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  sub_23A964084((uint64_t *)&unk_2569D6690);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23AA36190;
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v21);
  v10 = v22;
  v11 = v23;
  sub_23A96545C(v21, v22);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v14 = v13;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_23A9640C4();
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v14;
  v15 = (unint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions);
  swift_beginAccess();
  v16 = *v15;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v9 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v9 + 104) = v18;
  *(_QWORD *)(v9 + 72) = v17;
  sub_23A963B3C((uint64_t)v21);
  v19 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v19;
}

id sub_23A991B90(uint64_t a1, uint64_t a2)
{
  return sub_23A9886FC("ðŸ§­ FMR1PrxContxt%s: deinit", a2, (uint64_t (*)(_QWORD))type metadata accessor for FMR1ItemLocalizerContext);
}

uint64_t sub_23A991C58(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  id v13;
  _QWORD v15[5];

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  if (!(*(_QWORD *)v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x23B85D0B0](i, v4);
      else
        v8 = (char *)*(id *)(v4 + 8 * i + 32);
      v9 = v8;
      v10 = &v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v11 = *((_QWORD *)v10 + 1);
        ObjectType = swift_getObjectType();
        v15[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v15[4] = &off_250BC1140;
        v15[0] = v2;
        (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v11 + 16))(a1, v15, ObjectType, v11);
        v13 = v2;
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v15);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A991E24(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  id v13;
  _QWORD v15[5];

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  if (!(*(_QWORD *)v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x23B85D0B0](i, v4);
      else
        v8 = (char *)*(id *)(v4 + 8 * i + 32);
      v9 = v8;
      v10 = &v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v11 = *((_QWORD *)v10 + 1);
        ObjectType = swift_getObjectType();
        v15[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v15[4] = &off_250BC1140;
        v15[0] = v2;
        (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v11 + 24))(a1, v15, ObjectType, v11);
        v13 = v2;
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v15);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A991FF0(unint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  char *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t);
  char *v20;
  uint64_t v22;
  _QWORD v23[8];

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_19:
    swift_once();
    goto LABEL_6;
  }
  if (a1 >= 5)
    v2 = 0;
  else
    v2 = a1;
  v22 = v2;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState] = v2;
  if (qword_2569D4AC0 != -1)
    goto LABEL_19;
LABEL_6:
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = sub_23AA32E88();
  v6 = sub_23AA33218();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)v7 = 138412546;
    v23[5] = v4;
    v9 = v4;
    sub_23AA333F8();
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    __asm { BR              X10 }
  }

  sub_23A996CC4();
  v10 = &v4[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  if (*(_QWORD *)v10 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v12 = sub_23AA335C0();
    if (!v12)
      return swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v12)
      return swift_bridgeObjectRelease_n();
  }
  if (v12 < 1)
  {
    __break(1u);
    JUMPOUT(0x23A9923E8);
  }
  for (i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0)
      v14 = (char *)MEMORY[0x23B85D0B0](i, v11);
    else
      v14 = (char *)*(id *)(v11 + 8 * i + 32);
    v15 = v14;
    v16 = &v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
    if (MEMORY[0x23B85DBF0](&v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
    {
      v17 = *((_QWORD *)v16 + 1);
      ObjectType = swift_getObjectType();
      v23[3] = type metadata accessor for FMR1ItemLocalizerContext();
      v23[4] = &off_250BC1140;
      v23[0] = v4;
      v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v17 + 32);
      v20 = v4;
      v19(v22, v23, ObjectType, v17);
      swift_unknownObjectRelease();
      sub_23A963B3C((uint64_t)v23);
    }

  }
  return swift_bridgeObjectRelease_n();
}

void sub_23A99243C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t *v2;
  char v3;
  unsigned int v4;
  uint64_t v5;
  _BYTE *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (a1 == 3)
  {
    v3 = 3;
    v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    v4 = 3u;
  }
  else if (a1 == 2)
  {
    v3 = 0;
    v4 = 2u;
    v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity] = 2u;
    v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked;
  }
  else
  {
    v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    if (a1 != 1)
      v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    v3 = a1 == 1;
    v4 = a1 == 1;
  }
  v1[*v2] = v3;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  v6 = v1;
  v7 = sub_23AA32E88();
  v8 = sub_23AA33218();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v9 = 138412802;
    v11 = v6;
    sub_23AA333F8();
    *v10 = v6;

    *(_WORD *)(v9 + 12) = 2080;
    if (v11[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly])
      v12 = 0x676E69676E617228;
    else
      v12 = 0x7A696C61636F6C28;
    if (v11[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly])
      v13 = 0xEE0029796C6E6F20;
    else
      v13 = 0xEB00000000297265;
    sub_23A964DBC(v12, v13, &v14);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    __asm { BR              X10 }
  }

  sub_23A996CC4();
}

uint64_t sub_23A99281C(uint64_t a1)
{
  _BYTE *v1;
  int v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  char *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(_QWORD, _QWORD *, uint64_t, uint64_t);
  char *v20;
  unsigned int v22;
  _QWORD v23[8];

  if (a1 < 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_13;
  }
  v22 = 2;
  switch(a1)
  {
    case 1:
      v22 = 1;
      v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState] = 1;
      break;
    case 2:
      break;
    case 3:
      v2 = 3;
      goto LABEL_11;
    case 4:
      v2 = 4;
      goto LABEL_11;
    case 5:
      v2 = 5;
      goto LABEL_11;
    case 6:
      v2 = 6;
      goto LABEL_11;
    case 7:
      v2 = 7;
      goto LABEL_11;
    case 8:
      v2 = 8;
LABEL_11:
      v22 = v2;
      break;
    default:
      v22 = 0;
      break;
  }
  if (qword_2569D4AC0 != -1)
    goto LABEL_26;
LABEL_13:
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = sub_23AA32E88();
  v6 = sub_23AA33218();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)v7 = 138412802;
    v23[5] = v4;
    v9 = v4;
    sub_23AA333F8();
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    __asm { BR              X10 }
  }

  sub_23A996CC4();
  v10 = &v4[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  if (*(_QWORD *)v10 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v12 = sub_23AA335C0();
    if (!v12)
      return swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v12)
      return swift_bridgeObjectRelease_n();
  }
  if (v12 < 1)
  {
    __break(1u);
    JUMPOUT(0x23A992E5CLL);
  }
  for (i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0)
      v14 = (char *)MEMORY[0x23B85D0B0](i, v11);
    else
      v14 = (char *)*(id *)(v11 + 8 * i + 32);
    v15 = v14;
    v16 = &v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
    if (MEMORY[0x23B85DBF0](&v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
    {
      v17 = *((_QWORD *)v16 + 1);
      ObjectType = swift_getObjectType();
      v23[3] = type metadata accessor for FMR1ItemLocalizerContext();
      v23[4] = &off_250BC1140;
      v23[0] = v4;
      v19 = *(void (**)(_QWORD, _QWORD *, uint64_t, uint64_t))(v17 + 40);
      v20 = v4;
      v19(v22, v23, ObjectType, v17);
      swift_unknownObjectRelease();
      sub_23A963B3C((uint64_t)v23);
    }

  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23A992F08(void *a1)
{
  char *v1;
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void **p_weak_ivar_lyt;
  float v8;
  char *v9;
  float v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  int v27;
  BOOL v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t ObjectType;
  float v39;
  float v40;
  void (*v41)(uint64_t *, uint64_t, uint64_t, float);
  char *v42;
  char *v45;
  uint64_t v46[8];

  v3 = v1;
  v4 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_updateRangeEstimateLogCounter;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_updateRangeEstimateLogCounter];
  if (0xEEEEEEEEEEEEEEEFLL * v5 + 0x888888888888888 <= 0x1111111111111110)
  {
    v6 = a1;
    p_weak_ivar_lyt = &FMProximityConnectionManager.weak_ivar_lyt;
    objc_msgSend(a1, sel_range);
    v9 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate];
    v10 = *(float *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate];
    if (v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate + 4])
      v10 = 3.4028e38;
    if (vabds_f32(v8, v10) >= 0.01)
    {
      sub_23A964084((uint64_t *)&unk_2569D6690);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_23AA370F0;
      *(_QWORD *)(v11 + 56) = type metadata accessor for FMR1ItemLocalizerContext();
      *(_QWORD *)(v11 + 64) = sub_23A99D034(&qword_2569D63D0, v12, (uint64_t (*)(uint64_t))type metadata accessor for FMR1ItemLocalizerContext, MEMORY[0x24BEE5BE8]);
      *(_QWORD *)(v11 + 32) = v3;
      v13 = v3;
      objc_msgSend(v6, sel_range);
      v14 = MEMORY[0x24BEE1568];
      *(_QWORD *)(v11 + 96) = MEMORY[0x24BEE14E8];
      *(_QWORD *)(v11 + 104) = v14;
      *(_DWORD *)(v11 + 72) = v15;
      v16 = v13[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState];
      v17 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v11 + 136) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v11 + 144) = v17;
      *(_QWORD *)(v11 + 112) = v16;
      v18 = sub_23AA32FE4();
      v2 = v19;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v20 = sub_23AA32EA0();
      sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
      swift_bridgeObjectRetain();
      v21 = sub_23AA32E88();
      v22 = sub_23AA33218();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = v18;
        v25 = swift_slowAlloc();
        v46[0] = v25;
        *(_DWORD *)v23 = 136315138;
        v3 = v45;
        swift_bridgeObjectRetain();
        v46[5] = sub_23A964DBC(v24, v2, v46);
        sub_23AA333F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A95E000, v21, v22, "%s", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v25, -1, -1);
        v26 = v23;
        p_weak_ivar_lyt = (void **)(&FMProximityConnectionManager + 56);
        v6 = a1;
        MEMORY[0x23B85DB24](v26, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    objc_msgSend(v6, (SEL)p_weak_ivar_lyt[341]);
    *(_DWORD *)v9 = v27;
    v9[4] = 0;
    v5 = *(_QWORD *)&v3[v4];
  }
  v28 = __OFADD__(v5, 1);
  v29 = v5 + 1;
  if (v28)
    goto LABEL_24;
  *(_QWORD *)&v3[v4] = v29;
  v30 = (unint64_t *)&v3[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v2 = *v30;
  if (*v30 >> 62)
    goto LABEL_25;
  v31 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v31; v31 = sub_23AA335C0())
  {
    v32 = 4;
    v33 = 0;
    if ((v2 & 0xC000000000000001) != 0)
    {
LABEL_15:
      v34 = (char *)MEMORY[0x23B85D0B0](v33, v2);
      goto LABEL_17;
    }
    while (1)
    {
      v34 = (char *)*(id *)(v2 + 8 * v32);
LABEL_17:
      v35 = v34;
      if (__OFADD__(v33, 1))
        break;
      v36 = &v34[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v34[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v37 = *((_QWORD *)v36 + 1);
        ObjectType = swift_getObjectType();
        objc_msgSend(a1, sel_range);
        v40 = v39;
        v46[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v46[4] = (uint64_t)&off_250BC1140;
        v46[0] = (uint64_t)v45;
        v41 = *(void (**)(uint64_t *, uint64_t, uint64_t, float))(v37 + 48);
        v42 = v45;
        v41(v46, ObjectType, v37, v40);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v46);
      }

      if (v33 + 1 == v31)
        return swift_bridgeObjectRelease_n();
      v33 = ++v32 - 4;
      if ((v2 & 0xC000000000000001) != 0)
        goto LABEL_15;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23A9933D4(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v14;
  _QWORD v16[5];

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  if (!(*(_QWORD *)v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x23B85D0B0](i, v4);
      else
        v8 = (char *)*(id *)(v4 + 8 * i + 32);
      v9 = v8;
      v10 = &v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v11 = *((_QWORD *)v10 + 1);
        ObjectType = swift_getObjectType();
        v16[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v16[4] = &off_250BC1140;
        v16[0] = v2;
        v13 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v11 + 56);
        v14 = v2;
        v13(a1, v16, ObjectType, v11);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v16);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9935A4(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v14;
  _QWORD v16[5];

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  if (!(*(_QWORD *)v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x23B85D0B0](i, v4);
      else
        v8 = (char *)*(id *)(v4 + 8 * i + 32);
      v9 = v8;
      v10 = &v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v11 = *((_QWORD *)v10 + 1);
        ObjectType = swift_getObjectType();
        v16[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v16[4] = &off_250BC1140;
        v16[0] = v2;
        v13 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v11 + 64);
        v14 = v2;
        v13(a1, v16, ObjectType, v11);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v16);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A993770(void *a1)
{
  void *v1;
  unsigned int v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t i;
  char *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(void *, uint64_t *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v26[5];
  uint64_t v27;

  v2 = objc_msgSend(a1, sel_BOOLValue);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = sub_23AA32E88();
  v6 = sub_23AA33218();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v7 = 138412546;
    v27 = (uint64_t)v4;
    v9 = v4;
    sub_23AA333F8();
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    if (v2)
      v10 = 1702195828;
    else
      v10 = 0x65736C6166;
    if (v2)
      v11 = 0xE400000000000000;
    else
      v11 = 0xE500000000000000;
    v27 = sub_23A964DBC(v10, v11, v26);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v5, v6, "ðŸ§­ FMR1PrxContxt%@: path-is-degenerate is %s for item", (uint8_t *)v7, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v24, -1, -1);
    MEMORY[0x23B85DB24](v7, -1, -1);

  }
  else
  {

  }
  v12 = &v4[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v13 = *(_QWORD *)v12;
  if (!(*(_QWORD *)v12 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v14)
      goto LABEL_14;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v14 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_14:
  if (v14 >= 1)
  {
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v17 = (char *)MEMORY[0x23B85D0B0](i, v13);
      else
        v17 = (char *)*(id *)(v13 + 8 * i + 32);
      v18 = v17;
      v19 = &v17[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v17[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v20 = *((_QWORD *)v19 + 1);
        ObjectType = swift_getObjectType();
        v26[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v26[4] = (uint64_t)&off_250BC1140;
        v26[0] = (uint64_t)v4;
        v22 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v20 + 72);
        v23 = v4;
        v22(a1, v26, ObjectType, v20);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v26);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A993B3C(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t i;
  char *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  void (*v27)(void *, uint64_t *, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31[5];
  uint64_t v32;

  v3 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error] = a1;
  v4 = a1;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  v6 = a1;
  v7 = v1;
  v8 = a1;
  v9 = v7;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33218();
  v30 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31[0] = v29;
    *(_DWORD *)v12 = 138412546;
    v32 = (uint64_t)v9;
    v14 = v9;
    sub_23AA333F8();
    *v13 = v9;

    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    v15 = sub_23AA3377C();
    v32 = sub_23A964DBC(v15, v16, v31);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMR1PrxContxt%@: item localizer failed (%s)", (uint8_t *)v12, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v29, -1, -1);
    MEMORY[0x23B85DB24](v12, -1, -1);
  }
  else
  {

  }
  sub_23A996CC4();
  v17 = &v9[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v18 = *(_QWORD *)v17;
  if (!(*(_QWORD *)v17 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v19)
      goto LABEL_8;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v19 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_8:
  if (v19 >= 1)
  {
    for (i = 0; i != v19; ++i)
    {
      if ((v18 & 0xC000000000000001) != 0)
        v22 = (char *)MEMORY[0x23B85D0B0](i, v18);
      else
        v22 = (char *)*(id *)(v18 + 8 * i + 32);
      v23 = v22;
      v24 = &v22[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x23B85DBF0](&v22[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        v25 = *((_QWORD *)v24 + 1);
        ObjectType = swift_getObjectType();
        v31[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v31[4] = (uint64_t)&off_250BC1140;
        v31[0] = (uint64_t)v30;
        v27 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v25 + 80);
        v28 = v30;
        v27(a1, v31, ObjectType, v25);
        swift_unknownObjectRelease();
        sub_23A963B3C((uint64_t)v31);
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_23A993F3C()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, sel_setDelegate_, 0);
    v4 = sub_23AA33824();
    v6 = v5;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v7 = sub_23AA32EA0();
    sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
    v8 = v0;
    swift_bridgeObjectRetain();
    v9 = sub_23AA32E88();
    v10 = sub_23AA33218();
    if (os_log_type_enabled(v9, v10))
    {
      v22 = v4;
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v25 = v23;
      *(_DWORD *)v11 = 138412546;
      v24 = v3;
      v13 = v8;
      sub_23AA333F8();
      *v12 = v8;

      *(_WORD *)(v11 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_23A9E2E00(9uLL, v22, v6);
      swift_bridgeObjectRelease();
      sub_23A96F764();
      sub_23AA3302C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23AA33038();
      v3 = v24;
      swift_bridgeObjectRelease();
      sub_23A964DBC(7876668, 0xE300000000000000, &v25);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v9, v10, "ðŸ§­ FMR1PrxContxt%@: released item localizer <%s> and reset state to unknown", (uint8_t *)v11, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v23, -1, -1);
      MEMORY[0x23B85DB24](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_23A99C0BC(0);
    v20 = *(void (**)(uint64_t))&v8[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
    if (v20)
    {
      v21 = swift_retain();
      v20(v21);

      sub_23A98C874((uint64_t)v20);
      goto LABEL_15;
    }
LABEL_14:

    goto LABEL_15;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v14 = sub_23AA32EA0();
  sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
  v3 = v0;
  v15 = sub_23AA32E88();
  v16 = sub_23AA33218();
  if (!os_log_type_enabled(v15, v16))
  {

    goto LABEL_14;
  }
  v17 = (uint8_t *)swift_slowAlloc();
  v18 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v17 = 138412290;
  v19 = v3;
  sub_23AA333F8();
  *v18 = v3;

  _os_log_impl(&dword_23A95E000, v15, v16, "ðŸ§­ FMR1PrxContxt%@: reset item localizer state to unknown", v17, 0xCu);
  sub_23A964084(&qword_2569D6058);
  swift_arrayDestroy();
  MEMORY[0x23B85DB24](v18, -1, -1);
  MEMORY[0x23B85DB24](v17, -1, -1);

LABEL_15:
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure] = 0;
}

uint64_t sub_23A99441C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = sub_23AA32F30();
  v17 = *(_QWORD *)(v1 - 8);
  v18 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - v5;
  v7 = sub_23AA32ED0();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  MEMORY[0x24BDAC7A8](v7);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23A99CB28;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC1228;
  _Block_copy(aBlock);
  v19 = MEMORY[0x24BEE4AF8];
  sub_23A99D034((unint64_t *)&qword_2569D5AD0, 255, v8, MEMORY[0x24BEE5468]);
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A97221C((unint64_t *)&qword_2569D5AE0, (uint64_t *)&unk_2569D5D00);
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v10 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem) = v10;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v11 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v4, 29.0);
  v12 = *(void (**)(char *, uint64_t))(v17 + 8);
  v13 = v4;
  v14 = v18;
  v12(v13, v18);
  sub_23AA3326C();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v12)(v6, v14);
}

void sub_23A994694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = v3;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412546;
      v10 = v5;
      sub_23AA333F8();
      *v9 = v3;

      *(_WORD *)(v8 + 12) = 2048;
      sub_23AA333F8();
      _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMR1PrxContxt%@: releasing item localizer (unconfiguring) since not started within %f sec", (uint8_t *)v8, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v9, -1, -1);
      MEMORY[0x23B85DB24](v8, -1, -1);
    }
    else
    {

      v6 = v5;
    }

    sub_23A993F3C(v11);
  }
}

void sub_23A994874()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  char *v40;
  void *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  id v53;
  char *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  _QWORD *v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t (*v72)(uint64_t);
  uint64_t (*v73)(uint64_t);
  void *v74;
  void *v75;
  _QWORD *v76;
  char *v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t aBlock;
  unint64_t v92;
  uint64_t (*v93)(uint64_t);
  void *v94;
  void (*v95)();
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  id v99[2];

  v1 = v0;
  v2 = sub_23AA32ED0();
  v3 = *(char **)(v2 - 8);
  v89 = v2;
  v90 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23AA32F00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23AA32F18();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = MEMORY[0x24BDAC7A8](v12);
  if (v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground] == 1)
  {
    v82 = v15;
    v83 = (char *)&v81 - v14;
    v84 = v13;
    v85 = v9;
    v87 = v6;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v86 = v7;
    v88 = v5;
    v16 = sub_23AA32EA0();
    sub_23A9620E8(v16, (uint64_t)qword_2569E0040);
    v17 = v1;
    v18 = sub_23AA32E88();
    v19 = sub_23AA33218();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v20 = 138412290;
      aBlock = (uint64_t)v17;
      v22 = v17;
      sub_23AA333F8();
      *v21 = v17;

      _os_log_impl(&dword_23A95E000, v18, v19, "ðŸ§­ FMR1PrxContxt%@: entering background", v20, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v21, -1, -1);
      MEMORY[0x23B85DB24](v20, -1, -1);

    }
    else
    {

    }
    v33 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v34 = (void *)sub_23AA32FB4();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v17;
    v95 = sub_23A99C74C;
    v96 = v35;
    v36 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v92 = 1107296256;
    v93 = sub_23A9C4DBC;
    v94 = &unk_250BC1188;
    v37 = _Block_copy(&aBlock);
    v38 = v17;
    swift_release();
    v39 = objc_msgSend(v33, sel_beginBackgroundTaskWithName_expirationHandler_, v34, v37);
    _Block_release(v37);

    v40 = &v38[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
    *(_QWORD *)v40 = v39;
    v40[8] = 0;
    sub_23A993F3C();
    sub_23A9731D4();
    v41 = (void *)sub_23AA33290();
    v42 = v82;
    sub_23AA32F0C();
    v43 = v83;
    MEMORY[0x23B85CAF8](v42, 3.0);
    v44 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v45 = v84;
    v44(v42, v84);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v38;
    v95 = sub_23A99C784;
    v96 = v46;
    aBlock = v36;
    v92 = 1107296256;
    v93 = sub_23A9C4DBC;
    v94 = &unk_250BC11D8;
    v47 = _Block_copy(&aBlock);
    v48 = v38;
    swift_release();
    v49 = v85;
    sub_23AA32EE8();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_23A99D034((unint64_t *)&qword_2569D5AD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A97221C((unint64_t *)&qword_2569D5AE0, (uint64_t *)&unk_2569D5D00);
    v50 = v88;
    v51 = v89;
    sub_23AA3344C();
    MEMORY[0x23B85CE10](v43, v49, v50, v47);
    _Block_release(v47);

    (*((void (**)(_QWORD *, uint64_t))v90 + 1))(v50, v51);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v49, v87);
    v44((uint64_t)v43, v45);
  }
  else
  {
    v23 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
    v24 = *MEMORY[0x24BEBE030];
    if ((v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID + 8] & 1) == 0)
    {
      v25 = *(_QWORD *)v23;
      if (*(_QWORD *)v23 != v24)
      {
        v26 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
        objc_msgSend(v26, sel_endBackgroundTask_, v25);

      }
    }
    *(_QWORD *)v23 = v24;
    v23[8] = 0;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer])
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v27 = sub_23AA32EA0();
      sub_23A9620E8(v27, (uint64_t)qword_2569E0040);
      v90 = v1;
      v28 = sub_23AA32E88();
      v29 = sub_23AA33218();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v30 = 138412290;
        aBlock = (uint64_t)v90;
        v32 = v90;
        sub_23AA333F8();
        *v31 = v90;

        _os_log_impl(&dword_23A95E000, v28, v29, "ðŸ§­ FMR1PrxContxt%@: entering foreground", v30, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v31, -1, -1);
        MEMORY[0x23B85DB24](v30, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      sub_23A9731D4();
      v52 = (void *)sub_23AA33290();
      v53 = objc_allocWithZone(MEMORY[0x24BE7BA58]);
      v54 = v1;
      v55 = objc_msgSend(v53, sel_initWithDelegate_queue_, v54, v52);

      aBlock = (uint64_t)v55;
      v56 = sub_23AA33824();
      v58 = v57;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v59 = sub_23AA32EA0();
      sub_23A9620E8(v59, (uint64_t)qword_2569E0040);
      v60 = v54;
      swift_bridgeObjectRetain();
      v61 = sub_23AA32E88();
      v62 = sub_23AA33218();
      v63 = v62;
      if (os_log_type_enabled(v61, v62))
      {
        v64 = swift_slowAlloc();
        v87 = v56;
        v65 = v64;
        v66 = v55;
        v67 = (_QWORD *)swift_slowAlloc();
        v88 = v67;
        v90 = (char *)swift_slowAlloc();
        aBlock = (uint64_t)v60;
        v99[0] = v90;
        *(_DWORD *)v65 = 138412546;
        LODWORD(v89) = v63;
        v68 = v60;
        sub_23AA333F8();
        *v67 = v60;
        v55 = v66;

        *(_WORD *)(v65 + 12) = 2080;
        swift_bridgeObjectRetain();
        v69 = sub_23A9E2E00(9uLL, v87, v58);
        v71 = v70;
        v73 = v72;
        v75 = v74;
        swift_bridgeObjectRelease();
        v97 = 7876668;
        v98 = 0xE300000000000000;
        aBlock = v69;
        v92 = v71;
        v93 = v73;
        v94 = v75;
        sub_23A96F764();
        sub_23AA3302C();
        swift_bridgeObjectRelease();
        aBlock = v97;
        v92 = v98;
        swift_bridgeObjectRetain();
        sub_23AA33038();
        swift_bridgeObjectRelease();
        aBlock = sub_23A964DBC(aBlock, v92, (uint64_t *)v99);
        sub_23AA333F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A95E000, v61, (os_log_type_t)v89, "ðŸ§­ FMR1PrxContxt%@: entering foreground, created item localizer <%s> and will reconfigure", (uint8_t *)v65, 0x16u);
        sub_23A964084(&qword_2569D6058);
        v76 = v88;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v76, -1, -1);
        v77 = v90;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v77, -1, -1);
        MEMORY[0x23B85DB24](v65, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v78 = *(void (**)(uint64_t))&v60[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
      if (v78)
      {
        v79 = swift_retain();
        v78(v79);
        sub_23A98C874((uint64_t)v78);
      }
      v80 = v55;
      sub_23A99C0BC(v55);

    }
  }
}

void sub_23A9952C8(_BYTE *a1, const char *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  _BYTE *v13;
  _BYTE *v14;

  v4 = &a1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
  v5 = *MEMORY[0x24BEBE030];
  if ((a1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID + 8] & 1) == 0)
  {
    v6 = *(_QWORD *)v4;
    if (*(_QWORD *)v4 != v5)
    {
      v7 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      objc_msgSend(v7, sel_endBackgroundTask_, v6);

    }
  }
  *(_QWORD *)v4 = v5;
  v4[8] = 0;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  v14 = a1;
  v9 = sub_23AA32E88();
  v10 = sub_23AA33218();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v14;
    sub_23AA333F8();
    *v12 = v14;

    _os_log_impl(&dword_23A95E000, v9, v10, a2, v11, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v12, -1, -1);
    MEMORY[0x23B85DB24](v11, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23A9954F4(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t *, uint64_t, uint64_t);
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void *, uint64_t *, uint64_t, uint64_t);
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42[3];
  uint64_t v43;
  _UNKNOWN **v44;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = a1;
  v5 = v1;
  v6 = v4;
  v7 = (char *)v5;
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  v10 = &OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context;
  if (os_log_type_enabled(v8, v9))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v42[0] = v41;
    *(_DWORD *)v11 = 138412802;
    v13 = v7;
    sub_23AA333F8();
    *v12 = v7;

    *(_WORD *)(v11 + 12) = 2112;
    v14 = (char *)v6;
    sub_23AA333F8();
    v12[1] = v6;

    *(_WORD *)(v11 + 22) = 2080;
    v15 = &v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
    if (MEMORY[0x23B85DBF0](&v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
    {
      v16 = *((_QWORD *)v15 + 1);
      ObjectType = swift_getObjectType();
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease();
    }
    else
    {
      v20 = 0xE100000000000000;
      v18 = 63;
    }
    sub_23A964DBC(v18, v20, v42);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMR1PrxContxt%@: subscribing %@ for %s", (uint8_t *)v11, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v41, -1, -1);
    MEMORY[0x23B85DB24](v11, -1, -1);

    v10 = &OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context;
  }
  else
  {

  }
  v21 = &v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v22 = (char *)v6;
  MEMORY[0x23B85CC30]();
  if (*(_QWORD *)((*(_QWORD *)v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v21 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_23AA330D4();
  sub_23AA330EC();
  sub_23AA330C8();
  swift_endAccess();
  v23 = &v22[v10[12]];
  if (MEMORY[0x23B85DBF0](v23))
  {
    v24 = *((_QWORD *)v23 + 1);
    v25 = swift_getObjectType();
    v26 = v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState];
    v43 = type metadata accessor for FMR1ItemLocalizerContext();
    v44 = &off_250BC1140;
    v42[0] = (uint64_t)v7;
    v27 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 32);
    v28 = v7;
    v27(v26, v42, v25, v24);
    swift_unknownObjectRelease();
    sub_23A963B3C((uint64_t)v42);
  }
  result = MEMORY[0x23B85DBF0](v23);
  if (result)
  {
    v30 = *((_QWORD *)v23 + 1);
    v31 = swift_getObjectType();
    v32 = v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState];
    v43 = type metadata accessor for FMR1ItemLocalizerContext();
    v44 = &off_250BC1140;
    v42[0] = (uint64_t)v7;
    v33 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v30 + 40);
    v34 = v7;
    v33(v32, v42, v31, v30);
    swift_unknownObjectRelease();
    result = sub_23A963B3C((uint64_t)v42);
  }
  v35 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error];
  if (v35)
  {
    result = MEMORY[0x23B85DBF0](v23);
    if (result)
    {
      v36 = *((_QWORD *)v23 + 1);
      v37 = swift_getObjectType();
      v43 = type metadata accessor for FMR1ItemLocalizerContext();
      v44 = &off_250BC1140;
      v42[0] = (uint64_t)v7;
      v38 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v36 + 80);
      v39 = v7;
      v40 = v35;
      v38(v35, v42, v37, v36);
      swift_unknownObjectRelease();

      return sub_23A963B3C((uint64_t)v42);
    }
  }
  return result;
}

void sub_23A99597C(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  id v13;
  uint64_t *v14;
  id v15;
  int64_t v16;
  uint64_t v17;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = a1;
  v6 = (char *)v4;
  v7 = v5;
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412546;
    v12 = v6;
    sub_23AA333F8();
    *v11 = v6;

    *(_WORD *)(v10 + 12) = 2112;
    v13 = v7;
    sub_23AA333F8();
    v11[1] = v7;

    _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMR1PrxContxt%@: unsubscribing %@", (uint8_t *)v10, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v11, -1, -1);
    MEMORY[0x23B85DB24](v10, -1, -1);

  }
  else
  {

  }
  v14 = (uint64_t *)&v6[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  v15 = v7;
  v16 = sub_23A99CC9C(v14, (uint64_t)v15);

  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (v17 >= v16)
      goto LABEL_8;
  }
  else
  {
    v17 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v16)
    {
LABEL_8:
      sub_23A99C82C(v16, v17, (void (*)(_QWORD))type metadata accessor for FMR1ProximityManagerSubscription);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

void *sub_23A995C10(char a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  unsigned int v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  char *v34;
  id v35;
  char *v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v48;
  void *v49;
  void *v51;
  char v52;
  id v53[2];

  v53[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity) == 1)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = v2;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v51 = (void *)swift_slowAlloc();
      v53[0] = v51;
      *(_DWORD *)v8 = 138412546;
      v10 = a1;
      v11 = v5;
      sub_23AA333F8();
      *v9 = v5;

      *(_WORD *)(v8 + 12) = 2080;
      if ((v10 & 1) != 0)
        v12 = 0x20676E69676E6172;
      else
        v12 = 0x657A696C61636F6CLL;
      if ((v10 & 1) != 0)
        v13 = 0xEC000000796C6E6FLL;
      else
        v13 = 0xE900000000000072;
      sub_23A964DBC(v12, v13, (uint64_t *)v53);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMR1PrxContxt%@: not starting (%s already started)", (uint8_t *)v8, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v51, -1, -1);
      MEMORY[0x23B85DB24](v8, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v14 = sub_23AA32EA0();
  sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
  v15 = v2;
  v16 = sub_23AA32E88();
  v17 = sub_23AA33218();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v48 = (void *)swift_slowAlloc();
    v53[0] = v48;
    *(_DWORD *)v18 = 138412546;
    v20 = v15;
    sub_23AA333F8();
    *v19 = v15;

    *(_WORD *)(v18 + 12) = 2080;
    if ((a1 & 1) != 0)
      v21 = 0x20676E69676E6172;
    else
      v21 = 0x657A696C61636F6CLL;
    if ((a1 & 1) != 0)
      v22 = 0xEC000000796C6E6FLL;
    else
      v22 = 0xE900000000000072;
    sub_23A964DBC(v21, v22, (uint64_t *)v53);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v16, v17, "ðŸ§­ FMR1PrxContxt%@: starting %s", (uint8_t *)v18, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v48, -1, -1);
    MEMORY[0x23B85DB24](v18, -1, -1);

  }
  else
  {

  }
  v23 = *(void **)&v15[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer];
  if (!v23)
  {
LABEL_30:
    v31 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem;
    if (*(_QWORD *)&v15[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v15[v31] = 0;
    swift_release();
    return 0;
  }
  if (a2)
  {
    v24 = v23;
    v25 = a2;
  }
  else
  {
    v26 = objc_allocWithZone(MEMORY[0x24BE7BA48]);
    v27 = v23;
    v25 = objc_msgSend(v26, sel_init);
  }
  v53[0] = 0;
  v28 = a2;
  v29 = objc_msgSend(v23, sel_startWithDevicePoseProvider_error_, v25, v53);

  if (v29)
  {
    v30 = v53[0];
    goto LABEL_30;
  }
  v52 = a1;
  v32 = v53[0];
  v33 = (void *)sub_23AA32CF0();

  swift_willThrow();
  v34 = v15;
  v35 = v33;
  v36 = v34;
  v37 = v33;
  v38 = sub_23AA32E88();
  v39 = sub_23AA33218();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = (_QWORD *)swift_slowAlloc();
    v49 = (void *)swift_slowAlloc();
    v53[0] = v49;
    *(_DWORD *)v40 = 138412802;
    v42 = v36;
    sub_23AA333F8();
    *v41 = v36;

    *(_WORD *)(v40 + 12) = 2080;
    if ((v52 & 1) != 0)
      v43 = 0x20676E69676E6172;
    else
      v43 = 0x657A696C61636F6CLL;
    if ((v52 & 1) != 0)
      v44 = 0xEC000000796C6E6FLL;
    else
      v44 = 0xE900000000000072;
    sub_23A964DBC(v43, v44, (uint64_t *)v53);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2080;
    swift_getErrorValue();
    v45 = sub_23AA3377C();
    sub_23A964DBC(v45, v46, (uint64_t *)v53);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v38, v39, "ðŸ§­ FMR1PrxContxt%@: failed starting %s (%s)", (uint8_t *)v40, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v41, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v49, -1, -1);
    MEMORY[0x23B85DB24](v40, -1, -1);

  }
  else
  {

  }
  return v33;
}

void *sub_23A9963EC(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v32;
  char *v33;
  id v34;
  char *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  char v49;
  id v50[2];

  v50[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity) != 1)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v14 = sub_23AA32EA0();
    sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
    v4 = v1;
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      v50[0] = v48;
      *(_DWORD *)v7 = 138412546;
      v15 = a1;
      v16 = v4;
      sub_23AA333F8();
      *v8 = v4;

      *(_WORD *)(v7 + 12) = 2080;
      if ((v15 & 1) != 0)
        v17 = 0x20676E69676E6172;
      else
        v17 = 0x657A696C61636F6CLL;
      if ((v15 & 1) != 0)
        v18 = 0xEC000000796C6E6FLL;
      else
        v18 = 0xE900000000000072;
      sub_23A964DBC(v17, v18, (uint64_t *)v50);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      v13 = "ðŸ§­ FMR1PrxContxt%@: not stopping (%s not running)";
      goto LABEL_23;
    }
LABEL_24:

    return 0;
  }
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked) & 1) != 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v3 = sub_23AA32EA0();
    sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
    v4 = v1;
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      v50[0] = v48;
      *(_DWORD *)v7 = 138412546;
      v9 = a1;
      v10 = v4;
      sub_23AA333F8();
      *v8 = v4;

      *(_WORD *)(v7 + 12) = 2080;
      if ((v9 & 1) != 0)
        v11 = 0x20676E69676E6172;
      else
        v11 = 0x657A696C61636F6CLL;
      if ((v9 & 1) != 0)
        v12 = 0xEC000000796C6E6FLL;
      else
        v12 = 0xE900000000000072;
      sub_23A964DBC(v11, v12, (uint64_t *)v50);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      v13 = "ðŸ§­ FMR1PrxContxt%@: not stopping (%s stop already asked)";
LABEL_23:
      _os_log_impl(&dword_23A95E000, v5, v6, v13, (uint8_t *)v7, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v48, -1, -1);
      MEMORY[0x23B85DB24](v7, -1, -1);

      return 0;
    }
    goto LABEL_24;
  }
  *((_BYTE *)v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked) = 1;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v19 = sub_23AA32EA0();
  sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
  v20 = v1;
  v21 = sub_23AA32E88();
  v22 = sub_23AA33218();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v46 = (void *)swift_slowAlloc();
    v50[0] = v46;
    *(_DWORD *)v23 = 138412546;
    v25 = v20;
    sub_23AA333F8();
    *v24 = v20;

    *(_WORD *)(v23 + 12) = 2080;
    if ((a1 & 1) != 0)
      v26 = 0x20676E69676E6172;
    else
      v26 = 0x657A696C61636F6CLL;
    if ((a1 & 1) != 0)
      v27 = 0xEC000000796C6E6FLL;
    else
      v27 = 0xE900000000000072;
    sub_23A964DBC(v26, v27, (uint64_t *)v50);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v21, v22, "ðŸ§­ FMR1PrxContxt%@: stopping %s", (uint8_t *)v23, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v46, -1, -1);
    MEMORY[0x23B85DB24](v23, -1, -1);

  }
  else
  {

  }
  v28 = *(void **)&v20[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer];
  if (!v28)
  {
LABEL_39:
    sub_23A99441C();
    return 0;
  }
  v50[0] = 0;
  if (objc_msgSend(v28, sel_stop_, v50))
  {
    v29 = v50[0];
    goto LABEL_39;
  }
  v49 = a1;
  v32 = v50[0];
  v30 = (void *)sub_23AA32CF0();

  swift_willThrow();
  v33 = v20;
  v34 = v30;
  v35 = v33;
  v36 = v30;
  v37 = sub_23AA32E88();
  v38 = sub_23AA33218();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v40 = (_QWORD *)swift_slowAlloc();
    v47 = (void *)swift_slowAlloc();
    v50[0] = v47;
    *(_DWORD *)v39 = 138412802;
    v41 = v35;
    sub_23AA333F8();
    *v40 = v35;

    *(_WORD *)(v39 + 12) = 2080;
    if ((v49 & 1) != 0)
      v42 = 0x20676E69676E6172;
    else
      v42 = 0x657A696C61636F6CLL;
    if ((v49 & 1) != 0)
      v43 = 0xEC000000796C6E6FLL;
    else
      v43 = 0xE900000000000072;
    sub_23A964DBC(v42, v43, (uint64_t *)v50);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2080;
    swift_getErrorValue();
    v44 = sub_23AA3377C();
    sub_23A964DBC(v44, v45, (uint64_t *)v50);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v37, v38, "ðŸ§­ FMR1PrxContxt%@: failed stopping %s (%s)", (uint8_t *)v39, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v47, -1, -1);
    MEMORY[0x23B85DB24](v39, -1, -1);

  }
  else
  {

  }
  return v30;
}

void sub_23A996CC4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  _BYTE *v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  NSObject *v26;
  uint64_t v27;
  objc_class *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  objc_class *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  NSObject *v55;
  uint8_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  uint64_t *v70;
  _BOOL8 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  void *v80;
  void *v81;
  NSObject *v82;
  void *v83;
  unsigned int v84;
  uint64_t v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  _QWORD *v100;
  NSObject *v101;
  uint64_t v102;
  NSObject *v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  _QWORD *v107;
  NSObject *v108;
  uint64_t v109;
  objc_class *v110;
  uint64_t v111;
  objc_class *v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  unint64_t v116;
  os_log_type_t v117;
  uint8_t *v118;
  _QWORD *v119;
  NSObject *v120;
  uint64_t v121;
  objc_class *v122;
  uint64_t v123;
  objc_class *v124;
  uint64_t v125;
  uint64_t i;
  char *v127;
  void *v128;
  void *v129;
  id v130;
  objc_class *v131;
  uint64_t v132;
  uint64_t *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  void *v139[3];
  char v140;
  void *v141[3];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144[3];
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;

  v1 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v133 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)((char *)v0 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions);
  swift_beginAccess();
  v9 = *v8;
  if ((unint64_t)*v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v10 = sub_23AA335C0();
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v138 = v0;
  v133 = v8;
  v137 = v4;
  v136 = v5;
  v135 = v7;
  v134 = v3;
  if (v10)
  {
    if (v10 >= 1)
    {
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = &OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context;
      v15 = &OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context;
      while (1)
      {
        v16 = (v9 & 0xC000000000000001) != 0
            ? (_BYTE *)MEMORY[0x23B85D0B0](v11, v9)
            : *(id *)(v9 + 8 * v11 + 32);
        if (v16[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsRangingOnly] == 1)
        {
          v17 = __OFADD__(v13++, 1);
          if (v17)
            break;
        }
        v18 = v16[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer];

        if (v18 == 1)
        {
          v17 = __OFADD__(v12++, 1);
          if (v17)
          {
            __break(1u);
            goto LABEL_16;
          }
        }
        if (v10 == ++v11)
          goto LABEL_17;
      }
      __break(1u);
      goto LABEL_113;
    }
    __break(1u);
    goto LABEL_149;
  }
LABEL_16:
  v12 = 0;
  v13 = 0;
LABEL_17:
  swift_bridgeObjectRelease_n();
  v4 = (uint64_t)v138;
  if (*((_BYTE *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState) != 2)
  {
    if (qword_2569D4AC0 == -1)
    {
LABEL_25:
      v27 = sub_23AA32EA0();
      sub_23A9620E8(v27, (uint64_t)qword_2569E0040);
      v28 = (objc_class *)(id)v4;
      v29 = sub_23AA32E88();
      v30 = sub_23AA33218();
      if (!os_log_type_enabled(v29, v30))
        goto LABEL_130;
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v31 = 138412290;
      *(_QWORD *)&v147 = v28;
      v33 = v28;
      sub_23AA333F8();
      *v32 = v28;

      v34 = "ðŸ§­ FMR1PrxContxt%@: waiting to be ready";
LABEL_27:
      _os_log_impl(&dword_23A95E000, v29, v30, v34, v31, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v32, -1, -1);
      MEMORY[0x23B85DB24](v31, -1, -1);

      return;
    }
LABEL_149:
    swift_once();
    goto LABEL_25;
  }
  v19 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState;
  if (*((_BYTE *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState) == 1)
  {
    if (*((_BYTE *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground) == 1)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v20 = sub_23AA32EA0();
      sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
      v21 = (id)v4;
      v22 = sub_23AA32E88();
      v23 = sub_23AA33218();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v24 = 138412290;
        *(_QWORD *)&v147 = v21;
        v26 = v21;
        sub_23AA333F8();
        *v25 = v21;

        _os_log_impl(&dword_23A95E000, v22, v23, "ðŸ§­ FMR1PrxContxt%@: application is in background", v24, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v25, -1, -1);
        MEMORY[0x23B85DB24](v24, -1, -1);
      }
      else
      {

        v22 = v21;
      }

      objc_release(sub_23A9963EC(*((_BYTE *)&v21->isa
                                 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly)));
      return;
    }
    if (v13 >= 1 && !v12)
    {
      v47 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
      v48 = *((unsigned __int8 *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity);
      if (v48 == 1)
      {
        if ((*((_BYTE *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) & 1) != 0)
          goto LABEL_99;
        if (qword_2569D4AC0 != -1)
          swift_once();
        v49 = sub_23AA32EA0();
        sub_23A9620E8(v49, (uint64_t)qword_2569E0040);
        v50 = (id)v4;
        v51 = sub_23AA32E88();
        v52 = sub_23AA33218();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc();
          v54 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v53 = 138412290;
          *(_QWORD *)&v147 = v50;
          v55 = v50;
          sub_23AA333F8();
          *v54 = v50;

          _os_log_impl(&dword_23A95E000, v51, v52, "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only (but need to stop first)", v53, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v54, -1, -1);
          v56 = v53;
          v4 = (uint64_t)v138;
          MEMORY[0x23B85DB24](v56, -1, -1);
        }
        else
        {

          v51 = v50;
        }

        v48 = *(unsigned __int8 *)(v4 + v47);
      }
      if (v48 == 2)
      {
LABEL_95:
        *(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) = 1;
        if (qword_2569D4AC0 != -1)
          swift_once();
        v102 = sub_23AA32EA0();
        sub_23A9620E8(v102, (uint64_t)qword_2569E0040);
        v103 = (id)v4;
        v104 = sub_23AA32E88();
        v105 = sub_23AA33218();
        if (os_log_type_enabled(v104, v105))
        {
          v106 = (uint8_t *)swift_slowAlloc();
          v107 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v106 = 138412290;
          *(_QWORD *)&v147 = v103;
          v108 = v103;
          sub_23AA333F8();
          *v107 = v103;

          _os_log_impl(&dword_23A95E000, v104, v105, "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only now", v106, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v107, -1, -1);
          MEMORY[0x23B85DB24](v106, -1, -1);
        }
        else
        {

          v104 = v103;
        }

        return;
      }
      if (v48 != 1)
      {
        if (!v48)
          goto LABEL_95;
LABEL_104:
        if (qword_2569D4AC0 != -1)
          swift_once();
        v111 = sub_23AA32EA0();
        sub_23A9620E8(v111, (uint64_t)qword_2569E0040);
        v28 = (objc_class *)(id)v4;
        v29 = sub_23AA32E88();
        v30 = sub_23AA33218();
        if (!os_log_type_enabled(v29, v30))
          goto LABEL_130;
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v31 = 138412290;
        *(_QWORD *)&v147 = v28;
        v112 = v28;
        sub_23AA333F8();
        *v32 = v28;

        v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only (but waiting to be stopped first)";
        goto LABEL_27;
      }
LABEL_99:
      if (*(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) == 1)
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v109 = sub_23AA32EA0();
        sub_23A9620E8(v109, (uint64_t)qword_2569E0040);
        v28 = (objc_class *)(id)v4;
        v29 = sub_23AA32E88();
        v30 = sub_23AA33218();
        if (!os_log_type_enabled(v29, v30))
          goto LABEL_130;
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v31 = 138412290;
        *(_QWORD *)&v147 = v28;
        v110 = v28;
        sub_23AA333F8();
        *v32 = v28;

        v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only (but already is)";
        goto LABEL_27;
      }
      goto LABEL_104;
    }
    v15 = (uint64_t *)OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    v65 = *((unsigned __int8 *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity);
    if (v12 >= 1)
    {
      if (v65 != 1)
        goto LABEL_115;
      if (*((_BYTE *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) != 1)
        goto LABEL_122;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v66 = sub_23AA32EA0();
      sub_23A9620E8(v66, (uint64_t)qword_2569E0040);
      v14 = (uint64_t *)(id)v4;
      v0 = sub_23AA32E88();
      v67 = sub_23AA33218();
      if (os_log_type_enabled(v0, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v68 = 138412290;
        *(_QWORD *)&v147 = v14;
        v70 = v14;
        sub_23AA333F8();
        *v69 = v14;

        _os_log_impl(&dword_23A95E000, v0, v67, "ðŸ§­ FMR1PrxContxt%@: asked to start localizer (but need to stop ranging only first)", v68, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v69, -1, -1);
        MEMORY[0x23B85DB24](v68, -1, -1);
LABEL_114:

        v4 = (uint64_t)v138;
        v65 = *((unsigned __int8 *)v15 + (_QWORD)v138);
LABEL_115:
        if (v65 == 2)
          goto LABEL_118;
        if (v65 != 1)
        {
          if (!v65)
          {
LABEL_118:
            *(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) = 0;
            if (qword_2569D4AC0 != -1)
              swift_once();
            v114 = sub_23AA32EA0();
            sub_23A9620E8(v114, (uint64_t)qword_2569E0040);
            v115 = (id)v4;
            v116 = sub_23AA32E88();
            v117 = sub_23AA33218();
            if (os_log_type_enabled((os_log_t)v116, v117))
            {
              v118 = (uint8_t *)swift_slowAlloc();
              v119 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v118 = 138412290;
              *(_QWORD *)&v147 = v115;
              v120 = v115;
              sub_23AA333F8();
              *v119 = v115;

              _os_log_impl(&dword_23A95E000, (os_log_t)v116, v117, "ðŸ§­ FMR1PrxContxt%@: asked to start localizer now", v118, 0xCu);
              sub_23A964084(&qword_2569D6058);
              swift_arrayDestroy();
              MEMORY[0x23B85DB24](v119, -1, -1);
              MEMORY[0x23B85DB24](v118, -1, -1);
            }
            else
            {

              v116 = (unint64_t)v115;
            }

            v125 = *v133;
            *(_QWORD *)&v147 = MEMORY[0x24BEE4AF8];
            if ((unint64_t)v125 >> 62)
            {
              if (v125 < 0)
                v116 = v125;
              else
                v116 = v125 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain_n();
              v4 = sub_23AA335C0();
              if (v4)
                goto LABEL_136;
            }
            else
            {
              v4 = *(_QWORD *)((v125 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              if (v4)
              {
LABEL_136:
                if (v4 < 1)
                {
                  __break(1u);
                  goto LABEL_165;
                }
                for (i = 0; i != v4; ++i)
                {
                  if ((v125 & 0xC000000000000001) != 0)
                    v127 = (char *)MEMORY[0x23B85D0B0](i, v125);
                  else
                    v127 = (char *)*(id *)(v125 + 8 * i + 32);
                  v128 = v127;
                  v129 = *(void **)&v127[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider];
                  v130 = v129;

                  if (v129)
                  {
                    MEMORY[0x23B85CC30]();
                    if (*(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                      sub_23AA330D4();
                    sub_23AA330EC();
                    sub_23AA330C8();
                  }
                }
                swift_bridgeObjectRelease();
                v116 = v147;
LABEL_155:
                swift_bridgeObjectRelease();
                if (v116 >> 62)
                {
                  swift_bridgeObjectRetain();
                  v132 = sub_23AA335C0();
                  swift_bridgeObjectRelease();
                  if (v132)
                  {
LABEL_157:
                    if ((v116 & 0xC000000000000001) == 0)
                    {
                      if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10))
                      {
                        v131 = (objc_class *)*(id *)(v116 + 32);
LABEL_160:
                        v28 = v131;
                        swift_bridgeObjectRelease();
LABEL_163:

                        goto LABEL_131;
                      }
                      __break(1u);
LABEL_167:
                      swift_once();
LABEL_128:
                      v123 = sub_23AA32EA0();
                      sub_23A9620E8(v123, (uint64_t)qword_2569E0040);
                      v28 = (objc_class *)(id)v4;
                      v29 = sub_23AA32E88();
                      v30 = sub_23AA33218();
                      if (os_log_type_enabled(v29, v30))
                      {
                        v31 = (uint8_t *)swift_slowAlloc();
                        v32 = (_QWORD *)swift_slowAlloc();
                        *(_DWORD *)v31 = 138412290;
                        *(_QWORD *)&v147 = v28;
                        v124 = v28;
                        sub_23AA333F8();
                        *v32 = v28;

                        v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start localizer (but already is)";
                        goto LABEL_27;
                      }
LABEL_130:

LABEL_131:
                      return;
                    }
LABEL_165:
                    v131 = (objc_class *)MEMORY[0x23B85D0B0](0, v116);
                    goto LABEL_160;
                  }
                }
                else if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  goto LABEL_157;
                }
                swift_bridgeObjectRelease();
                v28 = 0;
                goto LABEL_163;
              }
            }
            swift_bridgeObjectRelease();
            v116 = MEMORY[0x24BEE4AF8];
            goto LABEL_155;
          }
          goto LABEL_123;
        }
LABEL_122:
        if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) & 1) == 0)
        {
          if (qword_2569D4AC0 == -1)
            goto LABEL_128;
          goto LABEL_167;
        }
LABEL_123:
        if (qword_2569D4AC0 != -1)
          swift_once();
        v121 = sub_23AA32EA0();
        sub_23A9620E8(v121, (uint64_t)qword_2569E0040);
        v28 = (objc_class *)(id)v4;
        v29 = sub_23AA32E88();
        v30 = sub_23AA33218();
        if (!os_log_type_enabled(v29, v30))
          goto LABEL_130;
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v31 = 138412290;
        *(_QWORD *)&v147 = v28;
        v122 = v28;
        sub_23AA333F8();
        *v32 = v28;

        v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start localizer (but waiting to be stopped first)";
        goto LABEL_27;
      }
LABEL_113:

      v0 = v14;
      goto LABEL_114;
    }
    if (v65 == 1)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v95 = sub_23AA32EA0();
      sub_23A9620E8(v95, (uint64_t)qword_2569E0040);
      v96 = (id)v4;
      v97 = sub_23AA32E88();
      v98 = sub_23AA33218();
      if (os_log_type_enabled(v97, v98))
      {
        v99 = (uint8_t *)swift_slowAlloc();
        v100 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v99 = 138412290;
        *(_QWORD *)&v147 = v96;
        v101 = v96;
        sub_23AA333F8();
        *v100 = v96;

        _os_log_impl(&dword_23A95E000, v97, v98, "ðŸ§­ FMR1PrxContxt%@: asked to stop everything now", v99, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v100, -1, -1);
        MEMORY[0x23B85DB24](v99, -1, -1);
      }
      else
      {

        v97 = v96;
      }

      v113 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly;
      objc_release(sub_23A9963EC(*((_BYTE *)&v96->isa
                                 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly)));
      *((_BYTE *)&v96->isa + v113) = 0;
    }
  }
  else
  {
    v35 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure;
    if ((*((_BYTE *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure) & 1) != 0)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v36 = sub_23AA32EA0();
      sub_23A9620E8(v36, (uint64_t)qword_2569E0040);
      v37 = (id)v4;
      v38 = sub_23AA32E88();
      v39 = sub_23AA33218();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v136 = swift_slowAlloc();
        v137 = swift_slowAlloc();
        *(_QWORD *)&v147 = v137;
        *(_DWORD *)v40 = 138412546;
        v144[0] = (uint64_t)v37;
        v41 = v4;
        v42 = v37;
        sub_23AA333F8();
        v43 = v136;
        *(_QWORD *)v136 = v37;

        *(_WORD *)(v40 + 12) = 2080;
        if (*(_BYTE *)(v41 + v19) == 4)
          v44 = 0x676E69766F6D2820;
        else
          v44 = 0;
        if (*(_BYTE *)(v41 + v19) == 4)
          v45 = 0xE900000000000029;
        else
          v45 = 0xE000000000000000;
        v144[0] = sub_23A964DBC(v44, v45, (uint64_t *)&v147);
        sub_23AA333F8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A95E000, v38, v39, "ðŸ§­ FMR1PrxContxt%@: waiting to be findable%s", (uint8_t *)v40, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v43, -1, -1);
        v46 = v137;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v46, -1, -1);
        MEMORY[0x23B85DB24](v40, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v57 = (char *)v138 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable;
      sub_23A963A14((uint64_t)v138 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)&v147);
      v58 = *((_QWORD *)&v148 + 1);
      v59 = v149;
      sub_23A96545C(&v147, *((uint64_t *)&v148 + 1));
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v59 + 24))(v141, v58, v59);
      v60 = v142;
      sub_23A980B18(v141[0], (uint64_t)v141[1], (uint64_t)v141[2], v142);
      if (v60)
      {
        v61 = v135;
        v62 = v134;
        if (*(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_connectionContext) == 1)
        {
          sub_23A963A14((uint64_t)v57, (uint64_t)v144);
          v63 = v145;
          v64 = v146;
          sub_23A96545C(v144, v145);
          (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v64 + 24))(v139, v63, v64);
          v71 = v140 != 0;
          sub_23A980B18(v139[0], (uint64_t)v139[1], (uint64_t)v139[2], v140);
          sub_23A963B3C((uint64_t)v144);
        }
        else
        {
          v71 = 0;
        }
      }
      else
      {
        v71 = 1;
        v61 = v135;
        v62 = v134;
      }
      sub_23A963B3C((uint64_t)&v147);
      sub_23A963A14((uint64_t)v57, (uint64_t)v144);
      sub_23A964084((uint64_t *)&unk_2569D63B0);
      sub_23A964084((uint64_t *)&unk_2569D5D80);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v149 = 0;
        v147 = 0u;
        v148 = 0u;
      }
      sub_23A963A14((uint64_t)v57, (uint64_t)v144);
      v72 = v145;
      v73 = v146;
      sub_23A96545C(v144, v145);
      (*(void (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73);
      sub_23A99C7A4((uint64_t)&v147, (uint64_t)v141);
      v74 = v142;
      v75 = v35;
      if (v142)
      {
        v76 = v143;
        sub_23A96545C(v141, v142);
        (*(void (**)(uint64_t, uint64_t))(v76 + 16))(v74, v76);
        sub_23A963B3C((uint64_t)v141);
        v77 = v137;
        v78 = v136;
      }
      else
      {
        sub_23A99C7EC((uint64_t)v141);
        v78 = v136;
        v77 = v137;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v62, 1, 1, v137);
      }
      v79 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_connectionContext);
      v80 = (void *)sub_23AA32DEC();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v62, 1, v77) == 1)
      {
        v81 = 0;
      }
      else
      {
        v81 = (void *)sub_23AA32DEC();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v62, v77);
      }
      v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7BA50]), sel_initWithUUID_productUUID_isOwned_requiresLowerRangingFrequency_, v80, v81, v79 == 0, v71);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v61, v77);
      sub_23A963B3C((uint64_t)v144);
      v83 = *(void **)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer);
      if (v83)
        v84 = objc_msgSend(v83, sel_configureForItem_, v82);
      else
        v84 = 0;
      *(_BYTE *)(v4 + v75) = 1;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v85 = sub_23AA32EA0();
      sub_23A9620E8(v85, (uint64_t)qword_2569E0040);
      v86 = (id)v4;
      v87 = sub_23AA32E88();
      v88 = sub_23AA33218();
      if (os_log_type_enabled(v87, v88))
      {
        v89 = swift_slowAlloc();
        v90 = (_QWORD *)swift_slowAlloc();
        v137 = swift_slowAlloc();
        v144[0] = v137;
        *(_DWORD *)v89 = 138412546;
        v141[0] = v86;
        v138 = v82;
        v91 = v86;
        sub_23AA333F8();
        *v90 = v86;

        *(_WORD *)(v89 + 12) = 2080;
        if (v84)
          v92 = 0;
        else
          v92 = 0x2064656C696166;
        if (v84)
          v93 = 0xE000000000000000;
        else
          v93 = 0xE700000000000000;
        v141[0] = (void *)sub_23A964DBC(v92, v93, v144);
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A95E000, v87, v88, "ðŸ§­ FMR1PrxContxt%@: %sconfiguring", (uint8_t *)v89, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v90, -1, -1);
        v94 = v137;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v94, -1, -1);
        MEMORY[0x23B85DB24](v89, -1, -1);

      }
      else
      {

      }
      sub_23A99C7EC((uint64_t)&v147);
    }
  }
}

uint64_t type metadata accessor for FMR1ItemLocalizerContext()
{
  return objc_opt_self();
}

uint64_t sub_23A998670@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23A963A14(*v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, a1);
}

id sub_23A99868C()
{
  return sub_23A9886FC("ðŸ§­ FMR1PrxSubscr%s: deinit", 0, (uint64_t (*)(_QWORD))type metadata accessor for FMR1ProximityManagerSubscription);
}

uint64_t sub_23A998748()
{
  return type metadata accessor for FMR1ProximityManagerSubscription();
}

uint64_t type metadata accessor for FMR1ProximityManagerSubscription()
{
  uint64_t result;

  result = qword_2569D6310;
  if (!qword_2569D6310)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23A99878C(void *a1)
{
  char *v1;
  _BYTE *v2;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  char *v16;
  NSObject *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  id v39;
  char *v40;
  NSObject *v41;
  uint64_t v42;

  v2 = v1;
  v4 = MEMORY[0x23B85DBF0](&v1[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context]);
  if (v4)
  {
    v5 = v4;
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer))
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v6 = sub_23AA32EA0();
      sub_23A9620E8(v6, (uint64_t)qword_2569E0040);
      v7 = v1;
      v8 = sub_23AA32E88();
      v9 = sub_23AA33218();
      if (os_log_type_enabled(v8, v9))
      {
        v39 = a1;
        v10 = (uint8_t *)swift_slowAlloc();
        v37 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v10 = 138412290;
        v11 = v7;
        sub_23AA333F8();
        *v37 = v7;

        a1 = v39;
        _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMR1PrxSubscr%@: asking to start localizer", v10, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v37, -1, -1);
        MEMORY[0x23B85DB24](v10, -1, -1);

LABEL_22:
        v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer] = 1;
        v32 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider];
        *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider] = a1;
        v33 = a1;

        v34 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem;
        if (*(Class *)((char *)&v5->isa
                      + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem))
        {
          swift_retain();
          sub_23AA32F48();
          swift_release();
        }
        *(Class *)((char *)&v5->isa + v34) = 0;
        swift_release();
        sub_23A996CC4();
        goto LABEL_25;
      }

    }
    else
    {
      sub_23A9731D4();
      v17 = v5;
      v18 = (void *)sub_23AA33290();
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7BA58]), sel_initWithDelegate_queue_, v17, v18);

      v20 = sub_23AA33824();
      v22 = v21;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v23 = sub_23AA32EA0();
      sub_23A9620E8(v23, (uint64_t)qword_2569E0040);
      v24 = v2;
      swift_bridgeObjectRetain();
      v25 = sub_23AA32E88();
      v26 = sub_23AA33218();
      if (os_log_type_enabled(v25, v26))
      {
        v38 = v19;
        v27 = swift_slowAlloc();
        v35 = (_QWORD *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v42 = v36;
        *(_DWORD *)v27 = 138412546;
        v41 = v17;
        v28 = v24;
        sub_23AA333F8();
        *v35 = v24;

        *(_WORD *)(v27 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_23A9E2E00(9uLL, v20, v22);
        swift_bridgeObjectRelease();
        sub_23A96F764();
        sub_23AA3302C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_23AA33038();
        swift_bridgeObjectRelease();
        sub_23A964DBC(7876668, 0xE300000000000000, &v42);
        v17 = v41;
        sub_23AA333F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A95E000, v25, v26, "ðŸ§­ FMR1PrxSubscr%@: asking to start localizer, created item localizer <%s> and will re-configure", (uint8_t *)v27, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v35, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v36, -1, -1);
        v29 = v27;
        v19 = v38;
        MEMORY[0x23B85DB24](v29, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v30 = *(void (**)(uint64_t))((char *)&v17->isa
                                           + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler);
      if (v30)
      {
        v31 = swift_retain();
        v30(v31);
        sub_23A98C874((uint64_t)v30);
      }
      v7 = (char *)v19;
      sub_23A99C0BC(v19);
    }

    goto LABEL_22;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
  v40 = v1;
  v5 = sub_23AA32E88();
  v13 = sub_23AA33218();
  if (!os_log_type_enabled(v5, v13))
  {

    return;
  }
  v14 = (uint8_t *)swift_slowAlloc();
  v15 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v14 = 138412290;
  v16 = v40;
  sub_23AA333F8();
  *v15 = v40;

  _os_log_impl(&dword_23A95E000, v5, v13, "ðŸ§­ FMR1PrxSubscr%@: asking to start localizer but no context", v14, 0xCu);
  sub_23A964084(&qword_2569D6058);
  swift_arrayDestroy();
  MEMORY[0x23B85DB24](v15, -1, -1);
  MEMORY[0x23B85DB24](v14, -1, -1);
LABEL_25:

}

void sub_23A998EB0()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v2;
    sub_23AA333F8();
    *v6 = v2;

    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1PrxSubscr%@: asking to stop localizer", v5, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer] = 0;
  v8 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider] = 0;

  v9 = MEMORY[0x23B85DBF0](&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context]);
  if (v9)
  {
    v10 = (void *)v9;
    sub_23A996CC4();

  }
}

uint64_t sub_23A9990AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_23A99914C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  objc_class *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  uint64_t v32;

  v1 = sub_23AA33284();
  v28 = *(_QWORD *)(v1 - 8);
  v29 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23AA33260();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts] = MEMORY[0x24BEE4B00];
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions] = MEMORY[0x24BEE4AF8];
  v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount] = 0;
  v27 = OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_serialQueue;
  sub_23A9731D4();
  v8 = v0;
  sub_23AA32EF4();
  v32 = v7;
  sub_23A99D034((unint64_t *)&unk_2569D6100, 255, v5, MEMORY[0x24BEE5698]);
  sub_23A964084((uint64_t *)&unk_2569D5B40);
  sub_23A97221C((unint64_t *)&qword_2569D6110, (uint64_t *)&unk_2569D5B40);
  sub_23AA3344C();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v3, *MEMORY[0x24BEE5750], v29);
  *(_QWORD *)&v0[v27] = sub_23AA332B4();

  v9 = (objc_class *)type metadata accessor for FMR1ProximityManager();
  v31.receiver = v8;
  v31.super_class = v9;
  v10 = objc_msgSendSuper2(&v31, sel_init);
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_defaultCenter);
  objc_msgSend(v13, sel_addObserver_selector_name_object_, v12, sel_applicationDidEnterBackground, *MEMORY[0x24BEBDF98], 0);

  v14 = objc_msgSend(v11, sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v12, sel_applicationWillEnterForeground, *MEMORY[0x24BEBE008], 0);

  if (qword_2569D4AC0 != -1)
    swift_once();
  v15 = sub_23AA32EA0();
  sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
  v16 = v12;
  v17 = sub_23AA32E88();
  v18 = sub_23AA33218();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v32 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = objc_msgSend(v16, sel_description);
    v22 = sub_23AA32FD8();
    v24 = v23;

    v30 = sub_23A964DBC(v22, v24, &v32);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v17, v18, "ðŸ§­ FMR1ProximMgr%s: init (v14)", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v20, -1, -1);
    MEMORY[0x23B85DB24](v19, -1, -1);

  }
  else
  {

  }
  return v16;
}

void sub_23A9995C4()
{
  NSObject *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  NSObject *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  if (qword_2569D4AC0 != -1)
LABEL_31:
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v0 = sub_23AA32E88();
  v3 = sub_23AA33218();
  if (os_log_type_enabled(v0, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    v6 = v2;
    sub_23AA333F8();
    *v5 = v2;

    _os_log_impl(&dword_23A95E000, v0, v3, "ðŸ§­ FMR1ProximMgr%@: entering background", v4, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v5, -1, -1);
    MEMORY[0x23B85DB24](v4, -1, -1);

  }
  else
  {

  }
  *((_BYTE *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground) = 1;
  v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts);
  swift_beginAccess();
  v8 = *v7;
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_29;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_29;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_29;
          v18 = *(_QWORD *)(v9 + 8 * v14);
          if (!v18)
          {
            v14 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_29;
            v18 = *(_QWORD *)(v9 + 8 * v14);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_28:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    v0 = *(NSObject **)(*(_QWORD *)(v8 + 56) + 8 * v16);
    *((_BYTE *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground) = 1;
    sub_23A994874();
    sub_23A996CC4();
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_28;
  }
  __break(1u);
}

void sub_23A999904()
{
  NSObject *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  NSObject *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  if (qword_2569D4AC0 != -1)
LABEL_31:
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v0 = sub_23AA32E88();
  v3 = sub_23AA33218();
  if (os_log_type_enabled(v0, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    v6 = v2;
    sub_23AA333F8();
    *v5 = v2;

    _os_log_impl(&dword_23A95E000, v0, v3, "ðŸ§­ FMR1ProximMgr%@: entering foreground", v4, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v5, -1, -1);
    MEMORY[0x23B85DB24](v4, -1, -1);

  }
  else
  {

  }
  *((_BYTE *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground) = 0;
  v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts);
  swift_beginAccess();
  v8 = *v7;
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_29;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_29;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_29;
          v18 = *(_QWORD *)(v9 + 8 * v14);
          if (!v18)
          {
            v14 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_29;
            v18 = *(_QWORD *)(v9 + 8 * v14);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_28:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    v0 = *(NSObject **)(*(_QWORD *)(v8 + 56) + 8 * v16);
    *((_BYTE *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground) = 0;
    sub_23A994874();
    sub_23A996CC4();
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v13)
      goto LABEL_29;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_23A999C48@<X0>(_QWORD *a1@<X0>, char *a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_t *v18;
  Class isa;
  char v20;
  char v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  _BOOL4 v27;
  _DWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  os_log_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  void (**v47)();
  uint64_t v48;
  uint64_t v49;
  void (**v50)();
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char isUniquelyReferenced_nonNull_native;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  id v61;
  char *v62;
  uint64_t v63;
  id v64;
  char *v65;
  id v66;
  uint64_t v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  os_log_t v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t result;
  char *v88;
  void *v89;
  id v90;
  void (*v91)();
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  char *v95;
  NSObject *v96;
  os_log_type_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  os_log_t v111;
  os_log_t v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  os_log_t v117;
  unint64_t v118;
  char v119;
  void *v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  id v125;
  id v126;
  char *v127;
  uint64_t v128;
  _DWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  os_log_t v133;
  uint64_t v134;
  os_log_t v135;
  void (**v136)();
  uint64_t v137;
  char *v138;
  _QWORD *v139;
  NSObject *v140;
  id v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[3];
  uint64_t v146;
  uint64_t v147;
  os_log_t v148;

  v140 = a4;
  v141 = a3;
  v139 = a6;
  v10 = sub_23AA32E1C();
  v142 = *(char **)(v10 - 8);
  v143 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v128 - v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_23A96545C(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  v18 = (os_log_t *)&a2[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts];
  swift_beginAccess();
  isa = (*v18)[2].isa;
  v138 = v15;
  if (isa)
  {
    swift_bridgeObjectRetain();
    sub_23AA1D250((uint64_t)v15);
    v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v22 = sub_23AA32EA0();
      sub_23A9620E8(v22, (uint64_t)qword_2569E0040);
      sub_23A963A14((uint64_t)a1, (uint64_t)v145);
      v23 = a2;
      v24 = sub_23AA32E88();
      v25 = sub_23AA33218();
      v26 = v25;
      v27 = os_log_type_enabled(v24, v25);
      v136 = (void (**)())v23;
      if (v27)
      {
        v28 = (_DWORD *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v137 = v6;
        v30 = (_QWORD *)v29;
        v132 = v29;
        v135 = (os_log_t)swift_slowAlloc();
        v148 = v135;
        v129 = v28;
        *v28 = 138412802;
        v133 = v24;
        LODWORD(v134) = v26;
        v144 = (uint64_t)v23;
        v131 = v145;
        v31 = v23;
        sub_23AA333F8();
        *v30 = v23;

        v32 = v129;
        *((_WORD *)v129 + 6) = 2080;
        v130 = (uint64_t)v32 + 14;
        v34 = v146;
        v33 = v147;
        sub_23A96545C(v145, v146);
        (*(void (**)(uint64_t, uint64_t))(v33 + 16))(v34, v33);
        sub_23A99D034((unint64_t *)&qword_2569D5D20, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v35 = v143;
        v36 = sub_23AA33710();
        v38 = v37;
        (*((void (**)(char *, uint64_t))v142 + 1))(v13, v35);
        v144 = sub_23A964DBC(v36, v38, (uint64_t *)&v148);
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        sub_23A963B3C((uint64_t)v145);
        *((_WORD *)v32 + 11) = 2080;
        if (v31[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground])
          v39 = 0x6B636162206E6928;
        else
          v39 = 0;
        if (v31[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground])
          v40 = 0xEF29646E756F7267;
        else
          v40 = 0xE000000000000000;
        v144 = sub_23A964DBC(v39, v40, (uint64_t *)&v148);
        sub_23AA333F8();

        swift_bridgeObjectRelease();
        v41 = v133;
        _os_log_impl(&dword_23A95E000, v133, (os_log_type_t)v134, "ðŸ§­ FMR1ProximMgr%@: setting up for '%s' but item already known %s", (uint8_t *)v32, 0x20u);
        sub_23A964084(&qword_2569D6058);
        v42 = v132;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v42, -1, -1);
        v43 = v135;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v43, -1, -1);
        MEMORY[0x23B85DB24](v32, -1, -1);

      }
      else
      {

        sub_23A963B3C((uint64_t)v145);
      }
      v116 = (uint64_t)v138;
      v117 = *v18;
      if ((*v18)[2].isa)
      {
        swift_bridgeObjectRetain();
        v118 = sub_23AA1D250(v116);
        if ((v119 & 1) != 0)
        {
          v120 = (void *)*((_QWORD *)v117[7].isa + v118);
          v121 = v120;
        }
        else
        {
          v120 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v120 = 0;
      }
      sub_23A963A14((uint64_t)a1, (uint64_t)v145);
      v122 = objc_allocWithZone((Class)type metadata accessor for FMR1ProximityManagerSubscription());
      v123 = v120;
      v124 = swift_unknownObjectRetain();
      v125 = sub_23A99CB30(v124, (uint64_t)v140, (uint64_t)v145);
      swift_unknownObjectRelease();

      if (v120)
      {
        v126 = v123;
        sub_23A9954F4(v125);

      }
      v127 = (char *)v136 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions;
      swift_beginAccess();
      v66 = v125;
      MEMORY[0x23B85CC30]();
      if (*(_QWORD *)((*(_QWORD *)v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v127 & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
        sub_23AA330D4();
      sub_23AA330EC();
      sub_23AA330C8();
      swift_endAccess();

      result = (*((uint64_t (**)(uint64_t, uint64_t))v142 + 1))(v116, v143);
LABEL_41:
      v115 = v139;
      goto LABEL_42;
    }
  }
  v137 = v6;
  sub_23A963A14((uint64_t)a1, (uint64_t)v145);
  LOBYTE(v148) = a5;
  v44 = objc_allocWithZone((Class)type metadata accessor for FMR1ItemLocalizerContext());
  v45 = (char *)sub_23A9915A4((uint64_t)v145, (char *)&v148);
  v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v47 = (void (**)())&v45[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
  v48 = *(_QWORD *)&v45[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
  *v47 = sub_23A99D024;
  v47[1] = (void (*)())v46;
  v136 = v47;
  sub_23A98C874(v48);
  v49 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v50 = (void (**)())&v45[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
  v51 = *(_QWORD *)&v45[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
  *v50 = sub_23A99D02C;
  v50[1] = (void (*)())v49;
  sub_23A98C874(v51);
  v52 = a2;
  v53 = a1;
  v55 = v142;
  v54 = v143;
  (*((void (**)(char *, char *, uint64_t))v142 + 2))(v13, v15, v143);
  swift_beginAccess();
  v56 = v45;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v148 = *v18;
  *v18 = (os_log_t)0x8000000000000000;
  sub_23A97FA10((uint64_t)v56, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *v18 = v148;
  swift_bridgeObjectRelease();
  v58 = (void (*)(char *, uint64_t))*((_QWORD *)v55 + 1);
  v59 = (uint64_t)v53;
  v60 = v52;
  v142 = v13;
  v58(v13, v54);
  swift_endAccess();
  sub_23A963A14(v59, (uint64_t)v145);
  v61 = objc_allocWithZone((Class)type metadata accessor for FMR1ProximityManagerSubscription());
  v62 = v56;
  v63 = swift_unknownObjectRetain();
  v64 = sub_23A99CB30(v63, (uint64_t)v140, (uint64_t)v145);
  swift_unknownObjectRelease();

  sub_23A9954F4(v64);
  v65 = &v52[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions];
  swift_beginAccess();
  v66 = v64;
  MEMORY[0x23B85CC30]();
  if (*(_QWORD *)((*(_QWORD *)v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v65 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_23AA330D4();
  sub_23AA330EC();
  sub_23AA330C8();
  swift_endAccess();
  if ((v52[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground] & 1) != 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v67 = sub_23AA32EA0();
    sub_23A9620E8(v67, (uint64_t)qword_2569E0040);
    sub_23A963A14(v59, (uint64_t)v145);
    v68 = v52;
    v69 = sub_23AA32E88();
    v70 = sub_23AA33218();
    v71 = v70;
    if (os_log_type_enabled(v69, v70))
    {
      v72 = swift_slowAlloc();
      v141 = v66;
      v73 = v72;
      v74 = (_QWORD *)swift_slowAlloc();
      v140 = swift_slowAlloc();
      v148 = v140;
      *(_DWORD *)v73 = 138412546;
      LODWORD(v136) = v71;
      v75 = v58;
      v144 = (uint64_t)v68;
      v135 = v69;
      v76 = v68;
      sub_23AA333F8();
      *v74 = v60;

      *(_WORD *)(v73 + 12) = 2080;
      v134 = v73 + 14;
      v77 = v146;
      v78 = v147;
      sub_23A96545C(v145, v146);
      v79 = v142;
      (*(void (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
      sub_23A99D034((unint64_t *)&qword_2569D5D20, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v80 = v143;
      v81 = sub_23AA33710();
      v83 = v82;
      v75(v79, v80);
      v144 = sub_23A964DBC(v81, v83, (uint64_t *)&v148);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      sub_23A963B3C((uint64_t)v145);
      v84 = v135;
      _os_log_impl(&dword_23A95E000, v135, (os_log_type_t)v136, "ðŸ§­ FMR1ProximMgr%@: setting up for '%s', but in background", (uint8_t *)v73, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v74, -1, -1);
      v85 = v140;
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v85, -1, -1);
      v86 = v73;
      v66 = v141;
      MEMORY[0x23B85DB24](v86, -1, -1);

      result = ((uint64_t (*)(char *, uint64_t))v75)(v138, v80);
    }
    else
    {

      sub_23A963B3C((uint64_t)v145);
      result = ((uint64_t (*)(char *, uint64_t))v58)(v138, v143);
    }
    goto LABEL_41;
  }
  v141 = v66;
  sub_23A9731D4();
  v88 = v62;
  v89 = (void *)sub_23AA33290();
  v90 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7BA58]), sel_initWithDelegate_queue_, v88, v89);

  v91 = *v136;
  if (*v136)
  {
    v92 = swift_retain();
    ((void (*)(uint64_t))v91)(v92);
    sub_23A98C874((uint64_t)v91);
  }
  v93 = v90;
  sub_23A99C0BC(v90);

  if (qword_2569D4AC0 != -1)
    swift_once();
  v94 = sub_23AA32EA0();
  sub_23A9620E8(v94, (uint64_t)qword_2569E0040);
  sub_23A963A14(v59, (uint64_t)v145);
  v95 = v52;
  v96 = sub_23AA32E88();
  v97 = sub_23AA33218();
  v98 = v97;
  if (os_log_type_enabled(v96, v97))
  {
    v99 = swift_slowAlloc();
    v140 = v93;
    v100 = v99;
    v101 = swift_slowAlloc();
    v133 = v96;
    v102 = (_QWORD *)v101;
    v135 = (os_log_t)swift_slowAlloc();
    v148 = v135;
    *(_DWORD *)v100 = 138412546;
    LODWORD(v134) = v98;
    v136 = (void (**)())v88;
    v144 = (uint64_t)v95;
    v103 = v142;
    v104 = v95;
    sub_23AA333F8();
    *v102 = v60;

    *(_WORD *)(v100 + 12) = 2080;
    v105 = v146;
    v106 = v147;
    sub_23A96545C(v145, v146);
    (*(void (**)(uint64_t, uint64_t))(v106 + 16))(v105, v106);
    sub_23A99D034((unint64_t *)&qword_2569D5D20, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v107 = v143;
    v108 = sub_23AA33710();
    v110 = v109;
    v58(v103, v107);
    v144 = sub_23A964DBC(v108, v110, (uint64_t *)&v148);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)v145);
    v111 = v133;
    _os_log_impl(&dword_23A95E000, v133, (os_log_type_t)v134, "ðŸ§­ FMR1ProximMgr%@: setting up for '%s', created item localizer", (uint8_t *)v100, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v102, -1, -1);
    v112 = v135;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v112, -1, -1);
    MEMORY[0x23B85DB24](v100, -1, -1);

    v113 = v138;
    v114 = v107;
  }
  else
  {

    sub_23A963B3C((uint64_t)v145);
    v113 = v138;
    v114 = v143;
  }
  result = ((uint64_t (*)(char *, uint64_t))v58)(v113, v114);
  v115 = v139;
  v66 = v141;
LABEL_42:
  *v115 = v66;
  return result;
}

void sub_23A99A9E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount;
    if (*(uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount) < 1)
    {
LABEL_18:
      v19 = *(_QWORD *)&v3[v4];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (!v20)
      {
        *(_QWORD *)&v3[v4] = v21;

        return;
      }
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    if (qword_2569D4AC0 != -1)
      swift_once();
    v5 = sub_23AA32EA0();
    sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
    v6 = v3;
    v7 = sub_23AA32E88();
    v8 = sub_23AA33218();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412546;
      v11 = v6;
      sub_23AA333F8();
      *v10 = v3;

      *(_WORD *)(v9 + 12) = 2048;
      sub_23AA333F8();

      _os_log_impl(&dword_23A95E000, v7, v8, "ðŸ§­ FMR1ProximMgr%@: previous item localizers still exist (%ld)", (uint8_t *)v9, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v10, -1, -1);
      MEMORY[0x23B85DB24](v9, -1, -1);
    }
    else
    {

      v7 = v6;
    }

    swift_beginAccess();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_23A991184(v12);
    v14 = v13;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_23AA335C0();
      if (v15)
        goto LABEL_10;
    }
    else
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_10:
        if (v15 < 1)
          goto LABEL_22;
        for (i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0)
            v17 = (id)MEMORY[0x23B85D0B0](i, v14);
          else
            v17 = *(id *)(v14 + 8 * i + 32);
          v18 = v17;
          sub_23A993F3C();

        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
}

void sub_23A99ACD8(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (char *)MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount];
    v4 = __OFSUB__(v3, 1);
    v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount] = v5;

    }
  }
}

uint64_t sub_23A99AD3C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v3 = sub_23AA32ED0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23AA32F00();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_serialQueue];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_23A99CFF8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC1278;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  v15 = a1;
  sub_23AA32EE8();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23A99D034((unint64_t *)&qword_2569D5AD0, 255, v4, MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A97221C((unint64_t *)&qword_2569D5AE0, (uint64_t *)&unk_2569D5D00);
  sub_23AA3344C();
  MEMORY[0x23B85CE40](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_23A99AF2C(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(uint64_t, id);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(uint64_t, id);
  id v20;
  void (**v21)(uint64_t, id);
  id v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  void (**v31)(uint64_t, id);
  void (*v32)(uint64_t, id);
  void (**v33)(uint64_t, id);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (**v43)(uint64_t, id);
  id v44;
  void (**v45)(uint64_t, id);
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  id v49;
  id v50;
  os_log_t v51;
  uint64_t v52;
  void (**v53)(uint64_t, id);
  void (*v54)(uint64_t, id);
  void (**v55)(uint64_t, id);
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint8_t *v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (**v64)(uint64_t, id);
  id v65;
  void (**v66)(uint64_t, id);
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint8_t *v71;
  id v72;
  id v73;
  uint8_t *v74;
  void *v75;
  uint64_t v76;
  void (**v77)(uint64_t, id);
  void (*v78)(uint64_t, id);
  void (**v79)(uint64_t, id);
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  os_log_t v83;
  uint8_t *v84;
  _QWORD *v85;
  NSObject *v86;
  uint64_t *v87;
  id v88;
  uint8_t *v90;
  uint64_t v91;
  os_log_t v92;
  NSObject *v93;
  uint8_t *v94;
  _QWORD *v95;
  void (**v96)(uint64_t, id);
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint8_t *v100;
  _QWORD v101[3];
  uint64_t v102;
  void (**v103)(uint64_t, id);

  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A963A14((uint64_t)a2 + OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_findable, (uint64_t)v101);
  v9 = v102;
  v10 = v103;
  sub_23A96545C(v101, v102);
  v10[2](v9, v10);
  sub_23A963B3C((uint64_t)v101);
  v11 = a1 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts;
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_23AA1D250((uint64_t)v8);
    if ((v14 & 1) != 0)
    {
      v10 = (void (**)(uint64_t, id))*(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v2 = a2;
      v15 = swift_bridgeObjectRetain();
      v16 = sub_23A99C490(v15);
      v99 = 0;
      swift_bridgeObjectRelease();

      if (v16 >> 62)
        v17 = sub_23AA335C0();
      else
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v17)
      {
        v98 = v2;
        if (qword_2569D4AC0 != -1)
          goto LABEL_36;
        while (1)
        {
          v18 = sub_23AA32EA0();
          sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
          v19 = v10;
          v20 = (id)a1;
          v21 = v19;
          v22 = v20;
          v10 = (void (**)(uint64_t, id))sub_23AA32E88();
          v23 = sub_23AA33218();
          v24 = v23;
          if (os_log_type_enabled((os_log_t)v10, v23))
          {
            v25 = swift_slowAlloc();
            v97 = v6;
            v26 = v25;
            v27 = (_QWORD *)swift_slowAlloc();
            v94 = (uint8_t *)swift_slowAlloc();
            v100 = v94;
            *(_DWORD *)v26 = 138412546;
            LODWORD(v93) = v24;
            v101[0] = v22;
            v96 = (void (**)(uint64_t, id))a1;
            v28 = v22;
            v95 = (_QWORD *)v5;
            v29 = v28;
            sub_23AA333F8();
            *v27 = v22;

            *(_WORD *)(v26 + 12) = 2080;
            sub_23A963A14((uint64_t)v21 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v101);
            v30 = v102;
            v31 = v103;
            sub_23A96545C(v101, v102);
            v32 = v31[1];
            v33 = v31;
            a1 = (uint64_t)v96;
            v34 = ((uint64_t (*)(uint64_t, _QWORD))v32)(v30, v33);
            v36 = v35;
            sub_23A963B3C((uint64_t)v101);
            v101[0] = sub_23A964DBC(v34, v36, (uint64_t *)&v100);
            v5 = (uint64_t)v95;
            sub_23AA333F8();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23A95E000, (os_log_t)v10, (os_log_type_t)v93, "ðŸ§­ FMR1ProximMgr%@: unsubscribing, did not tear down, subscriptions still exist '%s'", (uint8_t *)v26, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v27, -1, -1);
            v37 = v94;
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v37, -1, -1);
            v38 = v26;
            v6 = v97;
            MEMORY[0x23B85DB24](v38, -1, -1);

          }
          else
          {

          }
          v2 = v98;
          sub_23A99597C(v98);
LABEL_28:

          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          v87 = (uint64_t *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions);
          swift_beginAccess();
          v88 = v2;
          v5 = sub_23A99CC9C(v87, (uint64_t)v88);

          a1 = *v87;
          if ((unint64_t)*v87 >> 62)
          {
            swift_bridgeObjectRetain();
            v41 = sub_23AA335C0();
            swift_bridgeObjectRelease();
            if (v41 >= v5)
              goto LABEL_30;
          }
          else
          {
            v41 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v41 >= v5)
              goto LABEL_30;
          }
          __break(1u);
LABEL_36:
          swift_once();
        }
      }
LABEL_13:
      if (*((_BYTE *)v10 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity) == 1)
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v42 = sub_23AA32EA0();
        sub_23A9620E8(v42, (uint64_t)qword_2569E0040);
        v43 = v10;
        v44 = (id)a1;
        v45 = v43;
        v46 = v44;
        v47 = sub_23AA32E88();
        v48 = sub_23AA33218();
        LODWORD(v95) = v48;
        if (os_log_type_enabled(v47, v48))
        {
          v92 = (os_log_t)swift_slowAlloc();
          v94 = (uint8_t *)swift_slowAlloc();
          v91 = swift_slowAlloc();
          v100 = (uint8_t *)v91;
          LODWORD(v92->isa) = 138412546;
          v93 = v47;
          v96 = v45;
          v97 = v6;
          v101[0] = v46;
          v49 = v46;
          v98 = v2;
          v50 = v49;
          sub_23AA333F8();
          *(_QWORD *)v94 = v46;

          v51 = v92;
          WORD2(v92[1].isa) = 2080;
          v90 = (uint8_t *)&v51[1].isa + 6;
          sub_23A963A14((uint64_t)v96 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v101);
          v52 = v102;
          v53 = v103;
          sub_23A96545C(v101, v102);
          v54 = v53[1];
          v55 = v53;
          v6 = v97;
          v56 = ((uint64_t (*)(uint64_t, _QWORD))v54)(v52, v55);
          v58 = v57;
          sub_23A963B3C((uint64_t)v101);
          v59 = sub_23A964DBC(v56, v58, (uint64_t *)&v100);
          v60 = (uint8_t *)v51;
          v101[0] = v59;
          v2 = v98;
          v45 = v96;
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A95E000, v93, (os_log_type_t)v95, "ðŸ§­ FMR1ProximMgr%@: tore down '%s' (stopping first)", v60, 0x16u);
          sub_23A964084(&qword_2569D6058);
          v61 = v94;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v61, -1, -1);
          v62 = v91;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v62, -1, -1);
          MEMORY[0x23B85DB24](v60, -1, -1);

        }
        else
        {

        }
      }
      else
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v63 = sub_23AA32EA0();
        sub_23A9620E8(v63, (uint64_t)qword_2569E0040);
        v64 = v10;
        v65 = (id)a1;
        v66 = v64;
        v67 = v65;
        v68 = sub_23AA32E88();
        v69 = sub_23AA33218();
        LODWORD(v96) = v69;
        if (os_log_type_enabled(v68, v69))
        {
          v70 = swift_slowAlloc();
          v91 = (uint64_t)v66;
          v71 = (uint8_t *)v70;
          v95 = (_QWORD *)swift_slowAlloc();
          v93 = swift_slowAlloc();
          v100 = (uint8_t *)v93;
          v94 = v71;
          *(_DWORD *)v71 = 138412546;
          v92 = v68;
          v97 = v6;
          v101[0] = v67;
          v72 = v67;
          v98 = v2;
          v73 = v72;
          sub_23AA333F8();
          *v95 = v67;

          v74 = v94;
          *((_WORD *)v94 + 6) = 2080;
          v90 = v74 + 14;
          v75 = (void *)v91;
          sub_23A963A14(v91 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v101);
          v76 = v102;
          v77 = v103;
          sub_23A96545C(v101, v102);
          v78 = v77[1];
          v79 = v77;
          v6 = v97;
          v80 = ((uint64_t (*)(uint64_t, _QWORD))v78)(v76, v79);
          v82 = v81;
          sub_23A963B3C((uint64_t)v101);
          v101[0] = sub_23A964DBC(v80, v82, (uint64_t *)&v100);
          v2 = v98;
          sub_23AA333F8();

          swift_bridgeObjectRelease();
          v83 = v92;
          v84 = v94;
          _os_log_impl(&dword_23A95E000, v92, (os_log_type_t)v96, "ðŸ§­ FMR1ProximMgr%@: unsubscribing, tore down '%s'", v94, 0x16u);
          sub_23A964084(&qword_2569D6058);
          v85 = v95;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v85, -1, -1);
          v86 = v93;
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v86, -1, -1);
          MEMORY[0x23B85DB24](v84, -1, -1);

        }
        else
        {

        }
      }
      sub_23A993F3C();
      swift_beginAccess();
      v21 = (void (**)(uint64_t, id))sub_23A97F0D4((uint64_t)v8);
      swift_endAccess();

      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v39 = (uint64_t *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions);
  swift_beginAccess();
  v40 = a2;
  v5 = sub_23A99CC9C(v39, (uint64_t)v40);

  a1 = *v39;
  if ((unint64_t)*v39 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (v41 < v5)
      goto LABEL_12;
  }
  else
  {
    v41 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41 < v5)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
  }
LABEL_30:
  sub_23A99C82C(v5, v41, (void (*)(_QWORD))type metadata accessor for FMR1ProximityManagerSubscription);
  return swift_endAccess();
}

id sub_23A99BA08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1ProximityManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1ProximityManager()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for FMLocalizerActivity(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMLocalizerActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23A99BB7C + 4 * byte_23AA37109[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23A99BBB0 + 4 * byte_23AA37104[v4]))();
}

uint64_t sub_23A99BBB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99BBB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A99BBC0);
  return result;
}

uint64_t sub_23A99BBCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A99BBD4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23A99BBD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99BBE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMLocalizerActivity()
{
  return &type metadata for FMLocalizerActivity;
}

uint64_t getEnumTagSinglePayload for FMFindableState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindableState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23A99BCD8 + 4 * byte_23AA37113[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23A99BD0C + 4 * byte_23AA3710E[v4]))();
}

uint64_t sub_23A99BD0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99BD14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A99BD1CLL);
  return result;
}

uint64_t sub_23A99BD28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A99BD30);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23A99BD34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99BD3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindableState()
{
  return &type metadata for FMFindableState;
}

uint64_t storeEnumTagSinglePayload for FMLocalizerState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A99BDA4 + 4 * byte_23AA3711D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A99BDD8 + 4 * byte_23AA37118[v4]))();
}

uint64_t sub_23A99BDD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99BDE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A99BDE8);
  return result;
}

uint64_t sub_23A99BDF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A99BDFCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A99BE00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99BE08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMLocalizerState()
{
  return &type metadata for FMLocalizerState;
}

unint64_t sub_23A99BE28()
{
  unint64_t result;

  result = qword_2569D6370;
  if (!qword_2569D6370)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3735C, &type metadata for FMLocalizerState);
    atomic_store(result, (unint64_t *)&qword_2569D6370);
  }
  return result;
}

unint64_t sub_23A99BE70()
{
  unint64_t result;

  result = qword_2569D6378;
  if (!qword_2569D6378)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3744C, &type metadata for FMFindableState);
    atomic_store(result, (unint64_t *)&qword_2569D6378);
  }
  return result;
}

unint64_t sub_23A99BEB8()
{
  unint64_t result;

  result = qword_2569D6380;
  if (!qword_2569D6380)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3753C, &type metadata for FMLocalizerActivity);
    atomic_store(result, (unint64_t *)&qword_2569D6380);
  }
  return result;
}

void sub_23A99BEFC(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_23AA333F8();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_23A99BFAC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_identifier;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B85D0B0](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = sub_23AA32DF8();

    if ((v8 & 1) != 0)
      return v5;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
      return 0;
  }
}

uint64_t sub_23A99C0BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v7;

  v2 = v1;
  v3 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer) = a1;
  v5 = a1;

  if (*(_QWORD *)(v2 + v3))
    return sub_23A99441C();
  v7 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v2 + v7) = 0;
  return swift_release();
}

void sub_23A99C144()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  char *v14;
  char *v15;

  v1 = (char *)MEMORY[0x23B85DBF0](&v0[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context]);
  if (!v1)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v9 = sub_23AA32EA0();
    sub_23A9620E8(v9, (uint64_t)qword_2569E0040);
    v15 = v0;
    v10 = sub_23AA32E88();
    v11 = sub_23AA33218();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412290;
      v14 = v15;
      sub_23AA333F8();
      *v13 = v15;

      _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMR1PrxSubscr%@: asking to log torch changed state analytics event but no context", v12, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v13, -1, -1);
      MEMORY[0x23B85DB24](v12, -1, -1);

      return;
    }

    goto LABEL_13;
  }
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer])
  {
    v15 = v1;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v2 = sub_23AA32EA0();
    sub_23A9620E8(v2, (uint64_t)qword_2569E0040);
    v3 = v0;
    v4 = sub_23AA32E88();
    v5 = sub_23AA33218();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      v8 = v3;
      sub_23AA333F8();
      *v7 = v3;

      _os_log_impl(&dword_23A95E000, v4, v5, "ðŸ§­ FMR1PrxSubscr%@: asking to log torch changed state analytics event but no itemlocalizer", v6, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v7, -1, -1);
      MEMORY[0x23B85DB24](v6, -1, -1);

      return;
    }

LABEL_13:
    v1 = v15;
  }

}

uint64_t sub_23A99C484(uint64_t a1, uint64_t a2)
{
  return sub_23A99C82C(a1, a2, (void (*)(_QWORD))type metadata accessor for FMNearbyInteractionManagerSubscription);
}

uint64_t sub_23A99C490(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x23B85D0B0](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        sub_23AA32E1C();
        sub_23A99D034((unint64_t *)&qword_2569D60F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        if ((sub_23AA32FA8() & 1) != 0)
        {

        }
        else
        {
          sub_23AA33554();
          sub_23AA33578();
          sub_23AA33584();
          sub_23AA33560();
        }
        ++v3;
        if (v6 == v2)
          return v8;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_23AA335C0();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23A99C62C(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

unint64_t sub_23A99C63C(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

unint64_t sub_23A99C64C(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

unint64_t sub_23A99C65C()
{
  unint64_t result;

  result = qword_2569D6390;
  if (!qword_2569D6390)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA374C4, &type metadata for FMLocalizerActivity);
    atomic_store(result, (unint64_t *)&qword_2569D6390);
  }
  return result;
}

unint64_t sub_23A99C6A0()
{
  unint64_t result;

  result = qword_2569D6398;
  if (!qword_2569D6398)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA373D4, &type metadata for FMFindableState);
    atomic_store(result, (unint64_t *)&qword_2569D6398);
  }
  return result;
}

unint64_t sub_23A99C6E4()
{
  unint64_t result;

  result = qword_2569D63A0;
  if (!qword_2569D63A0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA372E4, &type metadata for FMLocalizerState);
    atomic_store(result, (unint64_t *)&qword_2569D63A0);
  }
  return result;
}

uint64_t sub_23A99C728()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A99C74C()
{
  uint64_t v0;

  sub_23A9952C8(*(_BYTE **)(v0 + 16), "ðŸ§­ FMR1PrxContxt%@: expired background");
}

uint64_t sub_23A99C76C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A99C77C()
{
  return swift_release();
}

void sub_23A99C784()
{
  uint64_t v0;

  sub_23A9952C8(*(_BYTE **)(v0 + 16), "ðŸ§­ FMR1PrxContxt%@: entered background");
}

uint64_t sub_23A99C7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084((uint64_t *)&unk_2569D63C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A99C7EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084((uint64_t *)&unk_2569D63C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A99C82C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_23AA335C0();
  swift_bridgeObjectRelease();
  if (v23 < v3)
    goto LABEL_31;
LABEL_4:
  v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v9 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    v10 = v9 + v7;
    if (!__OFADD__(v9, v7))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62)
    goto LABEL_34;
  v9 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - v8;
  if (__OFADD__(v9, v7))
    goto LABEL_36;
LABEL_8:
  v11 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v11;
  v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v9 = 1;
  }
  if (v11 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10)
    v14 = v10;
  swift_bridgeObjectRetain();
  *v4 = MEMORY[0x23B85D0BC](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v13 + 32;
  v16 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (!v7)
    return sub_23AA330C8();
  if (!(*v4 >> 62))
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_23AA335C0();
  swift_bridgeObjectRelease();
  v18 = v24 - v3;
  if (__OFSUB__(v24, v3))
    goto LABEL_40;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v15 + 8 * v3);
    if (v5 != v3 || v16 >= &v19[8 * v18])
      memmove(v16, v19, 8 * v18);
    if (!(*v4 >> 62))
    {
      v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = v20 + v7;
      if (!__OFADD__(v20, v7))
      {
LABEL_27:
        *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v21;
        return sub_23AA330C8();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    v21 = v25 + v7;
    if (!__OFADD__(v25, v7))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

void sub_23A99CB28()
{
  uint64_t v0;

  sub_23A994694(v0);
}

id sub_23A99CB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _BYTE *v11;
  objc_class *v12;
  id v13;
  objc_super v15;

  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsRangingOnly] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider] = 0;
  v11 = v3;
  sub_23AA32E10();
  (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(&v11[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_identifier], v9, v6);
  *((_QWORD *)v10 + 1) = a2;
  swift_unknownObjectWeakAssign();
  sub_23A963A14(a3, (uint64_t)&v11[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_findable]);
  swift_unknownObjectWeakAssign();

  v12 = (objc_class *)type metadata accessor for FMR1ProximityManagerSubscription();
  v15.receiver = v11;
  v15.super_class = v12;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_23A963B3C(a3);
  return v13;
}

unint64_t sub_23A99CC9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t i;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_23A99BFAC(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if ((v8 & 1) != 0)
    {
      v24 = *a1;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v6 = sub_23AA335C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v9 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_54;
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        v26 = sub_23AA335C0();
        swift_bridgeObjectRelease();
        if (v9 != v26)
          goto LABEL_6;
      }
      else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_identifier;
        for (i = v6 + 5; ; ++i)
        {
          v11 = i - 4;
          v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v13 = (id)MEMORY[0x23B85D0B0](i - 4);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_45;
            v13 = *(id *)(v12 + 8 * i);
          }
          v14 = v13;
          v9 = sub_23AA32DF8();

          if ((v9 & 1) == 0)
            break;
LABEL_32:
          v9 = i - 3;
          if (__OFADD__(v11, 1))
            goto LABEL_46;
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v23 = sub_23AA335C0();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v23)
            return v6;
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1))
            goto LABEL_47;
          goto LABEL_32;
        }
        v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = (id)MEMORY[0x23B85D0B0](v6, *a1);
          v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_50;
            if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_51;
            v16 = *(id *)(v9 + 8 * i);
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_48;
          if (v6 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_49;
          v15 = *(id *)(v9 + 8 * v6 + 32);
          if ((v9 & 0xC000000000000001) == 0)
            goto LABEL_17;
        }
        v16 = (id)MEMORY[0x23B85D0B0](i - 4, v9);
        v9 = *a1;
LABEL_20:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
          sub_23A9F6F48(v9);
        v18 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
        *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;

        sub_23AA330C8();
        v9 = *a1;
        v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v19 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
          sub_23A9F6F48(v9);
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_52;
        v20 = v9 & 0xFFFFFFFFFFFFFF8;
        if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_53;
        v21 = *(void **)(v20 + 8 * i);
        *(_QWORD *)(v20 + 8 * i) = v15;

        sub_23AA330C8();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_23A99CFCC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A99CFF8()
{
  uint64_t v0;

  return sub_23A99AF2C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23A99D000()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A99D024()
{
  uint64_t v0;

  sub_23A99A9E0(v0);
}

void sub_23A99D02C()
{
  uint64_t v0;

  sub_23A99ACD8(v0);
}

uint64_t sub_23A99D034(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B85DA58](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void destroy for FMFindingState(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 99) <= 3u)
    sub_23A963AE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_WORD *)(a1 + 96), *(_BYTE *)(a1 + 98));
}

uint64_t initializeWithCopy for FMFindingState(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char v22;

  v4 = *((unsigned __int8 *)a2 + 99);
  if (v4 > 3)
  {
    v12 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 93) = *(uint64_t *)((char *)a2 + 93);
    v13 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    v14 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    v7 = (void *)a2[2];
    v8 = (void *)a2[3];
    v9 = a2[4];
    v10 = a2[5];
    v11 = a2[6];
    v16 = a2[7];
    v17 = a2[8];
    v18 = a2[9];
    v19 = a2[10];
    v20 = a2[11];
    v21 = *((_WORD *)a2 + 48);
    v22 = *((_BYTE *)a2 + 98);
    sub_23A963C14(*a2, v6, v7, v8, v9, v10, v11, v16, v17, v18, v19, v20, v21, v22);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 64) = v17;
    *(_QWORD *)(a1 + 72) = v18;
    *(_QWORD *)(a1 + 80) = v19;
    *(_QWORD *)(a1 + 88) = v20;
    *(_WORD *)(a1 + 96) = v21;
    *(_BYTE *)(a1 + 98) = v22;
    *(_BYTE *)(a1 + 99) = v4;
    *(_BYTE *)(a1 + 100) = *((_BYTE *)a2 + 100);
  }
  return a1;
}

uint64_t assignWithCopy for FMFindingState(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  __int16 v49;
  char v50;
  char v51;

  v4 = *((unsigned __int8 *)a2 + 99);
  if (*(unsigned __int8 *)(a1 + 99) > 3u)
  {
    if (v4 <= 3)
    {
      v26 = *(_QWORD *)a2;
      v27 = *((_QWORD *)a2 + 1);
      v28 = (void *)*((_QWORD *)a2 + 2);
      v29 = (void *)*((_QWORD *)a2 + 3);
      v30 = *((_QWORD *)a2 + 4);
      v31 = *((_QWORD *)a2 + 5);
      v32 = *((_QWORD *)a2 + 6);
      v33 = *((_QWORD *)a2 + 7);
      v41 = *((_QWORD *)a2 + 8);
      v43 = *((_QWORD *)a2 + 9);
      v45 = *((_QWORD *)a2 + 10);
      v47 = *((_QWORD *)a2 + 11);
      v49 = *((_WORD *)a2 + 48);
      v51 = *((_BYTE *)a2 + 98);
      sub_23A963C14(*(_QWORD *)a2, v27, v28, v29, v30, v31, v32, v33, v41, v43, v45, v47, v49, v51);
      *(_QWORD *)a1 = v26;
      *(_QWORD *)(a1 + 8) = v27;
      *(_QWORD *)(a1 + 16) = v28;
      *(_QWORD *)(a1 + 24) = v29;
      *(_QWORD *)(a1 + 32) = v30;
      *(_QWORD *)(a1 + 40) = v31;
      *(_QWORD *)(a1 + 48) = v32;
      *(_QWORD *)(a1 + 56) = v33;
      *(_QWORD *)(a1 + 64) = v41;
      *(_QWORD *)(a1 + 72) = v43;
      *(_QWORD *)(a1 + 80) = v45;
      *(_QWORD *)(a1 + 88) = v47;
      *(_WORD *)(a1 + 96) = v49;
      *(_BYTE *)(a1 + 98) = v51;
      goto LABEL_6;
    }
LABEL_8:
    v34 = *a2;
    v35 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v35;
    *(_OWORD *)a1 = v34;
    v36 = a2[3];
    v37 = a2[4];
    v38 = a2[5];
    *(_QWORD *)(a1 + 93) = *(_QWORD *)((char *)a2 + 93);
    *(_OWORD *)(a1 + 64) = v37;
    *(_OWORD *)(a1 + 80) = v38;
    *(_OWORD *)(a1 + 48) = v36;
    return a1;
  }
  if (v4 > 3)
  {
    sub_23A963AE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_WORD *)(a1 + 96), *(_BYTE *)(a1 + 98));
    goto LABEL_8;
  }
  v5 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = (void *)*((_QWORD *)a2 + 2);
  v8 = (void *)*((_QWORD *)a2 + 3);
  v9 = *((_QWORD *)a2 + 4);
  v10 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)a2 + 6);
  v12 = *((_QWORD *)a2 + 7);
  v40 = *((_QWORD *)a2 + 8);
  v42 = *((_QWORD *)a2 + 9);
  v44 = *((_QWORD *)a2 + 10);
  v46 = *((_QWORD *)a2 + 11);
  v48 = *((_WORD *)a2 + 48);
  v50 = *((_BYTE *)a2 + 98);
  sub_23A963C14(*(_QWORD *)a2, v6, v7, v8, v9, v10, v11, v12, v40, v42, v44, v46, v48, v50);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(void **)(a1 + 16);
  v16 = *(void **)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_OWORD *)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v24 = *(_WORD *)(a1 + 96);
  v25 = *(_BYTE *)(a1 + 98);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v40;
  *(_QWORD *)(a1 + 72) = v42;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v46;
  *(_WORD *)(a1 + 96) = v48;
  *(_BYTE *)(a1 + 98) = v50;
  sub_23A963AE0(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25);
LABEL_6:
  *(_BYTE *)(a1 + 99) = *((_BYTE *)a2 + 99);
  *(_BYTE *)(a1 + 100) = *((_BYTE *)a2 + 100);
  return a1;
}

__n128 initializeWithTake for FMFindingState(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 93) = *(_QWORD *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FMFindingState(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int16 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  if (*(unsigned __int8 *)(a1 + 99) > 3u)
    goto LABEL_5;
  v4 = *(unsigned __int8 *)(a2 + 99);
  if (v4 > 3)
  {
    sub_23A963AE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_WORD *)(a1 + 96), *(_BYTE *)(a1 + 98));
LABEL_5:
    v23 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v23;
    *(_QWORD *)(a1 + 93) = *(_QWORD *)(a2 + 93);
    v24 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v24;
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v25;
    return a1;
  }
  v5 = *(_WORD *)(a2 + 96);
  v6 = *(_BYTE *)(a2 + 98);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_OWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_WORD *)(a1 + 96);
  v19 = *(_BYTE *)(a1 + 98);
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  *(_WORD *)(a1 + 96) = v5;
  *(_BYTE *)(a1 + 98) = v6;
  sub_23A963AE0(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, v17, v18, v19);
  *(_BYTE *)(a1 + 99) = v4;
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 101))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 99);
  if (v3 >= 4)
    v4 = v3 - 3;
  else
    v4 = 0;
  if (v4 >= 5)
    return v4 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMFindingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 93) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 101) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 101) = 0;
    if (a2)
      *(_BYTE *)(result + 99) = a2 + 7;
  }
  return result;
}

uint64_t sub_23A99D64C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 99);
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

double sub_23A99D660(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0xFC)
  {
    *(_QWORD *)(a1 + 88) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 100) = 0;
    *(_DWORD *)(a1 + 96) = 0;
    *(_QWORD *)a1 = a2 - 253;
  }
  else if (a2)
  {
    *(_BYTE *)(a1 + 99) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingState()
{
  return &type metadata for FMFindingState;
}

void sub_23A99D6B8(char *a1)
{
  sub_23AA1578C(*a1);
}

void sub_23A99D6C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23AA337D0();
  __asm { BR              X9 }
}

uint64_t sub_23A99D708()
{
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

void sub_23A99D770()
{
  __asm { BR              X10 }
}

uint64_t sub_23A99D7A4()
{
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

void sub_23A99D7F8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23AA337D0();
  __asm { BR              X9 }
}

uint64_t sub_23A99D838()
{
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A99D8A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A99F3EC();
  *a1 = result;
  return result;
}

uint64_t sub_23A99D8CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23A99D8F4 + 4 * byte_23AA37580[*v0]))();
}

void sub_23A99D8F4(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6572757361656DLL;
  a1[1] = 0xEB00000000746E65;
}

void sub_23A99D918(_QWORD *a1@<X8>)
{
  *a1 = 0x646E657274;
  a1[1] = 0xE500000000000000;
}

void sub_23A99D930(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1953393000;
  a1[1] = v1;
}

uint64_t sub_23A99D940()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A99D968 + 4 * byte_23AA37584[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_23A99D968()
{
  return 0x6D6572757361656DLL;
}

uint64_t sub_23A99D988()
{
  return 0x646E657274;
}

uint64_t sub_23A99D99C()
{
  return 1953393000;
}

uint64_t sub_23A99D9A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A99F3EC();
  *a1 = result;
  return result;
}

void sub_23A99D9CC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23A99D9D8()
{
  sub_23A99F8F4();
  return sub_23AA33830();
}

uint64_t sub_23A99DA00()
{
  sub_23A99F8F4();
  return sub_23AA3383C();
}

uint64_t sub_23A99DA28()
{
  __int128 *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  int v8;

  sub_23A963B5C(v0, (uint64_t)&v6);
  sub_23A963B5C(v0, (uint64_t)&v7);
  v1 = 0xEC00000064657463;
  v2 = 0x656E6E6F63736964;
  v3 = MEMORY[0x24BEE0D00];
  switch((unsigned __int16)(((unint64_t)(v8 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
      break;
    case 1u:
      v1 = 0xEA0000000000676ELL;
      v2 = 0x697463656E6E6F63;
      break;
    case 2u:
      v1 = 0xE600000000000000;
      v2 = 0x676E69766F6DLL;
      break;
    case 3u:
      v1 = 0xEF68746150646574;
      v2 = 0x6172656E65676564;
      break;
    default:
      __asm { BR              X12 }
      return result;
  }
  sub_23A964084((uint64_t *)&unk_2569D6690);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23AA35F90;
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 64) = sub_23A9640C4();
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  return sub_23AA32FE4();
}

uint64_t sub_23A99DF04(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  int v4;
  uint64_t v5;
  char *v6;
  char v7;
  __int16 v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int16 v57;
  char v58;
  _QWORD v59[12];
  int v60;
  unsigned __int8 v61;
  _QWORD v62[12];
  int v63;
  char v64;
  uint64_t v65;

  v2 = v1;
  sub_23A963B5C(v2, (uint64_t)v59);
  v40 = v59[1];
  v41 = v59[0];
  v38 = (void *)v59[3];
  v39 = (void *)v59[2];
  v36 = v59[5];
  v37 = v59[4];
  v34 = v59[7];
  v35 = v59[6];
  v32 = v59[9];
  v33 = v59[8];
  v30 = v59[11];
  v31 = v59[10];
  v29 = v61;
  v4 = v60;
  v65 = sub_23A964084(&qword_2569D6408);
  v42 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A99F8F4();
  sub_23AA33818();
  sub_23A963B5C(v2, (uint64_t)v62);
  v7 = v64;
  v8 = v63;
  v9 = HIWORD(v63);
  switch((unsigned __int16)(((unint64_t)(v63 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
      LOBYTE(v45) = 0;
      goto LABEL_10;
    case 1u:
      LOBYTE(v45) = 0;
      goto LABEL_10;
    case 2u:
      LOBYTE(v45) = 0;
      goto LABEL_10;
    case 3u:
      LOBYTE(v45) = 0;
LABEL_10:
      v15 = v65;
      sub_23AA336D4();
      result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v6, v15);
      break;
    default:
      v27 = v62[0];
      v28 = v2;
      v29 = v62[2];
      v25 = v62[3];
      v26 = v62[1];
      v23 = v62[5];
      v24 = v62[4];
      v21 = v62[7];
      v22 = v62[6];
      v19 = v62[9];
      v20 = v62[8];
      v10 = v62[11];
      v18 = v62[10];
      LOBYTE(v45) = 0;
      sub_23A963C14(v41, v40, v39, v38, v37, v36, v35, v34, v33, v32, v31, v30, v4, SBYTE2(v4));
      v11 = v65;
      v12 = v43;
      sub_23AA336D4();
      if (v12)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v11);
        v13 = (uint64_t)v28;
      }
      else
      {
        v45 = v27;
        v46 = v26;
        v47 = v29;
        v48 = v25;
        v49 = v24;
        v50 = v23;
        v51 = v22;
        v52 = v21;
        v53 = v20;
        v54 = v19;
        v55 = v18;
        v56 = v10;
        v57 = v8;
        v58 = v9;
        v44 = 1;
        sub_23A99FA04();
        sub_23AA336E0();
        LOBYTE(v45) = HIBYTE(v9);
        v44 = 2;
        sub_23A99FA48();
        sub_23AA336E0();
        v16 = (uint64_t)v28;
        LOBYTE(v45) = v7;
        v44 = 3;
        sub_23A964084(&qword_2569D6420);
        sub_23A99FA8C();
        sub_23AA336E0();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v11);
        v13 = v16;
      }
      result = sub_23A963ED4(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
      break;
  }
  return result;
}

uint64_t sub_23A99E2FC()
{
  __int128 *v0;
  int v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  char v43;

  sub_23A963B5C(v0, (uint64_t)&v16);
  v1 = v29;
  v2 = v28;
  switch((unsigned __int16)(((unint64_t)(v28 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      return sub_23AA337DC();
    default:
      v14 = v17;
      v15 = v16;
      v12 = v19;
      v13 = v18;
      v10 = v21;
      v11 = v20;
      v8 = v23;
      v9 = v22;
      v4 = v24;
      v5 = v25;
      v6 = v26;
      v7 = v27;
      v30 = v16;
      v31 = v17;
      v32 = v18;
      v33 = v19;
      v34 = v20;
      v35 = v21;
      v36 = v22;
      v37 = v23;
      v38 = v24;
      v39 = v25;
      v40 = v26;
      v41 = v27;
      v42 = v28;
      v43 = BYTE2(v28);
      sub_23AA337DC();
      sub_23A963C14(v15, v14, v13, v12, v11, v10, v9, v8, v4, v5, v6, v7, v2, SBYTE2(v2));
      sub_23A9CADC4();
      sub_23AA337DC();
      if (v1 == 3)
        goto LABEL_7;
      sub_23AA337E8();
      if (v1 == 2)
      {
        sub_23AA337DC();
      }
      else
      {
        sub_23AA337DC();
LABEL_7:
        sub_23AA337E8();
      }
      return sub_23A963ED4((uint64_t)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
  }
}

uint64_t sub_23A99E4A8()
{
  __int128 *v0;
  int v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  char v43;

  sub_23AA337D0();
  sub_23A963B5C(v0, (uint64_t)&v16);
  v1 = v29;
  v2 = v28;
  switch((unsigned __int16)(((unint64_t)(v28 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_23AA337DC();
      return sub_23AA33800();
    default:
      v14 = v17;
      v15 = v16;
      v12 = v19;
      v13 = v18;
      v10 = v21;
      v11 = v20;
      v4 = v23;
      v9 = v22;
      v5 = v24;
      v6 = v25;
      v7 = v26;
      v8 = v27;
      v30 = v16;
      v31 = v17;
      v32 = v18;
      v33 = v19;
      v34 = v20;
      v35 = v21;
      v36 = v22;
      v37 = v23;
      v38 = v24;
      v39 = v25;
      v40 = v26;
      v41 = v27;
      v42 = v28;
      v43 = BYTE2(v28);
      sub_23AA337DC();
      sub_23A963C14(v15, v14, v13, v12, v11, v10, v9, v4, v5, v6, v7, v8, v2, SBYTE2(v2));
      sub_23A9CADC4();
      sub_23AA337DC();
      if (v1 == 3)
        goto LABEL_8;
      sub_23AA337E8();
      if (v1 == 2)
      {
        sub_23AA337DC();
      }
      else
      {
        sub_23AA337DC();
LABEL_8:
        sub_23AA337E8();
      }
      sub_23A963ED4((uint64_t)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
      return sub_23AA33800();
  }
}

uint64_t sub_23A99E674(__int128 *a1, __int128 *a2)
{
  __int128 v4[6];
  __int128 v5[6];

  sub_23A963B5C(a1, (uint64_t)v4);
  sub_23A963B5C(a2, (uint64_t)v5);
  return sub_23A99ED04(v4, v5) & 1;
}

uint64_t sub_23A99E6BC()
{
  __int128 *v0;
  _BYTE v2[104];

  sub_23A963B5C(v0, (uint64_t)v2);
  return sub_23A99E4A8();
}

uint64_t sub_23A99E6F0()
{
  __int128 *v0;
  _BYTE v2[104];

  sub_23A963B5C(v0, (uint64_t)v2);
  return sub_23A99E2FC();
}

uint64_t sub_23A99E72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(void **)(v0 + 16);
  v9 = *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v13 = v10;
  sub_23AA337D0();
  switch((unsigned __int16)(((unint64_t)(v9 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_23AA337DC();
      break;
    default:
      sub_23AA337DC();
      sub_23A963C14(v1, v2, v15, v3, v5, v4, v6, v7, v8, v14, v13, v11, v9, SBYTE2(v9));
      sub_23A9CADC4();
      sub_23AA337DC();
      if (HIDWORD(v9) == 3)
      {
        sub_23AA337E8();
        sub_23A963F38(v1, v2, v15, v3, v5, v4, v6, v7, v8, v14, v13, v11, v9);
      }
      else
      {
        sub_23AA337E8();
        sub_23AA337DC();
        if (HIDWORD(v9) != 2)
          sub_23AA337E8();
        sub_23A963F38(v1, v2, v15, v3, v5, v4, v6, v7, v8, v14, v13, v11, v9);
      }
      break;
  }
  return sub_23AA33800();
}

uint64_t sub_23A99E970@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[6];

  result = sub_23A99F434(a1, (uint64_t)v5);
  if (!v2)
    return sub_23A963B5C(v5, a2);
  return result;
}

uint64_t sub_23A99E9B4(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[104];

  sub_23A963B5C(v1, (uint64_t)v4);
  return sub_23A99DF04(a1);
}

uint64_t sub_23A99EA00()
{
  __int128 *v0;
  _BYTE v2[104];

  sub_23A963B5C(v0, (uint64_t)v2);
  return sub_23A99DA28();
}

unint64_t sub_23A99EA38()
{
  unint64_t result;

  result = qword_2569D63D8;
  if (!qword_2569D63D8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3768C, &type metadata for FMFindingState);
    atomic_store(result, (unint64_t *)&qword_2569D63D8);
  }
  return result;
}

uint64_t sub_23A99EA7C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  uint64_t result;
  _BYTE v26[96];
  int v27;
  CGRect v28;
  CGRect v29;

  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_mainScreen);
  v5 = (void *)sub_23AA32FB4();
  MGGetSInt32Answer();

  v6 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v6, sel_nativeScale);

  v7 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v7, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v28.origin.x = v9;
  v28.origin.y = v11;
  v28.size.width = v13;
  v28.size.height = v15;
  CGRectGetWidth(v28);
  v16 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v16, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v29.origin.x = v18;
  v29.origin.y = v20;
  v29.size.width = v22;
  v29.size.height = v24;
  CGRectGetWidth(v29);
  result = sub_23A963B5C(v1, (uint64_t)v26);
  if ((v27 | 0x2000000u) >> 25 != 3)
    __asm { BR              X10 }
  *(_OWORD *)a1 = 0uLL;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  return result;
}

void sub_23A99EC8C()
{
  JUMPOUT(0x23A99EBFCLL);
}

void sub_23A99ECA8()
{
  __asm { FMOV            V0.2D, #0.5 }
  JUMPOUT(0x23A99EBFCLL);
}

uint64_t sub_23A99ED04(__int128 *a1, __int128 *a2)
{
  char v3;
  char v5;
  _BYTE v7[96];
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;

  sub_23A963B5C(a2, (uint64_t)&v9);
  sub_23A963B5C(a1, (uint64_t)&v12);
  switch((unsigned __int16)(((unint64_t)(v13 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
      sub_23A963B5C(a2, (uint64_t)v7);
      if ((unint64_t)HIBYTE(v8) << 24 != 0x4000000)
        goto LABEL_9;
      goto LABEL_7;
    case 1u:
      sub_23A963B5C(a2, (uint64_t)v7);
      if ((unint64_t)HIBYTE(v8) << 24 != 83886080)
        goto LABEL_9;
      goto LABEL_7;
    case 2u:
      sub_23A963B5C(a2, (uint64_t)v7);
      if ((v8 & 0xFE000000) != 0x6000000)
        goto LABEL_9;
LABEL_7:
      v3 = 1;
      break;
    case 3u:
      goto LABEL_9;
    default:
      v5 = BYTE2(v13);
      sub_23A963B5C(a2, (uint64_t)&v10);
      if ((v11 | 0x2000000u) >> 25 != 3)
        __asm { BR              X12 }
LABEL_9:
      v3 = 0;
      break;
  }
  return v3 & 1;
}

void sub_23A99EF9C()
{
  uint64_t v0;

  sub_23A963ED4(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
  JUMPOUT(0x23A99EEA4);
}

uint64_t sub_23A99F318(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 104);
  v2 = *(void **)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 112);
  v3 = *(void **)(a1 + 128);
  sub_23A963B0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24));
  sub_23A963B0C(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_23A99F3EC()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_23A99F434@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int16 v49;
  unsigned __int8 v50;
  char v51;

  v5 = sub_23A964084(&qword_2569D63E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A99F8F4();
  sub_23AA3380C();
  if (v2)
    return sub_23A963B3C((uint64_t)a1);
  LOBYTE(v37) = 0;
  switch(sub_23AA33668())
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v35 = 0;
      v36 = 0;
      v33 = 0;
      v34 = 0;
      v30 = 0;
      v31 = 0;
      v10 = 0;
      v32 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0x4000000;
      goto LABEL_10;
    case 2:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v35 = 0;
      v36 = 0;
      v33 = 0;
      v34 = 0;
      v30 = 0;
      v31 = 0;
      v10 = 0;
      v32 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 83886080;
      goto LABEL_10;
    case 3:
      v51 = 1;
      sub_23A99F938();
      sub_23AA33674();
      v35 = v38;
      v36 = v37;
      v33 = v40;
      v34 = v39;
      v30 = v42;
      v31 = v41;
      v29 = v43;
      v32 = v44;
      v28 = v45;
      v27 = v46;
      v26 = v47;
      v25 = v48;
      v16 = v49;
      v17 = v50;
      v51 = 2;
      sub_23A99F97C();
      sub_23AA33674();
      v23 = v17;
      v24 = v16;
      v22 = v37;
      v51 = 3;
      sub_23A99F9C0();
      sub_23AA33674();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v15 = v24 | (v23 << 16) | (v22 << 24) | ((unint64_t)v37 << 32);
      v10 = v29;
      v11 = v28;
      v12 = v27;
      v13 = v26;
      v14 = v25;
      goto LABEL_10;
    case 4:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v35 = 0;
      v36 = 0;
      v33 = 0;
      v34 = 0;
      v30 = 0;
      v31 = 0;
      v10 = 0;
      v32 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 100663296;
      goto LABEL_10;
    case 5:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v35 = 0;
      v36 = 0;
      v33 = 0;
      v34 = 0;
      v30 = 0;
      v31 = 0;
      v10 = 0;
      v32 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 117440512;
LABEL_10:
      result = sub_23A963B3C((uint64_t)a1);
      v18 = v35;
      *(_QWORD *)a2 = v36;
      *(_QWORD *)(a2 + 8) = v18;
      v19 = v33;
      *(_QWORD *)(a2 + 16) = v34;
      *(_QWORD *)(a2 + 24) = v19;
      v20 = v30;
      *(_QWORD *)(a2 + 32) = v31;
      *(_QWORD *)(a2 + 40) = v20;
      v21 = v32;
      *(_QWORD *)(a2 + 48) = v10;
      *(_QWORD *)(a2 + 56) = v21;
      *(_QWORD *)(a2 + 64) = v11;
      *(_QWORD *)(a2 + 72) = v12;
      *(_QWORD *)(a2 + 80) = v13;
      *(_QWORD *)(a2 + 88) = v14;
      *(_DWORD *)(a2 + 96) = v15;
      *(_BYTE *)(a2 + 100) = BYTE4(v15);
      break;
    default:
      result = sub_23AA335A8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t sub_23A99F8F4()
{
  unint64_t result;

  result = qword_2569D63E8;
  if (!qword_2569D63E8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA377B0, &type metadata for FMFindingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D63E8);
  }
  return result;
}

unint64_t sub_23A99F938()
{
  unint64_t result;

  result = qword_2569D63F0;
  if (!qword_2569D63F0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA389AC, &type metadata for FMFindingMeasurement);
    atomic_store(result, (unint64_t *)&qword_2569D63F0);
  }
  return result;
}

unint64_t sub_23A99F97C()
{
  unint64_t result;

  result = qword_2569D63F8;
  if (!qword_2569D63F8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA388CC, &type metadata for FMFindingTrend);
    atomic_store(result, (unint64_t *)&qword_2569D63F8);
  }
  return result;
}

unint64_t sub_23A99F9C0()
{
  unint64_t result;

  result = qword_2569D6400;
  if (!qword_2569D6400)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA390C4, &type metadata for FMFindingConvergenceHint);
    atomic_store(result, (unint64_t *)&qword_2569D6400);
  }
  return result;
}

unint64_t sub_23A99FA04()
{
  unint64_t result;

  result = qword_2569D6410;
  if (!qword_2569D6410)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38984, &type metadata for FMFindingMeasurement);
    atomic_store(result, (unint64_t *)&qword_2569D6410);
  }
  return result;
}

unint64_t sub_23A99FA48()
{
  unint64_t result;

  result = qword_2569D6418;
  if (!qword_2569D6418)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA388A4, &type metadata for FMFindingTrend);
    atomic_store(result, (unint64_t *)&qword_2569D6418);
  }
  return result;
}

unint64_t sub_23A99FA8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2569D6428;
  if (!qword_2569D6428)
  {
    v1 = sub_23A96C258(&qword_2569D6420);
    v2 = sub_23A99FAF0();
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569D6428);
  }
  return result;
}

unint64_t sub_23A99FAF0()
{
  unint64_t result;

  result = qword_2569D6430;
  if (!qword_2569D6430)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3909C, &type metadata for FMFindingConvergenceHint);
    atomic_store(result, (unint64_t *)&qword_2569D6430);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A99FC10 + 4 * byte_23AA375B4[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A99FC44 + 4 * byte_23AA375AF[v4]))();
}

uint64_t sub_23A99FC44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99FC4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A99FC54);
  return result;
}

uint64_t sub_23A99FC60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A99FC68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A99FC6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A99FC74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingState.CodingKeys()
{
  return &type metadata for FMFindingState.CodingKeys;
}

unint64_t sub_23A99FC94()
{
  unint64_t result;

  result = qword_2569D6438;
  if (!qword_2569D6438)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37788, &type metadata for FMFindingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6438);
  }
  return result;
}

unint64_t sub_23A99FCDC()
{
  unint64_t result;

  result = qword_2569D6440;
  if (!qword_2569D6440)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA376C0, &type metadata for FMFindingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6440);
  }
  return result;
}

unint64_t sub_23A99FD24()
{
  unint64_t result;

  result = qword_2569D6448;
  if (!qword_2569D6448)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA376E8, &type metadata for FMFindingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6448);
  }
  return result;
}

uint64_t sub_23A99FE90()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23AA33500();
  swift_bridgeObjectRelease();
  v0 = sub_23AA33824();
  v2 = sub_23A9E2E00(6uLL, v0, v1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  MEMORY[0x23B85CBA0](v2, v4, v6, v8);
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v9 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v9;
}

id sub_23A9A002C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  objc_class *v20;
  id v21;
  objc_super v23;

  v6 = v5;
  v12 = sub_23AA32EDC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_innerIsolationQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5490], v12);
  v17 = v5;
  v18 = sub_23AA332C0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)&v6[v16] = v18;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_internalIsolationQueue] = 0;

  if (a1)
  {
    v19 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  v20 = (objc_class *)type metadata accessor for FMPFARSCNView();
  v23.receiver = v17;
  v23.super_class = v20;
  v21 = objc_msgSendSuper2(&v23, sel_initWithFrame_options_, v19, a2, a3, a4, a5);

  return v21;
}

id sub_23A9A0368(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  objc_super v14;

  v2 = v1;
  v4 = sub_23AA32EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_innerIsolationQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5490], v4);
  v9 = v1;
  v10 = sub_23AA332C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)&v2[v8] = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_internalIsolationQueue] = 0;

  v11 = (objc_class *)type metadata accessor for FMPFARSCNView();
  v14.receiver = v9;
  v14.super_class = v11;
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id sub_23A9A04A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFARSCNView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFARSCNView()
{
  return objc_opt_self();
}

unint64_t sub_23A9A052C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D6490;
  if (!qword_2569D6490)
  {
    v1 = sub_23A968488(255, (unint64_t *)&qword_2569D6488);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2569D6490);
  }
  return result;
}

id sub_23A9A0584(double a1, double a2, double a3, double a4)
{
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;

  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v9 = a3 * 0.5;
  v10 = a1 - a3 * 0.5;
  v11 = a4 * 0.5;
  v12 = a4 * 0.5 + a2;
  v13 = v9 + a1;
  v14 = a2 - v11;
  v15 = v8;
  objc_msgSend(v15, sel_moveToPoint_, v10, v12);
  objc_msgSend(v15, sel_addLineToPoint_, v13, v12);
  objc_msgSend(v15, sel_addLineToPoint_, v13, v14);
  objc_msgSend(v15, sel_addLineToPoint_, v10, v14);
  objc_msgSend(v15, sel_addLineToPoint_, v10, v12);
  objc_msgSend(v15, sel_closePath);

  return v15;
}

id sub_23A9A067C()
{
  objc_class *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_allocWithZone(v0);
  sub_23A968488(0, &qword_2569D66A8);
  v2 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  sub_23A968488(0, &qword_2569D6688);
  v3 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  v4 = objc_msgSend(v1, sel_initWithEvents_parameters_error_, v2, v3, v8);

  if (v4)
  {
    v5 = v8[0];
  }
  else
  {
    v6 = v8[0];
    sub_23AA32CF0();

    swift_willThrow();
  }
  return v4;
}

id sub_23A9A07B4(uint64_t a1, uint64_t a2)
{
  return sub_23A9A0890(a1, a2, &qword_2569D6688, 0x24BDBF5B8, (SEL *)&selRef_initWithEvents_parameters_error_);
}

id sub_23A9A0830(uint64_t a1, uint64_t a2)
{
  return sub_23A9A0890(a1, a2, (unint64_t *)&unk_2569D66D0, 0x24BDBF5D8, (SEL *)&selRef_initWithEvents_parameterCurves_error_);
}

id sub_23A9A0890(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  _BYTE *v5;
  _QWORD *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = &v5[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
  *v8 = 0;
  v8[1] = 0;
  v5[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = 2;
  sub_23A968488(0, &qword_2569D66A8);
  v9 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  sub_23A968488(0, a3);
  v10 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v16[0] = 0;
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  v11 = objc_msgSendSuper2(&v15, *a5, v9, v10, v16);

  if (v11)
  {
    v12 = v16[0];
  }
  else
  {
    v13 = v16[0];
    sub_23AA32CF0();

    swift_willThrow();
  }
  return v11;
}

id sub_23A9A0A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, SEL *a8)
{
  uint64_t v11;
  uint64_t v12;

  sub_23A968488(0, &qword_2569D66A8);
  v11 = sub_23AA330B0();
  sub_23A968488(0, a6);
  v12 = sub_23AA330B0();
  return sub_23A9A0890(v11, v12, a6, a7, a8);
}

id sub_23A9A0AFC()
{
  _BYTE *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  objc_super v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = 2;
  type metadata accessor for Key(0);
  sub_23A961DE4(&qword_2569D5098, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23AA35EE4);
  v2 = (void *)sub_23AA32F78();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  v3 = objc_msgSendSuper2(&v7, sel_initWithDictionary_error_, v2, v8);

  if (v3)
  {
    v4 = v8[0];
  }
  else
  {
    v5 = v8[0];
    sub_23AA32CF0();

    swift_willThrow();
  }
  return v3;
}

id sub_23A9A0CEC(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  id v14[2];

  v2 = v1;
  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = objc_allocWithZone(v2);
  v5 = (void *)sub_23AA32D14();
  v14[0] = 0;
  v6 = objc_msgSend(v4, sel_initWithContentsOfURL_error_, v5, v14);

  v7 = v14[0];
  if (v6)
  {
    v8 = sub_23AA32D44();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v14[0];
    sub_23AA32CF0();

    swift_willThrow();
    v12 = sub_23AA32D44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id sub_23A9A0E00(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  _QWORD *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  objc_super v14;
  id v15[2];

  v2 = v1;
  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = &v2[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
  *v4 = 0;
  v4[1] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = 2;
  v5 = (void *)sub_23AA32D14();
  v15[0] = 0;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  v6 = objc_msgSendSuper2(&v14, sel_initWithContentsOfURL_error_, v5, v15);

  v7 = v15[0];
  if (v6)
  {
    v8 = sub_23AA32D44();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v15[0];
    sub_23AA32CF0();

    swift_willThrow();
    v12 = sub_23AA32D44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id sub_23A9A0FF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1HapticPattern()
{
  return objc_opt_self();
}

NSObject *sub_23A9A1054()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  NSObject *v24;
  objc_super v26;

  v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticCapability;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_capabilitiesForHardware);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink] = 0;
  v4 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern] = 0;
  v9 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_pulseViewPattern] = 0;
  v10 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer] = 0;
  v11 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor];
  *(_DWORD *)v11 = 0;
  v11[4] = 1;
  v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring;
  *(_QWORD *)&v3[v12] = sub_23A9CCF6C(0x3FF0000000000000, 0, 0, 1, 0, 1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_enablePlayingAheadHaptic] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactorLogCounter] = 0;
  v13 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor];
  *(_DWORD *)v13 = 0;
  v13[4] = 1;
  v14 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v26.receiver = v3;
  v26.super_class = (Class)type metadata accessor for FMR1HapticsController();
  v15 = objc_msgSendSuper2(&v26, sel_init);
  v16 = qword_2569D4AC0;
  v17 = v15;
  if (v16 != -1)
    swift_once();
  v18 = sub_23AA32EA0();
  sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
  v19 = v17;
  v20 = sub_23AA32E88();
  v21 = sub_23AA33218();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v22 = 138412290;
    v24 = v19;
    sub_23AA333F8();
    *v23 = v19;

    _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMR1HaptiCtrl%@: init", v22, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v23, -1, -1);
    MEMORY[0x23B85DB24](v22, -1, -1);
  }
  else
  {

    v20 = v19;
  }

  return v19;
}

id sub_23A9A1508()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  objc_class *v11;
  uint64_t v13;
  objc_super v14;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(v2, sel_description);
    v8 = sub_23AA32FD8();
    v10 = v9;

    sub_23A964DBC(v8, v10, &v13);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1HaptiCtrl%s: deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v11 = (objc_class *)type metadata accessor for FMR1HapticsController();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

uint64_t sub_23A9A19A0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_23AA33824();
  v2 = sub_23A9E2E00(6uLL, v0, v1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  MEMORY[0x23B85CBA0](v2, v4, v6, v8);
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v9 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23A9A1AB8(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  id v35;
  uint64_t result;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t *v52;
  _BYTE v53[4];
  int v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;

  v54 = a3;
  v5 = sub_23A964084((uint64_t *)&unk_2569D66C0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23AA32D44();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v53[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v53[-v16];
  type metadata accessor for FMR1HapticsController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v55 = a1;
  v57 = a2;
  v20 = (void *)sub_23AA32FB4();
  v21 = (void *)sub_23AA32FB4();
  v58 = v19;
  v22 = objc_msgSend(v19, sel_URLForResource_withExtension_, v20, v21);

  if (!v22)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  sub_23AA32D2C();

  v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
  v23(v7, v15, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_23A9683BC((uint64_t)v7, (uint64_t *)&unk_2569D66C0);
    if (qword_2569D4AC0 != -1)
      swift_once();
    v26 = sub_23AA32EA0();
    sub_23A9620E8(v26, (uint64_t)qword_2569E0040);
    v27 = v57;
    swift_bridgeObjectRetain_n();
    v28 = v56;
    v29 = sub_23AA32E88();
    v30 = sub_23AA33218();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      v56 = (char *)swift_slowAlloc();
      v59 = (uint64_t)v28;
      v60 = v56;
      *(_DWORD *)v31 = 138412546;
      v33 = v28;
      sub_23AA333F8();
      *v32 = v28;

      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      v59 = sub_23A964DBC(v55, v27, (uint64_t *)&v60);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v29, v30, "ðŸ§­ FMR1HaptiCtrl%@: unable to load '%s' haptic pattern", (uint8_t *)v31, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v32, -1, -1);
      v34 = v56;
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v34, -1, -1);
      MEMORY[0x23B85DB24](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  v24 = v17;
  v23(v17, v7, v8);
  type metadata accessor for FMR1HapticPattern();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v12, v17, v8);
  v25 = sub_23A9A0CEC((uint64_t)v12);
  v35 = v25;
  if (!v25)
  {

    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v24, v8);
    return 0;
  }
  v56 = (char *)v25;
  v37 = v57;
  swift_bridgeObjectRetain();
  v38 = sub_23A9AAD08(4uLL, v55, v37);
  swift_bridgeObjectRelease();
  result = sub_23AA333E0();
  if ((v39 & 1) != 0)
    v40 = v38;
  else
    v40 = result;
  if (v40 >> 14 >= v38 >> 14)
  {
    v41 = sub_23AA333EC();
    v43 = v42;
    v45 = v44;
    v47 = v46;
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x23B85CBA0](v41, v43, v45, v47);
    v50 = v49;
    swift_bridgeObjectRelease();
    v51 = v56;
    v52 = (uint64_t *)&v56[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
    *v52 = v48;
    v52[1] = v50;

    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v24, v8);
    v51[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = v54 & 1;

    return (uint64_t)v35;
  }
  __break(1u);
  return result;
}

void sub_23A9A205C()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v41;
  char *v42;
  void *v43;
  char *v44;
  id v45;
  char *v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  id v89;
  uint64_t v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  _QWORD *v96;
  char *v97;
  char *aBlock;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  if ((v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup] = 1;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v1 = sub_23AA32EA0();
    sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
    v2 = v0;
    v3 = sub_23AA32E88();
    v4 = sub_23AA33218();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v5 = 138412290;
      aBlock = v2;
      v7 = v2;
      sub_23AA333F8();
      *v6 = v2;

      _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMR1HaptiCtrl%@: setting up haptic engine", v5, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v6, -1, -1);
      MEMORY[0x23B85DB24](v5, -1, -1);

    }
    else
    {

    }
    sub_23A964084(&qword_2569D66B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23AA370F0;
    v9 = (void *)*MEMORY[0x24BDBF520];
    v10 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBF520];
    *(_QWORD *)(inited + 40) = 0x746C7561666544;
    *(_QWORD *)(inited + 48) = 0xE700000000000000;
    v11 = (void *)*MEMORY[0x24BDBF518];
    *(_QWORD *)(inited + 64) = v10;
    *(_QWORD *)(inited + 72) = v11;
    v12 = (void *)*MEMORY[0x24BDBF5A8];
    type metadata accessor for CHHapticPowerUsage(0);
    *(_QWORD *)(inited + 80) = v12;
    v13 = (void *)*MEMORY[0x24BDBF528];
    *(_QWORD *)(inited + 104) = v14;
    *(_QWORD *)(inited + 112) = v13;
    v15 = (void *)*MEMORY[0x24BDBF5B0];
    type metadata accessor for CHHapticUsageCategory(0);
    *(_QWORD *)(inited + 144) = v16;
    *(_QWORD *)(inited + 120) = v15;
    v17 = v9;
    v18 = v11;
    v19 = v12;
    v20 = v13;
    v21 = v15;
    v22 = sub_23A9B69EC(inited);
    sub_23A9A2C6C(v22);
    swift_bridgeObjectRelease();
    v23 = objc_allocWithZone(MEMORY[0x24BDBF5C0]);
    v24 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
    aBlock = 0;
    v25 = objc_msgSend(v23, sel_initWithAudioSession_sessionIsShared_options_error_, 0, 0, v24, &aBlock);

    v26 = aBlock;
    if (v25)
    {
      v27 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine;
      v28 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
      *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine] = v25;
      v29 = v26;

      v30 = *(void **)&v2[v27];
      if (v30)
      {
        v31 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v102 = sub_23A9ABA3C;
        v103 = v31;
        v32 = (char *)MEMORY[0x24BDAC760];
        aBlock = (char *)MEMORY[0x24BDAC760];
        v99 = 1107296256;
        v100 = sub_23A9C4DBC;
        v101 = &unk_250BC16C0;
        v33 = _Block_copy(&aBlock);
        v34 = v30;
        swift_release();
        objc_msgSend(v34, sel_setResetHandler_, v33);
        _Block_release(v33);
        v35 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v102 = sub_23A9ABA44;
        v103 = v35;
        aBlock = v32;
        v99 = 1107296256;
        v100 = sub_23A9A366C;
        v101 = &unk_250BC16E8;
        v36 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(v34, sel_setStoppedHandler_, v36);
        _Block_release(v36);
        objc_msgSend(v34, sel_setPlaysHapticsOnly_, 0);
        objc_msgSend(v34, sel_setIsMutedForAudio_, 0);
        objc_msgSend(v34, sel_setFollowAudioRoute_, 0);
        objc_msgSend(v34, sel_startWithCompletionHandler_, 0);
        v37 = v2;
        v38 = sub_23AA32E88();
        v39 = sub_23AA33218();
        if (os_log_type_enabled(v38, v39))
        {
          v40 = (uint8_t *)swift_slowAlloc();
          v96 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v40 = 138412290;
          aBlock = v37;
          v41 = v37;
          sub_23AA333F8();
          *v96 = v37;

          _os_log_impl(&dword_23A95E000, v38, v39, "ðŸ§­ FMR1HaptiCtrl%@: started haptic engine", v40, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v96, -1, -1);
          MEMORY[0x23B85DB24](v40, -1, -1);

        }
        else
        {

        }
      }
    }
    else
    {
      v42 = aBlock;
      v43 = (void *)sub_23AA32CF0();

      swift_willThrow();
      v44 = v2;
      v45 = v43;
      v46 = v44;
      v47 = v43;
      v48 = sub_23AA32E88();
      v49 = sub_23AA33218();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v51 = (_QWORD *)swift_slowAlloc();
        v97 = (char *)swift_slowAlloc();
        aBlock = v97;
        *(_DWORD *)v50 = 138412546;
        v52 = v46;
        sub_23AA333F8();
        *v51 = v46;

        *(_WORD *)(v50 + 12) = 2080;
        swift_getErrorValue();
        v53 = sub_23AA3377C();
        sub_23A964DBC(v53, v54, (uint64_t *)&aBlock);
        sub_23AA333F8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A95E000, v48, v49, "ðŸ§­ FMR1HaptiCtrl%@: failed creating haptic engine: %s", (uint8_t *)v50, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v51, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v97, -1, -1);
        MEMORY[0x23B85DB24](v50, -1, -1);

      }
      else
      {

      }
    }
    v55 = sub_23A9A1AB8(0xD000000000000011, 0x800000023AA3D510, 1);
    v56 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern] = v55;

    v57 = sub_23A9A1AB8(0xD000000000000011, 0x800000023AA3D530, 1);
    v58 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern] = v57;

    v59 = sub_23A9A1AB8(0xD000000000000013, 0x800000023AA3D550, 1);
    v60 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern] = v59;

    v61 = sub_23A9A1AB8(0xD000000000000012, 0x800000023AA3D570, 1);
    v62 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern] = v61;

    v63 = sub_23A9A1AB8(0xD000000000000012, 0x800000023AA3D590, 1);
    v64 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern] = v63;

    v65 = sub_23A9A1AB8(0xD000000000000012, 0x800000023AA3D5B0, 0);
    v66 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern] = v65;

    v67 = sub_23A9A1AB8(0xD000000000000014, 0x800000023AA3D5D0, 0);
    v68 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern] = v67;

    v69 = sub_23A9A1AB8(0xD000000000000016, 0x800000023AA3D5F0, 0);
    v70 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern] = v69;

    v71 = sub_23A9A1AB8(0x6165684131524D46, 0xEE00393833422D64, 1);
    v72 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern] = v71;

    v73 = sub_23A9A1AB8(0xD000000000000012, 0x800000023AA3D610, 0);
    v74 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern] = v73;

    v75 = sub_23A9A1AB8(0xD000000000000012, 0x800000023AA3D630, 0);
    v76 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern] = v75;

    v77 = sub_23A9A1AB8(0xD000000000000016, 0x800000023AA3D650, 0);
    v78 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern] = v77;

    v79 = sub_23A9A1AB8(0xD000000000000012, 0x800000023AA3D670, 0);
    v80 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern] = v79;

    v81 = sub_23A9A1AB8(0x7261654E31524D46, 0xEF393833422D7962, 0);
    v82 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern] = v81;

    v83 = sub_23A9A1AB8(0x462D495353524D46, 0xEF7261654E2D7261, 0);
    v84 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern] = v83;

    v85 = sub_23A9A1AB8(0xD000000000000015, 0x800000023AA3D690, 0);
    v86 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern] = v85;

    v87 = sub_23A9A1AB8(0xD000000000000015, 0x800000023AA3D6B0, 0);
    v88 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern] = v87;

    v89 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v2, sel_hapticDisplayLinkUpdateWithDisplaylink_);
    v90 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink;
    v91 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink] = v89;

    v92 = *(void **)&v2[v90];
    if (v92)
    {
      v93 = (void *)objc_opt_self();
      v94 = v92;
      v95 = objc_msgSend(v93, sel_currentRunLoop);
      objc_msgSend(v94, sel_addToRunLoop_forMode_, v95, *MEMORY[0x24BDBCB80]);

    }
    sub_23A9A37B0();
  }
}

uint64_t sub_23A9A2C6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23A964084(&qword_2569D66B8);
    v2 = sub_23AA335E4();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_23A965480(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(_QWORD *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    v38 = v40;
    *(_QWORD *)&v36[0] = v17;
    type metadata accessor for CHHapticEngineOptionKey(0);
    v18 = v17;
    swift_dynamicCast();
    sub_23A9ABA4C((_OWORD *)((char *)v37 + 8), v31);
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_23A9ABA4C(v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_23A9ABA4C(v35, v36);
    sub_23A9ABA4C(v36, &v32);
    result = sub_23AA334D0();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_23A9ABA4C(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_23A9ABA5C();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_23A9A3030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  id v28[5];

  v28[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (!v2)
    return;
  v3 = (void *)v2;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine);
  if (!v4)
    goto LABEL_5;
  v28[0] = 0;
  if (objc_msgSend(v4, sel_startAndReturnError_, v28))
  {
    v5 = v28[0];
LABEL_5:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v6 = sub_23AA32EA0();
    sub_23A9620E8(v6, (uint64_t)qword_2569E0040);
    v7 = v3;
    v8 = sub_23AA32E88();
    v9 = sub_23AA33218();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v28[0] = v7;
      v12 = v7;
      sub_23AA333F8();
      *v11 = v3;

      _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMR1HaptiCtrl%@: restarted haptic engine", v10, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v11, -1, -1);
      MEMORY[0x23B85DB24](v10, -1, -1);

    }
    else
    {

    }
    return;
  }
  v13 = v28[0];
  v14 = (void *)sub_23AA32CF0();

  swift_willThrow();
  if (qword_2569D4AC0 != -1)
    swift_once();
  v15 = sub_23AA32EA0();
  sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
  v16 = v3;
  v17 = v14;
  v18 = v16;
  v19 = v14;
  v20 = sub_23AA32E88();
  v21 = sub_23AA33218();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v28[0] = v27;
    *(_DWORD *)v22 = 138412546;
    v24 = v18;
    sub_23AA333F8();
    *v23 = v3;

    *(_WORD *)(v22 + 12) = 2080;
    swift_getErrorValue();
    v25 = sub_23AA3377C();
    sub_23A964DBC(v25, v26, (uint64_t *)v28);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMR1HaptiCtrl%@: failed restarting haptic engine: %s", (uint8_t *)v22, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v27, -1, -1);
    MEMORY[0x23B85DB24](v22, -1, -1);

  }
  else
  {

  }
}

void sub_23A9A3494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23B85DBF0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v5 = sub_23AA32EA0();
    sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
    v6 = v4;
    v7 = sub_23AA32E88();
    v8 = sub_23AA33218();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412546;
      v6 = v6;
      sub_23AA333F8();
      *v10 = v4;

      *(_WORD *)(v9 + 12) = 2048;
      sub_23AA333F8();
      _os_log_impl(&dword_23A95E000, v7, v8, "ðŸ§­ FMR1HaptiCtrl%@: stopped haptic engine (%ld)", (uint8_t *)v9, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v10, -1, -1);
      MEMORY[0x23B85DB24](v9, -1, -1);
    }
    else
    {

      v7 = v6;
    }

  }
}

uint64_t sub_23A9A366C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_23A9A36A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup) == 1)
  {
    sub_23A9A3E90();
    v2 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink;
    v3 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink);
    if (v3)
    {
      v4 = (void *)objc_opt_self();
      v5 = v3;
      v6 = objc_msgSend(v4, sel_currentRunLoop);
      objc_msgSend(v5, sel_removeFromRunLoop_forMode_, v6, *MEMORY[0x24BDBCB80]);

      v7 = *(void **)(v0 + v2);
    }
    else
    {
      v7 = 0;
    }
    objc_msgSend(v7, sel_invalidate);
    v8 = *(void **)(v0 + v2);
    *(_QWORD *)(v0 + v2) = 0;

    v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine;
    v10 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine);
    if (v10)
    {
      objc_msgSend(v10, sel_stopWithCompletionHandler_, 0);
      v11 = *(void **)(v0 + v9);
    }
    else
    {
      v11 = 0;
    }
    *(_QWORD *)(v0 + v9) = 0;

    *(_BYTE *)(v0 + v1) = 0;
  }
}

void sub_23A9A37B0()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  double v6;
  id v7;
  uint64_t v8;
  id v9;
  double v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  char *v34;
  void *v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  char *v46;
  id v47;
  void *v48;
  void *v49;
  char *v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55[2];

  v55[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v1)
  {
    v2 = v0;
    v3 = *MEMORY[0x24BDBF540];
    v4 = objc_allocWithZone(MEMORY[0x24BDBF5D0]);
    v5 = v1;
    LODWORD(v6) = 0.5;
    v7 = objc_msgSend(v4, sel_initWithParameterID_value_, v3, v6);
    v8 = *MEMORY[0x24BDBF548];
    v9 = objc_allocWithZone(MEMORY[0x24BDBF5D0]);
    LODWORD(v10) = 0.5;
    v11 = objc_msgSend(v9, sel_initWithParameterID_value_, v8, v10);
    v12 = (void *)*MEMORY[0x24BDBF558];
    sub_23A964084(&qword_2569D6080);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_23AA36AF0;
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)(v13 + 40) = v11;
    sub_23AA330C8();
    v14 = objc_allocWithZone(MEMORY[0x24BDBF5C8]);
    sub_23A968488(0, &qword_2569D66A0);
    v15 = v12;
    v54 = v7;
    v16 = v11;
    v17 = (void *)sub_23AA330A4();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v14, sel_initWithEventType_parameters_relativeTime_duration_, v15, v17, 0.0, 100.0);

    type metadata accessor for FMR1HapticPattern();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_23AA36180;
    *(_QWORD *)(v19 + 32) = v18;
    v55[0] = (id)v19;
    sub_23AA330C8();
    v20 = v18;
    v34 = (char *)sub_23A9A067C();
    *(_OWORD *)&v34[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name] = xmmword_23AA37840;
    swift_bridgeObjectRelease();
    v35 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern] = v34;
    v36 = v34;

    v55[0] = 0;
    v37 = objc_msgSend(v5, sel_createPlayerWithPattern_error_, v36, v55);
    v38 = v55[0];
    if (v37)
    {
      *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer] = v37;
      v39 = v38;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      if (qword_2569D4AC0 != -1)
        swift_once();
      v40 = sub_23AA32EA0();
      sub_23A9620E8(v40, (uint64_t)qword_2569E0040);
      v41 = v2;
      v42 = sub_23AA32E88();
      v43 = sub_23AA33218();
      if (os_log_type_enabled(v42, v43))
      {
        v50 = v36;
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v44 = 138412290;
        v55[0] = v41;
        v52 = v20;
        v46 = v41;
        sub_23AA333F8();
        *v45 = v41;

        _os_log_impl(&dword_23A95E000, v42, v43, "ðŸ§­ FMR1HaptiCtrl%@: created continuous haptic player", v44, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v45, -1, -1);
        MEMORY[0x23B85DB24](v44, -1, -1);

        swift_unknownObjectRelease();
        v33 = v5;
      }
      else
      {

        swift_unknownObjectRelease();
        v33 = v54;
      }
    }
    else
    {
      v47 = v55[0];
      v48 = (void *)sub_23AA32CF0();

      swift_willThrow();
      v53 = v5;
      if (qword_2569D4AC0 != -1)
        swift_once();
      v21 = sub_23AA32EA0();
      sub_23A9620E8(v21, (uint64_t)qword_2569E0040);
      v22 = v2;
      v23 = v48;
      v24 = v22;
      v25 = v48;
      v26 = sub_23AA32E88();
      v27 = sub_23AA33218();
      if (!os_log_type_enabled(v26, v27))
      {

        return;
      }
      v28 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v49 = (void *)swift_slowAlloc();
      v55[0] = v49;
      *(_DWORD *)v28 = 138412546;
      v51 = v20;
      v30 = v24;
      sub_23AA333F8();
      *v29 = v24;

      *(_WORD *)(v28 + 12) = 2080;
      swift_getErrorValue();
      v31 = sub_23AA3377C();
      sub_23A964DBC(v31, v32, (uint64_t *)v55);
      sub_23AA333F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A95E000, v26, v27, "ðŸ§­ FMR1HaptiCtrl%@: failed creating continuous haptic player: %s", (uint8_t *)v28, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v49, -1, -1);
      MEMORY[0x23B85DB24](v28, -1, -1);

      v33 = v51;
    }

  }
}

uint64_t sub_23A9A3E90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer);
  if (v2)
  {
    v7[0] = 0;
    if (objc_msgSend(v2, sel_stopAtTime_error_, v7, 0.0))
    {
      v3 = v7[0];
    }
    else
    {
      v4 = v7[0];
      v5 = (void *)sub_23AA32CF0();

      swift_willThrow();
    }
  }
  *(_QWORD *)(v0 + v1) = 0;
  return swift_unknownObjectRelease();
}

void sub_23A9A3F50(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  void (*v22)(void *, uint64_t);
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  id v31;
  void *v32;
  char *v33;
  id v34;
  char *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  id aBlock[8];

  v2 = v1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23AA32F30();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - v8;
  v50 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v50);
  v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v11 = sub_23AA32EA0();
  v12 = sub_23A9620E8(v11, (uint64_t)qword_2569E0040);
  v13 = v2;
  v49 = v12;
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v47 = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v46 = (_QWORD *)swift_slowAlloc();
    v48 = v5;
    *(_DWORD *)v16 = 138412290;
    aBlock[0] = v13;
    v17 = v9;
    v18 = v13;
    a1 = v47;
    v5 = v48;
    sub_23AA333F8();
    v19 = v46;
    *v46 = v13;

    v9 = v17;
    _os_log_impl(&dword_23A95E000, v14, v15, "ðŸ§­ FMR1HaptiCtrl%@: playing continuous haptic", v16, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v19, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);

  }
  else
  {

  }
  v20 = *(void **)&v13[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (v20)
  {
    aBlock[0] = 0;
    if (!objc_msgSend(v20, sel_startAtTime_error_, aBlock, 0.0))
    {
      v31 = aBlock[0];
      v32 = (void *)sub_23AA32CF0();

      swift_willThrow();
      v33 = v13;
      v34 = v32;
      v35 = v33;
      v36 = v32;
      v37 = sub_23AA32E88();
      v38 = sub_23AA33218();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = (_QWORD *)swift_slowAlloc();
        v52 = (char *)swift_slowAlloc();
        aBlock[0] = v52;
        *(_DWORD *)v39 = 138412546;
        v53 = (uint64_t)v35;
        v41 = v35;
        sub_23AA333F8();
        *v40 = v35;

        *(_WORD *)(v39 + 12) = 2080;
        swift_getErrorValue();
        v42 = sub_23AA3377C();
        v53 = sub_23A964DBC(v42, v43, (uint64_t *)aBlock);
        sub_23AA333F8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A95E000, v37, v38, "ðŸ§­ FMR1HaptiCtrl%@: failed starting continuous haptic player: %s", (uint8_t *)v39, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v40, -1, -1);
        v44 = v52;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v44, -1, -1);
        MEMORY[0x23B85DB24](v39, -1, -1);

      }
      else
      {

      }
      return;
    }
    v21 = aBlock[0];
  }
  v13[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
  v22 = *(void (**)(void *, uint64_t))&v13[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
  if (v22)
  {
    v23 = *(void **)&v13[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern];
    sub_23A971FB8(*(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler]);
    v24 = v23;
    v22(v23, a1);
    sub_23A98C874((uint64_t)v22);

  }
  v25 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem;
  if (*(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  v26 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23A9ABA34;
  aBlock[5] = v26;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC1698;
  _Block_copy(aBlock);
  v53 = MEMORY[0x24BEE4AF8];
  sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v27 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)&v13[v25] = v27;
  swift_retain();
  swift_release();
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v28 = (void *)sub_23AA33290();
  v29 = v52;
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v29, 30.0);
  v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v29, v4);
  sub_23AA3326C();
  swift_release();

  v30(v9, v4);
}

uint64_t sub_23A9A4624(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  NSObject *v10;
  _OWORD v11[2];

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v1);
  if (result)
  {
    v3 = (void *)result;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = v3;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      *(_QWORD *)&v11[0] = v5;
      v10 = v5;
      sub_23AA333F8();
      *v9 = v3;

      _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMR1HaptiCtrl%@: will restart continuous haptic", v8, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v9, -1, -1);
      MEMORY[0x23B85DB24](v8, -1, -1);
    }
    else
    {

      v6 = v5;
    }

    memset(v11, 0, sizeof(v11));
    sub_23A9A3F50(v11);

    return sub_23A9683BC((uint64_t)v11, &qword_2569D6680);
  }
  return result;
}

void sub_23A9A4800()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  NSObject *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25[2];

  v1 = v0;
  v25[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (!v2)
    goto LABEL_6;
  v25[0] = 0;
  if (objc_msgSend(v2, sel_stopAtTime_error_, v25, 0.0))
  {
    v3 = v25[0];
LABEL_6:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = v0;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v25[0] = v5;
      v10 = v5;
      sub_23AA333F8();
      *v9 = v5;

      _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMR1HaptiCtrl%@: stopped continuous haptic player", v8, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v9, -1, -1);
      MEMORY[0x23B85DB24](v8, -1, -1);

      return;
    }

    goto LABEL_16;
  }
  v11 = v25[0];
  v12 = (void *)sub_23AA32CF0();

  swift_willThrow();
  if (qword_2569D4AC0 != -1)
    swift_once();
  v13 = sub_23AA32EA0();
  sub_23A9620E8(v13, (uint64_t)qword_2569E0040);
  v14 = v1;
  v15 = v12;
  v16 = v14;
  v17 = v12;
  v5 = sub_23AA32E88();
  v18 = sub_23AA33218();
  if (os_log_type_enabled(v5, v18))
  {
    v19 = swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    v24 = (void *)swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)v19 = 138412546;
    v21 = v16;
    sub_23AA333F8();
    *v20 = v16;

    *(_WORD *)(v19 + 12) = 2080;
    swift_getErrorValue();
    v22 = sub_23AA3377C();
    sub_23A964DBC(v22, v23, (uint64_t *)v25);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v5, v18, "ðŸ§­ FMR1HaptiCtrl%@: failed stopping continuous haptic player: %s", (uint8_t *)v19, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v24, -1, -1);
    MEMORY[0x23B85DB24](v19, -1, -1);

    return;
  }

LABEL_16:
}

void sub_23A9A4C54(unint64_t a1, float a2)
{
  _BYTE *v2;
  float *v3;
  _BYTE *v4;
  unint64_t v5;
  float *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];

  v4 = v2;
  v5 = a1;
  v7 = (float *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor];
  *v7 = a2;
  *((_BYTE *)v7 + 4) = 0;
  if ((a1 & 1) != 0)
  {
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring];
    sub_23A9829AC(0.0);
    *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
  }
  v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring];
  v10 = v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  v11 = v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  v12 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v10 + 280) + v12 == 1.79769313e308)
  {
    sub_23A9829AC(1.0);
    *(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v12 = *(double *)(v11 + 40);
  }
  v13 = 1.0 - v12;
  *(double *)(v10 + 280) = v13;
  *(double *)(v10 + 240) = v13;
  *(_QWORD *)(v10 + 248) = 0;
  v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactorLogCounter;
  v15 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactorLogCounter];
  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * v15 + 0x888888888888888, 2) > 0x444444444444444uLL)
    goto LABEL_18;
  v3 = (float *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor];
  v16 = *(float *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor];
  if (v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor + 4])
    v16 = 3.4028e38;
  if (vabds_f32(a2, v16) < 0.01)
    goto LABEL_17;
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  sub_23AA33500();
  sub_23AA33038();
  v17 = objc_msgSend(v4, sel_description);
  sub_23AA32FD8();

  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  sub_23A964084((uint64_t *)&unk_2569D6690);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_23AA36190;
  v19 = sub_23A9640C4();
  v20 = 0x20676E69706D6172;
  if ((v5 & 1) == 0)
    v20 = 0;
  v21 = 0xE800000000000000;
  if ((v5 & 1) == 0)
    v21 = 0xE000000000000000;
  *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 64) = v19;
  *(_QWORD *)(v18 + 32) = v20;
  *(_QWORD *)(v18 + 40) = v21;
  v22 = MEMORY[0x24BEE1568];
  *(_QWORD *)(v18 + 96) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v18 + 104) = v22;
  *(float *)(v18 + 72) = a2 * 100.0;
  v10 = sub_23AA32FE4();
  v5 = v23;
  swift_bridgeObjectRelease();
  if (qword_2569D4AC0 != -1)
    goto LABEL_21;
  while (1)
  {
    v24 = sub_23AA32EA0();
    sub_23A9620E8(v24, (uint64_t)qword_2569E0040);
    swift_bridgeObjectRetain();
    v25 = sub_23AA32E88();
    v26 = sub_23AA33218();
    if (os_log_type_enabled(v25, v26))
    {
      v31 = v10;
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v32[0] = v28;
      *(_DWORD *)v27 = 136315138;
      v10 = (uint64_t)(v27 + 4);
      swift_bridgeObjectRetain();
      sub_23A964DBC(v31, v5, v32);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v25, v26, "%s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v28, -1, -1);
      MEMORY[0x23B85DB24](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_17:
    *v3 = a2;
    *((_BYTE *)v3 + 4) = 0;
    v15 = *(_QWORD *)&v4[v14];
LABEL_18:
    v29 = __OFADD__(v15, 1);
    v30 = v15 + 1;
    if (!v29)
      break;
    __break(1u);
LABEL_21:
    swift_once();
  }
  *(_QWORD *)&v4[v14] = v30;
}

void sub_23A9A5090()
{
  char *v0;
  uint64_t v1;
  id v2;
  double v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  char *v23;
  id v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *MEMORY[0x24BDBF508];
  v2 = objc_allocWithZone(MEMORY[0x24BDBF5B8]);
  LODWORD(v3) = 1.0;
  v4 = objc_msgSend(v2, sel_initWithParameterID_value_relativeTime_, v1, v3, 0.0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (!v5)
  {
LABEL_4:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v11 = sub_23AA32EA0();
    sub_23A9620E8(v11, (uint64_t)qword_2569E0040);
    v12 = v0;
    v13 = sub_23AA32E88();
    v14 = sub_23AA33218();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v32[0] = v12;
      v17 = v12;
      sub_23AA333F8();
      *v16 = v12;

      _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMR1HaptiCtrl%@: reset continuous haptic player intensity to 1.0", v15, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v16, -1, -1);
      MEMORY[0x23B85DB24](v15, -1, -1);

      return;
    }

    goto LABEL_14;
  }
  sub_23A964084(&qword_2569D6080);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23AA36180;
  *(_QWORD *)(v6 + 32) = v4;
  sub_23AA330C8();
  sub_23A968488(0, &qword_2569D6688);
  swift_unknownObjectRetain();
  v7 = v4;
  v8 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  v9 = objc_msgSend(v5, sel_sendParameters_atTime_error_, v8, v32, 0.0);
  swift_unknownObjectRelease();

  if (v9)
  {
    v10 = v32[0];
    goto LABEL_4;
  }
  v18 = v32[0];
  v19 = (void *)sub_23AA32CF0();

  swift_willThrow();
  if (qword_2569D4AC0 != -1)
    swift_once();
  v20 = sub_23AA32EA0();
  sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
  v21 = v0;
  v22 = v19;
  v23 = v21;
  v24 = v19;
  v4 = sub_23AA32E88();
  v25 = sub_23AA33218();
  if (os_log_type_enabled(v4, v25))
  {
    v26 = swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v31 = (void *)swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)v26 = 138412546;
    v28 = v23;
    sub_23AA333F8();
    *v27 = v23;

    *(_WORD *)(v26 + 12) = 2080;
    swift_getErrorValue();
    v29 = sub_23AA3377C();
    sub_23A964DBC(v29, v30, (uint64_t *)v32);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v4, v25, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering continuous haptic player: %s", (uint8_t *)v26, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v31, -1, -1);
    MEMORY[0x23B85DB24](v26, -1, -1);

    return;
  }

LABEL_14:
}

void sub_23A9A55A0()
{
  char *v0;
  uint64_t v1;
  id v2;
  double v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  char *v23;
  id v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *MEMORY[0x24BDBF508];
  v2 = objc_allocWithZone(MEMORY[0x24BDBF5B8]);
  LODWORD(v3) = 1058642330;
  v4 = objc_msgSend(v2, sel_initWithParameterID_value_relativeTime_, v1, v3, 0.0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (!v5)
  {
LABEL_4:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v11 = sub_23AA32EA0();
    sub_23A9620E8(v11, (uint64_t)qword_2569E0040);
    v12 = v0;
    v13 = sub_23AA32E88();
    v14 = sub_23AA33218();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412546;
      v32[0] = v12;
      v17 = v12;
      sub_23AA333F8();
      *v16 = v12;

      *(_WORD *)(v15 + 12) = 2048;
      v32[0] = (id)0x3FE3333340000000;
      sub_23AA333F8();
      _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMR1HaptiCtrl%@: reset continuous haptic player intensity to %f", (uint8_t *)v15, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v16, -1, -1);
      MEMORY[0x23B85DB24](v15, -1, -1);

      return;
    }

    goto LABEL_14;
  }
  sub_23A964084(&qword_2569D6080);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23AA36180;
  *(_QWORD *)(v6 + 32) = v4;
  sub_23AA330C8();
  sub_23A968488(0, &qword_2569D6688);
  swift_unknownObjectRetain();
  v7 = v4;
  v8 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  v9 = objc_msgSend(v5, sel_sendParameters_atTime_error_, v8, v32, 0.0);
  swift_unknownObjectRelease();

  if (v9)
  {
    v10 = v32[0];
    goto LABEL_4;
  }
  v18 = v32[0];
  v19 = (void *)sub_23AA32CF0();

  swift_willThrow();
  if (qword_2569D4AC0 != -1)
    swift_once();
  v20 = sub_23AA32EA0();
  sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
  v21 = v0;
  v22 = v19;
  v23 = v21;
  v24 = v19;
  v4 = sub_23AA32E88();
  v25 = sub_23AA33218();
  if (os_log_type_enabled(v4, v25))
  {
    v26 = swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v31 = (void *)swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)v26 = 138412546;
    v28 = v23;
    sub_23AA333F8();
    *v27 = v23;

    *(_WORD *)(v26 + 12) = 2080;
    swift_getErrorValue();
    v29 = sub_23AA3377C();
    sub_23A964DBC(v29, v30, (uint64_t *)v32);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, v4, v25, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering continuous haptic player: %s", (uint8_t *)v26, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v31, -1, -1);
    MEMORY[0x23B85DB24](v26, -1, -1);

    return;
  }

LABEL_14:
}

id sub_23A9A5AE0(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  double v11;
  double v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  _OWORD v23[2];

  v2 = v1;
  v4 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_enablePlayingAheadHaptic;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_enablePlayingAheadHaptic) == 1)
  {
    memset(v23, 0, sizeof(v23));
    sub_23A9A87F0((uint64_t)v23);
    sub_23A9683BC((uint64_t)v23, &qword_2569D6680);
    *(_BYTE *)(v1 + v4) = 0;
  }
  else if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod + 8) & 1) == 0)
  {
    v5 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod);
    v6 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp;
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp + 8) & 1) != 0
      || (v7 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay,
          (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay + 8) & 1) != 0))
    {
      objc_msgSend(a1, sel_timestamp);
      *(_QWORD *)v6 = v8;
      *(_BYTE *)(v6 + 8) = 0;
      v9 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay;
      *(double *)v9 = v5;
      *(_BYTE *)(v9 + 8) = 0;
    }
    else
    {
      v17 = *(double *)v7;
      v18 = *(double *)v6;
      objc_msgSend(a1, sel_timestamp);
      v20 = v19 - v18;
      if (v17 > v5)
        v21 = v17;
      else
        v21 = v5;
      if (v21 > v20)
        goto LABEL_8;
      objc_msgSend(a1, sel_timestamp);
      *(_QWORD *)v6 = v22;
      *(_BYTE *)(v6 + 8) = 0;
      *(double *)v7 = v5;
      *(_BYTE *)(v7 + 8) = 0;
    }
    sub_23A9AB25C();
  }
LABEL_8:
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) == 1
    && (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime + 8) & 1) == 0
    && (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor + 4) & 1) == 0)
  {
    v10 = *(float *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor);
    v11 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime);
    objc_msgSend(a1, sel_timestamp);
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring);
    sub_23A982B4C(v12 - v11);
    *(_BYTE *)(v13 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    sub_23A9AADA4(v10);
  }
  result = objc_msgSend(a1, sel_timestamp);
  v15 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime;
  *(_QWORD *)v15 = v16;
  *(_BYTE *)(v15 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for FMR1HapticsController()
{
  return objc_opt_self();
}

float sub_23A9A5D3C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  float v8;
  float v9;
  float result;
  uint64_t v11;
  uint64_t v12;

  if (a1 < 0.2)
  {
    v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern;
LABEL_7:
    v4 = *(void **)(v1 + v3);
    v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern;
    v6 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern);
    goto LABEL_8;
  }
  if (a1 < 0.4)
  {
    v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern;
    goto LABEL_7;
  }
  if (a1 < 0.6)
  {
    v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern;
    goto LABEL_7;
  }
  v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern);
  if (a1 >= 0.8)
    v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern;
  else
    v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern;
  v4 = *(void **)(v1 + v12);
LABEL_8:
  *(_QWORD *)(v1 + v5) = v4;
  v7 = v4;

  v8 = 1.0 - a1;
  v9 = a1;
  result = (float)(v9 * 0.65) + (float)(v8 * 0.4);
  v11 = v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity;
  *(float *)v11 = result;
  *(_BYTE *)(v11 + 4) = 0;
  return result;
}

void sub_23A9A5E50(uint64_t a1)
{
  sub_23A9A5F18(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing build haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing build haptic (%s)");
}

void sub_23A9A5EB4(uint64_t a1)
{
  sub_23A9A5F18(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing scatter haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing scatter haptic (%s)");
}

void sub_23A9A5F18(uint64_t a1, uint64_t *a2, _QWORD *a3, char *a4, const char *a5)
{
  char *v5;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  NSObject *v31;
  _QWORD *v32;
  uint8_t *v33;
  id v34;
  void *v35;
  unsigned int v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  NSObject *v41;
  id v42;
  NSObject *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(void *, uint64_t);
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  void *v60;
  os_log_type_t type[8];
  const char *v62;
  NSObject *v63;
  char *format;
  char *formata;
  id v66;
  _OWORD v68[2];
  uint64_t v69;

  v10 = v5;
  v69 = *MEMORY[0x24BDAC8D0];
  v11 = &v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  memset(v68, 0, sizeof(v68));
  v12 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v68, v12);
  swift_endAccess();
  v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v5[v13] = 0;
  swift_release();
  if (v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_23A9A4800();
  }
  v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v5[v14] = 0;
  swift_release();
  v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v5[v15] = 0;
  swift_release();
  v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  v16 = *a2;
  if (*(_QWORD *)&v5[*a2])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v5[v16] = 0;
  swift_release();
  v17 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v17)
  {
    v18 = *(void **)&v5[*a3];
    if (v18)
    {
      *(_QWORD *)&v68[0] = 0;
      v19 = v17;
      v20 = v18;
      v21 = objc_msgSend(v19, sel_createPlayerWithPattern_error_, v20, v68);
      if (v21)
      {
        v22 = v21;
        format = a4;
        v23 = qword_2569D4AC0;
        v24 = *(id *)&v68[0];
        if (v23 != -1)
          swift_once();
        v25 = sub_23AA32EA0();
        sub_23A9620E8(v25, (uint64_t)qword_2569E0040);
        v26 = v10;
        v27 = sub_23AA32E88();
        v28 = sub_23AA33218();
        v62 = a5;
        if (os_log_type_enabled(v27, v28))
        {
          v66 = v20;
          v29 = (uint8_t *)swift_slowAlloc();
          *(_QWORD *)type = v19;
          v30 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v29 = 138412290;
          *(_QWORD *)&v68[0] = v26;
          v60 = v18;
          v31 = v26;
          sub_23AA333F8();
          *v30 = v26;

          v18 = v60;
          _os_log_impl(&dword_23A95E000, v27, v28, format, v29, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          v32 = v30;
          v19 = *(id *)type;
          MEMORY[0x23B85DB24](v32, -1, -1);
          v33 = v29;
          v20 = v66;
          MEMORY[0x23B85DB24](v33, -1, -1);
        }
        else
        {

          v27 = v26;
        }

        *(_QWORD *)&v68[0] = 0;
        v36 = objc_msgSend(v22, sel_startAtTime_error_, v68, 0.0);
        v37 = *(void **)&v68[0];
        if (v36)
        {
          *((_BYTE *)&v26->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          v38 = v37;
        }
        else
        {
          v39 = *(id *)&v68[0];
          v40 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v41 = v26;
          v42 = v40;
          v43 = v41;
          v44 = v40;
          v45 = sub_23AA32E88();
          v46 = sub_23AA33218();
          if (os_log_type_enabled(v45, v46))
          {
            v63 = v45;
            v47 = swift_slowAlloc();
            v59 = (_QWORD *)swift_slowAlloc();
            formata = (char *)swift_slowAlloc();
            *(_QWORD *)&v68[0] = formata;
            *(_DWORD *)v47 = 138412546;
            v48 = v43;
            sub_23AA333F8();
            *v59 = v43;

            *(_WORD *)(v47 + 12) = 2080;
            swift_getErrorValue();
            v49 = sub_23AA3377C();
            sub_23A964DBC(v49, v50, (uint64_t *)v68);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, v63, v46, v62, (uint8_t *)v47, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v59, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](formata, -1, -1);
            MEMORY[0x23B85DB24](v47, -1, -1);

          }
          else
          {

          }
        }
        v51 = *(void (**)(void *, uint64_t))((char *)&v26->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v51)
        {
          v52 = v20;
          sub_23A971FB8((uint64_t)v51);
          v51(v18, a1);
          sub_23A98C874((uint64_t)v51);

        }
        v53 = *(Class *)((char *)&v26->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink);
        if (v53)
        {
          v54 = v53;
          objc_msgSend(v54, sel_timestamp);
          v56 = v55;

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
          v56 = 0;
        }
        v57 = (char *)v26 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp;
        *(_QWORD *)v57 = v56;
        v57[8] = 0;
        v58 = (char *)v26 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay;
        *(_QWORD *)v58 = 0x3FF0000000000000;
        v58[8] = 0;
      }
      else
      {
        v34 = *(id *)&v68[0];
        v35 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

uint64_t sub_23A9A664C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  if ((a2 & 1) != 0)
  {
    v7 = v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod;
    *(_QWORD *)v7 = a1;
    *(_BYTE *)(v7 + 8) = 1;
    memset(v11, 0, sizeof(v11));
  }
  else
  {
    v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem))
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)(v3 + v6) = 0;
    swift_release();
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) == 1)
    {
      *(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) = 0;
      sub_23A9A4800();
    }
    v8 = v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod;
    *(_QWORD *)v8 = a1;
    *(_BYTE *)(v8 + 8) = 0;
    sub_23A9AACC0(a3, (uint64_t)v11);
  }
  v9 = v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext;
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v11, v9);
  return swift_endAccess();
}

void sub_23A9A675C(char a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  uint8_t *v26;
  id v27;
  void *v28;
  unsigned int v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  NSObject *v34;
  id v35;
  NSObject *v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  NSObject *v41;
  NSObject *v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(void *, uint64_t);
  id v46;
  _QWORD *v47;
  NSObject *log;
  void *v49;
  uint64_t v50;
  void *v51;
  _OWORD v53[2];
  uint64_t v54;

  v3 = v2;
  v54 = *MEMORY[0x24BDAC8D0];
  v5 = &v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  memset(v53, 0, sizeof(v53));
  v6 = (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v53, v6);
  swift_endAccess();
  if ((a1 & 1) == 0)
  {
    v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
    if (*(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v3[v7] = 0;
    swift_release();
    if (v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
    {
      v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
      sub_23A9A4800();
    }
  }
  v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v3[v8] = 0;
  swift_release();
  v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v3[v9] = 0;
  swift_release();
  v10 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v3[v10] = 0;
  swift_release();
  v11 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v11)
  {
    v12 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern];
    if (v12)
    {
      *(_QWORD *)&v53[0] = 0;
      v13 = v11;
      v14 = v12;
      v51 = v13;
      v15 = objc_msgSend(v13, sel_createPlayerWithPattern_error_, v14, v53);
      if (v15)
      {
        v16 = v15;
        v17 = qword_2569D4AC0;
        v18 = *(id *)&v53[0];
        if (v17 != -1)
          swift_once();
        v19 = sub_23AA32EA0();
        sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
        v20 = v3;
        v21 = sub_23AA32E88();
        v22 = sub_23AA33218();
        if (os_log_type_enabled(v21, v22))
        {
          v49 = v12;
          v23 = (uint8_t *)swift_slowAlloc();
          v24 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v23 = 138412290;
          *(_QWORD *)&v53[0] = v20;
          v25 = v20;
          sub_23AA333F8();
          *v24 = v20;

          _os_log_impl(&dword_23A95E000, v21, v22, "ðŸ§­ FMR1HaptiCtrl%@: playing arm's reach haptic", v23, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v24, -1, -1);
          v26 = v23;
          v12 = v49;
          MEMORY[0x23B85DB24](v26, -1, -1);
        }
        else
        {

          v21 = v20;
        }

        *(_QWORD *)&v53[0] = 0;
        v29 = objc_msgSend(v16, sel_startAtTime_error_, v53, 0.0);
        v30 = *(void **)&v53[0];
        if (v29)
        {
          *((_BYTE *)&v20->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          v31 = v30;
        }
        else
        {
          v32 = *(id *)&v53[0];
          v33 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v34 = v20;
          v35 = v33;
          v36 = v34;
          v37 = v33;
          v38 = sub_23AA32E88();
          v39 = sub_23AA33218();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = swift_slowAlloc();
            v47 = (_QWORD *)swift_slowAlloc();
            v50 = swift_slowAlloc();
            *(_QWORD *)&v53[0] = v50;
            *(_DWORD *)v40 = 138412546;
            log = v38;
            v41 = v20;
            v42 = v36;
            sub_23AA333F8();
            *v47 = v36;

            v20 = v41;
            *(_WORD *)(v40 + 12) = 2080;
            swift_getErrorValue();
            v43 = sub_23AA3377C();
            sub_23A964DBC(v43, v44, (uint64_t *)v53);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, log, v39, "ðŸ§­ FMR1HaptiCtrl%@: failed playing arm's reach haptic (%s)", (uint8_t *)v40, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v47, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v50, -1, -1);
            MEMORY[0x23B85DB24](v40, -1, -1);

          }
          else
          {

          }
        }
        v45 = *(void (**)(void *, uint64_t))((char *)&v20->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v45)
        {
          v46 = v14;
          sub_23A971FB8((uint64_t)v45);
          v45(v12, a2);

          sub_23A98C874((uint64_t)v45);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        v27 = *(id *)&v53[0];
        v28 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

void sub_23A9A6E0C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  double v28;
  double v29;
  double *v30;
  _BYTE *v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _BYTE *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  _BOOL4 v48;
  NSObject *v49;
  uint64_t v50;
  uint8_t *v51;
  NSObject *v52;
  _QWORD *v53;
  uint8_t *v54;
  unsigned int v55;
  void *v56;
  NSObject *v57;
  id v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  char *v67;
  id v68;
  char *v69;
  id v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  os_log_t v79;
  uint64_t v80;
  void (*v81)(void *, uint64_t);
  id v82;
  _QWORD v83[2];
  _QWORD *v84;
  uint8_t *v85;
  int v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  _BYTE *v89;
  double *v90;
  NSObject *v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  Class isa;
  os_log_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 aBlock;
  __int128 v102;
  void (*v103)();
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v2 = v1;
  v100 = a1;
  v106 = *MEMORY[0x24BDAC8D0];
  v3 = sub_23AA32ED0();
  v99 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = (os_log_t)sub_23AA32F00();
  isa = v98[-1].isa;
  MEMORY[0x24BDAC7A8](v98);
  v7 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23AA32F18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v83 - v13;
  v15 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  aBlock = 0u;
  v102 = 0u;
  v16 = (uint64_t)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)&aBlock, v16);
  swift_endAccess();
  v17 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v2[v17] = 0;
  swift_release();
  if (v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_23A9A4800();
  }
  v18 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v2[v18] = 0;
  swift_release();
  v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  v19 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v2[v19] = 0;
  swift_release();
  v20 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v2[v20] = 0;
  swift_release();
  sub_23A9A5090();
  v21 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v21)
  {
    v22 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern];
    if (v22)
    {
      v92 = v3;
      *(_QWORD *)&aBlock = 0;
      v23 = v21;
      v93 = v22;
      v24 = v22;
      v25 = objc_msgSend(v23, sel_createPlayerWithPattern_error_, v24, &aBlock);
      if (!v25)
      {
        v32 = (id)aBlock;
        v33 = (void *)sub_23AA32CF0();

        swift_willThrow();
        return;
      }
      v96 = v25;
      v94 = v24;
      v95 = v23;
      v26 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink];
      if (v26)
      {
        v27 = (id)aBlock;
        objc_msgSend(v26, sel_timestamp);
        v29 = v28;
        v30 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp];
        v31 = &v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp + 8];
        if ((*v31 & 1) != 0)
        {
          if (v28 >= 2.0)
            goto LABEL_26;
          goto LABEL_22;
        }
      }
      else
      {
        v30 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp];
        v34 = v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp + 8];
        v35 = (id)aBlock;
        if ((v34 & 1) != 0)
        {
LABEL_22:
          if (qword_2569D4AC0 != -1)
            swift_once();
          v36 = sub_23AA32EA0();
          sub_23A9620E8(v36, (uint64_t)qword_2569E0040);
          v37 = v2;
          v38 = sub_23AA32E88();
          v39 = sub_23AA33218();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = (uint8_t *)swift_slowAlloc();
            v41 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v40 = 138412290;
            *(_QWORD *)&aBlock = v37;
            v42 = v37;
            sub_23AA333F8();
            *v41 = v37;

            _os_log_impl(&dword_23A95E000, v38, v39, "ðŸ§­ FMR1HaptiCtrl%@: not playing nearby haptic (we just played it)", v40, 0xCu);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v41, -1, -1);
            MEMORY[0x23B85DB24](v40, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease();
          }

          return;
        }
        v31 = v30 + 1;
        v29 = 0.0;
      }
      if (*v30 + 2.0 <= v29)
      {
LABEL_26:
        v89 = v31;
        if (qword_2569D4AC0 != -1)
          swift_once();
        v43 = sub_23AA32EA0();
        v44 = sub_23A9620E8(v43, (uint64_t)qword_2569E0040);
        v91 = v2;
        v88 = (void (*)(char *, uint64_t))v44;
        v45 = sub_23AA32E88();
        v46 = sub_23AA33218();
        v47 = v46;
        v48 = os_log_type_enabled(v45, v46);
        v90 = v30;
        if (v48)
        {
          v87 = v8;
          v49 = v91;
          v50 = swift_slowAlloc();
          v86 = v47;
          v51 = (uint8_t *)v50;
          v84 = (_QWORD *)swift_slowAlloc();
          v85 = v51;
          *(_DWORD *)v51 = 138412290;
          v83[1] = v51 + 4;
          *(_QWORD *)&aBlock = v49;
          v52 = v49;
          v30 = v90;
          sub_23AA333F8();
          v53 = v84;
          *v84 = v49;

          v8 = v87;
          v54 = v85;
          _os_log_impl(&dword_23A95E000, v45, (os_log_type_t)v86, "ðŸ§­ FMR1HaptiCtrl%@: playing nearby haptic", v85, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v53, -1, -1);
          MEMORY[0x23B85DB24](v54, -1, -1);
        }
        else
        {

          v45 = v91;
        }

        *(_QWORD *)&aBlock = 0;
        v55 = objc_msgSend(v96, sel_startAtTime_error_, &aBlock, 0.0);
        v56 = (void *)aBlock;
        if (v55)
        {
          v57 = v91;
          *((_BYTE *)&v91->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
          v58 = v56;
          v87 = sub_23AA33290();
          sub_23AA32F0C();
          MEMORY[0x23B85CAF8](v12, 0.2);
          v88 = *(void (**)(char *, uint64_t))(v9 + 8);
          v88(v12, v8);
          v59 = swift_allocObject();
          *(_QWORD *)(v59 + 16) = v57;
          v103 = sub_23A9AACA0;
          v104 = v59;
          *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v102 = sub_23A9C4DBC;
          *((_QWORD *)&v102 + 1) = &unk_250BC1670;
          v60 = _Block_copy(&aBlock);
          v61 = v57;
          swift_release();
          sub_23AA32EE8();
          *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
          sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          sub_23A964084((uint64_t *)&unk_2569D5D00);
          sub_23A973294();
          v62 = v92;
          sub_23AA3344C();
          v63 = (void *)v87;
          MEMORY[0x23B85CE10](v14, v7, v5, v60);
          _Block_release(v60);

          (*(void (**)(char *, uint64_t))(v99 + 8))(v5, v62);
          (*((void (**)(char *, os_log_t))isa + 1))(v7, v98);
          v88(v14, v8);
          v64 = v95;
        }
        else
        {
          v65 = (id)aBlock;
          v66 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v67 = v91;
          v68 = v66;
          v69 = v67;
          v70 = v66;
          v71 = sub_23AA32E88();
          v72 = sub_23AA33218();
          if (os_log_type_enabled(v71, v72))
          {
            v73 = swift_slowAlloc();
            v74 = (_QWORD *)swift_slowAlloc();
            v99 = swift_slowAlloc();
            *(_QWORD *)&aBlock = v99;
            *(_DWORD *)v73 = 138412546;
            v98 = v71;
            v105 = (uint64_t)v69;
            v75 = v69;
            sub_23AA333F8();
            v76 = v74;
            *v74 = v69;

            *(_WORD *)(v73 + 12) = 2080;
            swift_getErrorValue();
            v77 = sub_23AA3377C();
            v105 = sub_23A964DBC(v77, v78, (uint64_t *)&aBlock);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            v79 = v98;
            _os_log_impl(&dword_23A95E000, v98, v72, "ðŸ§­ FMR1HaptiCtrl%@: failed playing nearby haptic (%s)", (uint8_t *)v73, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v76, -1, -1);
            v80 = v99;
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v80, -1, -1);
            MEMORY[0x23B85DB24](v73, -1, -1);

          }
          else
          {

          }
          v64 = v95;
          v30 = v90;
        }
        v81 = *(void (**)(void *, uint64_t))((char *)&v91->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v81)
        {
          v82 = v94;
          sub_23A971FB8((uint64_t)v81);
          v81(v93, v100);

          sub_23A98C874((uint64_t)v81);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        *v30 = v29;
        *v89 = 0;
        return;
      }
      goto LABEL_22;
    }
  }
}

uint64_t sub_23A9A7A04()
{
  return sub_23A9A7A48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem, (uint64_t)sub_23A9AAC5C, (uint64_t)&unk_250BC1620, 0.5);
}

uint64_t sub_23A9A7A24()
{
  return sub_23A9A7A48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem, (uint64_t)sub_23A9AAC3C, (uint64_t)&unk_250BC15F8, 0.2);
}

uint64_t sub_23A9A7A48(uint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v9 = sub_23AA32F30();
  v26 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  v15 = sub_23AA32ED0();
  result = MEMORY[0x24BDAC7A8](v15);
  v17 = *a1;
  if (!*(_QWORD *)(v4 + *a1))
  {
    v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = a2;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = a3;
    _Block_copy(aBlock);
    v27 = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    v25 = v9;
    sub_23A973294();
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v19 = sub_23AA32F3C();
    swift_release();
    swift_release();
    *(_QWORD *)(v4 + v17) = v19;
    swift_retain();
    swift_release();
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v20 = (void *)sub_23AA33290();
    sub_23AA32F24();
    MEMORY[0x23B85CB04](v12, a4);
    v21 = *(void (**)(char *, uint64_t))(v26 + 8);
    v22 = v12;
    v23 = v25;
    v21(v22, v25);
    sub_23AA3326C();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v21)(v14, v23);
  }
  return result;
}

uint64_t sub_23A9A7CCC(uint64_t a1, void (*a2)(_OWORD *))
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  _OWORD v6[2];

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  if (result)
  {
    v5 = (void *)result;
    memset(v6, 0, sizeof(v6));
    a2(v6);

    return sub_23A9683BC((uint64_t)v6, &qword_2569D6680);
  }
  return result;
}

uint64_t sub_23A9A7D3C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v3 = sub_23AA32F30();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - v8;
  v10 = sub_23AA32ED0();
  result = MEMORY[0x24BDAC7A8](v10);
  v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem))
  {
    v13 = swift_allocObject();
    v23 = v3;
    v14 = v13;
    swift_unknownObjectWeakInit();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    *(_BYTE *)(v15 + 24) = a1 & 1;
    aBlock[4] = sub_23A9AAC30;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC15D0;
    _Block_copy(aBlock);
    v24 = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v22 = v4;
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v16 = sub_23AA32F3C();
    swift_release();
    swift_release();
    *(_QWORD *)(v1 + v12) = v16;
    swift_retain();
    swift_release();
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v17 = (void *)sub_23AA33290();
    sub_23AA32F24();
    MEMORY[0x23B85CB04](v7, 0.0);
    v18 = *(void (**)(char *, uint64_t))(v22 + 8);
    v19 = v7;
    v20 = v23;
    v18(v19, v23);
    sub_23AA3326C();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v18)(v9, v20);
  }
  return result;
}

uint64_t sub_23A9A7FE0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  char *v5;
  _OWORD v6[2];

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  if (result)
  {
    v5 = (char *)result;
    memset(v6, 0, sizeof(v6));
    sub_23A9A675C(a2 & 1, (uint64_t)v6);
    sub_23A9683BC((uint64_t)v6, &qword_2569D6680);
    *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem] = 0;

    return swift_release();
  }
  return result;
}

uint64_t sub_23A9A806C()
{
  return sub_23A9A7A48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem, (uint64_t)sub_23A9AAC04, (uint64_t)&unk_250BC1580, 0.5);
}

void sub_23A9A808C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  _OWORD v4[2];

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = v2;
    if ((*((_BYTE *)v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) & 1) != 0)
    {

    }
    else
    {
      *((_BYTE *)v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) = 1;
      memset(v4, 0, sizeof(v4));
      sub_23A9A3F50((uint64_t)v4);

      sub_23A9683BC((uint64_t)v4, &qword_2569D6680);
    }
  }
}

uint64_t sub_23A9A8118()
{
  return sub_23A9A7A48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem, (uint64_t)sub_23A9AABCC, (uint64_t)&unk_250BC1558, 0.05);
}

void sub_23A9A813C(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  NSObject *v23;
  uint8_t *v24;
  id v25;
  void *v26;
  unsigned int v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  NSObject *v32;
  id v33;
  NSObject *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(void *, uint64_t);
  id v44;
  _QWORD *v45;
  NSObject *log;
  void *v47;
  uint64_t v48;
  void *v49;
  _OWORD v51[2];
  uint64_t v52;

  v2 = v1;
  v52 = *MEMORY[0x24BDAC8D0];
  v3 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  memset(v51, 0, sizeof(v51));
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v51, v4);
  swift_endAccess();
  v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v5] = 0;
  swift_release();
  if (v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_23A9A4800();
  }
  v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v6] = 0;
  swift_release();
  v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v7] = 0;
  swift_release();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v8] = 0;
  swift_release();
  v9 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v9)
  {
    v10 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern];
    if (v10)
    {
      *(_QWORD *)&v51[0] = 0;
      v11 = v9;
      v12 = v10;
      v49 = v11;
      v13 = objc_msgSend(v11, sel_createPlayerWithPattern_error_, v12, v51);
      if (v13)
      {
        v14 = v13;
        v15 = qword_2569D4AC0;
        v16 = *(id *)&v51[0];
        if (v15 != -1)
          swift_once();
        v17 = sub_23AA32EA0();
        sub_23A9620E8(v17, (uint64_t)qword_2569E0040);
        v18 = v2;
        v19 = sub_23AA32E88();
        v20 = sub_23AA33218();
        if (os_log_type_enabled(v19, v20))
        {
          v47 = v10;
          v21 = (uint8_t *)swift_slowAlloc();
          v22 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v21 = 138412290;
          *(_QWORD *)&v51[0] = v18;
          v23 = v18;
          sub_23AA333F8();
          *v22 = v18;

          _os_log_impl(&dword_23A95E000, v19, v20, "ðŸ§­ FMR1HaptiCtrl%@: playing connected haptic", v21, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v22, -1, -1);
          v24 = v21;
          v10 = v47;
          MEMORY[0x23B85DB24](v24, -1, -1);
        }
        else
        {

          v19 = v18;
        }

        *(_QWORD *)&v51[0] = 0;
        v27 = objc_msgSend(v14, sel_startAtTime_error_, v51, 0.0);
        v28 = *(void **)&v51[0];
        if (v27)
        {
          *((_BYTE *)&v18->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          v29 = v28;
        }
        else
        {
          v30 = *(id *)&v51[0];
          v31 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v32 = v18;
          v33 = v31;
          v34 = v32;
          v35 = v31;
          v36 = sub_23AA32E88();
          v37 = sub_23AA33218();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = swift_slowAlloc();
            v45 = (_QWORD *)swift_slowAlloc();
            v48 = swift_slowAlloc();
            *(_QWORD *)&v51[0] = v48;
            *(_DWORD *)v38 = 138412546;
            log = v36;
            v39 = v18;
            v40 = v34;
            sub_23AA333F8();
            *v45 = v34;

            v18 = v39;
            *(_WORD *)(v38 + 12) = 2080;
            swift_getErrorValue();
            v41 = sub_23AA3377C();
            sub_23A964DBC(v41, v42, (uint64_t *)v51);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, log, v37, "ðŸ§­ FMR1HaptiCtrl%@: failed playing connected haptic (%s)", (uint8_t *)v38, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v45, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v48, -1, -1);
            MEMORY[0x23B85DB24](v38, -1, -1);

          }
          else
          {

          }
        }
        v43 = *(void (**)(void *, uint64_t))((char *)&v18->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v43)
        {
          v44 = v12;
          sub_23A971FB8((uint64_t)v43);
          v43(v10, a1);

          sub_23A98C874((uint64_t)v43);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        v25 = *(id *)&v51[0];
        v26 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

void sub_23A9A87F0(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  NSObject *v21;
  uint8_t *v22;
  id v23;
  void *v24;
  unsigned int v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  NSObject *v30;
  id v31;
  NSObject *v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(void *, uint64_t);
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  NSObject *log;
  id v51;
  void *v52;
  void *v53;
  id v55[2];

  v2 = v1;
  v55[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v3] = 0;
  swift_release();
  v4 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v4] = 0;
  swift_release();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v5] = 0;
  swift_release();
  v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v6] = 0;
  swift_release();
  v7 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v7)
  {
    v8 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern];
    if (v8)
    {
      v55[0] = 0;
      v9 = v7;
      v10 = v8;
      v53 = v9;
      v11 = objc_msgSend(v9, sel_createPlayerWithPattern_error_, v10, v55);
      if (v11)
      {
        v12 = v11;
        v13 = qword_2569D4AC0;
        v14 = v55[0];
        if (v13 != -1)
          swift_once();
        v15 = sub_23AA32EA0();
        sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
        v16 = v2;
        v17 = sub_23AA32E88();
        v18 = sub_23AA33218();
        if (os_log_type_enabled(v17, v18))
        {
          v51 = v10;
          v19 = (uint8_t *)swift_slowAlloc();
          v20 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v19 = 138412290;
          v55[0] = v16;
          v21 = v16;
          sub_23AA333F8();
          *v20 = v16;

          _os_log_impl(&dword_23A95E000, v17, v18, "ðŸ§­ FMR1HaptiCtrl%@: playing ahead (green) haptic", v19, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v20, -1, -1);
          v22 = v19;
          v10 = v51;
          MEMORY[0x23B85DB24](v22, -1, -1);
        }
        else
        {

          v17 = v16;
        }

        v55[0] = 0;
        v25 = objc_msgSend(v12, sel_startAtTime_error_, v55, 0.0);
        v26 = v55[0];
        if (v25)
        {
          *((_BYTE *)&v16->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          v27 = v26;
        }
        else
        {
          v28 = v55[0];
          v29 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v30 = v16;
          v31 = v29;
          v32 = v30;
          v33 = v29;
          v34 = sub_23AA32E88();
          v35 = sub_23AA33218();
          if (os_log_type_enabled(v34, v35))
          {
            v36 = swift_slowAlloc();
            v49 = (_QWORD *)swift_slowAlloc();
            v52 = (void *)swift_slowAlloc();
            v55[0] = v52;
            *(_DWORD *)v36 = 138412546;
            log = v34;
            v37 = v16;
            v38 = v32;
            sub_23AA333F8();
            *v49 = v32;

            v16 = v37;
            *(_WORD *)(v36 + 12) = 2080;
            swift_getErrorValue();
            v39 = sub_23AA3377C();
            sub_23A964DBC(v39, v40, (uint64_t *)v55);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, log, v35, "ðŸ§­ FMR1HaptiCtrl%@: failed playing ahead haptic (%s)", (uint8_t *)v36, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v49, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v52, -1, -1);
            MEMORY[0x23B85DB24](v36, -1, -1);

          }
          else
          {

          }
        }
        v41 = *(void (**)(void *, uint64_t))((char *)&v16->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v41)
        {
          v42 = v10;
          sub_23A971FB8((uint64_t)v41);
          v41(v8, a1);
          sub_23A98C874((uint64_t)v41);

        }
        v43 = *(Class *)((char *)&v16->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink);
        if (v43)
        {
          v44 = v43;
          objc_msgSend(v44, sel_timestamp);
          v46 = v45;

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
          v46 = 0;
        }
        v47 = (char *)v16 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp;
        *(_QWORD *)v47 = v46;
        v47[8] = 0;
        v48 = (char *)v16 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay;
        *(_QWORD *)v48 = 0;
        v48[8] = 0;
      }
      else
      {
        v23 = v55[0];
        v24 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

void sub_23A9A8E90(uint64_t a1)
{
  sub_23A9A90DC(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing ahead off (green) haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing ahead off haptic (%s)");
}

uint64_t sub_23A9A8EEC(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v3 + v7) = 0;
  swift_release();
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) == 1)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) = 0;
    sub_23A9A4800();
  }
  v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v3 + v8) = 0;
  swift_release();
  v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v3 + v9) = 0;
  swift_release();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) = 0;
  v10 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v3 + v10) = 0;
  swift_release();
  v11 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v3 + v11) = 0;
  swift_release();
  sub_23A9A5D3C(a2);
  return sub_23A9A664C(*(uint64_t *)&a3, 0, a1);
}

void sub_23A9A9080(uint64_t a1)
{
  sub_23A9A90DC(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing arm's reach off haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing arm's reach off haptic (%s)");
}

void sub_23A9A90DC(uint64_t a1, _QWORD *a2, const char *a3, const char *a4)
{
  char *v4;
  void *v8;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  os_log_type_t v27;
  const char *v28;
  uint8_t *v29;
  _QWORD *v30;
  NSObject *v31;
  NSObject *v32;
  _QWORD *v33;
  id v34;
  void *v35;
  unsigned int v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  NSObject *v41;
  id v42;
  NSObject *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(void *, uint64_t);
  id v52;
  _QWORD *v53;
  id v54;
  NSObject *v55;
  const char *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  _OWORD v61[2];
  uint64_t v62;

  v8 = v4;
  v62 = *MEMORY[0x24BDAC8D0];
  v10 = &v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  memset(v61, 0, sizeof(v61));
  v11 = (uint64_t)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v61, v11);
  swift_endAccess();
  v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v4[v12] = 0;
  swift_release();
  if (v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_23A9A4800();
  }
  v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v4[v13] = 0;
  swift_release();
  v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v4[v14] = 0;
  swift_release();
  v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v4[v15] = 0;
  swift_release();
  v16 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v4[v16] = 0;
  swift_release();
  v17 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v17)
  {
    v18 = *(void **)&v4[*a2];
    if (v18)
    {
      *(_QWORD *)&v61[0] = 0;
      v19 = v17;
      v60 = v18;
      v20 = objc_msgSend(v19, sel_createPlayerWithPattern_error_);
      if (v20)
      {
        v21 = v20;
        v22 = qword_2569D4AC0;
        v23 = *(id *)&v61[0];
        if (v22 != -1)
          swift_once();
        v24 = sub_23AA32EA0();
        sub_23A9620E8(v24, (uint64_t)qword_2569E0040);
        v25 = v8;
        v26 = sub_23AA32E88();
        v27 = sub_23AA33218();
        v56 = a4;
        if (os_log_type_enabled(v26, v27))
        {
          v59 = a1;
          v28 = a3;
          v29 = (uint8_t *)swift_slowAlloc();
          v54 = v19;
          v30 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v29 = 138412290;
          *(_QWORD *)&v61[0] = v25;
          v31 = v25;
          v32 = v25;
          sub_23AA333F8();
          *v30 = v31;

          v25 = v31;
          _os_log_impl(&dword_23A95E000, v26, v27, v28, v29, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          v33 = v30;
          v19 = v54;
          MEMORY[0x23B85DB24](v33, -1, -1);
          a1 = v59;
          MEMORY[0x23B85DB24](v29, -1, -1);
        }
        else
        {

          v26 = v25;
        }

        *(_QWORD *)&v61[0] = 0;
        v36 = objc_msgSend(v21, sel_startAtTime_error_, v61, 0.0);
        v37 = *(void **)&v61[0];
        if (v36)
        {
          *((_BYTE *)&v25->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          v38 = v37;
        }
        else
        {
          v39 = *(id *)&v61[0];
          v40 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v41 = v25;
          v42 = v40;
          v43 = v41;
          v44 = v40;
          v45 = sub_23AA32E88();
          v46 = sub_23AA33218();
          if (os_log_type_enabled(v45, v46))
          {
            v55 = v45;
            v47 = swift_slowAlloc();
            v53 = (_QWORD *)swift_slowAlloc();
            v57 = swift_slowAlloc();
            *(_QWORD *)&v61[0] = v57;
            *(_DWORD *)v47 = 138412546;
            v58 = v18;
            v48 = v43;
            sub_23AA333F8();
            *v53 = v43;

            v18 = v58;
            *(_WORD *)(v47 + 12) = 2080;
            swift_getErrorValue();
            v49 = sub_23AA3377C();
            sub_23A964DBC(v49, v50, (uint64_t *)v61);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, v55, v46, v56, (uint8_t *)v47, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v53, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v57, -1, -1);
            MEMORY[0x23B85DB24](v47, -1, -1);

          }
          else
          {

          }
        }
        v51 = *(void (**)(void *, uint64_t))((char *)&v25->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v51)
        {
          v52 = v60;
          sub_23A971FB8((uint64_t)v51);
          v51(v18, a1);

          sub_23A98C874((uint64_t)v51);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        v34 = *(id *)&v61[0];
        v35 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

void sub_23A9A97E8(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  NSObject *v24;
  uint8_t *v25;
  id v26;
  void *v27;
  unsigned int v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  NSObject *v33;
  id v34;
  NSObject *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(void *, uint64_t);
  id v45;
  _QWORD *v46;
  NSObject *log;
  void *v48;
  uint64_t v49;
  void *v50;
  _OWORD v52[2];
  uint64_t v53;

  v2 = v1;
  v53 = *MEMORY[0x24BDAC8D0];
  v3 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  memset(v52, 0, sizeof(v52));
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v52, v4);
  swift_endAccess();
  v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v5] = 0;
  swift_release();
  if (v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_23A9A4800();
  }
  v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v6] = 0;
  swift_release();
  v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v7] = 0;
  swift_release();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v8] = 0;
  swift_release();
  v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v1[v9] = 0;
  swift_release();
  sub_23A9A5090();
  v10 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v10)
  {
    v11 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern];
    if (v11)
    {
      *(_QWORD *)&v52[0] = 0;
      v12 = v10;
      v13 = v11;
      v50 = v12;
      v14 = objc_msgSend(v12, sel_createPlayerWithPattern_error_, v13, v52);
      if (v14)
      {
        v15 = v14;
        v16 = qword_2569D4AC0;
        v17 = *(id *)&v52[0];
        if (v16 != -1)
          swift_once();
        v18 = sub_23AA32EA0();
        sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
        v19 = v2;
        v20 = sub_23AA32E88();
        v21 = sub_23AA33218();
        if (os_log_type_enabled(v20, v21))
        {
          v48 = v11;
          v22 = (uint8_t *)swift_slowAlloc();
          v23 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v22 = 138412290;
          *(_QWORD *)&v52[0] = v19;
          v24 = v19;
          sub_23AA333F8();
          *v23 = v19;

          _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMR1HaptiCtrl%@: playing pre-nearby haptic", v22, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v23, -1, -1);
          v25 = v22;
          v11 = v48;
          MEMORY[0x23B85DB24](v25, -1, -1);
        }
        else
        {

          v20 = v19;
        }

        *(_QWORD *)&v52[0] = 0;
        v28 = objc_msgSend(v15, sel_startAtTime_error_, v52, 0.0);
        v29 = *(void **)&v52[0];
        if (v28)
        {
          *((_BYTE *)&v19->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          v30 = v29;
        }
        else
        {
          v31 = *(id *)&v52[0];
          v32 = (void *)sub_23AA32CF0();

          swift_willThrow();
          v33 = v19;
          v34 = v32;
          v35 = v33;
          v36 = v32;
          v37 = sub_23AA32E88();
          v38 = sub_23AA33218();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = swift_slowAlloc();
            v46 = (_QWORD *)swift_slowAlloc();
            v49 = swift_slowAlloc();
            *(_QWORD *)&v52[0] = v49;
            *(_DWORD *)v39 = 138412546;
            log = v37;
            v40 = v19;
            v41 = v35;
            sub_23AA333F8();
            *v46 = v35;

            v19 = v40;
            *(_WORD *)(v39 + 12) = 2080;
            swift_getErrorValue();
            v42 = sub_23AA3377C();
            sub_23A964DBC(v42, v43, (uint64_t *)v52);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, log, v38, "ðŸ§­ FMR1HaptiCtrl%@: failed playing -prenearby haptic (%s)", (uint8_t *)v39, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v46, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v49, -1, -1);
            MEMORY[0x23B85DB24](v39, -1, -1);

          }
          else
          {

          }
        }
        v44 = *(void (**)(void *, uint64_t))((char *)&v19->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v44)
        {
          v45 = v13;
          sub_23A971FB8((uint64_t)v44);
          v44(v11, a1);

          sub_23A98C874((uint64_t)v44);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        v26 = *(id *)&v52[0];
        v27 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

void sub_23A9A9EDC()
{
  sub_23A9A9FF0(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing level increased haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing level increased haptic (%s)");
}

void sub_23A9A9F38()
{
  sub_23A9A9FF0(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing level decreased haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing level decreased haptic (%s)");
}

void sub_23A9A9F94()
{
  sub_23A9A9FF0(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing level far->near haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing far->near haptic (%s)");
}

void sub_23A9A9FF0(_QWORD *a1, const char *a2, const char *a3)
{
  _BYTE *v3;
  _BYTE *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  unsigned int v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _BYTE *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  _BYTE *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  _BYTE *v38;
  id v39;
  _BYTE *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE *v46;
  uint64_t v47;
  unint64_t v48;
  char *format;
  void *v50;
  void *v51;
  _OWORD v52[2];
  uint64_t v53;

  v7 = v3;
  v53 = *MEMORY[0x24BDAC8D0];
  v8 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  memset(v52, 0, sizeof(v52));
  v9 = (uint64_t)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v52, v9);
  swift_endAccess();
  v10 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v7[v10] = 0;
  swift_release();
  if (v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_23A9A4800();
  }
  v11 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v7[v11] = 0;
  swift_release();
  v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v7[v12] = 0;
  swift_release();
  v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)&v7[v13] = 0;
  swift_release();
  v14 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v14)
  {
    v15 = *(void **)&v7[*a1];
    if (v15)
    {
      *(_QWORD *)&v52[0] = 0;
      v16 = v14;
      v17 = v15;
      v18 = objc_msgSend(v16, sel_createPlayerWithPattern_error_, v17, v52);
      v19 = *(void **)&v52[0];
      if (v18)
      {
        v20 = v18;
        *(_QWORD *)&v52[0] = 0;
        v21 = v19;
        v22 = objc_msgSend(v20, sel_startAtTime_error_, v52, 0.0);
        v23 = *(void **)&v52[0];
        if (v22)
        {
          v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
          v24 = qword_2569D4AC0;
          v25 = v23;
          if (v24 != -1)
            swift_once();
          v26 = sub_23AA32EA0();
          sub_23A9620E8(v26, (uint64_t)qword_2569E0040);
          v27 = v7;
          v28 = sub_23AA32E88();
          v29 = sub_23AA33218();
          if (os_log_type_enabled(v28, v29))
          {
            v30 = (uint8_t *)swift_slowAlloc();
            v50 = v17;
            v31 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v30 = 138412290;
            *(_QWORD *)&v52[0] = v27;
            v32 = v27;
            sub_23AA333F8();
            *v31 = v27;

            _os_log_impl(&dword_23A95E000, v28, v29, a2, v30, 0xCu);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v31, -1, -1);
            MEMORY[0x23B85DB24](v30, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease();
          }

        }
        else
        {
          v51 = v17;
          v35 = *(id *)&v52[0];
          v36 = (void *)sub_23AA32CF0();

          swift_willThrow();
          if (qword_2569D4AC0 != -1)
            swift_once();
          v37 = sub_23AA32EA0();
          sub_23A9620E8(v37, (uint64_t)qword_2569E0040);
          v38 = v7;
          v39 = v36;
          v40 = v38;
          v41 = v36;
          v42 = sub_23AA32E88();
          v43 = sub_23AA33218();
          if (os_log_type_enabled(v42, v43))
          {
            v44 = swift_slowAlloc();
            v45 = (_QWORD *)swift_slowAlloc();
            format = (char *)swift_slowAlloc();
            *(_QWORD *)&v52[0] = format;
            *(_DWORD *)v44 = 138412546;
            v46 = v40;
            sub_23AA333F8();
            *v45 = v40;

            *(_WORD *)(v44 + 12) = 2080;
            swift_getErrorValue();
            v47 = sub_23AA3377C();
            sub_23A964DBC(v47, v48, (uint64_t *)v52);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, v42, v43, a3, (uint8_t *)v44, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v45, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](format, -1, -1);
            MEMORY[0x23B85DB24](v44, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();

          }
        }
      }
      else
      {
        v33 = *(id *)&v52[0];
        v34 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

void sub_23A9AA684()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];

  v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying;
  if (v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] == 1)
  {
    v2 = v0;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v3 = sub_23AA32EA0();
    sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
    v4 = v0;
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v18 = v1;
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      *(_QWORD *)&v19[0] = v4;
      v9 = v4;
      sub_23AA333F8();
      *v8 = v4;

      _os_log_impl(&dword_23A95E000, v5, v6, "ðŸ§­ FMR1HaptiCtrl%@: stopping haptics", v7, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      v10 = v8;
      v1 = v18;
      MEMORY[0x23B85DB24](v10, -1, -1);
      MEMORY[0x23B85DB24](v7, -1, -1);

    }
    else
    {

    }
    v11 = &v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    memset(v19, 0, sizeof(v19));
    v12 = (uint64_t)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
    swift_beginAccess();
    sub_23A9AAB60((uint64_t)v19, v12);
    swift_endAccess();
    v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
    if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v4[v13] = 0;
    swift_release();
    if (v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
    {
      v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
      sub_23A9A4800();
    }
    v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
    if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v4[v14] = 0;
    swift_release();
    v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
    if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v4[v15] = 0;
    swift_release();
    v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
    v16 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
    if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v4[v16] = 0;
    swift_release();
    v17 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
    if (*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v4[v17] = 0;
    swift_release();
    v2[v1] = 0;
  }
}

void sub_23A9AA9CC(unsigned __int8 a1, char a2, unint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  _OWORD v17[2];

  v5 = v4;
  v10 = a1;
  v11 = v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  memset(v17, 0, sizeof(v17));
  v12 = v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext;
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)v17, v12);
  swift_endAccess();
  if (v10 != 2 && (a1 & 1) == 0)
    *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) = 1;
  if (1.0 - a4 <= 2.22044605e-16)
  {
    v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
    if (*(_QWORD *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem))
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)(v5 + v14) = 0;
    swift_release();
    *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) = 0;
  }
  else
  {
    v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
    if (*(_QWORD *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem))
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)(v5 + v13) = 0;
    swift_release();
    v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic;
    if ((*(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) & 1) == 0)
    {
      sub_23A9A7D3C(1);
      *(_BYTE *)(v5 + v15) = 1;
    }
    if ((a2 & 1) != 0)
    {
      sub_23A9A806C();
      v16 = a4;
      sub_23A9A4C54(a3, v16);
    }
  }
}

uint64_t sub_23A9AAB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D6680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9AABA8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A9AABCC()
{
  uint64_t v0;

  return sub_23A9A7CCC(v0, (void (*)(_OWORD *))sub_23A9A6E0C);
}

uint64_t sub_23A9AABEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9AABFC()
{
  return swift_release();
}

void sub_23A9AAC04()
{
  uint64_t v0;

  sub_23A9A808C(v0);
}

uint64_t sub_23A9AAC0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9AAC30()
{
  uint64_t v0;

  return sub_23A9A7FE0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23A9AAC3C()
{
  uint64_t v0;

  return sub_23A9A7CCC(v0, (void (*)(_OWORD *))sub_23A9A5EB4);
}

uint64_t sub_23A9AAC5C()
{
  uint64_t v0;

  return sub_23A9A7CCC(v0, (void (*)(_OWORD *))sub_23A9A5E50);
}

uint64_t sub_23A9AAC7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9AACA0()
{
  sub_23A9A55A0();
}

uint64_t sub_23A9AACC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D6680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23A9AAD08(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_23AA33020();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_23AA3305C();
  }
  __break(1u);
  return result;
}

void sub_23A9AADA4(float a1)
{
  char *v1;
  float v3;
  float v4;
  uint64_t v5;
  id v6;
  double v7;
  uint64_t v8;
  id v9;
  double v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  unsigned int v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  char *v23;
  id v24;
  char *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v3 = 1.0 - a1;
    v4 = (float)(a1 * 0.6) + (float)((float)(1.0 - a1) * 0.5);
    v5 = *MEMORY[0x24BDBF508];
    v6 = objc_allocWithZone(MEMORY[0x24BDBF5B8]);
    *(float *)&v7 = v4;
    v35 = objc_msgSend(v6, sel_initWithParameterID_value_relativeTime_, v5, v7, 0.0);
    v8 = *MEMORY[0x24BDBF510];
    v9 = objc_allocWithZone(MEMORY[0x24BDBF5B8]);
    *(float *)&v10 = (float)(a1 * 0.1) - v3;
    v11 = objc_msgSend(v9, sel_initWithParameterID_value_relativeTime_, v8, v10, 0.0);
    v12 = v11;
    v13 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
    if (v13)
    {
      sub_23A964084(&qword_2569D6080);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_23AA36AF0;
      *(_QWORD *)(v14 + 32) = v35;
      *(_QWORD *)(v14 + 40) = v12;
      sub_23AA330C8();
      sub_23A968488(0, &qword_2569D6688);
      swift_unknownObjectRetain();
      v15 = v35;
      v16 = v12;
      v17 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      v36[0] = 0;
      v18 = objc_msgSend(v13, sel_sendParameters_atTime_error_, v17, v36, 0.0);
      swift_unknownObjectRelease();

      if (v18)
      {
        v19 = v36[0];

      }
      else
      {
        v20 = v36[0];
        v21 = (void *)sub_23AA32CF0();

        swift_willThrow();
        if (qword_2569D4AC0 != -1)
          swift_once();
        v22 = sub_23AA32EA0();
        sub_23A9620E8(v22, (uint64_t)qword_2569E0040);
        v23 = v1;
        v24 = v21;
        v25 = v23;
        v26 = v21;
        v27 = sub_23AA32E88();
        v28 = sub_23AA33218();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = swift_slowAlloc();
          v30 = (_QWORD *)swift_slowAlloc();
          v34 = (void *)swift_slowAlloc();
          v36[0] = v34;
          *(_DWORD *)v29 = 138412546;
          v31 = v25;
          sub_23AA333F8();
          *v30 = v25;

          *(_WORD *)(v29 + 12) = 2080;
          swift_getErrorValue();
          v32 = sub_23AA3377C();
          sub_23A964DBC(v32, v33, (uint64_t *)v36);
          sub_23AA333F8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_23A95E000, v27, v28, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering continuous haptic player: %s", (uint8_t *)v29, 0x16u);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v30, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v34, -1, -1);
          MEMORY[0x23B85DB24](v29, -1, -1);

        }
        else
        {

        }
      }
    }
    else
    {

    }
  }
}

void sub_23A9AB25C()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  int v12;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  char *v25;
  id v26;
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(void *, id *);
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  _QWORD *v55;
  void *type;
  void *v57;
  id v58;
  void *v59;
  os_log_t v60;
  id v61[6];

  v61[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v1)
  {
    v2 = v0;
    v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern];
    if (v3)
    {
      v61[0] = 0;
      v4 = v3;
      v5 = v1;
      v6 = objc_msgSend(v5, sel_createPlayerWithPattern_error_, v4, v61);
      v7 = v61[0];
      if (v6)
      {
        v8 = v6;
        if ((v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity + 4] & 1) != 0)
        {
          v9 = v61[0];
        }
        else
        {
          v12 = *(_DWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity];
          v13 = *MEMORY[0x24BDBF508];
          v14 = objc_allocWithZone(MEMORY[0x24BDBF5B8]);
          v15 = v7;
          LODWORD(v16) = v12;
          v17 = objc_msgSend(v14, sel_initWithParameterID_value_relativeTime_, v13, v16, 0.0);
          sub_23A964084(&qword_2569D6080);
          v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = xmmword_23AA36180;
          *(_QWORD *)(v18 + 32) = v17;
          v61[0] = (id)v18;
          sub_23AA330C8();
          sub_23A968488(0, &qword_2569D6688);
          v19 = v17;
          v20 = (void *)sub_23AA330A4();
          swift_bridgeObjectRelease();
          v61[0] = 0;
          LOBYTE(v13) = objc_msgSend(v8, sel_sendParameters_atTime_error_, v20, v61, 0.0);

          if ((v13 & 1) != 0)
          {
            v21 = v61[0];

          }
          else
          {
            v22 = v61[0];
            v23 = (void *)sub_23AA32CF0();

            swift_willThrow();
            if (qword_2569D4AC0 != -1)
              swift_once();
            v24 = sub_23AA32EA0();
            sub_23A9620E8(v24, (uint64_t)qword_2569E0040);
            v25 = v2;
            v26 = v23;
            v27 = v25;
            v28 = v23;
            v29 = sub_23AA32E88();
            v30 = sub_23AA33218();
            if (os_log_type_enabled(v29, v30))
            {
              v58 = v4;
              v31 = swift_slowAlloc();
              v55 = (_QWORD *)swift_slowAlloc();
              v57 = (void *)swift_slowAlloc();
              v61[0] = v57;
              *(_DWORD *)v31 = 138412546;
              v54 = v23;
              v60 = v19;
              v32 = v27;
              sub_23AA333F8();
              *v55 = v27;

              *(_WORD *)(v31 + 12) = 2080;
              swift_getErrorValue();
              v33 = sub_23AA3377C();
              sub_23A964DBC(v33, v34, (uint64_t *)v61);
              sub_23AA333F8();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_23A95E000, v29, v30, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering tap haptic player: %s", (uint8_t *)v31, 0x16u);
              sub_23A964084(&qword_2569D6058);
              swift_arrayDestroy();
              MEMORY[0x23B85DB24](v55, -1, -1);
              swift_arrayDestroy();
              MEMORY[0x23B85DB24](v57, -1, -1);
              v35 = v31;
              v4 = v58;
              MEMORY[0x23B85DB24](v35, -1, -1);

            }
            else
            {

            }
          }
        }
        v36 = *(void (**)(void *, id *))&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
        if (v36)
        {
          v37 = (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
          swift_beginAccess();
          sub_23A9AACC0(v37, (uint64_t)v61);
          v38 = v4;
          sub_23A971FB8((uint64_t)v36);
          v36(v3, v61);

          sub_23A98C874((uint64_t)v36);
          sub_23A9683BC((uint64_t)v61, &qword_2569D6680);
        }
        v61[0] = 0;
        if (objc_msgSend(v8, sel_startAtTime_error_, v61, 0.0, v54))
        {
          v39 = v61[0];

          swift_unknownObjectRelease();
          v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
        }
        else
        {
          v40 = v61[0];
          v41 = (void *)sub_23AA32CF0();

          swift_willThrow();
          if (qword_2569D4AC0 != -1)
            swift_once();
          v42 = sub_23AA32EA0();
          sub_23A9620E8(v42, (uint64_t)qword_2569E0040);
          v43 = v2;
          v44 = v41;
          v45 = v43;
          v46 = v41;
          v47 = sub_23AA32E88();
          v48 = sub_23AA33218();
          if (os_log_type_enabled(v47, v48))
          {
            v49 = swift_slowAlloc();
            v50 = (_QWORD *)swift_slowAlloc();
            type = (void *)swift_slowAlloc();
            v61[0] = type;
            *(_DWORD *)v49 = 138412546;
            v59 = v4;
            v51 = v45;
            sub_23AA333F8();
            *v50 = v45;

            *(_WORD *)(v49 + 12) = 2080;
            swift_getErrorValue();
            v52 = sub_23AA3377C();
            sub_23A964DBC(v52, v53, (uint64_t *)v61);
            sub_23AA333F8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A95E000, v47, v48, "ðŸ§­ FMR1HaptiCtrl%@: failed playing single tap haptic (%s)", (uint8_t *)v49, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v50, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](type, -1, -1);
            MEMORY[0x23B85DB24](v49, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();

          }
        }
      }
      else
      {
        v10 = v61[0];
        v11 = (void *)sub_23AA32CF0();

        swift_willThrow();
      }
    }
  }
}

uint64_t sub_23A9ABA34()
{
  uint64_t v0;

  return sub_23A9A4624(v0);
}

void sub_23A9ABA3C()
{
  uint64_t v0;

  sub_23A9A3030(v0);
}

void sub_23A9ABA44(uint64_t a1)
{
  uint64_t v1;

  sub_23A9A3494(a1, v1);
}

_OWORD *sub_23A9ABA4C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23A9ABA5C()
{
  return swift_release();
}

uint64_t FMMockFindingSession.__allocating_init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)(uint64_t *a1, uint64_t a2, _WORD *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;
  _WORD v16[20];
  unsigned __int16 v17;

  v11 = swift_allocObject();
  v16[0] = *a3;
  v12 = v16[0];
  type metadata accessor for FMFindingMockLocalizer();
  swift_allocObject();
  swift_retain();
  v13 = swift_bridgeObjectRetain();
  *(_QWORD *)(v11 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) = sub_23A9C4248(v13, v16);
  swift_release();
  sub_23A9ABDD8(a2, (uint64_t)v16);
  v17 = v12;
  v14 = sub_23AA1646C(a1, (uint64_t)v16, &v17, a4, a5);
  sub_23A9ABE20(a2);
  if (!v5)
  {
    *(_QWORD *)(*(_QWORD *)(v14 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) + 24) = &off_250BC5F60;
    swift_unknownObjectWeakAssign();
  }
  return v14;
}

uint64_t FMMockFindingSession.init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)(uint64_t *a1, uint64_t a2, _WORD *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  _WORD v15[20];
  unsigned __int16 v16;

  v15[0] = *a3;
  v11 = v15[0];
  type metadata accessor for FMFindingMockLocalizer();
  swift_allocObject();
  swift_retain();
  v12 = swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) = sub_23A9C4248(v12, v15);
  swift_release();
  sub_23A9ABDD8(a2, (uint64_t)v15);
  v16 = v11;
  v13 = sub_23AA1646C(a1, (uint64_t)v15, &v16, a4, a5);
  sub_23A9ABE20(a2);
  if (!v6)
  {
    *(_QWORD *)(*(_QWORD *)(v13 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) + 24) = &off_250BC5F60;
    swift_unknownObjectWeakAssign();
  }
  return v13;
}

uint64_t sub_23A9ABCD8()
{
  return swift_release();
}

uint64_t FMMockFindingSession.deinit()
{
  uint64_t v0;

  v0 = FMFindingSession.deinit();
  swift_release();
  return v0;
}

uint64_t FMMockFindingSession.__deallocating_deinit()
{
  FMFindingSession.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23A9ABD5C(uint64_t *a1, uint64_t a2, __int16 *a3, uint64_t a4, void *a5)
{
  __int16 v10;

  v10 = *a3;
  type metadata accessor for FMMockFindingSession();
  swift_allocObject();
  return FMMockFindingSession.init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)(a1, a2, &v10, a4, a5);
}

uint64_t sub_23A9ABDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D53C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9ABE20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084(&qword_2569D53C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A9ABE60()
{
  return type metadata accessor for FMMockFindingSession();
}

uint64_t type metadata accessor for FMMockFindingSession()
{
  uint64_t result;

  result = qword_2569D6708;
  if (!qword_2569D6708)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A9ABEA4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMMockFindingSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMMockFindingSession.__allocating_init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

__n128 initializeBufferWithCopyOfBuffer for FMPFMetalBGRABackdropMixerParameters(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for FMPFMetalBGRABackdropMixerParameters()
{
  return &type metadata for FMPFMetalBGRABackdropMixerParameters;
}

uint64_t sub_23A9ABF28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalDevice];
  if (v10)
  {
    v14[0] = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalProcessingQueue];
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v0;
    aBlock[4] = sub_23A9AD9BC;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC1870;
    v12 = _Block_copy(aBlock);
    swift_unknownObjectRetain_n();
    v13 = v0;
    sub_23AA32EE8();
    v14[1] = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v9, v4, v12);
    _Block_release(v12);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return swift_release();
  }
  return result;
}

void sub_23A9AC124(id metalDevice, char *a2)
{
  CVMetalTextureCacheRef v4;
  void *v5;
  __CVMetalTextureCache *v6;
  id v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v24;
  id v25;
  char *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  id v36;
  CVMetalTextureCacheRef cacheOut[2];

  cacheOut[1] = *(CVMetalTextureCacheRef *)MEMORY[0x24BDAC8D0];
  cacheOut[0] = 0;
  CVMetalTextureCacheCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, metalDevice, 0, cacheOut);
  v4 = cacheOut[0];
  v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache];
  *(CVMetalTextureCacheRef *)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache] = cacheOut[0];
  v6 = v4;

  v7 = objc_msgSend(metalDevice, sel_newCommandQueue);
  *(_QWORD *)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalCommandQueue] = v7;
  swift_unknownObjectRelease();
  type metadata accessor for FMPFView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v36 = 0;
  v10 = objc_msgSend(metalDevice, sel_newDefaultLibraryWithBundle_error_, v9, &v36);
  v11 = v36;
  if (v10)
  {
    v12 = v10;
    swift_unknownObjectRetain();
    v13 = v11;
    v14 = (void *)sub_23AA32FB4();
    v15 = objc_msgSend(v12, sel_newFunctionWithName_, v14);
    swift_unknownObjectRelease();

    if (v15)
    {
      v36 = 0;
      v16 = objc_msgSend(metalDevice, sel_newComputePipelineStateWithFunction_error_, v15, &v36);
      v17 = v36;
      if (v16)
      {
        *(_QWORD *)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState] = v16;
        v18 = v17;

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        v21 = v36;
        v22 = (void *)sub_23AA32CF0();

        swift_willThrow();
        if (qword_2569D4AB0 != -1)
          swift_once();
        v23 = sub_23AA32EA0();
        sub_23A9620E8(v23, (uint64_t)qword_2569E0010);
        v24 = a2;
        v25 = v22;
        v26 = v24;
        v27 = v22;
        v28 = sub_23AA32E88();
        v29 = sub_23AA33218();
        if (!os_log_type_enabled(v28, v29))
        {
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        v30 = swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        v35 = (void *)swift_slowAlloc();
        v36 = v35;
        *(_DWORD *)v30 = 138412546;
        v31 = v26;
        sub_23AA333F8();
        *v34 = v26;

        *(_WORD *)(v30 + 12) = 2080;
        swift_getErrorValue();
        v32 = sub_23AA3377C();
        sub_23A964DBC(v32, v33, (uint64_t *)&v36);
        sub_23AA333F8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A95E000, v28, v29, "ðŸ§­ FMPFView%@: failed loading Metal Shader (%s)", (uint8_t *)v30, 0x16u);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v34, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v35, -1, -1);
        MEMORY[0x23B85DB24](v30, -1, -1);

        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();

    }
  }
  else
  {
    v19 = v36;
    v20 = (void *)sub_23AA32CF0();

    swift_willThrow();
  }
LABEL_12:

}

void sub_23A9AC5D8(uint64_t a1)
{
  uint64_t v2;
  __CVMetalTextureCache *v3;

  v2 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache;
  v3 = *(__CVMetalTextureCache **)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache);
  if (v3)
  {
    CVMetalTextureCacheFlush(v3, 0);
    v3 = *(__CVMetalTextureCache **)(a1 + v2);
  }
  *(_QWORD *)(a1 + v2) = 0;

}

id sub_23A9AC618(void *a1, double a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  OpaqueVTPixelTransferSession *v7;
  size_t Width;
  size_t Height;
  id v10;
  __CVBuffer *v12;
  CVMetalTextureRef textureOut[2];

  textureOut[1] = *(CVMetalTextureRef *)MEMORY[0x24BDAC8D0];
  v3 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache);
  if (v3)
  {
    swift_retain();
    v6 = v3;
    v7 = sub_23AA22E90(a1, a2);
    swift_release();
    if (v7)
    {
      Width = CVPixelBufferGetWidth(v7);
      Height = CVPixelBufferGetHeight(v7);
      textureOut[0] = 0;
      if (CVMetalTextureCacheCreateTextureFromImage((CFAllocatorRef)*MEMORY[0x24BDBD240], (CVMetalTextureCacheRef)v6, v7, 0, MTLPixelFormatBGRA8Unorm_sRGB, Width, Height, 0, textureOut))
      {

      }
      else if (textureOut[0])
      {
        v12 = textureOut[0];
        v10 = CVMetalTextureGetTexture(v12);

        return v10;
      }

    }
  }
  return 0;
}

void sub_23A9AC768(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  void *v4;
  void *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  double *v33;
  double v34;
  float v35;
  id v36;
  double v37;
  id v38;
  id v39;
  void *v40;
  double v41;
  unint64_t v42;
  __int128 v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  NSObject *log;
  os_log_type_t type;
  uint64_t (*v51)(uint64_t);
  id v52;
  _BYTE *v53;
  __int128 v54;
  uint64_t (*v55)(uint64_t);
  __int128 v56;
  __int128 aBlock;
  uint64_t (*v58)(uint64_t);
  void *v59;
  id (*v60)();
  uint64_t v61;
  uint64_t v62;

  v3 = v2;
  v62 = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalDevice];
  if (v4)
  {
    v5 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalCommandQueue];
    if (v5)
    {
      if (*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState])
      {
        v52 = *(id *)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState];
        if ((v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalHasLoggedSetup] & 1) != 0)
        {
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
        }
        else
        {
          v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalHasLoggedSetup] = 1;
          v13 = qword_2569D4AB0;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v13 != -1)
            swift_once();
          v14 = sub_23AA32EA0();
          sub_23A9620E8(v14, (uint64_t)qword_2569E0010);
          swift_unknownObjectRetain_n();
          v15 = v2;
          v16 = sub_23AA32E88();
          v17 = sub_23AA33218();
          if (os_log_type_enabled(v16, v17))
          {
            type = v17;
            v18 = swift_slowAlloc();
            v47 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v18 = 138412802;
            log = v16;
            v19 = v15;
            sub_23AA333F8();
            *v47 = v15;

            *(_WORD *)(v18 + 12) = 2048;
            objc_msgSend(a1, sel_width);
            swift_unknownObjectRelease();
            sub_23AA333F8();
            swift_unknownObjectRelease();
            *(_WORD *)(v18 + 22) = 2048;
            v20 = objc_msgSend(a1, sel_height);
            swift_unknownObjectRelease();
            *(_QWORD *)&aBlock = v20;
            sub_23AA333F8();
            swift_unknownObjectRelease();
            _os_log_impl(&dword_23A95E000, log, type, "ðŸ§­ FMPFView%@: set up Metal Shader %ldx%ld in/out texture", (uint8_t *)v18, 0x20u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v47, -1, -1);
            MEMORY[0x23B85DB24](v18, -1, -1);

          }
          else
          {

            swift_unknownObjectRelease_n();
          }
        }
        v21 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, objc_msgSend(a1, sel_pixelFormat), objc_msgSend(a1, sel_width), objc_msgSend(a1, sel_height), 1);
        objc_msgSend(v21, sel_setUsage_, 3);
        v22 = objc_msgSend(v4, sel_newTextureWithDescriptor_, v21);
        if (!v22)
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        v23 = v22;
        swift_unknownObjectRetain();
        v24 = objc_msgSend(v5, sel_commandBuffer);
        if (v24)
        {
          v25 = v24;
          v26 = objc_msgSend(v5, sel_commandBuffer);
          if (v26)
          {
            v27 = v26;
            v28 = swift_allocObject();
            *(_QWORD *)(v28 + 16) = a2;
            *(_QWORD *)(v28 + 24) = v23;
            v60 = sub_23A9AD92C;
            v61 = v28;
            *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
            *((_QWORD *)&aBlock + 1) = 1107296256;
            v58 = sub_23A9AD12C;
            v59 = &unk_250BC1820;
            v29 = _Block_copy(&aBlock);
            swift_unknownObjectRetain();
            v30 = a2;
            v31 = v25;
            swift_release();
            objc_msgSend(v27, sel_addCompletedHandler_, v29);
            _Block_release(v29);
            if (v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_experienceType] < 2u)
            {
              v32 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring];
              v33 = (double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
              swift_beginAccess();
              v34 = *v33 + *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
              if (vabdd_f64(v33[35] + *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v34) <= *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
                v34 = v33[35] + *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
              v35 = v34;
              v36 = objc_allocWithZone(MEMORY[0x24BDDE3C8]);
              *(float *)&v37 = v35;
              v38 = objc_msgSend(v36, sel_initWithDevice_sigma_, v4, v37);
              objc_msgSend(v38, sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, v31, a1, v23);
              objc_msgSend(v31, sel_commit);

            }
            v39 = objc_msgSend(v27, sel_computeCommandEncoder);
            if (!v39)
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_39;
            }
            v40 = v39;
            v56 = *(_OWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerParameters];
            objc_msgSend(v39, sel_setComputePipelineState_, v52);
            objc_msgSend(v40, sel_setBytes_length_atIndex_, &v56, 16, 0);
            objc_msgSend(v40, sel_setTexture_atIndex_, v23, 0);
            objc_msgSend(v40, sel_setTexture_atIndex_, v23, 1);
            v41 = sqrt((double)(uint64_t)objc_msgSend(v52, sel_maxTotalThreadsPerThreadgroup));
            if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) != 0)
            {
              if (v41 > -9.22337204e18)
              {
                if (v41 < 9.22337204e18)
                {
                  v42 = (uint64_t)v41 + ((uint64_t)v41 < 0 ? 0xFuLL : 0);
                  sub_23A9AD980(v42 & 0xFFFFFFFFFFFFFFF0, v42 & 0xFFFFFFFFFFFFFFF0, &aBlock);
                  v43 = aBlock;
                  v51 = v58;
                  v44 = objc_msgSend(a1, sel_width);
                  if ((_QWORD)v43)
                  {
                    v45 = (uint64_t)v44;
                    if (v44 == (id)0x8000000000000000 && (_QWORD)v43 == -1)
                      goto LABEL_46;
                    v46 = (uint64_t)objc_msgSend(a1, sel_height);
                    if (*((_QWORD *)&v43 + 1))
                    {
                      if (v46 != 0x8000000000000000 || *((_QWORD *)&v43 + 1) != -1)
                      {
                        sub_23A9AD980(v45 / (uint64_t)v43, v46 / *((_QWORD *)&v43 + 1), &aBlock);
                        v54 = v43;
                        v55 = v51;
                        objc_msgSend(v40, sel_dispatchThreadgroups_threadsPerThreadgroup_, &aBlock, &v54);
                        objc_msgSend(v40, sel_endEncoding);
                        objc_msgSend(v27, sel_commit);
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
LABEL_39:
                        swift_unknownObjectRelease();

                        goto LABEL_40;
                      }
LABEL_47:
                      __break(1u);
                    }
LABEL_45:
                    __break(1u);
LABEL_46:
                    __break(1u);
                    goto LABEL_47;
                  }
LABEL_44:
                  __break(1u);
                  goto LABEL_45;
                }
LABEL_43:
                __break(1u);
                goto LABEL_44;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_43;
          }
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

LABEL_40:
        swift_unknownObjectRelease_n();
        return;
      }
    }
  }
  if (qword_2569D4AB0 != -1)
    swift_once();
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0010);
  v53 = v2;
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    *(_QWORD *)&aBlock = v53;
    v12 = v53;
    sub_23AA333F8();
    *v11 = v53;

    _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMPFView%@: cannot use Metal Shader as it is not set up", v10, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v11, -1, -1);
    MEMORY[0x23B85DB24](v10, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23A9AD12C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23A9AD174(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  char *v24;
  OSType PixelFormatType;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock[6];
  uint64_t v37;

  v5 = sub_23AA32ED0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32F00();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (CVPixelBufferGetPixelFormatType((CVPixelBufferRef)a1) == 875704422)
  {
    v35 = v6;
    v13 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView], sel_bounds);
    v15 = v14;
    objc_msgSend(*(id *)&v2[v13], sel_bounds);
    v17 = v15 / v16;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a1;
    *(_QWORD *)(v18 + 24) = v2;
    *(double *)(v18 + 32) = v17;
    *(_QWORD *)(v18 + 40) = a2;
    aBlock[4] = (uint64_t)sub_23A9AD8D8;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A9C4DBC;
    aBlock[3] = (uint64_t)&unk_250BC17D0;
    v19 = _Block_copy(aBlock);
    v20 = a1;
    v21 = v2;
    v22 = a2;
    sub_23AA32EE8();
    v37 = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v12, v8, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_release();
  }
  else
  {
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_23AA36190;
    *(_QWORD *)(v23 + 56) = type metadata accessor for FMPFView();
    *(_QWORD *)(v23 + 64) = sub_23A961DE4(&qword_2569D8070, (uint64_t (*)(uint64_t))type metadata accessor for FMPFView, MEMORY[0x24BEE5BE8]);
    *(_QWORD *)(v23 + 32) = v2;
    v24 = v2;
    PixelFormatType = CVPixelBufferGetPixelFormatType((CVPixelBufferRef)a1);
    v26 = MEMORY[0x24BEE4558];
    *(_QWORD *)(v23 + 96) = MEMORY[0x24BEE44F0];
    *(_QWORD *)(v23 + 104) = v26;
    *(_DWORD *)(v23 + 72) = PixelFormatType;
    v27 = sub_23AA32FE4();
    v29 = v28;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v30 = sub_23AA32EA0();
    sub_23A9620E8(v30, (uint64_t)qword_2569E0010);
    swift_bridgeObjectRetain();
    v31 = sub_23AA32E88();
    v32 = sub_23AA33218();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain();
      v37 = sub_23A964DBC(v27, v29, aBlock);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v31, v32, "%s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v34, -1, -1);
      MEMORY[0x23B85DB24](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_23A9AD5B4(__CVBuffer *a1, void *a2, void *a3, double a4)
{
  int64_t Width;
  double v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  BOOL v14;
  float v15;
  float v16;
  float v17;
  float v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  id v25;
  SCNMatrix4 v26;
  SCNMatrix4 b;
  SCNMatrix4 a;

  Width = CVPixelBufferGetWidth(a1);
  v9 = 0.5;
  if (Width < 1920)
    v9 = 0.75;
  v10 = sub_23A9AC618(a1, v9);
  if (v10)
  {
    v11 = v10;
    v12 = (double)(uint64_t)objc_msgSend(v10, sel_width);
    v13 = 1.0 / (v12 / (double)(uint64_t)objc_msgSend(v11, sel_height));
    v14 = v13 < a4;
    v15 = v13 / a4;
    v16 = a4 / v13;
    if (v14)
      v17 = v15;
    else
      v17 = 1.0;
    if (v14)
      v18 = 1.0;
    else
      v18 = v16;
    SCNMatrix4MakeRotation(&a, 1.5708, 0.0, 0.0, 1.0);
    b.m11 = v17;
    *(_QWORD *)&b.m14 = 0;
    *(_QWORD *)&b.m12 = 0;
    b.m22 = v18;
    *(_QWORD *)&b.m23 = 0;
    *(_QWORD *)&b.m31 = 0;
    b.m33 = 1.0;
    *(_QWORD *)&b.m42 = 0;
    *(_QWORD *)&b.m34 = 0;
    b.m44 = 1.0;
    SCNMatrix4Mult(&v26, &a, &b);
    a = v26;
    objc_msgSend(a3, sel_setContentsTransform_, &a);
    sub_23A9AC768(v11, a3);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_2569D4AB0 != -1)
      swift_once();
    v19 = sub_23AA32EA0();
    sub_23A9620E8(v19, (uint64_t)qword_2569E0010);
    v25 = a2;
    v20 = sub_23AA32E88();
    v21 = sub_23AA33218();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      *(_QWORD *)&a.m11 = v25;
      v24 = v25;
      sub_23AA333F8();
      *v23 = v25;

      _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMPFView%@: cannot process camera frame as it could not be converted to BGRA", v22, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v23, -1, -1);
      MEMORY[0x23B85DB24](v22, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_23A9AD8A4()
{
  id *v0;

  return swift_deallocObject();
}

void sub_23A9AD8D8()
{
  uint64_t v0;

  sub_23A9AD5B4(*(__CVBuffer **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 40), *(double *)(v0 + 32));
}

uint64_t sub_23A9AD8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9AD8F8()
{
  return swift_release();
}

uint64_t sub_23A9AD900()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_23A9AD92C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v1, sel_setWrapT_, 3);
  objc_msgSend(v1, sel_setWrapS_, 3);
  return objc_msgSend(v1, sel_setContents_, v2);
}

uint64_t sub_23A9AD980@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 1;
  return result;
}

uint64_t sub_23A9AD990()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_23A9AD9BC()
{
  uint64_t v0;

  sub_23A9AC124(*(id *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_23A9AD9D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  float v20;
  double v21;
  float v22;
  double v23;
  float v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v32;
  char *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD v59[3];
  uint64_t v60;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  v3 = (char *)*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton];
  v4 = sub_23A9E4FD4(0xD00000000000001BLL, 0x800000023AA3D7B0, 0, 0);
  v5 = (uint64_t *)&v3[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
  *v5 = v4;
  v5[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
  if (v5[1])
  {
    v8 = v7;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v7;
    v9 = 0;
  }
  objc_msgSend(v7, sel_setText_, v9);

  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, *MEMORY[0x24BDB1D50]);
  if (!v11)
    goto LABEL_14;
  v12 = v11;
  if (!objc_msgSend(v11, sel_hasTorch))
  {

LABEL_14:
    v26 = *(void **)&v1[v2];
    v60 = type metadata accessor for FMFindingViewController();
    v59[0] = v1;
    v27 = v1;
    v28 = v26;
    v29 = sub_23A9E4FD4(0xD000000000000024, 0x800000023AA3D7D0, 0, 0);
    sub_23AA2F884((uint64_t)v59, (uint64_t)sel_torchActionWithSender_, 64, v29, v30);
    swift_bridgeObjectRelease();

    sub_23A9683BC((uint64_t)v59, &qword_2569D6680);
    return 0;
  }
  v13 = objc_msgSend(v12, sel_torchMode);
  v14 = *(char **)&v1[v2];
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named];
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named + 8];
  if (v13 != (id)1)
  {
    if (v16 && (v15 == 0xD000000000000013 && v16 == 0x800000023AA3D800 || (sub_23AA33728() & 1) != 0))
    {

    }
    else
    {
      v32 = (void *)objc_opt_self();
      v33 = v14;
      v34 = objc_msgSend(v32, sel_whiteColor);
      v35 = objc_msgSend(v32, sel_whiteColor);
      v36 = objc_msgSend(v35, sel_colorWithAlphaComponent_, 0.2);

      sub_23AA2FC84(0xD000000000000013, 0x800000023AA3D800, v34, v36);
      v37 = *(void **)&v1[v2];
      v60 = type metadata accessor for FMFindingViewController();
      v59[0] = v1;
      v38 = v1;
      v39 = v37;
      v40 = sub_23A9E4FD4(0xD000000000000024, 0x800000023AA3D7D0, 0, 0);
      sub_23AA2F884((uint64_t)v59, (uint64_t)sel_torchActionWithSender_, 64, v40, v41);
      swift_bridgeObjectRelease();

      sub_23A9683BC((uint64_t)v59, &qword_2569D6680);
      if (qword_2569D4AC0 != -1)
        swift_once();
      v42 = sub_23AA32EA0();
      sub_23A9620E8(v42, (uint64_t)qword_2569E0040);
      v43 = sub_23AA32E88();
      v44 = sub_23AA33218();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_23A95E000, v43, v44, "ðŸ§­ FMFindingViewCtrl: Updated torch button (light is off)", v45, 2u);
        MEMORY[0x23B85DB24](v45, -1, -1);
      }

    }
    return 0;
  }
  if (!v16 || (v15 != 0xD000000000000012 || v16 != 0x800000023AA3D820) && (sub_23AA33728() & 1) == 0)
  {
    if (*(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]
                  + OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown) == 1)
    {
      v17 = (void *)objc_opt_self();
      v18 = v14;
      v19 = objc_msgSend(v17, sel_standardUserDefaults);
      objc_msgSend(v19, sel_fmpfGreenBackdropHue);
      v21 = v20;
      objc_msgSend(v19, sel_fmpfGreenBackdropSaturation);
      v23 = v22;
      objc_msgSend(v19, sel_fmpfGreenBackdropValue);
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithHue_saturation_brightness_alpha_, v21, v23, v24, 1.0);

    }
    else
    {
      v46 = (void *)objc_opt_self();
      v47 = v14;
      v25 = objc_msgSend(v46, sel_systemBlackColor);
    }
    v48 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v49 = objc_msgSend(v48, sel_colorWithAlphaComponent_, 0.9);

    sub_23AA2FC84(0xD000000000000012, 0x800000023AA3D820, v25, v49);
    v50 = *(void **)&v1[v2];
    v60 = type metadata accessor for FMFindingViewController();
    v59[0] = v1;
    v51 = v50;
    v52 = v1;
    v53 = sub_23A9E4FD4(0xD000000000000025, 0x800000023AA3D840, 0, 0);
    sub_23AA2F884((uint64_t)v59, (uint64_t)sel_torchActionWithSender_, 64, v53, v54);
    swift_bridgeObjectRelease();

    sub_23A9683BC((uint64_t)v59, &qword_2569D6680);
    if (qword_2569D4AC0 != -1)
      swift_once();
    v55 = sub_23AA32EA0();
    sub_23A9620E8(v55, (uint64_t)qword_2569E0040);
    v56 = sub_23AA32E88();
    v57 = sub_23AA33218();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_23A95E000, v56, v57, "ðŸ§­ FMFindingViewCtrl: Updated torch button (light is on)", v58, 2u);
      MEMORY[0x23B85DB24](v58, -1, -1);
    }

  }
  return 1;
}

void sub_23A9AE104(char a1, char a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  void *v34;
  uint64_t v35;

  v3 = v2;
  v6 = sub_23AA32F30();
  v28 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v12 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem;
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem];
  if ((a1 & 1) != 0)
  {
    if (!v14)
    {
      v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v15;
      *(_BYTE *)(v16 + 24) = a2 & 1;
      v34 = sub_23A9AFC88;
      v35 = v16;
      aBlock = MEMORY[0x24BDAC760];
      v31 = 1107296256;
      v32 = sub_23A9C4DBC;
      v33 = &unk_250BC19D8;
      _Block_copy(&aBlock);
      v29 = MEMORY[0x24BEE4AF8];
      sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      swift_retain();
      sub_23A964084((uint64_t *)&unk_2569D5D00);
      v27 = v6;
      sub_23A973294();
      sub_23AA3344C();
      sub_23AA32F54();
      swift_allocObject();
      v17 = sub_23AA32F3C();
      swift_release();
      swift_release();
      *(_QWORD *)&v2[v13] = v17;
      swift_retain();
      swift_release();
      sub_23A9731D4();
      v18 = (void *)sub_23AA33290();
      sub_23AA32F24();
      MEMORY[0x23B85CB04](v9, 1.0);
      v19 = v27;
      v20 = *(void (**)(char *, uint64_t))(v28 + 8);
      v20(v9, v27);
      sub_23AA3326C();
      swift_release();

      v20(v11, v19);
    }
  }
  else
  {
    if (v14)
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    *(_QWORD *)&v2[v13] = 0;
    swift_release();
    v21 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton];
    if ((a2 & 1) != 0)
    {
      v22 = (void *)objc_opt_self();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v21;
      *(_BYTE *)(v23 + 24) = 0;
      v34 = sub_23A9AFC58;
      v35 = v23;
      aBlock = MEMORY[0x24BDAC760];
      v31 = 1107296256;
      v32 = sub_23A9C4DBC;
      v33 = &unk_250BC1988;
      v24 = _Block_copy(&aBlock);
      v25 = v21;
      swift_release();
      objc_msgSend(v22, sel_animateWithDuration_animations_, v24, 0.5);
      _Block_release(v24);
    }
    else
    {
      objc_msgSend(v21, sel_setAlpha_, 0.0);
    }
    objc_msgSend(v3, sel_accessibilityShowViewHandler);

  }
}

uint64_t sub_23A9AE4B8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void (**v4)(uint64_t);
  uint64_t result;
  void (*v6)(uint64_t);
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer);
  if (*(_QWORD *)(v2 + 16))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v2 + 16) = 0;
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v3, sel_setIdleTimerDisabled_, 0);

  v4 = (void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  result = swift_beginAccess();
  v6 = *v4;
  if (*v4)
  {
    v7 = swift_retain();
    v6(v7);
    return sub_23A98C874((uint64_t)v6);
  }
  return result;
}

void sub_23A9AE678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t ObjectType;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v2 = sub_23AA32E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A9AACC0(a1, (uint64_t)v35);
  if (!v35[3])
  {
    v20 = &qword_2569D6680;
    v21 = (__int128 *)v35;
LABEL_10:
    sub_23A9683BC((uint64_t)v21, v20);
    goto LABEL_11;
  }
  sub_23A964084(&qword_2569D6878);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = v32;
    ObjectType = swift_getObjectType();
    (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD))(*((_QWORD *)&v6 + 1) + 8))(&v32, ObjectType, *((_QWORD *)&v6 + 1));
    if (v33)
    {
      sub_23A963B98(&v32, (uint64_t)v35);
      if (qword_2569D4AC0 != -1)
        swift_once();
      v8 = sub_23AA32EA0();
      sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
      sub_23A963A14((uint64_t)v35, (uint64_t)&v32);
      v9 = sub_23AA32E88();
      v10 = sub_23AA33218();
      v11 = v10;
      if (os_log_type_enabled(v9, v10))
      {
        v29 = v11;
        v12 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v31 = v28;
        *(_DWORD *)v12 = 136315138;
        v26 = v12 + 4;
        v27 = v12;
        v14 = v33;
        v13 = v34;
        sub_23A96545C(&v32, v33);
        (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
        sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v15 = sub_23AA33710();
        v17 = v16;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v30 = sub_23A964DBC(v15, v17, &v31);
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        sub_23A963B3C((uint64_t)&v32);
        v18 = v27;
        _os_log_impl(&dword_23A95E000, v9, (os_log_type_t)v29, "ðŸ§­ FMFindingViewCtrl: User selected %s through part picker.", v27, 0xCu);
        v19 = v28;
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v19, -1, -1);
        MEMORY[0x23B85DB24](v18, -1, -1);
      }
      else
      {
        sub_23A963B3C((uint64_t)&v32);
      }

      sub_23AA1742C(v35);
      sub_23A963B3C((uint64_t)v35);
      return;
    }

    v20 = &qword_2569D53C8;
    v21 = &v32;
    goto LABEL_10;
  }
LABEL_11:
  if (qword_2569D4AC0 != -1)
    swift_once();
  v22 = sub_23AA32EA0();
  sub_23A9620E8(v22, (uint64_t)qword_2569E0040);
  v23 = sub_23AA32E88();
  v24 = sub_23AA3320C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_23A95E000, v23, v24, "ðŸ§­ FMFindingViewCtrl: Unknown part selected.", v25, 2u);
    MEMORY[0x23B85DB24](v25, -1, -1);
  }

}

void sub_23A9AEB40(char a1, char a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *oslog;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, *MEMORY[0x24BDB1D50]);
  if (!v4)
    goto LABEL_8;
  v5 = v4;
  if (!objc_msgSend(v4, sel_hasTorch))
  {

LABEL_8:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v7 = sub_23AA32EA0();
    sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
    oslog = sub_23AA32E88();
    v8 = sub_23AA33218();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23A95E000, oslog, v8, "ðŸ§­ FMFindingViewCtrl: Unable to set torch mode", v9, 2u);
      MEMORY[0x23B85DB24](v9, -1, -1);
    }

    return;
  }
  v27[0] = 0;
  if (objc_msgSend(v5, sel_lockForConfiguration_, v27))
  {
    if ((a2 & 1) != 0)
    {
      v16 = v27[0];
      v17 = objc_msgSend(v5, sel_torchMode) != (id)1;
    }
    else
    {
      if (a1 == 2)
      {
        v6 = v27[0];
LABEL_31:
        objc_msgSend(v5, sel_unlockForConfiguration);
        sub_23A9AD9D4();

        return;
      }
      v17 = a1 & 1;
      v18 = v27[0];
    }
    objc_msgSend(v5, sel_setTorchMode_, v17);
    if (qword_2569D4AC0 != -1)
      swift_once();
    v19 = sub_23AA32EA0();
    sub_23A9620E8(v19, (uint64_t)qword_2569E0040);
    v20 = sub_23AA32E88();
    v21 = sub_23AA33218();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      *(_DWORD *)v22 = 136315138;
      v27[0] = v23;
      if (v17)
        v24 = 28271;
      else
        v24 = 6710895;
      if (v17)
        v25 = 0xE200000000000000;
      else
        v25 = 0xE300000000000000;
      sub_23A964DBC(v24, v25, (uint64_t *)v27);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMFindingViewCtrl: Did set torch mode %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v23, -1, -1);
      MEMORY[0x23B85DB24](v22, -1, -1);
    }

    sub_23A9AF150(v17);
    goto LABEL_31;
  }
  v10 = v27[0];
  v11 = (void *)sub_23AA32CF0();

  swift_willThrow();
  if (qword_2569D4AC0 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
  v13 = sub_23AA32E88();
  v14 = sub_23AA33218();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMFindingViewCtrl: Failed setting torch mode", v15, 2u);
    MEMORY[0x23B85DB24](v15, -1, -1);
  }

}

void sub_23A9AF008(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x23B85DBF0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton);
    if ((a2 & 1) != 0)
    {
      v7 = (void *)objc_opt_self();
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v6;
      *(_BYTE *)(v8 + 24) = 1;
      aBlock[4] = sub_23A9AFD40;
      aBlock[5] = v8;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23A9C4DBC;
      aBlock[3] = &unk_250BC1A28;
      v9 = _Block_copy(aBlock);
      v10 = v6;
      swift_release();
      objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.5);
      _Block_release(v9);
    }
    else
    {
      objc_msgSend(v6, sel_setAlpha_, 1.0);
    }
    objc_msgSend(v5, sel_accessibilityShowViewHandler);

  }
}

uint64_t sub_23A9AF150(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = sub_23AA32E88();
  v6 = sub_23AA33218();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17 = v16;
    *(_DWORD *)v7 = 138412546;
    v9 = v4;
    sub_23AA333F8();
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    if (a1 == 1)
      v10 = 28271;
    else
      v10 = 6710895;
    if (a1 == 1)
      v11 = 0xE200000000000000;
    else
      v11 = 0xE300000000000000;
    sub_23A964DBC(v10, v11, &v17);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v5, v6, "ðŸ§­ FMR1RangingVC%@: Analytics: Torch button changed state to %s", (uint8_t *)v7, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v16, -1, -1);
    MEMORY[0x23B85DB24](v7, -1, -1);

  }
  else
  {

  }
  v12 = (_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer);
  v13 = v12[3];
  v14 = v12[4];
  sub_23A96545C(v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 80))(a1, v13, v14);
}

void sub_23A9AF3B4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  _QWORD v11[6];

  v3 = *(_BYTE **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton);
  v3[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_isEnabled] = a1;
  v4 = v3;
  objc_msgSend(v4, sel_setUserInteractionEnabled_, a1 & 1);
  v5 = (void *)objc_opt_self();
  v6 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v4;
  v11[4] = sub_23A9AF50C;
  v11[5] = v7;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23A9C4DBC;
  v11[3] = &unk_250BC18C0;
  v8 = _Block_copy(v11);
  v9 = v4;
  v10 = v6;
  swift_release();
  objc_msgSend(v5, sel_transitionWithView_duration_options_animations_completion_, v10, 5242880, v8, 0, 0.25);
  _Block_release(v8);

}

uint64_t sub_23A9AF4E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9AF50C()
{
  uint64_t v0;

  return sub_23AA2F85C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9AF514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9AF524()
{
  return swift_release();
}

uint64_t sub_23A9AF52C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (**v8)(uint64_t, _QWORD, void (*)(char), uint64_t);
  void (*v9)(uint64_t, _QWORD, void (*)(char), uint64_t);
  uint64_t v10;

  v1 = v0;
  sub_23A9AF3B4(0);
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  result = swift_beginAccess();
  if ((*v2 & 1) == 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23A95E000, v5, v6, "ðŸ§­ FMFindingViewCtrl: Asked to play ranging sound", v7, 2u);
      MEMORY[0x23B85DB24](v7, -1, -1);
    }

    sub_23A9B3BD0();
    v8 = (void (**)(uint64_t, _QWORD, void (*)(char), uint64_t))(v1
                                                                                   + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler);
    result = swift_beginAccess();
    v9 = *v8;
    if (*v8)
    {
      v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_23A971FB8((uint64_t)v9);
      swift_retain();
      v9(1, 0, sub_23A9AFC24, v10);
      sub_23A98C874((uint64_t)v9);
      return swift_release_n();
    }
  }
  return result;
}

void sub_23A9AF6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = sub_23A964084((uint64_t *)&unk_2569D66C0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23AA32D44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
      + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9AFB80(v11, (uint64_t)v10);
  v12 = *((_QWORD *)v10 + 1);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_23AA1D250((uint64_t)&v10[*(int *)(v8 + 36)]), (v14 & 1) != 0))
  {
    sub_23A963A14(*(_QWORD *)(v12 + 56) + 40 * v13, (uint64_t)&v29);
    sub_23A963B98(&v29, (uint64_t)&v32);
    sub_23A9AFBC4((uint64_t)v10);
    v15 = v34;
    v16 = v35;
    sub_23A96545C(&v32, v34);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v16 + 24))(&v29, v15, v16);
    v17 = v30;
    if (v31 != 1)
    {
      sub_23A980B18((void *)v29, *((uint64_t *)&v29 + 1), v30, v31);
      sub_23A963B3C((uint64_t)&v32);
      if (qword_2569D4AC0 != -1)
        swift_once();
      v18 = sub_23AA32EA0();
      sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
      v19 = sub_23AA32E88();
      v20 = sub_23AA3320C();
      if (!os_log_type_enabled(v19, v20))
        goto LABEL_16;
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      v22 = "FMFindingViewCtrl: Can't open messages without a friend";
      goto LABEL_15;
    }

    sub_23A963B3C((uint64_t)&v32);
    if (v17)
    {
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_23AA33500();
      swift_bridgeObjectRelease();
      v32 = 0xD000000000000012;
      v33 = 0x800000023AA3D8F0;
      sub_23AA33038();
      swift_bridgeObjectRelease();
    }
    sub_23AA32D38();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_23A9683BC((uint64_t)v3, (uint64_t *)&unk_2569D66C0);
      if (qword_2569D4AC0 != -1)
        swift_once();
      v23 = sub_23AA32EA0();
      sub_23A9620E8(v23, (uint64_t)qword_2569E0040);
      v19 = sub_23AA32E88();
      v20 = sub_23AA3320C();
      if (!os_log_type_enabled(v19, v20))
        goto LABEL_16;
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      v22 = "FMFindingViewCtrl: Error opening settings. Invalid URL";
LABEL_15:
      _os_log_impl(&dword_23A95E000, v19, v20, v22, v21, 2u);
      MEMORY[0x23B85DB24](v21, -1, -1);
LABEL_16:

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v24 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v24)
    {
      v25 = v24;
      v26 = (void *)sub_23AA32D14();
      v27 = (void *)sub_23AA32F78();
      objc_msgSend(v25, sel_openSensitiveURL_withOptions_, v26, v27);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_23AA335A8();
    __break(1u);
  }
}

uint64_t sub_23A9AFB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingSessionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9AFBC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFindingSessionState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A9AFC00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A9AFC24(char a1)
{
  uint64_t v1;

  sub_23A9E0DB4(a1, v1);
}

uint64_t sub_23A9AFC2C()
{
  uint64_t v0;

  return sub_23A9AE4B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9AFC34()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9AFC58()
{
  uint64_t v0;

  return sub_23A9DA450(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23A9AFC64()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23A9AFC88()
{
  uint64_t v0;

  sub_23A9AF008(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23A9AFC94()
{
  id v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, *MEMORY[0x24BDB1D50]);
  if (v0)
  {
    v1 = v0;
    if (objc_msgSend(v0, sel_hasTorch) && objc_msgSend(v1, sel_isTorchModeSupported_, 0))
    {
      v2 = 1;
      v3 = objc_msgSend(v1, sel_isTorchModeSupported_, 1);

      if ((v3 & 1) != 0)
        return v2;
    }
    else
    {

    }
  }
  return 0;
}

uint64_t sub_23A9AFD6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_23A9AFD8C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

void *sub_23A9AFDEC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_23A9AFE38(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_23A9AFE88())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23A9AFED0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  return MEMORY[0x23B85DBF0](v1);
}

uint64_t sub_23A9AFF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_23A9AFF84(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x23B85DBF0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23A9AFFF8;
}

void sub_23A9AFFF8(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id FMPrecisionConnectionManager.__allocating_init(findables:connectionContext:arSession:)(uint64_t a1, char *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return FMPrecisionConnectionManager.init(findables:connectionContext:arSession:)(a1, a2, a3);
}

id FMPrecisionConnectionManager.init(findables:connectionContext:arSession:)(uint64_t a1, char *a2, void *a3)
{
  char *v3;
  char v6;
  void **v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;

  v6 = *a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions] = MEMORY[0x24BEE4AF8];
  v7 = (void **)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8 = qword_2569D4AE0;
  v9 = v3;
  if (v8 != -1)
    swift_once();
  v10 = (void *)qword_2569E00A0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_nearbyInteractionManager] = qword_2569E00A0;
  swift_beginAccess();
  v11 = *v7;
  *v7 = a3;
  v12 = v10;
  v13 = a3;

  LOBYTE(v28) = v6;
  v14 = sub_23A96465C(a1, (unsigned __int8 *)&v28);
  v15 = qword_2569D4AB8;
  v16 = v14;
  if (v15 != -1)
    swift_once();
  v17 = sub_23AA32EA0();
  sub_23A9620E8(v17, (uint64_t)qword_2569E0028);
  v18 = v16;
  v19 = sub_23AA32E88();
  v20 = sub_23AA33218();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v28 = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = swift_bridgeObjectRetain();
    v24 = MEMORY[0x23B85CC54](v23, MEMORY[0x24BEE0D00]);
    v26 = v25;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v24, v26, &v28);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v19, v20, "FMPrecisionConnectionManager: initialized for items: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v22, -1, -1);
    MEMORY[0x23B85DB24](v21, -1, -1);

  }
  else
  {

  }
  return v18;
}

void sub_23A9B0370(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23A9B0378()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0028);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x23B85CC54](v7, MEMORY[0x24BEE0D00]);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v8, v10, &v15);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "FMPrecisionConnectionManager: requesting connection for items: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v11 = (char *)v2;
  v12 = swift_bridgeObjectRetain();
  v13 = sub_23A9B1274(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  *(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions] = v13;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9B0594()
{
  unint64_t v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  char *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t aBlock[6];

  if (qword_2569D4AB8 != -1)
    goto LABEL_16;
  while (1)
  {
    v1 = sub_23AA32EA0();
    sub_23A9620E8(v1, (uint64_t)qword_2569E0028);
    v2 = (char *)(id)v0;
    v3 = sub_23AA32E88();
    v4 = sub_23AA33218();
    v24 = v2;
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      aBlock[0] = v6;
      *(_DWORD *)v5 = 136315138;
      v7 = swift_bridgeObjectRetain();
      v8 = MEMORY[0x23B85CC54](v7, MEMORY[0x24BEE0D00]);
      v10 = v9;
      swift_bridgeObjectRelease();
      sub_23A964DBC(v8, v10, aBlock);
      sub_23AA333F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v3, v4, "FMPrecisionConnectionManager: requesting disconnection for items: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v6, -1, -1);
      MEMORY[0x23B85DB24](v5, -1, -1);

    }
    else
    {

    }
    v0 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions];
    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_23AA335C0();
      v11 = result;
      if (!result)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v11)
        return swift_bridgeObjectRelease();
    }
    if (v11 < 1)
      break;
    v13 = 0;
    v23 = OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_nearbyInteractionManager;
    while (1)
    {
      v14 = (v0 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x23B85D0B0](v13, v0)
          : *(id *)(v0 + 8 * v13 + 32);
      v15 = v14;
      v16 = *(char **)&v2[v23];
      v17 = *(NSObject **)&v16[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v16;
      *(_QWORD *)(v18 + 24) = v15;
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = sub_23A981D34;
      *(_QWORD *)(v19 + 24) = v18;
      aBlock[4] = (uint64_t)sub_23A968410;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23A9AFD6C;
      aBlock[3] = (uint64_t)&unk_250BC1AA0;
      v20 = _Block_copy(aBlock);
      v21 = v16;
      v22 = v15;
      swift_retain();
      swift_release();
      dispatch_sync(v17, v20);
      _Block_release(v20);
      LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if ((v17 & 1) != 0)
        break;
      ++v13;
      v2 = v24;
      if (v11 == v13)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9B093C(uint64_t a1)
{
  return sub_23A9B0964(a1, "ðŸ§­ FMPrecisionConnectionManager: Updating location for local device", (void (*)(uint64_t))sub_23A98794C);
}

uint64_t sub_23A9B0950(uint64_t a1)
{
  return sub_23A9B0964(a1, "ðŸ§­ FMPrecisionConnectionManager: Updating heading for local device", (void (*)(uint64_t))sub_23A987B70);
}

uint64_t sub_23A9B0964(uint64_t a1, const char *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t i;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;

  v6 = v3;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  v9 = sub_23AA32E88();
  v10 = sub_23AA33200();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23A95E000, v9, v10, a2, v11, 2u);
    MEMORY[0x23B85DB24](v11, -1, -1);
  }

  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions);
  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_7;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_23AA335C0();
  v13 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_7:
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (char *)MEMORY[0x23B85D0B0](i, v12);
      else
        v16 = (char *)*(id *)(v12 + 8 * i + 32);
      v17 = v16;
      v18 = MEMORY[0x23B85DBF0](&v16[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context]);
      if (v18)
      {
        v19 = (void *)v18;
        a3(a1);

        v17 = v19;
      }

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9B0B20(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t i;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  _QWORD v29[2];
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v10 = sub_23AA32EA0();
  sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
  sub_23A963A14(a1, (uint64_t)v35);
  v11 = sub_23AA32E88();
  v12 = sub_23AA33200();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v34 = v31;
    v29[0] = v7;
    *(_DWORD *)v13 = 136315138;
    v29[1] = v13 + 4;
    v30 = v13;
    v32 = v2;
    v15 = v36;
    v14 = v37;
    sub_23A96545C(v35, v36);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
    sub_23A9B15D4();
    v16 = sub_23AA33710();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v29[0] + 8))(v9, v6);
    v33 = sub_23A964DBC(v16, v18, &v34);
    sub_23AA333F8();
    v3 = v32;
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)v35);
    v19 = v30;
    _os_log_impl(&dword_23A95E000, v11, v12, "ðŸ§­ FMPrecisionConnectionManager: Updating location for findable: %s", v30, 0xCu);
    v20 = v31;
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v20, -1, -1);
    MEMORY[0x23B85DB24](v19, -1, -1);
  }
  else
  {
    sub_23A963B3C((uint64_t)v35);
  }

  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions);
  if (!(v21 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_8;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_23AA335C0();
  v22 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_8:
  if (v22 >= 1)
  {
    for (i = 0; i != v22; ++i)
    {
      if ((v21 & 0xC000000000000001) != 0)
        v25 = (char *)MEMORY[0x23B85D0B0](i, v21);
      else
        v25 = (char *)*(id *)(v21 + 8 * i + 32);
      v26 = v25;
      v27 = MEMORY[0x23B85DBF0](&v25[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context]);
      if (v27)
      {
        v28 = (void *)v27;
        sub_23A987F58(a1, a2);

        v26 = v28;
      }

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9B0E38()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return sub_23A972074(v0 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate);
}

id FMPrecisionConnectionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPrecisionConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23A9B0F0C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0028);
  v4 = sub_23AA32E88();
  v5 = sub_23AA33218();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v6 = 136315138;
    __asm { BR              X10 }
  }

  if (a1)
  {
    v7 = v1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x23B85DBF0](v7))
    {
      v8 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, BOOL, _QWORD, uint64_t, uint64_t))(v8 + 8))(v1, a1 == 2, 0, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v10 = sub_23AA32E88();
    v11 = sub_23AA33218();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23A95E000, v10, v11, "FMPrecisionConnectionManager: ignoring unknown state, waiting for a decision to be made before forwarding.", v12, 2u);
      MEMORY[0x23B85DB24](v12, -1, -1);
    }

  }
}

uint64_t sub_23A9B11E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  if (result)
  {
    v5 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, 0, a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23A9B1274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int16 v14;
  id v15;
  id v16;
  char *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  _QWORD v23[2];
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD aBlock[6];
  __int128 v31[2];
  uint64_t v32;

  v3 = v2;
  result = MEMORY[0x24BEE4AF8];
  v32 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8 = a1 + 32;
    v26 = OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_nearbyInteractionManager;
    v25 = OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_connectionContext;
    v9 = (void **)(a2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
    v23[0] = a1;
    swift_bridgeObjectRetain();
    v24 = v9;
    swift_beginAccess();
    v10 = type metadata accessor for FMNearbyInteractionManagerSubscription();
    v23[1] = v10;
    while (1)
    {
      v27 = v6;
      v29 = v23;
      v11 = v26;
      v12 = *v24;
      MEMORY[0x24BDAC7A8](v10);
      v23[-6] = v8;
      v23[-5] = v13;
      v23[-4] = v12;
      v23[-3] = a2;
      v23[-2] = &off_250BC1AC8;
      LOWORD(v23[-1]) = v14;
      v15 = v13;
      v16 = v12;
      sub_23AA3329C();
      v28 = v3;

      v17 = *(char **)(a2 + v11);
      v18 = *(NSObject **)&v17[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
      sub_23A963A14(v8, (uint64_t)v31);
      v19 = swift_allocObject();
      sub_23A963B98(v31, v19 + 16);
      *(_QWORD *)(v19 + 56) = v17;
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = sub_23A9B188C;
      *(_QWORD *)(v20 + 24) = v19;
      aBlock[4] = sub_23A9B18A8;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23A9AFD6C;
      aBlock[3] = &unk_250BC1B88;
      v21 = _Block_copy(aBlock);
      v22 = v17;
      swift_retain();
      swift_release();
      dispatch_sync(v18, v21);
      _Block_release(v21);
      LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      result = swift_release();
      if ((v21 & 1) != 0)
        break;
      MEMORY[0x23B85CC30](result);
      if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23AA330D4();
      sub_23AA330EC();
      v10 = sub_23AA330C8();
      v8 += 40;
      v3 = v28;
      v6 = v27 - 1;
      if (v27 == 1)
      {
        swift_bridgeObjectRelease();
        return v32;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23A9B1580()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A9B15AC()
{
  return swift_deallocObject();
}

uint64_t sub_23A9B15BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9B15CC()
{
  return swift_release();
}

unint64_t sub_23A9B15D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D5D20;
  if (!qword_2569D5D20)
  {
    v1 = sub_23AA32E1C();
    result = MEMORY[0x23B85DA58](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_2569D5D20);
  }
  return result;
}

uint64_t type metadata accessor for FMPrecisionConnectionManager()
{
  return objc_opt_self();
}

id sub_23A9B163C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_23A9B1690@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_23A9B16E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMPrecisionConnectionManagerDelegate.precisionConnectionManager(_:isAvailable:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FMPrecisionConnectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.__allocating_init(findables:connectionContext:arSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateLocationForLocalDevice(location:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateHeadingForLocalDevice(heading:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateLocationForFindable(findable:location:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t sub_23A9B1860()
{
  uint64_t v0;

  sub_23A963B3C(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_23A9B188C()
{
  uint64_t v0;

  return sub_23A98A008((_QWORD *)(v0 + 16), *(char **)(v0 + 56));
}

uint64_t sub_23A9B1898()
{
  return swift_deallocObject();
}

id sub_23A9B18B4(__int16 *a1)
{
  char *v1;
  __int16 v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  objc_super v15;
  objc_super v16;
  __int16 v17;

  v2 = *a1;
  v3 = OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDotNode;
  v4 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTRangeDotNode());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(_WORD *)&v5[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_findingTechnology] = v2;
  v17 = v2;
  v6 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTLevelsNode());
  *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode] = sub_23AA246F0(&v17);
  v7 = (objc_class *)type metadata accessor for FMPFSKBTRangeDiskNode();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_sizeSpring;
  v10 = v8;
  *(_QWORD *)&v8[v9] = sub_23A9CCC54(0, 0, 0x3F50624DD2F1A9FCLL, 0);
  v11 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_opacitySpring;
  *(_QWORD *)&v10[v11] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_WORD *)&v10[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_findingTechnology] = v2;

  v16.receiver = v10;
  v16.super_class = v7;
  v12 = objc_msgSendSuper2(&v16, sel_init);
  sub_23A9EA3E4();

  *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode] = v12;
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for FMPFSKBTRangingNode();
  v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_23A9B1AD8();

  return v13;
}

void sub_23A9B1AD8()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode];
  v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode];
  v4 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDotNode];
  v5 = (void *)objc_opt_self();
  v6 = (void *)objc_opt_self();
  v7 = v2;
  v8 = v3;
  v22 = v4;
  objc_msgSend(v1, sel_addChild_, v7);
  sub_23A964084(&qword_2569D6080);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23AA36180;
  v10 = objc_msgSend(v6, sel_rangeWithConstantValue_, 0.0);
  v11 = objc_msgSend(v5, sel_distance_toNode_, v10, v1);

  *(_QWORD *)(v9 + 32) = v11;
  sub_23AA330C8();
  sub_23A9B1EF4();
  v12 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setConstraints_, v12);

  v13 = v8;
  objc_msgSend(v1, sel_addChild_, v13);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23AA36180;
  v15 = objc_msgSend(v6, sel_rangeWithConstantValue_, 0.0);
  v16 = objc_msgSend(v5, sel_distance_toNode_, v15, v1);

  *(_QWORD *)(v14 + 32) = v16;
  sub_23AA330C8();
  v17 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setConstraints_, v17);

  v18 = v22;
  objc_msgSend(v1, sel_addChild_, v18);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23AA36180;
  v20 = objc_msgSend(v6, sel_rangeWithConstantValue_, 0.0);
  v21 = objc_msgSend(v5, sel_distance_toNode_, v20, v1);

  *(_QWORD *)(v19 + 32) = v21;
  sub_23AA330C8();
  v23 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setConstraints_, v23);

}

void sub_23A9B1E20()
{
  uint64_t v0;

}

id sub_23A9B1E5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKBTRangingNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKBTRangingNode()
{
  return objc_opt_self();
}

unint64_t sub_23A9B1EF4()
{
  unint64_t result;

  result = qword_2569D5990;
  if (!qword_2569D5990)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D5990);
  }
  return result;
}

id sub_23A9B1F30()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMR1ProximityManager()), sel_init);
  qword_2569E0098 = (uint64_t)result;
  return result;
}

id sub_23A9B1F60()
{
  id v0;
  id result;

  v0 = objc_allocWithZone((Class)type metadata accessor for FMNearbyInteractionManager());
  result = sub_23A989500(0);
  qword_2569E00A0 = (uint64_t)result;
  return result;
}

uint64_t FMFindableObject.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFindableObject.findingIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FMFindableObject() + 20);
  v4 = sub_23AA32E1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FMFindableObject()
{
  uint64_t result;

  result = qword_2569D6970;
  if (!qword_2569D6970)
    return swift_getSingletonMetadata();
  return result;
}

id FMFindableObject.findingProductType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = v1 + *(int *)(type metadata accessor for FMFindableObject() + 24);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  return sub_23A9B208C(v4, v5, v6, v7);
}

id sub_23A9B208C(id result, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if (a4 == 1)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    return v4;
  }
  return result;
}

uint64_t FMFindableObject.findingTechnology.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFindableObject();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FMFindableObject.videoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FMFindableObject() + 32);
  v4 = *(_QWORD *)(v3 + 112);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v3 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v3 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v3 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(v3 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_QWORD *)(a1 + 112) = v4;
  return swift_bridgeObjectRetain();
}

id FMFindableObject.discoveryToken.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for FMFindableObject() + 36));
}

void *FMFindableObject.init(name:findingIdentifier:findingTechnology:findingProductType:videoInfo:discoveryToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  void *result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  __int128 *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  __int16 v57;
  unint64_t v58;
  _QWORD *v59;
  int *v60;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;

  v57 = *a4;
  v11 = *(_QWORD *)a5;
  v10 = *(_QWORD *)(a5 + 8);
  v12 = *(_QWORD *)(a5 + 16);
  v13 = *(unsigned __int8 *)(a5 + 24);
  v48 = *a6;
  v49 = a6[1];
  v74 = a6[2];
  v50 = a6[3];
  v51 = a6[4];
  v75 = a6[5];
  v52 = a6[6];
  v53 = a6[7];
  v62 = a6[8];
  v64 = a6[9];
  v66 = a6[10];
  v68 = a6[11];
  v14 = a6[14];
  v70 = a6[12];
  v72 = a6[13];
  *a8 = a1;
  a8[1] = a2;
  v15 = (int *)type metadata accessor for FMFindableObject();
  v16 = (char *)a8 + v15[5];
  v17 = sub_23AA32E1C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v16;
  v20 = a3;
  v21 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v19, v20, v17);
  v22 = (char *)a8 + v15[6];
  *(_QWORD *)v22 = v11;
  *((_QWORD *)v22 + 1) = v10;
  v47 = v10;
  *((_QWORD *)v22 + 2) = v12;
  v22[24] = v13;
  v59 = a8;
  v60 = v15;
  *(_WORD *)((char *)a8 + v15[7]) = v57;
  if (v14)
  {
    v54 = HIDWORD(v74);
    v23 = v62;
    v55 = HIDWORD(v75);
    v56 = HIDWORD(v62);
    v24 = v68;
    v58 = HIDWORD(v68);
    result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v20, v21);
    v27 = v70;
    v26 = v72;
    v28 = v66;
    v29 = v64;
    v31 = v52;
    v30 = v53;
    v33 = v50;
    v32 = v51;
    v34 = v48;
    v35 = v49;
  }
  else
  {
    v45 = (void *)v11;
    v46 = v20;
    v44 = v21;
    if (v13)
    {
      if (v13 == 1)
      {
        v36 = qword_2569D4AF0;
        v37 = (id)v11;
        swift_bridgeObjectRetain();
        if (v36 != -1)
          swift_once();
        v38 = &xmmword_2569D6B70;
      }
      else if (v12 | v10 | v11)
      {
        if (qword_2569D4AE8 != -1)
          swift_once();
        v38 = &xmmword_2569D6AF8;
      }
      else
      {
        if (qword_2569D4AF8 != -1)
          swift_once();
        v38 = &xmmword_2569D6BE8;
      }
    }
    else
    {
      if (qword_2569D4B08 != -1)
        swift_once();
      v38 = &xmmword_2569D6CD8;
    }
    v39 = v18;
    v14 = *((_QWORD *)v38 + 14);
    v71 = *((_QWORD *)v38 + 12);
    v73 = *((_QWORD *)v38 + 13);
    LODWORD(v58) = *((_DWORD *)v38 + 23);
    v69 = *((_DWORD *)v38 + 22);
    v67 = *((_QWORD *)v38 + 10);
    LODWORD(v56) = *((_DWORD *)v38 + 17);
    v63 = *((_DWORD *)v38 + 16);
    v65 = *((_QWORD *)v38 + 9);
    v31 = *((_QWORD *)v38 + 6);
    v30 = *((_QWORD *)v38 + 7);
    LODWORD(v55) = *((_DWORD *)v38 + 11);
    LODWORD(v75) = *((_DWORD *)v38 + 10);
    v33 = *((_QWORD *)v38 + 3);
    v32 = *((_QWORD *)v38 + 4);
    LODWORD(v54) = *((_DWORD *)v38 + 5);
    LODWORD(v74) = *((_DWORD *)v38 + 4);
    v34 = *(_QWORD *)v38;
    v35 = *((_QWORD *)v38 + 1);
    v40 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    swift_bridgeObjectRetain();
    v40(v46, v44);
    v41 = v12;
    v24 = v69;
    v42 = v13;
    v23 = v63;
    result = sub_23A980B18(v45, v47, v41, v42);
    v29 = v65;
    v28 = v67;
    v27 = v71;
    v26 = v73;
  }
  v43 = (char *)v59 + v60[8];
  *(_QWORD *)v43 = v34;
  *((_QWORD *)v43 + 1) = v35;
  *((_DWORD *)v43 + 4) = v74;
  *((_DWORD *)v43 + 5) = v54;
  *((_QWORD *)v43 + 3) = v33;
  *((_QWORD *)v43 + 4) = v32;
  *((_DWORD *)v43 + 10) = v75;
  *((_DWORD *)v43 + 11) = v55;
  *((_QWORD *)v43 + 6) = v31;
  *((_QWORD *)v43 + 7) = v30;
  *((_DWORD *)v43 + 16) = v23;
  *((_DWORD *)v43 + 17) = v56;
  *((_QWORD *)v43 + 9) = v29;
  *((_QWORD *)v43 + 10) = v28;
  *((_DWORD *)v43 + 22) = v24;
  *((_DWORD *)v43 + 23) = v58;
  *((_QWORD *)v43 + 12) = v27;
  *((_QWORD *)v43 + 13) = v26;
  *((_QWORD *)v43 + 14) = v14;
  *(_QWORD *)((char *)v59 + v60[9]) = a7;
  return result;
}

uint64_t FMFindableObject.supportedFindingTechnologies.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;

  sub_23A964084(&qword_2569D6910);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
  *(_WORD *)(inited + 32) = *(_WORD *)(v0 + *(int *)(type metadata accessor for FMFindableObject() + 28));
  v2 = sub_23A9B26EC(inited);
  swift_setDeallocating();
  return v2;
}

id sub_23A9B2584(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_23A9B2590()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A9B25BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_23AA32E1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

id sub_23A9B25FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = v2 + *(int *)(a1 + 24);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  v7 = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(a2 + 24) = v7;
  return sub_23A9B208C(v4, v5, v6, v7);
}

uint64_t sub_23A9B2620(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;

  sub_23A964084(&qword_2569D6910);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
  *(_WORD *)(inited + 32) = *(_WORD *)(v1 + *(int *)(a1 + 28));
  v4 = sub_23A9B26EC(inited);
  swift_setDeallocating();
  return v4;
}

uint64_t sub_23A9B2690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 32);
  v4 = *(_QWORD *)(v3 + 112);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(v3 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v3 + 40);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(v3 + 48);
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(v3 + 64);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v3 + 72);
  *(_QWORD *)(a2 + 88) = *(_QWORD *)(v3 + 88);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v3 + 96);
  *(_QWORD *)(a2 + 112) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9B26EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  _BOOL4 v18;
  int v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23A964084(&qword_2569D69B8);
    v3 = sub_23AA334F4();
    v4 = 0;
    v5 = v3 + 56;
    while (1)
    {
      v6 = *(__int16 *)(a1 + 32 + 2 * v4);
      sub_23AA337D0();
      sub_23AA337DC();
      if (v6 < 0)
      {
        sub_23AA337E8();
        sub_23AA337DC();
      }
      else
      {
        sub_23AA337DC();
        sub_23AA337E8();
      }
      result = sub_23AA33800();
      v8 = ~(-1 << *(_BYTE *)(v3 + 32));
      v9 = result & v8;
      v10 = (result & (unint64_t)v8) >> 6;
      v11 = *(_QWORD *)(v5 + 8 * v10);
      v12 = 1 << (result & v8);
      v13 = *(_QWORD *)(v3 + 48);
      if ((v12 & v11) != 0)
      {
        do
        {
          v17 = *(__int16 *)(v13 + 2 * v9);
          if (v17 < 0)
          {
            if (v6 < 0)
            {
              v18 = (v17 & 1) == 0;
              v19 = ((unsigned __int16)v17 ^ (unsigned __int16)v6) & 0x7F00;
              if ((v6 & 1) != v18 && v19 == 0)
                goto LABEL_3;
            }
          }
          else if ((v6 & 0x80000000) == 0
                 && v17 == v6
                 && ((((v17 & 0x100) == 0) ^ ((unsigned __int16)(v6 & 0x100) >> 8)) & 1) != 0)
          {
            goto LABEL_3;
          }
          v9 = (v9 + 1) & v8;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
        }
        while ((v11 & (1 << v9)) != 0);
      }
      *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
      *(_WORD *)(v13 + 2 * v9) = v6;
      v14 = *(_QWORD *)(v3 + 16);
      v15 = __OFADD__(v14, 1);
      v16 = v14 + 1;
      if (v15)
        break;
      *(_QWORD *)(v3 + 16) = v16;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMFindableObject(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23AA32E1C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(id *)v15;
    v17 = *((_QWORD *)v15 + 1);
    v18 = *((_QWORD *)v15 + 2);
    LOBYTE(v11) = v15[24];
    sub_23A9B208C(*(id *)v15, v17, v18, v11);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    *((_QWORD *)v14 + 2) = v18;
    v14[24] = v11;
    v19 = a3[8];
    *(_WORD *)((char *)v4 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
    *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
    *((_QWORD *)v20 + 9) = *((_QWORD *)v21 + 9);
    *((_OWORD *)v20 + 5) = *((_OWORD *)v21 + 5);
    v22 = *((_QWORD *)v21 + 13);
    *((_QWORD *)v20 + 12) = *((_QWORD *)v21 + 12);
    *((_QWORD *)v20 + 13) = v22;
    *((_QWORD *)v20 + 14) = *((_QWORD *)v21 + 14);
    v23 = a3[9];
    v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = (uint64_t)v24;
    swift_bridgeObjectRetain();
    v25 = v24;
  }
  return v4;
}

void destroy for FMFindableObject(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23AA32E1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_23A980B18(*(void **)(a1 + a2[6]), *(_QWORD *)(a1 + a2[6] + 8), *(_QWORD *)(a1 + a2[6] + 16), *(_BYTE *)(a1 + a2[6] + 24));
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for FMFindableObject(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23AA32E1C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(id *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v14 + 2);
  LOBYTE(v10) = v14[24];
  sub_23A9B208C(*(id *)v14, v16, v17, v10);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  *((_QWORD *)v13 + 2) = v17;
  v13[24] = v10;
  v18 = a3[8];
  *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *((_QWORD *)v19 + 9) = *((_QWORD *)v20 + 9);
  *((_OWORD *)v19 + 5) = *((_OWORD *)v20 + 5);
  v21 = *((_QWORD *)v20 + 13);
  *((_QWORD *)v19 + 12) = *((_QWORD *)v20 + 12);
  *((_QWORD *)v19 + 13) = v21;
  *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
  v22 = a3[9];
  v23 = *(void **)((char *)a2 + v22);
  *(_QWORD *)((char *)a1 + v22) = v23;
  swift_bridgeObjectRetain();
  v24 = v23;
  return a1;
}

_QWORD *assignWithCopy for FMFindableObject(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(id *)v12;
  v14 = *((_QWORD *)v12 + 1);
  v15 = *((_QWORD *)v12 + 2);
  v16 = v12[24];
  sub_23A9B208C(*(id *)v12, v14, v15, v16);
  v17 = *(void **)v11;
  v18 = *((_QWORD *)v11 + 1);
  v19 = *((_QWORD *)v11 + 2);
  *(_QWORD *)v11 = v13;
  *((_QWORD *)v11 + 1) = v14;
  *((_QWORD *)v11 + 2) = v15;
  v20 = v11[24];
  v11[24] = v16;
  sub_23A980B18(v17, v18, v19, v20);
  *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
  *((_DWORD *)v22 + 5) = *((_DWORD *)v23 + 5);
  *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  *((_DWORD *)v22 + 10) = *((_DWORD *)v23 + 10);
  *((_DWORD *)v22 + 11) = *((_DWORD *)v23 + 11);
  *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
  *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
  *((_DWORD *)v22 + 16) = *((_DWORD *)v23 + 16);
  *((_DWORD *)v22 + 17) = *((_DWORD *)v23 + 17);
  *((_QWORD *)v22 + 9) = *((_QWORD *)v23 + 9);
  *((_QWORD *)v22 + 10) = *((_QWORD *)v23 + 10);
  *((_DWORD *)v22 + 22) = *((_DWORD *)v23 + 22);
  *((_DWORD *)v22 + 23) = *((_DWORD *)v23 + 23);
  *((_QWORD *)v22 + 12) = *((_QWORD *)v23 + 12);
  *((_QWORD *)v22 + 13) = *((_QWORD *)v23 + 13);
  *((_QWORD *)v22 + 14) = *((_QWORD *)v23 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = *(void **)((char *)a2 + v24);
  v26 = *(void **)((char *)a1 + v24);
  *(_QWORD *)((char *)a1 + v24) = v25;
  v27 = v25;

  return a1;
}

_OWORD *initializeWithTake for FMFindableObject(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_OWORD *)((char *)a1 + v10);
  v13 = (_OWORD *)((char *)a2 + v10);
  *v12 = *v13;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v13 + 9);
  *(_WORD *)((char *)a1 + v11) = *(_WORD *)((char *)a2 + v11);
  v14 = a3[8];
  v15 = a3[9];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  *((_QWORD *)v16 + 14) = *((_QWORD *)v17 + 14);
  v20 = *((_OWORD *)v17 + 6);
  v21 = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 6) = v20;
  *((_OWORD *)v16 + 4) = v21;
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  return a1;
}

_QWORD *assignWithTake for FMFindableObject(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *((_QWORD *)v13 + 2);
  v15 = v13[24];
  v16 = *(void **)v12;
  v17 = *((_QWORD *)v12 + 1);
  v18 = *((_QWORD *)v12 + 2);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = v14;
  v19 = v12[24];
  v12[24] = v15;
  sub_23A980B18(v16, v17, v18, v19);
  v20 = a3[8];
  *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
  *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
  *((_OWORD *)v21 + 3) = *((_OWORD *)v22 + 3);
  *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
  *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
  *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
  *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
  *((_QWORD *)v21 + 14) = *((_QWORD *)v22 + 14);
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = *(void **)((char *)a1 + v23);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);

  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindableObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A9B2F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23AA32E1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FMFindableObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A9B2FF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23AA32E1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23A9B306C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23A9B310C(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t result;

  v3 = objc_msgSend(v1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_fontDescriptorWithSymbolicTraits_, a1);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v4, 0.0);

    return (uint64_t)v5;
  }
  else
  {
    sub_23AA33500();
    sub_23AA33038();
    type metadata accessor for SymbolicTraits(0);
    sub_23AA33590();
    result = sub_23AA335A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23A9B324C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_23A9B3254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_23A9B325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_23A9B3264(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a6 + 88))(a1, a2 & 1);
}

uint64_t sub_23A9B3270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_23A9B3278(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A9B32B0 + 4 * byte_23AA37AE0[a1]))(0xD000000000000018, 0x800000023AA3AE10);
}

uint64_t sub_23A9B3340()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23A9B3278(v1);
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A9B33A0()
{
  unsigned __int8 *v0;

  sub_23A9B3278(*v0);
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9B33E0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23A9B3278(v1);
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A9B343C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A9B3764();
  *a1 = result;
  return result;
}

uint64_t sub_23A9B3468@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A9B3278(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23A9B3490(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23A9B3278(*a1);
  v5 = v4;
  if (v3 == sub_23A9B3278(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t getEnumTagSinglePayload for FMPFViewState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFViewState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23A9B35F4 + 4 * byte_23AA37AEF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23A9B3628 + 4 * byte_23AA37AEA[v4]))();
}

uint64_t sub_23A9B3628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B3630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9B3638);
  return result;
}

uint64_t sub_23A9B3644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9B364CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23A9B3650(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B3658(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMPFViewState()
{
  return &type metadata for FMPFViewState;
}

uint64_t sub_23A9B3674()
{
  sub_23A9B37AC();
  return sub_23AA33080();
}

uint64_t sub_23A9B36D0()
{
  sub_23A9B37AC();
  return sub_23AA33068();
}

unint64_t sub_23A9B3720()
{
  unint64_t result;

  result = qword_2569D69C0;
  if (!qword_2569D69C0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37B70, &type metadata for FMPFViewState);
    atomic_store(result, (unint64_t *)&qword_2569D69C0);
  }
  return result;
}

uint64_t sub_23A9B3764()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

unint64_t sub_23A9B37AC()
{
  unint64_t result;

  result = qword_2569D69C8;
  if (!qword_2569D69C8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37B98, &type metadata for FMPFViewState);
    atomic_store(result, (unint64_t *)&qword_2569D69C8);
  }
  return result;
}

void sub_23A9B37F0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  id v9;
  id v10;

  v5 = v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
  if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate))
  {
    v6 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v6 + 8))(a1, a2, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  v8 = objc_msgSend(a2, sel_capturedImage);
  v9 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView), sel_scene);
  v10 = objc_msgSend(v9, sel_background);

  sub_23A9AD174(v8, v10);
}

void sub_23A9B3BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_23AA32F30();
  v21 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v21 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v9, sel_setIdleTimerDisabled_, 1);

  if (*(_QWORD *)(v1 + 16))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  v10 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_23A9B4270;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23A9C4DBC;
  aBlock[3] = (uint64_t)&unk_250BC1D68;
  _Block_copy(aBlock);
  v22 = MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v11 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + 16) = v11;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v12 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 180.0);
  v13 = *(void (**)(char *, uint64_t))(v21 + 8);
  v13(v5, v2);
  sub_23AA3326C();

  v13(v7, v2);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v14 = sub_23AA32EA0();
  sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
  swift_retain_n();
  v15 = sub_23AA32E88();
  v16 = sub_23AA33218();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v1;
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    type metadata accessor for FMFindingSleepPreventer();
    swift_retain();
    v19 = sub_23AA32FFC();
    v22 = sub_23A964DBC(v19, v20, aBlock);
    sub_23AA333F8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v15, v16, "ðŸ§­ FMItemDetailContentViewController%s: disabling sleeping timer", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v18, -1, -1);
    MEMORY[0x23B85DB24](v17, -1, -1);
    swift_release();

  }
  else
  {

    swift_release_n();
    swift_release();
  }
}

void sub_23A9B3FEC()
{
  id v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    objc_msgSend(v0, sel_setIdleTimerDisabled_, 0);

    if (qword_2569D4AC0 != -1)
      swift_once();
    v1 = sub_23AA32EA0();
    sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
    swift_retain_n();
    v2 = sub_23AA32E88();
    v3 = sub_23AA33218();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v8 = v5;
      *(_DWORD *)v4 = 136315138;
      type metadata accessor for FMFindingSleepPreventer();
      swift_retain();
      v6 = sub_23AA32FFC();
      sub_23A964DBC(v6, v7, &v8);
      sub_23AA333F8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v2, v3, "ðŸ§­ FMItemDetailContentViewController%s: re-enabling sleeping timer", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v5, -1, -1);
      MEMORY[0x23B85DB24](v4, -1, -1);
      swift_release();

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_23A9B4208()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFindingSleepPreventer()
{
  return objc_opt_self();
}

uint64_t sub_23A9B424C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_23A9B4270()
{
  sub_23A9B3FEC();
}

uint64_t sub_23A9B4278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9B4288()
{
  return swift_release();
}

BOOL FMFindingProductType.isPerson.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 24) == 1;
}

BOOL FMFindingProductType.isAirPods.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 24) == 0;
}

uint64_t sub_23A9B42B0()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_23AA33338();
  v2 = v1;
  v19 = HIDWORD(v1);
  v20 = v3;
  v4 = sub_23AA33338();
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v5);
  v10 = sub_23AA33338();
  v12 = v11;
  v14 = v13;
  v15 = HIDWORD(v11);
  result = sub_23AA33338();
  *(_QWORD *)&xmmword_2569D6AF8 = 60;
  *((_QWORD *)&xmmword_2569D6AF8 + 1) = v0;
  LODWORD(qword_2569D6B08) = v2;
  HIDWORD(qword_2569D6B08) = v19;
  qword_2569D6B10 = v20;
  unk_2569D6B18 = v4;
  LODWORD(qword_2569D6B20) = v6;
  HIDWORD(qword_2569D6B20) = v9;
  *(_QWORD *)&xmmword_2569D6B28 = v8;
  *((_QWORD *)&xmmword_2569D6B28 + 1) = v10;
  LODWORD(qword_2569D6B38) = v12;
  HIDWORD(qword_2569D6B38) = v15;
  qword_2569D6B40 = v14;
  qword_2569D6B48 = result;
  qword_2569D6B50 = v17;
  *(_QWORD *)&xmmword_2569D6B58 = v18;
  *((_QWORD *)&xmmword_2569D6B58 + 1) = 0x6C75616665444D46;
  qword_2569D6B68 = 0xEE00646E756F4674;
  return result;
}

uint64_t FMDefaultFoundVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_2569D4AE8 != -1)
    swift_once();
  v2 = qword_2569D6B68;
  *(_OWORD *)a1 = xmmword_2569D6AF8;
  *(_QWORD *)(a1 + 16) = qword_2569D6B08;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2569D6B10;
  *(_QWORD *)(a1 + 40) = qword_2569D6B20;
  *(_OWORD *)(a1 + 48) = xmmword_2569D6B28;
  *(_QWORD *)(a1 + 64) = qword_2569D6B38;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_2569D6B40;
  *(_QWORD *)(a1 + 88) = qword_2569D6B50;
  *(_OWORD *)(a1 + 96) = xmmword_2569D6B58;
  *(_QWORD *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9B444C()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_23AA33338();
  v2 = v1;
  v19 = HIDWORD(v1);
  v20 = v3;
  v4 = sub_23AA33338();
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v5);
  v10 = sub_23AA33338();
  v12 = v11;
  v14 = v13;
  v15 = HIDWORD(v11);
  result = sub_23AA33338();
  *(_QWORD *)&xmmword_2569D6B70 = 60;
  *((_QWORD *)&xmmword_2569D6B70 + 1) = v0;
  LODWORD(qword_2569D6B80) = v2;
  HIDWORD(qword_2569D6B80) = v19;
  qword_2569D6B88 = v20;
  unk_2569D6B90 = v4;
  LODWORD(qword_2569D6B98) = v6;
  HIDWORD(qword_2569D6B98) = v9;
  *(_QWORD *)&xmmword_2569D6BA0 = v8;
  *((_QWORD *)&xmmword_2569D6BA0 + 1) = v10;
  LODWORD(qword_2569D6BB0) = v12;
  HIDWORD(qword_2569D6BB0) = v15;
  qword_2569D6BB8 = v14;
  qword_2569D6BC0 = result;
  qword_2569D6BC8 = v17;
  *(_QWORD *)&xmmword_2569D6BD0 = v18;
  *((_QWORD *)&xmmword_2569D6BD0 + 1) = 0xD000000000000018;
  qword_2569D6BE0 = 0x800000023AA3DB10;
  return result;
}

uint64_t FMDefaultFoundVideoInfoRedStripe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_2569D4AF0 != -1)
    swift_once();
  v2 = qword_2569D6BE0;
  *(_OWORD *)a1 = xmmword_2569D6B70;
  *(_QWORD *)(a1 + 16) = qword_2569D6B80;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2569D6B88;
  *(_QWORD *)(a1 + 40) = qword_2569D6B98;
  *(_OWORD *)(a1 + 48) = xmmword_2569D6BA0;
  *(_QWORD *)(a1 + 64) = qword_2569D6BB0;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_2569D6BB8;
  *(_QWORD *)(a1 + 88) = qword_2569D6BC8;
  *(_OWORD *)(a1 + 96) = xmmword_2569D6BD0;
  *(_QWORD *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9B45E0()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_23AA33338();
  v2 = v1;
  v19 = HIDWORD(v1);
  v20 = v3;
  v4 = sub_23AA33338();
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v5);
  v10 = sub_23AA33338();
  v12 = v11;
  v14 = v13;
  v15 = HIDWORD(v11);
  result = sub_23AA33338();
  *(_QWORD *)&xmmword_2569D6BE8 = 60;
  *((_QWORD *)&xmmword_2569D6BE8 + 1) = v0;
  LODWORD(qword_2569D6BF8) = v2;
  HIDWORD(qword_2569D6BF8) = v19;
  qword_2569D6C00 = v20;
  unk_2569D6C08 = v4;
  LODWORD(qword_2569D6C10) = v6;
  HIDWORD(qword_2569D6C10) = v9;
  *(_QWORD *)&xmmword_2569D6C18 = v8;
  *((_QWORD *)&xmmword_2569D6C18 + 1) = v10;
  LODWORD(qword_2569D6C28) = v12;
  HIDWORD(qword_2569D6C28) = v15;
  qword_2569D6C30 = v14;
  qword_2569D6C38 = result;
  qword_2569D6C40 = v17;
  *(_QWORD *)&xmmword_2569D6C48 = v18;
  *((_QWORD *)&xmmword_2569D6C48 + 1) = 0x6E756F4631524D46;
  qword_2569D6C58 = 0xEE00393833422D64;
  return result;
}

uint64_t FMR1AirTagDefaultVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_2569D4AF8 != -1)
    swift_once();
  v2 = qword_2569D6C58;
  *(_OWORD *)a1 = xmmword_2569D6BE8;
  *(_QWORD *)(a1 + 16) = qword_2569D6BF8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2569D6C00;
  *(_QWORD *)(a1 + 40) = qword_2569D6C10;
  *(_OWORD *)(a1 + 48) = xmmword_2569D6C18;
  *(_QWORD *)(a1 + 64) = qword_2569D6C28;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_2569D6C30;
  *(_QWORD *)(a1 + 88) = qword_2569D6C40;
  *(_OWORD *)(a1 + 96) = xmmword_2569D6C48;
  *(_QWORD *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9B477C()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_23AA33338();
  v2 = v1;
  v19 = HIDWORD(v1);
  v20 = v3;
  v4 = sub_23AA33338();
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v5);
  v10 = sub_23AA33338();
  v12 = v11;
  v14 = v13;
  v15 = HIDWORD(v11);
  result = sub_23AA33338();
  *(_QWORD *)&xmmword_2569D6C60 = 60;
  *((_QWORD *)&xmmword_2569D6C60 + 1) = v0;
  LODWORD(qword_2569D6C70) = v2;
  HIDWORD(qword_2569D6C70) = v19;
  qword_2569D6C78 = v20;
  unk_2569D6C80 = v4;
  LODWORD(qword_2569D6C88) = v6;
  HIDWORD(qword_2569D6C88) = v9;
  *(_QWORD *)&xmmword_2569D6C90 = v8;
  *((_QWORD *)&xmmword_2569D6C90 + 1) = v10;
  LODWORD(qword_2569D6CA0) = v12;
  HIDWORD(qword_2569D6CA0) = v15;
  qword_2569D6CA8 = v14;
  unk_2569D6CB0 = result;
  qword_2569D6CB8 = v17;
  *(_QWORD *)&xmmword_2569D6CC0 = v18;
  *((_QWORD *)&xmmword_2569D6CC0 + 1) = 0xD000000000000012;
  qword_2569D6CD0 = 0x800000023AA3DAF0;
  return result;
}

uint64_t FMR1AirTagZeusVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_2569D4B00 != -1)
    swift_once();
  v2 = qword_2569D6CD0;
  *(_OWORD *)a1 = xmmword_2569D6C60;
  *(_QWORD *)(a1 + 16) = qword_2569D6C70;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2569D6C78;
  *(_QWORD *)(a1 + 40) = qword_2569D6C88;
  *(_OWORD *)(a1 + 48) = xmmword_2569D6C90;
  *(_QWORD *)(a1 + 64) = qword_2569D6CA0;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_2569D6CA8;
  *(_QWORD *)(a1 + 88) = qword_2569D6CB8;
  *(_OWORD *)(a1 + 96) = xmmword_2569D6CC0;
  *(_QWORD *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9B4910()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_23AA33338();
  v2 = v1;
  v19 = HIDWORD(v1);
  v20 = v3;
  v4 = sub_23AA33338();
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v5);
  v10 = sub_23AA33338();
  v12 = v11;
  v14 = v13;
  v15 = HIDWORD(v11);
  result = sub_23AA33338();
  *(_QWORD *)&xmmword_2569D6CD8 = 60;
  *((_QWORD *)&xmmword_2569D6CD8 + 1) = v0;
  LODWORD(qword_2569D6CE8) = v2;
  HIDWORD(qword_2569D6CE8) = v19;
  qword_2569D6CF0 = v20;
  unk_2569D6CF8 = v4;
  LODWORD(qword_2569D6D00) = v6;
  HIDWORD(qword_2569D6D00) = v9;
  *(_QWORD *)&xmmword_2569D6D08 = v8;
  *((_QWORD *)&xmmword_2569D6D08 + 1) = v10;
  LODWORD(qword_2569D6D18) = v12;
  HIDWORD(qword_2569D6D18) = v15;
  qword_2569D6D20 = v14;
  qword_2569D6D28 = result;
  qword_2569D6D30 = v17;
  *(_QWORD *)&xmmword_2569D6D38 = v18;
  *((_QWORD *)&xmmword_2569D6D38 + 1) = 0x6E756F4631524D46;
  qword_2569D6D48 = 0xEE00373236422D64;
  return result;
}

uint64_t FMR1AirPodsVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_2569D4B08 != -1)
    swift_once();
  v2 = qword_2569D6D48;
  *(_OWORD *)a1 = xmmword_2569D6CD8;
  *(_QWORD *)(a1 + 16) = qword_2569D6CE8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2569D6CF0;
  *(_QWORD *)(a1 + 40) = qword_2569D6D00;
  *(_OWORD *)(a1 + 48) = xmmword_2569D6D08;
  *(_QWORD *)(a1 + 64) = qword_2569D6D18;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_2569D6D20;
  *(_QWORD *)(a1 + 88) = qword_2569D6D30;
  *(_OWORD *)(a1 + 96) = xmmword_2569D6D38;
  *(_QWORD *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

BOOL FMFindingProductType.isDevice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24) >= 2u && (*(_QWORD *)(v0 + 8) | *(_QWORD *)(v0 + 16) | *(_QWORD *)v0) != 0;
}

BOOL static FMFindingPartType.< infix(_:_:)(char *a1, char *a2)
{
  return flt_23AA3803C[*a1] < flt_23AA3803C[*a2];
}

BOOL static FMFindingPartType.isEqualSortOrder(lhs:rhs:)(char *a1, char *a2)
{
  return flt_23AA3803C[*a1] == flt_23AA3803C[*a2];
}

FMFindingUI::FMFindingPartType_optional __swiftcall FMFindingPartType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFindingUI::FMFindingPartType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23AA33608();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FMFindingPartType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A9B4BB0 + 4 * byte_23AA37C50[*v0]))(0x6F6C61646E617473, 0xEA0000000000656ELL);
}

uint64_t sub_23A9B4BB0()
{
  return 1702060387;
}

uint64_t sub_23A9B4BC0()
{
  return 0x6475427466656CLL;
}

uint64_t sub_23A9B4BD8()
{
  return 0x6475427468676972;
}

uint64_t sub_23A9B4BF0()
{
  return 0x636972656E6567;
}

void sub_23A9B4C08(char *a1)
{
  sub_23AA15604(*a1);
}

void sub_23A9B4C14()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23AA337D0();
  __asm { BR              X9 }
}

uint64_t sub_23A9B4C64()
{
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

void sub_23A9B4CE4()
{
  __asm { BR              X10 }
}

uint64_t sub_23A9B4D24()
{
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

void sub_23A9B4D90()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23AA337D0();
  __asm { BR              X9 }
}

uint64_t sub_23A9B4DDC()
{
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

FMFindingUI::FMFindingPartType_optional sub_23A9B4E5C(Swift::String *a1)
{
  return FMFindingPartType.init(rawValue:)(*a1);
}

uint64_t sub_23A9B4E68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23A9B4E9C + 4 * byte_23AA37C64[*v0]))();
}

void sub_23A9B4E9C(_QWORD *a1@<X8>)
{
  *a1 = 1702060387;
  a1[1] = 0xE400000000000000;
}

void sub_23A9B4EB0(_QWORD *a1@<X8>)
{
  *a1 = 0x6475427466656CLL;
  a1[1] = 0xE700000000000000;
}

void sub_23A9B4ECC(_QWORD *a1@<X8>)
{
  *a1 = 0x6475427468676972;
  a1[1] = 0xE800000000000000;
}

void sub_23A9B4EE8(_QWORD *a1@<X8>)
{
  *a1 = 0x636972656E6567;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_23A9B4F04()
{
  sub_23A9B6120();
  return sub_23AA33080();
}

uint64_t sub_23A9B4F60()
{
  sub_23A9B6120();
  return sub_23AA33068();
}

BOOL sub_23A9B4FAC(char *a1, char *a2)
{
  return flt_23AA3803C[*a1] < flt_23AA3803C[*a2];
}

BOOL sub_23A9B4FD0(char *a1, char *a2)
{
  return flt_23AA3803C[*a2] >= flt_23AA3803C[*a1];
}

BOOL sub_23A9B4FF4(char *a1, char *a2)
{
  return flt_23AA3803C[*a1] >= flt_23AA3803C[*a2];
}

BOOL sub_23A9B5018(char *a1, char *a2)
{
  return flt_23AA3803C[*a2] < flt_23AA3803C[*a1];
}

uint64_t FMFindingPartInfo.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFindingPartInfo.symbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FMFindingPartInfo.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

void __swiftcall FMFindingPartInfo.init(name:symbol:type:)(FMFindingUI::FMFindingPartInfo *__return_ptr retstr, Swift::String name, Swift::String_optional symbol, FMFindingUI::FMFindingPartType type)
{
  FMFindingUI::FMFindingPartType v4;

  v4 = *(_BYTE *)type;
  retstr->name = name;
  retstr->symbol = symbol;
  retstr->type = v4;
}

void FMFindingPartInfo.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_23AA33500();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  __asm { BR              X9 }
}

uint64_t sub_23A9B51CC()
{
  uint64_t v1;

  sub_23AA33038();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23A9B5258()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6F626D7973;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_23A9B52A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A9B5FF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A9B52C4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23A9B52D0()
{
  sub_23A9B57B4();
  return sub_23AA33830();
}

uint64_t sub_23A9B52F8()
{
  sub_23A9B57B4();
  return sub_23AA3383C();
}

uint64_t FMFindingPartInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = sub_23A964084(&qword_2569D6D50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v7;
  v12 = *(unsigned __int8 *)(v1 + 32);
  sub_23A96545C(a1, a1[3]);
  sub_23A9B57B4();
  sub_23AA33818();
  v16 = 0;
  v8 = v11[3];
  sub_23AA336A4();
  if (!v8)
  {
    v9 = v12;
    v15 = 1;
    sub_23AA33698();
    v14 = v9;
    v13 = 2;
    sub_23A9B57F8();
    sub_23AA336E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FMFindingPartInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v5 = sub_23A964084(&qword_2569D6D68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A9B57B4();
  sub_23AA3380C();
  if (v2)
    return sub_23A963B3C((uint64_t)a1);
  v25 = 0;
  v9 = sub_23AA33638();
  v11 = v10;
  v21 = v9;
  v24 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23AA3362C();
  v14 = v13;
  v19 = v12;
  v22 = 2;
  sub_23A9B583C();
  swift_bridgeObjectRetain();
  v20 = v14;
  sub_23AA33674();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v23;
  v16 = v20;
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = v15;
  sub_23A963B3C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9B56CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFindingPartInfo.init(from:)(a1, a2);
}

uint64_t sub_23A9B56E0(_QWORD *a1)
{
  return FMFindingPartInfo.encode(to:)(a1);
}

void _s11FMFindingUI0A8PartInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v6 = a2[2];
  v5 = a2[3];
  v7 = *(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1];
  if (v7 || (sub_23AA33728() & 1) != 0)
  {
    if (v3)
    {
      if (v5)
      {
        v8 = v2 == v6 && v3 == v5;
        if (v8 || (sub_23AA33728() & 1) != 0)
          goto LABEL_13;
      }
    }
    else if (!v5)
    {
LABEL_13:
      sub_23AA15604(v4);
    }
  }
}

unint64_t sub_23A9B57B4()
{
  unint64_t result;

  result = qword_2569D6D58;
  if (!qword_2569D6D58)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37FE8, &type metadata for FMFindingPartInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6D58);
  }
  return result;
}

unint64_t sub_23A9B57F8()
{
  unint64_t result;

  result = qword_2569D6D60;
  if (!qword_2569D6D60)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMFindingPartType, &type metadata for FMFindingPartType);
    atomic_store(result, (unint64_t *)&qword_2569D6D60);
  }
  return result;
}

unint64_t sub_23A9B583C()
{
  unint64_t result;

  result = qword_2569D6D70;
  if (!qword_2569D6D70)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMFindingPartType, &type metadata for FMFindingPartType);
    atomic_store(result, (unint64_t *)&qword_2569D6D70);
  }
  return result;
}

unint64_t sub_23A9B5884()
{
  unint64_t result;

  result = qword_2569D6D78;
  if (!qword_2569D6D78)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMFindingPartType, &type metadata for FMFindingPartType);
    atomic_store(result, (unint64_t *)&qword_2569D6D78);
  }
  return result;
}

uint64_t dispatch thunk of FMFindable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FMFindable.findingIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FMFindable.findingProductType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMFindable.supportedFindingTechnologies.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FMFindable.videoInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FMEnhancedFindable.findingPartInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMEnhancedFindable.findingPartType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FMNIFindable.discoveryToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *destroy for FMFindingProductType(uint64_t a1)
{
  return sub_23A980B18(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23A9B208C(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23A9B208C(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23A980B18(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23A980B18(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingProductType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingProductType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_23A9B5AD4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23A9B5AEC(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingProductType()
{
  return &type metadata for FMFindingProductType;
}

uint64_t storeEnumTagSinglePayload for FMFindingPartType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A9B5B64 + 4 * byte_23AA37C73[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A9B5B98 + 4 * byte_23AA37C6E[v4]))();
}

uint64_t sub_23A9B5B98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B5BA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9B5BA8);
  return result;
}

uint64_t sub_23A9B5BB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9B5BBCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A9B5BC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B5BC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingPartType()
{
  return &type metadata for FMFindingPartType;
}

uint64_t destroy for FMFindingPartInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingPartInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingPartInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingPartInfo()
{
  return &type metadata for FMFindingPartInfo;
}

uint64_t getEnumTagSinglePayload for FMExperienceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingPartInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A9B5E9C + 4 * byte_23AA37C7D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A9B5ED0 + 4 * byte_23AA37C78[v4]))();
}

uint64_t sub_23A9B5ED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B5ED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9B5EE0);
  return result;
}

uint64_t sub_23A9B5EEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9B5EF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A9B5EF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B5F00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingPartInfo.CodingKeys()
{
  return &type metadata for FMFindingPartInfo.CodingKeys;
}

unint64_t sub_23A9B5F20()
{
  unint64_t result;

  result = qword_2569D6D80;
  if (!qword_2569D6D80)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37FC0, &type metadata for FMFindingPartInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6D80);
  }
  return result;
}

unint64_t sub_23A9B5F68()
{
  unint64_t result;

  result = qword_2569D6D88;
  if (!qword_2569D6D88)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37F30, &type metadata for FMFindingPartInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6D88);
  }
  return result;
}

unint64_t sub_23A9B5FB0()
{
  unint64_t result;

  result = qword_2569D6D90;
  if (!qword_2569D6D90)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37F58, &type metadata for FMFindingPartInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D6D90);
  }
  return result;
}

uint64_t sub_23A9B5FF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23A9B6120()
{
  unint64_t result;

  result = qword_2569D6D98;
  if (!qword_2569D6D98)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMFindingPartType, &type metadata for FMFindingPartType);
    atomic_store(result, (unint64_t *)&qword_2569D6D98);
  }
  return result;
}

uint64_t sub_23A9B6168(double a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = sub_23AA32ED0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32F00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate];
  if (MEMORY[0x23B85DBF0](&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate]))
  {
    v12 = *((_QWORD *)v11 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 72))(v1, ObjectType, v12, a1);
    swift_unknownObjectRelease();
  }
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  *(double *)(v14 + 24) = a1;
  v15 = (void *)objc_opt_self();
  v16 = v1;
  if (objc_msgSend(v15, sel_isMainThread))
  {
    sub_23A9B6420((uint64_t)v16, a1);
    return swift_release();
  }
  else
  {
    sub_23A9731D4();
    v22 = sub_23AA33290();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_23A9B6780;
    *(_QWORD *)(v18 + 24) = v14;
    aBlock[4] = sub_23A968410;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC2190;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    v20 = (void *)v22;
    MEMORY[0x23B85CE40](0, v10, v6, v19);
    _Block_release(v19);
    swift_release();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

float sub_23A9B6420(uint64_t a1, double a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double v13;
  uint64_t v14;
  double *v15;
  double v16;
  uint64_t v17;
  double *v18;
  double v19;
  uint64_t v20;
  double *v21;
  double v22;
  float v23;
  float *v24;
  float v25;
  float v26;
  float result;

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings);
  sub_23A982B4C(a2);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v6 = v4[1];
  sub_23A982B4C(a2);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v7 = v4[2];
  sub_23A982B4C(a2);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring);
  sub_23A982B4C(a2);
  *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v9 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring);
  sub_23A982B4C(a2);
  *(_BYTE *)(v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v11 = *v4;
  v12 = (double *)(*v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v12[35] + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v12 + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v11+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v13 = *v12 + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  else
    v13 = v12[35] + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v14 = v4[1];
  v15 = (double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v15[35] + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v15 + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v14+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v16 = *v15 + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  else
    v16 = v15[35] + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v17 = v4[2];
  v18 = (double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v18[35] + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v18 + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v17+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v19 = *v18 + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  else
    v19 = v18[35] + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v20 = *(_QWORD *)(a1 + v9);
  v21 = (double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  v22 = *v21 + *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  if (vabdd_f64(v21[35] + *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v22) <= *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v22 = v21[35] + *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v23 = v13;
  v24 = (float *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerParameters);
  v25 = v16;
  *v24 = v23;
  v24[1] = v25;
  v26 = v19;
  result = v22;
  v24[2] = v26;
  v24[3] = result;
  return result;
}

uint64_t sub_23A9B6690(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 0);
}

uint64_t sub_23A9B6698(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 1);
}

uint64_t sub_23A9B66A0(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 2);
}

uint64_t sub_23A9B66A8(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 3);
}

uint64_t sub_23A9B66B0(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 4);
}

uint64_t sub_23A9B66B8(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 5);
}

uint64_t sub_23A9B66C0(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 6);
}

uint64_t sub_23A9B66C8(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 7);
}

uint64_t sub_23A9B66D0(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 8);
}

uint64_t sub_23A9B66D8(uint64_t a1, uint64_t a2)
{
  return sub_23A9B66E0(a1, a2, 9);
}

uint64_t sub_23A9B66E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = v3 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
  result = MEMORY[0x23B85DBF0](v3 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate);
  if (result)
  {
    v7 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 96))(v3, a3, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23A9B675C()
{
  uint64_t v0;

  return swift_deallocObject();
}

float sub_23A9B6780()
{
  uint64_t v0;

  return sub_23A9B6420(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_23A9B678C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9B67B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9B67C0()
{
  return swift_release();
}

void sub_23A9B67C8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23A9B6814()
{
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

void sub_23A9B68BC(uint64_t a1, char a2)
{
  sub_23AA337D0();
  __asm { BR              X10 }
}

uint64_t sub_23A9B6914()
{
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

unint64_t sub_23A9B69D0(uint64_t a1)
{
  return sub_23A9B6A08(a1, &qword_2569D6E28, &qword_2569D6E30, (uint64_t (*)(uint64_t))sub_23AA1D1D0);
}

unint64_t sub_23A9B69EC(uint64_t a1)
{
  return sub_23A9B6A08(a1, &qword_2569D6E48, &qword_2569D6E50, (uint64_t (*)(uint64_t))sub_23AA1D1D0);
}

unint64_t sub_23A9B6A08(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23A964084(a2);
  v7 = sub_23AA335E4();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23A968378(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_23A9ABA4C(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A9B6B30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = sub_23A964084(&qword_2569D6E68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23A964084(qword_2569D5DA0);
  v6 = sub_23AA335E4();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23A968378(v12, (uint64_t)v5, &qword_2569D6E68);
    result = sub_23AA1D250((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23AA32E1C();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_23A963B98(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A9B6CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[2];

  v2 = sub_23A964084(&qword_2569D6E60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23A964084(&qword_2569D5D18);
  v6 = sub_23AA335E4();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v30[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23A968378(v12, (uint64_t)v5, &qword_2569D6E60);
    result = sub_23AA1D250((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23AA32E1C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 104 * v16;
    v20 = v9[100];
    v21 = *((_DWORD *)v9 + 24);
    v22 = *((_OWORD *)v9 + 1);
    v23 = *((_OWORD *)v9 + 2);
    v24 = *((_OWORD *)v9 + 3);
    v25 = *((_OWORD *)v9 + 4);
    v26 = *((_OWORD *)v9 + 5);
    *(_OWORD *)v19 = *(_OWORD *)v9;
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)(v19 + 32) = v23;
    *(_OWORD *)(v19 + 48) = v24;
    *(_OWORD *)(v19 + 64) = v25;
    *(_OWORD *)(v19 + 80) = v26;
    *(_DWORD *)(v19 + 96) = v21;
    *(_BYTE *)(v19 + 100) = v20;
    v27 = v7[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_11;
    v7[2] = v29;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A9B6E90(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23A964084(&qword_2569D6E58);
  v2 = (_QWORD *)sub_23AA335E4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_23AA1D31C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A9B6FA8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t result;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29[6];
  int v30;
  char v31;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_10;
  }
  sub_23A964084(&qword_2569D5D10);
  v2 = (_QWORD *)sub_23AA335E4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = v3 - 1;
  for (i = 32; ; i += 144)
  {
    v6 = *(_OWORD *)(a1 + i + 112);
    *(_OWORD *)v27 = *(_OWORD *)(a1 + i + 96);
    *(_OWORD *)&v27[16] = v6;
    v7 = *(_OWORD *)(a1 + i + 128);
    v8 = *(_OWORD *)(a1 + i + 16);
    v21 = *(_OWORD *)(a1 + i);
    v22 = v8;
    v9 = *(_OWORD *)(a1 + i + 48);
    v23 = *(_OWORD *)(a1 + i + 32);
    v24 = v9;
    v10 = *(_OWORD *)(a1 + i + 80);
    v25 = *(_OWORD *)(a1 + i + 64);
    v26 = v10;
    v28 = v7;
    v29[0] = v21;
    v29[1] = v22;
    v29[2] = v23;
    v29[3] = v9;
    v29[4] = v25;
    v29[5] = v10;
    v31 = v27[4];
    v30 = *(_DWORD *)v27;
    sub_23A9B7FD8((uint64_t)&v21);
    result = sub_23AA1CFF0(v29);
    if ((v12 & 1) != 0)
      break;
    v13 = result;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    result = sub_23A963B5C(v29, v2[6] + 104 * result);
    v14 = v2[7] + 40 * v13;
    v15 = *(_QWORD *)&v27[24];
    v16 = v28;
    v17 = *((_QWORD *)&v28 + 1);
    *(_OWORD *)v14 = *(_OWORD *)&v27[8];
    *(_QWORD *)(v14 + 16) = v15;
    *(_DWORD *)(v14 + 24) = v16;
    *(_QWORD *)(v14 + 32) = v17;
    v18 = v2[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_12;
    v2[2] = v20;
    if (!v4)
    {
      swift_release();
      goto LABEL_10;
    }
    --v4;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_23A9B7140(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23A964084(&qword_2569D6E38);
  v2 = sub_23AA335E4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23A968378(v6, (uint64_t)&v15, &qword_2569D6E40);
    v7 = v15;
    v8 = v16;
    result = sub_23AA1D31C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23A9ABA4C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

FMFindingUI::FinishReasons_optional __swiftcall FinishReasons.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFindingUI::FinishReasons_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23AA33608();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FinishReasons.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A9B7308 + 4 * byte_23AA3807E[*v0]))(0x76616E755F627775, 0xEF656C62616C6961);
}

unint64_t sub_23A9B7308()
{
  return 0xD000000000000012;
}

void sub_23A9B737C()
{
  JUMPOUT(0x23A9B7390);
}

void sub_23A9B739C(char *a1)
{
  sub_23AA152CC(*a1);
}

void sub_23A9B73A8()
{
  char *v0;

  sub_23A9B68BC(0, *v0);
}

void sub_23A9B73B4(uint64_t a1)
{
  char *v1;

  sub_23A9B67C8(a1, *v1);
}

void sub_23A9B73BC(uint64_t a1)
{
  char *v1;

  sub_23A9B68BC(a1, *v1);
}

FMFindingUI::FinishReasons_optional sub_23A9B73C4(Swift::String *a1)
{
  return FinishReasons.init(rawValue:)(*a1);
}

uint64_t sub_23A9B73D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FinishReasons.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23A9B73F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  double v13;
  double v14;
  void (*v15)(_BYTE *, uint64_t);
  uint64_t inited;
  id v17;
  void *v18;
  id v19;
  _BYTE v20[16];

  v1 = v0;
  v2 = sub_23AA32E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23AA32DC8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v20[-v11];
  sub_23AA32DB0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_startTime, v6);
  sub_23AA32D80();
  v14 = v13;
  v15 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  sub_23A964084(&qword_2569D6DA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA381E0;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x800000023AA3DB30;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_instanceIdentifier, v2);
  sub_23AA32DE0();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v17 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v18 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_initWithString_, v18);

  *(_QWORD *)(inited + 48) = v19;
  *(_QWORD *)(inited + 56) = 0x756F635F676E6970;
  *(_QWORD *)(inited + 64) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_pingCount));
  *(_QWORD *)(inited + 80) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v14);
  *(_QWORD *)(inited + 104) = 0x736165725F646E65;
  *(_QWORD *)(inited + 112) = 0xEA00000000006E6FLL;
  __asm { BR              X10 }
}

void sub_23A9B7694()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;

  v9 = objc_allocWithZone(*(Class *)(v2 + 1992));
  v10 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, *(SEL *)(v7 + 3448), v10);

  v1[15] = v11;
  v1[16] = v4 - 1;
  v1[17] = 0x800000023AA3DB50;
  v1[18] = objc_msgSend(objc_allocWithZone(*(Class *)(v3 + 1760)), *(SEL *)(v6 + 3456), *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_floorAlertCount));
  v1[19] = v4 + 6;
  v1[20] = 0x800000023AA3DB70;
  v1[21] = objc_msgSend(objc_allocWithZone(*(Class *)(v3 + 1760)), *(SEL *)(v6 + 3456), *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_movingPhoneAlertCount));
  v1[22] = v4 + 7;
  v1[23] = 0x800000023AA3DB90;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen + 8))
    v12 = -1.0;
  else
    v12 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen);
  v1[24] = objc_msgSend(objc_allocWithZone(*(Class *)(v3 + 1760)), *(SEL *)(v5 + 3464), v12);
  sub_23A9B6E90((uint64_t)v1);
  if (qword_2569D4AB0 != -1)
    swift_once();
  v13 = sub_23AA32EA0();
  sub_23A9620E8(v13, (uint64_t)qword_2569E0010);
  swift_bridgeObjectRetain_n();
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)(v8 - 312) = v17;
    *(_DWORD *)v16 = 136315138;
    sub_23A9B7A4C();
    swift_bridgeObjectRetain();
    v18 = sub_23AA32F90();
    v20 = v19;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 - 320) = sub_23A964DBC(v18, v20, (uint64_t *)(v8 - 312));
    sub_23AA333F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v14, v15, "Payload: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v17, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v21 = (void *)sub_23AA32FB4();
  sub_23A9B7A4C();
  v22 = (void *)sub_23AA32F78();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

}

unint64_t sub_23A9B7A4C()
{
  unint64_t result;

  result = qword_2569D6DE0;
  if (!qword_2569D6DE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D6DE0);
  }
  return result;
}

_QWORD *sub_23A9B7A88()
{
  return sub_23A9B7AAC(&OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_pingCount);
}

_QWORD *sub_23A9B7A94()
{
  return sub_23A9B7AAC(&OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_floorAlertCount);
}

_QWORD *sub_23A9B7AA0()
{
  return sub_23A9B7AAC(&OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_movingPhoneAlertCount);
}

_QWORD *sub_23A9B7AAC(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + *result);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v1 + *result) = v4;
  return result;
}

void sub_23A9B7AC8(double a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen + 8) == 1)
  {
    *(double *)v2 = a1;
    *(_BYTE *)(v2 + 8) = 0;
  }
}

_BYTE *sub_23A9B7AEC(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_finishReason) = *result;
  return result;
}

id FMFindingWatchMetrics.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FMFindingWatchMetrics.init()()
{
  void *v0;
  _BYTE *v1;
  char *v2;
  objc_super v4;

  v1 = v0;
  sub_23AA32E10();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_pingCount] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_floorAlertCount] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_movingPhoneAlertCount] = 0;
  sub_23AA32DB0();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_finishReason] = 0;
  v2 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for FMFindingWatchMetrics();
  return objc_msgSendSuper2(&v4, sel_init);
}

id FMFindingWatchMetrics.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingWatchMetrics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingWatchMetrics()
{
  uint64_t result;

  result = qword_2569D6E18;
  if (!qword_2569D6E18)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23A9B7CD0()
{
  unint64_t result;

  result = qword_2569D6DE8;
  if (!qword_2569D6DE8)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FinishReasons, &type metadata for FinishReasons);
    atomic_store(result, (unint64_t *)&qword_2569D6DE8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FinishReasons(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FinishReasons(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23A9B7DF0 + 4 * byte_23AA38091[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23A9B7E24 + 4 * byte_23AA3808C[v4]))();
}

uint64_t sub_23A9B7E24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B7E2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9B7E34);
  return result;
}

uint64_t sub_23A9B7E40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9B7E48);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23A9B7E4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9B7E54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinishReasons()
{
  return &type metadata for FinishReasons;
}

uint64_t sub_23A9B7E70()
{
  return type metadata accessor for FMFindingWatchMetrics();
}

uint64_t sub_23A9B7E78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    result = sub_23AA32DC8();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMFindingWatchMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.recordEvent()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.incrementPingCount()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.incrementFloorAlertCount()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.incrementMovingPhoneAlertCount()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.setFirstDistanceRangeSeen(distance:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.setFinishReason(newFinishReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t sub_23A9B7FD8(uint64_t a1)
{
  sub_23A963BDC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_DWORD *)(a1 + 96));
  return a1;
}

double sub_23A9B8038()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.6);

  result = 0.5;
  xmmword_2569D6E70 = xmmword_23AA381F0;
  qword_2569D6E80 = 0x3FC41B2F769CF0E0;
  qword_2569D6E88 = (uint64_t)v1;
  return result;
}

id sub_23A9B80C4(uint64_t a1, char a2, double a3, double a4, double a5)
{
  char *v5;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  double *v16;
  double v17;
  double v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  CGAffineTransform v35;
  objc_super v36;

  v11 = &v5[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style];
  v12 = qword_2569D4B10;
  v13 = v5;
  if (v12 != -1)
    swift_once();
  v14 = qword_2569D6E80;
  v15 = (void *)qword_2569D6E88;
  *(_OWORD *)v11 = xmmword_2569D6E70;
  *((_QWORD *)v11 + 2) = v14;
  *((_QWORD *)v11 + 3) = v15;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle] = 0;
  v16 = (double *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_sceneSize];
  *v16 = a3;
  v16[1] = a4;
  v17 = *(double *)&a1;
  if ((a2 & 1) != 0)
    v17 = 0.0;
  *(double *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_verticalOffset] = v17;
  if (a4 >= a3)
    v18 = a3;
  else
    v18 = a4;
  *(double *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_diskRadius] = v18 * 0.5 * a5;
  v19 = v15;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring] = sub_23A9CCF6C(0, 0, 0x3FA015BF9217271ALL, 0, 0, 1);
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring] = sub_23A9CCF6C(0, 0, 0x3FA015BF9217271ALL, 0, 0, 1);
  *(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);

  v36.receiver = v13;
  v36.super_class = (Class)type metadata accessor for FMPFRingView();
  v20 = objc_msgSendSuper2(&v36, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = (void *)objc_opt_self();
  v22 = v20;
  v23 = objc_msgSend(v21, sel_clearColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  CGAffineTransformMakeRotation(&v35, -1.57079633);
  objc_msgSend(v22, sel_setTransform_, &v35);
  if (qword_2569D4AB0 != -1)
    swift_once();
  v24 = sub_23AA32EA0();
  sub_23A9620E8(v24, (uint64_t)qword_2569E0010);
  v25 = v22;
  v26 = sub_23AA32E88();
  v27 = sub_23AA33218();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    *(_QWORD *)&v35.a = v29;
    *(_DWORD *)v28 = 136315138;
    v30 = objc_msgSend(v25, sel_description);
    v31 = sub_23AA32FD8();
    v33 = v32;

    sub_23A964DBC(v31, v33, (uint64_t *)&v35);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v26, v27, "ðŸ§­ FMPFRingView%s: init", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v29, -1, -1);
    MEMORY[0x23B85DB24](v28, -1, -1);

  }
  else
  {

  }
  return v25;
}

id sub_23A9B8668()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  objc_class *v11;
  uint64_t v13;
  objc_super v14;

  if (qword_2569D4AB0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0010);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(v2, sel_description);
    v8 = sub_23AA32FD8();
    v10 = v9;

    sub_23A964DBC(v8, v10, &v13);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "ðŸ§­ FMPFRingView%s: deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v11 = (objc_class *)type metadata accessor for FMPFRingView();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

uint64_t sub_23A9B8908(double a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  void *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = sub_23AA32ED0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32F00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(double *)(v11 + 24) = a1;
  v12 = (void *)objc_opt_self();
  v13 = v1;
  if (objc_msgSend(v12, sel_isMainThread))
  {
    sub_23A9B8B84(v13, a1);
    return swift_release();
  }
  else
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v15 = (void *)sub_23AA33290();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_23A9B9858;
    *(_QWORD *)(v16 + 24) = v11;
    aBlock[4] = sub_23A9B18A8;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC2478;
    v17 = _Block_copy(aBlock);
    v20 = v4;
    v18 = v17;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v10, v6, v18);
    _Block_release(v18);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

id sub_23A9B8B84(char *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  double v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  double v18;
  uint64_t v19;
  double *v20;
  double v21;
  uint64_t v22;
  double *v23;
  double v24;

  v4 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring;
  v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring];
  if (!sub_23A9CCAA0())
  {
    sub_23A982B4C(a2);
    *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v6 = *(_QWORD *)&a1[v4];
    v7 = (double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v6+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v8 = *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    else
      v8 = v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v9 = (void *)objc_opt_self();
    objc_msgSend(v9, sel_begin);
    objc_msgSend(v9, sel_setDisableActions_, 1);
    objc_msgSend(a1, sel_setAlpha_, v8);
    objc_msgSend(v9, sel_commit);
  }
  v10 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring;
  v11 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring];
  if (!sub_23A9CCAA0() || !sub_23A9CCAA0() || !sub_23A9CCAA0())
  {
    sub_23A982B4C(a2);
    *(_BYTE *)(v11 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v12 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring;
    v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring];
    sub_23A982B4C(a2);
    *(_BYTE *)(v13 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v14 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring;
    v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring];
    sub_23A982B4C(a2);
    *(_BYTE *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v16 = *(_QWORD *)&a1[v10];
    v17 = (double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v17[35] + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v17 + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v16+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v18 = *v17 + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    else
      v18 = v17[35] + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v19 = *(_QWORD *)&a1[v12];
    v20 = (double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v20[35] + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v20 + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v19+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v21 = *v20 + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    else
      v21 = v20[35] + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v22 = *(_QWORD *)&a1[v14];
    v23 = (double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    v24 = *v23 + *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v23[35] + *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v24) <= *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
      v24 = v23[35] + *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle] = v18;
    *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle] = v21;
    *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] = v24;
  }
  return objc_msgSend(a1, sel_setNeedsDisplay);
}

uint64_t sub_23A9B8E88(uint64_t a1, char a2, char a3, double a4, double a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  char v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  void *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v11 = sub_23AA32ED0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23AA32F00();
  v16 = *(_QWORD *)(v15 - 8);
  result = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (fabs(a5) >= a4)
  {
    v29 = result;
    v30 = v12;
    v20 = a2 & 1;
    v21 = (a2 & 1) != 0;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a1;
    *(_BYTE *)(v22 + 24) = v21;
    v23 = a3 & 1;
    *(_BYTE *)(v22 + 25) = v23;
    *(_QWORD *)(v22 + 32) = v5;
    *(double *)(v22 + 40) = a4;
    *(double *)(v22 + 48) = a5;
    v24 = (void *)objc_opt_self();
    v25 = v5;
    if (objc_msgSend(v24, sel_isMainThread))
    {
      sub_23A9B9144(a1, v20, v23, v25, a4, a5);
      return swift_release();
    }
    else
    {
      sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
      v26 = (void *)sub_23AA33290();
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = sub_23A9B981C;
      *(_QWORD *)(v27 + 24) = v22;
      aBlock[4] = sub_23A9B18A8;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23A9C4DBC;
      aBlock[3] = &unk_250BC2400;
      v28 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_23AA32EE8();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_23A97324C();
      sub_23A964084((uint64_t *)&unk_2569D5D00);
      sub_23A973294();
      sub_23AA3344C();
      MEMORY[0x23B85CE40](0, v19, v14, v28);
      _Block_release(v28);
      swift_release();

      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v29);
    }
  }
  return result;
}

void sub_23A9B9144(uint64_t a1, char a2, char a3, char *a4, double a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;

  if ((a2 & 1) != 0)
    *(double *)&a1 = 0.0;
  v10 = *(_QWORD *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring];
  if ((a3 & 1) != 0)
  {
    v11 = v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v11 = a5;
    *(_BYTE *)(v11 + 8) = 0;
    sub_23A9CC9DC();
    v12 = *(_QWORD *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring]
        + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v12 = a6;
    *(_BYTE *)(v12 + 8) = 0;
    sub_23A9CC9DC();
    v13 = *(_QWORD *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring]
        + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v13 = *(double *)&a1;
    *(_BYTE *)(v13 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    sub_23A9829AC(a5);
    *(_BYTE *)(v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v14 = *(_QWORD *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring];
    sub_23A9829AC(a6);
    *(_BYTE *)(v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v15 = *(_QWORD *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring];
    v16 = sub_23A9829AC(*(double *)&a1);
    *(_BYTE *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    *(double *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle] = a5;
    *(double *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle] = a6;
    *(double *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] = *(double *)&a1;
    objc_msgSend(a4, sel_bounds, v16);
    objc_msgSend(a4, sel_drawRect_);
  }
}

uint64_t sub_23A9B92A0(uint64_t a1, char a2, char a3)
{
  void *v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v6 = a2 & 1;
  v7 = sub_23AA32ED0();
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23AA32F00();
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = v6;
  *(_BYTE *)(v13 + 25) = a3;
  *(_QWORD *)(v13 + 32) = v3;
  v14 = (void *)objc_opt_self();
  v15 = v3;
  if (objc_msgSend(v14, sel_isMainThread))
  {
    sub_23A9B9528(a1, v6, a3 & 1, v15);
    return swift_release();
  }
  else
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v17 = (void *)sub_23AA33290();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_23A9B97CC;
    *(_QWORD *)(v18 + 24) = v13;
    aBlock[4] = sub_23A968410;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC2388;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v12, v9, v19);
    _Block_release(v19);
    swift_release();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  }
}

void sub_23A9B9528(uint64_t a1, char a2, char a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v8;

  if ((a2 & 1) != 0)
    *(double *)&a1 = 0.0;
  v5 = *(_QWORD *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring];
  if ((a3 & 1) != 0)
  {
    v6 = v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v6 = *(double *)&a1;
    *(_BYTE *)(v6 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    sub_23A9829AC(*(double *)&a1);
    *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v8 = (void *)objc_opt_self();
    objc_msgSend(v8, sel_begin);
    objc_msgSend(v8, sel_setDisableActions_, 1);
    objc_msgSend(a4, sel_setAlpha_, *(double *)&a1);
    objc_msgSend(v8, sel_commit);
  }
}

uint64_t type metadata accessor for FMPFRingView()
{
  return objc_opt_self();
}

void destroy for FMPFRingViewStyle(uint64_t a1)
{

}

uint64_t initializeWithCopy for FMPFRingViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for FMPFRingViewStyle(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v3 = (void *)a2[3];
  v4 = (void *)a1[3];
  a1[3] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for FMPFRingViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFRingViewStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFRingViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFRingViewStyle()
{
  return &type metadata for FMPFRingViewStyle;
}

uint64_t sub_23A9B97A8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9B97CC()
{
  uint64_t v0;

  sub_23A9B9528(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25), *(char **)(v0 + 32));
}

uint64_t sub_23A9B97E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9B97F0()
{
  return swift_release();
}

uint64_t sub_23A9B97F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9B981C()
{
  uint64_t v0;

  sub_23A9B9144(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25), *(char **)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_23A9B9834()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9B9858()
{
  uint64_t v0;

  return sub_23A9B8B84(*(char **)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_23A9B9864()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23A9B9888()
{
  char *v0;
  double Width;
  double v2;
  double Height;
  double v4;
  double v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  id v14;
  id v15;
  CGRect v16;
  CGRect v17;

  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v16);
  v2 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_verticalOffset];
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v17);
  v4 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle];
  v5 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle];
  v6 = &v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style];
  v7 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style + 16];
  if (v7 + v7 < vabdd_f64(v4, v5))
  {
    v8 = Height * 0.5;
    v9 = Width * 0.5 - v2;
    v10 = -v7;
    if (v4 <= v5)
      v11 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style + 16];
    else
      v11 = -v7;
    if (v4 > v5)
      v10 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style + 16];
    v12 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, v4 > v5, v9, v8, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_diskRadius]* (*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] + 1.0), v10 - v4, v11 - v5);
    if (v12)
    {
      v13 = *((double *)v6 + 1);
      v15 = v12;
      objc_msgSend(v15, sel_setLineWidth_, v13);
      objc_msgSend(v15, sel_setLineCapStyle_, 1);
      objc_msgSend(*((id *)v6 + 3), sel_setStroke);
      v14 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v14, sel_setFill);

      objc_msgSend(v15, sel_stroke);
    }
  }
}

void __swiftcall FMFindingUIAVPlayerVideoInfo.init(fps:start:startLoop:endLoop:last:assetName:)(FMFindingUI::FMFindingUIAVPlayerVideoInfo *__return_ptr retstr, Swift::Int fps, CMTime start, CMTime startLoop, CMTime endLoop, CMTime last, Swift::String assetName)
{
  retstr->fps = fps;
  retstr->start = start;
  retstr->startLoop = startLoop;
  retstr->endLoop = endLoop;
  retstr->last.value = last.value;
  retstr->last.timescale = last.timescale;
  retstr->last.flags = last.flags;
  *(_OWORD *)&retstr->last.epoch = *(_OWORD *)&last.epoch;
  retstr->assetName._object = assetName._object;
}

uint64_t destroy for FMFindingUIAVPlayerVideoInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFindingUIAVPlayerVideoInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v3 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v3;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFindingUIAVPlayerVideoInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMFindingUIAVPlayerVideoInfo(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for FMFindingUIAVPlayerVideoInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingUIAVPlayerVideoInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingUIAVPlayerVideoInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingUIAVPlayerVideoInfo()
{
  return &type metadata for FMFindingUIAVPlayerVideoInfo;
}

char *sub_23A9B9D98(void *a1, double a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  id v28;
  id v29;
  id v30;
  unsigned int v31;
  id v32;
  id v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  id v39;
  id v41;
  objc_super v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = 0;
  v5 = &v2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *((_OWORD *)v5 + 6) = 0u;
  *((_QWORD *)v5 + 14) = 0;
  v6 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager;
  v7 = objc_allocWithZone(MEMORY[0x24BE90110]);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, sel_init);
  v9 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  v9[24] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver] = 0;
  v10 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem] = 0;
  v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] = 0;
  v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 0;
  v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] = 0;
  v12 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_placeholderView] = a1;
  *(double *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration] = a2;
  v15 = a1;

  v42.receiver = v8;
  v42.super_class = (Class)type metadata accessor for FMAVPlayerView();
  v16 = objc_msgSendSuper2(&v42, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = qword_2569D4AB0;
  v18 = (char *)v16;
  if (v17 != -1)
    swift_once();
  v19 = sub_23AA32EA0();
  sub_23A9620E8(v19, (uint64_t)qword_2569E0010);
  v20 = sub_23AA32E88();
  v21 = sub_23AA33218();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_23A95E000, v20, v21, "ðŸ§­ FMAVPlayerView: init", v22, 2u);
    MEMORY[0x23B85DB24](v22, -1, -1);
  }

  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_sharedInstance);
  v25 = *MEMORY[0x24BDB15A8];
  v26 = *MEMORY[0x24BDB1618];
  v41 = 0;
  v27 = objc_msgSend(v24, sel_setCategory_mode_options_error_, v25, v26, 1, &v41);

  v28 = v41;
  if (v27
    && (v29 = v41,
        v30 = objc_msgSend(v23, sel_sharedInstance),
        v41 = 0,
        v31 = objc_msgSend(v30, sel_setActive_withOptions_error_, 1, 0, &v41),
        v30,
        v28 = v41,
        v31))
  {
    v32 = v41;
  }
  else
  {
    v33 = v28;
    v34 = (void *)sub_23AA32CF0();

    swift_willThrow();
    v35 = sub_23AA32E88();
    v36 = sub_23AA33218();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_23A95E000, v35, v36, "ðŸ§­ FMAVPlayerView: failed to set the audio session", v37, 2u);
      MEMORY[0x23B85DB24](v37, -1, -1);
    }

  }
  v38 = *(void **)&v18[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager];
  objc_msgSend(v38, sel_setUseProcessLocalCache_, 1);
  v39 = v38;
  objc_msgSend(v39, sel_activate);

  return v18;
}

id sub_23A9BA1E4()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAVPlayerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23A9BA3D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = sub_23AA33824();
  v3 = sub_23A9E2E00(6uLL, v1, v2);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  MEMORY[0x23B85CBA0](v3, v5, v7, v9);
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  sub_23A964084((uint64_t *)&unk_2569D6690);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23AA35F90;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8);
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 64) = sub_23A9640C4();
  v13 = 0x7465737361206F6ELL;
  if (v11)
    v13 = v12;
  v14 = 0xE800000000000000;
  if (v11)
    v14 = v11;
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v14;
  swift_bridgeObjectRetain();
  v15 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_23A9BA574()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(char *, id);
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v1 = (_QWORD *)sub_23AA32F30();
  v2 = *(v1 - 1);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
  if (v9)
  {
    v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
    v29 = v9;
    if (v10)
      sub_23A9BD420();

  }
  else
  {
    v28 = v2;
    v29 = v1;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE90118]), sel_initWithTagColor_, 0);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v0;
    v13 = objc_allocWithZone(MEMORY[0x24BE90120]);
    v35 = sub_23A9BE45C;
    v36 = v12;
    aBlock = MEMORY[0x24BDAC760];
    v32 = 1107296256;
    v33 = sub_23A9BE1FC;
    v34 = &unk_250BC28A0;
    v14 = _Block_copy(&aBlock);
    v15 = v0;
    v16 = objc_msgSend(v13, sel_initWithQueryResultHandler_, v14);
    _Block_release(v14);
    swift_release();
    v17 = *(void **)&v15[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager];
    v26 = v16;
    v27 = v11;
    objc_msgSend(v17, sel_getAssetBundleForDeviceQuery_withRequestConfiguration_, v11, v16);
    v18 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem;
    if (*(_QWORD *)&v15[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem])
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v35 = sub_23A9BE464;
    v36 = v19;
    aBlock = MEMORY[0x24BDAC760];
    v32 = 1107296256;
    v33 = sub_23A9C4DBC;
    v34 = &unk_250BC28C8;
    _Block_copy(&aBlock);
    v30 = MEMORY[0x24BEE4AF8];
    sub_23A99D034((unint64_t *)&qword_2569D5AD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v20 = sub_23AA32F3C();
    swift_release();
    swift_release();
    *(_QWORD *)&v15[v18] = v20;
    swift_retain();
    swift_release();
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v21 = (void *)sub_23AA33290();
    sub_23AA32F24();
    MEMORY[0x23B85CB04](v5, 2.0);
    v22 = *(void (**)(char *, id))(v28 + 8);
    v23 = v5;
    v24 = v29;
    v22(v23, v29);
    sub_23AA3326C();
    swift_release();

    v22(v7, v24);
  }
}

uint64_t sub_23A9BA960(void *a1, uint64_t a2, uint64_t a3, int a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  _BYTE v24[4];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v25 = a4;
  v11 = sub_23AA32ED0();
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_23AA32F00();
  v26 = *(_QWORD *)(v14 - 8);
  v27 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v17 = (void *)sub_23AA33290();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  *(_BYTE *)(v18 + 48) = v25;
  *(_QWORD *)(v18 + 56) = a5;
  aBlock[4] = sub_23A9BE4A8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC2918;
  v19 = _Block_copy(aBlock);
  v20 = a6;
  v21 = a1;
  swift_bridgeObjectRetain();
  v22 = a5;
  swift_release();
  sub_23AA32EE8();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23A99D034((unint64_t *)&qword_2569D5AD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  MEMORY[0x23B85CE40](0, v16, v13, v19);
  _Block_release(v19);

  (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v26 + 8))(v16, v27);
}

void sub_23A9BAB94(char *a1, void *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v60;
  char *v61;
  void *v62;
  uint64_t v63;

  if (*(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem])
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_23AA38250;
    *(_QWORD *)(v11 + 56) = type metadata accessor for FMAVPlayerView();
    *(_QWORD *)(v11 + 64) = sub_23A99D034(&qword_2569D6FD8, v12, (uint64_t (*)(uint64_t))type metadata accessor for FMAVPlayerView, MEMORY[0x24BEE5BE8]);
    *(_QWORD *)(v11 + 32) = a1;
    v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
    v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
    v61 = &a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
    v15 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v11 + 96) = MEMORY[0x24BEE0D00];
    v16 = sub_23A9640C4();
    v17 = a2;
    v18 = v16;
    *(_QWORD *)(v11 + 104) = v16;
    if (v14)
      v19 = v13;
    else
      v19 = 7104878;
    if (v14)
      v20 = v14;
    else
      v20 = 0xE300000000000000;
    *(_QWORD *)(v11 + 72) = v19;
    *(_QWORD *)(v11 + 80) = v20;
    v63 = (uint64_t)v17;
    v62 = v17;
    v60 = v17;
    v21 = a1;
    swift_bridgeObjectRetain();
    sub_23A964084(&qword_2569D6FE0);
    v22 = sub_23AA32FFC();
    *(_QWORD *)(v11 + 136) = v15;
    *(_QWORD *)(v11 + 144) = v18;
    *(_QWORD *)(v11 + 112) = v22;
    *(_QWORD *)(v11 + 120) = v23;
    *(_QWORD *)(v11 + 176) = v15;
    *(_QWORD *)(v11 + 184) = v18;
    *(_QWORD *)(v11 + 152) = a3;
    *(_QWORD *)(v11 + 160) = a4;
    v24 = 20302;
    if ((a5 & 1) != 0)
      v24 = 5457241;
    v25 = 0xE200000000000000;
    if ((a5 & 1) != 0)
      v25 = 0xE300000000000000;
    *(_QWORD *)(v11 + 216) = v15;
    *(_QWORD *)(v11 + 224) = v18;
    *(_QWORD *)(v11 + 192) = v24;
    *(_QWORD *)(v11 + 200) = v25;
    v63 = (uint64_t)a6;
    swift_bridgeObjectRetain();
    v26 = a6;
    sub_23A964084(&qword_2569D6FE8);
    v27 = sub_23AA32FFC();
    *(_QWORD *)(v11 + 256) = v15;
    *(_QWORD *)(v11 + 264) = v18;
    *(_QWORD *)(v11 + 232) = v27;
    *(_QWORD *)(v11 + 240) = v28;
    v29 = sub_23AA32FE4();
    v31 = v30;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v32 = sub_23AA32EA0();
    sub_23A9620E8(v32, (uint64_t)qword_2569E0010);
    swift_bridgeObjectRetain();
    v33 = sub_23AA32E88();
    v34 = sub_23AA33218();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v63 = v36;
      *(_DWORD *)v35 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A964DBC(v29, v31, &v63);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v33, v34, "%s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v36, -1, -1);
      MEMORY[0x23B85DB24](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v57 = *(void **)&v21[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
    *(_QWORD *)&v21[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = v62;
    v58 = v60;

    if (*((_QWORD *)v61 + 1))
      sub_23A9BD420();
  }
  else
  {
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23AA370F0;
    *(_QWORD *)(v37 + 56) = type metadata accessor for FMAVPlayerView();
    *(_QWORD *)(v37 + 64) = sub_23A99D034(&qword_2569D6FD8, v38, (uint64_t (*)(uint64_t))type metadata accessor for FMAVPlayerView, MEMORY[0x24BEE5BE8]);
    *(_QWORD *)(v37 + 32) = a1;
    v39 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
    v40 = *(_QWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
    v41 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v37 + 96) = MEMORY[0x24BEE0D00];
    v42 = sub_23A9640C4();
    *(_QWORD *)(v37 + 104) = v42;
    if (v40)
      v43 = v39;
    else
      v43 = 7104878;
    v44 = 0xE300000000000000;
    if (v40)
      v44 = v40;
    *(_QWORD *)(v37 + 72) = v43;
    *(_QWORD *)(v37 + 80) = v44;
    v63 = (uint64_t)a2;
    v45 = a2;
    swift_bridgeObjectRetain();
    v46 = a1;
    sub_23A964084(&qword_2569D6FE0);
    v47 = sub_23AA32FFC();
    *(_QWORD *)(v37 + 136) = v41;
    *(_QWORD *)(v37 + 144) = v42;
    *(_QWORD *)(v37 + 112) = v47;
    *(_QWORD *)(v37 + 120) = v48;
    v49 = sub_23AA32FE4();
    v51 = v50;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v52 = sub_23AA32EA0();
    sub_23A9620E8(v52, (uint64_t)qword_2569E0010);
    swift_bridgeObjectRetain();
    v53 = sub_23AA32E88();
    v54 = sub_23AA33218();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v63 = v56;
      *(_DWORD *)v55 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A964DBC(v49, v51, &v63);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v53, v54, "%s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v56, -1, -1);
      MEMORY[0x23B85DB24](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_23A9BB15C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0010);
    v5 = v3;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    v8 = &OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
    if (os_log_type_enabled(v6, v7))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20 = v19;
      *(_DWORD *)v9 = 138412546;
      v11 = v5;
      v8 = &OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
      sub_23AA333F8();
      *v10 = v3;

      *(_WORD *)(v9 + 12) = 2080;
      v12 = (uint64_t *)&v11[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
      if (*(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8])
      {
        v13 = *v12;
        v14 = v12[1];
      }
      else
      {
        v14 = 0xE300000000000000;
        v13 = 7104878;
      }
      swift_bridgeObjectRetain();
      sub_23A964DBC(v13, v14, &v20);
      sub_23AA333F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMAVPlayerView%@: SFDeviceAssetManager.request('%s') never returned (59783662), using local asset", (uint8_t *)v9, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v19, -1, -1);
      MEMORY[0x23B85DB24](v9, -1, -1);

    }
    else
    {

    }
    *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem] = 0;
    swift_release();
    type metadata accessor for FMAVPlayerView();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v17 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
    *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = v16;
    v18 = v16;

    if (*(_QWORD *)&v5[v8[498] + 8])
      sub_23A9BD420();

  }
}

void sub_23A9BB454(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  _BYTE *v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  objc_class *v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  unint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  __int128 v94;
  __int128 aBlock;
  __int128 v96;
  void *v97;
  uint64_t v98;
  objc_super v99;

  v88 = a1;
  v89 = a2;
  v85 = sub_23AA32D44();
  v86 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v90 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_23AA32FB4();
  v87 = a3;
  v6 = objc_msgSend(a3, sel_pathsForResourcesOfType_inDirectory_, v5, 0);

  v7 = sub_23AA330B0();
  v91 = v7;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v10 = (unint64_t *)(v91 + 40);
    *(_QWORD *)&v8 = 136315138;
    v94 = v8;
    v93 = MEMORY[0x24BEE4AD8] + 8;
    do
    {
      v12 = *(v10 - 1);
      v11 = *v10;
      v13 = qword_2569D4AB0;
      swift_bridgeObjectRetain();
      if (v13 != -1)
        swift_once();
      v14 = sub_23AA32EA0();
      sub_23A9620E8(v14, (uint64_t)qword_2569E0010);
      swift_bridgeObjectRetain();
      v15 = sub_23AA32E88();
      v16 = sub_23AA33218();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        *(_QWORD *)&aBlock = v18;
        *(_DWORD *)v17 = v94;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v17 + 4) = sub_23A964DBC(v12, v11, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A95E000, v15, v16, "ðŸ§­ FMAVPlayerView: asset available %s", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v18, -1, -1);
        MEMORY[0x23B85DB24](v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v10 += 2;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  v20 = v88;
  v19 = v89;
  v21 = (void *)sub_23AA32FB4();
  v22 = (void *)sub_23AA32FB4();
  v23 = objc_msgSend(v87, sel_pathForResource_ofType_, v21, v22);

  v24 = v92;
  if (!v23)
  {
    type metadata accessor for FMAVPlayerView();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v26 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v27 = (void *)sub_23AA32FB4();
    v28 = (void *)sub_23AA32FB4();
    v23 = objc_msgSend(v26, sel_pathForResource_ofType_, v27, v28);

    if (!v23)
    {
LABEL_17:
      if (qword_2569D4AB0 == -1)
        goto LABEL_18;
      goto LABEL_41;
    }
  }
  sub_23AA32FD8();

  v29 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying;
  if (v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    v30 = *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName + 8];
    if (v30)
    {
      if (*(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName] == v20 && v30 == v19
        || (sub_23AA33728() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
  }
  sub_23AA32D08();
  swift_bridgeObjectRelease();
  v37 = objc_allocWithZone(MEMORY[0x24BDB2618]);
  v38 = (void *)sub_23AA32D14();
  v39 = objc_msgSend(v37, sel_initWithURL_, v38);

  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2610]), sel_initWithPlayerItem_, v39);
  v41 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
  v42 = *(void **)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player];
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = v40;

  v43 = (objc_class *)type metadata accessor for FMAVPlayerView();
  v99.receiver = v24;
  v99.super_class = v43;
  v44 = objc_msgSendSuper2(&v99, sel_layer);
  objc_opt_self();
  v45 = swift_dynamicCastObjCClass();
  if (v45)
  {
    v46 = (void *)v45;
    v47 = *(id *)&v24[v41];
    objc_msgSend(v46, sel_setPlayer_, v47);

  }
  v24[v29] = 1;
  v48 = objc_msgSend(v39, sel_tracks);
  sub_23A968488(0, &qword_2569D6FD0);
  v49 = sub_23AA330B0();

  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    v53 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (v53)
      goto LABEL_24;
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_31;
LABEL_24:
  if ((v49 & 0xC000000000000001) != 0)
  {
    v50 = (id)MEMORY[0x23B85D0B0](0, v49);
  }
  else
  {
    if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_41:
      swift_once();
LABEL_18:
      v31 = sub_23AA32EA0();
      sub_23A9620E8(v31, (uint64_t)qword_2569E0010);
      *(_QWORD *)&v94 = v24;
      v32 = sub_23AA32E88();
      v33 = sub_23AA33218();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v34 = 138412290;
        *(_QWORD *)&aBlock = v94;
        v36 = (id)v94;
        sub_23AA333F8();
        *v35 = v94;

        _os_log_impl(&dword_23A95E000, v32, v33, "ðŸ§­ FMAVPlayerView%@: can't play video", v34, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v35, -1, -1);
        MEMORY[0x23B85DB24](v34, -1, -1);

      }
      else
      {

      }
      return;
    }
    v50 = *(id *)(v49 + 32);
  }
  v51 = v50;
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(v51, sel_assetTrack);

  if (v52)
  {
    objc_msgSend(v52, sel_timeRange);

  }
LABEL_32:
  v54 = *(void **)&v24[v41];
  v55 = MEMORY[0x24BDAC760];
  if (v54)
  {
    v56 = v54;
    v57 = sub_23AA33338();
    *(_QWORD *)&v94 = v41;
    v58 = v39;
    v60 = v59;
    v62 = v61;
    v63 = HIDWORD(v59);
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v64 = (void *)sub_23AA33290();
    v65 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v97 = sub_23A9BE354;
    v98 = v65;
    *(_QWORD *)&aBlock = v55;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v96 = sub_23A9BC2CC;
    *((_QWORD *)&v96 + 1) = &unk_250BC2648;
    v66 = _Block_copy(&aBlock);
    swift_release();
    *(_QWORD *)&aBlock = v57;
    *((_QWORD *)&aBlock + 1) = __PAIR64__(v63, v60);
    v39 = v58;
    v41 = v94;
    v24 = v92;
    *(_QWORD *)&v96 = v62;
    v67 = objc_msgSend(v56, sel_addPeriodicTimeObserverForInterval_queue_usingBlock_, &aBlock, v64, v66);
    _Block_release(v66);

    sub_23AA33434();
    swift_unknownObjectRelease();
  }
  else
  {
    aBlock = 0u;
    v96 = 0u;
  }
  v68 = v85;
  v69 = (uint64_t)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
  swift_beginAccess();
  sub_23A9AAB60((uint64_t)&aBlock, v69);
  swift_endAccess();
  v70 = *(void **)&v24[v41];
  if (v70)
  {
    *(_QWORD *)&aBlock = *(_QWORD *)&v24[v41];
    swift_getKeyPath();
    v71 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = sub_23A9BE398;
    *(_QWORD *)(v72 + 24) = v71;
    v73 = v70;
    v74 = sub_23AA32CFC();
    swift_release();
    swift_release();

  }
  else
  {
    v74 = 0;
  }
  v75 = *(void **)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation];
  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = v74;

  v76 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v77 = (void *)sub_23AA32FB4();
  v78 = (void *)objc_opt_self();
  v79 = v39;
  v80 = objc_msgSend(v78, sel_mainQueue);
  v81 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v97 = sub_23A9BE3E8;
  v98 = v81;
  *(_QWORD *)&aBlock = v55;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v96 = sub_23A9BD12C;
  *((_QWORD *)&v96 + 1) = &unk_250BC2698;
  v82 = _Block_copy(&aBlock);
  swift_release();
  v83 = objc_msgSend(v76, sel_addObserverForName_object_queue_usingBlock_, v77, v79, v80, v82);
  _Block_release(v82);

  *(_QWORD *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver] = v83;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v90, v68);
}

void sub_23A9BBF30(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(CMTimeValue, uint64_t, CMTimeEpoch);
  char *v11;
  CMTimeValue v12;
  CMTimeEpoch v13;
  uint64_t v14;
  int32_t v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  NSObject *v22;
  CMTimeValue v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  os_log_type_t type;
  CMTimeFlags v30;
  CMTimeScale v31;
  CMTimeValue v32;
  CMTimeEpoch v33;
  CMTime time1;
  void *v35;
  id (*v36)();
  uint64_t v37;
  CMTime time2;

  v7 = a4 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x23B85DBF0](v7);
  if (v8)
  {
    v9 = (char *)v8;
    v10 = *(void (**)(CMTimeValue, uint64_t, CMTimeEpoch))(v8
                                                                   + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler);
    if (v10)
    {
      swift_retain();
      v10(a1, a2, a3);
      sub_23A98C874((uint64_t)v10);
    }
    v11 = &v9[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
    if (*(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info + 112])
    {
      if ((v9[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] & 1) == 0)
      {
        v12 = *((_QWORD *)v11 + 7);
        v32 = *((_QWORD *)v11 + 4);
        v33 = *((_QWORD *)v11 + 6);
        v30 = *((_DWORD *)v11 + 11);
        v31 = *((_DWORD *)v11 + 10);
        v14 = *((_QWORD *)v11 + 8);
        v13 = *((_QWORD *)v11 + 9);
        swift_bridgeObjectRetain();
        time1.value = a1;
        *(_QWORD *)&time1.timescale = a2;
        time1.epoch = a3;
        time2.value = v12;
        *(_QWORD *)&time2.timescale = v14;
        time2.epoch = v13;
        v15 = CMTimeCompare(&time1, &time2);
        swift_bridgeObjectRelease();
        if (v15 != -1)
        {
          if (qword_2569D4AB0 != -1)
            swift_once();
          v16 = sub_23AA32EA0();
          sub_23A9620E8(v16, (uint64_t)qword_2569E0010);
          v17 = v9;
          v18 = sub_23AA32E88();
          v19 = sub_23AA33218();
          if (os_log_type_enabled(v18, v19))
          {
            type = v19;
            v20 = swift_slowAlloc();
            v21 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v20 = 138412546;
            time1.value = (CMTimeValue)v17;
            v22 = v17;
            sub_23AA333F8();
            *v21 = v9;

            *(_WORD *)(v20 + 12) = 2048;
            sub_23AA33344();
            time1.value = v23;
            sub_23AA333F8();
            _os_log_impl(&dword_23A95E000, v18, type, "ðŸ§­ FMAVPlayerView%@: restarting playing video (inner loop at %f)", (uint8_t *)v20, 0x16u);
            sub_23A964084(&qword_2569D6058);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v21, -1, -1);
            MEMORY[0x23B85DB24](v20, -1, -1);
          }
          else
          {

            v18 = v17;
          }

          v24 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
          objc_msgSend(*(id *)((char *)&v17->isa + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player), sel_pause);
          v25 = *(Class *)((char *)&v17->isa + v24);
          if (v25)
          {
            v26 = swift_allocObject();
            *(_QWORD *)(v26 + 16) = v17;
            v36 = sub_23A9BE32C;
            v37 = v26;
            time1.value = MEMORY[0x24BDAC760];
            *(_QWORD *)&time1.timescale = 1107296256;
            time1.epoch = (CMTimeEpoch)sub_23A9A366C;
            v35 = &unk_250BC2850;
            v27 = _Block_copy(&time1);
            v28 = v17;
            v9 = v25;
            swift_release();
            time1.value = v32;
            time1.timescale = v31;
            time1.flags = v30;
            time1.epoch = v33;
            objc_msgSend(v9, sel_seekToTime_completionHandler_, &time1, v27);

            _Block_release(v27);
          }
          else
          {
            v9 = (char *)v17;
          }
        }
      }
    }

  }
}

uint64_t sub_23A9BC2CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);
  return swift_release();
}

void sub_23A9BC320(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  uint64_t v14;
  uint8_t **v15;
  NSObject *v16;
  uint8_t *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  NSObject *v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  _QWORD *v27;
  unsigned int v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  os_log_type_t type;
  uint64_t (*v38)(uint64_t, uint64_t);
  unint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  uint8_t *buf;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint8_t *aBlock;
  unint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  void *v54;
  uint64_t (*v55)();
  uint64_t v56;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x23B85DBF0](v4);
  if (!v5)
    return;
  v6 = (id)v5;
  if (!a1)
  {
LABEL_12:

    return;
  }
  v7 = a1;
  if (objc_msgSend(v7, sel_status) != (id)1)
  {

    goto LABEL_12;
  }
  if (qword_2569D4AB0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0010);
  v9 = v6;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33218();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v40 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    aBlock = (uint8_t *)v9;
    v13 = v9;
    sub_23AA333F8();
    *v40 = v6;

    _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMAVPlayerView%@: ready to play video", v12, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v40, -1, -1);
    MEMORY[0x23B85DB24](v12, -1, -1);
  }
  else
  {

    v10 = v9;
  }

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v7;
  v15 = (uint8_t **)((char *)v9 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time);
  if ((*((_BYTE *)&v9[3].isa + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time) & 1) != 0)
  {
    v6 = v7;
    v16 = v9;
    sub_23A9BC7E4(v16, v6);

    swift_release();
    goto LABEL_12;
  }
  v17 = v15[1];
  v18 = (uint64_t (*)(uint64_t, uint64_t))v15[2];
  buf = *v15;
  v39 = (unint64_t)v17 >> 32;
  v19 = v9;
  v20 = v7;
  v21 = v19;
  v22 = sub_23AA32E88();
  v23 = sub_23AA33218();
  v41 = v21;
  if (os_log_type_enabled(v22, v23))
  {
    v38 = v18;
    v24 = swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v24 = 138412546;
    type = v23;
    v26 = v21;
    sub_23AA333F8();
    *v25 = v6;
    v27 = v25;

    *(_WORD *)(v24 + 12) = 2048;
    v28 = v17;
    sub_23AA33344();
    aBlock = v29;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v22, type, "ðŸ§­ FMAVPlayerView%@: seek to %f sec before playing video", (uint8_t *)v24, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v27, -1, -1);
    v30 = v24;
    v18 = v38;
    MEMORY[0x23B85DB24](v30, -1, -1);
  }
  else
  {

    v22 = v21;
    v28 = v17;
  }

  v31 = *MEMORY[0x24BDC0D88];
  v32 = *(_DWORD *)(MEMORY[0x24BDC0D88] + 8);
  v33 = *(_DWORD *)(MEMORY[0x24BDC0D88] + 12);
  v34 = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_23A9BE41C;
  *(_QWORD *)(v35 + 24) = v14;
  v55 = sub_23A968410;
  v56 = v35;
  aBlock = (uint8_t *)MEMORY[0x24BDAC760];
  v52 = 1107296256;
  v53 = sub_23A9A366C;
  v54 = &unk_250BC2760;
  v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v50 = v34;
  aBlock = buf;
  v52 = __PAIR64__(v39, v28);
  v53 = v18;
  v46 = v34;
  v47 = v31;
  v48 = v32;
  v49 = v33;
  v43 = v31;
  v44 = v32;
  v45 = v33;
  objc_msgSend(v20, sel_seekToTime_toleranceBefore_toleranceAfter_completionHandler_, &aBlock, &v47, &v43, v36);

  swift_release();
  _Block_release(v36);
}

void sub_23A9BC7E4(_BYTE *a1, void *a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 1;
  v4 = (void *)objc_opt_self();
  v5 = *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v18 = sub_23A9BE424;
  v19 = v6;
  v7 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_23A9C4DBC;
  v17 = &unk_250BC27B0;
  v8 = _Block_copy(&v14);
  v9 = a1;
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a2;
  v18 = sub_23A9BE438;
  v19 = v10;
  v14 = v7;
  v15 = 1107296256;
  v16 = sub_23A9A366C;
  v17 = &unk_250BC2800;
  v11 = _Block_copy(&v14);
  v12 = v9;
  v13 = a2;
  swift_release();
  objc_msgSend(v4, sel_animateWithDuration_animations_completion_, v8, v11, v5);
  _Block_release(v11);
  _Block_release(v8);
}

void sub_23A9BC94C(int a1, char *a2, id a3)
{
  void *v5;
  void (*v6)(uint64_t, double);
  double v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  char *v13;
  const char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  if (a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_placeholderView];
    if (v5)
      objc_msgSend(v5, sel_setAlpha_, 0.0);
    v6 = *(void (**)(uint64_t, double))&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
    if (v6)
    {
      v7 = *(double *)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration];
      swift_retain();
      v6(1, v7);
      sub_23A98C874((uint64_t)v6);
    }
    objc_msgSend(a3, sel_play);
    if (qword_2569D4AB0 != -1)
      swift_once();
    v8 = sub_23AA32EA0();
    sub_23A9620E8(v8, (uint64_t)qword_2569E0010);
    v17 = a2;
    v9 = sub_23AA32E88();
    v10 = sub_23AA33218();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v17;
      sub_23AA333F8();
      *v12 = v17;

      v14 = "ðŸ§­ FMAVPlayerView%@: started playing video";
LABEL_14:
      _os_log_impl(&dword_23A95E000, v9, v10, v14, v11, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v12, -1, -1);
      MEMORY[0x23B85DB24](v11, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_2569D4AB0 != -1)
      swift_once();
    v15 = sub_23AA32EA0();
    sub_23A9620E8(v15, (uint64_t)qword_2569E0010);
    v17 = a2;
    v9 = sub_23AA32E88();
    v10 = sub_23AA33218();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v16 = v17;
      sub_23AA333F8();
      *v12 = v17;

      v14 = "ðŸ§­ FMAVPlayerView%@: did not start playing video (aborted)";
      goto LABEL_14;
    }
  }

}

void sub_23A9BCC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  NSObject *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t (*v27)(uint64_t, uint64_t);
  unint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  NSObject *v32;
  NSObject *aBlock;
  unint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void *v36;
  id (*v37)();
  uint64_t v38;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23B85DBF0](v2);
  if (v3)
  {
    v4 = (char *)v3;
    v5 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player), sel_pause);
    if (v4[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] == 1)
    {
      if (qword_2569D4AB0 != -1)
        swift_once();
      v6 = sub_23AA32EA0();
      sub_23A9620E8(v6, (uint64_t)qword_2569E0010);
      v7 = v4;
      v8 = sub_23AA32E88();
      v9 = sub_23AA33218();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v10 = 138412290;
        aBlock = v7;
        v12 = v7;
        sub_23AA333F8();
        *v11 = v4;

        _os_log_impl(&dword_23A95E000, v8, v9, "ðŸ§­ FMAVPlayerView%@: will not restart playing video", v10, 0xCu);
        sub_23A964084(&qword_2569D6058);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v11, -1, -1);
        MEMORY[0x23B85DB24](v10, -1, -1);
      }
      else
      {

        v8 = v7;
      }

      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))((char *)&v7->isa
                                                             + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler);
      if (v19)
      {
        v20 = *MEMORY[0x24BDC0D88];
        v21 = *(_QWORD *)(MEMORY[0x24BDC0D88] + 8);
        v22 = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
        swift_retain();
        v19(v20, v21, v22);
        sub_23A98C874((uint64_t)v19);
      }
      goto LABEL_18;
    }
    if (qword_2569D4AB0 != -1)
      swift_once();
    v13 = sub_23AA32EA0();
    sub_23A9620E8(v13, (uint64_t)qword_2569E0010);
    v7 = v4;
    v14 = sub_23AA32E88();
    v15 = sub_23AA33218();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      aBlock = v7;
      *(_DWORD *)v16 = 138412290;
      v18 = v7;
      sub_23AA333F8();
      *v17 = v4;

      _os_log_impl(&dword_23A95E000, v14, v15, "ðŸ§­ FMAVPlayerView%@: restarting playing video", v16, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v17, -1, -1);
      MEMORY[0x23B85DB24](v16, -1, -1);
    }
    else
    {

      v14 = v7;
    }

    if (*(Class *)((char *)&v7[14].isa + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info))
    {
      swift_bridgeObjectRetain();
      sub_23AA33344();
      v23 = sub_23AA33338();
      v25 = v24;
      v27 = v26;
      swift_bridgeObjectRelease();
      v28 = HIDWORD(v25);
      v29 = *(void **)&v4[v5];
      if (!v29)
      {
LABEL_18:

        return;
      }
    }
    else
    {
      v23 = *MEMORY[0x24BDC0D88];
      LODWORD(v25) = *(_DWORD *)(MEMORY[0x24BDC0D88] + 8);
      LODWORD(v28) = *(_DWORD *)(MEMORY[0x24BDC0D88] + 12);
      v27 = *(uint64_t (**)(uint64_t, uint64_t))(MEMORY[0x24BDC0D88] + 16);
      v29 = *(void **)&v4[v5];
      if (!v29)
        goto LABEL_18;
    }
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v7;
    v37 = sub_23A9BE32C;
    v38 = v30;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_23A9A366C;
    v36 = &unk_250BC26E8;
    v31 = _Block_copy(&aBlock);
    v32 = v7;
    v7 = v29;
    swift_release();
    aBlock = v23;
    v34 = __PAIR64__(v28, v25);
    v35 = v27;
    -[NSObject seekToTime:completionHandler:](v7, sel_seekToTime_completionHandler_, &aBlock, v31);

    _Block_release(v31);
    goto LABEL_18;
  }
}

uint64_t sub_23A9BD12C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23AA32CC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23AA32CB4();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_23A9BD1D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t a1, uint64_t a2), char a6, uint64_t a7)
{
  char *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  char v41;
  uint64_t aBlock;
  unint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  void *v45;
  id (*v46)();
  uint64_t v47;

  v13 = *(_QWORD *)(a7 + 96);
  v14 = *(_QWORD *)(a7 + 104);
  v15 = *(_QWORD *)(a7 + 112);
  v16 = &v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
  v17 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)v16 = *(_OWORD *)a7;
  *((_OWORD *)v16 + 1) = v17;
  v18 = *(_OWORD *)(a7 + 48);
  *((_OWORD *)v16 + 2) = *(_OWORD *)(a7 + 32);
  *((_OWORD *)v16 + 3) = v18;
  v19 = *(_OWORD *)(a7 + 80);
  *((_OWORD *)v16 + 4) = *(_OWORD *)(a7 + 64);
  *((_OWORD *)v16 + 5) = v19;
  *((_QWORD *)v16 + 12) = v13;
  *((_QWORD *)v16 + 13) = v14;
  v38 = v14;
  *((_QWORD *)v16 + 14) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a1;
  v41 = a6;
  v39 = a4;
  v40 = a5;
  if ((a6 & 1) != 0)
  {
    v20 = *MEMORY[0x24BDC0D88];
    LODWORD(a4) = *(_DWORD *)(MEMORY[0x24BDC0D88] + 8);
    LODWORD(v21) = *(_DWORD *)(MEMORY[0x24BDC0D88] + 12);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(MEMORY[0x24BDC0D88] + 16);
  }
  else
  {
    v21 = HIDWORD(a4);
    v22 = a5;
    v20 = a3;
  }
  v23 = a3;
  if (*((_QWORD *)v16 + 14))
  {
    swift_bridgeObjectRetain();
    sub_23AA33344();
    v20 = sub_23AA33338();
    a4 = v24;
    v22 = v25;
    swift_bridgeObjectRelease();
    v23 = a3;
    v21 = HIDWORD(a4);
  }
  v26 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player];
  if (v26)
  {
    v27 = v23;
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v7;
    v46 = sub_23A9BE32C;
    v47 = v28;
    aBlock = MEMORY[0x24BDAC760];
    v43 = 1107296256;
    v44 = sub_23A9A366C;
    v45 = &unk_250BC25F8;
    v29 = _Block_copy(&aBlock);
    v30 = v26;
    v31 = v7;
    swift_release();
    aBlock = v20;
    v43 = __PAIR64__(v21, a4);
    v44 = v22;
    objc_msgSend(v30, sel_seekToTime_completionHandler_, &aBlock, v29);
    _Block_release(v29);

    v23 = v27;
  }
  v32 = &v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time];
  *(_QWORD *)v32 = v23;
  v33 = v38;
  *((_QWORD *)v32 + 1) = v39;
  *((_QWORD *)v32 + 2) = v40;
  v32[24] = v41 & 1;
  v34 = v15;
  if (!v15)
  {
    v35 = swift_bridgeObjectRetain();
    v33 = v37;
    v34 = v35;
  }
  v36 = &v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  *(_QWORD *)v36 = v33;
  *((_QWORD *)v36 + 1) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23A9BA574();
}

void sub_23A9BD420()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  char *v37;
  uint64_t *v38;
  id v39;
  char *v40;
  id v41;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
  if (!v1)
  {
    if (qword_2569D4AB0 != -1)
      swift_once();
    v15 = sub_23AA32EA0();
    sub_23A9620E8(v15, (uint64_t)qword_2569E0010);
    v40 = v0;
    v8 = sub_23AA32E88();
    v16 = sub_23AA3320C();
    if (os_log_type_enabled(v8, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v19 = v40;
      sub_23AA333F8();
      *v18 = v40;

      _os_log_impl(&dword_23A95E000, v8, v16, "ðŸ§­ FMAVPlayerView%@: cannot load assets for nil bundle", v17, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v18, -1, -1);
      MEMORY[0x23B85DB24](v17, -1, -1);
      goto LABEL_18;
    }
    goto LABEL_31;
  }
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
  if (!v2)
  {
    v30 = qword_2569D4AB0;
    v40 = v1;
    if (v30 != -1)
      swift_once();
    v31 = sub_23AA32EA0();
    sub_23A9620E8(v31, (uint64_t)qword_2569E0010);
    v32 = v0;
    v33 = sub_23AA32E88();
    v34 = sub_23AA3320C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v35 = 138412290;
      v37 = v32;
      sub_23AA333F8();
      *v36 = v32;

      _os_log_impl(&dword_23A95E000, v33, v34, "ðŸ§­ FMAVPlayerView%@: cannot load video for nil asset name", v35, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v36, -1, -1);
      MEMORY[0x23B85DB24](v35, -1, -1);

      return;
    }

    goto LABEL_32;
  }
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  v4 = &OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
  if (v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName + 8];
    if (v5)
    {
      v6 = v3 == *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName] && v2 == v5;
      if (v6 || (sub_23AA33728() & 1) != 0)
      {
        v7 = qword_2569D4AB0;
        v8 = v1;
        if (v7 != -1)
          swift_once();
        v9 = sub_23AA32EA0();
        sub_23A9620E8(v9, (uint64_t)qword_2569E0010);
        v40 = v0;
        v10 = sub_23AA32E88();
        v11 = sub_23AA33218();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v12 = 138412290;
          v14 = v40;
          sub_23AA333F8();
          *v13 = v40;

          _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMAVPlayerView%@: did not start playing playing since it's already playing", v12, 0xCu);
          sub_23A964084(&qword_2569D6058);
          swift_arrayDestroy();
          MEMORY[0x23B85DB24](v13, -1, -1);
          MEMORY[0x23B85DB24](v12, -1, -1);

LABEL_18:
          return;
        }

LABEL_31:
LABEL_32:

        return;
      }
    }
  }
  v20 = qword_2569D4AB0;
  v21 = v1;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v22 = sub_23AA32EA0();
  sub_23A9620E8(v22, (uint64_t)qword_2569E0010);
  v23 = v0;
  v24 = sub_23AA32E88();
  v25 = sub_23AA33218();
  if (os_log_type_enabled(v24, v25))
  {
    v39 = v21;
    v26 = (uint8_t *)swift_slowAlloc();
    v41 = (id)v3;
    v27 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v26 = 138412290;
    v28 = v23;
    v4 = &OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
    sub_23AA333F8();
    *v27 = v23;

    v21 = v39;
    _os_log_impl(&dword_23A95E000, v24, v25, "ðŸ§­ FMAVPlayerView%@: will start playing video", v26, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    v29 = v27;
    v3 = (uint64_t)v41;
    MEMORY[0x23B85DB24](v29, -1, -1);
    MEMORY[0x23B85DB24](v26, -1, -1);

  }
  else
  {

  }
  sub_23A9BB454(v3, v2, v21);
  v38 = (uint64_t *)&v23[v4[493]];
  *v38 = v3;
  v38[1] = v2;

  swift_bridgeObjectRelease();
}

void sub_23A9BDAB4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  char *v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  _BYTE *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void (*v26)(_QWORD, double);
  void *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  id v36;
  _BYTE *v37;
  __int128 aBlock;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying;
  if (v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    v3 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player], sel_pause);
    v0[v2] = 0;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0010);
    v5 = v0;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    if (os_log_type_enabled(v6, v7))
    {
      v36 = (id)v3;
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      *(_QWORD *)&aBlock = v5;
      v10 = v5;
      sub_23AA333F8();
      *v9 = v5;

      _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMAVPlayerView%@: stopped playing video", v8, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v9, -1, -1);
      v11 = v8;
      v3 = (uint64_t)v36;
      MEMORY[0x23B85DB24](v11, -1, -1);

    }
    else
    {

    }
    v18 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation];
    *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = 0;

    v19 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
    swift_beginAccess();
    sub_23A9AACC0(v19, (uint64_t)&v43);
    if (*((_QWORD *)&v44 + 1))
    {
      sub_23A9ABA4C(&v43, &aBlock);
      v20 = *(void **)&v1[v3];
      if (v20)
      {
        sub_23A96545C(&aBlock, (uint64_t)v40);
        v21 = v20;
        objc_msgSend(v21, sel_removeTimeObserver_, sub_23AA3371C());

        swift_unknownObjectRelease();
      }
      v43 = 0u;
      v44 = 0u;
      swift_beginAccess();
      sub_23A9AAB60((uint64_t)&v43, v19);
      swift_endAccess();
      sub_23A963B3C((uint64_t)&aBlock);
    }
    else
    {
      sub_23A968C64((uint64_t)&v43);
    }
    v22 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver;
    v23 = *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver];
    if (v23)
    {
      v24 = (void *)objc_opt_self();
      swift_unknownObjectRetain();
      v25 = objc_msgSend(v24, sel_defaultCenter);
      objc_msgSend(v25, sel_removeObserver_, v23);

      *(_QWORD *)&v5[v22] = 0;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    v26 = *(void (**)(_QWORD, double))&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
    if (v26)
    {
      swift_retain();
      v26(0, 0.0);
      sub_23A98C874((uint64_t)v26);
    }
    v27 = (void *)objc_opt_self();
    v28 = *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration];
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v5;
    v41 = sub_23A9BE2C4;
    v42 = v29;
    v30 = MEMORY[0x24BDAC760];
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v39 = sub_23A9C4DBC;
    v40 = &unk_250BC2558;
    v31 = _Block_copy(&aBlock);
    v32 = v5;
    swift_release();
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v32;
    v41 = sub_23A9BE324;
    v42 = v33;
    *(_QWORD *)&aBlock = v30;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v39 = sub_23A9A366C;
    v40 = &unk_250BC25A8;
    v34 = _Block_copy(&aBlock);
    v35 = v32;
    swift_release();
    objc_msgSend(v27, sel_animateWithDuration_animations_completion_, v31, v34, v28);
    _Block_release(v34);
    _Block_release(v31);
  }
  else
  {
    if (qword_2569D4AB0 != -1)
      swift_once();
    v12 = sub_23AA32EA0();
    sub_23A9620E8(v12, (uint64_t)qword_2569E0010);
    v37 = v0;
    v13 = sub_23AA32E88();
    v14 = sub_23AA33218();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      *(_QWORD *)&aBlock = v37;
      v17 = v37;
      sub_23AA333F8();
      *v16 = v37;

      _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMAVPlayerView%@: did not stop playing video since it's not playing", v15, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v16, -1, -1);
      MEMORY[0x23B85DB24](v15, -1, -1);

    }
    else
    {

    }
  }
}

void sub_23A9BE0AC(uint64_t a1, _BYTE *a2)
{
  id v3;
  void *v4;
  void *v5;
  objc_super v6;

  a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 0;
  if ((a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] & 1) == 0)
  {
    v6.receiver = a2;
    v6.super_class = (Class)type metadata accessor for FMAVPlayerView();
    v3 = objc_msgSendSuper2(&v6, sel_layer);
    objc_opt_self();
    v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
      objc_msgSend(v4, sel_setPlayer_, 0);

    v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player];
    *(_QWORD *)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = 0;

  }
}

uint64_t type metadata accessor for FMAVPlayerView()
{
  return objc_opt_self();
}

void sub_23A9BE1FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void (*v8)(void *, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v9 = sub_23AA32FD8();
  v11 = v10;
  swift_retain();
  v13 = a2;
  v12 = a5;
  v8(a2, v9, v11, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_23A9BE2A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9BE2C4()
{
  uint64_t v0;
  char *v1;
  void *v2;

  v1 = *(char **)(v0 + 16);
  v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_placeholderView];
  if (v2)
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  return objc_msgSend(v1, sel_setAlpha_, 0.0);
}

uint64_t sub_23A9BE30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9BE31C()
{
  return swift_release();
}

void sub_23A9BE324(uint64_t a1)
{
  uint64_t v1;

  sub_23A9BE0AC(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_23A9BE330()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A9BE354(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v3;

  sub_23A9BBF30(a1, a2, a3, v3);
}

char *sub_23A9BE35C()
{
  return sel_status;
}

id sub_23A9BE368@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_status);
  *a2 = result;
  return result;
}

void sub_23A9BE398(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23A9BC320(a1, a2, v2);
}

uint64_t sub_23A9BE3A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9BE3C4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_23A9BE3E8(uint64_t a1)
{
  uint64_t v1;

  sub_23A9BCC8C(a1, v1);
}

uint64_t sub_23A9BE3F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9BE41C()
{
  uint64_t v0;

  sub_23A9BC7E4(*(_BYTE **)(v0 + 16), *(void **)(v0 + 24));
}

id sub_23A9BE424()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

void sub_23A9BE438(int a1)
{
  uint64_t v1;

  sub_23A9BC94C(a1, *(char **)(v1 + 16), *(id *)(v1 + 24));
}

id sub_23A9BE440()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player), sel_play);
}

uint64_t sub_23A9BE45C(void *a1, uint64_t a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v5;

  return sub_23A9BA960(a1, a2, a3, a4, a5, *(void **)(v5 + 16));
}

void sub_23A9BE464()
{
  uint64_t v0;

  sub_23A9BB15C(v0);
}

uint64_t sub_23A9BE46C()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23A9BE4A8()
{
  uint64_t v0;

  sub_23A9BAB94(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(void **)(v0 + 56));
}

void sub_23A9BE4BC()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  _OWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = 0;
  v1 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  v2 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE90110]), sel_init);
  v3 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  v3[24] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver] = 0;
  v4 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
  *v4 = 0u;
  v4[1] = 0u;
  v5 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] = 0;
  v6 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
  *v8 = 0;
  v8[1] = 0;

  sub_23AA335A8();
  __break(1u);
}

__n128 initializeWithCopy for FMPFSKPatternNodeStyle(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t getEnumTagSinglePayload for FMPFSKPatternNodeStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 208))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPatternNodeStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 208) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPatternNodeStyle()
{
  return &type metadata for FMPFSKPatternNodeStyle;
}

void destroy for FMPFSKPatternNodeConfig(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 128))
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for FMPFSKPatternNodeConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  id v7;
  __int128 v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v4 = *(_QWORD *)(a2 + 128);
  if (v4)
  {
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v4;
    v5 = *(void **)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v5;
    v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    swift_bridgeObjectRetain();
    v7 = v5;
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
  }
  return a1;
}

uint64_t assignWithCopy for FMPFSKPatternNodeConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  __int128 v17;
  void *v18;
  __int128 v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = (_OWORD *)(a1 + 120);
  v12 = (__int128 *)(a2 + 120);
  v13 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14 = *(void **)(a2 + 136);
      v15 = *(void **)(a1 + 136);
      *(_QWORD *)(a1 + 136) = v14;
      v16 = v14;

      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      v17 = *(_OWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = v17;
    }
    else
    {
      sub_23A9BEA74(a1 + 120);
      v22 = v12[1];
      v21 = v12[2];
      v23 = *v12;
      *(_OWORD *)((char *)v11 + 41) = *(__int128 *)((char *)v12 + 41);
      v11[1] = v22;
      v11[2] = v21;
      *v11 = v23;
    }
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v18 = *(void **)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v18;
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    v19 = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = v19;
    swift_bridgeObjectRetain();
    v20 = v18;
  }
  else
  {
    v24 = *v12;
    v25 = *(_OWORD *)(a2 + 136);
    v26 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    *(_OWORD *)(a1 + 136) = v25;
    *(_OWORD *)(a1 + 152) = v26;
    *v11 = v24;
  }
  return a1;
}

uint64_t sub_23A9BEA74(uint64_t a1)
{
  destroy for FMPFSKLabelNodeStyle(a1);
  return a1;
}

__n128 initializeWithTake for FMPFSKPatternNodeConfig(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for FMPFSKPatternNodeConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v7;
  void *v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v4 = (_OWORD *)(a1 + 120);
  v5 = (_OWORD *)(a2 + 120);
  if (!*(_QWORD *)(a1 + 128))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 128);
  if (!v7)
  {
    sub_23A9BEA74((uint64_t)v4);
LABEL_5:
    v9 = v5[1];
    *v4 = *v5;
    v4[1] = v9;
    v4[2] = v5[2];
    *(_OWORD *)((char *)v4 + 41) = *(_OWORD *)((char *)v5 + 41);
    return a1;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFSKPatternNodeConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 177))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 128);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPatternNodeConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 177) = 0;
    if (a2)
      *(_QWORD *)(result + 128) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPatternNodeConfig()
{
  return &type metadata for FMPFSKPatternNodeConfig;
}

id sub_23A9BECE8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id result;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_whiteColor);
  v2 = objc_msgSend(v0, sel_whiteColor);
  v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.4);

  result = objc_msgSend(v0, sel_whiteColor);
  qword_2569E00B0 = (uint64_t)v1;
  qword_2569E00B8 = (uint64_t)v3;
  qword_2569E00C0 = (uint64_t)result;
  qword_2569E00C8 = 0x3FE0000000000000;
  return result;
}

id sub_23A9BED9C()
{
  id v1;

  if (qword_2569D4B60 != -1)
    swift_once();
  v1 = (id)qword_2569E0498;
  xmmword_2569E00D0 = xmmword_23AA382E0;
  byte_2569E00E0 = 0;
  qword_2569E00E8 = 5;
  LOBYTE(xmmword_2569E00F0) = 0;
  *((_QWORD *)&xmmword_2569E00F0 + 1) = 120;
  byte_2569E0100 = 0;
  qword_2569E0108 = 0;
  LOBYTE(xmmword_2569E0110) = 0;
  *((_QWORD *)&xmmword_2569E0110 + 1) = 0x4059000000000000;
  byte_2569E0120 = 0;
  qword_2569E0128 = 1;
  LOBYTE(xmmword_2569E0130) = 0;
  *((_QWORD *)&xmmword_2569E0130 + 1) = 0;
  byte_2569E0140 = 0;
  qword_2569E0148 = qword_2569E0488;
  unk_2569E0150 = unk_2569E0490;
  qword_2569E0158 = qword_2569E0498;
  xmmword_2569E0160 = *(_OWORD *)&qword_2569E04A0;
  xmmword_2569E0170 = *(__int128 *)((char *)&xmmword_2569E04A8 + 8);
  byte_2569E0180 = byte_2569E04C0;
  swift_bridgeObjectRetain();
  return v1;
}

double sub_23A9BEE8C()
{
  double result;

  if (qword_2569D4AC8 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2569E0188 = 0x3FE0000000000000;
  BYTE8(xmmword_2569E0188) = 0;
  xmmword_2569E0198 = xmmword_23AA382F0;
  *(_QWORD *)&xmmword_2569E01A8 = 0x3FEAAAAAAAAAAAABLL;
  BYTE8(xmmword_2569E01A8) = 0;
  xmmword_2569E01B8 = xmmword_23AA38300;
  xmmword_2569E01C8 = xmmword_23AA38310;
  xmmword_2569E01D8 = xmmword_23AA38320;
  xmmword_2569E01E8 = xmmword_23AA38330;
  xmmword_2569E01F8 = xmmword_23AA38340;
  xmmword_2569E0208 = xmmword_23AA38350;
  xmmword_2569E0218 = xmmword_23AA38360;
  *(_QWORD *)&xmmword_2569E0228 = 0x3FECCCCCCCCCCCCDLL;
  *((_QWORD *)&xmmword_2569E0228 + 1) = *((_QWORD *)&xmmword_2569D61C0 + 1);
  result = 0.5;
  xmmword_2569E0238 = xmmword_23AA38370;
  xmmword_2569E0248 = xmmword_23AA38380;
  return result;
}

double sub_23A9BEF7C()
{
  double result;

  if (qword_2569D4AD0 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2569E0258 = 0;
  BYTE8(xmmword_2569E0258) = 1;
  xmmword_2569E0268 = xmmword_23AA38390;
  *(_QWORD *)&xmmword_2569E0278 = 0x3FEAAAAAAAAAAAABLL;
  BYTE8(xmmword_2569E0278) = 1;
  xmmword_2569E0288 = xmmword_23AA38300;
  xmmword_2569E0298 = xmmword_23AA383A0;
  __asm { FMOV            V1.2D, #1.0 }
  xmmword_2569E02A8 = _Q1;
  xmmword_2569E02B8 = _Q1;
  xmmword_2569E02C8 = _Q1;
  xmmword_2569E02D8 = xmmword_23AA38350;
  xmmword_2569E02E8 = xmmword_23AA38360;
  *(_QWORD *)&xmmword_2569E02F8 = 0x3FECCCCCCCCCCCCDLL;
  *((_QWORD *)&xmmword_2569E02F8 + 1) = *((_QWORD *)&xmmword_2569D6218 + 1);
  result = 0.6;
  xmmword_2569E0308 = xmmword_23AA383B0;
  xmmword_2569E0318 = xmmword_23AA383C0;
  return result;
}

char *sub_23A9BF058(unsigned __int8 *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, double a13, double a14, double a15, double a16, char a17, double a18, char a19, uint64_t a20,uint64_t a21,char a22,double a23,double a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34)
{
  char *v30;
  int v36;
  uint64_t v37;
  id v38;
  char *v39;
  void *v40;
  int v41;
  char *v42;
  char v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  double v72;
  double v73;
  char v74;
  char *v75;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  id v87;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  _QWORD *v110;
  void *v111;
  uint64_t v112;
  _QWORD *v113;
  void *v114;
  _QWORD *v115;
  void *v116;
  uint64_t ObjCClassFromMetadata;
  id v118;
  void *v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  id v124;
  double v125;
  double v126;
  id v127;
  uint64_t v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  char *v136;
  char *v137;
  void *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  double v142;
  double v143;
  char v144;
  char *v145;
  char *v146;
  char *v147;
  double *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char v158;
  uint64_t v159;
  char *v160;
  char v161;
  double *v162;
  char *v163;
  char *v164;
  double v165;
  char *v166;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  objc_super v180;
  char v181;
  _DWORD v182[2];
  _DWORD v183[2];
  _DWORD v184[2];
  _DWORD v185[2];
  _DWORD v186[2];
  _DWORD v187[2];
  _DWORD v188[2];
  _DWORD v189[2];
  _DWORD v190[2];
  _DWORD v191[4];

  v36 = *a1;
  v37 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
  v38 = objc_allocWithZone((Class)type metadata accessor for FMPFSKNode());
  v39 = v30;
  v40 = v38;
  v41 = v36;
  *(_QWORD *)&v30[v37] = objc_msgSend(v40, sel_init);
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbScatterRandomOffsetFrameCounter] = 0;
  v42 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
  *(_QWORD *)v42 = 0;
  *((_QWORD *)v42 + 1) = 0;
  v43 = 1;
  v42[16] = 1;
  v44 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition];
  *(_QWORD *)v44 = 0;
  *((_QWORD *)v44 + 1) = 0;
  v44[16] = 1;
  v45 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  v46 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
  *(_QWORD *)v46 = 0;
  v46[8] = 1;
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction] = 0;
  v47 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
  *(_QWORD *)v47 = 0;
  *((_QWORD *)v47 + 1) = 0;
  v47[16] = 1;
  v48 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_relativeHeading];
  *(_QWORD *)v48 = 0;
  v48[8] = 1;
  v168 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring;
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring] = 0;
  v169 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring;
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring] = 0;
  v170 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring;
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring] = 0;
  v49 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
  *(_QWORD *)v49 = 0;
  *((_QWORD *)v49 + 1) = 0;
  v49[16] = 1;
  v50 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
  *(_QWORD *)v50 = 0;
  *((_QWORD *)v50 + 1) = 0;
  v50[16] = 1;
  v51 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
  *(_QWORD *)v51 = 0;
  *((_QWORD *)v51 + 1) = 0;
  v51[16] = 1;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_useAlternateScaling] = 0;
  v52 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction];
  *(_OWORD *)v52 = 0u;
  *((_OWORD *)v52 + 1) = 0u;
  v52[32] = 1;
  v53 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor];
  *(_QWORD *)v53 = 0;
  v176 = v53;
  v53[8] = 1;
  v54 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
  *(_QWORD *)v54 = 0;
  v175 = v54;
  v54[8] = 1;
  v55 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor];
  *(_QWORD *)v55 = 0;
  v174 = v55;
  v55[8] = 1;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceScatterOffset] = 1;
  v56 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset];
  *(_QWORD *)v56 = 0;
  *((_QWORD *)v56 + 1) = 0;
  v171 = v56;
  v56[16] = 1;
  v57 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
  *(_QWORD *)v57 = 0;
  *((_QWORD *)v57 + 1) = 0;
  v57[16] = 1;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceHomingFactor] = 1;
  v58 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
  *(_QWORD *)v58 = 0;
  v58[8] = 1;
  v59 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
  *(_QWORD *)v59 = 0;
  v59[8] = 1;
  v60 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset];
  *(_QWORD *)v60 = 0;
  v60[8] = 1;
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading] = 0;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_experienceType] = v36;
  if (v36 == 1)
  {
    v61 = 0;
    v62 = 0;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    LOBYTE(v191[0]) = 1;
    LOBYTE(v190[0]) = 1;
    LOBYTE(v189[0]) = 1;
    LOBYTE(v188[0]) = 1;
    LOBYTE(v187[0]) = 1;
    LOBYTE(v186[0]) = 0;
    LOBYTE(v185[0]) = 0;
    LOBYTE(v184[0]) = 0;
    LOBYTE(v183[0]) = 0;
    LOBYTE(v182[0]) = 0;
    v181 = 0;
    v66 = 0x4010000000000000;
    v67 = 0;
    v68 = 0x3FF8000000000000;
    v69 = 0x3FF0000000000000;
    v70 = 0;
    v71 = 0x4004000000000000;
    v72 = 0.0;
    v73 = 0.6;
    v74 = 0;
  }
  else
  {
    v71 = 0;
    v69 = 0;
    v68 = 0;
    v66 = 0;
    LOBYTE(v191[0]) = 0;
    LOBYTE(v190[0]) = 0;
    LOBYTE(v189[0]) = 0;
    LOBYTE(v188[0]) = 0;
    LOBYTE(v187[0]) = 0;
    LOBYTE(v186[0]) = 1;
    LOBYTE(v185[0]) = 1;
    LOBYTE(v184[0]) = 1;
    LOBYTE(v183[0]) = 1;
    LOBYTE(v182[0]) = 1;
    v181 = 1;
    v65 = 1;
    v67 = 1;
    v64 = 0x3FF0000000000000;
    v63 = 0x3FE6666666666666;
    v61 = 0x3FB999999999999ALL;
    v70 = 1;
    v73 = 1.0;
    v72 = 0.75;
    v62 = 30;
    v74 = 1;
    v43 = 0;
  }
  v75 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style];
  *(_OWORD *)v75 = xmmword_23AA38420;
  *((_OWORD *)v75 + 1) = xmmword_23AA38430;
  __asm { FMOV            V2.2D, #0.5 }
  *((_OWORD *)v75 + 2) = _Q2;
  *((_QWORD *)v75 + 6) = 16;
  *((double *)v75 + 7) = v72;
  *((_OWORD *)v75 + 4) = xmmword_23AA38440;
  *((_OWORD *)v75 + 5) = xmmword_23AA38450;
  *((double *)v75 + 12) = v73;
  *((_QWORD *)v75 + 13) = 0x3FF0000000000000;
  *((_QWORD *)v75 + 14) = v61;
  v75[120] = v43;
  *(_DWORD *)(v75 + 121) = v191[0];
  *((_DWORD *)v75 + 31) = *(_DWORD *)((char *)v191 + 3);
  *((_QWORD *)v75 + 16) = v62;
  v75[136] = v43;
  *((_DWORD *)v75 + 35) = *(_DWORD *)((char *)v190 + 3);
  *(_DWORD *)(v75 + 137) = v190[0];
  *((_QWORD *)v75 + 18) = 0;
  v75[152] = v43;
  *((_DWORD *)v75 + 39) = *(_DWORD *)((char *)v189 + 3);
  *(_DWORD *)(v75 + 153) = v189[0];
  *((_QWORD *)v75 + 20) = v63;
  v75[168] = v43;
  *((_DWORD *)v75 + 43) = *(_DWORD *)((char *)v188 + 3);
  *(_DWORD *)(v75 + 169) = v188[0];
  *((_QWORD *)v75 + 22) = v64;
  v75[184] = v43;
  v81 = v187[0];
  *((_DWORD *)v75 + 47) = *(_DWORD *)((char *)v187 + 3);
  *(_DWORD *)(v75 + 185) = v81;
  *((_QWORD *)v75 + 24) = v69;
  v75[200] = v65;
  v82 = v186[0];
  *((_DWORD *)v75 + 51) = *(_DWORD *)((char *)v186 + 3);
  *(_DWORD *)(v75 + 201) = v82;
  *((_QWORD *)v75 + 26) = v69;
  v75[216] = v65;
  v83 = v185[0];
  *((_DWORD *)v75 + 55) = *(_DWORD *)((char *)v185 + 3);
  *(_DWORD *)(v75 + 217) = v83;
  *((_QWORD *)v75 + 28) = v71;
  v75[232] = v65;
  v84 = v184[0];
  *((_DWORD *)v75 + 59) = *(_DWORD *)((char *)v184 + 3);
  *(_DWORD *)(v75 + 233) = v84;
  *((_QWORD *)v75 + 30) = v69;
  v75[248] = v67;
  v85 = v183[0];
  *((_DWORD *)v75 + 63) = *(_DWORD *)((char *)v183 + 3);
  *(_DWORD *)(v75 + 249) = v85;
  *((_QWORD *)v75 + 32) = v68;
  v75[264] = v70;
  v86 = v182[0];
  *((_DWORD *)v75 + 67) = *(_DWORD *)((char *)v182 + 3);
  *(_DWORD *)(v75 + 265) = v86;
  *((_QWORD *)v75 + 34) = 0x3FE0000000000000;
  *((_QWORD *)v75 + 35) = v66;
  v75[288] = v74;
  v177 = v58;
  if (a8)
    v87 = a8;
  else
    v87 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_renderingColor] = v87;
  *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedDiskRadius] = a3;
  *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralDiskRadius] = a4;
  *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius] = a5;
  if (v41 != 1)
  {
    v92 = qword_2569D4B28;
    v93 = a8;
    if (v92 != -1)
      swift_once();
    v91 = (char *)&xmmword_2569E01A8 + 8;
    goto LABEL_13;
  }
  v89 = qword_2569D4B30;
  v90 = a8;
  if (v89 != -1)
    goto LABEL_67;
  while (1)
  {
    v91 = (char *)&xmmword_2569E0278 + 8;
LABEL_13:
    v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle] = *v91;
    if ((a30 & 1) != 0)
      v94 = 0;
    else
      v94 = a29;
    a30 = (char)v177;
    *(_QWORD *)v176 = v94;
    v176[8] = 0;
    if ((a32 & 1) != 0)
      v95 = 0;
    else
      v95 = a31;
    *(_QWORD *)v175 = v95;
    v175[8] = 0;
    if ((a34 & 1) != 0)
      v96 = 0;
    else
      v96 = a33;
    *(_QWORD *)v174 = v96;
    v174[8] = 0;
    *(_QWORD *)v177 = 0;
    v177[8] = 0;
    v97 = *(double *)&a12;
    if ((a17 & 1) != 0)
      v97 = 1.0;
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_minScaleFactor] = v97;
    v98 = a18;
    if ((a19 & 1) != 0)
      v98 = 1.0;
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_maxScaleFactor] = v98;
    v99 = *((double *)v75 + 8);
    v100 = *((double *)v75 + 9);
    v101 = v99 * (1.0 - v100);
    v102 = 0.0;
    if (v101 < 0.0)
      v101 = 0.0;
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedBrightness] = (1.0 - a2) * v101 + fmin(v99 * (v100 + 1.0), 1.0) * a2;
    v103 = *((double *)v75 + 10);
    v104 = *((double *)v75 + 11);
    if (v103 * (1.0 - v104) >= 0.0)
      v102 = v103 * (1.0 - v104);
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_nonConformedBrightness] = (1.0 - a2) * v102 + fmin(v103 * (v104 + 1.0), 1.0) * a2;
    v105 = fmax(*((double *)v75 + 2) / 200.0 * a4, 1.0);
    if (v105 >= 0.0)
      break;
    __break(1u);
LABEL_67:
    swift_once();
  }
  sub_23A9F6FC8(-v105, v105);
  v107 = v106;
  sub_23A9F6FC8(-v105, v105);
  v108 = (uint64_t *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialDisturbanceScatterOffset];
  *v108 = v107;
  v108[1] = v109;
  *(_QWORD *)v171 = v107;
  *((_QWORD *)v171 + 1) = v109;
  v171[16] = 0;
  if ((v75[136] & 1) == 0)
  {
    v110 = sub_23A9CD634(v107, 0, 0x3FE0000000000000, 0);
    v111 = *(void **)&v39[v168];
    *(_QWORD *)&v39[v168] = v110;

    if ((v171[16] & 1) != 0)
      v112 = 0;
    else
      v112 = *((_QWORD *)v171 + 1);
    v113 = sub_23A9CD634(v112, v171[16], 0x3FE0000000000000, 0);
    v114 = *(void **)&v39[v169];
    *(_QWORD *)&v39[v169] = v113;

    v115 = sub_23A9CCF6C(*(_QWORD *)v177, v177[8], 0x3F847AE147AE147BLL, 0, 0, 1);
    v116 = *(void **)&v39[v170];
    *(_QWORD *)&v39[v170] = v115;

  }
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_headingSpring] = sub_23A9CD2AC(0, 0, *(uint64_t *)&a2, 0, 0x3FE0000000000000, 0);
  *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_noiseSubSpring] = sub_23A9CCC54(0, 0, 0, 1);
  if (a11)
  {
    type metadata accessor for FMPFView();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v118 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    swift_bridgeObjectRetain();
    v119 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    v120 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v119, v118, 0);

    if (v120)
    {
      v121 = objc_msgSend((id)objc_opt_self(), sel_textureWithImage_, v120);
      swift_bridgeObjectRelease();

      v118 = v120;
    }
    else
    {
      v121 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9ED0]), sel_init);
      swift_bridgeObjectRelease();
    }

    type metadata accessor for FMPFSKSpriteNode();
    v127 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithTexture_, v121);
    v128 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
    *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode] = v127;
    v124 = v127;
    objc_msgSend(v124, sel_size);
    v130 = 0.5 - 1.0 / v129 * 0.5;
    objc_msgSend(*(id *)&v39[v128], sel_size);
    v132 = 0.5 - 1.0 / v131 * 0.5;
    objc_msgSend(*(id *)&v39[v128], sel_size);
    v134 = 1.0 / v133;
    objc_msgSend(*(id *)&v39[v128], sel_size);
    objc_msgSend(v124, sel_setCenterRect_, v130, v132, v134, 1.0 / v135);

  }
  else
  {
    type metadata accessor for FMPFSKSpriteNode();
    v122 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v123 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
    *(_QWORD *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode] = v122;
    objc_msgSend(v122, sel_setTexture_, a9);
    v124 = *(id *)&v39[v123];
    if (a9)
    {
      objc_msgSend(a9, sel_size);
    }
    else
    {
      v126 = 0.0;
      v125 = 0.0;
    }
    objc_msgSend(v124, sel_setSize_, v125, v126);
  }

  v180.receiver = v39;
  v180.super_class = (Class)type metadata accessor for FMPFSKPatternFragmentNode();
  v136 = (char *)objc_msgSendSuper2(&v180, sel_init);
  v137 = v136;
  if (a7)
  {
    v138 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v138 = 0;
  }
  objc_msgSend(v136, sel_setName_, v138);

  v139 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
  objc_msgSend(v136, sel_addChild_, *(_QWORD *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode]);
  v140 = *(void **)&v136[v139];
  v141 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
  objc_msgSend(v140, sel_addChild_, *(_QWORD *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode]);
  objc_msgSend(*(id *)&v136[v141], sel_setColorBlendFactor_, 1.0);
  v142 = a23;
  v143 = a24;
  v144 = a25 & 1;
  if ((a25 & 1) != 0)
  {
    v143 = 0.0;
    v142 = 0.0;
  }
  objc_msgSend(*(id *)&v136[v141], sel_setPosition_, v142, v143);
  v145 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
  *(_QWORD *)v145 = a20;
  *((_QWORD *)v145 + 1) = a21;
  v145[16] = a22 & 1;
  v146 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
  *(double *)v146 = a23;
  *((double *)v146 + 1) = a24;
  v146[16] = v144;
  v147 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
  *(_QWORD *)v147 = a26;
  *((_QWORD *)v147 + 1) = a27;
  v147[16] = a28 & 1;
  v148 = (double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
  *v148 = a23;
  v148[1] = a24;
  *((_BYTE *)v148 + 16) = v144;
  v149 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition];
  *(_QWORD *)v149 = a20;
  *((_QWORD *)v149 + 1) = a21;
  v149[16] = a22 & 1;
  v150 = sub_23A9BFDBC();
  if ((v152 & 1) != 0)
    v153 = *(_QWORD *)&a23;
  else
    v153 = v150;
  if ((v152 & 1) != 0)
    v154 = *(_QWORD *)&a24;
  else
    v154 = v151;
  v155 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
  *(_QWORD *)v155 = v153;
  *((_QWORD *)v155 + 1) = v154;
  v155[16] = v152 & a25 & 1;
  v156 = sub_23A9C0298(*(_QWORD *)v147, *((_QWORD *)v147 + 1), v147[16], v153, v154, v152 & a25 & 1);
  v157 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
  *(_QWORD *)v157 = v156;
  v157[8] = v158 & 1;
  v159 = sub_23A9C1064(*(_QWORD *)v155, *((_QWORD *)v155 + 1), v155[16], *(_QWORD *)v146, *((_QWORD *)v146 + 1), v146[16]);
  v160 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
  *(_QWORD *)v160 = v159;
  v160[8] = v161 & 1;
  v162 = (double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) == 0)
    sub_23A9F0D4C(*v162);
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor + 8] & 1) == 0)
    sub_23A9F0FCC(*(double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor]);
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset + 16] & 1) == 0)
  {
    v163 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
    *(_OWORD *)v163 = *(_OWORD *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset];
    v163[16] = 0;
    if (((_BYTE)v162[1] & 1) == 0)
      sub_23A9F0D4C(*v162);
  }
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor + 8] & 1) == 0)
  {
    v164 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
    *(_QWORD *)v164 = *(_QWORD *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
    v164[8] = 0;
  }
  v165 = *(double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_nonConformedBrightness];
  v166 = v136;
  objc_msgSend(v166, sel_setZPosition_, v165);

  return v166;
}

uint64_t sub_23A9BFDBC()
{
  uint64_t v0;
  double v1;
  char v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
    goto LABEL_9;
  v1 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle))
  {
    v3 = swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v2 = sub_23AA33728();
  v3 = swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
LABEL_9:
    *(double *)&result = 0.0;
    return result;
  }
LABEL_6:
  v4 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius);
  v5 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style);
  sub_23A9F604C(v3, 0.0, 3.14159265);
  v7 = v6 * 0.25;
  v8 = 2.0;
  if (v1 > 0.0)
    v8 = -2.0;
  *(double *)&result = v4 * __sincos_stret(v5 * (v8 * v7) + 1.57079633).__cosval;
  return result;
}

uint64_t sub_23A9BFF18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle))
    return swift_bridgeObjectRelease();
  v2 = sub_23AA33728();
  result = swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return result;
  if (*(_BYTE *)(v0 + v1) && *(_BYTE *)(v0 + v1) == 1)
    return swift_bridgeObjectRelease();
  sub_23AA33728();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9C0100(double a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v6;

  v3 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle)
    && *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle) == 1)
  {
    swift_bridgeObjectRelease();
    return *(_QWORD *)&a1;
  }
  v4 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return *(_QWORD *)&a1;
  if (*(_BYTE *)(v1 + v3))
  {
    v6 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_23A9C0298(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  double v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  char v25;
  char v26;
  double v28;

  if ((a3 & 1) != 0 || (a6 & 1) != 0)
    return 0;
  v7 = *(double *)&a1;
  v9 = 1;
  *(double *)&v10 = COERCE_DOUBLE(sub_23A9C0100(*(double *)&a1));
  v12 = v11;
  v13 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
  v28 = *(double *)&v10;
  v15 = v14;
  v16 = 0.0;
  v17 = *(double *)&a2;
  v18 = v7;
  do
  {
    v23 = (double)v9 * 0.0625;
    v24 = 1.0 - v23;
    if (!*(_BYTE *)(v6 + v13))
      goto LABEL_10;
    v25 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_12;
    if (*(_BYTE *)(v6 + v13) && *(_BYTE *)(v6 + v13) == 1)
    {
LABEL_10:
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_23AA33728();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        goto LABEL_4;
    }
LABEL_12:
    if ((v12 & 1) != 0)
    {
LABEL_4:
      v19 = v23 * *(double *)&a4 + v24 * v18;
      v20 = v24 * v17;
      v21 = v23 * *(double *)&a5;
      goto LABEL_5;
    }
    v19 = v24 * (v23 * v28 + v24 * v18) + v23 * (v23 * *(double *)&a4 + v24 * v28);
    v21 = v24 * (v23 * v15 + v24 * v17);
    v20 = v23 * (v23 * *(double *)&a5 + v24 * v15);
LABEL_5:
    v22 = v21 + v20;
    v16 = v16 + sqrt((v22 - *(double *)&a2) * (v22 - *(double *)&a2) + (v19 - v7) * (v19 - v7));
    ++v9;
    *(double *)&a2 = v22;
    v7 = v19;
  }
  while (v9 != 17);
  return *(_QWORD *)&v16;
}

void sub_23A9C0520(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  _QWORD v11[6];

  if ((objc_msgSend(v1, sel_isHidden) & 1) == 0)
  {
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode]
       + OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_brightness;
    if ((*(_BYTE *)(v3 + 8) & 1) == 0)
    {
      v4 = *(_QWORD *)v3;
      if (!UIAccessibilityIsReduceMotionEnabled())
      {
        v5 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode];
        v6 = (_QWORD *)swift_allocObject();
        v6[2] = a1;
        v6[3] = v4;
        v6[4] = v1;
        v11[4] = sub_23A9C13D0;
        v11[5] = v6;
        v11[0] = MEMORY[0x24BDAC760];
        v11[1] = 1107296256;
        v11[2] = sub_23A9C4DBC;
        v11[3] = &unk_250BC2AE8;
        v7 = _Block_copy(v11);
        v8 = v5;
        v9 = a1;
        v10 = v1;
        swift_release();
        objc_msgSend(v8, sel_runAction_completion_, v9, v7);
        _Block_release(v7);

      }
    }
  }
}

void sub_23A9C0654()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  long double v4;
  long double v5;
  double v6;
  char v7;
  uint64_t v8;
  double v9;
  char v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  id v15;
  void *v16;
  id v17;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode)
       + OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_brightness;
    if ((*(_BYTE *)(v2 + 8) & 1) == 0)
    {
      v3 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction;
      if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction))
      {
        v5 = *(double *)v1;
        v4 = *((double *)v1 + 1);
        v6 = *(double *)v2;
        v7 = sub_23A9644D8(11);
        v8 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style;
        v9 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 32) * 100.0;
        if (v9 < 0.0)
        {
          __break(1u);
        }
        else
        {
          v10 = v7;
          v11 = hypot(v5, v4);
          v12 = dbl_23AA36AE0[(v10 & 1) == 0];
          sub_23A9F604C(v13, 0.0, v9);
          v15 = objc_msgSend((id)objc_opt_self(), sel_rotateByAngle_duration_, v12 / (double)*(uint64_t *)(v8 + 48), (v11 + v11)* 3.14159265/ (*(double *)(v8 + 24)* (v14 / -100.0 + 1.0))/ (double)*(uint64_t *)(v8 + 48));
          objc_msgSend(v15, sel_setTimingMode_, 0);
          objc_msgSend(v15, sel_setSpeed_, v6 * *(double *)(v8 + 40));
          v16 = *(void **)(v0 + v3);
          *(_QWORD *)(v0 + v3) = v15;
          v17 = v15;

          sub_23A9C0520(v17);
        }
      }
    }
  }
}

void sub_23A9C0808()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char *v4;
  char *v5;
  long double v6;
  uint64_t v7;
  long double v8;
  long double v9;
  double v10;
  long double v11;
  double v12;
  double v13;
  double v14;
  long double v15;
  __double2 v16;
  double v17;
  long double v18;
  __double2 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  char *v31;
  char v32;

  v1 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction])
  {
    v2 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode], sel_removeAllActions);
    v3 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = 0;

    v4 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
    if ((v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16] & 1) == 0)
    {
      v5 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
      if ((v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition + 16] & 1) == 0)
      {
        v7 = *(_QWORD *)v4;
        v6 = *((double *)v4 + 1);
        v9 = *(double *)v5;
        v8 = *((double *)v5 + 1);
        v10 = fmod(*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading]/ 180.0* 3.14159265, 6.28318531);
        if (v10 <= 3.14159265)
        {
          if (v10 < -3.14159265)
            v10 = v10 + 6.28318531;
        }
        else
        {
          v10 = v10 + -6.28318531;
        }
        objc_msgSend(*(id *)&v0[v2], sel_zRotation);
        v12 = fmod(v11, 6.28318531);
        if (v12 <= 3.14159265)
        {
          if (v12 < -3.14159265)
            v12 = v12 + 6.28318531;
        }
        else
        {
          v12 = v12 + -6.28318531;
        }
        v13 = v10 + v12;
        v14 = hypot(*(long double *)&v7, v6);
        v15 = atan2(v6, *(long double *)&v7);
        v16 = __sincos_stret(v13 + v15);
        *(double *)v4 = v14 * v16.__cosval;
        *((double *)v4 + 1) = v14 * v16.__sinval;
        v4[16] = 0;
        sub_23A9C0AB8();
        v17 = hypot(v9, v8);
        v18 = atan2(v8, v9);
        v19 = __sincos_stret(v13 + v18);
        *(double *)v5 = v17 * v19.__cosval;
        *((double *)v5 + 1) = v17 * v19.__sinval;
        v5[16] = 0;
      }
    }
    objc_msgSend(*(id *)&v0[v2], sel_setZRotation_, 0.0);
    objc_msgSend(v0, sel_setZRotation_, 0.0);
    v20 = sub_23A9BFDBC();
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)v4;
      v24 = *((_QWORD *)v4 + 1);
      v25 = v4[16];
    }
    else
    {
      v23 = v20;
      v24 = v21;
      v25 = 0;
    }
    v26 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
    *(_QWORD *)v26 = v23;
    *((_QWORD *)v26 + 1) = v24;
    v26[16] = v25;
    v27 = sub_23A9C0298(*(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition], *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8], v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16], v23, v24, v25);
    v28 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
    *(_QWORD *)v28 = v27;
    v28[8] = v29 & 1;
    v30 = sub_23A9C1064(*(_QWORD *)v26, *((_QWORD *)v26 + 1), v26[16], *(_QWORD *)v4, *((_QWORD *)v4 + 1), v4[16]);
    v31 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
    *(_QWORD *)v31 = v30;
    v31[8] = v32 & 1;
    if ((v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) == 0)
      sub_23A9F0D4C(*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor]);
  }
}

uint64_t sub_23A9C0AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  char v13;

  v1 = sub_23A9BFDBC();
  if ((v3 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 8);
    v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16);
  }
  else
  {
    v4 = v1;
    v5 = v2;
    v6 = 0;
  }
  v7 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition;
  *(_QWORD *)v7 = v4;
  *(_QWORD *)(v7 + 8) = v5;
  *(_BYTE *)(v7 + 16) = v6;
  v8 = sub_23A9C0298(*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition), *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16), v4, v5, v6);
  v9 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength;
  *(_QWORD *)v9 = v8;
  *(_BYTE *)(v9 + 8) = v10 & 1;
  result = sub_23A9C1064(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition), *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16));
  v12 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength;
  *(_QWORD *)v12 = result;
  *(_BYTE *)(v12 + 8) = v13 & 1;
  return result;
}

__n128 sub_23A9C0B7C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  __n128 *v17;
  __n128 result;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_experienceType) != 1)
  {
    v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition + 16);
    v2 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
    *(_OWORD *)v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition);
    *(_BYTE *)(v2 + 16) = v1;
    sub_23A9C0AB8();
    v3 = sub_23A9BFDBC();
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)v2;
      v7 = *(_QWORD *)(v2 + 8);
      v8 = *(_BYTE *)(v2 + 16);
    }
    else
    {
      v6 = v3;
      v7 = v4;
      v8 = 0;
    }
    v9 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition;
    *(_QWORD *)v9 = v6;
    *(_QWORD *)(v9 + 8) = v7;
    *(_BYTE *)(v9 + 16) = v8;
    v10 = sub_23A9C0298(*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition), *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16), v6, v7, v8);
    v11 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength;
    *(_QWORD *)v11 = v10;
    *(_BYTE *)(v11 + 8) = v12 & 1;
    v13 = sub_23A9C1064(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_BYTE *)(v9 + 16), *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
    v14 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength;
    *(_QWORD *)v14 = v13;
    *(_BYTE *)(v14 + 8) = v15 & 1;
    v16 = *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition + 16);
    v17 = (__n128 *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition);
    result = *(__n128 *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition);
    *v17 = result;
    v17[1].n128_u8[0] = v16;
  }
  return result;
}

void sub_23A9C0C94(char a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v9;
  double *v10;
  double *v11;
  uint64_t v12;
  double v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  double *v17;
  double *v18;

  v4 = v3;
  v5 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring);
  if (v5
    && (v6 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring)) != 0)
  {
    v9 = v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset;
    *(double *)v9 = a2;
    *(double *)(v9 + 8) = a3;
    *(_BYTE *)(v9 + 16) = 0;
    if ((a1 & 1) == 0
      || (v10 = (double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s],
          swift_beginAccess(),
          v10[35] + *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40] == 1.79769313e308)
      || (v11 = (double *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s],
          swift_beginAccess(),
          v11[35] + *(double *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40] == 1.79769313e308))
    {
      sub_23A9829AC(a2);
      v5[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
      sub_23A9829AC(a3);
      v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
      v12 = v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset;
      *(double *)v12 = a2;
      *(double *)(v12 + 8) = a3;
      *(_BYTE *)(v12 + 16) = 0;
      if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8) & 1) == 0)
      {
        v13 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor);
        v14 = v5;
        v15 = v6;
        sub_23A9F0D4C(v13);

      }
    }
    else
    {
      v17 = (double *)&v5[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
      *v17 = a2;
      *((_BYTE *)v17 + 8) = 0;
      sub_23A9CC9DC();
      v18 = (double *)&v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
      *v18 = a3;
      *((_BYTE *)v18 + 8) = 0;
      sub_23A9CC9DC();
    }
  }
  else
  {
    v16 = v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset;
    *(_BYTE *)(v16 + 16) = 0;
    *(_QWORD *)v16 = 0;
    *(_QWORD *)(v16 + 8) = 0;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8) & 1) == 0)
      sub_23A9F0D4C(*(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor));
  }
}

void sub_23A9C0ED0()
{
  uint64_t v0;

}

id sub_23A9C0F6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKPatternFragmentNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKPatternFragmentNode()
{
  return objc_opt_self();
}

uint64_t sub_23A9C1064(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  double v11;
  double v12;
  double v13;
  double v14;

  if (((a3 | a6) & 1) != 0)
    return 0;
  v11 = hypot(*(long double *)&a4, *(long double *)&a5);
  v12 = atan2(*(long double *)&a2, *(long double *)&a1);
  v13 = atan2(*(long double *)&a5, *(long double *)&a4);
  v14 = v13 - v12;
  if (vabdd_f64(v13, v12) > 3.14159265)
  {
    if (v12 >= 0.0 || v13 < 0.0)
    {
      if (v13 < 0.0 && v12 >= 0.0)
        v14 = v14 + 6.28318531;
    }
    else
    {
      v14 = v14 + -6.28318531;
    }
  }
  return fabs((v11 + v11) * v14);
}

double sub_23A9C1148(long double a1, long double a2, long double a3, long double a4, double a5)
{
  double v8;
  double v9;
  double v10;
  double v12;

  v8 = atan2(a2, a1);
  v9 = atan2(a4, a3);
  v10 = v9 - v8;
  if (vabdd_f64(v9, v8) > 3.14159265)
  {
    if (v8 >= 0.0 || v9 < 0.0)
    {
      if (v9 < 0.0 && v8 >= 0.0)
        v10 = v10 + 6.28318531;
    }
    else
    {
      v10 = v10 + -6.28318531;
    }
  }
  v12 = hypot(a3, a4);
  return v12 * __sincos_stret((1.0 - a5) * v8 + (v8 + v10) * a5).__cosval;
}

void sub_23A9C1228(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  long double v10;
  double v11;
  long double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  v5 = 0.0;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0
    || (v6 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition,
        (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition + 16) & 1) != 0)
    || (v7 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition,
        (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
    || (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength + 8) & 1) != 0
    || (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength + 8) & 1) != 0)
  {
    v8 = 1;
    v9 = 0;
    v10 = 0.0;
    v11 = 0.0;
  }
  else
  {
    v12 = *(double *)v6;
    v10 = *(double *)v7;
    v13 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength);
    v14 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength);
    v15 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset + 8))
      v15 = 0.0;
    v16 = *(double *)(v6 + 8) - v15;
    v11 = *(double *)(v7 + 8) - v15;
    v17 = 1.0 - a2;
    sub_23A9C0100(*(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition));
    v18 = v14 / (v13 + v14);
    if (v17 <= v18)
      sub_23A9BFF18();
    else
      v5 = sub_23A9C1148(v12, v16, v10, v11, (v17 - v18) / (v13 / (v13 + v14)));
    v8 = 0;
  }
  *(double *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v9;
  *(long double *)(a1 + 16) = v10;
  *(double *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = v8;
}

uint64_t sub_23A9C13A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A9C13D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_setSpeed_, *(double *)(v0 + 24)* *(double *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 40));
  return sub_23A9C0520(v1);
}

uint64_t sub_23A9C1420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9C1430()
{
  return swift_release();
}

void sub_23A9C1438()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v1 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFSKNode()), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbScatterRandomOffsetFrameCounter] = 0;
  v2 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 1;
  v3 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v4 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction] = 0;
  v6 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v7 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_relativeHeading];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring] = 0;
  v8 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v10 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_useAlternateScaling] = 0;
  v11 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  v12 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceScatterOffset] = 1;
  v15 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v16 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceHomingFactor] = 1;
  v17 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading] = 0;

  sub_23AA335A8();
  __break(1u);
}

id sub_23A9C1698()
{
  id v0;
  void *v1;
  id v2;
  id result;

  v0 = objc_allocWithZone(MEMORY[0x24BE2FE30]);
  v1 = (void *)sub_23AA32FB4();
  v2 = objc_msgSend(v0, sel_initWithDefaultsSuiteName_, v1);

  result = objc_msgSend(v2, sel_setMeasurementSystem_, 1);
  qword_2569E0328 = (uint64_t)v2;
  return result;
}

uint64_t sub_23A9C1748(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_23A9C17C8();
  sub_23A9A052C();
  v8 = sub_23AA3317C();
  v9 = a4;
  v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

unint64_t sub_23A9C17C8()
{
  unint64_t result;

  result = qword_2569D6488;
  if (!qword_2569D6488)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D6488);
  }
  return result;
}

void sub_23A9C1804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD v30[6];

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = objc_msgSend(v4, sel_fmpfDebugMode);

  if (v5 && (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) & 1) == 0)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) = 1;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches) = 1;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_23AA3347C();
      sub_23A9C17C8();
      sub_23A9A052C();
      sub_23AA331A0();
      a1 = v30[1];
      v29 = v30[2];
      v6 = v30[3];
      v7 = v30[4];
      v8 = v30[5];
    }
    else
    {
      v9 = -1 << *(_BYTE *)(a1 + 32);
      v29 = a1 + 56;
      v6 = ~v9;
      v10 = -v9;
      if (v10 < 64)
        v11 = ~(-1 << v10);
      else
        v11 = -1;
      v8 = v11 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v7 = 0;
    }
    v28 = (unint64_t)(v6 + 64) >> 6;
    while (1)
    {
      if (a1 < 0)
      {
        if (!sub_23AA334B8())
          goto LABEL_39;
        sub_23A9C17C8();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v19 = (id)v30[0];
        swift_unknownObjectRelease();
        v18 = v7;
        v16 = v8;
        if (!v19)
          goto LABEL_39;
      }
      else
      {
        if (v8)
        {
          v16 = (v8 - 1) & v8;
          v17 = __clz(__rbit64(v8)) | (v7 << 6);
          v18 = v7;
        }
        else
        {
          v20 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
            return;
          }
          if (v20 >= v28)
            goto LABEL_39;
          v21 = *(_QWORD *)(v29 + 8 * v20);
          v18 = v7 + 1;
          if (!v21)
          {
            v18 = v7 + 2;
            if (v7 + 2 >= v28)
              goto LABEL_39;
            v21 = *(_QWORD *)(v29 + 8 * v18);
            if (!v21)
            {
              v18 = v7 + 3;
              if (v7 + 3 >= v28)
                goto LABEL_39;
              v21 = *(_QWORD *)(v29 + 8 * v18);
              if (!v21)
              {
                v18 = v7 + 4;
                if (v7 + 4 >= v28)
                  goto LABEL_39;
                v21 = *(_QWORD *)(v29 + 8 * v18);
                if (!v21)
                {
                  v22 = v7 + 5;
                  while (v28 != v22)
                  {
                    v21 = *(_QWORD *)(v29 + 8 * v22++);
                    if (v21)
                    {
                      v18 = v22 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_39:
                  sub_23A9ABA5C();
                  return;
                }
              }
            }
          }
LABEL_32:
          v16 = (v21 - 1) & v21;
          v17 = __clz(__rbit64(v21)) + (v18 << 6);
        }
        v19 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v17);
        if (!v19)
          goto LABEL_39;
      }
      objc_msgSend(v19, sel_locationInNode_, v2);
      v25 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation;
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation + 16) == 1)
      {
        *(_QWORD *)v25 = v23;
        *(_QWORD *)(v25 + 8) = v24;
        *(_BYTE *)(v25 + 16) = 0;
        v30[0] = 0;
        v26 = MEMORY[0x23B85DB3C](v30, 8);
        v27 = v30[0];
        if ((unint64_t)(11 * v30[0]) <= 4)
        {
          do
          {
            v30[0] = 0;
            v26 = MEMORY[0x23B85DB3C](v30, 8);
            v27 = v30[0];
          }
          while ((unint64_t)(11 * v30[0]) < 5);
        }
        if ((((v27 * (unsigned __int128)0xBuLL) >> 64) & 1) != 0)
        {
          v12 = 45.0;
          v13 = 180.0;
        }
        else
        {
          v12 = -180.0;
          v13 = -45.0;
        }
        sub_23A9F604C(v26, v12, v13);
        v14 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing;
        *(_QWORD *)v14 = v15;
        *(_BYTE *)(v14 + 8) = 0;
      }

      v7 = v18;
      v8 = v16;
    }
  }
}

void sub_23A9C1BB4(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  uint64_t ObjectType;
  double v43;
  _BOOL4 v44;
  int64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  if (v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches] == 1)
  {
    v2 = v1;
    v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v5 = objc_msgSend(v4, sel_fmpfDebugMode);

    if (v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_23AA3347C();
        sub_23A9C17C8();
        sub_23A9A052C();
        sub_23AA331A0();
        a1 = v47;
        v6 = v48;
        v7 = v49;
        v8 = v50;
        v9 = v51;
      }
      else
      {
        v10 = -1 << *(_BYTE *)(a1 + 32);
        v6 = a1 + 56;
        v11 = ~v10;
        v12 = -v10;
        if (v12 < 64)
          v13 = ~(-1 << v12);
        else
          v13 = -1;
        v9 = v13 & *(_QWORD *)(a1 + 56);
        swift_bridgeObjectRetain();
        v7 = v11;
        v8 = 0;
      }
      v14 = (unint64_t)(v7 + 64) >> 6;
      v45 = v14;
      if ((a1 & 0x8000000000000000) == 0)
        goto LABEL_14;
LABEL_10:
      if (sub_23AA334B8())
      {
        sub_23A9C17C8();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v15 = v46;
        swift_unknownObjectRelease();
        v16 = v8;
        v17 = v9;
        if (v46)
        {
          do
          {
            objc_msgSend(v15, sel_locationInNode_, v2);
            v24 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation];
            if ((v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation + 16] & 1) != 0
              || (v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing + 8] & 1) != 0)
            {

              v8 = v16;
              v9 = v17;
              if (a1 < 0)
                goto LABEL_10;
            }
            else
            {
              v25 = v22;
              v26 = v23;
              v27 = *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing];
              v28 = *v24;
              v29 = v24[1];
              objc_msgSend(v2, sel_size);
              v31 = v30;
              objc_msgSend(v2, sel_size);
              v33 = v32;
              v34 = MEMORY[0x23B85DBF0](&v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]);
              if (v34)
              {
                v35 = v34;
                v36 = v34 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
                if (MEMORY[0x23B85DBF0](v34 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate))
                {
                  v37 = *(_QWORD *)(v36 + 8);
                  v44 = vabdd_f64(v28, v25) < vabdd_f64(v29, v26);
                  v38 = hypot(v25 - v28, v26 - v29);
                  if (v33 >= v31)
                    v39 = v31;
                  else
                    v39 = v33;
                  v40 = v6;
                  v41 = fmin(v38 / (v39 * 0.66), 1.0);
                  ObjectType = swift_getObjectType();
                  v43 = v41;
                  v6 = v40;
                  (*(void (**)(double, _QWORD, _BOOL4, uint64_t, uint64_t, uint64_t, double))(v37 + 88))(COERCE_DOUBLE(*(_QWORD *)&v43), 0, v44, v35, ObjectType, v37, v27);

                  swift_unknownObjectRelease();
                }
                else
                {

                }
                swift_unknownObjectRelease();
              }
              else
              {

              }
              v8 = v16;
              v9 = v17;
              v14 = v45;
              if (a1 < 0)
                goto LABEL_10;
            }
LABEL_14:
            if (v9)
            {
              v17 = (v9 - 1) & v9;
              v18 = __clz(__rbit64(v9)) | (v8 << 6);
              v16 = v8;
            }
            else
            {
              v19 = v8 + 1;
              if (__OFADD__(v8, 1))
              {
                __break(1u);
                return;
              }
              if (v19 >= v14)
                break;
              v20 = *(_QWORD *)(v6 + 8 * v19);
              v16 = v8 + 1;
              if (!v20)
              {
                v16 = v8 + 2;
                if (v8 + 2 >= v14)
                  break;
                v20 = *(_QWORD *)(v6 + 8 * v16);
                if (!v20)
                {
                  v16 = v8 + 3;
                  if (v8 + 3 >= v14)
                    break;
                  v20 = *(_QWORD *)(v6 + 8 * v16);
                  if (!v20)
                  {
                    v16 = v8 + 4;
                    if (v8 + 4 >= v14)
                      break;
                    v20 = *(_QWORD *)(v6 + 8 * v16);
                    if (!v20)
                    {
                      v21 = v8 + 5;
                      while (v14 != v21)
                      {
                        v20 = *(_QWORD *)(v6 + 8 * v21++);
                        if (v20)
                        {
                          v16 = v21 - 1;
                          goto LABEL_29;
                        }
                      }
                      break;
                    }
                  }
                }
              }
LABEL_29:
              v17 = (v20 - 1) & v20;
              v18 = __clz(__rbit64(v20)) + (v16 << 6);
            }
            v15 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v18);
          }
          while (v15);
        }
      }
      sub_23A9ABA5C();
    }
  }
}

void sub_23A9C1FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches) == 1)
  {
    v2 = v1;
    v3 = a1;
    v25 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_23AA3347C();
      sub_23A9C17C8();
      sub_23A9A052C();
      sub_23AA331A0();
      v3 = v29;
      v27 = v30;
      v4 = v31;
      v5 = v32;
      v6 = v33;
    }
    else
    {
      v7 = -1 << *(_BYTE *)(a1 + 32);
      v27 = a1 + 56;
      v4 = ~v7;
      v8 = -v7;
      if (v8 < 64)
        v9 = ~(-1 << v8);
      else
        v9 = -1;
      v6 = v9 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v5 = 0;
    }
    v26 = (unint64_t)(v4 + 64) >> 6;
    while (1)
    {
      if (v3 < 0)
      {
        if (!sub_23AA334B8())
          goto LABEL_38;
        sub_23A9C17C8();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v15 = v28;
        swift_unknownObjectRelease();
        v14 = v5;
        v12 = v6;
        if (!v28)
          goto LABEL_38;
      }
      else
      {
        if (v6)
        {
          v12 = (v6 - 1) & v6;
          v13 = __clz(__rbit64(v6)) | (v5 << 6);
          v14 = v5;
        }
        else
        {
          v16 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            return;
          }
          if (v16 >= v26)
            goto LABEL_38;
          v17 = *(_QWORD *)(v27 + 8 * v16);
          v14 = v5 + 1;
          if (!v17)
          {
            v14 = v5 + 2;
            if (v5 + 2 >= v26)
              goto LABEL_38;
            v17 = *(_QWORD *)(v27 + 8 * v14);
            if (!v17)
            {
              v14 = v5 + 3;
              if (v5 + 3 >= v26)
                goto LABEL_38;
              v17 = *(_QWORD *)(v27 + 8 * v14);
              if (!v17)
              {
                v14 = v5 + 4;
                if (v5 + 4 >= v26)
                  goto LABEL_38;
                v17 = *(_QWORD *)(v27 + 8 * v14);
                if (!v17)
                {
                  v18 = v5 + 5;
                  while (v26 != v18)
                  {
                    v17 = *(_QWORD *)(v27 + 8 * v18++);
                    if (v17)
                    {
                      v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_38:
                  sub_23A9ABA5C();
                  *(_BYTE *)(v2 + v25) = 0;
                  *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) = 0;
                  return;
                }
              }
            }
          }
LABEL_31:
          v12 = (v17 - 1) & v17;
          v13 = __clz(__rbit64(v17)) + (v14 << 6);
        }
        v15 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        if (!v15)
          goto LABEL_38;
      }
      objc_msgSend(v15, sel_locationInNode_, v2);
      if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing + 8) & 1) == 0
        && (*(_BYTE *)(v2 + 16 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation) & 1) == 0)
      {
        v19 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing);
        v20 = MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
        if (v20)
        {
          v21 = v20;
          v22 = v20 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
          if (MEMORY[0x23B85DBF0](v20 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate))
          {
            v23 = *(_QWORD *)(v22 + 8);
            ObjectType = swift_getObjectType();
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double))(v23 + 88))(0, 1, 2, v21, ObjectType, v23, v19);
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        v10 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation;
        *(_QWORD *)v10 = 0;
        *(_QWORD *)(v10 + 8) = 0;
        *(_BYTE *)(v10 + 16) = 1;
        v11 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing;
        *(_QWORD *)v11 = 0;
        *(_BYTE *)(v11 + 8) = 1;
      }

      v5 = v14;
      v6 = v12;
    }
  }
}

void sub_23A9C2390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches) == 1)
  {
    v2 = a1;
    v19 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_23AA3347C();
      sub_23A9C17C8();
      sub_23A9A052C();
      sub_23AA331A0();
      v2 = v23;
      v21 = v24;
      v3 = v25;
      v4 = v26;
      v5 = v27;
    }
    else
    {
      v6 = -1 << *(_BYTE *)(a1 + 32);
      v21 = a1 + 56;
      v3 = ~v6;
      v7 = -v6;
      if (v7 < 64)
        v8 = ~(-1 << v7);
      else
        v8 = -1;
      v5 = v8 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v4 = 0;
    }
    v18 = v3;
    v20 = (unint64_t)(v3 + 64) >> 6;
    if (v2 < 0)
      goto LABEL_11;
    while (1)
    {
      if (v5)
      {
        v9 = (v5 - 1) & v5;
        v10 = __clz(__rbit64(v5)) | (v4 << 6);
        v11 = v4;
      }
      else
      {
        v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v13 >= v20)
          goto LABEL_31;
        v14 = *(_QWORD *)(v21 + 8 * v13);
        v11 = v4 + 1;
        if (!v14)
        {
          v11 = v4 + 2;
          if (v4 + 2 >= v20)
            goto LABEL_31;
          v14 = *(_QWORD *)(v21 + 8 * v11);
          if (!v14)
          {
            v11 = v4 + 3;
            if (v4 + 3 >= v20)
              goto LABEL_31;
            v14 = *(_QWORD *)(v21 + 8 * v11);
            if (!v14)
            {
              v11 = v4 + 4;
              if (v4 + 4 >= v20)
                goto LABEL_31;
              v14 = *(_QWORD *)(v21 + 8 * v11);
              if (!v14)
              {
                v15 = v4 + 5;
                while (v20 != v15)
                {
                  v14 = *(_QWORD *)(v21 + 8 * v15++);
                  if (v14)
                  {
                    v11 = v15 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_23A9ABA5C();
                *(_BYTE *)(v1 + v19) = 0;
                *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) = 0;
                return;
              }
            }
          }
        }
LABEL_27:
        v9 = (v14 - 1) & v14;
        v10 = __clz(__rbit64(v14)) + (v11 << 6);
      }
      v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
      if (!v12)
        goto LABEL_31;
      while (1)
      {
        objc_msgSend(v12, sel_locationInNode_, v1, v18);

        v16 = v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation;
        *(_QWORD *)v16 = 0;
        *(_QWORD *)(v16 + 8) = 0;
        *(_BYTE *)(v16 + 16) = 1;
        v17 = v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing;
        *(_QWORD *)v17 = 0;
        *(_BYTE *)(v17 + 8) = 1;
        v4 = v11;
        v5 = v9;
        if ((v2 & 0x8000000000000000) == 0)
          break;
LABEL_11:
        if (sub_23AA334B8())
        {
          sub_23A9C17C8();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v12 = v22;
          swift_unknownObjectRelease();
          v11 = v4;
          v9 = v5;
          if (v22)
            continue;
        }
        goto LABEL_31;
      }
    }
  }
}

void sub_23A9C2688()
{
  off_2569D7178 = &unk_250BBEC48;
}

uint64_t sub_23A9C269C@<X0>(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[6];
  unsigned int v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v28;
  _OWORD v29[6];
  unsigned int v30;
  unsigned __int8 v31;

  sub_23A963B5C(v2, (uint64_t)v29);
  if (*a1 < 0)
  {
    result = sub_23A9C2898((uint64_t)v24);
    v8 = v24[0];
    v12 = v24[1];
    v13 = v24[2];
    v14 = v24[3];
    v15 = v24[4];
    v16 = v24[5];
    v9 = v25 | ((unint64_t)v26 << 32);
    v10 = v27;
    v11 = v28;
  }
  else
  {
    v18 = v29[0];
    v19 = v29[1];
    v20 = v29[2];
    v21 = v29[3];
    v22 = v29[4];
    v23 = v29[5];
    v5 = v31;
    v6 = v30;
    result = sub_23A963B5C(v2, (uint64_t)v24);
    v8 = 0uLL;
    v9 = 83886080;
    if ((v25 & 0xFF000000) == 0x4000000)
    {
      v10 = 0;
      v11 = 1;
      goto LABEL_7;
    }
    if ((v25 & 0xFF000000) == 0x5000000)
    {
      v10 = 0;
      v11 = 1;
      v9 = 0x301000000;
LABEL_7:
      v12 = 0uLL;
      v13 = 0uLL;
      v14 = 0uLL;
      v15 = 0uLL;
      v16 = 0uLL;
      goto LABEL_10;
    }
    v17 = v6 | (v5 << 32);
    if ((v25 & 0xFE000000) != 0x6000000)
      __asm { BR              X14 }
    result = sub_23A963ED4((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
    v10 = 0;
    v11 = 1;
    v9 = v17;
    v8 = v18;
    v12 = v19;
    v13 = v20;
    v14 = v21;
    v15 = v22;
    v16 = v23;
  }
LABEL_10:
  *(_OWORD *)a2 = v8;
  *(_OWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 64) = v15;
  *(_OWORD *)(a2 + 80) = v16;
  *(_DWORD *)(a2 + 96) = v9;
  *(_BYTE *)(a2 + 100) = BYTE4(v9);
  *(_QWORD *)(a2 + 104) = v10;
  *(_BYTE *)(a2 + 112) = v11;
  return result;
}

void sub_23A9C2844()
{
  JUMPOUT(0x23A9C27CCLL);
}

void sub_23A9C2850()
{
  JUMPOUT(0x23A9C27CCLL);
}

void sub_23A9C2860()
{
  JUMPOUT(0x23A9C27CCLL);
}

void sub_23A9C286C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30)
{
  sub_23A963C40(a27, a28, a29, a30);
  JUMPOUT(0x23A9C27B4);
}

uint64_t sub_23A9C2898@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  double *v29;
  char *v30;
  double v31;
  double v32;
  int v33;
  int v34;
  double v35;
  double v36;
  double v37;
  double v38;
  BOOL v39;
  double v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _QWORD v59[12];
  unsigned int v60;
  unsigned __int8 v61;
  char v62[16];
  uint64_t v63;
  int64_t v64;
  int v65;

  v2 = v1;
  sub_23A963B5C(v1, (uint64_t)v59);
  v55 = v59[1];
  v57 = v59[0];
  v4 = v59[5];
  v50 = (void *)v59[3];
  v51 = v59[4];
  v52 = v59[6];
  v5 = v59[8];
  v53 = v59[7];
  v54 = (void *)v59[2];
  v7 = v59[9];
  v6 = v59[10];
  v8 = v59[11];
  v9 = v61;
  v10 = v60;
  result = sub_23A963B5C(v2, (uint64_t)v62);
  v12 = 83886080;
  if ((v65 & 0xFF000000) == 0x4000000)
  {
    v23 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v22 = 0;
    v16 = 0;
    v17 = 0.0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v6 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0x3FF0000000000000;
    goto LABEL_20;
  }
  if ((v65 & 0xFF000000) == 0x5000000)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0.0;
    v18 = 0;
    v6 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0x3FF0000000000000;
    v22 = 0x7FEFFFFFFFFFFFFFLL;
    v23 = 0x4014000000000000;
    v12 = 0x303040000;
    v7 = 0x10000;
    v5 = 0x4014000000000000;
LABEL_20:
    *(_QWORD *)a1 = v23;
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v22;
    *(_QWORD *)(a1 + 40) = v16;
    *(double *)(a1 + 48) = v17;
    *(_QWORD *)(a1 + 56) = v18;
    *(_QWORD *)(a1 + 64) = v5;
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v6;
    *(_QWORD *)(a1 + 88) = v19;
    *(_DWORD *)(a1 + 96) = v12;
    *(_BYTE *)(a1 + 100) = BYTE4(v12);
    *(_QWORD *)(a1 + 104) = v21;
    *(_BYTE *)(a1 + 112) = v20;
    return result;
  }
  v12 = v10 | (v9 << 32);
  if ((v65 & 0xFE000000) == 0x6000000)
  {
    result = sub_23A963ED4((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
    v21 = 0;
    v20 = 1;
    v16 = v4;
    v19 = v8;
    v17 = *(double *)&v52;
    v18 = v53;
    v15 = v50;
    v22 = v51;
    v13 = v55;
    v23 = v57;
    v14 = v54;
    goto LABEL_20;
  }
  v24 = v8;
  if ((v65 & 0xFF0000) != 0x40000)
  {
    v47 = v8;
    v22 = v51;
    v25 = v4;
    v26 = v4;
    v17 = *(double *)&v52;
    v18 = v53;
    v48 = v24;
    result = sub_23A963C14(v57, v55, v54, v50, v51, v26, v52, v53, v5, v7, v6, v47, v12, SBYTE2(v12));
    v19 = v48;
    v16 = v25;
    v15 = v50;
    v14 = v54;
    v13 = v55;
    v23 = v57;
    v21 = 0;
    v20 = 1;
    goto LABEL_20;
  }
  if (v63 == 1)
  {
    result = sub_23A963C14(v57, v55, v54, v50, v51, v4, v52, v53, v5, v7, v6, v8, v10, SBYTE2(v10));
LABEL_19:
    v23 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v22 = 0;
    v16 = 0;
    v17 = 0.0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v6 = 0;
    v19 = 0;
    v21 = 0;
    v20 = 1;
    v12 = 0x4000000;
    goto LABEL_20;
  }
  if ((v65 & 1) != 0)
    goto LABEL_19;
  v27 = v64;
  result = sub_23A963C14(v57, v55, v54, v50, v51, v4, v52, v53, v5, v7, v6, v8, v12, SBYTE2(v12));
  if (qword_2569D4B40 != -1)
    result = swift_once();
  v28 = *((_QWORD *)off_2569D7178 + 2);
  if (v27 >= (uint64_t)(v28 - 1))
  {
    result = sub_23A963ED4((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    goto LABEL_19;
  }
  if (v27 + 1 < v28)
  {
    v49 = v27 + 1;
    v29 = (double *)((char *)off_2569D7178 + 40 * v27 + 40);
    v31 = v29[4];
    v30 = (char *)(v29 + 4);
    v32 = v31;
    v33 = v30[16];
    v34 = v30[17];
    v58 = v30[32];
    v56 = *((_QWORD *)v30 + 3);
    if ((v33 & 1) != 0)
    {
      v35 = 0.0;
      v36 = 1.79769313e308;
    }
    else
    {
      v36 = *((double *)v30 + 1);
      v37 = (v32 + -1.0) / 9.0;
      v38 = fmin(v37, 1.0);
      v39 = v37 < 0.0;
      v40 = 0.0;
      if (!v39)
        v40 = v38;
      v35 = v40 * 45.0 + (1.0 - v40) * 20.0;
    }
    v12 = 0x303040000;
    if (fabs(v36) <= v35)
      v41 = v33 ^ 1u;
    else
      v41 = 0;
    v42 = v34 == 0;
    v43 = 256;
    if (v42)
      v43 = 0;
    v18 = v43 | v41;
    v44 = *(_QWORD *)&v32;
    v17 = v35;
    v45 = (uint64_t)v2;
    v22 = *(_QWORD *)&v36;
    v46 = v33 ^ 1u;
    result = sub_23A963ED4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    v16 = v46;
    v23 = v44;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v6 = 0;
    v7 = 0x10000;
    v5 = v23;
    v19 = v49;
    v20 = v58;
    v21 = v56;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9C2CD0@<X0>(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[6];
  unsigned int v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v28;
  _OWORD v29[6];
  unsigned int v30;
  unsigned __int8 v31;

  sub_23A963B5C(v2, (uint64_t)v29);
  if (*a1 < 0)
  {
    result = sub_23A9C2EE0((uint64_t)v24);
    v8 = v24[0];
    v12 = v24[1];
    v13 = v24[2];
    v14 = v24[3];
    v15 = v24[4];
    v16 = v24[5];
    v11 = v25 | ((unint64_t)v26 << 32);
    v9 = v27;
    v10 = v28;
  }
  else
  {
    v18 = v29[0];
    v19 = v29[1];
    v20 = v29[2];
    v21 = v29[3];
    v22 = v29[4];
    v23 = v29[5];
    v5 = v31;
    v6 = v30;
    result = sub_23A963B5C(v2, (uint64_t)v24);
    v8 = 0uLL;
    if ((v25 & 0xFF000000) == 0x4000000)
    {
      v9 = 0;
      v10 = 1;
      v11 = 0x303030000;
      goto LABEL_7;
    }
    if ((v25 & 0xFF000000) == 0x5000000)
    {
      v9 = 0;
      v10 = 1;
      v11 = 0x4000000;
LABEL_7:
      v12 = 0uLL;
      v13 = 0uLL;
      v14 = 0uLL;
      v15 = 0uLL;
      v16 = 0uLL;
      goto LABEL_10;
    }
    v17 = v6 | (v5 << 32);
    if ((v25 & 0xFE000000) != 0x6000000)
      __asm { BR              X13 }
    result = sub_23A963ED4((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
    v9 = 0;
    v10 = 1;
    v11 = v17;
    v8 = v18;
    v12 = v19;
    v13 = v20;
    v14 = v21;
    v15 = v22;
    v16 = v23;
  }
LABEL_10:
  *(_OWORD *)a2 = v8;
  *(_OWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 64) = v15;
  *(_OWORD *)(a2 + 80) = v16;
  *(_DWORD *)(a2 + 96) = v11;
  *(_BYTE *)(a2 + 100) = BYTE4(v11);
  *(_QWORD *)(a2 + 104) = v9;
  *(_BYTE *)(a2 + 112) = v10;
  return result;
}

void sub_23A9C2E74()
{
  JUMPOUT(0x23A9C2E04);
}

void sub_23A9C2E8C()
{
  JUMPOUT(0x23A9C2E04);
}

void sub_23A9C2EA4()
{
  JUMPOUT(0x23A9C2E04);
}

void sub_23A9C2EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30)
{
  sub_23A963C40(a27, a28, a29, a30);
  JUMPOUT(0x23A9C2DECLL);
}

uint64_t sub_23A9C2EE0@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  char *v28;
  double v29;
  double v30;
  int v31;
  int v32;
  uint64_t v33;
  char v34;
  double v35;
  double v36;
  double v37;
  double v38;
  BOOL v39;
  double v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[12];
  unsigned int v53;
  unsigned __int8 v54;
  _BYTE v55[16];
  uint64_t v56;
  uint64_t v57;
  int v58;

  sub_23A963B5C(v1, (uint64_t)v52);
  v47 = v52[1];
  v48 = (void *)v52[2];
  v3 = v52[5];
  v49 = (void *)v52[3];
  v50 = v52[4];
  v4 = v52[6];
  v5 = v52[7];
  v45 = v52[0];
  v46 = v52[8];
  v6 = v52[10];
  v51 = v52[9];
  v7 = v52[11];
  v8 = v54;
  v9 = v53;
  result = sub_23A963B5C(v1, (uint64_t)v55);
  v11 = 0x4000000;
  if ((v58 & 0xFF000000) == 0x4000000)
  {
    if (qword_2569D4B40 != -1)
      result = swift_once();
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v17 = 0;
    v4 = 0;
    v20 = 0;
    v23 = 0;
    v12 = 0x3FA999999999999ALL;
    v11 = 0x303040000;
    v21 = *((_QWORD *)off_2569D7178 + 2) - 1;
    v22 = 0x4014000000000000;
    v16 = 0x7FEFFFFFFFFFFFFFLL;
    v19 = 0x10000;
    v5 = 256;
    v18 = 0x3FA999999999999ALL;
    goto LABEL_13;
  }
  if ((v58 & 0xFF000000) == 0x5000000)
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v4 = 0;
    v5 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 1;
    goto LABEL_13;
  }
  v11 = v9 | (v8 << 32);
  if ((v58 & 0xFE000000) == 0x6000000)
  {
    result = sub_23A963ED4((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
    v22 = 0;
    v23 = 1;
    v12 = v45;
    v18 = v46;
    v13 = v47;
    v14 = v48;
    v17 = v3;
    v15 = v49;
    v16 = v50;
    v19 = v51;
    v20 = v6;
    v21 = v7;
    goto LABEL_13;
  }
  if ((v58 & 0xFF0000) != 0x40000)
  {
    v12 = v45;
    result = sub_23A963C14(v45, v47, v48, v49, v50, v3, v4, v5, v46, v51, v6, v7, v11, SBYTE2(v11));
    v22 = 0;
    v23 = 1;
    v13 = v47;
    v14 = v48;
    v15 = v49;
    v17 = v3;
    v16 = v50;
    v18 = v46;
    v19 = v51;
    v20 = v6;
    v21 = v7;
    goto LABEL_13;
  }
  if (v56 == 1)
  {
    result = sub_23A963C14(v45, v47, v48, v49, v50, v3, v4, v5, v46, v51, v6, v7, v9, SBYTE2(v9));
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v4 = 0;
    v5 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v23 = 0;
    v22 = 0x3FF0000000000000;
    v11 = 83886080;
    goto LABEL_13;
  }
  result = v9 | (v8 << 32);
  v23 = 0;
  v12 = 0;
  v22 = 0x3FF0000000000000;
  v11 = 83886080;
  if ((v58 & 1) != 0)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v4 = 0;
    v5 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    goto LABEL_13;
  }
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v4 = 0;
  v5 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (v57 < 1)
  {
LABEL_13:
    *(_QWORD *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_QWORD *)(a1 + 40) = v17;
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = v5;
    *(_QWORD *)(a1 + 64) = v18;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    *(_QWORD *)(a1 + 88) = v21;
    *(_DWORD *)(a1 + 96) = v11;
    *(_BYTE *)(a1 + 100) = BYTE4(v11);
    *(_QWORD *)(a1 + 104) = v22;
    *(_BYTE *)(a1 + 112) = v23;
    return result;
  }
  v44 = v57 - 1;
  result = sub_23A963C14(v45, v47, v48, v49, v50, v24, v25, v26, v46, v51, v6, v7, result, SBYTE2(result));
  if (qword_2569D4B40 != -1)
    result = swift_once();
  if (v44 < *((_QWORD *)off_2569D7178 + 2))
  {
    v27 = (double *)((char *)off_2569D7178 + 40 * v44);
    v29 = v27[4];
    v28 = (char *)(v27 + 4);
    v30 = v29;
    v31 = v28[16];
    v32 = v28[17];
    v33 = *((_QWORD *)v28 + 3);
    v34 = v28[32];
    v17 = v31 ^ 1u;
    if ((v31 & 1) != 0)
    {
      v35 = 0.0;
      v36 = 1.79769313e308;
    }
    else
    {
      v36 = *((double *)v28 + 1);
      v37 = (v30 + -1.0) / 9.0;
      v38 = fmin(v37, 1.0);
      v39 = v37 < 0.0;
      v40 = 0.0;
      if (!v39)
        v40 = v38;
      v35 = v40 * 45.0 + (1.0 - v40) * 20.0;
    }
    v11 = 0x303040000;
    if (fabs(v36) <= v35)
      v41 = v17;
    else
      v41 = 0;
    v42 = v32 == 0;
    v43 = 256;
    if (v42)
      v43 = 0;
    v5 = v43 | v41;
    v12 = *(_QWORD *)&v30;
    v16 = *(_QWORD *)&v36;
    v4 = *(_QWORD *)&v35;
    result = sub_23A963ED4((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v20 = 0;
    v19 = 0x10000;
    v18 = v12;
    v21 = v44;
    v23 = v34;
    v22 = v33;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9C33C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(_QWORD *, _BYTE *, char *, uint64_t, uint64_t);
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  _QWORD v60[5];
  _BYTE v61[64];

  v1 = sub_23AA32E1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A964084(&qword_2569D72C0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v44 - v9;
  swift_beginAccess();
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v11 + 64);
  v45 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v59 = v14 & v12;
  v47 = v0;
  v51 = v0 + 16;
  v46 = (unint64_t)(v13 + 63) >> 6;
  v44 = v46 - 1;
  v50 = v11;
  result = swift_bridgeObjectRetain();
  v54 = 0;
  v53 = v1;
  v52 = v2;
  v49 = v4;
  v48 = v10;
  v58 = v8;
  while (1)
  {
    if (v59)
    {
      v20 = __clz(__rbit64(v59));
      v59 &= v59 - 1;
      v21 = v20 | (v54 << 6);
LABEL_7:
      v22 = v50;
      (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v8, *(_QWORD *)(v50 + 48) + *(_QWORD *)(v2 + 72) * v21, v1);
      v23 = *(_QWORD *)(v22 + 56) + 104 * v21;
      v24 = sub_23A964084(&qword_2569D72C8);
      v25 = &v8[*(int *)(v24 + 48)];
      v26 = *(_QWORD *)(v23 + 8);
      v57 = *(_QWORD *)v23;
      v27 = *(void **)(v23 + 16);
      v28 = *(void **)(v23 + 24);
      v30 = *(_QWORD *)(v23 + 32);
      v56 = *(_QWORD *)(v23 + 40);
      v29 = v56;
      v32 = *(_QWORD *)(v23 + 48);
      v55 = *(_QWORD *)(v23 + 56);
      v31 = v55;
      v34 = *(_QWORD *)(v23 + 64);
      v33 = *(_QWORD *)(v23 + 72);
      v35 = *(_QWORD *)(v23 + 80);
      v36 = *(_QWORD *)(v23 + 88);
      v37 = *(_BYTE *)(v23 + 100);
      LODWORD(v23) = *(_DWORD *)(v23 + 96);
      *(_QWORD *)v25 = v57;
      *((_QWORD *)v25 + 1) = v26;
      *((_QWORD *)v25 + 2) = v27;
      *((_QWORD *)v25 + 3) = v28;
      *((_QWORD *)v25 + 4) = v30;
      *((_QWORD *)v25 + 5) = v29;
      *((_QWORD *)v25 + 6) = v32;
      *((_QWORD *)v25 + 7) = v31;
      *((_QWORD *)v25 + 8) = v34;
      *((_QWORD *)v25 + 9) = v33;
      *((_QWORD *)v25 + 10) = v35;
      *((_QWORD *)v25 + 11) = v36;
      *((_DWORD *)v25 + 24) = v23;
      v25[100] = v37;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v58, 0, 1, v24);
      v38 = v27;
      v8 = v58;
      sub_23A963BDC(v57, v26, v38, v28, v30, v56, v32, v55, v34, v33, v35, v36, v23);
      v4 = v49;
      v10 = v48;
      goto LABEL_26;
    }
    v39 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v39 < v46)
    {
      v40 = *(_QWORD *)(v45 + 8 * v39);
      if (v40)
        goto LABEL_11;
      v41 = v54 + 2;
      ++v54;
      if (v39 + 1 < v46)
      {
        v40 = *(_QWORD *)(v45 + 8 * v41);
        if (v40)
          goto LABEL_14;
        v54 = v39 + 1;
        if (v39 + 2 < v46)
        {
          v40 = *(_QWORD *)(v45 + 8 * (v39 + 2));
          if (v40)
          {
            v39 += 2;
            goto LABEL_11;
          }
          v41 = v39 + 3;
          v54 = v39 + 2;
          if (v39 + 3 < v46)
            break;
        }
      }
    }
LABEL_25:
    v42 = sub_23A964084(&qword_2569D72C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v8, 1, 1, v42);
    v59 = 0;
LABEL_26:
    sub_23A96C1B8((uint64_t)v8, (uint64_t)v10, &qword_2569D72C0);
    v43 = sub_23A964084(&qword_2569D72C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v10, 1, v43) == 1)
      return swift_release();
    sub_23A963B5C((__int128 *)&v10[*(int *)(v43 + 48)], (uint64_t)v61);
    v2 = v52;
    v1 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v4, v10, v53);
    if (MEMORY[0x23B85DBF0](v51))
    {
      v16 = v47;
      v17 = *(_QWORD *)(v47 + 24);
      ObjectType = swift_getObjectType();
      v60[3] = type metadata accessor for FMFindingMockLocalizer();
      v60[4] = &off_250BC2B10;
      v60[0] = v16;
      v19 = *(void (**)(_QWORD *, _BYTE *, char *, uint64_t, uint64_t))(v17 + 8);
      swift_retain();
      v19(v60, v61, v4, ObjectType, v17);
      swift_unknownObjectRelease();
      sub_23A963ED4((uint64_t)v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      result = sub_23A963B3C((uint64_t)v60);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      result = sub_23A963ED4((uint64_t)v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    }
  }
  v40 = *(_QWORD *)(v45 + 8 * v41);
  if (v40)
  {
LABEL_14:
    v39 = v41;
LABEL_11:
    v59 = (v40 - 1) & v40;
    v21 = __clz(__rbit64(v40)) + (v39 << 6);
    v54 = v39;
    goto LABEL_7;
  }
  while (1)
  {
    v39 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v39 >= v46)
    {
      v54 = v44;
      goto LABEL_25;
    }
    v40 = *(_QWORD *)(v45 + 8 * v39);
    ++v41;
    if (v40)
      goto LABEL_11;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23A9C3948(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v3 = v2;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_beginAccess();
  sub_23A963ED4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0x8000000000000000;
  sub_23A97F71C(a1, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 40) = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_endAccess();
  return sub_23A9C33C4();
}

uint64_t sub_23A9C3A50(uint64_t a1)
{
  return sub_23A9C3A68(a1, (void (*)(__int128 *__return_ptr, __int16 *))sub_23A9C269C);
}

uint64_t sub_23A9C3A5C(uint64_t a1)
{
  return sub_23A9C3A68(a1, (void (*)(__int128 *__return_ptr, __int16 *))sub_23A9C2CD0);
}

uint64_t sub_23A9C3A68(uint64_t a1, void (*a2)(__int128 *__return_ptr, __int16 *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __int16 v62[12];
  __int128 v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  unsigned __int8 v75;
  uint64_t v76;
  unsigned __int8 v77;
  _BYTE v78[112];

  v4 = v2;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2 + 40;
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_23AA1D250(a1);
    if ((v13 & 1) != 0)
    {
      sub_23A963B5C((__int128 *)(*(_QWORD *)(v11 + 56) + 104 * v12), (uint64_t)v78);
      sub_23A963ED4((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
      swift_bridgeObjectRelease();
      v62[0] = *(_WORD *)(v4 + 32);
      a2(&v63, v62);
      v41 = *((_QWORD *)&v63 + 1);
      v14 = v63;
      v42 = v9;
      v15 = v64;
      v44 = v64;
      v45 = v63;
      v58 = v7;
      v59 = v6;
      v16 = v65;
      v17 = v67;
      v48 = v67;
      v49 = v10;
      v55 = v68;
      v56 = v66;
      v18 = v69;
      v46 = v65;
      v47 = v69;
      v57 = v70;
      v43 = a1;
      v20 = v71;
      v19 = v72;
      v21 = v73;
      v39 = v75;
      v40 = v74;
      v60 = v74 | ((unint64_t)v75 << 32);
      v54 = v76;
      v53 = v77;
      sub_23A963ED4((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
      *(_QWORD *)&v63 = v14;
      v22 = v41;
      *((_QWORD *)&v63 + 1) = v41;
      v64 = v15;
      v65 = v16;
      v23 = v56;
      v66 = v56;
      v67 = v17;
      v24 = v55;
      v68 = v55;
      v69 = v18;
      v25 = v57;
      v70 = v57;
      v71 = v20;
      v51 = v19;
      v52 = v20;
      v72 = v19;
      v73 = v21;
      v50 = v21;
      v75 = v39;
      v74 = v40;
      v26 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v42, v43, v59);
      swift_beginAccess();
      v38 = v21;
      v37 = v19;
      v36 = v25;
      v28 = v44;
      v27 = v45;
      v29 = v46;
      v30 = v23;
      v31 = v48;
      v32 = v24;
      v33 = v47;
      sub_23A963BDC(v45, v22, v44, v46, v30, v48, v32, v47, v36, v20, v37, v38, v60);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v61 = *(_QWORD *)(v4 + 40);
      *(_QWORD *)(v4 + 40) = 0x8000000000000000;
      sub_23A97F71C(&v63, v26, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v4 + 40) = v61;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v26, v59);
      swift_endAccess();
      sub_23A9C33C4();
      sub_23A963F38(v27, v22, v28, v29, v56, v31, v55, v33, v57, v52, v51, v50, v60);
      return v54;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_23A9C3D60()
{
  uint64_t v0;

  sub_23A972074(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFindingMockLocalizer()
{
  return objc_opt_self();
}

void sub_23A9C3DAC(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(*(_QWORD *)v1 + 32);
}

void sub_23A9C3DBC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  void *v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;

  v4 = v3;
  v73 = a3;
  v7 = sub_23AA32E1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v74 = (uint64_t)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A964084(&qword_2569D6E60);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v55[0] = v4;
  v16 = &v14[*(int *)(v11 + 48)];
  v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v56 = *(_QWORD *)(v12 + 72);
  v55[1] = a1;
  swift_bridgeObjectRetain();
  v58 = v8;
  v59 = v7;
  v57 = v14;
  while (1)
  {
    v60 = v15;
    sub_23A9C44BC(v17, (uint64_t)v14);
    v18 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v19 = v74;
    v18(v74, v14, v7);
    v20 = *((_QWORD *)v16 + 1);
    v65 = *(_QWORD *)v16;
    v66 = v20;
    v21 = (void *)*((_QWORD *)v16 + 3);
    v67 = (void *)*((_QWORD *)v16 + 2);
    v68 = v21;
    v22 = *((_QWORD *)v16 + 5);
    v69 = *((_QWORD *)v16 + 4);
    v70 = v22;
    v23 = *((_QWORD *)v16 + 7);
    v71 = *((_QWORD *)v16 + 6);
    v72 = v23;
    v24 = *((_QWORD *)v16 + 8);
    v63 = *((_QWORD *)v16 + 9);
    v64 = v24;
    v25 = *((_QWORD *)v16 + 10);
    v61 = *((_QWORD *)v16 + 11);
    v62 = v25;
    v26 = v16[100];
    v27 = *((unsigned int *)v16 + 24);
    v28 = (_QWORD *)*v73;
    v30 = sub_23AA1D250(v19);
    v31 = v28[2];
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23AA33758();
      __break(1u);
      goto LABEL_20;
    }
    v34 = v29;
    if (v28[3] < v33)
      break;
    if ((a2 & 1) != 0)
    {
      v37 = v27 | (v26 << 32);
      if ((v29 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23A97C4D0();
      v37 = v27 | (v26 << 32);
      if ((v34 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v38 = v74;
    v39 = (_QWORD *)*v73;
    *(_QWORD *)(*v73 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    v8 = v58;
    v7 = v59;
    v18(v39[6] + *(_QWORD *)(v58 + 72) * v30, (char *)v38, v59);
    v40 = v39[7] + 104 * v30;
    v41 = v66;
    *(_QWORD *)v40 = v65;
    *(_QWORD *)(v40 + 8) = v41;
    v42 = v68;
    *(_QWORD *)(v40 + 16) = v67;
    *(_QWORD *)(v40 + 24) = v42;
    v43 = v70;
    *(_QWORD *)(v40 + 32) = v69;
    *(_QWORD *)(v40 + 40) = v43;
    v44 = v72;
    *(_QWORD *)(v40 + 48) = v71;
    *(_QWORD *)(v40 + 56) = v44;
    v45 = v63;
    *(_QWORD *)(v40 + 64) = v64;
    *(_QWORD *)(v40 + 72) = v45;
    v46 = v61;
    *(_QWORD *)(v40 + 80) = v62;
    *(_QWORD *)(v40 + 88) = v46;
    *(_BYTE *)(v40 + 100) = BYTE4(v37);
    *(_DWORD *)(v40 + 96) = v37;
    v47 = v39[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_18;
    v39[2] = v49;
    v14 = v57;
    v17 += v56;
    a2 = 1;
    v15 = v60 - 1;
    if (v60 == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23A97D948(v33, a2 & 1);
  v35 = sub_23AA1D250(v74);
  if ((v34 & 1) != (v36 & 1))
    goto LABEL_19;
  v30 = v35;
  v37 = v27 | (v26 << 32);
  if ((v34 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v50 = (void *)swift_allocError();
  swift_willThrow();
  v77 = v50;
  v51 = v50;
  sub_23A964084((uint64_t *)&unk_2569D5AF0);
  v52 = swift_dynamicCast();
  v54 = v58;
  v53 = v59;
  if ((v52 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_23A963F38(v65, v66, v67, v68, v69, v70, v71, v72, v64, v63, v62, v61, v37);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v74, v53);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v75 = 0;
  v76 = 0xE000000000000000;
  sub_23AA33500();
  sub_23AA33038();
  sub_23AA33590();
  sub_23AA33038();
  sub_23AA335A8();
  __break(1u);
}

uint64_t sub_23A9C4248(uint64_t a1, _WORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_23A964084(&qword_2569D6E60);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOWORD(a2) = *a2;
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v3 + 32) = (_WORD)a2;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v22 = v3;
    v26 = MEMORY[0x24BEE4AF8];
    sub_23AA1CF80(0, v10, 0);
    v21[1] = a1;
    v11 = a1 + 32;
    v12 = v26;
    do
    {
      sub_23A963A14(v11, (uint64_t)v23);
      v13 = &v9[*(int *)(v6 + 48)];
      v15 = v24;
      v14 = v25;
      sub_23A96545C(v23, v24);
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
      *((_OWORD *)v13 + 4) = 0u;
      *((_OWORD *)v13 + 5) = 0u;
      *((_OWORD *)v13 + 2) = 0u;
      *((_OWORD *)v13 + 3) = 0u;
      *(_OWORD *)v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
      v13[100] = 0;
      *((_DWORD *)v13 + 24) = 0x4000000;
      sub_23A963B3C((uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23AA1CF80(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v26;
      }
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_23AA1CF80(v16 > 1, v17 + 1, 1);
        v12 = v26;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_23A96C1B8((uint64_t)v9, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, &qword_2569D6E60);
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v3 = v22;
    if (*(_QWORD *)(v12 + 16))
      goto LABEL_9;
LABEL_11:
    v18 = MEMORY[0x24BEE4B00];
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    goto LABEL_11;
LABEL_9:
  sub_23A964084(&qword_2569D5D18);
  v18 = sub_23AA335E4();
LABEL_12:
  v23[0] = v18;
  v19 = swift_bridgeObjectRetain();
  sub_23A9C3DBC(v19, 1, v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 40) = v23[0];
  return v3;
}

uint64_t sub_23A9C44BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D6E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23A9C4504(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  id v13;
  _QWORD v14[5];
  objc_super v15;

  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for FMR1DevicePoseProvider();
  objc_msgSendSuper2(&v15, sel_session_didUpdateFrame_, a1, a2);
  v5 = MEMORY[0x23B85DBF0](&v2[OBJC_IVAR____TtC11FMFindingUI22FMR1DevicePoseProvider_frameDelegate]);
  if (v5)
  {
    v6 = v5;
    v7 = MEMORY[0x23B85DBF0](v5+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (!v7)
    {
LABEL_5:
      swift_unknownObjectRelease();
      return;
    }
    v8 = (void *)v7;
    v9 = v6
       + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x23B85DBF0](v6+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v10 = *(_QWORD *)(v9 + 8);
      ObjectType = swift_getObjectType();
      v14[3] = type metadata accessor for FMFindingLocalizer();
      v14[4] = &off_250BC0A78;
      v14[0] = v8;
      v12 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32);
      v13 = v8;
      v12(v14, a1, a2, ObjectType, v10);
      swift_unknownObjectRelease();

      sub_23A963B3C((uint64_t)v14);
      goto LABEL_5;
    }
    swift_unknownObjectRelease();

  }
}

id sub_23A9C47A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1DevicePoseProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1DevicePoseProvider()
{
  return objc_opt_self();
}

uint64_t sub_23A9C4804(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  v3 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x23B85DBF0](v1 + OBJC_IVAR____TtC11FMFindingUI22FMR1DevicePoseProvider_frameDelegate);
  if (result)
  {
    v7 = MEMORY[0x23B85DBF0](result+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (v7)
    {
      v8 = (void *)v7;
      *v5 = a1;
      swift_storeEnumTagMultiPayload();
      v9 = a1;
      sub_23A975624((uint64_t)v5, 0);

      sub_23A980438((uint64_t)v5);
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void destroy for FMFindingViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for FMFindingViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  return a1;
}

uint64_t assignWithCopy for FMFindingViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

__n128 initializeWithTake for FMFindingViewStyle(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for FMFindingViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingViewStyle()
{
  return &type metadata for FMFindingViewStyle;
}

double sub_23A9C4C40()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  double result;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1F0]);
  v2 = sub_23A9B310C(2);

  v3 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE210]);
  v4 = sub_23A9B310C(2);

  v5 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE250]);
  v6 = sub_23A9B310C(2);

  v7 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1D0]);
  v8 = sub_23A9B310C(2);

  *(_QWORD *)&xmmword_2569E0330 = v2;
  *((_QWORD *)&xmmword_2569E0330 + 1) = v4;
  qword_2569E0340 = v6;
  unk_2569E0348 = v8;
  xmmword_2569E0350 = xmmword_23AA38560;
  unk_2569E0360 = xmmword_23AA38570;
  xmmword_2569E0370 = xmmword_23AA38580;
  unk_2569E0380 = xmmword_23AA38590;
  xmmword_2569E0390 = xmmword_23AA385A0;
  unk_2569E03A0 = xmmword_23AA385B0;
  xmmword_2569E03B0 = xmmword_23AA385C0;
  unk_2569E03C0 = xmmword_23AA385D0;
  result = 65.0;
  xmmword_2569E03D0 = xmmword_23AA385E0;
  qword_2569E03E0 = 0x4020000000000000;
  return result;
}

uint64_t sub_23A9C4DBC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id FMItemBTConnectionManager.__allocating_init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return FMItemBTConnectionManager.init(findables:connectionContext:)(a1, a2);
}

id FMItemBTConnectionManager.init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  void *v2;
  char v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v4 = *a2;
  v5 = objc_allocWithZone(MEMORY[0x24BE82BF0]);
  v6 = v2;
  v7 = objc_msgSend(v5, sel_init);
  type metadata accessor for FMIPConnectionManager();
  swift_allocObject();
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI25FMItemBTConnectionManager_fmipConnectionManager] = sub_23A96FBFC(v7);

  LOBYTE(v24) = v4;
  v8 = sub_23A96465C(a1, (unsigned __int8 *)&v24);
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v10, sel_applicationDidEnterBackground, *MEMORY[0x24BEBDF98], 0);

  v12 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v10, sel_applicationWillEnterForeground, *MEMORY[0x24BEBE008], 0);

  if (qword_2569D4AB8 != -1)
    swift_once();
  v13 = sub_23AA32EA0();
  sub_23A9620E8(v13, (uint64_t)qword_2569E0028);
  v14 = v10;
  v15 = sub_23AA32E88();
  v16 = sub_23AA33218();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v24 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = swift_bridgeObjectRetain();
    v20 = MEMORY[0x23B85CC54](v19, MEMORY[0x24BEE0D00]);
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v20, v22, &v24);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v15, v16, "FMItemBTConnectionManager: initialized for items: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v18, -1, -1);
    MEMORY[0x23B85DB24](v17, -1, -1);

  }
  else
  {

  }
  return v14;
}

uint64_t sub_23A9C5118()
{
  return swift_release();
}

id FMItemBTConnectionManager.__deallocating_deinit()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v5;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x24BEBE008], 0);

  v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x24BEBDF98], 0);

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for FMItemBTConnectionManager();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_23A9C52E0()
{
  return sub_23A9C5338("FMItemBTConnectionManager: requesting connection for items: %s", "FMItemsActionController: Connecting...", (void (*)(uint64_t, uint64_t, uint64_t))sub_23A970F60);
}

void sub_23A9C52FC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_23A9C6864(a1, a3, "FMItemsActionController: Connect completed with error? %s");
}

uint64_t sub_23A9C531C()
{
  return sub_23A9C5338("FMItemBTConnectionManager: requesting disconnection for items: %s", "FMItemsActionController: Disconnecting...", (void (*)(uint64_t, uint64_t, uint64_t))sub_23A971AE0);
}

uint64_t sub_23A9C5338(char *a1, const char *a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  void *v3;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  char *format;
  uint64_t v28;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0028);
  v6 = v3;
  v7 = sub_23AA32E88();
  v8 = sub_23AA33218();
  if (os_log_type_enabled(v7, v8))
  {
    format = a1;
    v9 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v28 = v24;
    v10 = swift_bridgeObjectRetain();
    v11 = MEMORY[0x23B85CC54](v10, MEMORY[0x24BEE0D00]);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v11, v13, &v28);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v7, v8, format, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v24, -1, -1);
    MEMORY[0x23B85DB24](v9, -1, -1);

  }
  else
  {

  }
  result = *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_identifiers];
  v15 = *(_QWORD *)(result + 16);
  if (v15)
  {
    v16 = OBJC_IVAR____TtC11FMFindingUI25FMItemBTConnectionManager_fmipConnectionManager;
    v17 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v20 = *(v17 - 1);
      v19 = *v17;
      swift_bridgeObjectRetain();
      v21 = sub_23AA32E88();
      v22 = sub_23AA33218();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_23A95E000, v21, v22, a2, v23, 2u);
        MEMORY[0x23B85DB24](v23, -1, -1);
      }
      v17 += 2;

      v18 = *(_QWORD *)&v6[v16];
      swift_retain();
      a3(v20, v19, v18);
      swift_bridgeObjectRelease();
      swift_release();
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23A9C5628(void *a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;

  v6 = qword_2569D4AB8;
  v11 = a1;
  if (v6 != -1)
    swift_once();
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0028);
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23A95E000, v8, v9, a3, v10, 2u);
    MEMORY[0x23B85DB24](v10, -1, -1);
  }

  a4();
}

uint64_t sub_23A9C571C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  return MEMORY[0x23B85DBF0](v1);
}

uint64_t sub_23A9C5768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_23A9C57D0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x23B85DBF0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23A9AFFF8;
}

id FMItemR1ConnectionManager.__allocating_init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return FMItemR1ConnectionManager.init(findables:connectionContext:)(a1, a2);
}

id FMItemR1ConnectionManager.init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  char *v2;
  char v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v4 = *a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_localizerSubscriptions] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5 = qword_2569D4AD8;
  v6 = v2;
  if (v5 != -1)
    swift_once();
  v7 = (void *)qword_2569E0098;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_proximityManager] = qword_2569E0098;
  v8 = v7;

  LOBYTE(v23) = v4;
  v9 = sub_23A96465C(a1, (unsigned __int8 *)&v23);
  v10 = qword_2569D4AB8;
  v11 = v9;
  if (v10 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0028);
  v13 = v11;
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = swift_bridgeObjectRetain();
    v19 = MEMORY[0x23B85CC54](v18, MEMORY[0x24BEE0D00]);
    v21 = v20;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v19, v21, &v23);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v14, v15, "FMItemR1ConnectionManager: initialized for items: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v17, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);

  }
  else
  {

  }
  return v13;
}

uint64_t sub_23A9C5AEC()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0028);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v23 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x23B85CC54](v7, MEMORY[0x24BEE0D00]);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v8, v10, &v23);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "FMItemR1ConnectionManager: requesting connection for items: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_findables];
  v23 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v11 + 32;
    v2;
    swift_bridgeObjectRetain();
    v14 = type metadata accessor for FMR1ProximityManagerSubscription();
    do
    {
      MEMORY[0x24BDAC7A8](v14);
      v16 = v15;
      sub_23AA3329C();

      MEMORY[0x23B85CC30](v17, v18, v19);
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23AA330D4();
      sub_23AA330EC();
      v14 = sub_23AA330C8();
      v13 += 40;
      --v12;
    }
    while (v12);
    v20 = v23;
  }
  else
  {
    v21 = v2;
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();

  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_localizerSubscriptions] = v20;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9C5E2C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t aBlock[7];

  v37 = sub_23AA32ED0();
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23AA32F00();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AB8 != -1)
    swift_once();
  v4 = sub_23AA32EA0();
  sub_23A9620E8(v4, (uint64_t)qword_2569E0028);
  v5 = v0;
  v6 = sub_23AA32E88();
  v7 = sub_23AA33218();
  v8 = os_log_type_enabled(v6, v7);
  v41 = v5;
  if (v8)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = swift_bridgeObjectRetain();
    v12 = MEMORY[0x23B85CC54](v11, MEMORY[0x24BEE0D00]);
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = v12;
    v5 = v41;
    v42 = sub_23A964DBC(v15, v14, aBlock);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v6, v7, "FMItemR1ConnectionManager: requesting disconnection for items: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v10, -1, -1);
    MEMORY[0x23B85DB24](v9, -1, -1);

  }
  else
  {

  }
  v16 = *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_localizerSubscriptions];
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_8;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_23AA335C0();
  v17 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_8:
  if (v17 >= 1)
  {
    v19 = 0;
    v31 = v16 & 0xC000000000000001;
    v32 = OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_proximityManager;
    v33 = v17;
    v34 = v16;
    v21 = v36;
    v20 = v37;
    do
    {
      if (v31)
        v22 = (id)MEMORY[0x23B85D0B0](v19, v16);
      else
        v22 = *(id *)(v16 + 8 * v19 + 32);
      v23 = v22;
      ++v19;
      v24 = *(void **)&v41[v32];
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v24;
      *(_QWORD *)(v25 + 24) = v23;
      aBlock[4] = (uint64_t)sub_23A99CFF8;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23A9C4DBC;
      aBlock[3] = (uint64_t)&unk_250BC2C70;
      v26 = _Block_copy(aBlock);
      v27 = v24;
      v28 = v23;
      v29 = v35;
      sub_23AA32EE8();
      v42 = MEMORY[0x24BEE4AF8];
      sub_23A97324C();
      sub_23A964084((uint64_t *)&unk_2569D5D00);
      sub_23A973294();
      sub_23AA3344C();
      MEMORY[0x23B85CE40](0, v29, v21, v26);
      _Block_release(v26);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v20);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);

      swift_release();
      v16 = v34;
    }
    while (v33 != v19);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9C6270()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return sub_23A972074(v0 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate);
}

id FMItemR1ConnectionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemR1ConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23A9C6324(char a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0028);
  v4 = sub_23AA32E88();
  v5 = sub_23AA33218();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v6 = 136315138;
    __asm { BR              X10 }
  }

  if (a1)
  {
    v7 = v1 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x23B85DBF0](v7))
    {
      v8 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, BOOL, _QWORD, uint64_t, uint64_t))(v8 + 8))(v1, a1 == 2, 0, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v10 = sub_23AA32E88();
    v11 = sub_23AA33218();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23A95E000, v10, v11, "FMItemR1ConnectionManager: ignoring unknown state, waiting for a decision to be made before forwarding.", v12, 2u);
      MEMORY[0x23B85DB24](v12, -1, -1);
    }

  }
}

uint64_t sub_23A9C6600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  if (result)
  {
    v5 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, 0, a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FMItemBTConnectionManager()
{
  return objc_opt_self();
}

uint64_t sub_23A9C66AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A9C66D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9C66E8()
{
  return swift_release();
}

uint64_t type metadata accessor for FMItemR1ConnectionManager()
{
  return objc_opt_self();
}

uint64_t sub_23A9C6710@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_23A9C6768(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for FMItemBTConnectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMItemBTConnectionManager.__allocating_init(findables:connectionContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManagerDelegate.itemConnectionManager(_:isAvailable:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FMItemR1ConnectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.__allocating_init(findables:connectionContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

void sub_23A9C684C(uint64_t a1, void *a2)
{
  sub_23A9C6864(a1, a2, "FMItemsActionController: Disconnect completed with error? %s");
}

void sub_23A9C6858(uint64_t a1, void *a2)
{
  sub_23A9C6864(a1, a2, "FMItemsActionController: Connect completed with error? %s");
}

void sub_23A9C6864(uint64_t a1, void *a2, const char *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  uint64_t v15;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0028);
  v6 = a2;
  v7 = a2;
  oslog = sub_23AA32E88();
  v8 = sub_23AA33218();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = a2;
    sub_23A964084(&qword_2569D6FE8);
    v12 = sub_23AA32FFC();
    sub_23A964DBC(v12, v13, &v15);
    sub_23AA333F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A95E000, oslog, v8, a3, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v10, -1, -1);
    MEMORY[0x23B85DB24](v9, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23A9C6A4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = (_OWORD *)(a1 + 24);
    v9 = a2 + 3;
    v10 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      v11 = a2[7];
      *(_QWORD *)(v4 + 48) = v10;
      *(_QWORD *)(v4 + 56) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(v4 + 24, (uint64_t)(a2 + 3), v10);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 5);
      *v8 = *v9;
      *(_OWORD *)(v4 + 40) = v13;
      *(_QWORD *)(v4 + 56) = a2[7];
    }
    *(_QWORD *)(v4 + 64) = a2[8];
    v14 = *(int *)(a3 + 36);
    v15 = v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_23AA32E1C();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_23A9C6B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    sub_23A963B3C(a1 + 24);
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23AA32E1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23A9C6BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = (_OWORD *)(a1 + 24);
  v8 = a2 + 24;
  v9 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 24, v8, v9);
  }
  else
  {
    v11 = *(_OWORD *)(v8 + 16);
    *v7 = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v8 + 32);
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(int *)(a3 + 36);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23AA32E1C();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_23A9C6CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 48) = v6;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    v7 = *(_OWORD *)(a2 + 24);
    v8 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 40) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    sub_23A963B3C(a1 + 24);
    goto LABEL_7;
  }
  sub_23A9C6DBC((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23AA32E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t *sub_23A9C6DBC(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_23A9C6F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(int *)(a3 + 36);
  v6 = a2 + v5;
  v7 = a1 + v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v8 = sub_23AA32E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t sub_23A9C6FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    sub_23A963B3C(a1 + 24);
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23AA32E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_23A9C7058()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A9C7064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23AA32E1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_23A9C70E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A9C70EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23AA32E1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FMFindingSessionState()
{
  uint64_t result;

  result = qword_2569D73C8;
  if (!qword_2569D73C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A9C719C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23A9C722C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 8);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = type metadata accessor for FMFindingSessionState();
    v6 = sub_23AA1D250(v2 + *(int *)(v5 + 36));
    if ((v7 & 1) != 0)
      return sub_23A963A14(*(_QWORD *)(v4 + 56) + 40 * v6, a1);
  }
  result = sub_23AA335A8();
  __break(1u);
  return result;
}

uint64_t sub_23A9C72DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73[2];
  uint64_t v74;
  __int128 v75[2];
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;

  v83 = a2;
  v3 = sub_23AA32E1C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v70 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)&v70 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v70 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v70 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v70 - v18;
  sub_23A963A14((uint64_t)a1, (uint64_t)v77);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084((uint64_t *)&unk_2569D5D80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v20 = v4;
    v70 = v3;
    sub_23A963B98(v75, (uint64_t)v80);
    v21 = v83;
    sub_23A963A14((uint64_t)v83, (uint64_t)v75);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_23A963B98(v73, (uint64_t)v77);
      v22 = v81;
      v23 = v82;
      sub_23A96545C(v80, v81);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 32))(v75, v22, v23);
      v24 = SLOBYTE(v75[0]);
      v25 = v78;
      v26 = v79;
      sub_23A96545C(v77, v78);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 32))(v73, v25, v26);
      v27 = flt_23AA3873C[v24];
      v28 = flt_23AA3873C[SLOBYTE(v73[0])];
      v29 = v81;
      v30 = v82;
      sub_23A96545C(v80, v81);
      (*(void (**)(uint64_t))(*(_QWORD *)(v30 + 8) + 16))(v29);
      v31 = sub_23AA32DE0();
      v33 = v32;
      v34 = *(void (**)(char *, uint64_t))(v20 + 8);
      v35 = v9;
      v36 = v70;
      v34(v35, v70);
      v38 = v78;
      v37 = v79;
      sub_23A96545C(v77, v78);
      v39 = v72;
      (*(void (**)(uint64_t))(*(_QWORD *)(v37 + 8) + 16))(v38);
      v40 = sub_23AA32DE0();
      v42 = v41;
      v34(v39, v36);
      if (v31 == v40 && v33 == v42)
        v43 = 0;
      else
        v43 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v55 = (v27 < v28) & v43;
      sub_23A963B3C((uint64_t)v77);
    }
    else
    {
      v74 = 0;
      memset(v73, 0, sizeof(v73));
      sub_23A9683BC((uint64_t)v73, (uint64_t *)&unk_2569D63C0);
      v56 = a1[3];
      v57 = a1[4];
      sub_23A96545C(a1, v56);
      (*(void (**)(uint64_t, uint64_t))(v57 + 16))(v56, v57);
      v58 = sub_23AA32DE0();
      v60 = v59;
      v61 = *(void (**)(char *, uint64_t))(v20 + 8);
      v62 = v70;
      v61(v14, v70);
      v63 = v21[3];
      v64 = v21[4];
      sub_23A96545C(v21, v63);
      v65 = v71;
      (*(void (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
      v66 = sub_23AA32DE0();
      v68 = v67;
      v61(v65, v62);
      if (v58 == v66 && v60 == v68)
        v55 = 0;
      else
        v55 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_23A963B3C((uint64_t)v80);
  }
  else
  {
    v76 = 0;
    memset(v75, 0, sizeof(v75));
    sub_23A9683BC((uint64_t)v75, (uint64_t *)&unk_2569D63C0);
    v44 = a1[3];
    v45 = a1[4];
    sub_23A96545C(a1, v44);
    (*(void (**)(uint64_t, uint64_t))(v45 + 16))(v44, v45);
    v46 = sub_23AA32DE0();
    v48 = v47;
    v49 = *(void (**)(char *, uint64_t))(v4 + 8);
    v49(v19, v3);
    v50 = v83[3];
    v51 = v83[4];
    sub_23A96545C(v83, v50);
    (*(void (**)(uint64_t, uint64_t))(v51 + 16))(v50, v51);
    v52 = sub_23AA32DE0();
    v54 = v53;
    v49(v17, v3);
    if (v46 == v52 && v48 == v54)
    {
      swift_bridgeObjectRelease_n();
      v55 = 0;
    }
    else
    {
      v55 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v55 & 1;
}

BOOL sub_23A9C7834(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = a1[3];
  v11 = a1[4];
  sub_23A96545C(a1, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  if (*(_QWORD *)(v9 + 16) && (v12 = sub_23AA1D250((uint64_t)v8), (v13 & 1) != 0))
  {
    v36 = v2;
    v14 = *(_QWORD *)(v9 + 56) + 104 * v12;
    v15 = *(_QWORD *)v14;
    v16 = *(void **)(v14 + 16);
    v17 = *(void **)(v14 + 24);
    v18 = *(_QWORD *)(v14 + 32);
    v19 = *(_QWORD *)(v14 + 40);
    v20 = *(_QWORD *)(v14 + 48);
    v21 = *(_QWORD *)(v14 + 56);
    v22 = *(_QWORD *)(v14 + 64);
    v23 = *(_QWORD *)(v14 + 72);
    v24 = *(_QWORD *)(v14 + 80);
    v25 = *(_QWORD *)(v14 + 88);
    v26 = *(_DWORD *)(v14 + 96);
    v34 = *(_QWORD *)(v14 + 8);
    v35 = v15;
    v32 = v17;
    v33 = v16;
    v30 = v19;
    v31 = v18;
    v28 = v21;
    v29 = v20;
    sub_23A963BDC(v15, v34, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_23A963F38(v35, v34, v33, v32, v31, v30, v29, v28, v22, v23, v24, v25, v26);
    return (v26 | 0x2000000u) >> 25 != 3;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
}

uint64_t sub_23A9C79F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A964084(&qword_2569D7410);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMFindableGroupItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v31 - v12);
  sub_23A9C722C((uint64_t)v34);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  v14 = swift_dynamicCast();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (!v14)
  {
    v15(v6, 1, 1, v7);
    sub_23A9683BC((uint64_t)v6, &qword_2569D7410);
    sub_23A9C722C((uint64_t)v34);
    v21 = v35;
    v22 = v36;
    sub_23A96545C(v34, v35);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
    goto LABEL_18;
  }
  v15(v6, 0, 1, v7);
  sub_23A9C8370((uint64_t)v6, (uint64_t)v13);
  sub_23A9ABDD8(v0 + 24, (uint64_t)&v31);
  if (v32)
  {
    sub_23A963B98(&v31, (uint64_t)v34);
    v16 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
    sub_23A9AFB80(v0, (uint64_t)v3);
    if (v16 == 1)
    {
      v17 = *(_QWORD *)(*((_QWORD *)v3 + 2) + 16);
      sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      if (v17 == 1)
      {
        v18 = (uint64_t *)((char *)v13 + *(int *)(v7 + 32));
        v19 = *v18;
        v20 = v18[1];
        sub_23A963A14((uint64_t)v34, (uint64_t)&v31);
        if (!v20)
        {
          v28 = v32;
          v29 = v33;
          sub_23A96545C(&v31, v32);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
        }
        swift_bridgeObjectRetain();
        sub_23A973324((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
        sub_23A963B3C((uint64_t)&v31);
        goto LABEL_18;
      }
    }
    else
    {
      sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    }
    v24 = v35;
    v25 = v36;
    sub_23A96545C(v34, v35);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
    sub_23A973324((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
LABEL_18:
    sub_23A963B3C((uint64_t)v34);
    return v19;
  }
  sub_23A9683BC((uint64_t)&v31, &qword_2569D53C8);
  sub_23A9ABDD8(v0 + 24, (uint64_t)v34);
  v23 = v35;
  sub_23A9683BC((uint64_t)v34, &qword_2569D53C8);
  if (v23 || *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) < 2uLL)
  {
    v26 = (uint64_t *)((char *)v13 + *(int *)(v7 + 32));
    v19 = *v26;
    v27 = v26[1];
    sub_23A9C8370((uint64_t)v13, (uint64_t)v11);
    if (!v27)
    {
      v19 = *v11;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_23A973324((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
  }
  else
  {
    v19 = *v13;
    swift_bridgeObjectRetain();
    sub_23A973324((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
  }
  return v19;
}

uint64_t sub_23A9C7D7C@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  __int128 v65[2];
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;

  v63 = sub_23AA32E1C();
  v61 = *(_QWORD *)(v63 - 8);
  v12 = MEMORY[0x24BDAC7A8](v63);
  v62 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v55 - v14;
  v60 = *a1;
  v16 = MEMORY[0x24BEE4AF8];
  v17 = (_QWORD *)sub_23A9B6B30(MEMORY[0x24BEE4AF8]);
  v18 = (_QWORD *)sub_23A9B6CD0(v16);
  v19 = *(_QWORD *)(a2 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    *(_WORD *)a6 = v60;
    *(_QWORD *)(a6 + 8) = v17;
    *(_QWORD *)(a6 + 64) = v18;
    sub_23A9C83B4(a3, a6 + 24);
    v53 = type metadata accessor for FMFindingSessionState();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(a6 + *(int *)(v53 + 36), a4, v63);
    *(_QWORD *)(a6 + 16) = a5;
    return result;
  }
  v56 = a3;
  v57 = a4;
  v58 = a6;
  v59 = a5;
  v55[1] = a2;
  v20 = a2 + 32;
  while (1)
  {
    sub_23A963A14(v20, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_23A96545C(v66, v67);
    (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    sub_23A963A14((uint64_t)v66, (uint64_t)v65);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64 = v17;
    v26 = sub_23AA1D250((uint64_t)v15);
    v27 = v17[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    v30 = v25;
    if (v17[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v17 = v64;
        if ((v25 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_23A97CD68();
        v17 = v64;
        if ((v30 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_23A97E65C(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_23AA1D250((uint64_t)v15);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_34;
      v26 = v31;
      v17 = v64;
      if ((v30 & 1) != 0)
      {
LABEL_12:
        v33 = v17[7] + 40 * v26;
        sub_23A963B3C(v33);
        sub_23A963B98(v65, v33);
        goto LABEL_16;
      }
    }
    v17[(v26 >> 6) + 8] |= 1 << v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v61 + 16))(v17[6] + *(_QWORD *)(v61 + 72) * v26, v15, v63);
    sub_23A963B98(v65, v17[7] + 40 * v26);
    v34 = v17[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_32;
    v17[2] = v36;
    v17 = v64;
LABEL_16:
    swift_bridgeObjectRelease();
    v37 = *(void (**)(char *, uint64_t))(v61 + 8);
    v37(v15, v63);
    v38 = v67;
    v39 = v68;
    sub_23A96545C(v66, v67);
    v40 = (uint64_t)v62;
    (*(void (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
    v41 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v65[0] = v18;
    v43 = sub_23AA1D250(v40);
    v44 = v18[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      goto LABEL_31;
    v47 = v42;
    if (v18[3] >= v46)
    {
      if ((v41 & 1) != 0)
      {
        v18 = *(_QWORD **)&v65[0];
        if ((v42 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23A97C4D0();
        v18 = *(_QWORD **)&v65[0];
        if ((v47 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23A97D948(v46, v41);
      v48 = sub_23AA1D250((uint64_t)v62);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_34;
      v43 = v48;
      v18 = *(_QWORD **)&v65[0];
      if ((v47 & 1) != 0)
      {
LABEL_3:
        v21 = v18[7] + 104 * v43;
        sub_23A963F38(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(void **)(v21 + 16), *(void **)(v21 + 24), *(_QWORD *)(v21 + 32), *(_QWORD *)(v21 + 40), *(_QWORD *)(v21 + 48), *(_QWORD *)(v21 + 56), *(_QWORD *)(v21 + 64), *(_QWORD *)(v21 + 72), *(_QWORD *)(v21 + 80), *(_QWORD *)(v21 + 88), *(_DWORD *)(v21 + 96));
        *(_OWORD *)(v21 + 64) = 0u;
        *(_OWORD *)(v21 + 80) = 0u;
        *(_OWORD *)(v21 + 32) = 0u;
        *(_OWORD *)(v21 + 48) = 0u;
        *(_OWORD *)v21 = 0u;
        *(_OWORD *)(v21 + 16) = 0u;
        *(_BYTE *)(v21 + 100) = 0;
        *(_DWORD *)(v21 + 96) = 0x4000000;
        goto LABEL_4;
      }
    }
    v18[(v43 >> 6) + 8] |= 1 << v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v61 + 16))(v18[6] + *(_QWORD *)(v61 + 72) * v43, v62, v63);
    v50 = v18[7] + 104 * v43;
    *(_OWORD *)v50 = 0u;
    *(_OWORD *)(v50 + 16) = 0u;
    *(_OWORD *)(v50 + 32) = 0u;
    *(_OWORD *)(v50 + 48) = 0u;
    *(_OWORD *)(v50 + 64) = 0u;
    *(_OWORD *)(v50 + 80) = 0u;
    *(_BYTE *)(v50 + 100) = 0;
    *(_DWORD *)(v50 + 96) = 0x4000000;
    v51 = v18[2];
    v35 = __OFADD__(v51, 1);
    v52 = v51 + 1;
    if (v35)
      goto LABEL_33;
    v18[2] = v52;
LABEL_4:
    swift_bridgeObjectRelease();
    v37(v62, v63);
    sub_23A963B3C((uint64_t)v66);
    v20 += 40;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      a6 = v58;
      a5 = v59;
      a3 = v56;
      a4 = v57;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_23AA33758();
  __break(1u);
  return result;
}

uint64_t sub_23A9C8234@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v8 = sub_23AA32E1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + 64);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  swift_bridgeObjectRetain();
  sub_23A9B7FD8((uint64_t)a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = v12;
  sub_23A97F71C(a2, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  v15 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  LOWORD(v11) = *(_WORD *)v4;
  v16 = *(_QWORD *)(v4 + 8);
  sub_23A9ABDD8(v4 + 24, a3 + 24);
  v17 = type metadata accessor for FMFindingSessionState();
  v13((char *)(a3 + *(int *)(v17 + 36)), v4 + *(int *)(v17 + 36), v8);
  v18 = *(_QWORD *)(v4 + 16);
  *(_WORD *)a3 = (_WORD)v11;
  *(_QWORD *)(a3 + 64) = v15;
  *(_QWORD *)(a3 + 8) = v16;
  *(_QWORD *)(a3 + 16) = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9C8370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindableGroupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9C83B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D53C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_23A9C83FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  void (*v37)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23AA32E1C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v37 = v13;
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(id *)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = *((_QWORD *)v16 + 2);
    LOBYTE(v13) = v16[24];
    sub_23A9B208C(*(id *)v16, v18, v19, (char)v13);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    *((_QWORD *)v15 + 2) = v19;
    v15[24] = (char)v13;
    v20 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v26, 1, v11))
    {
      v28 = sub_23A964084((uint64_t *)&unk_2569D5D30);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v37(v25, v26, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
    v30 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v31 = (char *)v4 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 1);
    if (v33)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v33;
      v34 = *((_QWORD *)v32 + 3);
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      *((_QWORD *)v31 + 3) = v34;
      v31[32] = v32[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v35;
      v31[32] = v32[32];
    }
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  }
  return v4;
}

uint64_t sub_23A9C85F0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  sub_23A980B18(*(void **)(a1 + a2[6]), *(_QWORD *)(a1 + a2[6] + 8), *(_QWORD *)(a1 + a2[6] + 16), *(_BYTE *)(a1 + a2[6] + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + a2[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  result = *(_QWORD *)(a1 + a2[11] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23A9C86DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  void (*v35)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23AA32E1C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v35 = v12;
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(id *)v15;
  v17 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v15 + 2);
  LOBYTE(v12) = v15[24];
  sub_23A9B208C(*(id *)v15, v17, v18, (char)v12);
  *(_QWORD *)v14 = v16;
  *((_QWORD *)v14 + 1) = v17;
  *((_QWORD *)v14 + 2) = v18;
  v14[24] = (char)v12;
  v19 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v25, 1, v10))
  {
    v27 = sub_23A964084((uint64_t *)&unk_2569D5D30);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v35(v24, v25, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
  }
  v28 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *((_QWORD *)v30 + 1);
  if (v31)
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = *((_QWORD *)v30 + 3);
    *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 3) = v32;
    v29[32] = v30[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v33 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v33;
    v29[32] = v30[32];
  }
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

char *sub_23A9C88A4(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  void (*v41)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  v10 = *(_QWORD *)(v9 - 8);
  v41 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v41(v7, v8, v9);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v14 = *(id *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v13 + 2);
  v17 = v13[24];
  sub_23A9B208C(*(id *)v13, v15, v16, v17);
  v18 = *(void **)v12;
  v19 = *((_QWORD *)v12 + 1);
  v20 = *((_QWORD *)v12 + 2);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  *((_QWORD *)v12 + 2) = v16;
  v21 = v12[24];
  v12[24] = v17;
  sub_23A980B18(v18, v19, v20, v21);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (_QWORD *)((char *)a2 + v22);
  *(_QWORD *)v23 = *v24;
  *((_QWORD *)v23 + 1) = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v16) = v28(&a1[v25], 1, v9);
  v29 = v28(v27, 1, v9);
  if ((_DWORD)v16)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v26, v27, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
LABEL_6:
    v30 = sub_23A964084((uint64_t *)&unk_2569D5D30);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  v41(v26, v27, v9);
LABEL_7:
  a1[a3[10]] = *((_BYTE *)a2 + a3[10]);
  v31 = a3[11];
  v32 = (uint64_t)&a1[v31];
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)&a1[v31 + 8];
  v35 = *(_QWORD *)((char *)a2 + v31 + 8);
  if (v34)
  {
    if (v35)
    {
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *(_QWORD *)(v32 + 8) = *((_QWORD *)v33 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
      *(_QWORD *)(v32 + 24) = *((_QWORD *)v33 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v32 + 32) = v33[32];
    }
    else
    {
      sub_23A9C8B74(v32);
      v36 = v33[32];
      v37 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 16) = v37;
      *(_BYTE *)(v32 + 32) = v36;
    }
  }
  else if (v35)
  {
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_QWORD *)(v32 + 8) = *((_QWORD *)v33 + 1);
    *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
    *(_QWORD *)(v32 + 24) = *((_QWORD *)v33 + 3);
    *(_BYTE *)(v32 + 32) = v33[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v38 = *(_OWORD *)v33;
    v39 = *((_OWORD *)v33 + 1);
    *(_BYTE *)(v32 + 32) = v33[32];
    *(_OWORD *)v32 = v38;
    *(_OWORD *)(v32 + 16) = v39;
  }
  a1[a3[12]] = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t sub_23A9C8B74(uint64_t a1)
{
  destroy for FMFindingPartInfo();
  return a1;
}

_OWORD *sub_23A9C8BA8(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_23AA32E1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_OWORD *)((char *)a1 + v12);
  v15 = &a2[v12];
  *v14 = *(_OWORD *)v15;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)(v15 + 9);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)&a2[v13];
  v16 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)&a2[a3[8]];
  v17 = (char *)a1 + v16;
  v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v16], 1, v9))
  {
    v19 = sub_23A964084((uint64_t *)&unk_2569D5D30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  v20 = a3[11];
  *((_BYTE *)a1 + a3[10]) = a2[a3[10]];
  v21 = (char *)a1 + v20;
  v22 = &a2[v20];
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  v21[32] = v22[32];
  *((_BYTE *)a1 + a3[12]) = a2[a3[12]];
  return a1;
}

char *sub_23A9C8CEC(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_23AA32E1C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = (char *)a2 + v13;
  v16 = *((_QWORD *)v15 + 2);
  v17 = v15[24];
  v18 = *(void **)v14;
  v19 = *((_QWORD *)v14 + 1);
  v20 = *((_QWORD *)v14 + 2);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_QWORD *)v14 + 2) = v16;
  v21 = v14[24];
  v14[24] = v17;
  sub_23A980B18(v18, v19, v20, v21);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = (char *)a2 + v27;
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v31 = v30(&a1[v27], 1, v10);
  v32 = v30(v29, 1, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v28, v29, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v10);
LABEL_6:
    v33 = sub_23A964084((uint64_t *)&unk_2569D5D30);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  v12(v28, v29, v10);
LABEL_7:
  v34 = a3[11];
  a1[a3[10]] = *((_BYTE *)a2 + a3[10]);
  v35 = &a1[v34];
  v36 = (char *)a2 + v34;
  if (!*(_QWORD *)&a1[v34 + 8])
  {
LABEL_11:
    v39 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v39;
    goto LABEL_12;
  }
  v37 = *((_QWORD *)v36 + 1);
  if (!v37)
  {
    sub_23A9C8B74((uint64_t)&a1[v34]);
    goto LABEL_11;
  }
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v38 = *((_QWORD *)v36 + 3);
  *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
  *((_QWORD *)v35 + 3) = v38;
  swift_bridgeObjectRelease();
LABEL_12:
  v35[32] = v36[32];
  a1[a3[12]] = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t sub_23A9C8EF4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A9C8F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23AA32E1C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_23A964084((uint64_t *)&unk_2569D5D30);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_23A9C8FA4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A9C8FB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23AA32E1C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_23A964084((uint64_t *)&unk_2569D5D30);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for FMFindableGroupItem()
{
  uint64_t result;

  result = qword_2569D7470;
  if (!qword_2569D7470)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23A9C908C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23AA32E1C();
  if (v0 <= 0x3F)
  {
    sub_23A9C9158();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23A9C9158()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2569D7480)
  {
    sub_23AA32E1C();
    v0 = sub_23AA333D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2569D7480);
  }
}

uint64_t sub_23A9C91AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[4];
  char v56;
  _QWORD v57[3];
  unsigned __int8 v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[2];
  uint64_t v63;

  v53 = a2;
  v54 = a3;
  v6 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32E1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A963A14((uint64_t)a1, (uint64_t)v59);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084((uint64_t *)&unk_2569D5D80);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
  }
  v13 = a1[3];
  v14 = a1[4];
  sub_23A96545C(a1, v13);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  v47 = v15;
  v16 = a1[3];
  v17 = a1[4];
  sub_23A96545C(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  sub_23A968378((uint64_t)v62, (uint64_t)v59, (uint64_t *)&unk_2569D63C0);
  v18 = v60;
  if (v60)
  {
    v19 = v61;
    sub_23A96545C(v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    sub_23A963B3C((uint64_t)v59);
  }
  else
  {
    sub_23A99C7EC((uint64_t)v59);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  v20 = a1[3];
  v21 = a1[4];
  sub_23A96545C(a1, v20);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v21 + 24))(v57, v20, v21);
  v46 = v57[0];
  v45 = v57[1];
  v44 = v57[2];
  v43 = v58;
  sub_23A968378((uint64_t)v62, (uint64_t)v59, (uint64_t *)&unk_2569D63C0);
  v22 = v60;
  if (v60)
  {
    v23 = v61;
    sub_23A96545C(v59, v60);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v23 + 32))(v55, v22, v23);
    v42 = LOBYTE(v55[0]);
    sub_23A963B3C((uint64_t)v59);
  }
  else
  {
    sub_23A99C7EC((uint64_t)v59);
    v42 = 4;
  }
  v49 = v12;
  v50 = v10;
  v51 = v9;
  v52 = v8;
  sub_23A968378((uint64_t)v62, (uint64_t)v59, (uint64_t *)&unk_2569D63C0);
  v24 = v60;
  if (v60)
  {
    v25 = v61;
    sub_23A96545C(v59, v60);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 24))(v55, v24, v25);
    v26 = v55[0];
    v27 = v55[1];
    v28 = v55[2];
    v29 = v55[3];
    v30 = v56;
    sub_23A963B3C((uint64_t)v59);
  }
  else
  {
    sub_23A99C7EC((uint64_t)v59);
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
  }
  v31 = a1[3];
  v32 = a1[4];
  sub_23A96545C(a1, v31);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
  v34 = (int *)type metadata accessor for FMFindableGroupItem();
  *((_BYTE *)a4 + v34[12]) = 0;
  v35 = v47;
  *a4 = v48;
  a4[1] = v35;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))((char *)a4 + v34[5], v49, v51);
  sub_23A9C97C4((uint64_t)v52, (uint64_t)a4 + v34[9]);
  v36 = (char *)a4 + v34[6];
  v37 = v45;
  *(_QWORD *)v36 = v46;
  *((_QWORD *)v36 + 1) = v37;
  *((_QWORD *)v36 + 2) = v44;
  v36[24] = v43;
  *((_BYTE *)a4 + v34[10]) = v42;
  v38 = (char *)a4 + v34[11];
  *(_QWORD *)v38 = v26;
  *((_QWORD *)v38 + 1) = v27;
  *((_QWORD *)v38 + 2) = v28;
  *((_QWORD *)v38 + 3) = v29;
  v38[32] = v30;
  v39 = (uint64_t *)((char *)a4 + v34[8]);
  v40 = v54;
  *v39 = v53;
  v39[1] = v40;
  *(uint64_t *)((char *)a4 + v34[7]) = v33;
  sub_23A99C7EC((uint64_t)v62);
  return sub_23A963B3C((uint64_t)a1);
}

uint64_t sub_23A9C95F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for FMFindableGroupItem();
  if (*(_BYTE *)(v1 + *(int *)(v3 + 24) + 24))
  {
    if (*(_BYTE *)(v1 + *(int *)(v3 + 48)) == 1)
    {
      if (qword_2569D4B00 != -1)
        swift_once();
      v4 = &xmmword_2569D6C60;
    }
    else
    {
      if (qword_2569D4AF8 != -1)
        swift_once();
      v4 = &xmmword_2569D6BE8;
    }
  }
  else
  {
    if (qword_2569D4B08 != -1)
      swift_once();
    v4 = &xmmword_2569D6CD8;
  }
  v5 = *((_QWORD *)v4 + 1);
  v6 = *((_DWORD *)v4 + 4);
  v7 = *((_DWORD *)v4 + 5);
  v8 = *((_QWORD *)v4 + 3);
  v9 = *((_QWORD *)v4 + 4);
  v10 = *((_DWORD *)v4 + 10);
  v11 = *((_DWORD *)v4 + 11);
  v13 = *((_QWORD *)v4 + 6);
  v12 = *((_QWORD *)v4 + 7);
  v14 = *((_DWORD *)v4 + 16);
  v15 = *((_DWORD *)v4 + 17);
  v16 = *((_QWORD *)v4 + 9);
  v17 = *((_QWORD *)v4 + 10);
  v18 = *((_DWORD *)v4 + 22);
  v19 = *((_DWORD *)v4 + 23);
  v20 = *((_QWORD *)v4 + 12);
  v21 = *((_QWORD *)v4 + 13);
  v22 = *((_QWORD *)v4 + 14);
  *(_QWORD *)a1 = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 20) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_DWORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 44) = v11;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v12;
  *(_DWORD *)(a1 + 64) = v14;
  *(_DWORD *)(a1 + 68) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v17;
  *(_DWORD *)(a1 + 88) = v18;
  *(_DWORD *)(a1 + 92) = v19;
  *(_QWORD *)(a1 + 96) = v20;
  *(_QWORD *)(a1 + 104) = v21;
  *(_QWORD *)(a1 + 112) = v22;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9C9728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23A968378(v2 + *(int *)(a1 + 36), a2, (uint64_t *)&unk_2569D5D30);
}

uint64_t sub_23A9C9750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + *(int *)(a1 + 44);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = *(_BYTE *)(v3 + 32);
  return sub_23A9C9794(v4, v5);
}

uint64_t sub_23A9C9774@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 40));
  return result;
}

uint64_t sub_23A9C9784()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A9C9794(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23A9C97C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for FMFindingMeasurement(uint64_t a1)
{
  sub_23A963AE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_WORD *)(a1 + 96), *(_BYTE *)(a1 + 98));
}

uint64_t initializeWithCopy for FMFindingMeasurement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_WORD *)(a2 + 96);
  v17 = *(_BYTE *)(a2 + 98);
  sub_23A963C14(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_WORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 98) = v17;
  return a1;
}

uint64_t assignWithCopy for FMFindingMeasurement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 80);
  v28 = *(_QWORD *)(a2 + 88);
  v29 = *(_WORD *)(a2 + 96);
  v30 = *(_BYTE *)(a2 + 98);
  sub_23A963C14(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 88);
  v23 = *(_WORD *)(a1 + 96);
  v24 = *(_BYTE *)(a1 + 98);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v26;
  *(_QWORD *)(a1 + 80) = v27;
  *(_QWORD *)(a1 + 88) = v28;
  *(_WORD *)(a1 + 96) = v29;
  *(_BYTE *)(a1 + 98) = v30;
  sub_23A963AE0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23, v24);
  return a1;
}

__n128 initializeWithTake for FMFindingMeasurement(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FMFindingMeasurement(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = *(_WORD *)(a2 + 96);
  v4 = *(_BYTE *)(a2 + 98);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 88);
  v16 = *(_WORD *)(a1 + 96);
  v17 = *(_BYTE *)(a1 + 98);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_WORD *)(a1 + 96) = v3;
  *(_BYTE *)(a1 + 98) = v4;
  sub_23A963AE0(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingMeasurement(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 99))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 98);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingMeasurement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 99) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 99) = 0;
    if (a2)
      *(_BYTE *)(result + 98) = -(char)a2;
  }
  return result;
}

uint64_t sub_23A9C9BAC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 98);
}

uint64_t sub_23A9C9BB4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 98) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingMeasurement()
{
  return &type metadata for FMFindingMeasurement;
}

ValueMetadata *type metadata accessor for FMFindingTrend()
{
  return &type metadata for FMFindingTrend;
}

double sub_23A9C9BE4@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  BOOL v9;
  BOOL v10;
  double result;
  char v12;

  v3 = objc_msgSend(v1, sel_name);
  v4 = sub_23AA32FD8();
  v6 = v5;

  v7 = v4 == 0x646E756F66 && v6 == 0xE500000000000000;
  if (v7 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v8 = 196608;
  }
  else
  {
    v9 = v4 == 1701995880 && v6 == 0xE400000000000000;
    if (v9 || (sub_23AA33728() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v8 = 0x20000;
    }
    else
    {
      v10 = v4 == 1918985582 && v6 == 0xE400000000000000;
      if (v10 || (sub_23AA33728() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v8 = 0x10000;
      }
      else if (v4 == 7496038 && v6 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        v8 = 0;
      }
      else
      {
        v12 = sub_23AA33728();
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
          v8 = 0;
        else
          v8 = -65536;
      }
    }
  }
  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 98) = BYTE2(v8);
  return result;
}

void sub_23A9C9DB0()
{
  __int128 *v0;
  _BYTE v1[112];

  sub_23A964108(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

unint64_t sub_23A9C9DF0()
{
  uint64_t v0;
  __int128 v2[6];
  unsigned __int8 v3;
  __int128 v4[6];
  _BYTE v5[248];

  sub_23A99072C(v0, (uint64_t)v2);
  if (v3 == 255)
    return 1;
  sub_23A964108(v2, (uint64_t)v4);
  sub_23A964108(v4, (uint64_t)v5);
  return 0x2020203uLL >> (8 * v5[98]);
}

void sub_23A9C9F20()
{
  __int128 *v0;
  uint64_t v1;
  _BYTE v2[216];

  sub_23A964108(v0, (uint64_t)&v1);
  sub_23A964108(v0, (uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_23A9C9FB8()
{
  uint64_t v0;

  sub_23A964084((uint64_t *)&unk_2569D6690);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23AA35F90;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = sub_23A9640C4();
  *(_QWORD *)(v0 + 32) = 1918985582;
  *(_QWORD *)(v0 + 40) = 0xE400000000000000;
  return sub_23AA32FE4();
}

void sub_23A9CA190(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = sub_23A964084(&qword_2569D7570);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A964084(&qword_2569D7578);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A964084(&qword_2569D7580);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23A964084(&qword_2569D7588);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23A964084(&qword_2569D7590);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23A96545C(a1, a1[3]);
  sub_23A9CC2C0();
  sub_23AA33818();
  __asm { BR              X10 }
}

uint64_t sub_23A9CA348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_23A9CC3D0();
  sub_23AA3368C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

uint64_t sub_23A9CA47C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A9CA4AC + 4 * byte_23AA3883E[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_23A9CA4AC()
{
  return 0x6973616572636E69;
}

uint64_t sub_23A9CA4E0()
{
  return 0x656C62617473;
}

uint64_t sub_23A9CA4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A9CB684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A9CA518()
{
  sub_23A9CC2C0();
  return sub_23AA33830();
}

uint64_t sub_23A9CA540()
{
  sub_23A9CC2C0();
  return sub_23AA3383C();
}

uint64_t sub_23A9CA568()
{
  sub_23A9CC348();
  return sub_23AA33830();
}

uint64_t sub_23A9CA590()
{
  sub_23A9CC348();
  return sub_23AA3383C();
}

uint64_t sub_23A9CA5B8()
{
  sub_23A9CC38C();
  return sub_23AA33830();
}

uint64_t sub_23A9CA5E0()
{
  sub_23A9CC38C();
  return sub_23AA3383C();
}

uint64_t sub_23A9CA608()
{
  sub_23A9CC304();
  return sub_23AA33830();
}

uint64_t sub_23A9CA630()
{
  sub_23A9CC304();
  return sub_23AA3383C();
}

uint64_t sub_23A9CA658()
{
  sub_23A9CC3D0();
  return sub_23AA33830();
}

uint64_t sub_23A9CA680()
{
  sub_23A9CC3D0();
  return sub_23AA3383C();
}

uint64_t sub_23A9CA6A8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A9CB830(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23A9CA6D0(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_23A9CA190(a1, *v1);
}

unint64_t sub_23A9CA6EC()
{
  unint64_t result;

  result = qword_2569D74D0;
  if (!qword_2569D74D0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38934, &type metadata for FMFindingTrend);
    atomic_store(result, (unint64_t *)&qword_2569D74D0);
  }
  return result;
}

uint64_t sub_23A9CA730(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23AA158C8(*a1, *a2);
}

uint64_t sub_23A9CA73C()
{
  sub_23AA337D0();
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A9CA7D8()
{
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9CA850()
{
  sub_23AA337D0();
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23A9CA8E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A9CBC54();
  *a1 = result;
  return result;
}

void sub_23A9CA914(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x65636E6174736964;
  if (v2 != 1)
  {
    v5 = 0xD00000000000001BLL;
    v4 = 0x800000023AA3B060;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701869940;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_23A9CA970()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x65636E6174736964;
  if (*v0 != 1)
    v1 = 0xD00000000000001BLL;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_23A9CA9C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A9CBC54();
  *a1 = result;
  return result;
}

uint64_t sub_23A9CA9EC()
{
  sub_23A9CC108();
  return sub_23AA33830();
}

uint64_t sub_23A9CAA14()
{
  sub_23A9CC108();
  return sub_23AA3383C();
}

void sub_23A9CAA3C(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[112];

  v2 = v1;
  sub_23A964108(v2, (uint64_t)&v5);
  v4 = sub_23A964084(&qword_2569D7500);
  MEMORY[0x24BDAC7A8](v4);
  sub_23A96545C(a1, a1[3]);
  sub_23A9CC108();
  sub_23AA33818();
  sub_23A964108(v2, (uint64_t)v6);
  __asm { BR              X10 }
}

uint64_t sub_23A9CAB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v3 + 104);
  *(_BYTE *)(v0 + 208) = 0;
  v5 = *(_QWORD *)(v0 + 192);
  sub_23AA336D4();
  if (!v5)
  {
    *(_QWORD *)(v0 + 208) = v4;
    *(_BYTE *)(v0 + 207) = 2;
    sub_23A9CC27C();
    sub_23AA336E0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 8))(v2, v1);
}

void sub_23A9CAC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(v3 + 104);
  v6 = *(_QWORD *)(v3 + 112);
  v7 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(v0 + 80) = v7;
  v8 = *(_QWORD *)(v3 + 136);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v3 + 144);
  *(_QWORD *)(v0 + 64) = v8;
  v9 = *(_QWORD *)(v3 + 152);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v3 + 160);
  *(_QWORD *)(v0 + 48) = v9;
  v10 = *(_QWORD *)(v3 + 168);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v3 + 176);
  *(_QWORD *)(v0 + 32) = v10;
  v11 = *(_QWORD *)(v3 + 184);
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(v0 + 16) = v11;
  *(_DWORD *)(v0 + 4) = *(unsigned __int16 *)(v3 + 200);
  *(_BYTE *)(v0 + 208) = 0;
  sub_23A963C40(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 168), *(void **)(v0 + 160), *(void **)(v0 + 152));
  v12 = *(_QWORD *)(v0 + 192);
  sub_23AA336D4();
  if (!v12)
  {
    *(_QWORD *)(v0 + 208) = v5;
    *(_QWORD *)(v0 + 216) = v6;
    v13 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 232) = v13;
    v14 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 248) = v14;
    v15 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 264) = v15;
    v16 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 280) = v16;
    v17 = *(_QWORD *)(v0 + 8);
    *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 296) = v17;
    *(_WORD *)(v0 + 304) = *(_DWORD *)(v0 + 4);
    *(_BYTE *)(v0 + 207) = 1;
    sub_23A964084(&qword_2569D5700);
    sub_23A9CC1D4();
    sub_23AA336E0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 8))(v2, v1);
  sub_23A981C24(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23A963AE0);
  JUMPOUT(0x23A9CAC40);
}

void sub_23A9CADC4()
{
  __int128 *v0;
  uint64_t v1;
  _BYTE v2[216];

  sub_23A964108(v0, (uint64_t)&v1);
  sub_23A964108(v0, (uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_23A9CAE58()
{
  sub_23AA337DC();
  return sub_23AA337F4();
}

uint64_t sub_23A9CAFFC(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[6];
  __int128 v6[6];

  sub_23A964108(a1, (uint64_t)v5);
  sub_23A964108(a2, (uint64_t)v6);
  sub_23A9CB228(v5, v6);
  return v3 & 1;
}

uint64_t sub_23A9CB044()
{
  __int128 *v0;
  _BYTE v2[104];

  sub_23A964108(v0, (uint64_t)v2);
  sub_23AA337D0();
  sub_23A9CADC4();
  return sub_23AA33800();
}

void sub_23A9CB090()
{
  __int128 *v0;
  _BYTE v1[104];

  sub_23A964108(v0, (uint64_t)v1);
  sub_23A9CADC4();
}

uint64_t sub_23A9CB0CC()
{
  __int128 *v0;
  _BYTE v2[104];

  sub_23A964108(v0, (uint64_t)v2);
  sub_23AA337D0();
  sub_23A9CADC4();
  return sub_23AA33800();
}

uint64_t sub_23A9CB11C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[6];

  result = sub_23A9CBC9C(a1, (uint64_t)v5);
  if (!v2)
    return sub_23A964108(v5, a2);
  return result;
}

void sub_23A9CB160(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v3[104];

  sub_23A964108(v1, (uint64_t)v3);
  sub_23A9CAA3C(a1);
}

void sub_23A9CB1AC()
{
  __int128 *v0;
  _BYTE v1[104];

  sub_23A964108(v0, (uint64_t)v1);
  sub_23A9C9F20();
}

unint64_t sub_23A9CB1E4()
{
  unint64_t result;

  result = qword_2569D74D8;
  if (!qword_2569D74D8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38A14, &type metadata for FMFindingMeasurement);
    atomic_store(result, (unint64_t *)&qword_2569D74D8);
  }
  return result;
}

void sub_23A9CB228(__int128 *a1, __int128 *a2)
{
  uint64_t v3;
  _BYTE v4[216];

  sub_23A964108(a2, (uint64_t)&v3);
  sub_23A964108(a1, (uint64_t)v4);
  __asm { BR              X10 }
}

BOOL sub_23A9CB2B8()
{
  __int128 *v0;
  _BYTE v2[728];

  sub_23A964108(v0, (uint64_t)v2);
  return v2[98] == 0;
}

uint64_t sub_23A9CB684(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973616572636E69 && a2 == 0xEA0000000000676ELL || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973616572636564 && a2 == 0xEA0000000000676ELL || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C62617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23A9CB830(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = sub_23A964084(&qword_2569D7520);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A964084(&qword_2569D7528);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A964084(&qword_2569D7530);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A964084(&qword_2569D7538);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A964084(&qword_2569D7540);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  sub_23A96545C(a1, v16);
  sub_23A9CC2C0();
  v17 = v25;
  sub_23AA3380C();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_23AA33680();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_23AA3353C();
    swift_allocError();
    v21 = v20;
    sub_23A964084(&qword_2569D5750);
    *v21 = &type metadata for FMFindingTrend;
    sub_23AA33620();
    sub_23AA33530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  sub_23A963B3C((uint64_t)v24);
  return v12;
}

void sub_23A9CBB54()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23A9CC38C();
  sub_23AA33614();
  if (!v0)
    JUMPOUT(0x23A9CBC28);
  JUMPOUT(0x23A9CBB08);
}

void sub_23A9CBB98()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_23A9CC348();
  sub_23AA33614();
  if (!v0)
    JUMPOUT(0x23A9CBBD8);
  JUMPOUT(0x23A9CBB08);
}

void sub_23A9CBBE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23A9CC304();
  sub_23AA33614();
  if (!v0)
    JUMPOUT(0x23A9CBC28);
  JUMPOUT(0x23A9CBB08);
}

uint64_t sub_23A9CBC54()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_23A9CBC9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  unsigned __int8 v46;
  char v47;
  uint64_t v48;
  unsigned __int8 v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  char v55;
  char v56;

  v5 = sub_23A964084(&qword_2569D74E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A9CC108();
  sub_23AA3380C();
  if (v2)
    return sub_23A963B3C((uint64_t)a1);
  LOBYTE(v39) = 0;
  v9 = sub_23AA33668();
  v56 = 2;
  sub_23A9CC14C();
  sub_23AA33674();
  v11 = v39;
  switch(v9)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v37 = 0;
      v38 = 0;
      v34 = 0;
      v35 = 0;
      v32 = 0;
      v33 = 0;
      v36 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v31 = 0;
      v17 = v11;
      goto LABEL_22;
    case 2:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v37 = 0;
      v38 = 0;
      v34 = 0;
      v35 = 0;
      v32 = 0;
      v33 = 0;
      v36 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = v11;
      v31 = 1;
      goto LABEL_22;
    case 3:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v37 = 0;
      v38 = 0;
      v34 = 0;
      v35 = 0;
      v32 = 0;
      v33 = 0;
      v36 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = v11;
      v31 = 2;
      goto LABEL_22;
    case 4:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v37 = 0;
      v38 = 0;
      v34 = 0;
      v35 = 0;
      v32 = 0;
      v33 = 0;
      v36 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = v11;
      v31 = 3;
      goto LABEL_22;
    case 5:
      v56 = 1;
      sub_23A9CC190();
      sub_23AA33674();
      v30 = v39;
      v38 = v40;
      v34 = v41;
      v35 = v43;
      v32 = v44;
      v36 = v45;
      v37 = v42;
      v29 = v48;
      v14 = v52;
      v15 = v53;
      if (v47)
        v18 = 256;
      else
        v18 = 0;
      v33 = v18 | v46;
      if (v50)
        v19 = 256;
      else
        v19 = 0;
      v20 = v19 | v49;
      v21 = 0x10000;
      if (!v51)
        v21 = 0;
      v13 = v20 | v21;
      if (v55)
        v22 = 256;
      else
        v22 = 0;
      v28 = v22 | v54;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v31 = 4;
      v17 = v30;
      v12 = v29;
      v16 = v28;
LABEL_22:
      result = sub_23A963B3C((uint64_t)a1);
      v23 = v38;
      *(_QWORD *)a2 = v17;
      *(_QWORD *)(a2 + 8) = v23;
      v24 = v37;
      *(_QWORD *)(a2 + 16) = v34;
      *(_QWORD *)(a2 + 24) = v24;
      v25 = v32;
      *(_QWORD *)(a2 + 32) = v35;
      *(_QWORD *)(a2 + 40) = v25;
      v26 = v33;
      *(_QWORD *)(a2 + 48) = v36;
      *(_QWORD *)(a2 + 56) = v26;
      *(_QWORD *)(a2 + 64) = v12;
      *(_QWORD *)(a2 + 72) = v13;
      *(_QWORD *)(a2 + 80) = v14;
      *(_QWORD *)(a2 + 88) = v15;
      *(_WORD *)(a2 + 96) = v16;
      *(_BYTE *)(a2 + 98) = v31;
      break;
    default:
      result = sub_23AA335A8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t sub_23A9CC108()
{
  unint64_t result;

  result = qword_2569D74E8;
  if (!qword_2569D74E8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38F3C, &type metadata for FMFindingMeasurement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D74E8);
  }
  return result;
}

unint64_t sub_23A9CC14C()
{
  unint64_t result;

  result = qword_2569D74F0;
  if (!qword_2569D74F0)
  {
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2569D74F0);
  }
  return result;
}

unint64_t sub_23A9CC190()
{
  unint64_t result;

  result = qword_2569D74F8;
  if (!qword_2569D74F8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA363C4, &type metadata for FMFindingDistance);
    atomic_store(result, (unint64_t *)&qword_2569D74F8);
  }
  return result;
}

unint64_t sub_23A9CC1D4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2569D7508;
  if (!qword_2569D7508)
  {
    v1 = sub_23A96C258(&qword_2569D5700);
    v2 = sub_23A9CC238();
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569D7508);
  }
  return result;
}

unint64_t sub_23A9CC238()
{
  unint64_t result;

  result = qword_2569D7510;
  if (!qword_2569D7510)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3639C, &type metadata for FMFindingDistance);
    atomic_store(result, (unint64_t *)&qword_2569D7510);
  }
  return result;
}

unint64_t sub_23A9CC27C()
{
  unint64_t result;

  result = qword_2569D7518;
  if (!qword_2569D7518)
  {
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2569D7518);
  }
  return result;
}

unint64_t sub_23A9CC2C0()
{
  unint64_t result;

  result = qword_2569D7548;
  if (!qword_2569D7548)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38EEC, &type metadata for FMFindingTrend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7548);
  }
  return result;
}

unint64_t sub_23A9CC304()
{
  unint64_t result;

  result = qword_2569D7550;
  if (!qword_2569D7550)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38E9C, &type metadata for FMFindingTrend.StableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7550);
  }
  return result;
}

unint64_t sub_23A9CC348()
{
  unint64_t result;

  result = qword_2569D7558;
  if (!qword_2569D7558)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38E4C, &type metadata for FMFindingTrend.DecreasingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7558);
  }
  return result;
}

unint64_t sub_23A9CC38C()
{
  unint64_t result;

  result = qword_2569D7560;
  if (!qword_2569D7560)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38DFC, &type metadata for FMFindingTrend.IncreasingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7560);
  }
  return result;
}

unint64_t sub_23A9CC3D0()
{
  unint64_t result;

  result = qword_2569D7568;
  if (!qword_2569D7568)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38DAC, &type metadata for FMFindingTrend.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7568);
  }
  return result;
}

uint64_t _s11FMFindingUI14FMFindingTrendOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A9CC460 + 4 * byte_23AA3885F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A9CC494 + 4 * byte_23AA3885A[v4]))();
}

uint64_t sub_23A9CC494(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CC49C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9CC4A4);
  return result;
}

uint64_t sub_23A9CC4B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9CC4B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A9CC4BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CC4C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingTrend.CodingKeys()
{
  return &type metadata for FMFindingTrend.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.UnknownCodingKeys()
{
  return &type metadata for FMFindingTrend.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.IncreasingCodingKeys()
{
  return &type metadata for FMFindingTrend.IncreasingCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.DecreasingCodingKeys()
{
  return &type metadata for FMFindingTrend.DecreasingCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.StableCodingKeys()
{
  return &type metadata for FMFindingTrend.StableCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FMFindingMeasurement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A9CC56C + 4 * byte_23AA38869[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A9CC5A0 + 4 * byte_23AA38864[v4]))();
}

uint64_t sub_23A9CC5A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CC5A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9CC5B0);
  return result;
}

uint64_t sub_23A9CC5BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9CC5C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A9CC5C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CC5D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingMeasurement.CodingKeys()
{
  return &type metadata for FMFindingMeasurement.CodingKeys;
}

unint64_t sub_23A9CC5F0()
{
  unint64_t result;

  result = qword_2569D7598;
  if (!qword_2569D7598)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38B8C, &type metadata for FMFindingMeasurement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7598);
  }
  return result;
}

unint64_t sub_23A9CC638()
{
  unint64_t result;

  result = qword_2569D75A0;
  if (!qword_2569D75A0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38D84, &type metadata for FMFindingTrend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75A0);
  }
  return result;
}

unint64_t sub_23A9CC680()
{
  unint64_t result;

  result = qword_2569D75A8;
  if (!qword_2569D75A8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38CA4, &type metadata for FMFindingTrend.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75A8);
  }
  return result;
}

unint64_t sub_23A9CC6C8()
{
  unint64_t result;

  result = qword_2569D75B0;
  if (!qword_2569D75B0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38CCC, &type metadata for FMFindingTrend.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75B0);
  }
  return result;
}

unint64_t sub_23A9CC710()
{
  unint64_t result;

  result = qword_2569D75B8;
  if (!qword_2569D75B8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38C54, &type metadata for FMFindingTrend.IncreasingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75B8);
  }
  return result;
}

unint64_t sub_23A9CC758()
{
  unint64_t result;

  result = qword_2569D75C0;
  if (!qword_2569D75C0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38C7C, &type metadata for FMFindingTrend.IncreasingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75C0);
  }
  return result;
}

unint64_t sub_23A9CC7A0()
{
  unint64_t result;

  result = qword_2569D75C8;
  if (!qword_2569D75C8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38C04, &type metadata for FMFindingTrend.DecreasingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75C8);
  }
  return result;
}

unint64_t sub_23A9CC7E8()
{
  unint64_t result;

  result = qword_2569D75D0;
  if (!qword_2569D75D0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38C2C, &type metadata for FMFindingTrend.DecreasingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75D0);
  }
  return result;
}

unint64_t sub_23A9CC830()
{
  unint64_t result;

  result = qword_2569D75D8;
  if (!qword_2569D75D8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38BB4, &type metadata for FMFindingTrend.StableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75D8);
  }
  return result;
}

unint64_t sub_23A9CC878()
{
  unint64_t result;

  result = qword_2569D75E0;
  if (!qword_2569D75E0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38BDC, &type metadata for FMFindingTrend.StableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75E0);
  }
  return result;
}

unint64_t sub_23A9CC8C0()
{
  unint64_t result;

  result = qword_2569D75E8;
  if (!qword_2569D75E8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38CF4, &type metadata for FMFindingTrend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75E8);
  }
  return result;
}

unint64_t sub_23A9CC908()
{
  unint64_t result;

  result = qword_2569D75F0;
  if (!qword_2569D75F0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38D1C, &type metadata for FMFindingTrend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75F0);
  }
  return result;
}

unint64_t sub_23A9CC950()
{
  unint64_t result;

  result = qword_2569D75F8;
  if (!qword_2569D75F8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38AC4, &type metadata for FMFindingMeasurement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D75F8);
  }
  return result;
}

unint64_t sub_23A9CC998()
{
  unint64_t result;

  result = qword_2569D7600;
  if (!qword_2569D7600)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA38AEC, &type metadata for FMFindingMeasurement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7600);
  }
  return result;
}

double sub_23A9CC9DC()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double result;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget + 8))
    v1 = 1.79769313e308;
  else
    v1 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget);
  v2 = v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  v3 = v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  v4 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v2 + 280) + v4 == 1.79769313e308)
  {
    sub_23A9829AC(v1);
    *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v4 = *(double *)(v3 + 40);
  }
  result = v1 - v4;
  *(double *)(v2 + 280) = result;
  *(double *)(v2 + 240) = result;
  *(_QWORD *)(v2 + 248) = 0;
  return result;
}

BOOL sub_23A9CCAA0()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  double v3;

  v1 = v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  v2 = (double *)(v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v3 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v1 + 280) + v3 == 1.79769313e308)
    return 1;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) == 1
    && sub_23A982804()
    && vabdd_f64(*v2, v3) <= v2[6])
  {
    return fabs(v2[1]) <= v2[7];
  }
  return 0;
}

void sub_23A9CCBE4(double a1)
{
  uint64_t v1;

  sub_23A9829AC(a1);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
}

id sub_23A9CCC04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFFluidSpring();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFFluidSpring()
{
  return objc_opt_self();
}

_QWORD *sub_23A9CCC54(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BYTE *v6;
  char *v7;
  char *v8;
  _OWORD *v9;
  _OWORD *v10;
  char *v11;
  int64x2_t v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _OWORD *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double *v22;
  double *v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  objc_super v33;

  v6 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  v7 = &v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *v9 = xmmword_23AA38F90;
  v9[1] = xmmword_23AA38FA0;
  v10 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *v10 = xmmword_23AA38F90;
  v10[1] = xmmword_23AA38FA0;
  v11 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 9) = 0;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  v12 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v11 + 7) = 0u;
  *((_OWORD *)v11 + 8) = 0u;
  *((int64x2_t *)v11 + 5) = v12;
  *((_OWORD *)v11 + 6) = 0u;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 23) = 0;
  *(_OWORD *)(v11 + 168) = 0u;
  *(_OWORD *)(v11 + 152) = 0u;
  *((_OWORD *)v11 + 14) = 0u;
  *((_OWORD *)v11 + 15) = 0u;
  *((int64x2_t *)v11 + 12) = v12;
  *((_OWORD *)v11 + 13) = 0u;
  *((_QWORD *)v11 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v11 + 264) = 0u;
  *(_OWORD *)(v11 + 280) = 0u;
  *((_QWORD *)v11 + 37) = 0;
  *((int64x2_t *)v11 + 19) = v12;
  *((_OWORD *)v11 + 20) = 0u;
  *((_OWORD *)v11 + 21) = 0u;
  *((_OWORD *)v11 + 22) = 0u;
  v13 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *((_QWORD *)v13 + 7) = 0;
  *((int64x2_t *)v13 + 4) = v12;
  *((_OWORD *)v13 + 5) = 0u;
  *((_OWORD *)v13 + 6) = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v6;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  v14 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v14) + 0x1B0))(0.0);
  v15 = (char *)v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(_QWORD *)v15 = 0x3FF0000000000000;
  v15[8] = 0;
  v16 = (_OWORD *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v17 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v18 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v19 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v20 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *v16 = xmmword_23AA38440;
  v16[1] = xmmword_23AA38440;
  sub_23A9828C4(v17, v18, v19, v20);
  if ((a2 & 1) != 0)
    v21 = 1.79769313e308;
  else
    v21 = *(double *)&a1;
  v22 = (double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *v22 = v21;
  v23 = (double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v24 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v25 = v22[35] + v24;
  v26 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v25, v21 + *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v27 = v21 + *v23;
  else
    v27 = v22[35] + v24;
  if (v25 == 1.79769313e308)
  {
    sub_23A9829AC(v27);
    *((_BYTE *)v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v24 = v23[5];
  }
  v28 = v27 - v24;
  v22[35] = v28;
  v22[30] = v28;
  v22[31] = 0.0;
  v29 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v29 = 0.0;
  *(double *)((char *)v14 + v26) = v29;
  v22[44] = v29;
  v23[6] = v29;
  *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v22[45] = 0.01;
  v23[7] = 0.01;
  return v14;
}

_QWORD *sub_23A9CCF6C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  _BYTE *v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  _OWORD *v14;
  char *v15;
  int64x2_t v16;
  char *v17;
  _QWORD *v18;
  double v19;
  double *v20;
  double *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double *v27;
  double *v28;
  double v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  objc_super v38;

  v10 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  v11 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *v13 = xmmword_23AA38F90;
  v13[1] = xmmword_23AA38FA0;
  v14 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *v14 = xmmword_23AA38F90;
  v14[1] = xmmword_23AA38FA0;
  v15 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0x3FF0000000000000;
  *((_QWORD *)v15 + 9) = 0;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  v16 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v15 + 7) = 0u;
  *((_OWORD *)v15 + 8) = 0u;
  *((int64x2_t *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = 0u;
  *((_QWORD *)v15 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v15 + 23) = 0;
  *(_OWORD *)(v15 + 168) = 0u;
  *(_OWORD *)(v15 + 152) = 0u;
  *((_OWORD *)v15 + 14) = 0u;
  *((_OWORD *)v15 + 15) = 0u;
  *((int64x2_t *)v15 + 12) = v16;
  *((_OWORD *)v15 + 13) = 0u;
  *((_QWORD *)v15 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v15 + 264) = 0u;
  *(_OWORD *)(v15 + 280) = 0u;
  *((_QWORD *)v15 + 37) = 0;
  *((int64x2_t *)v15 + 19) = v16;
  *((_OWORD *)v15 + 20) = 0u;
  *((_OWORD *)v15 + 21) = 0u;
  *((_OWORD *)v15 + 22) = 0u;
  v17 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *((_QWORD *)v17 + 7) = 0;
  *((int64x2_t *)v17 + 4) = v16;
  *((_OWORD *)v17 + 5) = 0u;
  *((_OWORD *)v17 + 6) = 0u;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for FLSpring();
  v18 = objc_msgSendSuper2(&v38, sel_init);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v18) + 0x1B0))(0.0);
  if ((a6 & 1) != 0)
    v19 = 0.5;
  else
    v19 = *(double *)&a5;
  v20 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse);
  *v20 = v19;
  *((_BYTE *)v20 + 8) = 0;
  v21 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v22 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v23 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v24 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v25 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *(_OWORD *)v21 = xmmword_23AA38440;
  v21[2] = v19;
  v21[3] = 0.0;
  sub_23A9828C4(v22, v23, v24, v25);
  if ((a2 & 1) != 0)
    v26 = 1.79769313e308;
  else
    v26 = *(double *)&a1;
  v27 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *v27 = v26;
  v28 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v29 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v30 = v27[35] + v29;
  v31 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v30, v26 + *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v32 = v26 + *v28;
  else
    v32 = v27[35] + v29;
  if (v30 == 1.79769313e308)
  {
    sub_23A9829AC(v32);
    *((_BYTE *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v29 = v28[5];
  }
  v33 = v32 - v29;
  v27[35] = v33;
  v27[30] = v33;
  v27[31] = 0.0;
  v34 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(double *)((char *)v18 + v31) = v34;
  v27[44] = v34;
  v28[6] = v34;
  *(_QWORD *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v27[45] = 0.01;
  v28[7] = 0.01;
  return v18;
}

_QWORD *sub_23A9CD2AC(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  _BYTE *v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  _OWORD *v14;
  char *v15;
  int64x2_t v16;
  char *v17;
  _QWORD *v18;
  double v19;
  unint64_t v20;
  double v21;
  double *v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double *v29;
  double *v30;
  double v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  objc_super v40;

  v10 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  v11 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *v13 = xmmword_23AA38F90;
  v13[1] = xmmword_23AA38FA0;
  v14 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *v14 = xmmword_23AA38F90;
  v14[1] = xmmword_23AA38FA0;
  v15 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0x3FF0000000000000;
  *((_QWORD *)v15 + 9) = 0;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  v16 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v15 + 7) = 0u;
  *((_OWORD *)v15 + 8) = 0u;
  *((int64x2_t *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = 0u;
  *((_QWORD *)v15 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v15 + 23) = 0;
  *(_OWORD *)(v15 + 168) = 0u;
  *(_OWORD *)(v15 + 152) = 0u;
  *((_OWORD *)v15 + 14) = 0u;
  *((_OWORD *)v15 + 15) = 0u;
  *((int64x2_t *)v15 + 12) = v16;
  *((_OWORD *)v15 + 13) = 0u;
  *((_QWORD *)v15 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v15 + 264) = 0u;
  *(_OWORD *)(v15 + 280) = 0u;
  *((_QWORD *)v15 + 37) = 0;
  *((int64x2_t *)v15 + 19) = v16;
  *((_OWORD *)v15 + 20) = 0u;
  *((_OWORD *)v15 + 21) = 0u;
  *((_OWORD *)v15 + 22) = 0u;
  v17 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *((_QWORD *)v17 + 7) = 0;
  *((int64x2_t *)v17 + 4) = v16;
  *((_OWORD *)v17 + 5) = 0u;
  *((_OWORD *)v17 + 6) = 0u;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v40.receiver = v10;
  v40.super_class = (Class)type metadata accessor for FLSpring();
  v18 = objc_msgSendSuper2(&v40, sel_init);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v18) + 0x1B0))(0.0);
  if ((a4 & 1) != 0)
  {
    v20 = sub_23A9644D8(0x20000000000001);
    v19 = ((double)v20 * 1.11022302e-16 * 100.0 + 0.0) / 100.0;
    if (v20 == 0x20000000000000)
      v19 = 1.0;
  }
  else
  {
    v19 = *(double *)&a3;
  }
  v21 = v19 + 1.0 - v19 + 1.0 - v19;
  v22 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse);
  *v22 = v21;
  *((_BYTE *)v22 + 8) = 0;
  v23 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v24 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v25 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v26 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v27 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *(_OWORD *)v23 = xmmword_23AA38440;
  v23[2] = v21;
  v23[3] = 0.0;
  sub_23A9828C4(v24, v25, v26, v27);
  if ((a2 & 1) != 0)
    v28 = 1.79769313e308;
  else
    v28 = *(double *)&a1;
  v29 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *v29 = v28;
  v30 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v31 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v32 = v29[35] + v31;
  v33 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v32, v28 + *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v34 = v28 + *v30;
  else
    v34 = v29[35] + v31;
  if (v32 == 1.79769313e308)
  {
    sub_23A9829AC(v34);
    *((_BYTE *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v31 = v30[5];
  }
  v35 = v34 - v31;
  v29[35] = v35;
  v29[30] = v35;
  v29[31] = 0.0;
  v36 = *(double *)&a5;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(double *)((char *)v18 + v33) = v36;
  v29[44] = v36;
  v30[6] = v36;
  *(_QWORD *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v29[45] = 0.01;
  v30[7] = 0.01;
  return v18;
}

_QWORD *sub_23A9CD634(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BYTE *v7;
  char *v8;
  char *v9;
  _OWORD *v10;
  _OWORD *v11;
  char *v12;
  int64x2_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _OWORD *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  objc_super v33;

  v7 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  v8 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *v10 = xmmword_23AA38F90;
  v10[1] = xmmword_23AA38FA0;
  v11 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *v11 = xmmword_23AA38F90;
  v11[1] = xmmword_23AA38FA0;
  v12 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 9) = 0;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  v13 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v12 + 7) = 0u;
  *((_OWORD *)v12 + 8) = 0u;
  *((int64x2_t *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = 0u;
  *((_QWORD *)v12 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 23) = 0;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *((_OWORD *)v12 + 14) = 0u;
  *((_OWORD *)v12 + 15) = 0u;
  *((int64x2_t *)v12 + 12) = v13;
  *((_OWORD *)v12 + 13) = 0u;
  *((_QWORD *)v12 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v12 + 264) = 0u;
  *(_OWORD *)(v12 + 280) = 0u;
  *((_QWORD *)v12 + 37) = 0;
  *((int64x2_t *)v12 + 19) = v13;
  *((_OWORD *)v12 + 20) = 0u;
  *((_OWORD *)v12 + 21) = 0u;
  *((_OWORD *)v12 + 22) = 0u;
  v14 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *((_QWORD *)v14 + 7) = 0;
  *((int64x2_t *)v14 + 4) = v13;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  v15 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v15) + 0x1B0))(0.0);
  v16 = (char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(_QWORD *)v16 = 0x4000000000000000;
  v16[8] = 0;
  v17 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *v17 = xmmword_23AA38440;
  v17[1] = xmmword_23AA38FB0;
  sub_23A9828C4(v18, v19, v20, v21);
  if ((a2 & 1) != 0)
    v22 = 1.79769313e308;
  else
    v22 = *(double *)&a1;
  v23 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *v23 = v22;
  v24 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v25 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v26 = v23[35] + v25;
  v27 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v26, v22 + *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v28 = v22 + *v24;
  else
    v28 = v23[35] + v25;
  if (v26 == 1.79769313e308)
  {
    sub_23A9829AC(v28);
    *((_BYTE *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v25 = v24[5];
  }
  v29 = v28 - v25;
  v23[35] = v29;
  v23[30] = v29;
  v23[31] = 0.0;
  v30 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v30 = 0.0;
  *(double *)((char *)v15 + v27) = v30;
  v23[44] = v30;
  v24[6] = v30;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v23[45] = 0.01;
  v24[7] = 0.01;
  return v15;
}

_QWORD *sub_23A9CD958(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BYTE *v7;
  char *v8;
  char *v9;
  _OWORD *v10;
  _OWORD *v11;
  char *v12;
  int64x2_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _OWORD *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  objc_super v33;

  v7 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  v8 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *v10 = xmmword_23AA38F90;
  v10[1] = xmmword_23AA38FA0;
  v11 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *v11 = xmmword_23AA38F90;
  v11[1] = xmmword_23AA38FA0;
  v12 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 9) = 0;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  v13 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v12 + 7) = 0u;
  *((_OWORD *)v12 + 8) = 0u;
  *((int64x2_t *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = 0u;
  *((_QWORD *)v12 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 23) = 0;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *((_OWORD *)v12 + 14) = 0u;
  *((_OWORD *)v12 + 15) = 0u;
  *((int64x2_t *)v12 + 12) = v13;
  *((_OWORD *)v12 + 13) = 0u;
  *((_QWORD *)v12 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v12 + 264) = 0u;
  *(_OWORD *)(v12 + 280) = 0u;
  *((_QWORD *)v12 + 37) = 0;
  *((int64x2_t *)v12 + 19) = v13;
  *((_OWORD *)v12 + 20) = 0u;
  *((_OWORD *)v12 + 21) = 0u;
  *((_OWORD *)v12 + 22) = 0u;
  v14 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *((_QWORD *)v14 + 7) = 0;
  *((int64x2_t *)v14 + 4) = v13;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  v15 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v15) + 0x1B0))(0.0);
  v16 = (char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(_QWORD *)v16 = 0x3FD0000000000000;
  v16[8] = 0;
  v17 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *v17 = xmmword_23AA38440;
  v17[1] = xmmword_23AA38FC0;
  sub_23A9828C4(v18, v19, v20, v21);
  if ((a2 & 1) != 0)
    v22 = 1.79769313e308;
  else
    v22 = *(double *)&a1;
  v23 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *v23 = v22;
  v24 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v25 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v26 = v23[35] + v25;
  v27 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v26, v22 + *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v28 = v22 + *v24;
  else
    v28 = v23[35] + v25;
  if (v26 == 1.79769313e308)
  {
    sub_23A9829AC(v28);
    *((_BYTE *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v25 = v24[5];
  }
  v29 = v28 - v25;
  v23[35] = v29;
  v23[30] = v29;
  v23[31] = 0.0;
  v30 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v30 = 0.0;
  *(double *)((char *)v15 + v27) = v30;
  v23[44] = v30;
  v24[6] = v30;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v23[45] = 0.01;
  v24[7] = 0.01;
  return v15;
}

_QWORD *sub_23A9CDC7C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BYTE *v7;
  char *v8;
  char *v9;
  _OWORD *v10;
  _OWORD *v11;
  char *v12;
  int64x2_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _OWORD *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  objc_super v33;

  v7 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  v8 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *v10 = xmmword_23AA38F90;
  v10[1] = xmmword_23AA38FA0;
  v11 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *v11 = xmmword_23AA38F90;
  v11[1] = xmmword_23AA38FA0;
  v12 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 9) = 0;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  v13 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v12 + 7) = 0u;
  *((_OWORD *)v12 + 8) = 0u;
  *((int64x2_t *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = 0u;
  *((_QWORD *)v12 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 23) = 0;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *((_OWORD *)v12 + 14) = 0u;
  *((_OWORD *)v12 + 15) = 0u;
  *((int64x2_t *)v12 + 12) = v13;
  *((_OWORD *)v12 + 13) = 0u;
  *((_QWORD *)v12 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v12 + 264) = 0u;
  *(_OWORD *)(v12 + 280) = 0u;
  *((_QWORD *)v12 + 37) = 0;
  *((int64x2_t *)v12 + 19) = v13;
  *((_OWORD *)v12 + 20) = 0u;
  *((_OWORD *)v12 + 21) = 0u;
  *((_OWORD *)v12 + 22) = 0u;
  v14 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *((_QWORD *)v14 + 7) = 0;
  *((int64x2_t *)v14 + 4) = v13;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  v15 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v15) + 0x1B0))(0.0);
  v16 = (char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(_QWORD *)v16 = 0x3FE3333333333333;
  v16[8] = 0;
  v17 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *v17 = xmmword_23AA38440;
  v17[1] = xmmword_23AA38FD0;
  sub_23A9828C4(v18, v19, v20, v21);
  if ((a2 & 1) != 0)
    v22 = 1.79769313e308;
  else
    v22 = *(double *)&a1;
  v23 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *v23 = v22;
  v24 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v25 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v26 = v23[35] + v25;
  v27 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v26, v22 + *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v28 = v22 + *v24;
  else
    v28 = v23[35] + v25;
  if (v26 == 1.79769313e308)
  {
    sub_23A9829AC(v28);
    *((_BYTE *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v25 = v24[5];
  }
  v29 = v28 - v25;
  v23[35] = v29;
  v23[30] = v29;
  v23[31] = 0.0;
  v30 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v30 = 0.0;
  *(double *)((char *)v15 + v27) = v30;
  v23[44] = v30;
  v24[6] = v30;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v23[45] = 0.01;
  v24[7] = 0.01;
  return v15;
}

uint64_t destroy for FMR1DebugViewStyle(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMR1DebugViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMR1DebugViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMR1DebugViewStyle()
{
  return &type metadata for FMR1DebugViewStyle;
}

double sub_23A9CE23C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  double result;

  v0 = (void *)sub_23AA32FB4();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_fontWithName_size_, v0, 14.0);

  v3 = *MEMORY[0x24BEBE1F0];
  if (!v2)
    v2 = objc_msgSend(v1, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1F0]);
  v4 = objc_msgSend(v1, sel_preferredFontForTextStyle_, v3);
  v5 = sub_23A9B310C(2);

  qword_2569E03E8 = (uint64_t)v2;
  unk_2569E03F0 = v5;
  xmmword_2569E03F8 = xmmword_23AA39000;
  qword_2569E0408 = 0x4020000000000000;
  qword_2569E0410 = (uint64_t)&unk_250BBEFA0;
  qword_2569E0418 = (uint64_t)&unk_250BBEFF0;
  result = 0.75;
  unk_2569E0420 = xmmword_23AA39010;
  qword_2569E0430 = 0x4010000000000000;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingConvergenceHint(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23A9CE3A4 + 4 * asc_23AA39050[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FMFindingConvergenceHint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A9CE45C + 4 * byte_23AA3905A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A9CE490 + 4 * byte_23AA39055[v5]))();
}

uint64_t sub_23A9CE490(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CE498(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9CE4A0);
  return result;
}

uint64_t sub_23A9CE4AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9CE4B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A9CE4B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CE4C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CE4CC(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_23A9CE4E8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint()
{
  return &type metadata for FMFindingConvergenceHint;
}

uint64_t sub_23A9CE510(_QWORD *a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = sub_23A964084(&qword_2569D7680);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A964084(&qword_2569D7688);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A964084(&qword_2569D7690);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A9CEF90();
  sub_23AA33818();
  if (v17 == 2)
  {
    v19 = 1;
    sub_23A9CEFD4();
    sub_23AA3368C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23A9CF018();
    sub_23AA3368C();
    sub_23AA336B0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23A9CE724()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0xD000000000000014;
}

uint64_t sub_23A9CE764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A9CEB14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A9CE788()
{
  sub_23A9CEF90();
  return sub_23AA33830();
}

uint64_t sub_23A9CE7B0()
{
  sub_23A9CEF90();
  return sub_23AA3383C();
}

uint64_t sub_23A9CE7D8()
{
  sub_23A9CEFD4();
  return sub_23AA33830();
}

uint64_t sub_23A9CE800()
{
  sub_23A9CEFD4();
  return sub_23AA3383C();
}

uint64_t sub_23A9CE828()
{
  return 0x746E6F7A69726F68;
}

uint64_t sub_23A9CE844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746E6F7A69726F68 && a2 == 0xEA00000000006C61)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23AA33728();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23A9CE8E4()
{
  sub_23A9CF018();
  return sub_23AA33830();
}

uint64_t sub_23A9CE90C()
{
  sub_23A9CF018();
  return sub_23AA3383C();
}

uint64_t sub_23A9CE934(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_23A9CE96C()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23AA337DC();
  if (v1 != 2)
    sub_23AA337E8();
  return sub_23AA33800();
}

uint64_t sub_23A9CE9D8()
{
  _BYTE *v0;

  if (*v0 == 2)
    return sub_23AA337DC();
  sub_23AA337DC();
  return sub_23AA337E8();
}

uint64_t sub_23A9CEA24()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23AA337DC();
  if (v1 != 2)
    sub_23AA337E8();
  return sub_23AA33800();
}

uint64_t sub_23A9CEA8C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A9CEBFC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23A9CEAB4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_23A9CE510(a1, *v1);
}

unint64_t sub_23A9CEAD0()
{
  unint64_t result;

  result = qword_2569D7648;
  if (!qword_2569D7648)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3912C, &type metadata for FMFindingConvergenceHint);
    atomic_store(result, (unint64_t *)&qword_2569D7648);
  }
  return result;
}

uint64_t sub_23A9CEB14(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023AA3B140 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023AA3E750)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A9CEBFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  char v33;

  v26 = sub_23A964084(&qword_2569D7650);
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23A964084(&qword_2569D7658);
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A964084(&qword_2569D7660);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)sub_23A96545C(a1, a1[3]);
  sub_23A9CEF90();
  v30 = v9;
  v11 = v31;
  sub_23AA3380C();
  if (v11)
    goto LABEL_7;
  v13 = v27;
  v12 = v28;
  v25 = v3;
  v14 = v29;
  v31 = v7;
  v15 = sub_23AA33680();
  if (*(_QWORD *)(v15 + 16) != 1)
  {
    v18 = sub_23AA3353C();
    swift_allocError();
    v20 = v19;
    sub_23A964084(&qword_2569D5750);
    *v20 = &type metadata for FMFindingConvergenceHint;
    v10 = (uint64_t)v30;
    sub_23AA33620();
    sub_23AA33530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v10, v6);
LABEL_7:
    sub_23A963B3C((uint64_t)a1);
    return v10;
  }
  v16 = v30;
  v24 = v15;
  if ((*(_BYTE *)(v15 + 32) & 1) != 0)
  {
    v17 = (uint64_t)a1;
    v33 = 1;
    sub_23A9CEFD4();
    sub_23AA33614();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v6);
    v10 = 2;
  }
  else
  {
    v32 = 0;
    sub_23A9CF018();
    v21 = v16;
    sub_23AA33614();
    v23 = sub_23AA33644();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v6);
    v10 = v23 & 1;
    v17 = (uint64_t)a1;
  }
  sub_23A963B3C(v17);
  return v10;
}

unint64_t sub_23A9CEF90()
{
  unint64_t result;

  result = qword_2569D7668;
  if (!qword_2569D7668)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA393FC, &type metadata for FMFindingConvergenceHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7668);
  }
  return result;
}

unint64_t sub_23A9CEFD4()
{
  unint64_t result;

  result = qword_2569D7670;
  if (!qword_2569D7670)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA393AC, &type metadata for FMFindingConvergenceHint.FindableIsMovingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7670);
  }
  return result;
}

unint64_t sub_23A9CF018()
{
  unint64_t result;

  result = qword_2569D7678;
  if (!qword_2569D7678)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3935C, &type metadata for FMFindingConvergenceHint.InsufficientMovementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7678);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFindingConvergenceHint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A9CF0A8 + 4 * byte_23AA39064[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A9CF0DC + 4 * byte_23AA3905F[v4]))();
}

uint64_t sub_23A9CF0DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CF0E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9CF0ECLL);
  return result;
}

uint64_t sub_23A9CF0F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9CF100);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A9CF104(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9CF10C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint.CodingKeys()
{
  return &type metadata for FMFindingConvergenceHint.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FMFindingConvergenceHint.InsufficientMovementCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23A9CF168 + 4 * byte_23AA39069[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23A9CF188 + 4 * byte_23AA3906E[v4]))();
}

_BYTE *sub_23A9CF168(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23A9CF188(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A9CF190(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A9CF198(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A9CF1A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A9CF1A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint.InsufficientMovementCodingKeys()
{
  return &type metadata for FMFindingConvergenceHint.InsufficientMovementCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint.FindableIsMovingCodingKeys()
{
  return &type metadata for FMFindingConvergenceHint.FindableIsMovingCodingKeys;
}

unint64_t sub_23A9CF1D8()
{
  unint64_t result;

  result = qword_2569D7698;
  if (!qword_2569D7698)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3927C, &type metadata for FMFindingConvergenceHint.InsufficientMovementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7698);
  }
  return result;
}

unint64_t sub_23A9CF220()
{
  unint64_t result;

  result = qword_2569D76A0;
  if (!qword_2569D76A0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39334, &type metadata for FMFindingConvergenceHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76A0);
  }
  return result;
}

unint64_t sub_23A9CF268()
{
  unint64_t result;

  result = qword_2569D76A8;
  if (!qword_2569D76A8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA391EC, &type metadata for FMFindingConvergenceHint.InsufficientMovementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76A8);
  }
  return result;
}

unint64_t sub_23A9CF2B0()
{
  unint64_t result;

  result = qword_2569D76B0;
  if (!qword_2569D76B0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39214, &type metadata for FMFindingConvergenceHint.InsufficientMovementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76B0);
  }
  return result;
}

unint64_t sub_23A9CF2F8()
{
  unint64_t result;

  result = qword_2569D76B8;
  if (!qword_2569D76B8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3919C, &type metadata for FMFindingConvergenceHint.FindableIsMovingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76B8);
  }
  return result;
}

unint64_t sub_23A9CF340()
{
  unint64_t result;

  result = qword_2569D76C0;
  if (!qword_2569D76C0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA391C4, &type metadata for FMFindingConvergenceHint.FindableIsMovingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76C0);
  }
  return result;
}

unint64_t sub_23A9CF388()
{
  unint64_t result;

  result = qword_2569D76C8;
  if (!qword_2569D76C8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA392A4, &type metadata for FMFindingConvergenceHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76C8);
  }
  return result;
}

unint64_t sub_23A9CF3D0()
{
  unint64_t result;

  result = qword_2569D76D0;
  if (!qword_2569D76D0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA392CC, &type metadata for FMFindingConvergenceHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D76D0);
  }
  return result;
}

uint64_t sub_23A9CF414(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A9CF454 + 4 * byte_23AA3944C[a1]))(0x74617262696C6163, 0xEF65646F4D6E6F69);
}

unint64_t sub_23A9CF454()
{
  return 0xD000000000000011;
}

unint64_t sub_23A9CF474()
{
  return 0xD000000000000010;
}

void sub_23A9CF49C(char *a1)
{
  sub_23AA154A8(*a1);
}

uint64_t sub_23A9CF4A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A9CF414(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_23A9CF4D0()
{
  *(_QWORD *)&xmmword_2569E0438 = *MEMORY[0x24BEBE248];
  *(__int128 *)((char *)&xmmword_2569E0438 + 8) = (__int128)vdupq_n_s64(0x4040000000000000uLL);
  unk_2569E0450 = xmmword_23AA39450;
  qword_2569E0460 = 2;
  __asm { FMOV            V0.2D, #3.0 }
  xmmword_2569E0468 = _Q0;
  xmmword_2569E0478 = _Q0;
  return (id)xmmword_2569E0438;
}

id sub_23A9CF514(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  id v14;
  id v15;
  double v16;
  id v17;
  objc_super v19;
  _OWORD v20[2];
  uint64_t v21;

  v5 = OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView;
  v6 = objc_allocWithZone(MEMORY[0x24BEBD978]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_init);
  v8 = (uint64_t)&v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value];
  *(_QWORD *)(v8 + 32) = 0;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  v9 = &v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style];
  v11 = *(_OWORD *)(a2 + 16);
  v10 = *(_OWORD *)(a2 + 32);
  v12 = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v9 + 3) = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v9 + 4) = v12;
  *((_OWORD *)v9 + 1) = v11;
  *((_OWORD *)v9 + 2) = v10;
  *(_OWORD *)v9 = *(_OWORD *)a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_findables] = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23A963A14(a1 + 32, (uint64_t)v20);
  }
  else
  {
    v21 = 0;
    memset(v20, 0, sizeof(v20));
  }
  swift_beginAccess();
  sub_23A9D19B0((id *)a2);
  sub_23A967B0C((uint64_t)v20, v8);
  swift_endAccess();
  v13 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, *(_QWORD *)(a2 + 24));
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, v13);

  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_platterEffectView] = v14;
  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for FMFindingSymbolBasedPartPickerView();
  v15 = objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23A9CFD98(v16);
  sub_23A9D02F8();
  sub_23A9CFEF4();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, v15, sel_toggle);
  objc_msgSend(v15, sel_addGestureRecognizer_, v17);

  sub_23A9D19D8((id *)a2);
  return v15;
}

uint64_t sub_23A9CF7BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _BYTE v56[40];
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v1 = sub_23AA32E1C();
  v55 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v47 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23A964084(&qword_2569D53E0);
  MEMORY[0x24BDAC7A8](v53);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v44 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_findables];
  v14 = *(_QWORD *)(v13 + 16);
  v15 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style;
  v51 = v14;
  if (!v14)
  {
LABEL_18:
    v41 = *(_QWORD *)(v13 + 16);
    if (v14 >= v41)
    {
      if (!v41)
      {
        v59 = 0;
        v57 = 0u;
        v58 = 0u;
        goto LABEL_24;
      }
      v42 = v13 + 32;
    }
    else
    {
      if (v14 < 0)
      {
        __break(1u);
        goto LABEL_27;
      }
      v42 = v13 + 40 * v14 + 32;
    }
    sub_23A963A14(v42, (uint64_t)&v57);
LABEL_24:
    sub_23A968378((uint64_t)&v57, (uint64_t)v56, &qword_2569D53C8);
    v43 = (uint64_t)&v0[v15[223]];
    swift_beginAccess();
    sub_23A967B54((uint64_t)v56, v43);
    swift_endAccess();
    sub_23A9D02F8();
    sub_23A9683BC((uint64_t)v56, &qword_2569D53C8);
    objc_msgSend(v0, sel_sendActionsForControlEvents_, 4096);
    return sub_23A9683BC((uint64_t)&v57, &qword_2569D53C8);
  }
  v16 = (_QWORD *)(v13 + 32);
  v45 = v0;
  v17 = (uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value];
  v46 = v13;
  swift_bridgeObjectRetain();
  v49 = v17;
  swift_beginAccess();
  v18 = 0;
  v48 = v4;
  v50 = v12;
  while (1)
  {
    v19 = v16[3];
    v20 = v16[4];
    sub_23A96545C(v16, v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    v21 = v12;
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
    v22(v21, 0, 1, v1);
    sub_23A968378(v49, (uint64_t)&v57, &qword_2569D53C8);
    v23 = *((_QWORD *)&v58 + 1);
    if (*((_QWORD *)&v58 + 1))
    {
      v24 = v59;
      v25 = sub_23A96545C(&v57, *((uint64_t *)&v58 + 1));
      v26 = v1;
      v27 = *(_QWORD *)(v23 - 8);
      MEMORY[0x24BDAC7A8](v25);
      v29 = (char *)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v27 + 16))(v29);
      sub_23A9683BC((uint64_t)&v57, &qword_2569D53C8);
      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 16);
      v31 = v24;
      v32 = (uint64_t)v54;
      v30(v23, v31);
      v33 = *(void (**)(char *, uint64_t))(v27 + 8);
      v1 = v26;
      v33(v29, v23);
      v22((char *)v32, 0, 1, v26);
      v4 = v48;
    }
    else
    {
      sub_23A9683BC((uint64_t)&v57, &qword_2569D53C8);
      v32 = (uint64_t)v54;
      v22(v54, 1, 1, v1);
    }
    v34 = (uint64_t)&v4[*(int *)(v53 + 48)];
    v12 = v50;
    sub_23A968378((uint64_t)v50, (uint64_t)v4, (uint64_t *)&unk_2569D5D30);
    sub_23A968378(v32, v34, (uint64_t *)&unk_2569D5D30);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    if (v35(v4, 1, v1) == 1)
      break;
    sub_23A968378((uint64_t)v4, v52, (uint64_t *)&unk_2569D5D30);
    if (v35((char *)v34, 1, v1) == 1)
    {
      sub_23A9683BC(v32, (uint64_t *)&unk_2569D5D30);
      sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v52, v1);
      goto LABEL_4;
    }
    v36 = v55;
    v37 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v47, v34, v1);
    sub_23A9D29E0();
    v38 = v52;
    v39 = sub_23AA32FA8();
    v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    v40(v37, v1);
    sub_23A9683BC((uint64_t)v54, (uint64_t *)&unk_2569D5D30);
    sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
    v40((char *)v38, v1);
    sub_23A9683BC((uint64_t)v4, (uint64_t *)&unk_2569D5D30);
    if ((v39 & 1) != 0)
      goto LABEL_16;
LABEL_5:
    ++v18;
    v16 += 5;
    if (v51 == v18)
    {
      v13 = v46;
      result = swift_bridgeObjectRelease();
      v14 = 0;
      v0 = v45;
      v15 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style;
      goto LABEL_18;
    }
  }
  sub_23A9683BC(v32, (uint64_t *)&unk_2569D5D30);
  sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
  if (v35((char *)v34, 1, v1) != 1)
  {
LABEL_4:
    sub_23A9683BC((uint64_t)v4, &qword_2569D53E0);
    goto LABEL_5;
  }
  sub_23A9683BC((uint64_t)v4, (uint64_t *)&unk_2569D5D30);
LABEL_16:
  result = swift_bridgeObjectRelease();
  v14 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    v0 = v45;
    v15 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style;
    v13 = v46;
    goto LABEL_18;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_23A9CFD98(double a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  LODWORD(a1) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, a1);
  v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_platterEffectView];
  objc_msgSend(v1, sel_addSubview_, v2);
  v3 = objc_msgSend(v2, sel_contentView);
  v4 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView];
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v5, sel_setCornerCurve_, *MEMORY[0x24BDE58E8]);

  v6 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v6, sel_setMasksToBounds_, 1);

  objc_msgSend(v1, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v4, sel_setDirectionalLayoutMargins_, *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 48], *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 56], *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 64], *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 72]);
  objc_msgSend(v4, sel_setLayoutMarginsRelativeArrangement_, 1);
  return objc_msgSend(v4, sel_setAxis_, 0);
}

void sub_23A9CFEF4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView];
  v3 = *(id *)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_platterEffectView];
  v4 = v2;
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v30 = (void *)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23AA39460;
  v6 = objc_msgSend(v4, sel_leadingAnchor);
  v7 = objc_msgSend(v3, (SEL)&stru_250BD6128.name + 6);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v4, sel_trailingAnchor);
  v10 = objc_msgSend(v3, sel_trailingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v4, sel_topAnchor);
  v13 = objc_msgSend(v3, sel_topAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v4, sel_bottomAnchor);
  v16 = objc_msgSend(v3, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 56) = v17;
  v18 = objc_msgSend(v1, sel_leadingAnchor);
  v19 = objc_msgSend(v3, sel_leadingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v5 + 64) = v20;
  v21 = objc_msgSend(v1, sel_trailingAnchor);
  v22 = objc_msgSend(v3, sel_trailingAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v5 + 72) = v23;
  v24 = objc_msgSend(v1, sel_topAnchor);
  v25 = objc_msgSend(v3, sel_topAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v5 + 80) = v26;
  v27 = objc_msgSend(v1, sel_bottomAnchor);
  v28 = objc_msgSend(v3, sel_bottomAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v5 + 88) = v29;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v31 = (id)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_activateConstraints_, v31);

}

void sub_23A9D02F8()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;

  v1 = v0;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView], sel_arrangedSubviews);
  sub_23A968488(0, &qword_2569D7E80);
  v3 = sub_23AA330B0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23AA335C0();
    if (!v4)
      goto LABEL_10;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_10;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x23B85D0B0](i, v3);
    else
      v6 = *(id *)(v3 + 8 * i + 32);
    v7 = v6;
    objc_msgSend(v6, sel_removeFromSuperview);

  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  v8 = (void *)objc_opt_self();
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style];
  v10 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, *MEMORY[0x24BEBE0C0]);
  v11 = objc_msgSend(v8, sel_preferredFontForTextStyle_compatibleWithTraitCollection_, v9, v10);

  v12 = (void *)sub_23A9B310C(2);
  v13 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v12, 3);

  v21 = *(_QWORD **)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_findables];
  swift_bridgeObjectRetain_n();
  v1 = v1;
  sub_23A9D27FC(&v21, v1);
  swift_bridgeObjectRelease();

  v14 = v21;
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23A9D2898((uint64_t)v14, (void (*)(_QWORD, char *))sub_23A9D2890);
  swift_release();
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_12;
LABEL_19:

    swift_bridgeObjectRelease_n();
    return;
  }
  swift_bridgeObjectRetain();
  v17 = sub_23AA335C0();
  if (!v17)
    goto LABEL_19;
LABEL_12:
  if (v17 >= 1)
  {
    v18 = 0;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
        v19 = (_QWORD *)MEMORY[0x23B85D0B0](v18, v16);
      else
        v19 = *(id *)(v16 + 8 * v18 + 32);
      v20 = v19;
      ++v18;
      v21 = v19;
      sub_23A9D11C0((id *)&v21, (uint64_t)v1);

    }
    while (v17 != v18);
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);

  swift_release();
  __break(1u);
}

uint64_t sub_23A9D0634(_QWORD *a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  void *v57;
  _QWORD v58[6];
  __int128 v59[2];
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v57 = a3;
  v67 = a2;
  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v56 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v56 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - v15;
  sub_23A963A14((uint64_t)a1, (uint64_t)v61);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084((uint64_t *)&unk_2569D5D80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v56 = v5;
    v17 = v57;
    sub_23A963B98(v59, (uint64_t)v64);
    v18 = v67;
    sub_23A963A14((uint64_t)v67, (uint64_t)v59);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(_QWORD *)((char *)&v58[4] + 2) = 0;
      memset((char *)v58 + 2, 0, 32);
      sub_23A9683BC((uint64_t)v58 + 2, (uint64_t *)&unk_2569D63C0);
      v39 = a1[3];
      v40 = a1[4];
      sub_23A96545C(a1, v39);
      (*(void (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
      v41 = sub_23AA32DE0();
      v43 = v42;
      v44 = *(void (**)(char *, uint64_t))(v56 + 8);
      v44(v11, v4);
      v45 = v18[3];
      v46 = v18[4];
      sub_23A96545C(v18, v45);
      (*(void (**)(uint64_t, uint64_t))(v46 + 16))(v45, v46);
      v47 = sub_23AA32DE0();
      v49 = v48;
      v44(v8, v4);
      if (v41 == v47 && v43 == v49)
        v21 = 0;
      else
        v21 = sub_23AA33728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_23A963B98((__int128 *)((char *)v58 + 2), (uint64_t)v61);
    v19 = objc_msgSend(v17, sel_traitCollection);
    v20 = objc_msgSend(v19, sel_layoutDirection);

    v21 = v20 == (id)1;
    v22 = v65;
    v23 = v66;
    sub_23A96545C(v64, v65);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 32))(v59, v22, v23);
    v24 = LOBYTE(v59[0]);
    v25 = v62;
    v26 = v63;
    sub_23A96545C(v61, v62);
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v26 + 32))((char *)v58 + 2, v25, v26);
    if (v24 == 2)
    {
      if (BYTE2(v58[0]) == 3)
      {
        v21 = v20 != (id)1;
LABEL_21:
        sub_23A963B3C((uint64_t)v61);
LABEL_22:
        sub_23A963B3C((uint64_t)v64);
        return v21 & 1;
      }
    }
    else if (v24 == 3 && BYTE2(v58[0]) == 2)
    {
      goto LABEL_21;
    }
    v50 = v65;
    v51 = v66;
    sub_23A96545C(v64, v65);
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v51 + 32))((char *)v58 + 1, v50, v51);
    v52 = SBYTE1(v58[0]);
    v53 = v62;
    v54 = v63;
    sub_23A96545C(v61, v62);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v54 + 32))(v58, v53, v54);
    v21 = flt_23AA394EC[v52] < flt_23AA394EC[SLOBYTE(v58[0])];
    goto LABEL_21;
  }
  v60 = 0;
  memset(v59, 0, sizeof(v59));
  sub_23A9683BC((uint64_t)v59, (uint64_t *)&unk_2569D63C0);
  v27 = a1[3];
  v28 = a1[4];
  sub_23A96545C(a1, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  v29 = sub_23AA32DE0();
  v31 = v30;
  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v16, v4);
  v33 = v67[3];
  v34 = v67[4];
  sub_23A96545C(v67, v33);
  (*(void (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
  v35 = sub_23AA32DE0();
  v37 = v36;
  v32(v14, v4);
  if (v29 == v35 && v31 == v37)
  {
    swift_bridgeObjectRelease_n();
    v21 = 0;
  }
  else
  {
    v21 = sub_23AA33728();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v21 & 1;
}

uint64_t sub_23A9D0B30(uint64_t a1, _QWORD *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  uint64_t v54;
  char v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  void *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[2];
  uint64_t v74;

  v8 = sub_23AA32E1C();
  v66 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_23A964084(&qword_2569D53E0);
  MEMORY[0x24BDAC7A8](v63);
  v65 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v64 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v59 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v59 - v17;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  sub_23A963A14((uint64_t)a2, (uint64_t)v70);
  sub_23A964084((uint64_t *)&unk_2569D63B0);
  sub_23A964084((uint64_t *)&unk_2569D5D80);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v74 = 0;
    memset(v73, 0, sizeof(v73));
  }
  sub_23A968378((uint64_t)v73, (uint64_t)v70, (uint64_t *)&unk_2569D63C0);
  v20 = v71;
  if (!v71)
  {
    result = sub_23A9683BC((uint64_t)v70, (uint64_t *)&unk_2569D63C0);
    goto LABEL_8;
  }
  v61 = v8;
  v62 = a2;
  v60 = v18;
  v21 = v16;
  v22 = a4;
  v23 = v19;
  v24 = v72;
  sub_23A96545C(v70, v71);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 24))(&v67, v20, v24);
  v25 = v68;
  if (!v68)
  {
    result = sub_23A963B3C((uint64_t)v70);
    v19 = v23;
    a4 = v22;
    v16 = v21;
    v18 = v60;
    v8 = v61;
    a2 = v62;
    v31 = a1 + 1;
    if (!__OFADD__(a1, 1))
      goto LABEL_9;
    goto LABEL_23;
  }
  v26 = v69;
  v27 = a1;
  v28 = v67;
  swift_bridgeObjectRetain();
  v29 = v28;
  a1 = v27;
  sub_23A967EB8(v29, v25);
  result = sub_23A963B3C((uint64_t)v70);
  v19 = v23;
  a4 = v22;
  v16 = v21;
  v18 = v60;
  v8 = v61;
  a2 = v62;
  if (!v26)
  {
LABEL_8:
    v31 = a1 + 1;
    if (!__OFADD__(a1, 1))
    {
LABEL_9:
      v67 = v31;
      v70[0] = sub_23AA33710();
      v70[1] = v32;
      sub_23AA33038();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_23:
    __break(1u);
    return result;
  }
LABEL_10:
  v33 = a3;
  v34 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v34, v33);

  v62 = v35;
  objc_msgSend(v19, sel_setImage_, v35);
  objc_msgSend(v19, sel_setContentMode_, 4);
  v36 = a2[3];
  v37 = a2[4];
  sub_23A96545C(a2, v36);
  (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
  v38 = v66;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  v39(v18, 0, 1, v8);
  v40 = a4 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value;
  swift_beginAccess();
  sub_23A968378(v40, (uint64_t)v70, &qword_2569D53C8);
  v41 = v71;
  if (v71)
  {
    v42 = v72;
    v43 = sub_23A96545C(v70, v71);
    v44 = v19;
    v45 = *(_QWORD *)(v41 - 8);
    MEMORY[0x24BDAC7A8](v43);
    v47 = (char *)&v59 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v45 + 16))(v47);
    sub_23A9683BC((uint64_t)v70, &qword_2569D53C8);
    (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
    v48 = *(void (**)(char *, uint64_t))(v45 + 8);
    v19 = v44;
    v48(v47, v41);
    v39(v16, 0, 1, v8);
    v38 = v66;
  }
  else
  {
    sub_23A9683BC((uint64_t)v70, &qword_2569D53C8);
    v39(v16, 1, 1, v8);
  }
  v49 = v65;
  v50 = v65 + *(int *)(v63 + 48);
  v51 = (uint64_t *)&unk_2569D5D30;
  sub_23A968378((uint64_t)v18, v65, (uint64_t *)&unk_2569D5D30);
  sub_23A968378((uint64_t)v16, v50, (uint64_t *)&unk_2569D5D30);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  v53 = v52(v49, 1, v8);
  v54 = v64;
  if (v53 == 1)
  {
    sub_23A9683BC((uint64_t)v16, (uint64_t *)&unk_2569D5D30);
    sub_23A9683BC((uint64_t)v18, (uint64_t *)&unk_2569D5D30);
    if (v52(v50, 1, v8) == 1)
    {
      v55 = -1;
    }
    else
    {
      v51 = &qword_2569D53E0;
      v55 = 0;
    }
  }
  else
  {
    sub_23A968378(v49, v64, (uint64_t *)&unk_2569D5D30);
    if (v52(v50, 1, v8) == 1)
    {
      sub_23A9683BC((uint64_t)v16, (uint64_t *)&unk_2569D5D30);
      sub_23A9683BC((uint64_t)v18, (uint64_t *)&unk_2569D5D30);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v54, v8);
      v55 = 0;
      v51 = &qword_2569D53E0;
    }
    else
    {
      v56 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v59, v50, v8);
      sub_23A9D29E0();
      v55 = sub_23AA32FA8();
      v57 = *(void (**)(char *, uint64_t))(v38 + 8);
      v57(v56, v8);
      v51 = (uint64_t *)&unk_2569D5D30;
      sub_23A9683BC((uint64_t)v16, (uint64_t *)&unk_2569D5D30);
      sub_23A9683BC((uint64_t)v18, (uint64_t *)&unk_2569D5D30);
      v57((char *)v54, v8);
    }
  }
  v58 = v62;
  sub_23A9683BC(v49, v51);
  objc_msgSend(v19, sel_setHighlighted_, v55 & 1);

  sub_23A9683BC((uint64_t)v73, (uint64_t *)&unk_2569D63C0);
  return (uint64_t)v19;
}

void sub_23A9D11C0(id *a1, uint64_t a2)
{
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;

  v3 = *a1;
  objc_msgSend(*a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = objc_msgSend(v3, sel_isHighlighted);
  v5 = 40;
  if (v4)
    v5 = 32;
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + v5);
  v24 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 6);
  v7 = objc_msgSend((id)objc_opt_self(), sel_effectForBlurEffect_style_, v24, v6);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, v7);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = objc_msgSend(v8, sel_contentView);
  objc_msgSend(v9, sel_addSubview_, v3);

  v23 = (id)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23AA35F80;
  v11 = objc_msgSend(v8, sel_widthAnchor);
  v12 = a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style;
  v13 = objc_msgSend(v11, sel_constraintEqualToConstant_, *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 8));

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v8, sel_heightAnchor);
  v15 = objc_msgSend(v14, sel_constraintEqualToConstant_, *(double *)(v12 + 16));

  *(_QWORD *)(v10 + 40) = v15;
  v16 = objc_msgSend(v8, sel_centerXAnchor);
  v17 = objc_msgSend(v3, sel_centerXAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v10 + 48) = v18;
  v19 = objc_msgSend(v8, sel_centerYAnchor);
  v20 = objc_msgSend(v3, sel_centerYAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v10 + 56) = v21;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v22 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, v22);

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView), sel_addArrangedSubview_, v8);
}

id sub_23A9D1644()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingSymbolBasedPartPickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingSymbolBasedPartPickerView()
{
  return objc_opt_self();
}

void destroy for FMFindingSymbolBasedPartPickerViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for FMFindingSymbolBasedPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  __int128 v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for FMFindingSymbolBasedPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for FMFindingSymbolBasedPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for FMFindingSymbolBasedPartPickerViewStyle()
{
  return &type metadata for FMFindingSymbolBasedPartPickerViewStyle;
}

uint64_t sub_23A9D1848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value;
  swift_beginAccess();
  return sub_23A968378(v3, a1, &qword_2569D53C8);
}

uint64_t sub_23A9D18A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value;
  swift_beginAccess();
  sub_23A967B54(a1, v3);
  swift_endAccess();
  sub_23A9D02F8();
  return sub_23A9683BC(a1, &qword_2569D53C8);
}

uint64_t sub_23A9D1914()
{
  return swift_bridgeObjectRetain();
}

id sub_23A9D1924(uint64_t a1)
{
  id v2;
  _OWORD v4[5];

  if (qword_2569D4B58 != -1)
    swift_once();
  v4[2] = unk_2569E0458;
  v4[3] = xmmword_2569E0468;
  v4[4] = xmmword_2569E0478;
  v4[0] = xmmword_2569E0438;
  v4[1] = unk_2569E0448;
  v2 = objc_allocWithZone((Class)type metadata accessor for FMFindingSymbolBasedPartPickerView());
  sub_23A9D19B0((id *)v4);
  return sub_23A9CF514(a1, (uint64_t)v4);
}

id *sub_23A9D19B0(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_23A9D19D8(id *a1)
{

  return a1;
}

uint64_t sub_23A9D1A00(char *__src, char *a2, unint64_t a3, char *__dst, void *a5)
{
  uint64_t v5;
  char *v6;
  char *v8;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  char v16;
  char v17;
  _OWORD *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  char v30;
  char v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t result;
  _QWORD v38[5];
  _QWORD v39[5];
  char *v40;
  char *v41;
  char *v42;

  v6 = __dst;
  v8 = a2;
  v10 = a2 - __src;
  v11 = (a2 - __src) / 40;
  v12 = a3 - (_QWORD)a2;
  v13 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v42 = __src;
  v41 = __dst;
  if (v11 >= v13)
  {
    if (v12 >= -39)
    {
      v15 = a5;
      if (__dst != a2 || &a2[40 * v13] <= __dst)
        memmove(__dst, a2, 40 * v13);
      v25 = &v6[40 * v13];
      v40 = v25;
      v42 = v8;
      if (__src >= v8 || v12 < 40)
        goto LABEL_45;
      v26 = a3 - 40;
      while (1)
      {
        sub_23A963A14((uint64_t)(v25 - 40), (uint64_t)v39);
        v29 = v8 - 40;
        sub_23A963A14((uint64_t)(v8 - 40), (uint64_t)v38);
        v30 = sub_23A9D0634(v39, v38, a5);
        if (v5)
          goto LABEL_43;
        v31 = v30;
        v32 = (char *)(v26 + 40);
        sub_23A963B3C((uint64_t)v38);
        sub_23A963B3C((uint64_t)v39);
        if ((v31 & 1) != 0)
        {
          if (v32 != v8 || v26 >= (unint64_t)v8)
          {
            v27 = *(_OWORD *)v29;
            v28 = *(_OWORD *)(v8 - 24);
            *(_QWORD *)(v26 + 32) = *((_QWORD *)v8 - 1);
            *(_OWORD *)v26 = v27;
            *(_OWORD *)(v26 + 16) = v28;
          }
          v42 -= 40;
          v25 = v40;
          if (v40 <= v6)
            goto LABEL_45;
        }
        else
        {
          v33 = v40;
          v25 = v40 - 40;
          v40 -= 40;
          if (v32 < v33 || v26 >= (unint64_t)v33 || v32 != v33)
          {
            v34 = *(_OWORD *)v25;
            v35 = *(_OWORD *)(v33 - 24);
            *(_QWORD *)(v26 + 32) = *((_QWORD *)v33 - 1);
            *(_OWORD *)v26 = v34;
            *(_OWORD *)(v26 + 16) = v35;
          }
          v29 = v8;
          if (v25 <= v6)
            goto LABEL_45;
        }
        v26 -= 40;
        v8 = v29;
        if (v29 <= __src)
          goto LABEL_45;
      }
    }
  }
  else if (v10 >= -39)
  {
    if (__dst != __src || &__src[40 * v11] <= __dst)
      memmove(__dst, __src, 40 * v11);
    v14 = (unint64_t)&v6[40 * v11];
    v40 = (char *)v14;
    if ((unint64_t)v8 >= a3)
    {
      v15 = a5;
      goto LABEL_45;
    }
    v15 = a5;
    if (v10 < 40)
    {
LABEL_45:
      sub_23A9F9418((void **)&v42, (const void **)&v41, &v40);

      return 1;
    }
    while (1)
    {
      sub_23A963A14((uint64_t)v8, (uint64_t)v39);
      sub_23A963A14((uint64_t)v6, (uint64_t)v38);
      v16 = sub_23A9D0634(v39, v38, a5);
      if (v5)
        break;
      v17 = v16;
      sub_23A963B3C((uint64_t)v38);
      sub_23A963B3C((uint64_t)v39);
      v18 = v42;
      if ((v17 & 1) != 0)
      {
        v19 = (unint64_t)(v8 + 40);
        if (v42 >= v8 && (unint64_t)v42 < v19 && v42 == v8)
        {
          v18 = v8;
        }
        else
        {
          v20 = *(_OWORD *)v8;
          v21 = *((_OWORD *)v8 + 1);
          *((_QWORD *)v42 + 4) = *((_QWORD *)v8 + 4);
          *v18 = v20;
          v18[1] = v21;
        }
      }
      else
      {
        v22 = v41 + 40;
        if (v42 != v41 || v42 >= v22)
        {
          v23 = *(_OWORD *)v41;
          v24 = *((_OWORD *)v41 + 1);
          *((_QWORD *)v42 + 4) = *((_QWORD *)v41 + 4);
          *v18 = v23;
          v18[1] = v24;
        }
        v41 = v22;
        v19 = (unint64_t)v8;
      }
      v42 = (char *)v18 + 40;
      v6 = v41;
      if ((unint64_t)v41 < v14)
      {
        v8 = (char *)v19;
        if (v19 < a3)
          continue;
      }
      goto LABEL_45;
    }
LABEL_43:
    sub_23A963B3C((uint64_t)v38);
    sub_23A963B3C((uint64_t)v39);
    goto LABEL_45;
  }

  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9D1D88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _QWORD v18[5];
  __int128 v19[2];
  uint64_t v20;

  if (a3 != a2)
  {
    v8 = a3;
    v10 = 40 * a3 - 40;
    v20 = result;
LABEL_4:
    v11 = result;
    v12 = v10;
    while (1)
    {
      v13 = *a4 + v12;
      sub_23A963A14(v13 + 40, (uint64_t)v19);
      sub_23A963A14(v13, (uint64_t)v18);
      v14 = sub_23A9D0634(v19, v18, a5);
      sub_23A963B3C((uint64_t)v18);
      result = sub_23A963B3C((uint64_t)v19);
      if (v5)
        break;
      if ((v14 & 1) != 0)
      {
        v15 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v16 = v15 + v12;
        sub_23A963B98((__int128 *)(v15 + v12 + 40), (uint64_t)v19);
        v17 = *(_OWORD *)(v16 + 16);
        *(_OWORD *)(v16 + 40) = *(_OWORD *)v16;
        *(_OWORD *)(v16 + 56) = v17;
        *(_QWORD *)(v16 + 72) = *(_QWORD *)(v16 + 32);
        sub_23A963B98(v19, v16);
        v12 -= 40;
        if (v8 != ++v11)
          continue;
      }
      ++v8;
      v10 += 40;
      result = v20;
      if (v8 != a2)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

void sub_23A9D1EB8(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  char *v77;
  unint64_t v78;
  char *v79;
  int64_t v80;
  unint64_t v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  unint64_t v100;
  id v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  char *__dst;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  _QWORD v116[5];
  __int128 v117[3];
  uint64_t v118;

  v3 = a1;
  v4 = a1[1];
  v5 = a2;
  v6 = sub_23AA336F8();
  if (v6 >= v4)
  {
    if (v4 < 0)
      goto LABEL_141;
    if (v4)
    {
      v10 = (id)v5;
      sub_23A9D1D88(0, v4, 1, v3, v10);

    }
    else
    {

    }
    goto LABEL_119;
  }
  if (v4 >= 0)
    v7 = v4;
  else
    v7 = v4 + 1;
  if (v4 < -1)
    goto LABEL_150;
  v115 = (void *)v5;
  v105 = v6;
  v118 = v2;
  if (v4 < 2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v4 != 1)
    {
      v5 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v13 = (char *)MEMORY[0x24BEE4AF8];
      if (v5 < 2)
        goto LABEL_118;
      goto LABEL_105;
    }
    v106 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v8 = v7 >> 1;
    sub_23A964084((uint64_t *)&unk_2569D63B0);
    v9 = sub_23AA330E0();
    *(_QWORD *)(v9 + 16) = v8;
    v106 = v9;
    __dst = (char *)(v9 + 32);
  }
  v12 = 0;
  v13 = (char *)MEMORY[0x24BEE4AF8];
  v109 = v3;
  while (1)
  {
    v14 = v12++;
    v112 = v13;
    if (v12 >= v4)
    {
      v5 = (unint64_t)v115;
      v28 = v118;
      goto LABEL_43;
    }
    v5 = *v3;
    sub_23A963A14(*v3 + 40 * v12, (uint64_t)v117);
    sub_23A963A14(v5 + 40 * v14, (uint64_t)v116);
    v15 = v118;
    v16 = sub_23A9D0634(v117, v116, v115);
    if (v15)
    {
      sub_23A963B3C((uint64_t)v116);
      sub_23A963B3C((uint64_t)v117);
LABEL_116:
      swift_bridgeObjectRelease();
      v5 = (unint64_t)v115;
      *(_QWORD *)(v106 + 16) = 0;

      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
    v17 = v16;
    sub_23A963B3C((uint64_t)v116);
    sub_23A963B3C((uint64_t)v117);
    v12 = v14 + 2;
    if (v14 + 2 < v4)
    {
      v18 = v14;
      v19 = v5 + 40 * v14 + 40;
      while (1)
      {
        sub_23A963A14(v19 + 40, (uint64_t)v117);
        sub_23A963A14(v19, (uint64_t)v116);
        v20 = sub_23A9D0634(v117, v116, v115);
        sub_23A963B3C((uint64_t)v116);
        sub_23A963B3C((uint64_t)v117);
        if (((v17 ^ v20) & 1) != 0)
          break;
        ++v12;
        v19 += 40;
        if (v4 == v12)
        {
          v12 = v4;
          break;
        }
      }
      v13 = v112;
      v14 = v18;
    }
    if ((v17 & 1) == 0)
      goto LABEL_32;
    if (v12 < v14)
      goto LABEL_145;
    if (v14 < v12)
    {
      v21 = v12;
      v22 = 40 * v12 - 40;
      v23 = v14;
      v24 = 40 * v14;
      v107 = v21;
      v118 = v14;
      do
      {
        if (v23 != --v21)
        {
          if (!v5)
            goto LABEL_148;
          v25 = v5 + v24;
          sub_23A963B98((__int128 *)(v5 + v24), (uint64_t)v117);
          v26 = *(_QWORD *)(v5 + v22 + 32);
          v27 = *(_OWORD *)(v5 + v22 + 16);
          *(_OWORD *)v25 = *(_OWORD *)(v5 + v22);
          *(_OWORD *)(v25 + 16) = v27;
          *(_QWORD *)(v25 + 32) = v26;
          sub_23A963B98(v117, v5 + v22);
          v13 = v112;
        }
        ++v23;
        v22 -= 40;
        v24 += 40;
      }
      while (v23 < v21);
      v5 = (unint64_t)v115;
      v28 = 0;
      v12 = v107;
      v3 = v109;
      v14 = v118;
      if (v107 >= v4)
        goto LABEL_43;
    }
    else
    {
LABEL_32:
      v5 = (unint64_t)v115;
      v28 = 0;
      v3 = v109;
      if (v12 >= v4)
        goto LABEL_43;
    }
    if (__OFSUB__(v12, v14))
      goto LABEL_142;
    if (v12 - v14 >= v105)
      goto LABEL_43;
    if (__OFADD__(v14, v105))
      goto LABEL_143;
    v29 = v14 + v105 >= v4 ? v4 : v14 + v105;
    if (v29 < v14)
      break;
    if (v12 != v29)
    {
      v118 = v14;
      v85 = 40 * v12 - 40;
      do
      {
        v86 = v118;
        v87 = v85;
        do
        {
          v88 = *v3 + v87;
          sub_23A963A14(v88 + 40, (uint64_t)v117);
          sub_23A963A14(v88, (uint64_t)v116);
          LOBYTE(v88) = sub_23A9D0634(v117, v116, (void *)v5);
          sub_23A963B3C((uint64_t)v116);
          sub_23A963B3C((uint64_t)v117);
          if ((v88 & 1) == 0)
            break;
          v89 = *v3;
          if (!*v3)
            goto LABEL_147;
          v90 = v89 + v87;
          sub_23A963B98((__int128 *)(v89 + v87 + 40), (uint64_t)v117);
          v91 = *(_OWORD *)(v90 + 16);
          *(_OWORD *)(v90 + 40) = *(_OWORD *)v90;
          *(_OWORD *)(v90 + 56) = v91;
          *(_QWORD *)(v90 + 72) = *(_QWORD *)(v90 + 32);
          sub_23A963B98(v117, v90);
          v87 -= 40;
          ++v86;
        }
        while (v12 != v86);
        ++v12;
        v85 += 40;
      }
      while (v12 != v29);
      v12 = v29;
      v13 = v112;
      v14 = v118;
      if (v29 < v118)
        goto LABEL_140;
      goto LABEL_44;
    }
LABEL_43:
    if (v12 < v14)
      goto LABEL_140;
LABEL_44:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v118 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v13 = sub_23A9F9320(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v32 = *((_QWORD *)v13 + 2);
    v31 = *((_QWORD *)v13 + 3);
    v5 = v32 + 1;
    if (v32 >= v31 >> 1)
      v13 = sub_23A9F9320((char *)(v31 > 1), v32 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v5;
    v33 = v13 + 32;
    v34 = &v13[16 * v32 + 32];
    *(_QWORD *)v34 = v14;
    *((_QWORD *)v34 + 1) = v12;
    if (v32)
    {
      v108 = v12;
      while (1)
      {
        v35 = v5 - 1;
        if (v5 >= 4)
        {
          v40 = &v33[16 * v5];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_125;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_126;
          v47 = v5 - 2;
          v48 = &v33[16 * v5 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_128;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_131;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_135;
            v63 = v38 < v73;
            goto LABEL_81;
          }
        }
        else
        {
          if (v5 != 3)
          {
            v64 = *((_QWORD *)v13 + 4);
            v65 = *((_QWORD *)v13 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_75;
          }
          v37 = *((_QWORD *)v13 + 4);
          v36 = *((_QWORD *)v13 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_127;
        v47 = v5 - 2;
        v53 = &v33[16 * v5 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_130;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_133;
        if (__OFADD__(v57, v62))
          goto LABEL_134;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_81:
          if (v63)
            v35 = v47;
          goto LABEL_83;
        }
LABEL_75:
        if ((v58 & 1) != 0)
          goto LABEL_129;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_132;
        if (v69 < v57)
          goto LABEL_92;
LABEL_83:
        v74 = v35 - 1;
        if (v35 - 1 >= v5)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        v75 = *v3;
        if (!*v3)
          goto LABEL_146;
        v76 = (unint64_t *)&v33[16 * v74];
        v5 = *v76;
        v77 = v33;
        v78 = v35;
        v79 = &v33[16 * v35];
        v80 = *((_QWORD *)v79 + 1);
        v111 = (char *)(v75 + 40 * *(_QWORD *)v79);
        v113 = (char *)(v75 + 40 * *v76);
        v81 = v75 + 40 * v80;
        v82 = v115;
        v83 = v118;
        sub_23A9D1A00(v113, v111, v81, __dst, v82);
        if (v83)
          goto LABEL_116;
        if (v80 < (uint64_t)v5)
          goto LABEL_122;
        if (v78 > *((_QWORD *)v13 + 2))
          goto LABEL_123;
        *v76 = v5;
        *(_QWORD *)&v77[16 * v74 + 8] = v80;
        v84 = *((_QWORD *)v13 + 2);
        if (v78 >= v84)
          goto LABEL_124;
        v33 = v77;
        v118 = 0;
        v5 = v84 - 1;
        memmove(v79, v79 + 16, 16 * (v84 - 1 - v78));
        *((_QWORD *)v13 + 2) = v84 - 1;
        v12 = v108;
        v3 = v109;
        if (v84 <= 2)
          goto LABEL_92;
      }
    }
    v5 = 1;
LABEL_92:
    v4 = v3[1];
    if (v12 >= v4)
    {
      v11 = v106;
      if (v5 < 2)
      {
LABEL_118:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v11 + 16) = 0;
        v5 = (unint64_t)v115;

        swift_bridgeObjectRelease();
LABEL_119:

        return;
      }
LABEL_105:
      v92 = *v3;
      v106 = v11;
      v114 = *v3;
      while (1)
      {
        v93 = v5 - 2;
        if (v5 < 2)
          goto LABEL_136;
        if (!v92)
          goto LABEL_149;
        v94 = (uint64_t)v13;
        v95 = *(_QWORD *)&v13[16 * v93 + 32];
        v96 = *(_QWORD *)&v13[16 * v5 + 24];
        v97 = *(_QWORD *)&v13[16 * v5 + 16];
        v98 = (char *)(v92 + 40 * v95);
        v99 = (char *)(v92 + 40 * v97);
        v100 = v92 + 40 * v96;
        v101 = v115;
        v102 = v118;
        sub_23A9D1A00(v98, v99, v100, __dst, v101);
        v118 = v102;
        if (v102)
          goto LABEL_116;
        if (v96 < v95)
          goto LABEL_137;
        v13 = (char *)v94;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_23A9F9620(v94);
        if (v93 >= *((_QWORD *)v13 + 2))
          goto LABEL_138;
        v103 = &v13[16 * v93 + 32];
        *(_QWORD *)v103 = v95;
        *((_QWORD *)v103 + 1) = v96;
        v104 = *((_QWORD *)v13 + 2);
        if (v5 > v104)
          goto LABEL_139;
        memmove(&v13[16 * v5 + 16], &v13[16 * v5 + 32], 16 * (v104 - v5));
        *((_QWORD *)v13 + 2) = v104 - 1;
        v5 = v104 - 1;
        v63 = v104 > 2;
        v11 = v106;
        v92 = v114;
        if (!v63)
          goto LABEL_118;
      }
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:

  __break(1u);
LABEL_147:

  __break(1u);
LABEL_148:

  __break(1u);
LABEL_149:

  __break(1u);
LABEL_150:

  sub_23AA3359C();
  __break(1u);
}

void sub_23A9D27FC(_QWORD **a1, void *a2)
{
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7[2];

  v3 = *a1;
  v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23A9FA288(v3);
  v5 = v3[2];
  v7[0] = (uint64_t)(v3 + 4);
  v7[1] = v5;
  v6 = v4;
  sub_23A9D1EB8(v7, v6);

  *a1 = v3;
}

uint64_t sub_23A9D2890(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_23A9D0B30(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23A9D2898(uint64_t a1, void (*a2)(_QWORD, char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9[2];
  _OWORD v10[3];
  _OWORD v11[4];
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  sub_23AA3356C();
  v4 = *(_QWORD *)(a1 + 16);
  v8 = a1;
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = 0;
    v6 = v8 + 32;
    do
    {
      sub_23A963A14(v6, (uint64_t)v9);
      *(_QWORD *)&v10[0] = v5;
      sub_23A963B98(v9, (uint64_t)v10 + 8);
      v11[0] = v10[0];
      v11[1] = v10[1];
      v11[2] = v10[2];
      a2(*(_QWORD *)&v10[0], (char *)v11 + 8);
      sub_23A9683BC((uint64_t)v11, &qword_2569D7728);
      sub_23AA33554();
      sub_23AA33578();
      sub_23AA33584();
      sub_23AA33560();
      v6 += 40;
      ++v5;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_23A9D29E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D60F0;
  if (!qword_2569D60F0)
  {
    v1 = sub_23AA32E1C();
    result = MEMORY[0x23B85DA58](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_2569D60F0);
  }
  return result;
}

void destroy for FMPFSKLabelNodeStyle(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

__n128 initializeWithTake for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFSKLabelNodeStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKLabelNodeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKLabelNodeStyle()
{
  return &type metadata for FMPFSKLabelNodeStyle;
}

double sub_23A9D2C48()
{
  id v0;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  qword_2569E0488 = 0xD000000000000012;
  unk_2569E0490 = 0x800000023AA3E8A0;
  qword_2569E0498 = (uint64_t)v0;
  qword_2569E04A0 = 0x4046000000000000;
  *(_QWORD *)&result = 2;
  xmmword_2569E04A8 = xmmword_23AA39500;
  qword_2569E04B8 = 0;
  byte_2569E04C0 = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceConfiguration()
{
  return &type metadata for FMFindingExperienceConfiguration;
}

unint64_t sub_23A9D2CC8()
{
  unint64_t result;

  result = sub_23A9B6FA8(MEMORY[0x24BEE4AF8]);
  qword_2569E04C8 = result;
  return result;
}

uint64_t sub_23A9D2CEC@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  uint64_t result;
  _BYTE v26[96];
  int v27;
  CGRect v28;
  CGRect v29;

  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_mainScreen);
  v5 = (void *)sub_23AA32FB4();
  MGGetSInt32Answer();

  v6 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v6, sel_nativeScale);

  v7 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v7, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v28.origin.x = v9;
  v28.origin.y = v11;
  v28.size.width = v13;
  v28.size.height = v15;
  CGRectGetWidth(v28);
  v16 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v16, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v29.origin.x = v18;
  v29.origin.y = v20;
  v29.size.width = v22;
  v29.size.height = v24;
  CGRectGetWidth(v29);
  result = sub_23A963B5C(v1, (uint64_t)v26);
  if ((v27 | 0x2000000u) >> 25 != 3)
    __asm { BR              X10 }
  *(_OWORD *)a1 = 0uLL;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  return result;
}

void sub_23A9D2EFC()
{
  JUMPOUT(0x23A9D2E6CLL);
}

void sub_23A9D2F18()
{
  __asm { FMOV            V0.2D, #0.5 }
  JUMPOUT(0x23A9D2E6CLL);
}

uint64_t sub_23A9D2F74(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = sub_23A964084(&qword_2569D7760);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A9D39CC();
  sub_23AA33818();
  v9[1] = a2;
  sub_23A964084(&qword_2569D7740);
  sub_23A9D3A98(&qword_2569D7768, (uint64_t (*)(void))sub_23A9D3B14, (uint64_t (*)(void))sub_23A9D3B58, MEMORY[0x24BEE04C0]);
  sub_23AA336E0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23A9D3098(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = sub_23A964084(&qword_2569D77B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A9D42E0();
  sub_23AA33818();
  v11 = *v3;
  HIBYTE(v10) = 0;
  sub_23A9CC27C();
  sub_23AA336E0();
  if (!v2)
  {
    v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_23AA336E0();
    v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_23AA336E0();
    LOBYTE(v11) = 3;
    sub_23AA336C8();
    LOBYTE(v11) = 4;
    sub_23AA336BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23A9D3268()
{
  return 0x736574617473;
}

uint64_t sub_23A9D327C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736574617473 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23AA33728();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23A9D3308()
{
  sub_23A9D39CC();
  return sub_23AA33830();
}

uint64_t sub_23A9D3330()
{
  sub_23A9D39CC();
  return sub_23AA3383C();
}

_QWORD *sub_23A9D3358@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23A9D3880(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23A9D3380(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23A9D2F74(a1, *v1);
}

uint64_t sub_23A9D3398(uint64_t *a1, uint64_t *a2)
{
  return sub_23A9D356C(*a1, *a2);
}

uint64_t sub_23A9D33A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A9D33D8 + 4 * byte_23AA39540[*v0]))(0x7463614665646F6ELL, 0xEA0000000000726FLL);
}

uint64_t sub_23A9D33D8()
{
  return 0x74636146676E6972;
}

uint64_t sub_23A9D33EC()
{
  return 0x6361704F676E6972;
}

uint64_t sub_23A9D340C()
{
  return 0x6F46636974706168;
}

uint64_t sub_23A9D342C()
{
  return 0x72655065736C7570;
}

uint64_t sub_23A9D344C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A9D3E30(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A9D3470(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23A9D347C()
{
  sub_23A9D42E0();
  return sub_23AA33830();
}

uint64_t sub_23A9D34A4()
{
  sub_23A9D42E0();
  return sub_23AA3383C();
}

double sub_23A9D34CC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_23A9D40AC(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_23A9D3510(_QWORD *a1)
{
  return sub_23A9D3098(a1);
}

BOOL sub_23A9D3524(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(float *)(a1 + 24) == *(float *)(a2 + 24)
      && *(double *)(a1 + 32) == *(double *)(a2 + 32);
}

uint64_t sub_23A9D356C(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t i;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int128 v27;
  double v28;
  double v29;
  double v30;
  float v31;
  double v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v40;
  int64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[12];
  int v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  __int128 v52[6];
  double v53;
  double v54;
  double v55;
  float v56;
  double v57;
  __int128 v58[7];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) == *(_QWORD *)(a2 + 16))
  {
    v2 = 0;
    v36 = result + 64;
    v3 = 1 << *(_BYTE *)(result + 32);
    v4 = -1;
    if (v3 < 64)
      v4 = ~(-1 << v3);
    v5 = v4 & *(_QWORD *)(result + 64);
    v37 = (unint64_t)(v3 + 63) >> 6;
    v38 = result;
    if (!v5)
      goto LABEL_7;
LABEL_6:
    v40 = (v5 - 1) & v5;
    v41 = v2;
    for (i = __clz(__rbit64(v5)) | (v2 << 6); ; i = __clz(__rbit64(v8)) + (v9 << 6))
    {
      v11 = *(_QWORD *)(result + 48) + 104 * i;
      v13 = *(_QWORD *)(v11 + 8);
      v14 = *(void **)(v11 + 16);
      v15 = *(void **)(v11 + 24);
      v16 = *(_QWORD *)(v11 + 32);
      v17 = *(_QWORD *)(v11 + 40);
      v43 = *(_QWORD *)(v11 + 48);
      v44 = *(_QWORD *)(v11 + 56);
      v18 = *(_QWORD *)(v11 + 64);
      v19 = *(_QWORD *)(v11 + 72);
      v20 = *(_QWORD *)(v11 + 80);
      v21 = *(_QWORD *)(v11 + 88);
      v22 = *(_BYTE *)(v11 + 100);
      v42 = *(_DWORD *)(v11 + 96);
      v23 = *(_QWORD *)(result + 56) + 40 * i;
      v24 = *(_QWORD *)(v23 + 16);
      v25 = *(_DWORD *)(v23 + 24);
      v26 = *(_QWORD *)(v23 + 32);
      v27 = *(_OWORD *)v23;
      v45[0] = *(_QWORD *)v11;
      v12 = v45[0];
      v45[1] = v13;
      v45[2] = v14;
      v45[3] = v15;
      v45[4] = v16;
      v45[5] = v17;
      v45[6] = v43;
      v45[7] = v44;
      v45[8] = v18;
      v45[9] = v19;
      v45[10] = v20;
      v45[11] = v21;
      v47 = v22;
      v46 = v42;
      v48 = v27;
      v49 = v24;
      v50 = v25;
      v51 = v26;
      nullsub_1(v45);
      sub_23A9D3B9C((uint64_t)v45, (uint64_t)v52);
      sub_23A963B5C(v52, (uint64_t)v58);
      v29 = v53;
      v28 = v54;
      v30 = v55;
      v31 = v56;
      v32 = v57;
      sub_23A963BDC(v12, v13, v14, v15, v16, v17, v43, v44, v18, v19, v20, v21, v42);
      v33 = sub_23AA1CFF0(v58);
      LOBYTE(v13) = v34;
      sub_23A9D3BE4((uint64_t)v58);
      if ((v13 & 1) == 0)
        return 0;
      v35 = *(_QWORD *)(a2 + 56) + 40 * v33;
      if (*(double *)v35 != v29
        || *(double *)(v35 + 8) != v28
        || *(double *)(v35 + 16) != v30
        || *(float *)(v35 + 24) != v31
        || *(double *)(v35 + 32) != v32)
      {
        return 0;
      }
      result = v38;
      v5 = v40;
      v2 = v41;
      if (v40)
        goto LABEL_6;
LABEL_7:
      v7 = v2 + 1;
      if (__OFADD__(v2, 1))
        break;
      if (v7 >= v37)
        return 1;
      v8 = *(_QWORD *)(v36 + 8 * v7);
      v9 = v2 + 1;
      if (!v8)
      {
        v9 = v2 + 2;
        if (v2 + 2 >= v37)
          return 1;
        v8 = *(_QWORD *)(v36 + 8 * v9);
        if (!v8)
        {
          v9 = v2 + 3;
          if (v2 + 3 >= v37)
            return 1;
          v8 = *(_QWORD *)(v36 + 8 * v9);
          if (!v8)
          {
            v9 = v2 + 4;
            if (v2 + 4 >= v37)
              return 1;
            v8 = *(_QWORD *)(v36 + 8 * v9);
            if (!v8)
            {
              v10 = v2 + 5;
              if (v2 + 5 >= v37)
                return 1;
              v8 = *(_QWORD *)(v36 + 8 * v10);
              if (!v8)
              {
                while (1)
                {
                  v9 = v10 + 1;
                  if (__OFADD__(v10, 1))
                    goto LABEL_34;
                  if (v9 >= v37)
                    return 1;
                  v8 = *(_QWORD *)(v36 + 8 * v9);
                  ++v10;
                  if (v8)
                    goto LABEL_22;
                }
              }
              v9 = v2 + 5;
            }
          }
        }
      }
LABEL_22:
      v40 = (v8 - 1) & v8;
      v41 = v9;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  return 0;
}

_QWORD *sub_23A9D3880(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = sub_23A964084(&qword_2569D7730);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A96545C(a1, a1[3]);
  sub_23A9D39CC();
  sub_23AA3380C();
  if (v1)
  {
    sub_23A963B3C((uint64_t)a1);
  }
  else
  {
    sub_23A964084(&qword_2569D7740);
    sub_23A9D3A98(&qword_2569D7748, (uint64_t (*)(void))sub_23A9D3A10, (uint64_t (*)(void))sub_23A9D3A54, MEMORY[0x24BEE04E0]);
    sub_23AA33674();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    sub_23A963B3C((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_23A9D39CC()
{
  unint64_t result;

  result = qword_2569D7738;
  if (!qword_2569D7738)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39778, &type metadata for FMFindingExperienceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7738);
  }
  return result;
}

unint64_t sub_23A9D3A10()
{
  unint64_t result;

  result = qword_2569D7750;
  if (!qword_2569D7750)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA37624, &type metadata for FMFindingState);
    atomic_store(result, (unint64_t *)&qword_2569D7750);
  }
  return result;
}

unint64_t sub_23A9D3A54()
{
  unint64_t result;

  result = qword_2569D7758;
  if (!qword_2569D7758)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39750, &type metadata for FMFindingExperienceStateConfiguration);
    atomic_store(result, (unint64_t *)&qword_2569D7758);
  }
  return result;
}

uint64_t sub_23A9D3A98(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = sub_23A96C258(&qword_2569D7740);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x23B85DA58](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23A9D3B14()
{
  unint64_t result;

  result = qword_2569D7770;
  if (!qword_2569D7770)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA375FC, &type metadata for FMFindingState);
    atomic_store(result, (unint64_t *)&qword_2569D7770);
  }
  return result;
}

unint64_t sub_23A9D3B58()
{
  unint64_t result;

  result = qword_2569D7778;
  if (!qword_2569D7778)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39728, &type metadata for FMFindingExperienceStateConfiguration);
    atomic_store(result, (unint64_t *)&qword_2569D7778);
  }
  return result;
}

uint64_t sub_23A9D3B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D7780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9D3BE4(uint64_t a1)
{
  sub_23A963F38(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_DWORD *)(a1 + 96));
  return a1;
}

uint64_t storeEnumTagSinglePayload for FMFindingExperienceConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23A9D3C84 + 4 * byte_23AA39545[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23A9D3CA4 + 4 * byte_23AA3954A[v4]))();
}

_BYTE *sub_23A9D3C84(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23A9D3CA4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A9D3CAC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A9D3CB4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A9D3CBC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A9D3CC4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceConfiguration.CodingKeys()
{
  return &type metadata for FMFindingExperienceConfiguration.CodingKeys;
}

__n128 initializeWithCopy for FMFindingExperienceStateConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingExperienceStateConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMFindingExperienceStateConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceStateConfiguration()
{
  return &type metadata for FMFindingExperienceStateConfiguration;
}

unint64_t sub_23A9D3D5C()
{
  unint64_t result;

  result = qword_2569D7788;
  if (!qword_2569D7788)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39700, &type metadata for FMFindingExperienceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7788);
  }
  return result;
}

unint64_t sub_23A9D3DA4()
{
  unint64_t result;

  result = qword_2569D7790;
  if (!qword_2569D7790)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39670, &type metadata for FMFindingExperienceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7790);
  }
  return result;
}

unint64_t sub_23A9D3DEC()
{
  unint64_t result;

  result = qword_2569D7798;
  if (!qword_2569D7798)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39698, &type metadata for FMFindingExperienceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D7798);
  }
  return result;
}

uint64_t sub_23A9D3E30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7463614665646F6ELL && a2 == 0xEA0000000000726FLL;
  if (v2 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74636146676E6972 && a2 == 0xEA0000000000726FLL || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6361704F676E6972 && a2 == 0xEB00000000797469 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F46636974706168 && a2 == 0xEB00000000656372 || (sub_23AA33728() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72655065736C7570 && a2 == 0xEB00000000646F69)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23A9D40AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v5 = sub_23A964084(&qword_2569D77A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A96545C(a1, a1[3]);
  sub_23A9D42E0();
  sub_23AA3380C();
  if (v2)
    return sub_23A963B3C((uint64_t)a1);
  HIBYTE(v17) = 0;
  sub_23A9CC14C();
  sub_23AA33674();
  v9 = v18;
  HIBYTE(v17) = 1;
  sub_23AA33674();
  v10 = v18;
  HIBYTE(v17) = 2;
  sub_23AA33674();
  v11 = v18;
  LOBYTE(v18) = 3;
  sub_23AA3365C();
  v13 = v12;
  LOBYTE(v18) = 4;
  sub_23AA33650();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_23A963B3C((uint64_t)a1);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_DWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v15;
  return result;
}

unint64_t sub_23A9D42E0()
{
  unint64_t result;

  result = qword_2569D77A8;
  if (!qword_2569D77A8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39880, &type metadata for FMFindingExperienceStateConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D77A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFindingExperienceStateConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A9D4370 + 4 * byte_23AA39554[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A9D43A4 + 4 * byte_23AA3954F[v4]))();
}

uint64_t sub_23A9D43A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9D43AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9D43B4);
  return result;
}

uint64_t sub_23A9D43C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9D43C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A9D43CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9D43D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceStateConfiguration.CodingKeys()
{
  return &type metadata for FMFindingExperienceStateConfiguration.CodingKeys;
}

unint64_t sub_23A9D43F4()
{
  unint64_t result;

  result = qword_2569D77B8;
  if (!qword_2569D77B8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA39858, &type metadata for FMFindingExperienceStateConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D77B8);
  }
  return result;
}

unint64_t sub_23A9D443C()
{
  unint64_t result;

  result = qword_2569D77C0;
  if (!qword_2569D77C0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA397C8, &type metadata for FMFindingExperienceStateConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D77C0);
  }
  return result;
}

unint64_t sub_23A9D4484()
{
  unint64_t result;

  result = qword_2569D77C8;
  if (!qword_2569D77C8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA397F0, &type metadata for FMFindingExperienceStateConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569D77C8);
  }
  return result;
}

uint64_t sub_23A9D44C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v3 = sub_23AA32E1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v16[1] = v1;
    v17 = MEMORY[0x24BEE4AF8];
    sub_23AA1CF10(0, v7, 0);
    v8 = v17;
    v9 = (_QWORD *)(a1 + 32);
    do
    {
      v10 = v9[3];
      v11 = v9[4];
      sub_23A96545C(v9, v10);
      (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23AA1CF10(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v17;
      }
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23AA1CF10(v13 > 1, v14 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v6, v3);
      v17 = v8;
      v9 += 5;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_23A9D464C(uint64_t a1)
{
  return sub_23A9D4660(a1, (unint64_t *)&qword_2569D6488);
}

uint64_t sub_23A9D4660(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = sub_23AA33470();
    v7 = v6;
    v8 = sub_23AA334C4();
    v10 = MEMORY[0x23B85D020](v5, v7, v8, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_3:
      sub_23A9E4158(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_23A9E2B18(v5, v7, v4 != 0, a1, a2);
    v11 = v15;
    sub_23A9E4158(v5, v7, v4 != 0);
    return v11;
  }
  result = sub_23A9E2D78(a1);
  if ((v14 & 1) == 0)
  {
    v7 = v13;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v13)
    {
      v5 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9D4794(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for FMFindingViewState();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration) = a1;
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23A9D356C(v10, v9);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    v13 = (uint64_t)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    sub_23A9732E0(v13, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9732E0(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    (*(void (**)(char *, char *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x4B0))(v8, v6);
    sub_23A973324((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A9D48F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  __int128 v22[6];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration);
  v4 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  v5 = type metadata accessor for FMFindingViewState();
  sub_23A963B5C((__int128 *)(v4 + *(int *)(v5 + 32)), (uint64_t)v22);
  v6 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_23A963ED4((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  if (v6 && (v7 = sub_23AA1CFF0(v22), (v8 & 1) != 0))
  {
    v9 = (_BYTE *)(*(_QWORD *)(v3 + 56) + 40 * v7);
    v10 = *((_QWORD *)v9 + 1);
    v11 = *((_QWORD *)v9 + 2);
    v12 = *((_DWORD *)v9 + 6);
    v13 = (uint64_t *)(v9 + 32);
  }
  else
  {
    v9 = v17;
    sub_23A9D2CEC((uint64_t)v17);
    v10 = v18;
    v11 = v19;
    v13 = &v21;
    v12 = v20;
  }
  v14 = *(_QWORD *)v9;
  v15 = *v13;
  swift_bridgeObjectRelease();
  result = sub_23A963ED4((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_23A9D4A18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 *v6;
  uint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  BOOL v10;
  _BYTE v12[24];

  v3 = type metadata accessor for FMFindingViewState();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (unsigned __int16 *)&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = (unsigned __int16 *)&v12[-v7];
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_23A9732E0(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  swift_beginAccess();
  sub_23A9E49D4(a1, v9);
  swift_endAccess();
  sub_23A9732E0(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v10 = sub_23AA2D880(v6, v8);
  sub_23A973324((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if (!v10)
  {
    sub_23A9732E0(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    (*(void (**)(unsigned __int16 *, unsigned __int16 *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x4B0))(v8, v6);
    sub_23A973324((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  }
  sub_23A973324(a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  return sub_23A973324((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

uint64_t FMFindingViewController.__allocating_init(session:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return FMFindingViewController.init(session:)(a1);
}

uint64_t FMFindingViewController.init(session:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  id v13;
  unsigned __int8 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _WORD *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  void *v54;
  id v55;
  id v56;
  NSObject *v57;
  char *v58;
  id v59;
  objc_class *v60;
  char *v61;
  uint64_t v62;
  void *v63;
  char *v64;
  id v65;
  id v66;
  uint64_t result;
  uint64_t v68;
  _WORD *v69;
  uint64_t v70;
  objc_super v71;
  unsigned __int16 v72[23];
  unsigned __int8 v73;
  _BYTE v74[184];
  __int128 v75[2];
  _BYTE v76[64];
  _BYTE v77[184];
  _OWORD v78[11];
  uint64_t v79;

  v70 = type metadata accessor for FMFindingSessionState();
  v3 = MEMORY[0x24BDAC7A8](v70);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v68 - v6;
  v8 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v8);
  v69 = (_WORD *)((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isInternalBuild;
  v11 = (void *)objc_opt_self();
  v12 = v1;
  v13 = objc_msgSend(v11, sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_isInternalBuild);

  *((_BYTE *)v1 + v10) = v14;
  v15 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  if (qword_2569D4B48 != -1)
    swift_once();
  v78[8] = xmmword_2569E03B0;
  v78[9] = unk_2569E03C0;
  v78[10] = xmmword_2569E03D0;
  v79 = qword_2569E03E0;
  v78[4] = xmmword_2569E0370;
  v78[5] = unk_2569E0380;
  v78[6] = xmmword_2569E0390;
  v78[7] = unk_2569E03A0;
  v78[0] = xmmword_2569E0330;
  v78[1] = *(_OWORD *)&qword_2569E0340;
  v78[2] = xmmword_2569E0350;
  v78[3] = unk_2569E0360;
  memmove(v15, &xmmword_2569E0330, 0xB8uLL);
  v16 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer;
  sub_23A9D5530((uint64_t)v78);
  type metadata accessor for FMFindingSleepPreventer();
  *(_QWORD *)&v12[v16] = swift_initStaticObject();
  v17 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer;
  *(_QWORD *)&v12[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v18 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion;
  v12[v18] = UIAccessibilityIsReduceMotionEnabled();
  v19 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  *(_QWORD *)&v12[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v20 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  *(_QWORD *)&v12[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v21 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView];
  *v21 = 0;
  v21[1] = 0;
  v22 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer;
  *(_QWORD *)&v12[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v23 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  *(_QWORD *)&v12[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v24 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  *(_QWORD *)&v12[v24] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v25 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  *(_QWORD *)&v12[v25] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v26 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  v27 = (objc_class *)type metadata accessor for FMR1GlyphButton();
  v28 = objc_allocWithZone(v27);
  *(_QWORD *)&v12[v26] = sub_23AA2E6DC(0, 0, 0, 0);
  v29 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  *(_QWORD *)&v12[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMR1HapticsController()), sel_init);
  v30 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  v31 = objc_allocWithZone(v27);
  *(_QWORD *)&v12[v30] = sub_23AA2E6DC(0, 0, 0, 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem] = 0;
  v32 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
  v33 = objc_allocWithZone(v27);
  *(_QWORD *)&v12[v32] = sub_23AA2E6DC(0, 0, 0, 0);
  v34 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView;
  v35 = objc_allocWithZone((Class)type metadata accessor for FMR1DistanceView());
  v77[0] = 1;
  *(_QWORD *)&v12[v34] = sub_23A9FFCDC(0, 1, 0x100000000uLL);
  v36 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo];
  *((_QWORD *)v36 + 14) = 0;
  *((_OWORD *)v36 + 5) = 0u;
  *((_OWORD *)v36 + 6) = 0u;
  *((_OWORD *)v36 + 3) = 0u;
  *((_OWORD *)v36 + 4) = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *((_OWORD *)v36 + 2) = 0u;
  *(_OWORD *)v36 = 0u;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundItemWorkItem] = 0;
  v37 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo];
  *((_QWORD *)v37 + 1) = 0;
  *((_QWORD *)v37 + 2) = 0;
  *(_QWORD *)v37 = 0;
  v37[24] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem] = 0;
  v38 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView;
  *(_QWORD *)&v12[v38] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMBTDistanceView()), sel_init);
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer] = 0;
  v39 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView;
  *(_QWORD *)&v12[v39] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMIncorrectOrientationView()), sel_init);
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_inBand] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount] = 0;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame] = 0;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount] = 0;
  v40 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration;
  if (qword_2569D4B68 != -1)
    swift_once();
  *(_QWORD *)&v12[v40] = qword_2569E04C8;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_FMR1MaxErrorAlertCount] = 3;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying] = 2;
  v41 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler];
  *v41 = 0;
  v41[1] = 0;
  v42 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler];
  *v42 = 0;
  v42[1] = 0;
  v43 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler];
  *v43 = 0;
  v43[1] = 0;
  v44 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler];
  *v44 = 0;
  v44[1] = 0;
  v45 = OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology;
  LOWORD(v44) = *(_WORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  v46 = (__int16)v44;
  v47 = (v44 & 1) == 0;
  if (v46 >= 0)
    v47 = 2;
  v48 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType] = v47;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session] = a1;
  v49 = a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v49, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  swift_bridgeObjectRetain();
  swift_retain();
  v50 = v69;
  sub_23AA2B26C((uint64_t)v7, 10, v69);
  sub_23A9E4BD0((uint64_t)v50, (uint64_t)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state], (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9732E0(v49, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  type metadata accessor for FMFindingStateTransitionCoordinator();
  swift_allocObject();
  *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_stateTransitionCoordinator] = sub_23AA11A84((uint64_t)v7);
  sub_23A9732E0(v49, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v51 = *((_QWORD *)v5 + 1);
  if (*(_QWORD *)(v51 + 16) && (v52 = sub_23AA1D250((uint64_t)&v5[*(int *)(v70 + 36)]), (v53 & 1) != 0))
  {
    sub_23A963A14(*(_QWORD *)(v51 + 56) + 40 * v52, (uint64_t)v75);
    sub_23A963B98(v75, (uint64_t)v76);
    sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v54 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_arSession);
    v73 = v12[v48];
    v72[0] = *(_WORD *)(a1 + v45);
    sub_23A9E1E04((uint64_t)v74);
    sub_23A9E1E30((uint64_t)v74, (uint64_t)v77);
    objc_allocWithZone((Class)type metadata accessor for FMPFView());
    v55 = v54;
    *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView] = sub_23A9FEA94(&v73, v72, (uint64_t)v77, v54);
    sub_23A963A14((uint64_t)v76, (uint64_t)v72);
    v73 = v12[v48];
    v56 = objc_allocWithZone((Class)type metadata accessor for FMR1InstructionsController());
    v57 = sub_23AA078FC((uint64_t)v72, (char *)&v73);
    v58 = 0;
    *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController] = v57;
    if (v12[v48] != 2)
    {
      v59 = objc_allocWithZone((Class)type metadata accessor for FMAVPlayerView());
      v58 = sub_23A9B9D98(0, 0.5);
    }
    *(_QWORD *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView] = v58;

    v60 = (objc_class *)type metadata accessor for FMFindingViewController();
    v71.receiver = v12;
    v71.super_class = v60;
    v61 = (char *)objc_msgSendSuper2(&v71, sel_initWithNibName_bundle_, 0, 0);
    v62 = *(_QWORD *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_stateTransitionCoordinator];
    *(_QWORD *)(*(_QWORD *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
              + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate
              + 8) = &off_250BC5E60;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(*(_QWORD *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]
              + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate
              + 8) = &off_250BC08D0;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(v62 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate + 8) = &off_250BC3970;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(*(_QWORD *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController]
              + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_delegate
              + 8) = &off_250BC63B8;
    swift_unknownObjectWeakAssign();
    v63 = (void *)objc_opt_self();
    v64 = v61;
    v65 = objc_msgSend(v63, sel_defaultCenter);
    objc_msgSend(v65, sel_addObserver_selector_name_object_, v64, sel_applicationDidEnterBackground, *MEMORY[0x24BEBDF98], 0);

    v66 = objc_msgSend(v63, sel_defaultCenter);
    objc_msgSend(v66, sel_addObserver_selector_name_object_, v64, sel_applicationWillEnterForeground, *MEMORY[0x24BEBE008], 0);

    swift_release();
    sub_23A963B3C((uint64_t)v76);
    return (uint64_t)v64;
  }
  else
  {
    result = sub_23AA335A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23A9D5530(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(id *)a1;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return a1;
}

id FMFindingViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FMFindingViewController.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  objc_super v14;

  v1 = v0;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v2 = sub_23AA32EA0();
  sub_23A9620E8(v2, (uint64_t)qword_2569E0040);
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23A95E000, v3, v4, "FMFindingViewController deinit", v5, 2u);
    MEMORY[0x23B85DB24](v5, -1, -1);
  }

  v6 = (char *)*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
  sub_23A9FDFB4();
  v7 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene;
  v8 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v8)
  {
    v9 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView];
    v10 = v8;
    sub_23A9E8294(v9, 0);

  }
  v11 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView];
  if (v11)
    objc_msgSend(v11, sel_removeFromSuperview);
  v12 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = 0;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for FMFindingViewController();
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

void sub_23A9D5A60()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  id v14;
  int v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t aBlock;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  void (*v26)();
  uint64_t v27;

  v1 = v0;
  v2 = sub_23AA32ED0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23AA32F00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  v11 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController]
                  + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  v12 = *v11;
  *v11 = 0;
  v11[1] = 0;
  sub_23A98C874(v12);
  v13 = *(id *)&v0[v10];
  sub_23A9AA684();

  v14 = *(id *)&v1[v10];
  sub_23A9A36A8();

  v15 = *(__int16 *)(*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                   + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  if (v15 < 0)
  {
    if ((v15 & 0x7E00) == 0x200)
      return;
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v16 = (void *)sub_23AA33290();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v1;
    v26 = sub_23A9E498C;
    v27 = v19;
    aBlock = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v18 = &unk_250BC3E40;
  }
  else
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v1;
    v26 = sub_23A9E495C;
    v27 = v17;
    aBlock = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v18 = &unk_250BC3DF0;
  }
  v24 = sub_23A9C4DBC;
  v25 = v18;
  v20 = _Block_copy(&aBlock);
  v21 = v1;
  swift_release();
  sub_23AA32EE8();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  MEMORY[0x23B85CE40](0, v9, v5, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23A9D5D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  v3 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
  sub_23A9A205C();

  v4 = *(_QWORD *)(v1 + v2);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = (void (**)(uint64_t, uint64_t))(v4
                                              + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  *v6 = sub_23A9E4944;
  v6[1] = (void (*)(uint64_t, uint64_t))v5;
  return sub_23A98C874(v7);
}

void sub_23A9D5E34()
{
  char *v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FMFindingViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  sub_23A9D7100();
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v2 = v1;
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer]);

  sub_23A9D80B8();
  v3 = v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType];
  if (v3 < 2)
  {
    sub_23A9D8344();
    sub_23AA26390();
    goto LABEL_7;
  }
  if (v3 == 2)
  {
    v4 = objc_msgSend(v0, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView]);

      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    return;
  }
LABEL_7:
  sub_23A9D8524();
  if (v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion] == 1)
    sub_23A9DA1A8();
}

uint64_t sub_23A9D5F6C(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];
  objc_super v21;

  v2 = v1;
  v4 = sub_23AA32ED0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23AA32F00();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for FMFindingViewController();
  v21.receiver = v2;
  v21.super_class = v12;
  objc_msgSendSuper2(&v21, sel_viewWillAppear_, a1 & 1);
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v13 = (void *)sub_23AA33290();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  aBlock[4] = sub_23A9E3CE0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC38A8;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  swift_release();
  sub_23AA32EE8();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23A961DE4((unint64_t *)&qword_2569D5AD0, v5, MEMORY[0x24BEE5468]);
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  MEMORY[0x23B85CE40](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_23A9D618C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  id result;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (**v25)(uint64_t);
  void (*v26)(uint64_t);
  uint64_t v27;
  _BYTE v28[24];

  v2 = type metadata accessor for FMFindingViewState();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v28[-v6];
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, sel_layoutSubviews);

    v10 = *(id *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
    sub_23A9FE8CC();

    v11 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session);
    if (qword_2569D4AC0 != -1)
      swift_once();
    v12 = sub_23AA32EA0();
    sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
    v13 = sub_23AA32E88();
    v14 = sub_23AA33218();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23A95E000, v13, v14, "ðŸ§­ FMFindingSession: Starting new session", v15, 2u);
      MEMORY[0x23B85DB24](v15, -1, -1);
    }

    v16 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 24);
    v17 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 32);
    sub_23A96545C((_QWORD *)(v11 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer), v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
    v18 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
    v19 = *(id *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    sub_23A9A205C();

    v20 = *(_QWORD *)((char *)a1 + v18);
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22 = (void (**)(uint64_t, uint64_t))(v20
                                                 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
    v23 = *(_QWORD *)(v20 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
    *v22 = sub_23A9E4944;
    v22[1] = (void (*)(uint64_t, uint64_t))v21;
    sub_23A98C874(v23);
    v24 = (uint64_t)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    sub_23A9732E0(v24, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9732E0(v24, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    (*(void (**)(_BYTE *, _BYTE *))((*MEMORY[0x24BEE4EA0] & *a1) + 0x4B0))(v7, v5);
    sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9B3BD0();
    v25 = (void (**)(uint64_t))((char *)a1
                                        + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler);
    result = (id)swift_beginAccess();
    v26 = *v25;
    if (*v25)
    {
      v27 = swift_retain();
      v26(v27);
      return (id)sub_23A98C874((uint64_t)v26);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23A9D6490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x23B85DBF0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23A9DFA34(a1, a2);

  }
}

void sub_23A9D653C(char a1)
{
  char *v1;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FMFindingViewController();
  objc_msgSendSuper2(&v7, sel_viewDidAppear_, a1 & 1);
  v3 = *(char **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
  v4 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    sub_23A9E8628(0, 1.0);

  }
}

id sub_23A9D666C(char a1)
{
  char *v1;
  char *v2;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  objc_super v29;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler];
  swift_beginAccess();
  v5 = *(void (**)(uint64_t))v4;
  if (*(_QWORD *)v4)
  {
    v6 = swift_retain();
    v5(v6);
    sub_23A98C874((uint64_t)v5);
  }
  v7 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  v8 = (uint64_t *)(*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController]
                 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  v9 = *v8;
  *v8 = 0;
  v8[1] = 0;
  sub_23A98C874(v9);
  v10 = *(id *)&v2[v7];
  sub_23A9AA684();

  v11 = *(id *)&v2[v7];
  sub_23A9A36A8();

  v12 = (char *)*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
  sub_23A9FDFB4();
  v13 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene;
  v14 = *(void **)&v12[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v14)
  {
    v15 = *(void **)&v12[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView];
    v16 = v14;
    sub_23A9E8294(v15, 0);

  }
  v17 = *(void **)&v12[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView];
  if (v17)
    objc_msgSend(v17, sel_removeFromSuperview);
  v18 = *(void **)&v12[v13];
  *(_QWORD *)&v12[v13] = 0;

  v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session];
  if (qword_2569D4AC0 != -1)
    swift_once();
  v20 = sub_23AA32EA0();
  sub_23A9620E8(v20, (uint64_t)qword_2569E0040);
  v21 = sub_23AA32E88();
  v22 = sub_23AA33218();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23A95E000, v21, v22, "ðŸ§­ FMFindingSession: Stopping finding session", v23, 2u);
    MEMORY[0x23B85DB24](v23, -1, -1);
  }

  v24 = *(_QWORD *)(v19 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 24);
  v25 = *(_QWORD *)(v19 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 32);
  sub_23A96545C((_QWORD *)(v19 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer), v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
  v26 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer], sel_invalidate);
  v27 = *(void **)&v2[v26];
  *(_QWORD *)&v2[v26] = 0;

  sub_23A9AE104(0, 1);
  v29.receiver = v2;
  v29.super_class = (Class)type metadata accessor for FMFindingViewController();
  return objc_msgSendSuper2(&v29, sel_viewWillDisappear_, a1 & 1);
}

uint64_t sub_23A9D69C0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if (v1)
    return 2;
  else
    return 26;
}

void sub_23A9D6A20(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  objc_class *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  id (*v40)(uint64_t);
  uint64_t v41;
  objc_super v42;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
  v8 = v3;
  v9 = sub_23AA32E88();
  v10 = sub_23AA33218();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = a1;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    aBlock = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v15 = objc_msgSend(v14, sel_connectedScenes);

    sub_23A968488(0, &qword_2569D7908);
    sub_23A9E3D00();
    v16 = sub_23AA3317C();

    v17 = (void *)sub_23A9D4660(v16, &qword_2569D7908);
    swift_bridgeObjectRelease();
    if (v17)
    {
      objc_opt_self();
      v18 = (void *)swift_dynamicCastObjCClass();
      if (v18)
        objc_msgSend(v18, sel_interfaceOrientation);
      a1 = v11;

    }
    else
    {
      a1 = v11;
    }
    type metadata accessor for UIInterfaceOrientation(0);
    v19 = sub_23AA32FFC();
    sub_23A964DBC(v19, v20, &aBlock);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v9, v10, "FMFindingViewController: Interface orientation changed to: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v13, -1, -1);
    MEMORY[0x23B85DB24](v12, -1, -1);

  }
  else
  {

  }
  v21 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v22 = objc_msgSend(v21, sel_connectedScenes);

  sub_23A968488(0, &qword_2569D7908);
  sub_23A9E3D00();
  v23 = sub_23AA3317C();

  v24 = (void *)sub_23A9D4660(v23, &qword_2569D7908);
  swift_bridgeObjectRelease();
  if (v24)
  {
    objc_opt_self();
    v25 = (void *)swift_dynamicCastObjCClass();
    if (v25)
      v26 = objc_msgSend(v25, sel_interfaceOrientation);
    else
      v26 = 0;

  }
  else
  {
    v26 = 0;
  }
  v27 = (objc_class *)type metadata accessor for FMFindingViewController();
  v42.receiver = v8;
  v42.super_class = v27;
  objc_msgSendSuper2(&v42, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if ((~objc_msgSend(v8, sel_supportedInterfaceOrientations) & 0x18) != 0)
  {
    v28 = v26 == (id)1;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView], sel_setHidden_, 0);
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v8;
    *(_BYTE *)(v29 + 24) = v26 == (id)1;
    v40 = sub_23A9E3D7C;
    v41 = v29;
    v30 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v37 = 1107296256;
    v38 = sub_23A9AD12C;
    v39 = &unk_250BC38F8;
    v31 = _Block_copy(&aBlock);
    v32 = v8;
    swift_release();
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v32;
    *(_BYTE *)(v33 + 24) = v28;
    v40 = sub_23A9E3D88;
    v41 = v33;
    aBlock = v30;
    v37 = 1107296256;
    v38 = sub_23A9AD12C;
    v39 = &unk_250BC3948;
    v34 = _Block_copy(&aBlock);
    v35 = v32;
    swift_release();
    objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v31, v34);
    _Block_release(v34);
    _Block_release(v31);
  }
  else
  {
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView], sel_setHidden_, 1);
  }
}

id sub_23A9D6F68(uint64_t a1, uint64_t a2, char a3)
{
  double v4;
  double v5;

  if ((a3 & 1) != 0)
    v4 = 0.0;
  else
    v4 = 1.0;
  if ((a3 & 1) != 0)
    v5 = 1.0;
  else
    v5 = 0.0;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView), sel_setAlpha_, v4);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView), sel_setAlpha_, v5);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_setAlpha_, v5);
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView), sel_setAlpha_, v5);
}

id sub_23A9D6FFC(uint64_t a1, uint64_t a2, char a3)
{
  _BOOL8 v5;

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView), sel_setHidden_, a3 & 1);
  v5 = (a3 & 1) == 0;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView), sel_setHidden_, v5);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_setHidden_, v5);
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView), sel_setHidden_, v5);
}

void sub_23A9D7100()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  double *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  int v58;
  int v59;
  uint64_t v60;
  void *v61;
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  void *v70;
  id v71;
  void *v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  unsigned int v93;
  int v94;
  int v95;
  id v96;
  void *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  void *v101;
  char *v102;
  id v103;
  id v104;
  void *v105;
  uint64_t v106;
  _QWORD v107[3];
  uint64_t v108;

  v1 = v0;
  v2 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v107[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v6 = v5;
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_blackColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v8);

  v9 = objc_msgSend(v1, sel_navigationController);
  if (v9)
  {
    v10 = v9;
    sub_23A96C8BC();

  }
  v11 = objc_msgSend(v1, sel_view);
  if (!v11)
    goto LABEL_33;
  v12 = v11;
  objc_msgSend(v11, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]);

  v13 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView];
  v14 = objc_msgSend(v7, sel_blackColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  objc_msgSend(v13, sel_setUserInteractionEnabled_, 1);
  v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v16 = v15;
  objc_msgSend(v15, sel_addSubview_, v13);

  sub_23A9D7CC8();
  v17 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  v18 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel], sel_setFont_, *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style]);
  objc_msgSend(*(id *)&v1[v17], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v1[v17], sel_setNumberOfLines_, 0);
  objc_msgSend(*(id *)&v1[v17], sel_setTextAlignment_, 4);
  v19 = *(id *)&v1[v17];
  v20 = objc_msgSend(v7, sel_whiteColor);
  v21 = objc_msgSend(v20, sel_colorWithAlphaComponent_, v18[4]);

  objc_msgSend(v19, sel_setTextColor_, v21);
  v22 = *(id *)&v1[v17];
  sub_23A9E4FD4(0x454C5449545F3152, 0xE800000000000000, 0, 0);
  v23 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setText_, v23);

  v24 = objc_msgSend(v1, (SEL)&stru_250BD6148);
  if (!v24)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v25 = v24;
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v1[v17]);

  v26 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel], sel_setFont_, *((_QWORD *)v18 + 1));
  objc_msgSend(*(id *)&v1[v26], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v1[v26], sel_setNumberOfLines_, 0);
  objc_msgSend(*(id *)&v1[v26], sel_setTextAlignment_, 4);
  v27 = *(id *)&v1[v26];
  v28 = objc_msgSend(v7, sel_whiteColor);
  objc_msgSend(v27, sel_setTextColor_, v28);

  v29 = *(void **)&v1[v26];
  v106 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session];
  v30 = v106 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v30, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v31 = v29;
  sub_23A9C79F0();
  sub_23A973324((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v32 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setText_, v32);

  v33 = objc_msgSend(v1, sel_view);
  if (!v33)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v34 = v33;
  objc_msgSend(v33, sel_addSubview_, *(_QWORD *)&v1[v26]);

  v35 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  v36 = (char *)*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton];
  v37 = sub_23A9E4FD4(0xD000000000000016, 0x800000023AA3F1B0, 0, 0);
  v38 = (uint64_t *)&v36[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
  *v38 = v37;
  v38[1] = v39;
  swift_bridgeObjectRelease();
  v40 = *(void **)&v36[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
  if (v38[1])
  {
    v41 = v40;
    swift_bridgeObjectRetain();
    v42 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v40;
    v42 = 0;
  }
  objc_msgSend(v40, sel_setText_, v42);

  v44 = *(id *)&v1[v35];
  v45 = objc_msgSend(v7, sel_whiteColor);
  v46 = objc_msgSend(v7, sel_whiteColor);
  v47 = objc_msgSend(v46, sel_colorWithAlphaComponent_, 0.2);

  sub_23AA2FC84(0x6B72616D78, 0xE500000000000000, v45, v47);
  v48 = objc_msgSend(v1, sel_view);
  if (!v48)
    goto LABEL_37;
  v49 = v48;
  objc_msgSend(v48, sel_addSubview_, *(_QWORD *)&v1[v35]);

  v50 = *(void **)&v1[v35];
  v51 = type metadata accessor for FMFindingViewController();
  v108 = v51;
  v107[0] = v1;
  v52 = v50;
  v53 = v1;
  v54 = sub_23A9E4FD4(0xD000000000000016, 0x800000023AA3F1B0, 0, 0);
  sub_23AA2F884((uint64_t)v107, (uint64_t)sel_closeActionWithSender_, 64, v54, v55);
  swift_bridgeObjectRelease();

  sub_23A9683BC((uint64_t)v107, &qword_2569D6680);
  v56 = OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology;
  v57 = *(unsigned __int16 *)(v106 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  v58 = (__int16)v57;
  v59 = (v57 >> 8) & 0x7F;
  if (v58 >= 0)
    v59 = *(_WORD *)(v106 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  v60 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
  v61 = *(void **)&v53[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton];
  if (v59 == 2)
  {
    v108 = v51;
    v107[0] = v53;
    v62 = v53;
    v63 = v61;
    v64 = sub_23A9E4EB0();
    sub_23AA2F884((uint64_t)v107, (uint64_t)sel_openMessagesActionWithSender_, 64, v64, v65);
    swift_bridgeObjectRelease();

    sub_23A9683BC((uint64_t)v107, &qword_2569D6680);
    v66 = (char *)*(id *)&v53[v60];
    v67 = sub_23A9E4EB0();
    v68 = (uint64_t *)&v66[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
    *v68 = v67;
    v68[1] = v69;
    swift_bridgeObjectRelease();
    v70 = *(void **)&v66[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
    if (v68[1])
    {
      v71 = v70;
      swift_bridgeObjectRetain();
      v72 = (void *)sub_23AA32FB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v84 = v70;
      v72 = 0;
    }
    objc_msgSend(v70, sel_setText_, v72);

    v85 = *(id *)&v53[v60];
    v86 = objc_msgSend(v7, sel_whiteColor);
    v87 = objc_msgSend(v7, sel_whiteColor);
    v88 = objc_msgSend(v87, sel_colorWithAlphaComponent_, 0.2);

    v89 = 0x2E6567617373656DLL;
    v90 = 0xEC0000006C6C6966;
  }
  else
  {
    v108 = v51;
    v107[0] = v53;
    v73 = v53;
    v74 = v61;
    v75 = sub_23A9E4FD4(0xD00000000000001BLL, 0x800000023AA3F1D0, 0, 0);
    sub_23AA2F884((uint64_t)v107, (uint64_t)sel_playSoundActionWithSender_, 64, v75, v76);
    swift_bridgeObjectRelease();

    sub_23A9683BC((uint64_t)v107, &qword_2569D6680);
    v77 = (char *)*(id *)&v53[v60];
    v78 = sub_23A9E4FD4(0xD00000000000001BLL, 0x800000023AA3F1D0, 0, 0);
    v79 = (uint64_t *)&v77[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
    *v79 = v78;
    v79[1] = v80;
    swift_bridgeObjectRelease();
    v81 = *(void **)&v77[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
    if (v79[1])
    {
      v82 = v81;
      swift_bridgeObjectRetain();
      v83 = (void *)sub_23AA32FB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v91 = v81;
      v83 = 0;
    }
    objc_msgSend(v81, sel_setText_, v83);

    v85 = *(id *)&v53[v60];
    v86 = objc_msgSend(v7, sel_whiteColor);
    v92 = objc_msgSend(v7, sel_whiteColor);
    v88 = objc_msgSend(v92, sel_colorWithAlphaComponent_, 0.2);

    v89 = 0x2E72656B61657073;
    v90 = 0xEE006C6C69662E32;
  }
  sub_23AA2FC84(v89, v90, v86, v88);

  v93 = *(unsigned __int16 *)(v106 + v56);
  v94 = (__int16)v93;
  v95 = (v93 >> 8) & 0x7F;
  if (v94 >= 0)
    v95 = *(_WORD *)(v106 + v56);
  if (v95 != 3)
  {
    v96 = objc_msgSend(v53, sel_view);
    if (v96)
    {
      v97 = v96;
      v98 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
      objc_msgSend(v96, sel_addSubview_, *(_QWORD *)&v53[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton]);

      v99 = *(id *)&v53[v98];
      objc_msgSend(v99, sel_setAlpha_, 1.0);
      objc_msgSend(v53, sel_accessibilityShowViewHandler);

      sub_23A9AF3B4(0);
      goto LABEL_28;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_28:
  if ((sub_23A9AFC94() & 1) == 0)
    return;
  v100 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  v101 = *(void **)&v53[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton];
  v108 = v51;
  v107[0] = v53;
  v102 = v53;
  v103 = v101;
  sub_23AA2F884((uint64_t)v107, (uint64_t)sel_torchActionWithSender_, 64, 0, 0);

  sub_23A9683BC((uint64_t)v107, &qword_2569D6680);
  v104 = objc_msgSend(v102, sel_view);
  if (!v104)
  {
LABEL_39:
    __break(1u);
    return;
  }
  v105 = v104;
  objc_msgSend(v104, sel_addSubview_, *(_QWORD *)&v53[v100]);

  sub_23A9AD9D4();
  sub_23A9AE104(0, 0);
}

id sub_23A9D7CC8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_sharedApplication);
  v3 = objc_msgSend(v2, sel_connectedScenes);

  sub_23A968488(0, &qword_2569D7908);
  sub_23A9E3D00();
  v4 = sub_23AA3317C();

  v5 = sub_23A9D4660(v4, &qword_2569D7908);
  swift_bridgeObjectRelease();
  if (v5)
  {
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = objc_msgSend(v6, sel_interfaceOrientation);

      v5 = v7 == (id)1;
    }
    else
    {

      v5 = 0;
    }
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  v9 = v0;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33218();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v27 = v13;
    *(_DWORD *)v12 = 136315394;
    v14 = objc_msgSend(v1, (SEL)&selRef_dispatchThreadgroups_threadsPerThreadgroup_ + 6);
    v15 = objc_msgSend(v14, sel_connectedScenes);

    v16 = sub_23AA3317C();
    v17 = (void *)sub_23A9D4660(v16, &qword_2569D7908);
    swift_bridgeObjectRelease();
    if (v17)
    {
      objc_opt_self();
      v18 = (void *)swift_dynamicCastObjCClass();
      if (v18)
        objc_msgSend(v18, sel_interfaceOrientation);

    }
    type metadata accessor for UIInterfaceOrientation(0);
    v19 = sub_23AA32FFC();
    HIDWORD(v26) = (unint64_t)sub_23A964DBC(v19, v20, &v27) >> 32;
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v26) = v5;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v10, v11, "FMFindingViewController: Update orientation view. Current orientation: %s, isPortrait: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v13, -1, -1);
    MEMORY[0x23B85DB24](v12, -1, -1);

  }
  else
  {

  }
  v21 = ~objc_msgSend(v9, sel_supportedInterfaceOrientations, v26);
  v22 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView];
  if ((v21 & 0x18) != 0)
  {
    objc_msgSend(v22, sel_setHidden_, v5);
    v24 = v5 ^ 1;
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView], sel_setHidden_, v24);
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer], sel_setHidden_, v24);
    v22 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView];
    v23 = v24;
  }
  else
  {
    v23 = 1;
  }
  return objc_msgSend(v22, sel_setHidden_, v23);
}

void sub_23A9D80B8()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  v2 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel], sel_setFont_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style + 16]);
  objc_msgSend(*(id *)&v0[v1], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setNumberOfLines_, 0);
  v3 = *(void **)&v0[v1];
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = objc_msgSend(v4, sel_whiteColor);
  objc_msgSend(v5, sel_setTextColor_, v6);

  objc_msgSend(*(id *)&v0[v1], sel_setTextAlignment_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setAlpha_, 0.0);
  v7 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView], sel_addArrangedSubview_, *(_QWORD *)&v0[v1]);
  v8 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel], sel_setFont_, *((_QWORD *)v2 + 3));
  objc_msgSend(*(id *)&v0[v8], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setNumberOfLines_, 0);
  v9 = *(id *)&v0[v8];
  v10 = objc_msgSend(v4, sel_whiteColor);
  objc_msgSend(v9, sel_setTextColor_, v10);

  objc_msgSend(*(id *)&v0[v8], sel_setTextAlignment_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setAlpha_, 0.0);
  objc_msgSend(*(id *)&v0[v7], sel_addArrangedSubview_, *(_QWORD *)&v0[v8]);
  objc_msgSend(*(id *)&v0[v7], sel_setAxis_, 1);
  objc_msgSend(*(id *)&v0[v7], sel_setAlignment_, 3);
  objc_msgSend(*(id *)&v0[v7], sel_setDistribution_, 0);
  objc_msgSend(*(id *)&v0[v7], sel_setSpacing_, *((double *)v2 + 13));
  v11 = objc_msgSend(v0, sel_view);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_addSubview_, *(_QWORD *)&v0[v7]);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23A9D8344()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  __int128 v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_view);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView];
    objc_msgSend(v5, sel_addSubview_, v7);

    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
       + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_23A9732E0(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v9 = *((_QWORD *)v4 + 1);
    if (*(_QWORD *)(v9 + 16))
    {
      v10 = sub_23AA1D250((uint64_t)&v4[*(int *)(v2 + 36)]);
      if ((v11 & 1) != 0)
      {
        sub_23A963A14(*(_QWORD *)(v9 + 56) + 40 * v10, (uint64_t)v19);
        sub_23A963B98(v19, (uint64_t)v20);
        sub_23A973324((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
        v12 = v21;
        v13 = v22;
        sub_23A96545C(v20, v21);
        v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
        v15 = (uint64_t *)(v7 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_deviceName);
        *v15 = v14;
        v15[1] = v16;
        swift_bridgeObjectRelease();
        return sub_23A963B3C((uint64_t)v20);
      }
    }
  }
  else
  {
    __break(1u);
  }
  result = sub_23AA335A8();
  __break(1u);
  return result;
}

void sub_23A9D8524()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  double v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  id v96;
  void *v97;
  id v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  double v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  unsigned int v111;
  char *v112;
  void *v113;
  uint64_t v114;
  double v115;
  uint64_t v116;
  id v117;
  id v118;
  id v119;
  void *v120;
  uint64_t v121;
  id v122;
  id v123;
  void *v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  void *v130;
  id v131;
  id v132;
  id v133;
  void **p_weak_ivar_lyt;
  void *v135;
  id v136;
  id v137;
  uint64_t v138;
  id v139;
  id v140;
  void *v141;
  id v142;
  id v143;
  double v144;
  id v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  void *v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  void *v163;
  id v164;
  id v165;
  id v166;
  id v167;
  void *v168;
  id v169;
  id v170;
  void *v171;
  void *v172;
  uint64_t v173;
  id v174;
  id v175;
  void *v176;
  id v177;
  id v178;
  id v179;
  id v180;
  void *v181;
  id v182;
  id v183;
  id v184;
  id v185;
  void *v186;
  id v187;
  id v188;
  id v189;
  id v190;
  void *v191;
  id v192;
  id v193;
  void *v194;
  uint64_t v195;
  double *v196;
  double *v197;
  char **v198;
  double v199;
  double v200;
  uint64_t v201;
  id v202;
  id v203;
  uint64_t v204;
  id v205;
  id v206;
  void *v207;
  id v208;
  id v209;
  id v210;
  id v211;
  void *v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  void *v219;
  id v220;
  id v221;
  void *v222;
  unsigned int v223;
  int v224;
  int v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  id v229;
  void *v230;
  id v231;
  id v232;
  id v233;
  id v234;
  void *v235;
  id v236;
  id v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  id v242;
  void *v243;
  id v244;
  id v245;
  id v246;
  id v247;
  void *v248;
  id v249;
  id v250;
  id v251;
  id v252;
  double *v253;
  id v254[2];
  id v255;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  v4 = v3;

  v251 = (id)objc_opt_self();
  v5 = objc_msgSend(v251, sel_currentDevice);
  v252 = objc_msgSend(v5, sel_userInterfaceIdiom);

  v6 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23A964084(&qword_2569D6080);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23AA35F80;
  v8 = objc_msgSend(*(id *)&v1[v6], sel_topAnchor);
  v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
    __break(1u);
    goto LABEL_65;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_topAnchor);

  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  *(_QWORD *)(v7 + 32) = v12;
  v13 = objc_msgSend(*(id *)&v1[v6], sel_bottomAnchor);
  v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_bottomAnchor);

  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v7 + 40) = v17;
  v18 = objc_msgSend(*(id *)&v1[v6], sel_leadingAnchor);
  v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_leadingAnchor);

  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v7 + 48) = v22;
  v23 = objc_msgSend(*(id *)&v1[v6], sel_trailingAnchor);
  v24 = objc_msgSend(v1, sel_view);
  if (!v24)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v25 = v24;
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v25, sel_trailingAnchor);

  v28 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v7 + 56) = v28;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v29 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v29);

  v30 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v31 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  v32 = 64;
  if (v252 == (id)1)
    v32 = 72;
  v33 = 40;
  if (v252 == (id)1)
    v33 = 48;
  v34 = *(double *)&v31[v33];
  v35 = *(double *)&v31[v32];
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23AA36F20;
  v37 = objc_msgSend(*(id *)&v1[v30], sel_topAnchor);
  v38 = objc_msgSend(v1, sel_view);
  if (!v38)
    goto LABEL_68;
  v39 = v38;
  v40 = objc_msgSend(v38, sel_topAnchor);

  v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v40, v34);
  *(_QWORD *)(v36 + 32) = v41;
  v42 = objc_msgSend(*(id *)&v1[v30], sel_leadingAnchor);
  v43 = objc_msgSend(v1, sel_view);
  if (!v43)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, sel_safeAreaLayoutGuide);

  v46 = objc_msgSend(v45, sel_leadingAnchor);
  v47 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v46, v35);

  *(_QWORD *)(v36 + 40) = v47;
  v48 = objc_msgSend(*(id *)&v1[v30], sel_trailingAnchor);
  v49 = objc_msgSend(v1, sel_view);
  if (!v49)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, sel_safeAreaLayoutGuide);

  v52 = objc_msgSend(v51, sel_trailingAnchor);
  v53 = objc_msgSend(v48, sel_constraintEqualToAnchor_constant_, v52, -v35);

  *(_QWORD *)(v36 + 48) = v53;
  sub_23AA330C8();
  v54 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v54);

  v55 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_23AA36F20;
  v57 = objc_msgSend(*(id *)&v1[v55], sel_topAnchor);
  v58 = objc_msgSend(*(id *)&v1[v30], sel_bottomAnchor);
  v253 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v58, *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style + 56]);

  *(_QWORD *)(v56 + 32) = v59;
  v60 = objc_msgSend(*(id *)&v1[v55], sel_leadingAnchor);
  v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, (SEL)&selRef_addChildNode_ + 3);

  v64 = objc_msgSend(v63, sel_leadingAnchor);
  v65 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v64, v35);

  *(_QWORD *)(v56 + 40) = v65;
  v66 = objc_msgSend(*(id *)&v1[v55], sel_trailingAnchor);
  v67 = objc_msgSend(v1, sel_view);
  if (!v67)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, sel_safeAreaLayoutGuide);

  v70 = objc_msgSend(v69, sel_trailingAnchor);
  v71 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v70, -v35);

  *(_QWORD *)(v56 + 48) = v71;
  sub_23AA330C8();
  v72 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v72);

  v73 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer];
  objc_msgSend(v73, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_23AA36F20;
  v75 = objc_msgSend(v73, sel_topAnchor);
  v76 = objc_msgSend(*(id *)&v1[v55], sel_bottomAnchor);
  v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_constant_, v76, 6.0);

  *(_QWORD *)(v74 + 32) = v77;
  v78 = objc_msgSend(v73, (SEL)&stru_250BD6128.name + 6);
  v79 = objc_msgSend(v1, sel_view);
  if (!v79)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v80 = v79;
  v81 = objc_msgSend(v79, sel_safeAreaLayoutGuide);

  v82 = objc_msgSend(v81, (SEL)&stru_250BD6128.name + 6);
  v83 = v253[8];
  v84 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v82, v83 + -5.0);

  *(_QWORD *)(v74 + 40) = v84;
  v85 = objc_msgSend(v73, sel_trailingAnchor);
  v86 = objc_msgSend(v1, sel_view);
  if (!v86)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v87 = v86;
  v88 = objc_msgSend(v86, sel_safeAreaLayoutGuide);

  v89 = objc_msgSend(v88, sel_trailingAnchor);
  v90 = objc_msgSend(v85, sel_constraintLessThanOrEqualToAnchor_constant_, v89, -v83);

  *(_QWORD *)(v74 + 48) = v90;
  sub_23AA330C8();
  v91 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v92 = v26;
  objc_msgSend(v26, sel_activateConstraints_, v91);

  v93 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_23AA35F80;
  v95 = objc_msgSend(*(id *)&v1[v93], sel_centerYAnchor);
  v96 = objc_msgSend(v1, sel_view);
  if (!v96)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v97 = v96;
  v98 = objc_msgSend(v96, sel_centerYAnchor);

  v99 = objc_msgSend(v95, sel_constraintEqualToAnchor_constant_, v98, v253[15]);
  *(_QWORD *)(v94 + 32) = v99;
  v100 = objc_msgSend(*(id *)&v1[v93], sel_centerXAnchor);
  v101 = objc_msgSend(v1, sel_view);
  if (!v101)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v102 = v101;
  v103 = objc_msgSend(v101, sel_centerXAnchor);

  v104 = objc_msgSend(v100, sel_constraintEqualToAnchor_, v103);
  *(_QWORD *)(v94 + 40) = v104;
  v105 = objc_msgSend(*(id *)&v1[v93], sel_widthAnchor);
  v106 = v253[14];
  v107 = objc_msgSend(v105, sel_constraintEqualToConstant_, v106);

  *(_QWORD *)(v94 + 48) = v107;
  v108 = objc_msgSend(*(id *)&v1[v93], sel_heightAnchor);
  v109 = objc_msgSend(v108, sel_constraintLessThanOrEqualToConstant_, v106);

  *(_QWORD *)(v94 + 56) = v109;
  sub_23AA330C8();
  v110 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v110);

  v111 = v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType];
  v112 = "FMBTDistanceViewStyle" + 16;
  if (v111 < 2)
  {
    v113 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView];
    objc_msgSend(v113, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v114 = 11;
    if (v4 >= 414.0)
      v114 = 10;
    v115 = v253[v114];
    v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = xmmword_23AA36180;
    v117 = objc_msgSend(v113, sel_bottomAnchor);
    v118 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton], sel_topAnchor);
    v119 = objc_msgSend(v117, sel_constraintEqualToAnchor_constant_, v118, -v115);

    *(_QWORD *)(v116 + 32) = v119;
    sub_23AA330C8();
    v120 = (void *)sub_23AA330A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_activateConstraints_, v120);

    v112 = "Style";
    v121 = swift_allocObject();
    *(_OWORD *)(v121 + 16) = xmmword_23AA36AF0;
    v122 = objc_msgSend(v113, sel_leadingAnchor);
    v123 = objc_msgSend(v1, sel_view);
    if (v123)
    {
      v124 = v123;
      v125 = objc_msgSend(v123, sel_safeAreaLayoutGuide);

      v126 = objc_msgSend(v125, sel_leadingAnchor);
      v127 = objc_msgSend(v122, sel_constraintEqualToAnchor_constant_, v126, v83);

      *(_QWORD *)(v121 + 32) = v127;
      v128 = objc_msgSend(v113, sel_trailingAnchor);
      v129 = objc_msgSend(v1, sel_view);
      if (v129)
      {
        v130 = v129;
        v131 = objc_msgSend(v129, sel_safeAreaLayoutGuide);

        v132 = objc_msgSend(v131, sel_trailingAnchor);
        v133 = objc_msgSend(v128, sel_constraintEqualToAnchor_constant_, v132, -v83);

        *(_QWORD *)(v121 + 40) = v133;
        sub_23AA330C8();
        v92 = v26;
        p_weak_ivar_lyt = (void **)(&FMProximityConnectionManager + 56);
        goto LABEL_38;
      }
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v111 != 2)
    goto LABEL_39;
  v135 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView];
  objc_msgSend(v135, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v136 = objc_msgSend(v251, sel_currentDevice);
  v137 = objc_msgSend(v136, sel_userInterfaceIdiom);

  v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_23AA36F20;
  if (v137 == (id)1)
  {
    v139 = objc_msgSend(v135, sel_bottomAnchor);
    v140 = objc_msgSend(v1, sel_view);
    if (!v140)
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    v141 = v140;
    v142 = objc_msgSend(v140, sel_safeAreaLayoutGuide);

    v143 = objc_msgSend(v142, sel_bottomAnchor);
    v144 = v253[9];
    v145 = objc_msgSend(v139, sel_constraintEqualToAnchor_constant_, v143, -v144);

    *(_QWORD *)(v138 + 32) = v145;
    v146 = objc_msgSend(v135, sel_leadingAnchor);
    v147 = objc_msgSend(v1, (SEL)&stru_250BD6148);
    if (!v147)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    v148 = v147;
    v149 = objc_msgSend(v147, sel_safeAreaLayoutGuide);

    v150 = objc_msgSend(v149, sel_leadingAnchor);
    v151 = objc_msgSend(v146, sel_constraintEqualToAnchor_constant_, v150, v144);

    *(_QWORD *)(v138 + 40) = v151;
    v152 = objc_msgSend(v135, sel_trailingAnchor);
    v153 = objc_msgSend(v1, (SEL)&stru_250BD6148);
    if (!v153)
    {
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    v154 = v153;
    v155 = objc_msgSend(v153, sel_safeAreaLayoutGuide);

    v156 = objc_msgSend(v155, sel_trailingAnchor);
    v157 = objc_msgSend(v152, (SEL)0x250BD7F67, v156, -v144);
  }
  else
  {
    v158 = objc_msgSend(v135, sel_bottomAnchor);
    v159 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton], sel_topAnchor);
    v160 = objc_msgSend(v158, sel_constraintEqualToAnchor_constant_, v159, -8.0);

    *(_QWORD *)(v138 + 32) = v160;
    v161 = objc_msgSend(v135, sel_leadingAnchor);
    v162 = objc_msgSend(v1, (SEL)&stru_250BD6148);
    if (!v162)
    {
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    v163 = v162;
    v164 = objc_msgSend(v162, sel_safeAreaLayoutGuide);

    v165 = objc_msgSend(v164, (SEL)&stru_250BD6128.name + 6);
    v166 = objc_msgSend(v161, sel_constraintEqualToAnchor_constant_, v165, v83);

    *(_QWORD *)(v138 + 40) = v166;
    v152 = objc_msgSend(v135, sel_trailingAnchor);
    v167 = objc_msgSend(v1, (SEL)&stru_250BD6148);
    if (!v167)
    {
LABEL_95:
      __break(1u);
      return;
    }
    v168 = v167;
    v169 = objc_msgSend(v167, sel_safeAreaLayoutGuide);

    v156 = objc_msgSend(v169, sel_trailingAnchor);
    v157 = objc_msgSend(v152, sel_constraintEqualToAnchor_constant_, v156, -v83);
  }
  v170 = v157;

  *(_QWORD *)(v138 + 48) = v170;
  sub_23AA330C8();
  v171 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v171);

  v172 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView];
  objc_msgSend(v172, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v173 = swift_allocObject();
  *(_OWORD *)(v173 + 16) = xmmword_23AA35F80;
  v174 = objc_msgSend(v172, sel_topAnchor);
  v175 = objc_msgSend(v1, (SEL)&stru_250BD6148);
  if (!v175)
    goto LABEL_87;
  v176 = v175;
  v177 = objc_msgSend(v175, sel_topAnchor);

  v178 = objc_msgSend(v174, sel_constraintEqualToAnchor_, v177);
  *(_QWORD *)(v173 + 32) = v178;
  v179 = objc_msgSend(v172, sel_bottomAnchor);
  v180 = objc_msgSend(v1, (SEL)&stru_250BD6148);
  if (!v180)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v181 = v180;
  v182 = objc_msgSend(v180, sel_bottomAnchor);

  v183 = objc_msgSend(v179, sel_constraintEqualToAnchor_, v182);
  *(_QWORD *)(v173 + 40) = v183;
  v184 = objc_msgSend(v172, sel_leadingAnchor);
  v185 = objc_msgSend(v1, (SEL)&stru_250BD6148);
  if (!v185)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v186 = v185;
  v187 = objc_msgSend(v185, sel_leadingAnchor);

  v188 = objc_msgSend(v184, sel_constraintEqualToAnchor_, v187);
  *(_QWORD *)(v173 + 48) = v188;
  v189 = objc_msgSend(v172, sel_trailingAnchor);
  v190 = objc_msgSend(v1, (SEL)&stru_250BD6148);
  if (!v190)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v191 = v190;
  v192 = objc_msgSend(v190, sel_trailingAnchor);

  v193 = objc_msgSend(v189, sel_constraintEqualToAnchor_, v192);
  *(_QWORD *)(v173 + 56) = v193;
  sub_23AA330C8();
  v92 = v26;
  p_weak_ivar_lyt = &FMProximityConnectionManager.weak_ivar_lyt;
  v112 = "Style";
LABEL_38:
  v194 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v92, (SEL)p_weak_ivar_lyt[204], v194);

LABEL_39:
  v195 = 17;
  if (v4 >= 414.0)
    v195 = 16;
  if (v252 == (id)1)
  {
    v196 = v253;
    v197 = v253 + 20;
    v198 = &selRef_animateAlongsideTransition_completion_;
  }
  else
  {
    v198 = &selRef_animateAlongsideTransition_completion_;
    v196 = v253;
    if (v4 < 414.0)
      v197 = v253 + 19;
    else
      v197 = v253 + 18;
  }
  v199 = v196[v195];
  v200 = *v197;
  v201 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v202 = objc_msgSend(v251, sel_currentDevice);
  v203 = objc_msgSend(v202, sel_userInterfaceIdiom);

  v204 = swift_allocObject();
  *(_OWORD *)v254 = *((_OWORD *)v112 + 175);
  *(_OWORD *)(v204 + 16) = *(_OWORD *)v254;
  v205 = objc_msgSend(*(id *)&v1[v201], sel_topAnchor);
  v206 = objc_msgSend(v1, sel_view);
  v207 = v206;
  if (v203 == (id)1)
  {
    if (v206)
    {
      v208 = objc_msgSend(v206, sel_topAnchor);

      v209 = objc_msgSend(v205, v198[14], v208, v253[6]);
      *(_QWORD *)(v204 + 32) = v209;
      v210 = objc_msgSend(*(id *)&v1[v201], sel_trailingAnchor);
      v211 = objc_msgSend(v1, sel_view);
      if (v211)
      {
        v212 = v211;
        v213 = objc_msgSend(v211, sel_trailingAnchor);

        v214 = objc_msgSend(v210, (SEL)v198 + 3943, v213, -v253[9]);
        *(_QWORD *)(v204 + 40) = v214;
        sub_23AA330C8();
        goto LABEL_53;
      }
      goto LABEL_80;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (!v206)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v215 = objc_msgSend(v206, sel_bottomAnchor);

  v216 = objc_msgSend(v205, v198[14], v215, -v200);
  *(_QWORD *)(v204 + 32) = v216;
  v217 = objc_msgSend(*(id *)&v1[v201], sel_leadingAnchor);
  v218 = objc_msgSend(v1, sel_view);
  if (!v218)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v219 = v218;
  v220 = objc_msgSend(v218, sel_leadingAnchor);

  v221 = objc_msgSend(v217, v198[14], v220, v199);
  *(_QWORD *)(v204 + 40) = v221;
  sub_23AA330C8();
LABEL_53:
  v222 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v92, sel_activateConstraints_, v222);

  v223 = *(unsigned __int16 *)(*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                             + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  v224 = (__int16)v223;
  v225 = (v223 >> 8) & 0x7F;
  if (v224 >= 0)
    v225 = *(_WORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                                     + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  if (v225 != 3)
  {
    v226 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v227 = swift_allocObject();
    *(_OWORD *)(v227 + 16) = *(_OWORD *)v254;
    v228 = objc_msgSend(*(id *)&v1[v226], sel_topAnchor);
    v229 = objc_msgSend(v1, sel_view);
    if (v229)
    {
      v230 = v229;
      v231 = objc_msgSend(v229, sel_bottomAnchor);

      v232 = objc_msgSend(v228, v198[14], v231, -v200);
      *(_QWORD *)(v227 + 32) = v232;
      v233 = objc_msgSend(*(id *)&v1[v226], sel_trailingAnchor);
      v234 = objc_msgSend(v1, sel_view);
      if (v234)
      {
        v235 = v234;
        v236 = objc_msgSend(v234, sel_trailingAnchor);

        v237 = objc_msgSend(v233, v198[14], v236, -v199);
        *(_QWORD *)(v227 + 40) = v237;
        sub_23AA330C8();
        v238 = (void *)sub_23AA330A4();
        swift_bridgeObjectRelease();
        objc_msgSend(v92, sel_activateConstraints_, v238);

        goto LABEL_59;
      }
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
LABEL_59:
  if ((sub_23A9AFC94() & 1) != 0)
  {
    v239 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v240 = swift_allocObject();
    *(_OWORD *)(v240 + 16) = *(_OWORD *)v254;
    v241 = objc_msgSend(*(id *)&v1[v239], sel_topAnchor);
    v242 = objc_msgSend(v1, sel_view);
    if (v242)
    {
      v243 = v242;
      v244 = objc_msgSend(v242, sel_bottomAnchor);

      v245 = objc_msgSend(v241, v198[14], v244, -v200);
      *(_QWORD *)(v240 + 32) = v245;
      v246 = objc_msgSend(*(id *)&v1[v239], sel_centerXAnchor);
      v247 = objc_msgSend(v1, sel_view);
      if (v247)
      {
        v248 = v247;
        v249 = objc_msgSend(v247, sel_centerXAnchor);

        v250 = objc_msgSend(v246, sel_constraintEqualToAnchor_, v249);
        *(_QWORD *)(v240 + 40) = v250;
        sub_23AA330C8();
        v255 = (id)sub_23AA330A4();
        swift_bridgeObjectRelease();
        objc_msgSend(v92, sel_activateConstraints_, v255);

        return;
      }
      goto LABEL_86;
    }
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
}

void sub_23A9DA1A8()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer];
    v4 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
    objc_msgSend(v1, sel_insertSubview_aboveSubview_, v3, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]);

    objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = (void *)objc_opt_self();
    sub_23A964084(&qword_2569D6080);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_23AA35F80;
    v7 = objc_msgSend(v3, sel_topAnchor);
    v8 = objc_msgSend(*(id *)&v0[v4], sel_topAnchor);
    v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v3, sel_bottomAnchor);
    v11 = objc_msgSend(*(id *)&v0[v4], sel_bottomAnchor);
    v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(_QWORD *)(v6 + 40) = v12;
    v13 = objc_msgSend(v3, sel_leadingAnchor);
    v14 = objc_msgSend(*(id *)&v0[v4], sel_leadingAnchor);
    v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

    *(_QWORD *)(v6 + 48) = v15;
    v16 = objc_msgSend(v3, sel_trailingAnchor);
    v17 = objc_msgSend(*(id *)&v0[v4], sel_trailingAnchor);
    v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(_QWORD *)(v6 + 56) = v18;
    sub_23AA330C8();
    sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
    v19 = (id)sub_23AA330A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v19);

  }
  else
  {
    __break(1u);
  }
}

id sub_23A9DA450(void *a1, char a2)
{
  double v2;

  v2 = 0.0;
  if ((a2 & 1) != 0)
    v2 = 1.0;
  return objc_msgSend(a1, sel_setAlpha_, v2);
}

void sub_23A9DA46C(unsigned __int16 *a1, __int16 *a2)
{
  if (!sub_23AA2D880((unsigned __int16 *)a2, a1))
  {
    if ((*a2 & 0x8100) == 0x100)
    {
      sub_23A9DCDC8(1, (uint64_t)a2);
      sub_23A9DD814();
      sub_23A9DC168();
      sub_23A9DA850((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      sub_23A9DA4FC((uint64_t)a1, a2);
    }
  }
}

id sub_23A9DA4FC(uint64_t a1, __int16 *a2)
{
  char *v2;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id (*v32)();
  _QWORD *v33;

  sub_23A9DD814();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_BYTE *)(v5 + 24) = 1;
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion] == 1
    && v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType] == 2)
  {
    v6 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
    v7 = v2;
    v8 = objc_msgSend(v6, sel_snapshotViewAfterScreenUpdates_, 1);
    if (v8)
    {
      v9 = v8;
      v10 = (void *)objc_opt_self();
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = v7;
      v11[3] = v9;
      v11[4] = sub_23A9E4874;
      v11[5] = v5;
      v32 = sub_23A9E48B4;
      v33 = v11;
      v12 = MEMORY[0x24BDAC760];
      v28 = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_23A9C4DBC;
      v31 = &unk_250BC3D28;
      v13 = _Block_copy(&v28);
      v14 = v7;
      v15 = v9;
      swift_retain();
      swift_release();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v15;
      v32 = sub_23A9E4910;
      v33 = (_QWORD *)v16;
      v28 = v12;
      v29 = 1107296256;
      v30 = sub_23A9A366C;
      v31 = &unk_250BC3D78;
      v17 = _Block_copy(&v28);
      v18 = v15;
      swift_release();
      objc_msgSend(v10, sel_animateWithDuration_delay_options_animations_completion_, 5242884, v13, v17, 0.5, 0.0);
      swift_release();

      _Block_release(v17);
      _Block_release(v13);
      goto LABEL_7;
    }
  }
  else
  {
    sub_23A9DC614((uint64_t)v2, 1);
  }
  swift_release();
LABEL_7:
  sub_23A9DC168();
  v19 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel];
  v20 = &v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state];
  swift_beginAccess();
  v21 = type metadata accessor for FMFindingViewState();
  v22 = v19;
  swift_bridgeObjectRetain();
  v23 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setText_, v23);

  v24 = &v20[*(int *)(v21 + 24)];
  v25 = *((_QWORD *)v24 + 1);
  v26 = (_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView]
                 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_deviceName);
  *v26 = *(_QWORD *)v24;
  v26[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23A9DDC74();
  sub_23A9DE7DC();
  sub_23AA26A74(a1, (uint64_t)a2);
  if (*(__int16 *)(*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                  + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology) < 0)
    sub_23A9DEF98(a1, a2);
  else
    sub_23A9DE98C();
  return objc_msgSend(v2, sel_accessibilityDistanceAndDirectionUpdated);
}

void sub_23A9DA850(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  int v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;

  v3 = v2;
  if ((~objc_msgSend(v2, sel_supportedInterfaceOrientations) & 0x18) == 0)
    goto LABEL_2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v7 = objc_msgSend(v6, sel_connectedScenes);

  sub_23A968488(0, &qword_2569D7908);
  sub_23A9E3D00();
  v8 = sub_23AA3317C();

  v15 = (id)sub_23A9D4660(v8, &qword_2569D7908);
  swift_bridgeObjectRelease();
  if (!v15)
    return;
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
    goto LABEL_14;
  v10 = objc_msgSend(v9, sel_interfaceOrientation);

  if (v10 == (id)1)
  {
LABEL_2:
    v5 = *(_DWORD *)(a2 + *(int *)(type metadata accessor for FMFindingViewState() + 32) + 96);
    if ((v5 & 0xFF000000) == 0x4000000)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v11 = sub_23AA32EA0();
      sub_23A9620E8(v11, (uint64_t)qword_2569E0040);
      v12 = sub_23AA32E88();
      v13 = sub_23AA331F4();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_23A95E000, v12, v13, "ðŸ§­ FMFindingViewCtrl: Requesting scatter haptic.", v14, 2u);
        MEMORY[0x23B85DB24](v14, -1, -1);
      }

      v15 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
      sub_23A9A7A24();
    }
    else
    {
      if ((v5 & 0xFF000000) != 0x5000000)
      {
        if ((v5 & 0xFE000000) != 0x6000000)
          __asm { BR              X10 }
        return;
      }
      v15 = *(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
      sub_23A9AA684();
    }
LABEL_14:

  }
}

void sub_23A9DC168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned int v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45[2];
  _BYTE v46[40];
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;

  v1 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_WORD *)((char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType);
  if (v7 >= 2)
  {
    if (v7 == 2)
    {
      v28 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
      swift_beginAccess();
      sub_23A963B5C((__int128 *)(v28 + *(int *)(v1 + 32)), (uint64_t)&v47);
      v29 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
          + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
      swift_beginAccess();
      sub_23A9732E0(v29, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      v30 = *((_QWORD *)v6 + 1);
      if (*(_QWORD *)(v30 + 16))
      {
        v31 = (uint64_t)&v6[*(int *)(v4 + 36)];
        sub_23A963ED4((uint64_t)&v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
        v32 = sub_23AA1D250(v31);
        if ((v33 & 1) != 0)
        {
          sub_23A963A14(*(_QWORD *)(v30 + 56) + 40 * v32, (uint64_t)v45);
          sub_23A963B98(v45, (uint64_t)v46);
          sub_23A973324((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
          v34 = (uint64_t *)(v28 + *(int *)(v1 + 60));
          v35 = *v34;
          v36 = v34[1];
          swift_bridgeObjectRetain();
          sub_23A962FB0(&v47, (uint64_t)v46, v35, v36);
          swift_bridgeObjectRelease();
          sub_23A963ED4((uint64_t)&v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
          sub_23A963B3C((uint64_t)v46);
          return;
        }
      }
      else
      {
        sub_23A963ED4((uint64_t)&v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
      }
      sub_23AA335A8();
      __break(1u);
    }
  }
  else
  {
    v8 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    sub_23A9732E0(v8, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v9 = (char *)v3 + *(int *)(v1 + 32);
    v10 = *((_DWORD *)v9 + 24);
    if ((v10 & 0xFC000000) == 0x4000000)
      goto LABEL_8;
    v11 = *((_QWORD *)v9 + 2);
    if ((*(_QWORD *)&v10 & 0xFF0000) != 0x40000 || v11 == 1)
      goto LABEL_8;
    v13 = *((_QWORD *)v9 + 11);
    v14 = *((_QWORD *)v9 + 10);
    v15 = *((_DWORD *)v9 + 18);
    v16 = *((_QWORD *)v9 + 8);
    v17 = *((_DWORD *)v9 + 14);
    v18 = *((_QWORD *)v9 + 6);
    v19 = v9[40];
    v20 = *((_QWORD *)v9 + 4);
    v21 = *((_QWORD *)v9 + 3);
    v22 = *((_DWORD *)v9 + 2);
    *(_QWORD *)&v47 = *(_QWORD *)v9;
    BYTE8(v47) = v22 & 1;
    v48 = v11;
    v49 = v21;
    v50 = v20;
    v51 = v19 & 1;
    v52 = v18;
    v53 = v17 & 0x101;
    v54 = v16;
    v55 = v15 & 0x101;
    v56 = BYTE2(v15) & 1;
    v57 = v14;
    v58 = v13;
    v59 = v10 & 0x101;
    v23 = sub_23A96A308();
    if ((v24 & 0xFF00000000) == 0x200000000)
    {
LABEL_8:
      sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v25 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView);
      v26 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distance;
      if ((*(_DWORD *)(v8 + *(int *)(v1 + 32) + 96) | 0x2000000u) >> 25 == 3)
      {
        *(_QWORD *)v26 = 0;
        *(_BYTE *)(v26 + 8) = 1;
        v27 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide;
        *(_DWORD *)v27 = 0;
        *(_BYTE *)(v27 + 4) = 1;
      }
      else
      {
        *(_QWORD *)v26 = 0;
        *(_BYTE *)(v26 + 8) = 1;
        v37 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide;
        *(_DWORD *)v37 = 0x2000;
        *(_BYTE *)(v37 + 4) = 0;
      }
      *(_BYTE *)(v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold) = 2;
      v38 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring);
      sub_23A9829AC(1.79769313e308);
      *(_BYTE *)(v38 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    }
    else
    {
      v39 = v23;
      v40 = BYTE4(v24);
      v41 = *v3 & 0x8001;
      v42 = v24;
      sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      LOBYTE(v45[0]) = 0;
      if (v41 == 0x8000)
        v43 = 1;
      else
        v43 = v42;
      sub_23AA03C50(v39, 0, v43, 1, v40 & 1);
    }
  }
}

void sub_23A9DC614(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  void *v26;
  double v27;
  char *v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char *v33;
  void *v34;
  double v35;
  char *v36;
  id v37;
  uint64_t v38;
  char v39;
  char v40;
  double v41;
  char *v42;
  void *v43;
  char *v44;
  id v45;
  char *v46;
  int v47;
  BOOL v48;
  BOOL v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char *v60;
  void *v61;
  double v62;
  char *v63;
  id v64;
  char v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69;
  int v70;
  char *v71;
  void *v72;
  _BYTE *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  _BYTE *v82;
  double *v83;
  void *v84;
  char v85;
  _BYTE *v86;
  id v87;
  char *v88;
  void *v89;
  id v90;
  char *v91;
  void *v92;
  double v93;
  char *v94;
  char *v95;
  void *v96;
  double v97;
  char *v98;
  char *v99;
  void *v100;
  double v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  char v110[16];
  double v111;
  char v112[8];
  double v113;
  double v114[6];

  v107 = a2;
  v3 = type metadata accessor for FMFindingViewState();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v104 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v106 = (uint64_t)&v103 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v105 = (uint64_t)&v103 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (_WORD *)((char *)&v103 - v11);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v103 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v103 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v103 - v19;
  v109 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
  v21 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  v22 = a1;
  v23 = a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_23A9732E0(v23, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v108 = v3;
  v24 = *(_DWORD *)&v20[*(int *)(v3 + 32) + 96];
  v25 = v21;
  sub_23A973324((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v26 = *(void **)&v25[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v26)
  {
    if ((v24 & 0xFC000000) == 0x4000000)
      v27 = 0.0;
    else
      v27 = 1.0;
    v28 = v26;
    sub_23A9E9AE4(1, v27);

    v25 = v28;
  }

  sub_23A9732E0(v23, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  *(double *)&v29 = COERCE_DOUBLE(sub_23AA2B4DC());
  v31 = v30;
  sub_23A973324((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v32 = v107;
  if ((v31 & 1) == 0)
  {
    v33 = *(char **)(v22 + v109);
    v34 = *(void **)&v33[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v34)
    {
      v35 = *(double *)&v29;
      v36 = v33;
      v37 = v34;
      sub_23A9E8628(0, v35);

    }
  }
  sub_23A9732E0(v23, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  *(double *)&v38 = COERCE_DOUBLE(sub_23AA2B70C());
  v40 = v39;
  sub_23A973324((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if ((v40 & 1) == 0)
  {
    v41 = *(double *)&v38;
    v42 = *(char **)(v22 + v109);
    v43 = *(void **)&v42[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    v44 = v42;
    if (v43)
    {
      v45 = v43;
      sub_23A9E8858(v32 & 1, v41);

    }
    v42[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = v41 > 0.0;
    sub_23A9FE3C4(1);

  }
  sub_23A9732E0(v23, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if ((*v12 & 0x8001) == 0x8000
    || (v46 = (char *)v12 + *(int *)(v108 + 32), v47 = *((_DWORD *)v46 + 24), (v47 & 0xFC000000) == 0x4000000)
    || ((*(_QWORD *)&v47 & 0xFF0000) == 0x40000 ? (v48 = *((_QWORD *)v46 + 2) == 1) : (v48 = 1),
        !v48 ? (v49 = (*((_QWORD *)v46 + 5) & 1) == 0) : (v49 = 1),
        v49))
  {
    sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v53 = (uint64_t)v104;
  }
  else
  {
    v50 = *((_QWORD *)v46 + 4);
    sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v51 = *(char **)(v22 + v109);
    v52 = *(void **)&v51[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    v53 = (uint64_t)v104;
    if (v52)
    {
      v54 = v51;
      v55 = v52;
      sub_23A9E8874(v50, 0, 1);

    }
  }
  v56 = v105;
  sub_23A9732E0(v23, v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  *(double *)&v57 = COERCE_DOUBLE(sub_23AA2B940());
  v59 = v58;
  sub_23A973324(v56, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v60 = *(char **)(v22 + v109);
  if ((v59 & 1) != 0 || (v61 = *(void **)&v60[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) == 0)
  {
    v65 = v32;
  }
  else
  {
    v62 = *(double *)&v57;
    v63 = v60;
    v64 = v61;
    v65 = v32;
    sub_23A9E890C(v32 & 1, v62);

    v60 = *(char **)(v22 + v109);
  }
  v66 = v106;
  sub_23A9732E0(v23, v106, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v67 = v60;
  v68 = sub_23AA2BDDC();
  v70 = v69 & 1;
  sub_23A973324(v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v71 = &v67[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor];
  *(_QWORD *)v71 = v68;
  v71[8] = v70;
  v67[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor] = 1;
  v72 = *(void **)&v67[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v72)
  {
    v73 = v72;
    sub_23A9E8DC4(v68, v70, 1);

    v67 = v73;
  }

  sub_23A9732E0(v23, v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v74 = v53 + *(int *)(v108 + 32);
  v75 = *(_DWORD *)(v74 + 96);
  if ((v75 & 0xFC000000) == 0x4000000 || (*(_QWORD *)&v75 & 0xFF0000) != 0x40000 || *(_QWORD *)(v74 + 16) == 1)
  {
    sub_23A973324(v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v81 = v109;
    v82 = *(_BYTE **)(v22 + v109);
    v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 0;
    v88 = &v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
    *(_QWORD *)v88 = 0;
    v88[8] = 0;
    v89 = *(void **)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v89)
    {
      v86 = v82;
      v90 = v89;
      sub_23A9E94C4(0);

      goto LABEL_47;
    }
  }
  else
  {
    v76 = *(_QWORD *)(v74 + 56);
    v77 = (*(double *)(v74 + 80) + -1.0) * 0.5;
    v78 = 1.0 - v77;
    if (v77 >= 1.0)
      v78 = 0.0;
    if (v77 < 0.0)
      v79 = 1.0;
    else
      v79 = v78;
    if ((v76 & 0x101) != 0)
      v80 = v79;
    else
      v80 = 0.0;
    sub_23A973324(v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v81 = v109;
    v82 = *(_BYTE **)(v22 + v109);
    v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 1;
    v83 = (double *)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
    *v83 = v80;
    *((_BYTE *)v83 + 8) = 0;
    v84 = *(void **)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v84)
    {
      v85 = v76 & 1;
      v86 = v82;
      v87 = v84;
      sub_23A9E94C4(v85);

      goto LABEL_47;
    }
  }
  v86 = v82;
LABEL_47:
  sub_23A9FE3C4(v65 & 1);

  v91 = (char *)*(id *)(v22 + v81);
  sub_23A9D48F0((uint64_t)v110);
  v92 = *(void **)&v91[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v92)
  {
    v93 = v111;
    v94 = v92;
    sub_23A9E9248(v65 & 1, v93);

    v91 = v94;
  }

  v95 = (char *)*(id *)(v22 + v81);
  sub_23A9D48F0((uint64_t)v112);
  v96 = *(void **)&v95[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v96)
  {
    v97 = v113;
    v98 = v96;
    sub_23A9E9114(v65 & 1, v97);

    v95 = v98;
  }

  v99 = (char *)*(id *)(v22 + v81);
  sub_23A9D48F0((uint64_t)v114);
  v100 = *(void **)&v99[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v100)
  {
    v101 = v114[0];
    v102 = v100;
    sub_23A9E9014(v65 & 1, v101);

    v99 = v102;
  }

}

void sub_23A9DCDC8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void *v9;
  _BYTE *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  id v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  id v36;
  id v37;
  char v38;
  char *v39;
  void *v40;
  char *v41;
  id v42;
  void *v43;
  char *v44;
  id v45;
  char *v46;
  void *v47;
  char *v48;
  id v49;
  void *v50;
  char *v51;
  id v52;
  char *v53;
  void *v54;
  char *v55;
  id v56;
  char *v57;
  void *v58;
  char *v59;
  id v60;
  char *v61;
  void *v62;
  double v63;
  char *v64;
  id v65;
  char *v66;
  void *v67;
  double v68;
  char *v69;
  id v70;
  double v71;
  char v72;
  char *v73;
  void *v74;
  char *v75;
  id v76;
  char *v77;
  void *v78;
  char *v79;
  id v80;
  char *v81;
  void *v82;
  double v83;
  char *v84;
  id v85;
  char *v86;
  void *v87;
  double v88;
  char *v89;
  void *v90;
  char *v91;
  id v92;
  char *v93;
  void *v94;
  char *v95;
  id v96;
  char *v97;
  void *v98;
  char *v99;
  id v100;
  char *v101;
  void *v102;
  char *v103;
  id v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  double v119;
  double v120;
  __int128 v121[6];
  char v122[96];
  int v123;
  uint64_t v124[12];
  int v125;
  CGRect v126;
  CGRect v127;

  v3 = v2;
  v5 = a2 + *(int *)(type metadata accessor for FMFindingViewState() + 32);
  sub_23A963B5C((__int128 *)v5, (uint64_t)v121);
  v116 = *(_QWORD *)(v5 + 8);
  v117 = *(_QWORD *)v5;
  v114 = *(void **)(v5 + 24);
  v115 = *(void **)(v5 + 16);
  v112 = *(_QWORD *)(v5 + 40);
  v113 = *(_QWORD *)(v5 + 32);
  v110 = *(_QWORD *)(v5 + 56);
  v111 = *(_QWORD *)(v5 + 48);
  v108 = *(_QWORD *)(v5 + 72);
  v109 = *(_QWORD *)(v5 + 64);
  v107 = *(_QWORD *)(v5 + 80);
  v105 = *(_DWORD *)(v5 + 96);
  v106 = *(_QWORD *)(v5 + 88);
  sub_23A99EA7C((uint64_t)&v119);
  v6 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
  v7 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  v7[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 0;
  v8 = &v7[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
  *(_QWORD *)v8 = 0;
  v8[8] = 0;
  v9 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  v10 = v7;
  if (v9)
  {
    v11 = v9;
    sub_23A9E94C4(0);

  }
  v118 = a1;
  sub_23A9FE3C4(a1 & 1);

  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_mainScreen);
  v14 = (void *)sub_23AA32FB4();
  MGGetSInt32Answer();

  v15 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v15, sel_nativeScale);

  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_currentDevice);
  objc_msgSend(v17, sel_userInterfaceIdiom);

  v18 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v18, sel_bounds);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v126.origin.x = v20;
  v126.origin.y = v22;
  v126.size.width = v24;
  v126.size.height = v26;
  CGRectGetWidth(v126);
  v27 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v27, sel_bounds);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v127.origin.x = v29;
  v127.origin.y = v31;
  v127.size.width = v33;
  v127.size.height = v35;
  CGRectGetWidth(v127);
  sub_23A963B5C(v121, (uint64_t)v124);
  if ((v125 & 0xFC000000 | 0x2000000) != 0x6000000 && (v125 & 0xFC0000) == 0)
    sub_23A963C14(v117, v116, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106, v105, SBYTE2(v105));
  v36 = objc_msgSend(v16, sel_currentDevice);
  objc_msgSend(v36, sel_userInterfaceIdiom);

  v37 = objc_msgSend(v16, sel_currentDevice);
  objc_msgSend(v37, sel_userInterfaceIdiom);

  sub_23A963B5C(v121, (uint64_t)v122);
  v38 = BYTE2(v123);
  if ((v123 & 0xFF000000) != 0x4000000)
  {
    if ((v123 & 0xFF000000) == 0x5000000)
    {
      v39 = *(char **)(v3 + v6);
      v40 = *(void **)&v39[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v40
        && (v41 = v39,
            v42 = v40,
            sub_23A9E9AE4(1, 1.0),
            v41,
            v42,
            v39 = *(char **)(v3 + v6),
            (v43 = *(void **)&v39[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) != 0))
      {
        v44 = v39;
        v45 = v43;
        sub_23A9E8858(1, 0.0);

      }
      else
      {
        v44 = v39;
      }
      v44[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 0;
      sub_23A9FE3C4(1);

      v73 = *(char **)(v3 + v6);
      v74 = *(void **)&v73[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v74)
      {
        v75 = v73;
        v76 = v74;
        sub_23A9E890C(0, 0.0);

        v77 = *(char **)(v3 + v6);
        v78 = *(void **)&v77[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
        if (v78)
        {
          v79 = v77;
          v80 = v78;
          sub_23A9E9248(v118 & 1, 0.0);

          v81 = *(char **)(v3 + v6);
          v82 = *(void **)&v81[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (v82)
          {
            v83 = v120;
            v84 = v81;
            v85 = v82;
            sub_23A9E9114(0, v83);

            v86 = *(char **)(v3 + v6);
            v87 = *(void **)&v86[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
            if (v87)
            {
              v88 = v119;
              v69 = v86;
              v70 = v87;
              v71 = v88;
              v72 = 0;
              goto LABEL_27;
            }
          }
        }
      }
      return;
    }
    if ((v123 & 0xFE000000) != 0x6000000)
    {
      v89 = *(char **)(v3 + v6);
      v90 = *(void **)&v89[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v90)
      {
        sub_23A963ED4((uint64_t)v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
        v91 = v89;
        v92 = v90;
        sub_23A9E9AE4(1, 1.0);

      }
      else
      {
        sub_23A963C14(v117, v116, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106, v105, SBYTE2(v105));
      }
      v93 = *(char **)(v3 + v6);
      v94 = *(void **)&v93[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      v95 = v93;
      if (v94)
      {
        v96 = v94;
        sub_23A9E8858(v118 & 1, 1.0);

      }
      v93[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 1;
      sub_23A9FE3C4(1);

      v97 = *(char **)(v3 + v6);
      v98 = *(void **)&v97[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v98)
      {
        v99 = v97;
        v100 = v98;
        sub_23A9E890C(0, 1.0);

        v101 = *(char **)(v3 + v6);
        v102 = *(void **)&v101[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
        if (v102)
        {
          v103 = v101;
          v104 = v102;
          sub_23A9E9248(v118 & 1, 1.0);

        }
      }
      __asm { BR              X9 }
    }
  }
  v46 = *(char **)(v3 + v6);
  v47 = *(void **)&v46[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v47
    && (v48 = v46,
        v49 = v47,
        sub_23A9E9AE4(1, 0.0),
        v48,
        v49,
        v46 = *(char **)(v3 + v6),
        (v50 = *(void **)&v46[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) != 0))
  {
    v51 = v46;
    v52 = v50;
    sub_23A9E8858(1, 0.0);

  }
  else
  {
    v51 = v46;
  }
  v51[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 0;
  sub_23A9FE3C4(1);

  v53 = *(char **)(v3 + v6);
  v54 = *(void **)&v53[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v54)
  {
    v55 = v53;
    v56 = v54;
    sub_23A9E890C(0, 0.0);

    v57 = *(char **)(v3 + v6);
    v58 = *(void **)&v57[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v58)
    {
      v59 = v57;
      v60 = v58;
      sub_23A9E9248(v118 & 1, 0.0);

      v61 = *(char **)(v3 + v6);
      v62 = *(void **)&v61[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v62)
      {
        v63 = v120;
        v64 = v61;
        v65 = v62;
        sub_23A9E9114(1, v63);

        v66 = *(char **)(v3 + v6);
        v67 = *(void **)&v66[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
        if (v67)
        {
          v68 = v119;
          v69 = v66;
          v70 = v67;
          v71 = v68;
          v72 = 1;
LABEL_27:
          sub_23A9E9014(v72, v71);

        }
      }
    }
  }
}

void sub_23A9DD7B0()
{
  sub_23AA335A8();
  __break(1u);
  JUMPOUT(0x23A9DD800);
}

void sub_23A9DD814()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned __int8 v13;
  char v14;
  char v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  _BYTE *v20;

  v1 = v0;
  v2 = (__int16 *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state);
  swift_beginAccess();
  v3 = type metadata accessor for FMFindingViewState();
  v4 = *(_DWORD *)((char *)v2 + *(int *)(v3 + 32) + 96);
  if ((v4 & 0xFE000000) == 0x4000000)
  {
    v5 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController;
    v6 = *(_BYTE **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
    v7 = v6[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected];
    v6[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected] = 0;
    v8 = v6;
    sub_23AA07EAC(v7);

    v9 = *(_BYTE **)(v1 + v5);
    LOBYTE(v7) = v9[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging];
    v9[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging] = 0;
    v10 = v9;
    sub_23AA08594(v7);

    v11 = *(_BYTE **)(v1 + v5);
    v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
    v14 = 1;
LABEL_13:
    v11[v12] = v14;
    v20 = v11;
    sub_23AA087BC(v13);

    return;
  }
  if ((v4 & 0xFF000000) != 0x6000000)
  {
    if ((v4 & 0xFF000000) != 0x7000000)
    {
      v16 = *(_BYTE **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
      v17 = v16[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected];
      v16[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected] = 1;
      v18 = v16;
      sub_23AA07EAC(v17);

      v19 = (char *)&loc_23A9DDA40 + 4 * byte_23AA39930[sub_23AA2B1B0()];
      __asm { BR              X10 }
    }
    v11 = *(_BYTE **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
    v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
    v14 = 4;
    goto LABEL_13;
  }
  if ((*v2 & 0x80000000) == 0)
    return;
  if ((*((_BYTE *)v2 + *(int *)(v3 + 44)) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v15 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_12:
    v11 = *(_BYTE **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
    v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
    v14 = 2;
    goto LABEL_13;
  }
}

void sub_23A9DDAC4()
{
  char v0;

  v0 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
    JUMPOUT(0x23A9DDB28);
  JUMPOUT(0x23A9DDB9CLL);
}

void sub_23A9DDC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  void **v16;
  uint8_t *v17;
  void *v18;
  _QWORD *v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, _QWORD *);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  os_log_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t i;
  id v44;
  void *v45;
  _QWORD *v46;
  uint8_t *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  void (**v59)(_OWORD *, uint64_t, void *);
  uint64_t v60;
  id v61;
  unint64_t v62;
  char v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  _BOOL4 v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  os_log_t v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  id v79;
  char *v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;

  v1 = v0;
  v2 = sub_23AA32E1C();
  v3 = *(id *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFindingSessionState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v72 - v10;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
      + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v12, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v13 = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain_n();
  v14 = sub_23A9F6C6C(v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v85 = v14;
  sub_23A9E1D24((_QWORD **)&v85);
  swift_bridgeObjectRelease();
  v15 = (_QWORD *)v85;
  sub_23A973324((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v16 = (void **)v15[2];
  if ((unint64_t)v16 > 1)
  {
    v11 = (char *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state);
    swift_beginAccess();
    v83 = type metadata accessor for FMFindingViewState();
    if (v11[*(int *)(v83 + 28)] == 1)
    {
      v82 = sub_23A967D0C((uint64_t)v15);
      if (v82)
      {
        v16 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView);
        v18 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView);
        v80 = v11;
        v81 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView);
        if (v18)
        {
          v77 = v2;
          v78 = v17;
          v79 = v3;
          v19 = v16[1];
          ObjectType = swift_getObjectType();
          v21 = (uint64_t (*)(uint64_t, _QWORD *))v19[4];
          v22 = v18;
          v23 = v21(ObjectType, v19);
          v24 = sub_23A9D44C8(v23);
          swift_bridgeObjectRelease();
          v25 = sub_23A9D44C8((uint64_t)v15);
          v26 = sub_23A9DE658(v24, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (ObjectType != v82)
            goto LABEL_19;
          if ((v26 & 1) != 0)
          {
            objc_msgSend(v22, sel_removeFromSuperview);
            v16 = v81;
            v27 = *v81;
            *v81 = 0;
            v16[1] = 0;

            if (qword_2569D4AC0 != -1)
              swift_once();
            v28 = sub_23AA32EA0();
            sub_23A9620E8(v28, (uint64_t)qword_2569E0040);
            v29 = (os_log_t)v22;
            v30 = sub_23AA32E88();
            v31 = sub_23AA33218();
            v32 = v31;
            v33 = os_log_type_enabled(v30, v31);
            v11 = v80;
            v2 = v77;
            if (v33)
            {
              v34 = swift_slowAlloc();
              v75 = v30;
              v35 = v34;
              v76 = swift_slowAlloc();
              *(_QWORD *)&v85 = v76;
              *(_DWORD *)v35 = 136315394;
              v72 = v35 + 4;
              v36 = sub_23AA33848();
              v73 = v32;
              v84 = sub_23A964DBC(v36, v37, (uint64_t *)&v85);
              sub_23AA333F8();
              v74 = v29;

              swift_bridgeObjectRelease();
              *(_WORD *)(v35 + 12) = 2080;
              v38 = sub_23AA33848();
              v84 = sub_23A964DBC(v38, v39, (uint64_t *)&v85);
              v16 = v81;
              sub_23AA333F8();
              swift_bridgeObjectRelease();
              v29 = v75;
              _os_log_impl(&dword_23A95E000, v75, (os_log_type_t)v73, "FMFindingViewCtrl: Replacing picker view, old: %s new: %s", (uint8_t *)v35, 0x16u);
              v40 = v76;
              swift_arrayDestroy();
              MEMORY[0x23B85DB24](v40, -1, -1);
              MEMORY[0x23B85DB24](v35, -1, -1);

            }
            else
            {

            }
            v3 = v79;
          }
          else
          {
LABEL_19:

            v3 = v79;
            v11 = v80;
            v16 = v81;
            v2 = v77;
          }
          v17 = v78;
          if (*v16)
          {
            swift_release();
            goto LABEL_26;
          }
        }
        v46 = v15;
        v47 = v17;
        v48 = (void *)(*((uint64_t (**)(_QWORD *))v17 + 5))(v46);
        objc_msgSend(v48, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v48, sel_addTarget_action_forControlEvents_, v1, sel_handlePartPickerWithSender_, 4096);
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_addArrangedSubview_, v48);
        v49 = *v16;
        *v16 = v48;
        v16[1] = v47;
        v15 = v48;

        if (qword_2569D4AC0 == -1)
        {
LABEL_23:
          v50 = sub_23AA32EA0();
          sub_23A9620E8(v50, (uint64_t)qword_2569E0040);
          v51 = sub_23AA32E88();
          v52 = sub_23AA33218();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = swift_slowAlloc();
            v79 = v15;
            v54 = (uint8_t *)v53;
            v55 = swift_slowAlloc();
            *(_QWORD *)&v85 = v55;
            *(_DWORD *)v54 = 136315138;
            v78 = v54 + 4;
            v56 = sub_23AA33848();
            v84 = sub_23A964DBC(v56, v57, (uint64_t *)&v85);
            v16 = v81;
            sub_23AA333F8();
            v11 = v80;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23A95E000, v51, v52, "ðŸ§­ FMFindingViewCtrl: Installed new picker view: %s", v54, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B85DB24](v55, -1, -1);
            MEMORY[0x23B85DB24](v54, -1, -1);

          }
          else
          {

          }
LABEL_26:
          v58 = *v16;
          if (*v16)
          {
            v59 = (void (**)(_OWORD *, uint64_t, void *))v16[1];
            v60 = *(_QWORD *)(v12 + 8);
            (*((void (**)(char *, char *, uint64_t))v3 + 2))(v5, &v11[*(int *)(v83 + 20)], v2);
            if (*(_QWORD *)(v60 + 16))
            {
              v61 = v58;
              swift_bridgeObjectRetain();
              v62 = sub_23AA1D250((uint64_t)v5);
              if ((v63 & 1) != 0)
              {
                sub_23A963A14(*(_QWORD *)(v60 + 56) + 40 * v62, (uint64_t)&v85);
              }
              else
              {
                v87 = 0;
                v85 = 0u;
                v86 = 0u;
              }
              swift_bridgeObjectRelease();
            }
            else
            {
              v87 = 0;
              v85 = 0u;
              v86 = 0u;
              v64 = v58;
            }
            v65 = swift_getObjectType();
            (*((void (**)(char *, uint64_t))v3 + 1))(v5, v2);
            v59[2](&v85, v65, v59);

          }
          return;
        }
LABEL_47:
        swift_once();
        goto LABEL_23;
      }
    }
  }
  v41 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_subviews);
  sub_23A968488(0, &qword_2569D7E80);
  v42 = sub_23AA330B0();

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23AA335C0();
    if (!v2)
      goto LABEL_37;
  }
  else
  {
    v2 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2)
      goto LABEL_37;
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((v42 & 0xC000000000000001) != 0)
      v44 = (id)MEMORY[0x23B85D0B0](i, v42);
    else
      v44 = *(id *)(v42 + 8 * i + 32);
    v45 = v44;
    objc_msgSend(v44, sel_removeFromSuperview);

  }
LABEL_37:
  swift_bridgeObjectRelease_n();
  sub_23A9732E0(v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23A968378((uint64_t)(v9 + 24), (uint64_t)&v85, &qword_2569D53C8);
  v66 = *((_QWORD *)&v86 + 1);
  sub_23A9683BC((uint64_t)&v85, &qword_2569D53C8);
  if (v66)
    v67 = 0;
  else
    v67 = *(_QWORD *)(*((_QWORD *)v9 + 2) + 16) > 1uLL;
  sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v68 = sub_23AA32EA0();
  sub_23A9620E8(v68, (uint64_t)qword_2569E0040);
  swift_retain();
  v69 = sub_23AA32E88();
  v70 = sub_23AA33200();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc();
    *(_DWORD *)v71 = 134218240;
    swift_release();
    *(_QWORD *)&v85 = v16;
    sub_23AA333F8();
    swift_release();
    *(_WORD *)(v71 + 12) = 1024;
    LODWORD(v85) = v67;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v69, v70, "FMFindingViewCtrl: Hiding picker view, findables count: %ld shouldShowPartPicker: %{BOOL}d", (uint8_t *)v71, 0x12u);
    MEMORY[0x23B85DB24](v71, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23A9DE658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_23AA32E1C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v17 = sub_23AA32FA8();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void sub_23A9DE7DC()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v1 = *(unsigned __int16 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
                           + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  v2 = (__int16)v1;
  v3 = (v1 >> 8) & 0x7F;
  if (v2 >= 0)
    v3 = *(_WORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
                                   + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  if (v3 == 2)
  {
    sub_23A9AF3B4(1);
    return;
  }
  v4 = (_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  if ((*v4 & 1) != 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v8 = sub_23AA32EA0();
    sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
    v9 = sub_23AA32E88();
    v10 = sub_23AA33218();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23A95E000, v9, v10, "ðŸ§­ FMFindingViewCtrl: Ignoring play sound button state update since play sound action is in progress.", v11, 2u);
      MEMORY[0x23B85DB24](v11, -1, -1);
    }

  }
  else
  {
    v5 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    v6 = *(_DWORD *)(v5 + *(int *)(type metadata accessor for FMFindingViewState() + 32) + 96) & 0xFE000000;
    if (v6 == 0x4000000)
    {
      v7 = 0;
    }
    else
    {
      if (v6 == 100663296)
        return;
      v7 = 1;
    }
    sub_23A9AF3B4(v7);
  }
}

void sub_23A9DE98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *oslog;
  os_log_t osloga;
  _OWORD v57[2];
  _BYTE v58[24];
  float v59;
  _OWORD v60[2];
  double v61;

  v1 = v0;
  v2 = type metadata accessor for FMFindingViewState();
  if ((sub_23AA32DF8() & 1) != 0)
  {
    v3 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    v4 = v3 + *(int *)(v2 + 32);
    v5 = *(_DWORD *)(v4 + 96);
    if ((v5 & 0xFF000000) == 0x4000000)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v10 = sub_23AA32EA0();
      sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
      v11 = sub_23AA32E88();
      v12 = sub_23AA331F4();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_23A95E000, v11, v12, "FMFindingViewCtrl: Requesting scatter haptic.", v13, 2u);
        MEMORY[0x23B85DB24](v13, -1, -1);
      }

      v6 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
      sub_23A9A7A24();
      goto LABEL_15;
    }
    if ((v5 & 0xFF000000) == 0x5000000)
    {
      v6 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
      sub_23A9AA684();
LABEL_15:

      return;
    }
    v14 = *(_DWORD *)(v4 + 96);
    if ((v5 & 0xFE000000) != 0x6000000)
    {
      v15 = *(_QWORD *)v4;
      v16 = *(_QWORD *)(v4 + 8);
      v18 = *(void **)(v4 + 16);
      v17 = *(void **)(v4 + 24);
      v19 = *(_QWORD *)(v4 + 32);
      v20 = *(_QWORD *)(v4 + 40);
      v22 = *(_QWORD *)(v4 + 48);
      v21 = *(_QWORD *)(v4 + 56);
      v23 = *(_QWORD *)(v4 + 64);
      v24 = *(_QWORD *)(v4 + 72);
      v25 = *(_QWORD *)(v4 + 80);
      v26 = *(_QWORD *)(v4 + 88);
      v54 = v24;
      osloga = (os_log_t)v23;
      v52 = v26;
      v53 = v25;
      if (((v5 & 0xFFFF0000) >> 16) == 3)
      {
        v27 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        v28 = *(_QWORD *)v4;
        v29 = *(_QWORD *)(v4 + 56);
        sub_23A963BDC(v15, v16, v18, v17, v19, v20, v22, v21, v23, v24, v25, v26, v5);
        v30 = v27;
        sub_23A9A8118();

        sub_23A963F38(v28, v16, v18, v17, v19, v20, v22, v29, (uint64_t)osloga, v54, v53, v52, v14);
        return;
      }
      v50 = *(_QWORD *)(v4 + 8);
      v51 = *(_QWORD *)v4;
      if (HIBYTE(v5) == 2)
      {
        v45 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        v33 = *(void **)(v4 + 16);
        v35 = *(void **)(v4 + 24);
        v37 = *(_QWORD *)(v4 + 32);
        v39 = *(_QWORD *)(v4 + 40);
        v41 = *(_QWORD *)(v4 + 48);
        v43 = *(_QWORD *)(v4 + 56);
        sub_23A963BDC(v15, *(_QWORD *)(v4 + 8), v33, v35, v37, v39, v41, v21, v23, v24, v25, v26, v5);
        v46 = v45;
        sub_23A9A9F38();
      }
      else
      {
        if (HIBYTE(v5) != 1)
        {
          v33 = *(void **)(v4 + 16);
          v35 = *(void **)(v4 + 24);
          v37 = *(_QWORD *)(v4 + 32);
          v39 = *(_QWORD *)(v4 + 40);
          v41 = *(_QWORD *)(v4 + 48);
          v43 = *(_QWORD *)(v4 + 56);
          sub_23A963C14(v15, *(_QWORD *)(v4 + 8), v33, v35, v37, v39, v41, v21, v23, v24, v25, v26, v5, SBYTE2(v5));
          goto LABEL_27;
        }
        if (BYTE2(v14) != 1)
        {
          v31 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
          memset(v60, 0, sizeof(v60));
          v32 = v16;
          v33 = v18;
          v34 = v18;
          v35 = v17;
          v36 = v17;
          v37 = v19;
          v38 = v19;
          v39 = v20;
          v40 = v20;
          v41 = v22;
          v42 = v22;
          v43 = v21;
          sub_23A963BDC(v15, v32, v34, v36, v38, v40, v42, v21, v23, v24, v25, v26, v14);
          v44 = v31;
          sub_23A9A813C((uint64_t)v60);

          sub_23A9683BC((uint64_t)v60, &qword_2569D6680);
LABEL_27:
          v48 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
          sub_23A9D48F0((uint64_t)v58);
          v49 = v59;
          sub_23A9D48F0((uint64_t)v60);
          memset(v57, 0, sizeof(v57));
          sub_23A9A8EEC((uint64_t)v57, v49, v61);

          sub_23A963F38(v51, v50, v33, v35, v37, v39, v41, v43, (uint64_t)osloga, v54, v53, v52, v14);
          sub_23A9683BC((uint64_t)v57, &qword_2569D6680);
          return;
        }
        v47 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        v33 = *(void **)(v4 + 16);
        v35 = *(void **)(v4 + 24);
        v37 = *(_QWORD *)(v4 + 32);
        v39 = *(_QWORD *)(v4 + 40);
        v41 = *(_QWORD *)(v4 + 48);
        v43 = *(_QWORD *)(v4 + 56);
        sub_23A963BDC(v15, *(_QWORD *)(v4 + 8), v33, v35, v37, v39, v41, v21, v23, v24, v25, v26, v5);
        v46 = v47;
        sub_23A9A9F94();
      }

      goto LABEL_27;
    }
  }
  else
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v7 = sub_23AA32EA0();
    sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
    oslog = sub_23AA32E88();
    v8 = sub_23AA331F4();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23A95E000, oslog, v8, "FMFindingViewCtrl: Not playing haptics when switching between buds.", v9, 2u);
      MEMORY[0x23B85DB24](v9, -1, -1);
    }

  }
}

void sub_23A9DEF98(uint64_t a1, __int16 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  BOOL v13;
  double v14;
  char v15;
  char v16;
  char *v17;
  char *v18;
  int v19;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;

  v4 = type metadata accessor for FMFindingViewState();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  v9 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  v10 = *(int *)(v4 + 32);
  v11 = *(_DWORD *)(v9 + v10 + 96) & 0xFF000000;
  if (v11 == 0x4000000)
  {
    v12 = *(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    sub_23A9AA684();

    return;
  }
  v13 = (*(_DWORD *)(v9 + v10 + 96) & 0xFD000000) == 0x5000000 || v11 == 100663296;
  if (!v13 && *a2 < 0)
  {
    if ((*((_BYTE *)a2 + *(int *)(v4 + 44)) & 1) == 0)
    {
      v18 = (char *)a2 + v10;
      v19 = *((_DWORD *)v18 + 24);
      if ((v19 & 0xFC000000) == 0x4000000)
        goto LABEL_20;
      if ((*(_QWORD *)&v19 & 0xFF0000) != 0x40000 || *((_QWORD *)v18 + 2) == 1)
        goto LABEL_20;
      v21 = *((_QWORD *)v18 + 7);
      if ((v18[40] & 1) != 0)
      {
        if ((v21 & 0x101) == 0)
        {
          v24 = (char *)sub_23A9DF46C + 4 * byte_23AA39945[sub_23AA2B1B0()];
          __asm { BR              X10 }
        }
        if ((v21 & 0x100) == 0)
        {
          v23 = (char *)&loc_23A9DF2F0 + 4 * word_23AA39936[sub_23AA2B1B0()];
          __asm { BR              X10 }
        }
        goto LABEL_10;
      }
      if ((v21 & 0x100) == 0)
      {
LABEL_20:
        v22 = (char *)&loc_23A9DF26C + 4 * byte_23AA39954[sub_23AA2B1B0()];
        __asm { BR              X10 }
      }
    }
LABEL_10:
    sub_23AA2BDDC();
    if ((v15 & 1) == 0)
    {
      sub_23AA2C540(v14);
      if ((v16 & 1) == 0)
      {
        v17 = (char *)&loc_23A9DF1AC + 4 * word_23AA3995E[sub_23AA2B1B0()];
        __asm { BR              X11 }
      }
    }
  }
}

uint64_t sub_23A9DF46C()
{
  uint64_t v0;
  char v1;
  unsigned __int8 v2;

  v1 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    JUMPOUT(0x23A9DF868);
  v2 = sub_23AA2B1B0();
  return ((uint64_t (*)(uint64_t))((char *)&loc_23A9DF0F8 + 4 * word_23AA3994A[v2]))(v0 + 1);
}

void sub_23A9DF484()
{
  uint64_t v0;

  if (0x800000023AA3C2B0 == (v0 | 0x8000000000000000))
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23A9DF670);
  }
  JUMPOUT(0x23A9DF644);
}

void sub_23A9DF4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  id v6;

  v4 = sub_23AA33728();
  swift_bridgeObjectRelease();
  sub_23A9732E0(*(_QWORD *)(v3 - 168), v2, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if ((v4 & 1) != 0)
    JUMPOUT(0x23A9DF524);
  v5 = *(unsigned __int8 *)(v2 + *(int *)(v1 + 32) + 99);
  sub_23A973324(v2, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if (v5 << 24 != 83886080)
  {
    v6 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    sub_23A9A7A24();

    JUMPOUT(0x23A9DF39CLL);
  }
  JUMPOUT(0x23A9DF578);
}

void sub_23A9DF538()
{
  uint64_t v0;
  uint64_t v1;

  sub_23A9732E0(*(_QWORD *)(v1 - 168), v0, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  JUMPOUT(0x23A9DF54CLL);
}

void sub_23A9DF768()
{
  uint64_t v0;

  if (0x800000023AA3C2B0 == (v0 | 0x8000000000000000))
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23A9DF868);
  }
  JUMPOUT(0x23A9DF790);
}

void sub_23A9DF7F8()
{
  JUMPOUT(0x23A9DF8E8);
}

void sub_23A9DF80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;

  if (0x800000023AA3C2B0 != (v1 | 0x8000000000000000))
  {
    v3 = sub_23AA33728(0xD000000000000010, 0x800000023AA3C2B0, 0xD000000000000010, v1 | 0x8000000000000000, 0);
    v4 = swift_bridgeObjectRelease(0x800000023AA3C2B0);
    if ((v3 & 1) != 0)
    {
      v5 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
      *(_OWORD *)(v2 - 160) = 0u;
      *(_OWORD *)(v2 - 144) = 0u;
      v6 = v5;
      sub_23A9A9080(v2 - 160);
      JUMPOUT(0x23A9DF604);
    }
    v7 = (char *)sub_23A9DF8CC + 4 * byte_23AA39940[sub_23AA2B1B0(v4)];
    __asm { BR              X10 }
  }
  JUMPOUT(0x23A9DF834);
}

void sub_23A9DF8CC()
{
  uint64_t v0;
  id v1;

  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
  sub_23A9A7A04();
  JUMPOUT(0x23A9DF0CCLL);
}

void sub_23A9DFA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  __int16 *v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char *v19;
  void *v20;
  char *v21;
  id v22;
  int v23;
  char v24;
  char *v25;
  void *v26;
  char *v27;
  id v28;
  _BYTE v30[24];
  uint64_t v31;

  v3 = v2;
  v6 = sub_23A964084(&qword_2569D7960);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for FMFindingViewState();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (__int16 *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state);
  swift_beginAccess();
  v14 = *v13;
  if ((v14 & 0x80000000) == 0)
  {
    if ((v14 & 0x100) == 0 && a1 && (*(_BYTE *)(a1 + OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap) & 1) != 0)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v15 = sub_23AA32EA0();
      sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
      v16 = sub_23AA32E88();
      v17 = sub_23AA331F4();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_23A95E000, v16, v17, "FMFindingViewCtrl: Pulsing BT node.", v18, 2u);
        MEMORY[0x23B85DB24](v18, -1, -1);
      }

      v19 = *(char **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
      v20 = *(void **)&v19[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v20)
      {
        v21 = v19;
        v22 = v20;
        sub_23A9E8BB8();

      }
    }
    return;
  }
  sub_23A968378(a2, (uint64_t)v30, &qword_2569D6680);
  if (!v31)
  {
    sub_23A9683BC((uint64_t)v30, &qword_2569D6680);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_18;
  }
  v23 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v23 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_18:
    sub_23A9683BC((uint64_t)v8, &qword_2569D7960);
    return;
  }
  sub_23A9E4BD0((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA2C134();
  if ((v24 & 1) == 0)
  {
    v25 = *(char **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
    v26 = *(void **)&v25[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v26)
    {
      v27 = v25;
      v28 = v26;
      sub_23A9E89A0(1, 0);

    }
  }
  sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

void sub_23A9DFD3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  _QWORD v35[9];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v36 = sub_23AA32E1C();
  v4 = *(_QWORD *)(v36 - 8);
  v5 = MEMORY[0x24BDAC7A8](v36);
  v35[5] = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v35 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v35 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v35[4] = (char *)v35 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v35[3] = (char *)v35 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v35[7] = (char *)v35 - v17;
  v18 = type metadata accessor for FMFindingSession.Error(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v35 - v22;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v24 = sub_23AA32EA0();
  v25 = sub_23A9620E8(v24, (uint64_t)qword_2569E0040);
  v38 = a1;
  sub_23A9732E0(a1, (uint64_t)v23, type metadata accessor for FMFindingSession.Error);
  v37 = v25;
  v26 = sub_23AA32E88();
  v27 = sub_23AA33218();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v35[8] = v4;
    v29 = (uint8_t *)v28;
    v30 = swift_slowAlloc();
    v35[2] = v2;
    v31 = v30;
    v40 = v30;
    v35[6] = v9;
    *(_DWORD *)v29 = 136315138;
    v35[1] = v12;
    sub_23A961DE4(&qword_2569D8C80, type metadata accessor for FMFindingSession.Error, (uint64_t)&unk_23AA3A6E0);
    v32 = sub_23AA3377C();
    v39 = sub_23A964DBC(v32, v33, &v40);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A973324((uint64_t)v23, type metadata accessor for FMFindingSession.Error);
    _os_log_impl(&dword_23A95E000, v26, v27, "ðŸ§­ FMFindingViewCtrl: Encountered error: %s.", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v31, -1, -1);
    MEMORY[0x23B85DB24](v29, -1, -1);
  }
  else
  {
    sub_23A973324((uint64_t)v23, type metadata accessor for FMFindingSession.Error);
  }

  sub_23A9732E0(v38, (uint64_t)v21, type metadata accessor for FMFindingSession.Error);
  v34 = (char *)&loc_23A9E006C + 4 * word_23AA39968[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23A9E0C20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  v10[4] = a3;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23A9C4DBC;
  v10[3] = a4;
  v8 = _Block_copy(v10);
  v9 = a1;
  swift_release();
  objc_msgSend(v9, sel_dismissViewControllerAnimated_completion_, 1, v8);
  _Block_release(v8);
}

uint64_t sub_23A9E0CD0(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void (**v4)(uint64_t);
  uint64_t result;
  void (*v6)(uint64_t);
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer);
  if (*(_QWORD *)(v2 + 16))
  {
    swift_retain();
    sub_23AA32F48();
    swift_release();
  }
  *(_QWORD *)(v2 + 16) = 0;
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v3, sel_setIdleTimerDisabled_, 0);

  v4 = (void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  result = swift_beginAccess();
  v6 = *v4;
  if (*v4)
  {
    v7 = swift_retain();
    v6(v7);
    return sub_23A98C874((uint64_t)v6);
  }
  return result;
}

void sub_23A9E0DB4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x23B85DBF0](v3);
  if (v4)
  {
    v5 = (char *)v4;
    if ((a1 & 1) != 0)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v6 = sub_23AA32EA0();
      sub_23A9620E8(v6, (uint64_t)qword_2569E0040);
      v7 = sub_23AA32E88();
      v8 = sub_23AA33218();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_23A95E000, v7, v8, "ðŸ§­ FMFindingViewCtrl: Playing ranging sound command sent", v9, 2u);
        MEMORY[0x23B85DB24](v9, -1, -1);
      }

      v10 = *(id *)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton];
      sub_23AA305B8(0x4008000000000000, 0);

    }
    else
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v11 = sub_23AA32EA0();
      sub_23A9620E8(v11, (uint64_t)qword_2569E0040);
      v12 = sub_23AA32E88();
      v13 = sub_23AA33218();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_23A95E000, v12, v13, "ðŸ§­ FMFindingViewCtrl: Playing ranging sound command failed", v14, 2u);
        MEMORY[0x23B85DB24](v14, -1, -1);
      }

      sub_23A9AF3B4(1);
    }

  }
}

void sub_23A9E0F90(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  v2 = a1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  v4 = *v3;
  if (v4 != 2)
  {
    if ((v4 & 1) != 0 && (v2 & 1) == 0)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v5 = sub_23AA32EA0();
      sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
      v6 = sub_23AA32E88();
      v7 = sub_23AA33218();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMFindingViewCtrl: Now playing ranging sound", v8, 2u);
        MEMORY[0x23B85DB24](v8, -1, -1);
      }

      return;
    }
    if ((v4 & 1) != 0)
      return;
  }
  if (v2 != 2 && (v2 & 1) != 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v9 = sub_23AA32EA0();
    sub_23A9620E8(v9, (uint64_t)qword_2569E0040);
    v10 = sub_23AA32E88();
    v11 = sub_23AA33218();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23A95E000, v10, v11, "ðŸ§­ FMFindingViewCtrl: Done playing ranging sound", v12, 2u);
      MEMORY[0x23B85DB24](v12, -1, -1);
    }

    sub_23A9AF3B4(1);
  }
}

uint64_t sub_23A9E116C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  return *v1;
}

void sub_23A9E11B0(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned __int8 v4;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  sub_23A9E0F90(v4);
}

void (*sub_23A9E1208(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_23A9E1274;
}

void sub_23A9E1274(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unsigned __int8 v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  sub_23A9E0F90(v5);
  free(v1);
}

uint64_t sub_23A9E12A8@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t *, uint64_t *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A9E4AAC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *))v6;
  return sub_23A971FB8(v4);
}

uint64_t sub_23A9E133C(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t (*)(char a1), uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char);

  v4 = *a1;
  v5 = *((unsigned __int8 *)a1 + 8);
  v6 = *a2;
  v7 = a2[1];
  if (*a2)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = sub_23A9E4AB4;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  sub_23A971FB8(v6);
  a3(v4, v5, v9, v8);
  return sub_23A98C874((uint64_t)v9);
}

uint64_t sub_23A9E13DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, char, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A9E4A7C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_23A971FB8(v3);
  return sub_23A98C874(v8);
}

uint64_t sub_23A9E1494(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, _QWORD *))
{
  uint64_t v8;
  uint64_t (*v9)(unsigned __int8 *);
  _QWORD v11[2];
  uint64_t v12;
  char v13;

  v12 = a1;
  v13 = a2 & 1;
  if (a3)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a3;
    *(_QWORD *)(v8 + 24) = a4;
    v9 = sub_23A9E4A88;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v11[0] = v9;
  v11[1] = v8;
  sub_23A971FB8(a3);
  a5(&v12, v11);
  return sub_23A98C874((uint64_t)v9);
}

uint64_t sub_23A9E1538()
{
  return sub_23A9E1A74(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler, (void (*)(_QWORD, _QWORD))sub_23A971FB8);
}

uint64_t sub_23A9E154C(uint64_t a1, uint64_t a2)
{
  return sub_23A9E1AE8(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler, (uint64_t (*)(uint64_t, uint64_t))sub_23A9E4D94);
}

uint64_t (*sub_23A9E1560())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23A9E15A4@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A9B18A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A971FB8(v4);
}

uint64_t sub_23A9E1638(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A9B18A8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_23A971FB8(v3);
  return sub_23A98C874(v8);
}

uint64_t sub_23A9E16F0()
{
  return sub_23A9E1A74(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler, (void (*)(_QWORD, _QWORD))sub_23A971FB8);
}

uint64_t sub_23A9E1704(uint64_t a1, uint64_t a2)
{
  return sub_23A9E1AE8(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler, (uint64_t (*)(uint64_t, uint64_t))sub_23A98C874);
}

uint64_t (*sub_23A9E1718())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23A9E175C@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A9B18A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A971FB8(v4);
}

uint64_t sub_23A9E17F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A9B18A8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_23A971FB8(v3);
  return sub_23A98C874(v8);
}

uint64_t sub_23A9E18A8()
{
  return sub_23A9E1A74(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler, (void (*)(_QWORD, _QWORD))sub_23A971FB8);
}

uint64_t sub_23A9E18BC(uint64_t a1, uint64_t a2)
{
  return sub_23A9E1AE8(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler, (uint64_t (*)(uint64_t, uint64_t))sub_23A98C874);
}

uint64_t (*sub_23A9E18D0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23A9E1914@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A968410;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A971FB8(v4);
}

uint64_t sub_23A9E19A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A968410;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_23A971FB8(v3);
  return sub_23A98C874(v8);
}

uint64_t sub_23A9E1A60()
{
  return sub_23A9E1A74(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler, (void (*)(_QWORD, _QWORD))sub_23A971FB8);
}

uint64_t sub_23A9E1A74(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess();
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t sub_23A9E1AD4(uint64_t a1, uint64_t a2)
{
  return sub_23A9E1AE8(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_23A98C874);
}

uint64_t sub_23A9E1AE8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  v9 = *v8;
  v10 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*sub_23A9E1B44())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id FMFindingViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FMFindingViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23A9E1C58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A9732E0(a2, (uint64_t)v5, v6);
  return sub_23A9D4A18((uint64_t)v5);
}

uint64_t sub_23A9E1CD4(uint64_t a1, uint64_t a2)
{
  return sub_23A9E2EA8(a2);
}

void sub_23A9E1CDC(uint64_t a1, uint64_t a2)
{
  sub_23A9E3518(a2);
}

id sub_23A9E1CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  id result;

  v5 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
                 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_arSession);
  if (v5)
    return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView), sel_session_didUpdateFrame_, v5, a3);
  return result;
}

uint64_t sub_23A9E1D24(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_23A9FA288(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_23A9E1E78(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23A9E1D8C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_23AA333F8();
  *a1 = v5;
  return result;
}

uint64_t sub_23A9E1DDC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

double sub_23A9E1E04(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 128) = 1;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 161) = 0u;
  return result;
}

uint64_t sub_23A9E1E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D8080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9E1E78(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *__dst;
  _QWORD v114[5];
  __int128 v115[3];
  char *v116;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  result = sub_23AA336F8();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_138;
    if (v4)
      return sub_23A9E2694(0, v4, 1, v3);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_147;
  v7 = result;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v108 = MEMORY[0x24BEE4AF8];
    if (v4 != 1)
    {
      v34 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_101:
      if (v34 >= 2)
      {
        v97 = *v3;
        do
        {
          v98 = v34 - 2;
          if (v34 < 2)
            goto LABEL_133;
          if (!v97)
            goto LABEL_146;
          v99 = v10;
          v100 = v10 + 32;
          v101 = *(_QWORD *)&v10[16 * v98 + 32];
          v102 = *(_QWORD *)&v10[16 * v34 + 24];
          sub_23A9E27B8((char *)(v97 + 40 * v101), (char *)(v97 + 40 * *(_QWORD *)&v100[16 * v34 - 16]), v97 + 40 * v102, __dst);
          if (v2)
            break;
          if (v102 < v101)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v99 = sub_23A9F9620((uint64_t)v99);
          if (v98 >= *((_QWORD *)v99 + 2))
            goto LABEL_135;
          v103 = v99;
          v104 = v99 + 32;
          v105 = &v99[16 * v98 + 32];
          *(_QWORD *)v105 = v101;
          *((_QWORD *)v105 + 1) = v102;
          v106 = *((_QWORD *)v99 + 2);
          if (v34 > v106)
            goto LABEL_136;
          v10 = v103;
          memmove(&v104[16 * v34 - 16], &v104[16 * v34], 16 * (v106 - v34));
          *((_QWORD *)v10 + 2) = v106 - 1;
          v34 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v6 >> 1;
    sub_23A964084((uint64_t *)&unk_2569D63B0);
    v9 = sub_23AA330E0();
    *(_QWORD *)(v9 + 16) = v8;
    v108 = v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v107 = v7;
  while (1)
  {
    v12 = v11;
    v13 = v11 + 1;
    v112 = v11;
    if (v11 + 1 < v4)
    {
      v14 = *v3;
      sub_23A963A14(*v3 + 40 * v13, (uint64_t)v115);
      v111 = v14;
      sub_23A963A14(v14 + 40 * v12, (uint64_t)v114);
      v15 = sub_23A9C72DC(v115, v114);
      if (v2)
      {
LABEL_115:
        sub_23A963B3C((uint64_t)v114);
        sub_23A963B3C((uint64_t)v115);
        goto LABEL_116;
      }
      v16 = v15;
      sub_23A963B3C((uint64_t)v114);
      sub_23A963B3C((uint64_t)v115);
      v13 = v12 + 2;
      if (v12 + 2 < v4)
      {
        v17 = v12;
        v18 = v10;
        v19 = v111 + 40 * v17 + 40;
        while (1)
        {
          sub_23A963A14(v19 + 40, (uint64_t)v115);
          sub_23A963A14(v19, (uint64_t)v114);
          v20 = sub_23A9C72DC(v115, v114);
          sub_23A963B3C((uint64_t)v114);
          sub_23A963B3C((uint64_t)v115);
          if (((v16 ^ v20) & 1) != 0)
            break;
          ++v13;
          v19 += 40;
          if (v4 == v13)
          {
            v13 = v4;
            break;
          }
        }
        v10 = v18;
        v12 = v112;
      }
      if ((v16 & 1) != 0)
      {
        if (v13 < v12)
          goto LABEL_142;
        if (v12 < v13)
        {
          v116 = 0;
          v21 = v3;
          v22 = v10;
          v23 = 40 * v13 - 40;
          v24 = 40 * v12;
          v109 = v13;
          v25 = v12;
          v26 = v13;
          v27 = v25;
          do
          {
            if (v27 != --v26)
            {
              if (!v111)
                goto LABEL_145;
              v28 = v111 + v24;
              sub_23A963B98((__int128 *)(v111 + v24), (uint64_t)v115);
              v29 = *(_QWORD *)(v111 + v23 + 32);
              v30 = *(_OWORD *)(v111 + v23 + 16);
              *(_OWORD *)v28 = *(_OWORD *)(v111 + v23);
              *(_OWORD *)(v28 + 16) = v30;
              *(_QWORD *)(v28 + 32) = v29;
              sub_23A963B98(v115, v111 + v23);
            }
            ++v27;
            v23 -= 40;
            v24 += 40;
          }
          while (v27 < v26);
          v10 = v22;
          v3 = v21;
          v2 = v116;
          v7 = v107;
          v13 = v109;
          v12 = v112;
        }
      }
    }
    if (v13 >= v4)
      goto LABEL_40;
    if (__OFSUB__(v13, v12))
      goto LABEL_139;
    if (v13 - v12 >= v7)
      goto LABEL_40;
    if (__OFADD__(v12, v7))
      goto LABEL_140;
    v31 = v12 + v7 >= v4 ? v4 : v12 + v7;
    if (v31 < v12)
      break;
    if (v13 != v31)
    {
      v116 = v10;
      v86 = v13;
      v87 = 40 * v13 - 40;
      do
      {
        v88 = v31;
        v89 = v112;
        v90 = v87;
        do
        {
          v91 = *v3 + v90;
          sub_23A963A14(v91 + 40, (uint64_t)v115);
          sub_23A963A14(v91, (uint64_t)v114);
          v92 = sub_23A9C72DC(v115, v114);
          if (v2)
            goto LABEL_115;
          v93 = v92;
          sub_23A963B3C((uint64_t)v114);
          sub_23A963B3C((uint64_t)v115);
          if ((v93 & 1) == 0)
            break;
          v94 = *v3;
          if (!*v3)
            goto LABEL_144;
          v95 = v94 + v90;
          sub_23A963B98((__int128 *)(v94 + v90 + 40), (uint64_t)v115);
          v96 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 40) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 56) = v96;
          *(_QWORD *)(v95 + 72) = *(_QWORD *)(v95 + 32);
          sub_23A963B98(v115, v95);
          v90 -= 40;
          ++v89;
        }
        while (v86 != v89);
        v87 += 40;
        ++v86;
        v31 = v88;
      }
      while (v86 != v88);
      v13 = v88;
      v10 = v116;
      if (v88 < v112)
        goto LABEL_137;
      goto LABEL_41;
    }
LABEL_40:
    if (v13 < v12)
      goto LABEL_137;
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23A9F9320(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v33 = *((_QWORD *)v10 + 2);
    v32 = *((_QWORD *)v10 + 3);
    v34 = v33 + 1;
    if (v33 >= v32 >> 1)
      v10 = sub_23A9F9320((char *)(v32 > 1), v33 + 1, 1, v10);
    v116 = v2;
    *((_QWORD *)v10 + 2) = v34;
    v35 = v10 + 32;
    v36 = &v10[16 * v33 + 32];
    *(_QWORD *)v36 = v112;
    *((_QWORD *)v36 + 1) = v13;
    v110 = v13;
    if (v33)
    {
      while (1)
      {
        v37 = v34 - 1;
        if (v34 >= 4)
        {
          v42 = &v35[16 * v34];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_122;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_123;
          v49 = v34 - 2;
          v50 = &v35[16 * v34 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_125;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_128;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_132;
            v65 = v40 < v75;
            goto LABEL_77;
          }
        }
        else
        {
          if (v34 != 3)
          {
            v66 = *((_QWORD *)v10 + 4);
            v67 = *((_QWORD *)v10 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_71;
          }
          v39 = *((_QWORD *)v10 + 4);
          v38 = *((_QWORD *)v10 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_124;
        v49 = v34 - 2;
        v55 = &v35[16 * v34 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_127;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_130;
        if (__OFADD__(v59, v64))
          goto LABEL_131;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_77:
          if (v65)
            v37 = v49;
          goto LABEL_79;
        }
LABEL_71:
        if ((v60 & 1) != 0)
          goto LABEL_126;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_129;
        if (v71 < v59)
          goto LABEL_88;
LABEL_79:
        v76 = v37 - 1;
        if (v37 - 1 >= v34)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v77 = *v3;
        if (!*v3)
          goto LABEL_143;
        v78 = v10;
        v79 = v3;
        v80 = &v35[16 * v76];
        v81 = *(_QWORD *)v80;
        v82 = &v35[16 * v37];
        v83 = *((_QWORD *)v82 + 1);
        v84 = v116;
        sub_23A9E27B8((char *)(v77 + 40 * *(_QWORD *)v80), (char *)(v77 + 40 * *(_QWORD *)v82), v77 + 40 * v83, __dst);
        v116 = v84;
        if (v84)
          goto LABEL_116;
        if (v83 < v81)
          goto LABEL_119;
        if (v37 > *((_QWORD *)v78 + 2))
          goto LABEL_120;
        *(_QWORD *)v80 = v81;
        *(_QWORD *)&v35[16 * v76 + 8] = v83;
        v85 = *((_QWORD *)v78 + 2);
        if (v37 >= v85)
          goto LABEL_121;
        v10 = v78;
        v34 = v85 - 1;
        memmove(&v35[16 * v37], v82 + 16, 16 * (v85 - 1 - v37));
        *((_QWORD *)v78 + 2) = v85 - 1;
        v3 = v79;
        if (v85 <= 2)
          goto LABEL_88;
      }
    }
    v34 = 1;
LABEL_88:
    v4 = v3[1];
    v11 = v110;
    v2 = v116;
    v7 = v107;
    if (v110 >= v4)
      goto LABEL_101;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_23AA3359C();
  __break(1u);
  return result;
}

uint64_t sub_23A9E2694(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD v17[5];
  __int128 v18[2];

  if (a3 != a2)
  {
    v6 = a3;
    v8 = result;
    v9 = 40 * a3 - 40;
LABEL_4:
    v10 = v8;
    v11 = v9;
    while (1)
    {
      v12 = *a4 + v11;
      sub_23A963A14(v12 + 40, (uint64_t)v18);
      sub_23A963A14(v12, (uint64_t)v17);
      v13 = sub_23A9C72DC(v18, v17);
      sub_23A963B3C((uint64_t)v17);
      result = sub_23A963B3C((uint64_t)v18);
      if (v4)
        break;
      if ((v13 & 1) != 0)
      {
        v14 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v15 = v14 + v11;
        sub_23A963B98((__int128 *)(v14 + v11 + 40), (uint64_t)v18);
        v16 = *(_OWORD *)(v15 + 16);
        *(_OWORD *)(v15 + 40) = *(_OWORD *)v15;
        *(_OWORD *)(v15 + 56) = v16;
        *(_QWORD *)(v15 + 72) = *(_QWORD *)(v15 + 32);
        result = sub_23A963B98(v18, v15);
        v11 -= 40;
        if (v6 != ++v10)
          continue;
      }
      ++v6;
      v9 += 40;
      if (v6 != a2)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

uint64_t sub_23A9E27B8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4;
  char *v5;
  char *v7;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  _OWORD *v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  char v28;
  char v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  _QWORD v35[5];
  _QWORD v36[5];
  char *v37;
  char *v38;
  char *v39;

  v5 = __dst;
  v7 = a2;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 40;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v39 = __src;
  v38 = __dst;
  if (v10 >= v12)
  {
    if (v11 >= -39)
    {
      if (__dst != a2 || &a2[40 * v12] <= __dst)
        memmove(__dst, a2, 40 * v12);
      v23 = &v5[40 * v12];
      v37 = v23;
      v39 = v7;
      if (__src >= v7 || v11 < 40)
        goto LABEL_44;
      v24 = a3 - 40;
      while (1)
      {
        sub_23A963A14((uint64_t)(v23 - 40), (uint64_t)v36);
        v27 = v7 - 40;
        sub_23A963A14((uint64_t)(v7 - 40), (uint64_t)v35);
        v28 = sub_23A9C72DC(v36, v35);
        if (v4)
          goto LABEL_43;
        v29 = v28;
        v30 = (char *)(v24 + 40);
        sub_23A963B3C((uint64_t)v35);
        sub_23A963B3C((uint64_t)v36);
        if ((v29 & 1) != 0)
        {
          if (v30 != v7 || v24 >= (unint64_t)v7)
          {
            v25 = *(_OWORD *)v27;
            v26 = *(_OWORD *)(v7 - 24);
            *(_QWORD *)(v24 + 32) = *((_QWORD *)v7 - 1);
            *(_OWORD *)v24 = v25;
            *(_OWORD *)(v24 + 16) = v26;
          }
          v39 -= 40;
          v23 = v37;
          if (v37 <= v5)
            goto LABEL_44;
        }
        else
        {
          v31 = v37;
          v23 = v37 - 40;
          v37 -= 40;
          if (v30 < v31 || v24 >= (unint64_t)v31 || v30 != v31)
          {
            v32 = *(_OWORD *)v23;
            v33 = *(_OWORD *)(v31 - 24);
            *(_QWORD *)(v24 + 32) = *((_QWORD *)v31 - 1);
            *(_OWORD *)v24 = v32;
            *(_OWORD *)(v24 + 16) = v33;
          }
          v27 = v7;
          if (v23 <= v5)
            goto LABEL_44;
        }
        v24 -= 40;
        v7 = v27;
        if (v27 <= __src)
          goto LABEL_44;
      }
    }
  }
  else if (v9 >= -39)
  {
    if (__dst != __src || &__src[40 * v10] <= __dst)
      memmove(__dst, __src, 40 * v10);
    v13 = (unint64_t)&v5[40 * v10];
    v37 = (char *)v13;
    if ((unint64_t)v7 >= a3 || v9 < 40)
      goto LABEL_44;
    while (1)
    {
      sub_23A963A14((uint64_t)v7, (uint64_t)v36);
      sub_23A963A14((uint64_t)v5, (uint64_t)v35);
      v14 = sub_23A9C72DC(v36, v35);
      if (v4)
        break;
      v15 = v14;
      sub_23A963B3C((uint64_t)v35);
      sub_23A963B3C((uint64_t)v36);
      v16 = v39;
      if ((v15 & 1) != 0)
      {
        v17 = (unint64_t)(v7 + 40);
        if (v39 >= v7 && (unint64_t)v39 < v17 && v39 == v7)
        {
          v16 = v7;
        }
        else
        {
          v18 = *(_OWORD *)v7;
          v19 = *((_OWORD *)v7 + 1);
          *((_QWORD *)v39 + 4) = *((_QWORD *)v7 + 4);
          *v16 = v18;
          v16[1] = v19;
        }
      }
      else
      {
        v20 = v38 + 40;
        if (v39 != v38 || v39 >= v20)
        {
          v21 = *(_OWORD *)v38;
          v22 = *((_OWORD *)v38 + 1);
          *((_QWORD *)v39 + 4) = *((_QWORD *)v38 + 4);
          *v16 = v21;
          v16[1] = v22;
        }
        v38 = v20;
        v17 = (unint64_t)v7;
      }
      v39 = (char *)v16 + 40;
      v5 = v38;
      if ((unint64_t)v38 < v13)
      {
        v7 = (char *)v17;
        if (v17 < a3)
          continue;
      }
      goto LABEL_44;
    }
LABEL_43:
    sub_23A963B3C((uint64_t)v35);
    sub_23A963B3C((uint64_t)v36);
LABEL_44:
    sub_23A9F9418((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

void sub_23A9E2B18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_23AA33494() == *(_DWORD *)(a4 + 36))
      {
        sub_23AA334A0();
        sub_23A968488(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_23AA33380();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_23AA3338C();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_23AA3338C();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x23B85D044](a1, a2, v8);
  sub_23A968488(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_23A9E2D78(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_23A9E2E00(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_23AA33020();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_23AA3305C();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9E2EA8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_23AA32ED0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23AA32F00();
  v8 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFindingViewState();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    sub_23A9732E0(a1, (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    return sub_23A9D4A18((uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  }
  else
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v22 = v5;
    v21 = sub_23AA33290();
    sub_23A9732E0(a1, (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v2;
    sub_23A9E4BD0((uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    aBlock[4] = sub_23A9E4D64;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4110;
    v17 = _Block_copy(aBlock);
    v18 = v2;
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    v19 = (void *)v21;
    MEMORY[0x23B85CE40](0, v10, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  }
}

void sub_23A9E3150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void), uint64_t a7)
{
  char *v7;
  uint64_t v10;
  void *v14;
  void *v15;
  id v16;
  char **v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD *v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, void *);
  void *v31;
  uint64_t (*v32)();
  _QWORD *v33;

  v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount];
  if (v10 > 2)
  {
    if (a6)
      a6();
  }
  else
  {
    *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount] = v10 + 1;
    if (!a4)
      sub_23A9E4FD4(0xD000000000000014, 0x800000023AA3EF80, a3, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

    v17 = &selRef_animateAlongsideTransition_completion_;
    if ((a5 & 1) != 0)
    {
      sub_23A9E4FD4(0xD00000000000001FLL, 0x800000023AA3F010, 0, 0);
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = v7;
      v18[3] = a1;
      v18[4] = a2;
      v18[5] = a6;
      v18[6] = a7;
      swift_bridgeObjectRetain();
      v19 = v7;
      sub_23A971FB8((uint64_t)a6);
      v20 = (void *)sub_23AA32FB4();
      v17 = &selRef_animateAlongsideTransition_completion_;
      swift_bridgeObjectRelease();
      v32 = sub_23A9E42F8;
      v33 = v18;
      v28 = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_23A970F10;
      v31 = &unk_250BC3C60;
      v21 = _Block_copy(&v28);
      swift_release();
      v22 = objc_msgSend((id)objc_opt_self(), (SEL)0x250BD7FA4, v20, 2, v21);
      _Block_release(v21);

      objc_msgSend(v16, sel_addAction_, v22);
    }
    sub_23A9E4FD4(0xD00000000000001ELL, 0x800000023AA3EFD0, 0, 0);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v7;
    v23[3] = a6;
    v23[4] = a7;
    v24 = v7;
    sub_23A971FB8((uint64_t)a6);
    v25 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    v32 = sub_23A9E4288;
    v33 = v23;
    v28 = MEMORY[0x24BDAC760];
    v29 = 1107296256;
    v30 = sub_23A970F10;
    v31 = &unk_250BC3C10;
    v26 = _Block_copy(&v28);
    swift_release();
    v27 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v25, 0, v26);
    _Block_release(v26);

    objc_msgSend(v16, v17[4], v27);
    v24[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown] = 1;
    objc_msgSend(v24, sel_presentViewController_animated_completion_, v16, 1, 0);

  }
}

void sub_23A9E3518(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_23AA32ED0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23AA32F00();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFindingSession.Error(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    sub_23A9DFD3C(a1);
  }
  else
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
    v21 = v5;
    v20 = sub_23AA33290();
    sub_23A9732E0(a1, (uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FMFindingSession.Error);
    v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v2;
    sub_23A9E4BD0((uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for FMFindingSession.Error);
    aBlock[4] = sub_23A9E4C14;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC40C0;
    v16 = _Block_copy(aBlock);
    v17 = v2;
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A961DE4((unint64_t *)&qword_2569D5AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    v18 = (void *)v20;
    MEMORY[0x23B85CE40](0, v10, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  }
}

uint64_t type metadata accessor for FMFindingViewController()
{
  uint64_t result;

  result = qword_2569D7940;
  if (!qword_2569D7940)
    return swift_getSingletonMetadata();
  return result;
}

void _s11FMFindingUI0A14ViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _OWORD v35[11];
  uint64_t v36;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isInternalBuild;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, sel_isInternalBuild);

  v1[v2] = v4;
  v5 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  if (qword_2569D4B48 != -1)
    swift_once();
  v35[8] = xmmword_2569E03B0;
  v35[9] = unk_2569E03C0;
  v35[10] = xmmword_2569E03D0;
  v36 = qword_2569E03E0;
  v35[4] = xmmword_2569E0370;
  v35[5] = unk_2569E0380;
  v35[6] = xmmword_2569E0390;
  v35[7] = unk_2569E03A0;
  v35[0] = xmmword_2569E0330;
  v35[1] = *(_OWORD *)&qword_2569E0340;
  v35[2] = xmmword_2569E0350;
  v35[3] = unk_2569E0360;
  memmove(v5, &xmmword_2569E0330, 0xB8uLL);
  v6 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer;
  sub_23A9D5530((uint64_t)v35);
  type metadata accessor for FMFindingSleepPreventer();
  *(_QWORD *)&v1[v6] = swift_initStaticObject();
  v7 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v8 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion;
  v1[v8] = UIAccessibilityIsReduceMotionEnabled();
  v9 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v10 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v11 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView];
  *v11 = 0;
  v11[1] = 0;
  v12 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v13 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v14 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v15 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v16 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  v17 = (objc_class *)type metadata accessor for FMR1GlyphButton();
  v18 = objc_allocWithZone(v17);
  *(_QWORD *)&v1[v16] = sub_23AA2E6DC(0, 0, 0, 0);
  v19 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  *(_QWORD *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMR1HapticsController()), sel_init);
  v20 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  v21 = objc_allocWithZone(v17);
  *(_QWORD *)&v1[v20] = sub_23AA2E6DC(0, 0, 0, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem] = 0;
  v22 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
  v23 = objc_allocWithZone(v17);
  *(_QWORD *)&v1[v22] = sub_23AA2E6DC(0, 0, 0, 0);
  v24 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView;
  v25 = objc_allocWithZone((Class)type metadata accessor for FMR1DistanceView());
  *(_QWORD *)&v1[v24] = sub_23A9FFCDC(0, 1, 0x100000000uLL);
  v26 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo];
  *((_QWORD *)v26 + 14) = 0;
  *((_OWORD *)v26 + 5) = 0u;
  *((_OWORD *)v26 + 6) = 0u;
  *((_OWORD *)v26 + 3) = 0u;
  *((_OWORD *)v26 + 4) = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *(_OWORD *)v26 = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundItemWorkItem] = 0;
  v27 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo];
  *((_QWORD *)v27 + 1) = 0;
  *((_QWORD *)v27 + 2) = 0;
  *(_QWORD *)v27 = 0;
  v27[24] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem] = 0;
  v28 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView;
  *(_QWORD *)&v1[v28] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMBTDistanceView()), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer] = 0;
  v29 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView;
  *(_QWORD *)&v1[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMIncorrectOrientationView()), sel_init);
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_inBand] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount] = 0;
  v30 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration;
  if (qword_2569D4B68 != -1)
    swift_once();
  *(_QWORD *)&v1[v30] = qword_2569E04C8;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_FMR1MaxErrorAlertCount] = 3;
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying] = 2;
  v31 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler];
  *v31 = 0;
  v31[1] = 0;
  v32 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler];
  *v32 = 0;
  v32[1] = 0;
  v33 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler];
  *v33 = 0;
  v33[1] = 0;
  v34 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler];
  *v34 = 0;
  v34[1] = 0;
  swift_bridgeObjectRetain();

  sub_23AA335A8();
  __break(1u);
}

uint64_t sub_23A9E3CBC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9E3CE0()
{
  uint64_t v0;

  return sub_23A9D618C(*(_QWORD **)(v0 + 16));
}

uint64_t sub_23A9E3CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9E3CF8()
{
  return swift_release();
}

unint64_t sub_23A9E3D00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D7910;
  if (!qword_2569D7910)
  {
    v1 = sub_23A968488(255, &qword_2569D7908);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2569D7910);
  }
  return result;
}

uint64_t sub_23A9E3D58()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9E3D7C(uint64_t a1)
{
  uint64_t v1;

  return sub_23A9D6F68(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

id sub_23A9E3D88(uint64_t a1)
{
  uint64_t v1;

  return sub_23A9D6FFC(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23A9E3D94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_23A9E3DE4(unsigned __int8 *a1, _QWORD *a2)
{
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;

  v2 = *a1;
  v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  sub_23A9E0F90(v4);
}

uint64_t sub_23A9E3E60()
{
  return type metadata accessor for FMFindingViewController();
}

uint64_t sub_23A9E3E68()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFindingViewState();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for FMFindingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFindingViewController.__allocating_init(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1096))();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x550))();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x558))();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x560))();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x568))();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x570))();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x578))();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x580))();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x588))();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x590))();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x598))();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x5A0))();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x5A8))();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x5B0))();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x5B8))();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x5C0))();
}

uint64_t sub_23A9E4158(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_23A9E4164()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3C98, (uint64_t)sub_23A9E4E50, (uint64_t)&unk_250BC3CB0);
}

void sub_23A9E4194()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3BA8, (uint64_t)sub_23A9E4E50, (uint64_t)&unk_250BC3BC0);
}

void sub_23A9E41C4()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3B58, (uint64_t)sub_23A9E4E50, (uint64_t)&unk_250BC3B70);
}

void sub_23A9E41F4()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3B08, (uint64_t)sub_23A9E4E50, (uint64_t)&unk_250BC3B20);
}

void sub_23A9E4224()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3AB8, (uint64_t)sub_23A9E4E50, (uint64_t)&unk_250BC3AD0);
}

uint64_t sub_23A9E4254()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9E4288()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 24);
  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown) = 0;
  if (v1)
    return v1();
  return result;
}

uint64_t sub_23A9E42BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9E42F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(uint64_t (**)(uint64_t))(v0 + 40);
  result = sub_23A9E433C();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown) = 0;
  if (v2)
    return v2(result);
  return result;
}

uint64_t sub_23A9E433C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD v26[4];

  v0 = sub_23A964084((uint64_t *)&unk_2569D66C0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v26 - v4;
  v6 = sub_23AA32CA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[2] = 0xD0000000000000C5;
  v26[3] = 0x800000023AA3F030;
  v26[0] = 0xD000000000000027;
  v26[1] = 0x800000023AA3F100;
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23AA33038();
  v10 = v26[0];
  v11 = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26[0] = v10;
  v26[1] = v11;
  sub_23AA32C9C();
  sub_23A9E4710();
  sub_23AA33410();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  if (v13)
  {
    strcpy((char *)v26, "&Description=");
    HIWORD(v26[1]) = -4864;
    sub_23AA33038();
    swift_bridgeObjectRelease();
    sub_23AA33038();
    swift_bridgeObjectRelease();
  }
  sub_23AA32D38();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v14)
  {
    v15 = v14;
    sub_23A968378((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_2569D66C0);
    v16 = sub_23AA32D44();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16) != 1)
    {
      v18 = (void *)sub_23AA32D14();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
    }
    sub_23A9B7140(MEMORY[0x24BEE4AF8]);
    v19 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v15, sel_openSensitiveURL_withOptions_, v18, v19);

    if ((v20 & 1) == 0)
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v21 = sub_23AA32EA0();
      sub_23A9620E8(v21, (uint64_t)qword_2569E0040);
      v22 = sub_23AA32E88();
      v23 = sub_23AA33218();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23A95E000, v22, v23, "ðŸ§­ FMFindingViewCtrl: Failed sending request to Tap-To-Radar", v24, 2u);
        MEMORY[0x23B85DB24](v24, -1, -1);
      }

    }
  }
  return sub_23A9683BC((uint64_t)v5, (uint64_t *)&unk_2569D66C0);
}

unint64_t sub_23A9E4710()
{
  unint64_t result;

  result = qword_2569D7958;
  if (!qword_2569D7958)
  {
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2569D7958);
  }
  return result;
}

uint64_t *sub_23A9E4754(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23A9E4790(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(a1 + 104);
  v2 = *(void **)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 112);
  v3 = *(void **)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v13 = *(_OWORD *)(a1 + 168);
  v8 = *(unsigned __int16 *)(a1 + 200) | (*(unsigned __int8 *)(a1 + 202) << 16);
  v9 = *(_QWORD *)(a1 + 184);
  v10 = *(_QWORD *)(a1 + 192);
  v12 = *(unsigned __int16 *)(a1 + 96) | (*(unsigned __int8 *)(a1 + 98) << 16);
  sub_23A980C94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v12, BYTE2(v12));
  sub_23A980C94(v15, v14, v2, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v9, v10, v8, BYTE2(v8));
  return a1;
}

void sub_23A9E4874()
{
  uint64_t v0;

  sub_23A9DC614(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_23A9E4880()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_23A9E48B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  (*(void (**)(id))(v0 + 32))(objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer), sel_insertSubview_atIndex_, v1, 0));
  return objc_msgSend(v1, sel_setAlpha_, 0.0);
}

id sub_23A9E4910()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

uint64_t sub_23A9E4920()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A9E4944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23A9D6490(a1, a2, v2);
}

void sub_23A9E495C()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3EC8, (uint64_t)sub_23A9E49BC, (uint64_t)&unk_250BC3EE0);
}

void sub_23A9E498C()
{
  uint64_t v0;

  sub_23A9E0C20(*(void **)(v0 + 16), (uint64_t)&unk_250BC3E78, (uint64_t)sub_23A9E4E50, (uint64_t)&unk_250BC3E90);
}

uint64_t sub_23A9E49BC()
{
  uint64_t v0;

  return sub_23A9E0CD0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9E49D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9E4A18(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);

  return a1;
}

uint64_t sub_23A9E4A58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9E4A7C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A9E1494(a1, a2 & 1, a3, a4, *(void (**)(uint64_t *, _QWORD *))(v4 + 16));
}

uint64_t sub_23A9E4A88(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_23A9E4AAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23A9E133C(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(v2 + 16));
}

uint64_t sub_23A9E4AB4(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_23A9E4AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFindingSession.Error(0) - 8) + 80);
  v2 = (v1 + 24) & ~v1;

  v3 = (void **)(v0 + v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v5 = *v3;
      goto LABEL_5;
    case 1u:
    case 2u:
      v4 = sub_23AA32E1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
      break;
    case 3u:
      v6 = sub_23AA32E1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v2, v6);
      v5 = *(void **)((char *)v3 + *(int *)(sub_23A964084(&qword_2569D7950) + 48));
LABEL_5:

      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t sub_23A9E4BD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_23A9E4C14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFindingSession.Error(0) - 8) + 80);
  sub_23A9DFD3C(v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_23A9E4C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = type metadata accessor for FMFindingViewState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_23AA32E1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = v3 + *(int *)(v1 + 32);
  v7 = *(_DWORD *)(v6 + 96);
  if ((v7 | 0x2000000u) >> 25 != 3)
    sub_23A963AE0(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(void **)(v6 + 16), *(void **)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v7, SBYTE2(v7));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A9E4D64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFindingViewState() - 8) + 80);
  return sub_23A9E1C58(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t type metadata accessor for FMBTFindingManager()
{
  return objc_opt_self();
}

uint64_t sub_23A9E4EB0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for FMFindingUILocalizer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23AA33500();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v2 = sub_23AA32CCC();

  swift_bridgeObjectRelease();
  return v2;
}

uint64_t type metadata accessor for FMFindingUILocalizer()
{
  return objc_opt_self();
}

uint64_t sub_23A9E4FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  type metadata accessor for FMFindingUILocalizer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23AA33500();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v9 = sub_23AA32CCC();
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = v9 == a1 && v11 == a2;
  if (v12 || (sub_23AA33728() & 1) != 0)
  {
    if (a4)
    {
      swift_bridgeObjectRelease();
      sub_23AA33500();
      swift_bridgeObjectRelease();
      sub_23AA33038();
      v9 = sub_23AA32CCC();
      swift_bridgeObjectRelease();
    }
  }

  return v9;
}

uint64_t sub_23A9E5198()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for FMFindingUILocalizer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23AA33500();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v2 = sub_23AA32CCC();

  swift_bridgeObjectRelease();
  return v2;
}

void sub_23A9E52A0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor;
  *(double *)v3 = a1;
  *(_BYTE *)(v3 + 8) = 0;
  v4 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style;
  v5 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 72);
  v6 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_pixelsPerInch);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  v10 = (1.0 - a1) * *(double *)(v4 + 48) + *(double *)(v4 + 40) * a1;
  v11 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode);
  if (v12)
    objc_msgSend(v12, sel_setScale_, (1.0 - a1) * *(double *)(v4 + 80)+ v5 * v6 / v9 / *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotDiameter) * a1);
  v15 = objc_msgSend(*(id *)(v4 + 56), sel_colorWithAlphaComponent_, v10);
  v13 = *(void **)(v1 + v11);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v14, sel_setColor_, v15);

  }
}

uint64_t sub_23A9E5404(double a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  double v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  double v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  double v32;
  double *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  double v43;
  uint64_t v44;
  double *v45;
  double v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double *v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v2 = v1;
  if (v1[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDiskRadius] == 1)
  {
    v4 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring;
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring];
    if (!sub_23A9CCAA0())
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v6 = *(_QWORD *)&v2[v4];
      v7 = (double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v8 = v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      if (vabdd_f64(v8, *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v8 = *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      v9 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
      *v9 = v8;
      *((_BYTE *)v9 + 8) = 0;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode], sel_setPosition_, 0.0);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDotScale] == 1)
  {
    v10 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring;
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring];
    if (!sub_23A9CCAA0())
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v11 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v12 = *(_QWORD *)&v2[v10];
      v13 = (double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v14 = *v13 + *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v13[35] + *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v14) <= *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v14 = v13[35] + *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      v15 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
      *v15 = v14;
      *((_BYTE *)v15 + 8) = 0;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_setScale_, v14 * *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale]);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyAngle] == 1)
  {
    v16 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring;
    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring];
    if (!sub_23A9CCAA0() && v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor + 8] == 1)
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v18 = *(_QWORD *)&v2[v16];
      v19 = (double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v20 = *v19 + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v19[35] + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v20) <= *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v20 = v19[35] + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      v21 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
      *v21 = v20;
      *((_BYTE *)v21 + 8) = 0;
      if (!*(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode], sel_setZRotation_);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOpacity] == 1)
  {
    v22 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring;
    v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring];
    if (!sub_23A9CCAA0())
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v23 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v24 = *(_QWORD *)&v2[v22];
      v25 = (double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      if (vabdd_f64(v25[35] + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v25 + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v24+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v26 = *v25 + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      else
        v26 = v25[35] + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      v27 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
      *v27 = v26;
      *((_BYTE *)v27 + 8) = 0;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_setAlpha_, v26);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode], sel_setAlpha_, v26);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyBrightness] == 1)
  {
    v28 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightnessSpring;
    v29 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightnessSpring];
    if (!sub_23A9CCAA0())
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v29 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v30 = *(_QWORD *)&v2[v28];
      v31 = (double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      if (vabdd_f64(v31[35] + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v31 + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v30+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v32 = *v31 + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      else
        v32 = v31[35] + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      v33 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
      *v33 = v32;
      *((_BYTE *)v33 + 8) = 0;
      v34 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor];
      v35 = *(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode];
      v36 = v34;
      sub_23AA14D9C(v36, v32);

    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOffset] == 1)
  {
    v37 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring;
    v38 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring];
    if (!sub_23A9CCAA0() || !sub_23A9CCAA0())
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v38 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v39 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring;
      v40 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring];
      sub_23A982B4C(a1);
      *(_BYTE *)(v40 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v41 = *(_QWORD *)&v2[v37];
      v42 = (double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      if (vabdd_f64(v42[35] + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v42 + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v41+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v43 = *v42 + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      else
        v43 = v42[35] + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      v44 = *(_QWORD *)&v2[v39];
      v45 = (double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v46 = v45[35] + *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      if (vabdd_f64(v46, *v45 + *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v46 = *v45 + *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      v47 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
      *v47 = v43;
      v47[1] = v46;
      *((_BYTE *)v47 + 16) = 0;
      objc_msgSend(v2, sel_setPosition_, v43);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] == 1)
  {
    v48 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring;
    v49 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring];
    if (!sub_23A9CCAA0() && (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor + 8] & 1) == 0)
    {
      sub_23A982B4C(a1);
      *(_BYTE *)(v49 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v50 = *(_QWORD *)&v2[v48];
      v51 = (double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v52 = *v51 + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v51[35] + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v52) <= *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v52 = v51[35] + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      sub_23A9E52A0(v52);
    }
  }
  v53 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring;
  v54 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring];
  if (!sub_23A9CCAA0()
    && *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
  {
    sub_23A982B4C(a1);
    *(_BYTE *)(v54 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v55 = *(_QWORD *)&v2[v53];
    v56 = (double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    v57 = *v56 + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v56[35] + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v57) <= *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
      v57 = v56[35] + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading] = v57;
    objc_msgSend(v2, sel_setZRotation_, v57 / 180.0 * 3.14159265);
  }
  v58 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode];
  v59 = *(_QWORD *)(v58 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode);
  v60 = *(_QWORD *)(v59 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_sizeSpring);
  sub_23A982B4C(a1);
  *(_BYTE *)(v60 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v61 = *(_QWORD *)(v59 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_opacitySpring);
  sub_23A982B4C(a1);
  *(_BYTE *)(v61 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  sub_23A9EA5A0();
  sub_23AA103F0(a1);
  v62 = *(_QWORD *)(*(_QWORD *)(v58 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode)
                  + OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_ringNodes);
  if (!(v62 >> 62))
  {
    v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v63)
      goto LABEL_52;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v63 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_52:
  if (v63 >= 1)
  {
    v65 = 0;
    do
    {
      if ((v62 & 0xC000000000000001) != 0)
        v66 = (char *)MEMORY[0x23B85D0B0](v65, v62);
      else
        v66 = (char *)*(id *)(v62 + 8 * v65 + 32);
      v67 = v66;
      ++v65;
      v68 = *(_QWORD *)&v66[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring];
      sub_23A982B4C(a1);
      *(_BYTE *)(v68 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v69 = *(_QWORD *)&v67[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_collapseSpring];
      sub_23A982B4C(a1);
      *(_BYTE *)(v69 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      sub_23AA2413C();

    }
    while (v63 != v65);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23A9E5DE0()
{
  uint64_t result;
  uint64_t v1;

  result = PRArmsReachThresholdEnter();
  qword_2569E0500 = v1;
  return result;
}

uint64_t sub_23A9E5DFC()
{
  uint64_t result;
  uint64_t v1;

  result = PRArmsReachThresholdExit();
  qword_2569E0508 = v1;
  return result;
}

uint64_t sub_23A9E5E18()
{
  uint64_t result;
  uint64_t v1;

  result = PRVerticalThresholdEnter();
  qword_2569E0510 = v1;
  return result;
}

uint64_t sub_23A9E5E34()
{
  uint64_t result;
  uint64_t v1;

  result = PRVerticalThresholdExit();
  qword_2569E0518 = v1;
  return result;
}

double sub_23A9E5E50()
{
  double v0;
  double v1;
  double result;

  PRItemFoundThresholdEnter();
  v1 = v0;
  if (qword_2569D4B70 != -1)
    swift_once();
  result = v1 / *(double *)&qword_2569E0500;
  *(double *)&qword_2569E0520 = v1 / *(double *)&qword_2569E0500;
  return result;
}

double sub_23A9E5EAC()
{
  double result;

  if (qword_2569D4B80 != -1)
    swift_once();
  result = *(double *)&qword_2569E0510 * 1.1;
  *(double *)&qword_2569E0528 = *(double *)&qword_2569E0510 * 1.1;
  return result;
}

char *sub_23A9E5F00(unsigned __int8 *a1, unsigned __int16 *a2, uint64_t a3, NSObject *a4, uint64_t a5, NSObject *a6, double a7, double a8)
{
  char *v8;
  char *v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  double *v47;
  void *v48;
  os_log_t v49;
  NSObject *v50;
  objc_class *v51;
  char *v52;
  void *v53;
  char *v54;
  id v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  _QWORD *v73;
  void *v74;
  void *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  os_log_t v79;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  os_log_t v85;
  NSObject *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id aBlock[6];
  objc_super v91;

  v9 = v8;
  v85 = a4;
  v86 = a6;
  v88 = a5;
  v82 = sub_23AA33284();
  v15 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23AA33260();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v19);
  v20 = *a2;
  v83 = *a1;
  v84 = v20;
  v21 = &v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_style];
  __asm { FMOV            V0.2D, #0.5 }
  *(_OWORD *)v21 = _Q0;
  *((_QWORD *)v21 + 2) = 0;
  v87 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_ringView;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_ringView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_axisesNode] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode] = 0;
  v27 = &v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_previousHeading];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v28 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_motionManager;
  v29 = objc_allocWithZone(MEMORY[0x24BDC1400]);
  v30 = v9;
  *(_QWORD *)&v9[v28] = objc_msgSend(v29, sel_init);
  *(_QWORD *)&v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_dotCountObservation] = 0;
  *(_QWORD *)&v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_debugModeObservation] = 0;
  v31 = &v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_lastRenderTime];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v32 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isolationQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  sub_23AA32EF4();
  sub_23AA33254();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5750], v82);
  *(_QWORD *)&v30[v32] = sub_23AA332B4();
  v33 = &v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v34 = &v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches] = 0;
  v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_shouldApplyOpacity] = 1;
  v35 = &v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacity];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  v36 = &v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_presentedOpacity];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  *(_QWORD *)&v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging] = 0;
  v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_experienceType] = v83;
  *(_WORD *)&v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_findingTechnology] = v84;
  v37 = &v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config];
  v38 = *(_OWORD *)(a3 + 48);
  v40 = *(_OWORD *)a3;
  v39 = *(_OWORD *)(a3 + 16);
  *((_OWORD *)v37 + 2) = *(_OWORD *)(a3 + 32);
  *((_OWORD *)v37 + 3) = v38;
  *(_OWORD *)v37 = v40;
  *((_OWORD *)v37 + 1) = v39;
  v41 = *(_OWORD *)(a3 + 112);
  v43 = *(_OWORD *)(a3 + 64);
  v42 = *(_OWORD *)(a3 + 80);
  *((_OWORD *)v37 + 6) = *(_OWORD *)(a3 + 96);
  *((_OWORD *)v37 + 7) = v41;
  *((_OWORD *)v37 + 4) = v43;
  *((_OWORD *)v37 + 5) = v42;
  v45 = *(_OWORD *)(a3 + 144);
  v44 = *(_OWORD *)(a3 + 160);
  v46 = *(_OWORD *)(a3 + 128);
  v37[176] = *(_BYTE *)(a3 + 176);
  *((_OWORD *)v37 + 9) = v45;
  *((_OWORD *)v37 + 10) = v44;
  *((_OWORD *)v37 + 8) = v46;
  v47 = (double *)&v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_sceneSize];
  *v47 = a7;
  v47[1] = a8;
  v48 = *(void **)&v9[v87];
  v49 = v85;
  *(_QWORD *)&v9[v87] = v85;
  v87 = a3;
  sub_23A9E9800(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E96DC);
  v50 = v49;

  *(_QWORD *)&v30[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacitySpring] = sub_23A9CCF6C(0, 1, 0x3F847AE147AE147BLL, 0, 0, 1);
  v51 = (objc_class *)type metadata accessor for FMPFSKScene();
  v91.receiver = v30;
  v91.super_class = v51;
  v52 = (char *)objc_msgSendSuper2(&v91, sel_initWithSize_, a7, a8);
  *(_QWORD *)&v52[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate + 8] = v86;
  swift_unknownObjectWeakAssign();
  v53 = (void *)objc_opt_self();
  v54 = v52;
  v55 = objc_msgSend(v53, sel_clearColor);
  objc_msgSend(v54, sel_setBackgroundColor_, v55);

  objc_msgSend(v54, sel_setAnchorPoint_, 0.5, 0.5);
  objc_msgSend(v54, sel_setScaleMode_, 2);
  sub_23A9E7100();
  v56 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_motionManager;
  objc_msgSend(*(id *)&v54[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_motionManager], sel_setDeviceMotionUpdateInterval_, 0.0666666667);
  v57 = *(void **)&v54[v56];
  v58 = (void *)objc_opt_self();
  v59 = v57;
  v60 = objc_msgSend(v58, sel_mainQueue);
  v61 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23A9E9730;
  aBlock[5] = v61;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23A9E682C;
  aBlock[3] = &unk_250BC41F0;
  v62 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v59, sel_startDeviceMotionUpdatesUsingReferenceFrame_toQueue_withHandler_, 4, v60, v62);
  _Block_release(v62);

  v63 = (void *)objc_opt_self();
  aBlock[0] = objc_msgSend(v63, sel_standardUserDefaults);
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v64 = sub_23AA32CFC();
  swift_release();
  swift_release();

  v65 = *(void **)&v54[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_dotCountObservation];
  *(_QWORD *)&v54[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_dotCountObservation] = v64;

  aBlock[0] = objc_msgSend(v63, sel_standardUserDefaults);
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v66 = sub_23AA32CFC();
  swift_release();
  swift_release();

  v67 = *(void **)&v54[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_debugModeObservation];
  *(_QWORD *)&v54[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_debugModeObservation] = v66;

  if (qword_2569D4AB0 != -1)
    swift_once();
  v68 = sub_23AA32EA0();
  sub_23A9620E8(v68, (uint64_t)qword_2569E0010);
  v69 = v54;
  v70 = sub_23AA32E88();
  v71 = sub_23AA33218();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = swift_slowAlloc();
    v73 = (_QWORD *)swift_slowAlloc();
    v74 = (void *)swift_slowAlloc();
    v85 = v70;
    v86 = v50;
    v75 = v74;
    v89 = (uint64_t)v69;
    aBlock[0] = v74;
    *(_DWORD *)v72 = 138412546;
    v76 = v69;
    sub_23AA333F8();
    *v73 = v54;

    *(_WORD *)(v72 + 12) = 2080;
    v77 = MEMORY[0x23B85CEC4](a7, a8);
    v89 = sub_23A964DBC(v77, v78, (uint64_t *)aBlock);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    v79 = v85;
    _os_log_impl(&dword_23A95E000, v85, v71, "ðŸ§­ FMPFSKScene%@: init with size={%s}", (uint8_t *)v72, 0x16u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v73, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v75, -1, -1);
    MEMORY[0x23B85DB24](v72, -1, -1);

    swift_unknownObjectRelease();
    sub_23A9E9800(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E983C);

  }
  else
  {

    swift_unknownObjectRelease();
    sub_23A9E9800(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E983C);

  }
  return v69;
}

void sub_23A9E67D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x23B85DBF0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_23A9E7D10(a1);

  }
}

void sub_23A9E682C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23A9E68A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD aBlock[6];

  v4 = sub_23AA32F00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23AA32ED0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](a3 + 16);
  if (result)
  {
    v13 = (void *)result;
    sub_23AA32EC4();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    aBlock[4] = sub_23A9E989C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4290;
    v15 = _Block_copy(aBlock);
    v16 = v13;
    sub_23AA32EE8();
    MEMORY[0x23B85CE40](0, v7, v11, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

void sub_23A9E6A44(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  id v5;

  v1 = *(unsigned __int8 **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v1)
  {
    v2 = v1[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType];
    if (v2 == 2)
      goto LABEL_5;
    if (v2 == 1)
    {
      v5 = v1;
      v4 = v1;
      sub_23A9F5590(0, 1);
      goto LABEL_8;
    }
    if (!v1[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType])
    {
LABEL_5:
      v5 = v1;
      v3 = v1;
      sub_23A9F2054(0, 1);
LABEL_8:

    }
  }
}

uint64_t sub_23A9E6AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  id v14;
  unsigned __int8 v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v4 = sub_23AA32F00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23AA32ED0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](a3 + 16);
  if (result)
  {
    v13 = (void *)result;
    v14 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v15 = objc_msgSend(v14, sel_fmpfDebugMode);

    sub_23AA32EC4();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v13;
    *(_BYTE *)(v16 + 24) = v15;
    aBlock[4] = sub_23A9E986C;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4240;
    v17 = _Block_copy(aBlock);
    v18 = v13;
    sub_23AA32EE8();
    MEMORY[0x23B85CE40](0, v7, v11, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

void sub_23A9E6CC0(uint64_t a1, char a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_axisesNode);
  if (v4)
    objc_msgSend(v4, sel_setHidden_, (a2 & 1) == 0);
  v5 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v5)
  {
    v6 = v5;
    sub_23AA0534C(a2 & 1);

  }
}

id sub_23A9E6D6C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  objc_class *v14;
  uint64_t v16;
  objc_super v17;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_debugModeObservation];
  if (v2)
  {
    v3 = v2;
    sub_23AA32CD8();

  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_motionManager], sel_stopDeviceMotionUpdates);
  if (qword_2569D4AB0 != -1)
    swift_once();
  v4 = sub_23AA32EA0();
  sub_23A9620E8(v4, (uint64_t)qword_2569E0010);
  v5 = v1;
  v6 = sub_23AA32E88();
  v7 = sub_23AA33218();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v5, sel_description);
    v11 = sub_23AA32FD8();
    v13 = v12;

    sub_23A964DBC(v11, v13, &v16);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v6, v7, "ðŸ§­ FMPFSKScene%s: deinit", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v9, -1, -1);
    MEMORY[0x23B85DB24](v8, -1, -1);

  }
  else
  {

  }
  v14 = (objc_class *)type metadata accessor for FMPFSKScene();
  v17.receiver = v5;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, sel_dealloc);
}

uint64_t sub_23A9E7100()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char *v16;
  _QWORD aBlock[6];

  v1 = sub_23AA32F00();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32ED0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_sceneSize];
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_sceneSize + 8];
  v11 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_ringView];
  v12 = v11;
  sub_23AA32EC4();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v0;
  v13[3] = v9;
  v13[4] = v10;
  v13[5] = v11;
  aBlock[4] = sub_23A9E9A94;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC46A0;
  v14 = _Block_copy(aBlock);
  v15 = v12;
  v16 = v0;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v4, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_23A9E72B4(char *a1, void *a2, double a3, double a4)
{
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  unsigned int v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  void *ObjCClassFromMetadata;
  id v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  double v36;
  double v37;
  double v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  id v52;
  id v53;
  char *v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  __int16 v60;
  char v61;
  _OWORD v62[11];
  char v63;

  v7 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_axisesNode;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_axisesNode], sel_removeFromParent);
  v8 = *(void **)&a1[v7];
  if (v8)
  {
    v9 = (void *)objc_opt_self();
    v10 = v8;
    v11 = objc_msgSend(v9, sel_standardUserDefaults);
    v12 = objc_msgSend(v11, sel_fmpfDebugMode);

    objc_msgSend(v10, sel_setHidden_, v12 ^ 1);
  }
  v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFSKNode()), sel_init);
  objc_msgSend(v13, sel_setZPosition_, -4.4408921e-16);
  objc_msgSend(a1, sel_addChild_, v13);
  v14 = *(void **)&a1[v7];
  *(_QWORD *)&a1[v7] = v13;
  v15 = v13;

  objc_msgSend(a1, sel_size);
  v17 = v16 * -0.5;
  objc_msgSend(a1, sel_size);
  v19 = v18 * 0.5;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v20, sel_moveToPoint_, v17, 0.0);
  objc_msgSend(v20, sel_addLineToPoint_, v19, 0.0);
  objc_msgSend(v20, sel_closePath);
  type metadata accessor for FMPFSKShapeNode();
  v57 = v20;
  v21 = objc_msgSend(v20, sel_CGPath);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v23 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v21);

  objc_msgSend(v23, sel_setPosition_, 0.0, -0.0);
  v24 = (void *)objc_opt_self();
  v25 = v23;
  v26 = objc_msgSend(v24, sel_whiteColor);
  objc_msgSend(v25, sel_setStrokeColor_, v26);

  objc_msgSend(v25, sel_setAlpha_, 0.5);
  objc_msgSend(v15, sel_addChild_, v25);
  objc_msgSend(a1, sel_size);
  v28 = v27 * 0.5;
  objc_msgSend(a1, sel_size);
  v30 = v29 * -0.5;
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v31, sel_moveToPoint_, 0.0, v28);
  objc_msgSend(v31, sel_addLineToPoint_, 0.0, v30);
  objc_msgSend(v31, sel_closePath);
  v32 = objc_msgSend(v31, sel_CGPath);
  v33 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v32);

  v34 = v33;
  v35 = objc_msgSend(v24, sel_whiteColor);
  objc_msgSend(v34, sel_setStrokeColor_, v35);

  objc_msgSend(v34, sel_setAlpha_, 0.5);
  objc_msgSend(v15, sel_addChild_, v34);
  sub_23A968488(0, (unint64_t *)&unk_2569D7BE0);
  objc_msgSend(a1, sel_size);
  v37 = v36;
  objc_msgSend(a1, sel_size);
  v56 = sub_23A9A0584(0.0, 0.0, v37, v38);
  v39 = objc_msgSend(v56, sel_CGPath);
  v40 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v39);

  v41 = v40;
  v42 = objc_msgSend(v24, sel_whiteColor);
  objc_msgSend(v41, sel_setStrokeColor_, v42);

  objc_msgSend(v41, sel_setAlpha_, 0.5);
  v58 = v15;
  objc_msgSend(v15, sel_addChild_, v41);
  v43 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode;
  v44 = *(_BYTE **)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode];
  if (v44)
  {
    v45 = *(_QWORD *)&v44[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor];
    v46 = v44[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor + 8];
    objc_msgSend(v44, sel_removeFromParent);
  }
  else
  {
    v45 = 0;
    v46 = 1;
  }
  v61 = a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_experienceType];
  v60 = *(_WORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_findingTechnology];
  v47 = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 144];
  v62[8] = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 128];
  v62[9] = v47;
  v62[10] = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 160];
  v63 = a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 176];
  v48 = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 80];
  v62[4] = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 64];
  v62[5] = v48;
  v49 = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 112];
  v62[6] = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 96];
  v62[7] = v49;
  v50 = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 16];
  v62[0] = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config];
  v62[1] = v50;
  v51 = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 48];
  v62[2] = *(_OWORD *)&a1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_config + 32];
  v62[3] = v51;
  v52 = objc_allocWithZone((Class)type metadata accessor for FMPFSKPatternNode());
  sub_23A9E9800((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E96DC);
  v53 = a2;
  v54 = sub_23AA04A90((unsigned __int8 *)&v61, &v60, (uint64_t)v62, a2, 0, 1, v45, v46, a3, a4);
  objc_msgSend(v54, sel_setPosition_, 0.0, -0.0);
  objc_msgSend(v54, sel_setAlpha_, 0.0);
  *(_QWORD *)&v54[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate + 8] = &off_250BC4BB0;
  swift_unknownObjectWeakAssign();
  objc_msgSend(a1, sel_addChild_, v54);
  v55 = *(void **)&a1[v43];
  *(_QWORD *)&a1[v43] = v54;

}

uint64_t sub_23A9E790C(double a1)
{
  _BYTE *v1;
  double *v2;
  double v3;
  double v4;
  uint64_t v5;
  void *v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v14[6];

  v2 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_lastRenderTime];
  v3 = *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_lastRenderTime];
  if (v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_lastRenderTime + 8])
    v3 = a1;
  v4 = a1 - v3;
  *v2 = a1;
  *((_BYTE *)v2 + 8) = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(double *)(v5 + 24) = v4;
  v6 = (void *)objc_opt_self();
  v7 = v1;
  if (objc_msgSend(v6, sel_isMainThread))
  {
    v8 = *(NSObject **)&v7[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isolationQueue];
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_23A9E9AA4;
    *(_QWORD *)(v9 + 24) = v5;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_23A968410;
    *(_QWORD *)(v10 + 24) = v9;
    v14[4] = sub_23A971F88;
    v14[5] = v10;
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 1107296256;
    v14[2] = sub_23A9AFD6C;
    v14[3] = &unk_250BC4740;
    v11 = _Block_copy(v14);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v8, v11);
    swift_release();
    _Block_release(v11);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  else
  {
    sub_23A9E7AF0((uint64_t)v7, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A9E7AF0(uint64_t a1, double a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  uint64_t v16;

  v4 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v5)
  {
    v6 = v5;
    sub_23AA0C658(*(uint64_t *)&a2, 0);

  }
  result = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (result)
  {
    sub_23A9B6168(a2);
    result = swift_unknownObjectRelease();
  }
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacity + 8) & 1) != 0
    || *(double *)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacity) >= 0.5)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_shouldApplyOpacity) = 1;
LABEL_13:
    v11 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacitySpring;
    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacitySpring);
    result = sub_23A9CCAA0();
    if ((result & 1) == 0)
    {
      sub_23A982B4C(a2);
      *(_BYTE *)(v12 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v13 = *(_QWORD *)(a1 + v11);
      v14 = (double *)(v13 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v15 = *v14 + *(double *)(v13 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v14[35] + *(double *)(v13 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v15) <= *(double *)(v13 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v15 = v14[35] + *(double *)(v13 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      v16 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_presentedOpacity;
      *(double *)v16 = v15;
      *(_BYTE *)(v16 + 8) = 0;
      result = *(_QWORD *)(a1 + v4);
      if (result)
        return (uint64_t)objc_msgSend((id)result, sel_setAlpha_);
    }
    return result;
  }
  v8 = *(_QWORD *)(a1 + v4);
  if (!v8)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_shouldApplyOpacity) = 0;
    return result;
  }
  v9 = v8 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor;
  v10 = *(double *)v9;
  if (*(_BYTE *)(v9 + 8))
    v10 = 1.0;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_shouldApplyOpacity) = v10 <= 0.0;
  if (v10 <= 0.0)
    goto LABEL_13;
  return result;
}

void sub_23A9E7D10(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  double v12;
  double v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  void *v19;
  char *v20;
  _QWORD v21[2];
  _QWORD aBlock[6];

  v3 = sub_23AA32F00();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32ED0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_experienceType] != 2 || !UIAccessibilityIsReduceMotionEnabled())
    && a1)
  {
    v11 = a1;
    objc_msgSend(v11, sel_heading);
    v13 = v12;
    v14 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_previousHeading];
    if ((v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_previousHeading + 8] & 1) != 0)
    {

    }
    else
    {
      v15 = v12 - *v14;
      v16 = v15 + -360.0;
      if (v15 <= 180.0)
        v16 = v13 - *v14;
      if (v15 >= -180.0)
        v17 = v16;
      else
        v17 = v15 + 360.0;
      v21[1] = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isolationQueue];
      sub_23AA32EC4();
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v1;
      *(double *)(v18 + 24) = v17;
      aBlock[4] = sub_23A9E9A5C;
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23A9C4DBC;
      aBlock[3] = &unk_250BC4650;
      v19 = _Block_copy(aBlock);
      v20 = v1;
      sub_23AA32EE8();
      MEMORY[0x23B85CE40](0, v6, v10, v19);

      _Block_release(v19);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_release();
    }
    *v14 = v13;
    *((_BYTE *)v14 + 8) = 0;
  }
}

void sub_23A9E7F48(uint64_t a1, double a2)
{
  void *v2;
  id v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v2)
  {
    v4 = v2;
    sub_23AA05FB8(a2);

  }
}

id sub_23A9E8038(double a1, double a2)
{
  void *v2;
  id result;
  double v6;
  double v7;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  objc_class *v19;
  uint64_t v20;
  objc_super v21;

  result = objc_msgSend(v2, sel_size);
  if (v7 != a1 || v6 != a2)
  {
    if (qword_2569D4AB0 != -1)
      swift_once();
    v9 = sub_23AA32EA0();
    sub_23A9620E8(v9, (uint64_t)qword_2569E0010);
    v10 = v2;
    v11 = sub_23AA32E88();
    v12 = sub_23AA33218();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = v15;
      *(_DWORD *)v13 = 138412546;
      v16 = v10;
      sub_23AA333F8();
      *v14 = v10;

      *(_WORD *)(v13 + 12) = 2080;
      v17 = MEMORY[0x23B85CEC4](a1, a2);
      sub_23A964DBC(v17, v18, &v20);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v11, v12, "ðŸ§­ FMPFSKScene%@: set size={%s}", (uint8_t *)v13, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v15, -1, -1);
      MEMORY[0x23B85DB24](v13, -1, -1);

    }
    else
    {

    }
    v19 = (objc_class *)type metadata accessor for FMPFSKScene();
    v21.receiver = v10;
    v21.super_class = v19;
    objc_msgSendSuper2(&v21, sel_setSize_, a1, a2);
    return (id)sub_23A9E7100();
  }
  return result;
}

uint64_t sub_23A9E8294(void *a1, char a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  _QWORD aBlock[6];

  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32ED0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32EC4();
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a1;
  *(_QWORD *)(v13 + 32) = v2;
  aBlock[4] = sub_23A9E9F30;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC47E0;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  v16 = v2;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v8, v12, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_23A9E8418(char a1, uint64_t a2, int a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _BYTE v18[12];
  int v19;
  _QWORD aBlock[6];

  v19 = a3;
  v6 = sub_23AA32F00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23AA32ED0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23AA32EC4();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v3;
  *(_BYTE *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  *(_BYTE *)(v14 + 40) = v19 & 1;
  aBlock[4] = sub_23A9E9A24;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC4600;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v9, v13, v15);
  _Block_release(v15);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_23A9E85AC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  void *v4;
  char v7;
  id v8;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v4)
  {
    v7 = a4 & 1;
    v8 = v4;
    sub_23AA05644(a2 & 1, a3, v7);

  }
}

uint64_t sub_23A9E8628(char a1, double a2)
{
  return sub_23A9E9264(a1, a2, (uint64_t)&unk_250BC4778, (uint64_t)sub_23A9E9EF4, (uint64_t)&unk_250BC4790);
}

void sub_23A9E8644(uint64_t a1, char a2, double a3)
{
  char *v3;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t i;
  char *v15;
  char v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v3 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v3)
  {
    v5 = (double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor];
    *v5 = a3;
    *((_BYTE *)v5 + 8) = 0;
    if ((a2 & 1) != 0)
    {
      v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactorSpring];
      v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
      swift_beginAccess();
      if (*(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308)
      {
        v18 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
        *(double *)v18 = a3;
        *(_BYTE *)(v18 + 8) = 0;
        sub_23A9CC9DC();
        return;
      }
    }
    v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactorSpring];
    sub_23A9829AC(a3);
    *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v9 = (double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor];
    *v9 = a3;
    *((_BYTE *)v9 + 8) = 0;
    v10 = &v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes];
    swift_beginAccess();
    v11 = *(_QWORD *)v10;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v19 = v3;
      v12 = sub_23AA335C0();
      if (v12)
        goto LABEL_6;
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v13 = v3;
      if (v12)
      {
LABEL_6:
        if (v12 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v12; ++i)
        {
          if ((v11 & 0xC000000000000001) != 0)
            v15 = (char *)MEMORY[0x23B85D0B0](i, v11);
          else
            v15 = (char *)*(id *)(v11 + 8 * i + 32);
          v16 = *((_BYTE *)v5 + 8);
          v17 = &v15[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor];
          *(double *)v17 = *v5;
          v17[8] = v16;

        }
      }
    }
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_23A9E8858(char a1, double a2)
{
  return sub_23A9E9264(a1, a2, (uint64_t)&unk_250BC4598, (uint64_t)sub_23A9E99D8, (uint64_t)&unk_250BC45B0);
}

uint64_t sub_23A9E8874(uint64_t a1, int a2, int a3)
{
  return sub_23A9E8DE0(a1, a2, a3, (uint64_t)&unk_250BC4548, (uint64_t)sub_23A9E99B8, (uint64_t)&unk_250BC4560);
}

void sub_23A9E8890(uint64_t a1, uint64_t a2, char a3, char a4)
{
  void *v4;
  char v7;
  id v8;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v4)
  {
    v7 = a3 & 1;
    v8 = v4;
    sub_23AA05A18(a2, v7, a4 & 1);

  }
}

uint64_t sub_23A9E890C(char a1, double a2)
{
  return sub_23A9E9264(a1, a2, (uint64_t)&unk_250BC44F8, (uint64_t)sub_23A9E9990, (uint64_t)&unk_250BC4510);
}

void sub_23A9E8928(uint64_t a1, char a2, void (*a3)(_QWORD, double), double a4)
{
  void *v4;
  id v8;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v4)
  {
    v8 = v4;
    a3(a2 & 1, a4);

  }
}

uint64_t sub_23A9E89A0(char a1, char a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];

  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32ED0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32EC4();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_BYTE *)(v13 + 24) = a1;
  *(_BYTE *)(v13 + 25) = a2;
  aBlock[4] = sub_23A9E9980;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC44C0;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v8, v12, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_23A9E8B24(uint64_t a1, char a2, char a3)
{
  char *v3;
  void *v4;
  char *v7;
  id v8;

  v3 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v3)
  {
    v4 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode];
    if (v4)
    {
      v7 = v3;
      v8 = v4;
      sub_23A96E0B8(a2 & 1, a3 & 1);

    }
  }
}

uint64_t sub_23A9E8BB8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD aBlock[6];

  v1 = sub_23AA32F00();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32ED0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32EC4();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_23A9E9954;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC4470;
  v10 = _Block_copy(aBlock);
  v11 = v0;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v4, v8, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_23A9E8D2C(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  id v4;

  v1 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v1)
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode];
    if (v2)
    {
      v3 = v1;
      v4 = v2;
      sub_23AA106A8();

    }
  }
}

uint64_t sub_23A9E8DC4(uint64_t a1, int a2, int a3)
{
  return sub_23A9E8DE0(a1, a2, a3, (uint64_t)&unk_250BC4408, (uint64_t)sub_23A9E9948, (uint64_t)&unk_250BC4420);
}

uint64_t sub_23A9E8DE0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v23 = a5;
  v24 = a6;
  v21 = a2;
  v22 = a3;
  v8 = sub_23AA32F00();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23AA32ED0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32EC4();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v6;
  *(_QWORD *)(v16 + 24) = a1;
  *(_BYTE *)(v16 + 32) = v21 & 1;
  *(_BYTE *)(v16 + 33) = v22;
  aBlock[4] = v23;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = v24;
  v17 = _Block_copy(aBlock);
  v18 = v6;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v11, v15, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_23A9E8F6C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char *v4;
  void *v5;
  char v8;
  char *v9;
  id v10;

  v4 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v4)
  {
    v5 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode];
    if (v5)
    {
      v8 = a3 & 1;
      v9 = v4;
      v10 = v5;
      sub_23A96EDB4(a2, v8, a4 & 1);

    }
  }
}

uint64_t sub_23A9E9014(char a1, double a2)
{
  return sub_23A9E9264(a1, a2, (uint64_t)&unk_250BC43B8, (uint64_t)sub_23A9E9914, (uint64_t)&unk_250BC43D0);
}

void sub_23A9E9030(uint64_t a1, char a2, double a3)
{
  char *v3;
  void *v4;
  char *v7;
  char v8;
  id v9;

  v3 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v3)
  {
    v4 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode];
    if (v4)
    {
      v7 = v3;
      v9 = v4;
      v8 = a2 & 1;
      if (a3 <= 0.0)
        sub_23AA24F94(v8);
      else
        sub_23AA24B4C(v8);
      sub_23AA1053C(a2 & 1, a3);

    }
  }
}

uint64_t sub_23A9E9114(char a1, double a2)
{
  return sub_23A9E9264(a1, a2, (uint64_t)&unk_250BC4368, (uint64_t)sub_23A9E9904, (uint64_t)&unk_250BC4380);
}

void sub_23A9E9130(uint64_t a1, char a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v3 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v3)
  {
    v4 = *(char **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode];
    if (v4)
    {
      v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode];
      v8 = v3;
      v11 = v4;
      sub_23AA253EC(a2 & 1, a3);
      v9 = *(_QWORD *)(*(_QWORD *)(v7 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode)
                     + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_sizeSpring);
      if ((a2 & 1) != 0)
      {
        v10 = v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
        *(double *)v10 = a3;
        *(_BYTE *)(v10 + 8) = 0;
        sub_23A9CC9DC();
      }
      else
      {
        sub_23A9829AC(a3);
        *(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        sub_23A9EA5A0();
      }

    }
  }
}

uint64_t sub_23A9E9248(char a1, double a2)
{
  return sub_23A9E9264(a1, a2, (uint64_t)&unk_250BC4318, (uint64_t)sub_23A9E98F4, (uint64_t)&unk_250BC4330);
}

uint64_t sub_23A9E9264(char a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v20 = a4;
  v21 = a5;
  v8 = sub_23AA32F00();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23AA32ED0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32EC4();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v5;
  *(double *)(v16 + 24) = a2;
  *(_BYTE *)(v16 + 32) = a1;
  aBlock[4] = v20;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = v21;
  v17 = _Block_copy(aBlock);
  v18 = v5;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v11, v15, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_23A9E93EC(uint64_t a1, char a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;

  v3 = *(char **)(a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v3)
  {
    v4 = *(char **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode];
    if (v4)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode]
                                 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode)
                     + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_opacitySpring);
      if ((a2 & 1) != 0)
      {
        v6 = v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
        *(double *)v6 = a3;
        *(_BYTE *)(v6 + 8) = 0;
        sub_23A9CC9DC();
      }
      else
      {
        sub_23A9829AC(a3);
        *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        v7 = v3;
        v8 = v4;
        sub_23A9EA5A0();

      }
    }
  }
}

uint64_t sub_23A9E94C4(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[6];

  v3 = sub_23AA32F00();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32ED0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA32EC4();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_BYTE *)(v11 + 24) = a1;
  aBlock[4] = sub_23A9E98C8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC42E0;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  sub_23AA32EE8();
  MEMORY[0x23B85CE40](0, v6, v10, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t type metadata accessor for FMPFSKScene()
{
  return objc_opt_self();
}

__n128 initializeBufferWithCopyOfBuffer for FMPFSKSceneStyle(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKSceneStyle()
{
  return &type metadata for FMPFSKSceneStyle;
}

id sub_23A9E96DC(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

uint64_t sub_23A9E970C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A9E9730(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23A9E67D4(a1, a2, v2);
}

uint64_t sub_23A9E9738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9E9748()
{
  return swift_release();
}

char *sub_23A9E9750()
{
  return sel_fmpfArrowDotCount;
}

id sub_23A9E975C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fmpfArrowDotCount);
  *a2 = result;
  return result;
}

id sub_23A9E978C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFmpfArrowDotCount_, *a1);
}

uint64_t sub_23A9E97A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23A9E68A0(a1, a2, v2);
}

char *sub_23A9E97A8()
{
  return sel_fmpfDebugMode;
}

id sub_23A9E97B4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fmpfDebugMode);
  *a2 = (_BYTE)result;
  return result;
}

id sub_23A9E97E4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFmpfDebugMode_, *a1);
}

uint64_t sub_23A9E97F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23A9E6AE0(a1, a2, v2);
}

uint64_t sub_23A9E9800(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(unsigned __int8 *)(a1 + 176));
  return a1;
}

void sub_23A9E983C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

void sub_23A9E986C()
{
  uint64_t v0;

  sub_23A9E6CC0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23A9E9878()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E989C()
{
  uint64_t v0;

  sub_23A9E6A44(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9E98A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E98C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
  if (v1)
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_inFOV) = *(_BYTE *)(v0 + 24);
}

void sub_23A9E98F4()
{
  uint64_t v0;

  sub_23A9E93EC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 32), *(double *)(v0 + 24));
}

void sub_23A9E9904()
{
  uint64_t v0;

  sub_23A9E9130(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 32), *(double *)(v0 + 24));
}

void sub_23A9E9914()
{
  uint64_t v0;

  sub_23A9E9030(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 32), *(double *)(v0 + 24));
}

uint64_t sub_23A9E9924()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A9E9948()
{
  return sub_23A9E99C4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E8F6C);
}

void sub_23A9E9954()
{
  uint64_t v0;

  sub_23A9E8D2C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9E995C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E9980()
{
  uint64_t v0;

  sub_23A9E8B24(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

void sub_23A9E9990()
{
  uint64_t v0;

  sub_23A9E8928(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 32), (void (*)(_QWORD, double))sub_23AA05D70, *(double *)(v0 + 24));
}

uint64_t sub_23A9E99B8()
{
  return sub_23A9E99C4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E8890);
}

uint64_t sub_23A9E99C4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33));
}

void sub_23A9E99D8()
{
  uint64_t v0;

  sub_23A9E8928(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 32), (void (*)(_QWORD, double))sub_23AA0584C, *(double *)(v0 + 24));
}

uint64_t sub_23A9E9A00()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E9A24()
{
  uint64_t v0;

  sub_23A9E85AC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_23A9E9A38()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E9A5C()
{
  uint64_t v0;

  sub_23A9E7F48(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_23A9E9A68()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E9A94()
{
  uint64_t v0;

  sub_23A9E72B4(*(char **)(v0 + 16), *(void **)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_23A9E9AA4()
{
  uint64_t v0;

  return sub_23A9E7AF0(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_23A9E9AB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A9E9AD4()
{
  return swift_deallocObject();
}

void sub_23A9E9AE4(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacity;
  *(double *)v5 = a2;
  *(_BYTE *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacitySpring),
        v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    v11 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v11 = a2;
    *(_BYTE *)(v11 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacitySpring);
    sub_23A9829AC(a2);
    *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v9 = v3 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_presentedOpacity;
    *(double *)v9 = a2;
    *(_BYTE *)(v9 + 8) = 0;
    v10 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode);
    if (v10)
      objc_msgSend(v10, sel_setAlpha_, a2);
  }
}

void sub_23A9E9C00()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_23AA33284();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23AA33260();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v7);
  v8 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_style];
  __asm { FMOV            V0.2D, #0.5 }
  *(_OWORD *)v8 = _Q0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_ringView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_axisesNode] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode] = 0;
  v14 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_previousHeading];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_motionManager;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_dotCountObservation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_debugModeObservation] = 0;
  v16 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_lastRenderTime];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isolationQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  sub_23AA32EF4();
  sub_23AA33254();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5750], v2);
  *(_QWORD *)&v1[v17] = sub_23AA332B4();
  v18 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_shouldApplyOpacity] = 1;
  v20 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_opacity];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v21 = &v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_presentedOpacity];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging] = 0;

  sub_23AA335A8();
  __break(1u);
}

uint64_t sub_23A9E9ED0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9E9EF4()
{
  uint64_t v0;

  sub_23A9E8644(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 32), *(double *)(v0 + 24));
}

uint64_t sub_23A9E9F04()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9E9F30()
{
  uint64_t v0;
  void *v1;
  const char *v2;
  void *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 24);
  v2 = sel_presentScene_;
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    objc_msgSend(*(id *)(v0 + 24), sel_presentScene_, *(_QWORD *)(v0 + 32));
    v2 = sel_setAsynchronous_;
    v3 = v1;
    v4 = 1;
  }
  else
  {
    v3 = *(void **)(v0 + 24);
    v4 = 0;
  }
  return objc_msgSend(v3, v2, v4);
}

uint64_t sub_23A9EA09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;
  char v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  uint64_t v15;

  v1 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (__int16 *)((char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_23A9EA28C(v4, (uint64_t)v3);
  if (*v3 < 0)
  {
    if ((*((_BYTE *)v3 + *(int *)(v1 + 44)) & 1) != 0)
    {
      v5 = 8;
    }
    else
    {
      v6 = (char *)v3 + *(int *)(v1 + 32);
      v7 = *((_DWORD *)v6 + 24);
      v5 = 1;
      if ((v7 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v7 & 0xFF0000) == 0x40000 && *((_QWORD *)v6 + 2) != 1)
      {
        v9 = *((_QWORD *)v6 + 7);
        v10 = v6[40];
        if ((v9 & 0x100) != 0)
          v11 = 8;
        else
          v11 = 1;
        if ((v9 & 0x100) != 0)
          v12 = 8;
        else
          v12 = 4;
        if ((v9 & 0x101) != 0)
          v13 = v12;
        else
          v13 = 2;
        if ((v10 & 1) != 0)
          v5 = v13;
        else
          v5 = v11;
      }
    }
  }
  else
  {
    v5 = 0;
  }
  sub_23A9EA2D0((uint64_t)v3);
  return v5;
}

uint64_t sub_23A9EA28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9EA2D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFindingViewState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23A9EA30C()
{
  qword_2569D7BF0 = 0x4084000000000000;
}

void sub_23A9EA3E4()
{
  void *v0;
  CGPathRef v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  CGRect v10;

  if (qword_2569D4BA0 != -1)
    swift_once();
  *(_QWORD *)&v10.size.width = qword_2569D7BF0;
  v10.origin.x = *(double *)&qword_2569D7BF0 * -0.5;
  v10.origin.y = *(double *)&qword_2569D7BF0 * -0.5;
  *(_QWORD *)&v10.size.height = qword_2569D7BF0;
  v1 = CGPathCreateWithEllipseInRect(v10, 0);
  objc_msgSend(v0, sel_setPath_, v1);

  objc_msgSend(v0, sel_setLineWidth_, 1.0);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_systemBlueColor);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_traitCollectionWithUserInterfaceStyle_, 2);
  v6 = objc_msgSend(v3, sel_resolvedColorWithTraitCollection_, v5);

  objc_msgSend(v0, sel_setFillColor_, v6);
  v7 = objc_msgSend(v2, sel_systemBlueColor);
  v8 = objc_msgSend(v4, sel_traitCollectionWithUserInterfaceStyle_, 2);
  v9 = objc_msgSend(v7, sel_resolvedColorWithTraitCollection_, v8);

  objc_msgSend(v0, sel_setStrokeColor_, v9);
}

id sub_23A9EA5A0()
{
  char *v0;
  uint64_t v1;
  double *v2;
  double v3;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_opacitySpring];
  v2 = (double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  v3 = *v2 + *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  if (vabdd_f64(v2[35] + *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v3) <= *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v3 = v2[35] + *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  objc_msgSend(v0, sel_setAlpha_, v3);
  swift_beginAccess();
  sub_23A9EA6C4();
  return objc_msgSend(v0, sel_setScale_);
}

void sub_23A9EA6C4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;

  if ((*(_WORD *)((_BYTE *)v0 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_findingTechnology) & 0x8100) != 0x100
    || (v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice),
        v2 = objc_msgSend(v1, sel_userInterfaceIdiom),
        v1,
        v2 != (id)1))
  {
    v3 = objc_msgSend(v0, sel_scene);
    if (!v3)
      return;
    v4 = v3;
    objc_msgSend(v3, sel_size);

  }
  if (qword_2569D4BA0 != -1)
    swift_once();
}

void sub_23A9EA800()
{
  uint64_t v0;

}

id sub_23A9EA82C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKBTRangeDiskNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKBTRangeDiskNode()
{
  return objc_opt_self();
}

id sub_23A9EA92C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  objc_super v5;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeObservation];
  if (v2)
  {
    v3 = v2;
    sub_23AA32CD8();

  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FMR1DebugView();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

void sub_23A9EABA8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (uint64_t)objc_msgSend(a1, sel_selectedSegmentIndex);
  v4 = 40;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_experienceType) == 1)
    v4 = 48;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_style + v4);
  if (v3 >= *(_QWORD *)(v5 + 16))
  {
    v6 = 0;
    goto LABEL_7;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v5 + 8 * v3 + 32);
LABEL_7:
    objc_msgSend(v7, sel_setFmpfArrowDotCount_, v6);

    return;
  }
  __break(1u);
}

id sub_23A9EADD0()
{
  char *v0;
  id result;
  void (*v2)(id (*)(uint64_t), uint64_t);
  uint64_t v3;
  char *v4;

  result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_runTestsSwitch], sel_isOn);
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeWithoutBearingSwitch], sel_setEnabled_, 0);
    v2 = *(void (**)(id (*)(uint64_t), uint64_t))&v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_autoTestsActionHandler];
    if (v2)
    {
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = v0;
      sub_23A971FB8((uint64_t)v2);
      v4 = v0;
      v2(sub_23A9EB218, v3);
      sub_23A98C874((uint64_t)v2);
      return (id)swift_release();
    }
  }
  return result;
}

id sub_23A9EAEA0(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  _QWORD aBlock[6];

  v3 = sub_23AA32ED0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AA32F00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeWithoutBearingSwitch], sel_setEnabled_, 1);
  result = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_runTestsSwitch], sel_isOn);
  if ((_DWORD)result)
  {
    sub_23A9731D4();
    v12 = (void *)sub_23AA33290();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    aBlock[4] = sub_23A9EB220;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4858;
    v14 = _Block_copy(aBlock);
    v15 = a2;
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v10, v6, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

id sub_23A9EB0A0(char *a1)
{
  id result;
  void (*v3)(uint64_t (*)(), uint64_t);
  uint64_t v4;
  char *v5;

  result = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_runTestsSwitch], sel_isOn);
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeWithoutBearingSwitch], sel_setEnabled_, 0);
    v3 = *(void (**)(uint64_t (*)(), uint64_t))&a1[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_autoTestsActionHandler];
    if (v3)
    {
      v4 = swift_allocObject();
      *(_QWORD *)(v4 + 16) = a1;
      sub_23A971FB8((uint64_t)v3);
      v5 = a1;
      v3(sub_23A9EB8D4, v4);
      sub_23A98C874((uint64_t)v3);
      return (id)swift_release();
    }
  }
  return result;
}

uint64_t type metadata accessor for FMR1DebugView()
{
  return objc_opt_self();
}

uint64_t sub_23A9EB1F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9EB218(uint64_t a1)
{
  uint64_t v1;

  return sub_23A9EAEA0(a1, *(char **)(v1 + 16));
}

id sub_23A9EB220()
{
  uint64_t v0;

  return sub_23A9EB0A0(*(char **)(v0 + 16));
}

uint64_t sub_23A9EB228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9EB238()
{
  return swift_release();
}

void sub_23A9EB240()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;

  v1 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_style;
  if (qword_2569D4B50 != -1)
    swift_once();
  v2 = &v0[v1];
  v3 = (void *)qword_2569E03E8;
  v4 = (void *)unk_2569E03F0;
  v5 = qword_2569E0408;
  v6 = qword_2569E0410;
  v7 = qword_2569E0418;
  v8 = qword_2569E0430;
  v9 = xmmword_2569E03F8;
  v10 = unk_2569E0420;
  *(_QWORD *)v2 = qword_2569E03E8;
  *((_QWORD *)v2 + 1) = v4;
  *((_OWORD *)v2 + 1) = v9;
  *((_QWORD *)v2 + 4) = v5;
  *((_QWORD *)v2 + 5) = v6;
  *((_QWORD *)v2 + 6) = v7;
  *(_OWORD *)(v2 + 56) = v10;
  *((_QWORD *)v2 + 9) = v8;
  v11 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugLabel;
  type metadata accessor for FMR1InsetLabel();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = v3;
  v14 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)&v0[v11] = objc_msgSend(v12, sel_init);
  v15 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_controlsView;
  *(_QWORD *)&v0[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v16 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_dotCountLabel;
  *(_QWORD *)&v0[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v17 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_dotCountSegmentedControl;
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD938]), sel_init);
  v18 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_ecoModeLabel;
  *(_QWORD *)&v0[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v19 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_ecoModeSwitch;
  *(_QWORD *)&v0[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
  v20 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeWithoutBearingLabel;
  *(_QWORD *)&v0[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v21 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeWithoutBearingSwitch;
  *(_QWORD *)&v0[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
  v22 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_runTestsLabel;
  *(_QWORD *)&v0[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v23 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_runTestsSwitch;
  *(_QWORD *)&v0[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeObservation] = 0;
  v24 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_lastSamplingTimeIntervalForSKFPS];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v25 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_sampleCountForSKFPS];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  v26 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_lastLoggedSKFPS];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  v27 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_lastSamplingTimeIntervalForARFPS];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v28 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_sampleCountForARFPS];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_lastLoggedARFPS];
  *(_QWORD *)v29 = 0;
  v29[8] = 1;
  v30 = &v0[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_autoTestsActionHandler];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;

  sub_23AA335A8();
  __break(1u);
}

uint64_t sub_23A9EB500(double a1, double a2)
{
  char *v2;
  uint64_t inited;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  _BOOL4 v20;
  id v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  _BOOL4 v26;
  id v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  _BOOL4 v32;
  id v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  _BOOL4 v38;
  _BOOL8 v39;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;
  CGPoint v49;
  CGPoint v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  sub_23A964084(&qword_2569D6080);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA39BE0;
  v6 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugLabel];
  *(_QWORD *)(inited + 32) = v6;
  v7 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_ecoModeSwitch];
  *(_QWORD *)(inited + 40) = v7;
  v8 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_debugModeWithoutBearingSwitch];
  *(_QWORD *)(inited + 48) = v8;
  v9 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_runTestsSwitch];
  *(_QWORD *)(inited + 56) = v9;
  v10 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_dotCountSegmentedControl];
  *(_QWORD *)(inited + 64) = v10;
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  objc_msgSend(v2, sel_convertPoint_toCoordinateSpace_, v11, a1, a2);
  v17 = v16;
  v19 = v18;
  objc_msgSend(v11, sel_bounds);
  v46.x = v17;
  v46.y = v19;
  v20 = CGRectContainsPoint(v51, v46);

  if (v20)
    goto LABEL_5;
  v21 = v12;
  objc_msgSend(v2, sel_convertPoint_toCoordinateSpace_, v21, a1, a2);
  v23 = v22;
  v25 = v24;
  objc_msgSend(v21, sel_bounds);
  v47.x = v23;
  v47.y = v25;
  v26 = CGRectContainsPoint(v52, v47);

  if (v26)
    goto LABEL_5;
  v27 = v13;
  objc_msgSend(v2, sel_convertPoint_toCoordinateSpace_, v27, a1, a2);
  v29 = v28;
  v31 = v30;
  objc_msgSend(v27, sel_bounds);
  v48.x = v29;
  v48.y = v31;
  v32 = CGRectContainsPoint(v53, v48);

  if (v32)
    goto LABEL_5;
  v33 = v14;
  objc_msgSend(v2, sel_convertPoint_toCoordinateSpace_, v33, a1, a2);
  v35 = v34;
  v37 = v36;
  objc_msgSend(v33, sel_bounds);
  v49.x = v35;
  v49.y = v37;
  v38 = CGRectContainsPoint(v54, v49);

  if (v38)
  {
LABEL_5:
    swift_release();
    return 1;
  }
  else
  {
    v41 = v15;
    objc_msgSend(v2, sel_convertPoint_toCoordinateSpace_, v41, a1, a2);
    v43 = v42;
    v45 = v44;
    objc_msgSend(v41, sel_bounds);
    v50.x = v43;
    v50.y = v45;
    v39 = CGRectContainsPoint(v55, v50);
    swift_release();

  }
  return v39;
}

void sub_23A9EB794()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  BOOL v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v1 = OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_controlsView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI13FMR1DebugView_controlsView), sel_alpha);
  v3 = v2 == 0.0;
  v4 = *(void **)(v0 + v1);
  v5 = (void *)objc_opt_self();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = v3;
  v9[4] = sub_23A9EB8B0;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_23A9C4DBC;
  v9[3] = &unk_250BC48D0;
  v7 = _Block_copy(v9);
  v8 = v4;
  swift_release();
  objc_msgSend(v5, sel_animateWithDuration_animations_, v7, 0.5);
  _Block_release(v7);

}

uint64_t sub_23A9EB88C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23A9EB8B0()
{
  uint64_t v0;
  double v1;

  v1 = 0.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 1.0;
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, v1);
}

uint64_t sub_23A9EB8E8(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, __int128 *);
  __int128 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_DWORD *)a2 + 6);
  v6 = *((_QWORD *)a2 + 4);
  v7 = *(uint64_t (**)(uint64_t, __int128 *))(a4 + 16);
  v9 = *a2;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return v7(a1, &v9);
}

id sub_23A9EB92C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  objc_super v41;

  v5 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_backgroundLayer;
  v6 = (void *)objc_opt_self();
  v7 = v2;
  v8 = objc_msgSend(v6, sel_effectWithStyle_, 4);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, v8);

  *(_QWORD *)&v2[v5] = v9;
  v10 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_stackView;
  *(_QWORD *)&v7[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v11 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_topStackView;
  *(_QWORD *)&v7[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v12 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_middleStackView;
  *(_QWORD *)&v7[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v13 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_bottomStackView;
  *(_QWORD *)&v7[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v14 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton;
  *(_QWORD *)&v7[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v15 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton;
  *(_QWORD *)&v7[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v16 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton;
  *(_QWORD *)&v7[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v17 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_disconnectedStateButton;
  *(_QWORD *)&v7[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v18 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_connectingStateButton;
  *(_QWORD *)&v7[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v19 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_coldStateButton;
  *(_QWORD *)&v7[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v20 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmStateButton;
  *(_QWORD *)&v7[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v21 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmerStateButton;
  *(_QWORD *)&v7[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v22 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hotStateButton;
  *(_QWORD *)&v7[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v23 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_foundStateButton;
  *(_QWORD *)&v7[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v24 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider;
  v25 = (objc_class *)type metadata accessor for FMFindingDebugSlider();
  v26 = objc_allocWithZone(v25);
  *(_QWORD *)&v7[v24] = sub_23AA14AD8(0x63614620676E6952, 0xEB00000000726F74, 0.0, 6.0, 0.01);
  v27 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringOpacitySlider;
  v28 = objc_allocWithZone(v25);
  *(_QWORD *)&v7[v27] = sub_23AA14AD8(0x61704F20676E6952, 0xEC00000079746963, 0.0, 1.0, 0.01);
  v29 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider;
  v30 = objc_allocWithZone(v25);
  *(_QWORD *)&v7[v29] = sub_23AA14AD8(0x4620636974706148, 0xEC0000006563726FLL, 0.0, 1.0, 0.01);
  v31 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider;
  v32 = objc_allocWithZone(v25);
  *(_QWORD *)&v7[v31] = sub_23AA14AD8(0xD000000000000010, 0x800000023AA3FE70, 0.0, 1.0, 0.01);
  v33 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider;
  v34 = objc_allocWithZone(v25);
  *(_QWORD *)&v7[v33] = sub_23AA14AD8(0x65502065736C7550, 0xEC000000646F6972, 0.0, 2.0, 0.001);
  v35 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_saveButton;
  *(_QWORD *)&v7[v35] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v36 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_loadButton;
  *(_QWORD *)&v7[v36] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v37 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton;
  *(_QWORD *)&v7[v37] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v38 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton;
  *(_QWORD *)&v7[v38] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayTimer] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession] = a2;
  swift_retain();

  v41.receiver = v7;
  v41.super_class = (Class)type metadata accessor for FMFindingDebugViewController();
  v39 = objc_msgSendSuper2(&v41, sel_initWithNibName_bundle_, 0, 0);
  sub_23A9EBE10();

  swift_release();
  return v39;
}

void sub_23A9EBE10()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_backgroundLayer]);

    v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_stackView]);

      sub_23A9EBEB4();
      sub_23A9EC308();
      sub_23A9ECD38();
      sub_23A9ECC04();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_23A9EBEB4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v41;
  void *v42;
  void *v43;
  void *v44;

  v44 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_stackView);
  objc_msgSend(v44, sel_setAxis_, 1);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_topStackView);
  objc_msgSend(v1, sel_setAxis_, 0);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_middleStackView);
  objc_msgSend(v2, sel_setAxis_, 1);
  v41 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_bottomStackView);
  objc_msgSend(v41, sel_setAxis_, 0);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_loadButton);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_saveButton);
  v5 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v6 = v3;
  v7 = v4;
  v8 = objc_msgSend(v5, sel_init);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton);
  v10 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton);
  v11 = v9;
  v43 = v1;
  objc_msgSend(v1, sel_addArrangedSubview_, v6);
  objc_msgSend(v1, sel_addArrangedSubview_, v7);
  objc_msgSend(v1, sel_addArrangedSubview_, v8);
  objc_msgSend(v1, sel_addArrangedSubview_, v10);
  objc_msgSend(v1, sel_addArrangedSubview_, v11);

  v12 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider);
  v13 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringOpacitySlider);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider);
  v15 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider);
  v16 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider);
  v17 = v12;
  v18 = v13;
  v19 = v14;
  v20 = v15;
  v42 = v2;
  objc_msgSend(v2, sel_addArrangedSubview_, v16);
  objc_msgSend(v2, sel_addArrangedSubview_, v17);
  objc_msgSend(v2, sel_addArrangedSubview_, v18);
  objc_msgSend(v2, sel_addArrangedSubview_, v19);
  objc_msgSend(v2, sel_addArrangedSubview_, v20);

  v21 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_connectingStateButton);
  v22 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_coldStateButton);
  v23 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmStateButton);
  v24 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmerStateButton);
  v25 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hotStateButton);
  v26 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_foundStateButton);
  v27 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_disconnectedStateButton);
  v28 = v21;
  v29 = v22;
  v30 = v23;
  v31 = v24;
  v32 = v25;
  v33 = v26;
  objc_msgSend(v41, sel_addArrangedSubview_, v27);
  objc_msgSend(v41, sel_addArrangedSubview_, v28);
  objc_msgSend(v41, sel_addArrangedSubview_, v29);
  objc_msgSend(v41, sel_addArrangedSubview_, v30);
  objc_msgSend(v41, sel_addArrangedSubview_, v31);
  objc_msgSend(v41, sel_addArrangedSubview_, v32);
  objc_msgSend(v41, sel_addArrangedSubview_, v33);

  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v35 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton);
  v36 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton);
  v37 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton);
  v38 = v35;
  v39 = v36;
  objc_msgSend(v41, sel_addArrangedSubview_, v34);
  objc_msgSend(v41, sel_addArrangedSubview_, v37);
  objc_msgSend(v41, sel_addArrangedSubview_, v38);
  objc_msgSend(v41, sel_addArrangedSubview_, v39);

  objc_msgSend(v44, sel_addArrangedSubview_, v43);
  objc_msgSend(v44, sel_addArrangedSubview_, v42);
  return objc_msgSend(v44, sel_addArrangedSubview_, v41);
}

void sub_23A9EC308()
{
  char *v0;
  uint64_t inited;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;

  sub_23A964084(&qword_2569D6080);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA39C10;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_stackView];
  *(_QWORD *)(inited + 32) = v2;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton];
  *(_QWORD *)(inited + 40) = v3;
  v4 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton];
  *(_QWORD *)(inited + 48) = v4;
  v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider];
  *(_QWORD *)(inited + 56) = v5;
  v6 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider];
  *(_QWORD *)(inited + 64) = v6;
  v102 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider];
  *(_QWORD *)(inited + 72) = v102;
  v103 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider];
  *(_QWORD *)(inited + 80) = v103;
  v7 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_backgroundLayer];
  *(_QWORD *)(inited + 88) = v7;
  v8 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton];
  *(_QWORD *)(inited + 96) = v8;
  v105 = v0;
  v9 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton];
  *(_QWORD *)(inited + 104) = v9;
  v106 = inited;
  sub_23AA330C8();
  v10 = v106 & 0xC000000000000001;
  v104 = v2;
  if ((v106 & 0xC000000000000001) != 0)
  {
    v92 = v2;
    v93 = v3;
    v94 = v4;
    v95 = v5;
    v96 = v6;
    v97 = v102;
    v98 = v103;
    v99 = v7;
    v100 = v8;
    v101 = v9;
    v22 = (id)MEMORY[0x23B85D0B0](0, v106);
  }
  else
  {
    v11 = *(void **)(v106 + 32);
    v12 = v2;
    v13 = v3;
    v14 = v4;
    v15 = v5;
    v16 = v6;
    v17 = v102;
    v18 = v103;
    v19 = v7;
    v20 = v8;
    v21 = v9;
    v22 = v11;
    v10 = 0;
  }
  v23 = v22;
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v102);

  if (v10)
    v24 = (id)MEMORY[0x23B85D0B0](1, v106);
  else
    v24 = *(id *)(v106 + 40);
  v25 = v24;
  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v26 = (id)MEMORY[0x23B85D0B0](2, v106);
  else
    v26 = *(id *)(v106 + 48);
  v27 = v26;
  objc_msgSend(v26, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v28 = (id)MEMORY[0x23B85D0B0](3, v106);
  else
    v28 = *(id *)(v106 + 56);
  v29 = v28;
  objc_msgSend(v28, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v30 = (id)MEMORY[0x23B85D0B0](4, v106);
  else
    v30 = *(id *)(v106 + 64);
  v31 = v30;
  objc_msgSend(v30, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v32 = (id)MEMORY[0x23B85D0B0](5, v106);
  else
    v32 = *(id *)(v106 + 72);
  v33 = v32;
  objc_msgSend(v32, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v34 = (id)MEMORY[0x23B85D0B0](6, v106);
  else
    v34 = *(id *)(v106 + 80);
  v35 = v34;
  objc_msgSend(v34, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v36 = (id)MEMORY[0x23B85D0B0](7, v106);
  else
    v36 = *(id *)(v106 + 88);
  v37 = v36;
  objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v38 = (id)MEMORY[0x23B85D0B0](8, v106);
  else
    v38 = *(id *)(v106 + 96);
  v39 = v38;
  objc_msgSend(v38, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (v10)
    v40 = (id)MEMORY[0x23B85D0B0](9, v106);
  else
    v40 = *(id *)(v106 + 104);
  v41 = v40;
  objc_msgSend(v40, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  swift_bridgeObjectRelease();

  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_23AA35F80;
  v43 = objc_msgSend(v104, sel_topAnchor);
  v44 = objc_msgSend(v105, sel_view);
  if (!v44)
  {
    __break(1u);
    goto LABEL_41;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, sel_safeAreaLayoutGuide);

  v47 = objc_msgSend(v46, sel_topAnchor);
  v48 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v47);

  *(_QWORD *)(v42 + 32) = v48;
  v49 = objc_msgSend(v104, sel_leadingAnchor);
  v50 = objc_msgSend(v105, sel_view);
  if (!v50)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, sel_safeAreaLayoutGuide);

  v53 = objc_msgSend(v52, sel_leadingAnchor);
  v54 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v53);

  *(_QWORD *)(v42 + 40) = v54;
  v55 = objc_msgSend(v104, sel_trailingAnchor);
  v56 = objc_msgSend(v105, sel_view);
  if (!v56)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v57 = v56;
  v58 = objc_msgSend(v56, sel_safeAreaLayoutGuide);

  v59 = objc_msgSend(v58, sel_trailingAnchor);
  v60 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v59);

  *(_QWORD *)(v42 + 48) = v60;
  v61 = objc_msgSend(v104, sel_bottomAnchor);
  v62 = objc_msgSend(v105, sel_view);
  if (!v62)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v63 = v62;
  v64 = (void *)objc_opt_self();
  v65 = objc_msgSend(v63, sel_safeAreaLayoutGuide);

  v66 = objc_msgSend(v65, sel_bottomAnchor);
  v67 = objc_msgSend(v61, sel_constraintEqualToAnchor_, v66);

  *(_QWORD *)(v42 + 56) = v67;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v68 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v64, sel_activateConstraints_, v68);

  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_23AA35F80;
  v70 = v7;
  v71 = objc_msgSend(v7, sel_topAnchor);
  v72 = objc_msgSend(v105, sel_view);
  if (!v72)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v73 = v72;
  v74 = objc_msgSend(v72, sel_topAnchor);

  v75 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v74);
  *(_QWORD *)(v69 + 32) = v75;
  v76 = objc_msgSend(v70, sel_bottomAnchor);
  v77 = objc_msgSend(v105, sel_view);
  if (!v77)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v78 = v77;
  v79 = objc_msgSend(v77, sel_bottomAnchor);

  v80 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v79);
  *(_QWORD *)(v69 + 40) = v80;
  v81 = objc_msgSend(v70, sel_leadingAnchor);
  v82 = objc_msgSend(v105, sel_view);
  if (!v82)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v83 = v82;
  v84 = objc_msgSend(v82, sel_leadingAnchor);

  v85 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v84);
  *(_QWORD *)(v69 + 48) = v85;
  v86 = objc_msgSend(v70, sel_trailingAnchor);
  v87 = objc_msgSend(v105, sel_view);
  if (v87)
  {
    v88 = v87;
    v89 = objc_msgSend(v87, sel_trailingAnchor);

    v90 = objc_msgSend(v86, sel_constraintEqualToAnchor_, v89);
    *(_QWORD *)(v69 + 56) = v90;
    sub_23AA330C8();
    v91 = (void *)sub_23AA330A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_activateConstraints_, v91);

    return;
  }
LABEL_47:
  __break(1u);
}

void sub_23A9ECC04()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringOpacitySlider);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider);
  v5 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider);
  v9 = v1;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  objc_msgSend(v5, sel_addTarget_action_forControlEvents_, v0, sel_handleWithSlider_, 4096);
  objc_msgSend(v9, sel_addTarget_action_forControlEvents_, v0, sel_handleWithSlider_, 4096);
  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, v0, sel_handleWithSlider_, 4096);
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v0, sel_handleWithSlider_, 4096);
  objc_msgSend(v8, sel_addTarget_action_forControlEvents_, v0, sel_handleWithSlider_, 4096);

}

void sub_23A9ECD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t i;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;

  v1 = v0;
  sub_23A964084(&qword_2569D6080);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA39C20;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_disconnectedStateButton);
  *(_QWORD *)(inited + 32) = v3;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_connectingStateButton);
  *(_QWORD *)(inited + 40) = v4;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_coldStateButton);
  *(_QWORD *)(inited + 48) = v5;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmStateButton);
  *(_QWORD *)(inited + 56) = v6;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmerStateButton);
  *(_QWORD *)(inited + 64) = v7;
  v97 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_foundStateButton);
  *(_QWORD *)(inited + 72) = v97;
  v101 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton);
  *(_QWORD *)(inited + 80) = v101;
  v103 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton);
  *(_QWORD *)(inited + 88) = v103;
  v87 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton);
  *(_QWORD *)(inited + 96) = v87;
  v90 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton);
  *(_QWORD *)(inited + 104) = v90;
  v88 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_saveButton);
  *(_QWORD *)(inited + 112) = v88;
  v89 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_loadButton);
  *(_QWORD *)(inited + 120) = v89;
  v99 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton);
  *(_QWORD *)(inited + 128) = v99;
  v105 = inited;
  sub_23AA330C8();
  v92 = v3;
  v93 = v4;
  v94 = v5;
  v95 = v6;
  v96 = v7;
  v98 = v97;
  v102 = v101;
  v104 = v103;
  v8 = v87;
  v91 = v90;
  v9 = v88;
  v10 = v89;
  v100 = v99;
  for (i = 0; i != 13; ++i)
  {
    if ((v105 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x23B85D0B0](i, v105);
    else
      v12 = *(id *)(v105 + 8 * i + 32);
    v13 = v12;
    objc_msgSend(v12, sel_addTarget_action_forControlEvents_, v1, sel_handleWithButton_, 64, v87);

  }
  swift_bridgeObjectRelease();
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v16 = (void *)sub_23AA32FB4();
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v16, v15);

  if (v18)
  {
    v19 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v20 = objc_msgSend(v18, sel_imageWithTintColor_renderingMode_, v19, 1);

  }
  else
  {
    v20 = 0;
  }

  objc_msgSend(v10, sel_setImage_forState_, v20, 0);
  v21 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v22 = (void *)sub_23AA32FB4();
  v23 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v22, v21);

  if (v23)
  {
    v24 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v25 = objc_msgSend(v23, sel_imageWithTintColor_renderingMode_, v24, 1);

  }
  else
  {
    v25 = 0;
  }

  objc_msgSend(v9, sel_setImage_forState_, v25, 0);
  v26 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v27 = (void *)sub_23AA32FB4();
  v28 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v27, v26);

  if (v28)
  {
    v29 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v30 = objc_msgSend(v28, sel_imageWithTintColor_renderingMode_, v29, 1);

  }
  else
  {
    v30 = 0;
  }

  objc_msgSend(v8, sel_setImage_forState_, v30, 0);
  v31 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v32 = (void *)sub_23AA32FB4();
  v33 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v32, v31);

  if (v33)
  {
    v34 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v35 = objc_msgSend(v33, sel_imageWithTintColor_renderingMode_, v34, 1);

  }
  else
  {
    v35 = 0;
  }

  objc_msgSend(v91, sel_setImage_forState_, v35, 0);
  v36 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v37 = (void *)sub_23AA32FB4();
  v38 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v37, v36);

  if (v38)
  {
    v39 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v40 = objc_msgSend(v38, sel_imageWithTintColor_renderingMode_, v39, 1);

  }
  else
  {
    v40 = 0;
  }

  objc_msgSend(v92, sel_setImage_forState_, v40, 0);
  v41 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v42 = (void *)sub_23AA32FB4();
  v43 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v42, v41);

  if (v43)
  {
    v44 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v45 = objc_msgSend(v43, sel_imageWithTintColor_renderingMode_, v44, 1);

  }
  else
  {
    v45 = 0;
  }

  objc_msgSend(v93, sel_setImage_forState_, v45, 0);
  v46 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v47 = (void *)sub_23AA32FB4();
  v48 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v47, v46);

  if (v48)
  {
    v49 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v50 = objc_msgSend(v48, sel_imageWithTintColor_renderingMode_, v49, 1);

  }
  else
  {
    v50 = 0;
  }

  objc_msgSend(v94, sel_setImage_forState_, v50, 0);
  v51 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v52 = (void *)sub_23AA32FB4();
  v53 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v52, v51);

  if (v53)
  {
    v54 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v55 = objc_msgSend(v53, sel_imageWithTintColor_renderingMode_, v54, 1);

  }
  else
  {
    v55 = 0;
  }

  objc_msgSend(v95, sel_setImage_forState_, v55, 0);
  v56 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v57 = (void *)sub_23AA32FB4();
  v58 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v57, v56);

  if (v58)
  {
    v59 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v60 = objc_msgSend(v58, sel_imageWithTintColor_renderingMode_, v59, 1);

  }
  else
  {
    v60 = 0;
  }

  objc_msgSend(v96, sel_setImage_forState_, v60, 0);
  v61 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hotStateButton);
  v62 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v63 = (void *)sub_23AA32FB4();
  v64 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v63, v62);

  if (v64)
  {
    v65 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v66 = objc_msgSend(v64, sel_imageWithTintColor_renderingMode_, v65, 1);

  }
  else
  {
    v66 = 0;
  }

  objc_msgSend(v61, sel_setImage_forState_, v66, 0);
  v67 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v68 = (void *)sub_23AA32FB4();
  v69 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v68, v67);

  if (v69)
  {
    v70 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v71 = objc_msgSend(v69, sel_imageWithTintColor_renderingMode_, v70, 1);

  }
  else
  {
    v71 = 0;
  }

  objc_msgSend(v98, sel_setImage_forState_, v71, 0);
  v72 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v73 = (void *)sub_23AA32FB4();
  v74 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v73, v72);

  if (v74)
  {
    v75 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v76 = objc_msgSend(v74, sel_imageWithTintColor_renderingMode_, v75, 1);

  }
  else
  {
    v76 = 0;
  }

  objc_msgSend(v100, sel_setImage_forState_, v76, 0);
  v77 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v78 = (void *)sub_23AA32FB4();
  v79 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v78, v77);

  if (v79)
  {
    v80 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v81 = objc_msgSend(v79, sel_imageWithTintColor_renderingMode_, v80, 1);

  }
  else
  {
    v81 = 0;
  }

  objc_msgSend(v102, sel_setImage_forState_, v81, 0);
  v82 = objc_msgSend(v14, sel_configurationWithPointSize_, 32.0);
  v83 = (void *)sub_23AA32FB4();
  v84 = objc_msgSend(v17, sel_systemImageNamed_withConfiguration_, v83, v82);

  if (v84)
  {
    v85 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v86 = objc_msgSend(v84, sel_imageWithTintColor_renderingMode_, v85, 1);

  }
  else
  {
    v86 = 0;
  }

  objc_msgSend(v104, sel_setImage_forState_, v86, 0);
}

float sub_23A9EDD58(uint64_t a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  float result;

  v3 = *(double *)(a1 + 8);
  *(float *)&v3 = v3;
  *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider)
            + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = LODWORD(v3);
  sub_23AA13F6C(v3);
  v4 = *(double *)a1;
  *(float *)&v4 = *(double *)a1;
  *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider)
            + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = LODWORD(v4);
  sub_23AA13F6C(v4);
  LODWORD(v5) = *(_DWORD *)(a1 + 24);
  *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider)
            + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = LODWORD(v5);
  sub_23AA13F6C(v5);
  v6 = *(double *)(a1 + 32);
  *(float *)&v6 = v6;
  *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider)
            + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = LODWORD(v6);
  sub_23AA13F6C(v6);
  v7 = *(double *)(a1 + 16);
  *(float *)&v7 = v7;
  *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringOpacitySlider)
            + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = LODWORD(v7);
  sub_23AA13F6C(v7);
  return result;
}

double sub_23A9EDE24@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  double v3;
  double v4;
  int v5;
  double v6;

  result = *(float *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider)
                    + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value);
  v3 = *(float *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider)
                + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value);
  v4 = *(float *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringOpacitySlider)
                + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value);
  v5 = *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider)
                 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value);
  v6 = *(float *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider)
                + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value);
  *(double *)a1 = result;
  *(double *)(a1 + 8) = v3;
  *(double *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(double *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_23A9EDEA4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v23[2];

  v2 = v1;
  v4 = sub_23AA32D44();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v23 - v9;
  sub_23AA32C84();
  swift_allocObject();
  sub_23AA32C78();
  v23[1] = a1;
  sub_23A9F0D00();
  v11 = sub_23AA32C6C();
  v13 = v12;
  swift_release();
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v15 = objc_msgSend(v14, sel_temporaryDirectory);

  sub_23AA32D2C();
  sub_23AA32D20();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  sub_23AA32D68();
  sub_23A964084((uint64_t *)&unk_2569D7E90);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_23AA35F90;
  *(_QWORD *)(v17 + 56) = v4;
  v18 = sub_23A9E4754((uint64_t *)(v17 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v18, v10, v4);
  v19 = objc_allocWithZone(MEMORY[0x24BE8F650]);
  v20 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithActivityItems_applicationActivities_, v20, 0);

  objc_msgSend(v2, sel_presentViewController_animated_completion_, v21, 1, 0);
  sub_23A9F0C78(v11, v13);

  return ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
}

id sub_23A9EE180()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id result;
  uint64_t i;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton);
  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 32.0);
  v3 = (void *)sub_23AA32FB4();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v6 = objc_msgSend(v4, sel_imageWithTintColor_renderingMode_, v5, 1);

  }
  else
  {
    v6 = 0;
  }

  objc_msgSend(v1, sel_setImage_forState_, v6, 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_middleStackView), sel_setHidden_, 1);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_bottomStackView), sel_setHidden_, 1);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton);
  v10 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v23 = objc_msgSend(v10, sel_init);
  v24 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton);
  v14 = v1;

  v15 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_topStackView);
  v16 = objc_msgSend(v15, sel_arrangedSubviews);
  sub_23A968488(0, &qword_2569D7E80);
  v17 = sub_23AA330B0();

  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_6;
LABEL_13:
    swift_bridgeObjectRelease_n();
    objc_msgSend(v15, sel_addArrangedSubview_, v11);
    objc_msgSend(v15, sel_addArrangedSubview_, v12);
    objc_msgSend(v15, sel_addArrangedSubview_, v13);
    objc_msgSend(v15, sel_addArrangedSubview_, v23);

    objc_msgSend(v15, sel_addArrangedSubview_, v14);
    return objc_msgSend(v15, sel_addArrangedSubview_, v24);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_23AA335C0();
  v18 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_6:
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x23B85D0B0](i, v17);
      else
        v21 = *(id *)(v17 + 8 * i + 32);
      v22 = v21;
      objc_msgSend(v21, sel_removeFromSuperview);

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id sub_23A9EE4E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id result;
  uint64_t i;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t j;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  void *v54;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton);
  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 32.0);
  v3 = (void *)sub_23AA32FB4();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v6 = objc_msgSend(v4, sel_imageWithTintColor_renderingMode_, v5, 1);

  }
  else
  {
    v6 = 0;
  }

  v52 = v1;
  objc_msgSend(v1, sel_setImage_forState_, v6, 0);

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_middleStackView), sel_setHidden_, 0);
  v54 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_bottomStackView);
  objc_msgSend(v54, sel_setHidden_, 0);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_loadButton);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_saveButton);
  v9 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v10 = v7;
  v11 = v8;
  v47 = objc_msgSend(v9, sel_init);
  v50 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton);

  v12 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_topStackView);
  v13 = objc_msgSend(v12, sel_arrangedSubviews);
  sub_23A968488(0, &qword_2569D7E80);
  v14 = sub_23AA330B0();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_23AA335C0();
    v15 = (uint64_t)result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (!v15)
      goto LABEL_13;
  }
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  for (i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0)
      v18 = (id)MEMORY[0x23B85D0B0](i, v14);
    else
      v18 = *(id *)(v14 + 8 * i + 32);
    v19 = v18;
    objc_msgSend(v18, sel_removeFromSuperview);

  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  objc_msgSend(v12, sel_addArrangedSubview_, v10);
  objc_msgSend(v12, sel_addArrangedSubview_, v11);
  objc_msgSend(v12, sel_addArrangedSubview_, v47);

  objc_msgSend(v12, sel_addArrangedSubview_, v52);
  objc_msgSend(v12, sel_addArrangedSubview_, v50);
  v20 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_disconnectedStateButton);
  v21 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_connectingStateButton);
  v22 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_coldStateButton);
  v23 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmStateButton);
  v24 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmerStateButton);
  v25 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hotStateButton);
  v48 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_foundStateButton);
  v26 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v27 = v20;
  v53 = v21;
  v51 = v22;
  v28 = v23;
  v29 = v24;
  v30 = v25;
  v31 = v48;
  v32 = objc_msgSend(v26, sel_init);
  v33 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton);
  v49 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton);
  v34 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton);
  v35 = v33;
  v42 = v27;

  v46 = v35;
  v45 = v34;

  v44 = v30;
  v43 = v29;

  v36 = objc_msgSend(v54, sel_arrangedSubviews);
  v37 = sub_23AA330B0();

  if (!(v37 >> 62))
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v38)
      goto LABEL_15;
LABEL_22:
    swift_bridgeObjectRelease_n();
    objc_msgSend(v54, sel_addArrangedSubview_, v42);
    objc_msgSend(v54, sel_addArrangedSubview_, v53);
    objc_msgSend(v54, sel_addArrangedSubview_, v51);
    objc_msgSend(v54, sel_addArrangedSubview_, v28);
    objc_msgSend(v54, sel_addArrangedSubview_, v43);
    objc_msgSend(v54, sel_addArrangedSubview_, v44);
    objc_msgSend(v54, sel_addArrangedSubview_, v31);
    objc_msgSend(v54, sel_addArrangedSubview_, v32);

    objc_msgSend(v54, sel_addArrangedSubview_, v45);
    objc_msgSend(v54, sel_addArrangedSubview_, v46);
    return objc_msgSend(v54, sel_addArrangedSubview_, v49);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_23AA335C0();
  v38 = (uint64_t)result;
  if (!result)
    goto LABEL_22;
LABEL_15:
  if (v38 >= 1)
  {
    for (j = 0; j != v38; ++j)
    {
      if ((v37 & 0xC000000000000001) != 0)
        v40 = (id)MEMORY[0x23B85D0B0](j, v37);
      else
        v40 = *(id *)(v37 + 8 * j + 32);
      v41 = v40;
      objc_msgSend(v40, sel_removeFromSuperview, v42);

    }
    goto LABEL_22;
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_23A9EEAEC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(MEMORY[0x24BEBD560]);
  v2 = (void *)sub_23AA330A4();
  v3 = objc_msgSend(v1, sel_initWithDocumentTypes_inMode_, v2, 0);

  objc_msgSend(v3, sel_setDelegate_, v0);
  objc_msgSend(v3, sel_setModalPresentationStyle_, 0);
  objc_msgSend(v3, sel_setAllowsMultipleSelection_, 0);
  objc_msgSend(v3, sel_setShouldShowFileExtensions_, 1);
  objc_msgSend(v0, sel_presentViewController_animated_completion_, v3, 1, 0);

}

void sub_23A9EEBCC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  uint64_t (*v15)();
  double v16;
  char v17;
  double v18;
  void *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  _QWORD aBlock[3];
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;
  __int128 v29[2];

  v1 = v0;
  v2 = sub_23AA32E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession]
     + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9AFB80(v9, (uint64_t)v8);
  v10 = *((_QWORD *)v8 + 1);
  if (!*(_QWORD *)(v10 + 16))
  {
    swift_retain();
    goto LABEL_8;
  }
  v11 = (uint64_t)&v8[*(int *)(v6 + 36)];
  swift_retain();
  v12 = sub_23AA1D250(v11);
  if ((v13 & 1) == 0)
  {
LABEL_8:
    sub_23AA335A8();
    __break(1u);
    return;
  }
  sub_23A963A14(*(_QWORD *)(v10 + 56) + 40 * v12, (uint64_t)v29);
  sub_23A963B98(v29, (uint64_t)aBlock);
  sub_23A9AFBC4((uint64_t)v8);
  v14 = v26;
  v15 = v27;
  sub_23A96545C(aBlock, (uint64_t)v26);
  (*((void (**)(void *, uint64_t (*)()))v15 + 2))(v14, v15);
  v16 = COERCE_DOUBLE(sub_23A9C3A50((uint64_t)v5));
  LOBYTE(v14) = v17;
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23A963B3C((uint64_t)aBlock);
  if ((v14 & 1) != 0)
    v18 = 3.0;
  else
    v18 = v16;
  v19 = (void *)objc_opt_self();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v1;
  v27 = sub_23A9F0CE0;
  v28 = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A970F10;
  v26 = &unk_250BC4998;
  v21 = _Block_copy(aBlock);
  v22 = v1;
  swift_release();
  v23 = objc_msgSend(v19, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v21, v18);
  _Block_release(v21);
  v24 = *(void **)&v22[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayTimer];
  *(_QWORD *)&v22[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayTimer] = v23;

}

void sub_23A9EEEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  id v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  int v79;
  id v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  id v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  char v91;
  uint64_t v92;
  id v93;
  char v94;
  id v95;
  char v96;
  uint64_t v97;
  id v98;
  char v99;
  id v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  __int128 v121[2];
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  int v131;
  char v132;

  v1 = v0;
  v120 = sub_23AA32E1C();
  v118 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v119 = (char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for FMFindingSessionState();
  v3 = MEMORY[0x24BDAC7A8](v117);
  v114 = (uint64_t)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v115 = (uint64_t)&v114 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v116 = (uint64_t)&v114 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v114 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v114 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v114 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v114 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v114 - v21;
  v23 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton);
  sub_23A968488(0, &qword_2569D7E78);
  v24 = v23;
  v25 = sub_23AA3338C();

  if ((v25 & 1) != 0)
  {
    v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_23A9AFB80(v26, (uint64_t)v22);
    v27 = *((_QWORD *)v22 + 1);
    if (!*(_QWORD *)(v27 + 16))
      goto LABEL_61;
    v28 = (uint64_t)&v22[*(int *)(v117 + 36)];
    swift_retain();
    v29 = sub_23AA1D250(v28);
    if ((v30 & 1) != 0)
    {
      sub_23A963A14(*(_QWORD *)(v27 + 56) + 40 * v29, (uint64_t)&v122);
      sub_23A963B98(&v122, (uint64_t)&v125);
      sub_23A9AFBC4((uint64_t)v22);
      v31 = *((_QWORD *)&v126 + 1);
      v32 = v127;
      sub_23A96545C(&v125, *((uint64_t *)&v126 + 1));
      v33 = (uint64_t)v119;
      (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
      sub_23A9C3A50(v33);
LABEL_9:
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v33, v120);
      v43 = &v125;
LABEL_20:
      sub_23A963B3C((uint64_t)v43);
      return;
    }
    goto LABEL_62;
  }
  v34 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton);
  v35 = sub_23AA3338C();

  if ((v35 & 1) != 0)
  {
    v36 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_23A9AFB80(v36, (uint64_t)v20);
    v37 = *((_QWORD *)v20 + 1);
    if (!*(_QWORD *)(v37 + 16))
      goto LABEL_61;
    v38 = (uint64_t)&v20[*(int *)(v117 + 36)];
    swift_retain();
    v39 = sub_23AA1D250(v38);
    if ((v40 & 1) != 0)
    {
      sub_23A963A14(*(_QWORD *)(v37 + 56) + 40 * v39, (uint64_t)&v122);
      sub_23A963B98(&v122, (uint64_t)&v125);
      sub_23A9AFBC4((uint64_t)v20);
      v41 = *((_QWORD *)&v126 + 1);
      v42 = v127;
      sub_23A96545C(&v125, *((uint64_t *)&v126 + 1));
      v33 = (uint64_t)v119;
      (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
      sub_23A9C3A5C(v33);
      goto LABEL_9;
    }
    while (1)
    {
LABEL_62:
      sub_23AA335A8();
      __break(1u);
LABEL_61:
      swift_retain();
    }
  }
  v44 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_disconnectedStateButton);
  v45 = sub_23AA3338C();

  if ((v45 & 1) != 0)
  {
    v46 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_23A9AFB80(v46, (uint64_t)v17);
    v47 = *((_QWORD *)v17 + 1);
    if (!*(_QWORD *)(v47 + 16))
      goto LABEL_61;
    v48 = (uint64_t)&v17[*(int *)(v117 + 36)];
    swift_retain();
    v49 = sub_23AA1D250(v48);
    if ((v50 & 1) == 0)
      goto LABEL_62;
    v129 = 0u;
    v130 = 0u;
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    v132 = 0;
    v131 = 0x4000000;
    sub_23A963A14(*(_QWORD *)(v47 + 56) + 40 * v49, (uint64_t)v121);
    sub_23A963B98(v121, (uint64_t)&v122);
    v51 = (uint64_t)v17;
    goto LABEL_14;
  }
  v55 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_connectingStateButton);
  v56 = sub_23AA3338C();

  if ((v56 & 1) != 0)
  {
    v57 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_23A9AFB80(v57, (uint64_t)v14);
    v58 = *((_QWORD *)v14 + 1);
    if (!*(_QWORD *)(v58 + 16))
      goto LABEL_61;
    v59 = (uint64_t)&v14[*(int *)(v117 + 36)];
    swift_retain();
    v60 = sub_23AA1D250(v59);
    if ((v61 & 1) == 0)
      goto LABEL_62;
    v129 = 0u;
    v130 = 0u;
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    v132 = 0;
    v131 = 83886080;
    sub_23A963A14(*(_QWORD *)(v58 + 56) + 40 * v60, (uint64_t)v121);
    sub_23A963B98(v121, (uint64_t)&v122);
    sub_23A9AFBC4((uint64_t)v14);
    v62 = v123;
    v63 = v124;
    sub_23A96545C(&v122, v123);
    v54 = (uint64_t)v119;
    (*(void (**)(uint64_t, uint64_t))(v63 + 16))(v62, v63);
    sub_23A9C3948(&v125, v54);
LABEL_19:
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v54, v120);
    v43 = &v122;
    goto LABEL_20;
  }
  v64 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_coldStateButton);
  v65 = sub_23AA3338C();

  if ((v65 & 1) != 0)
  {
    v66 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_23A9AFB80(v66, (uint64_t)v11);
    v67 = *((_QWORD *)v11 + 1);
    if (!*(_QWORD *)(v67 + 16))
      goto LABEL_61;
    v68 = (uint64_t)&v11[*(int *)(v117 + 36)];
    swift_retain();
    v69 = sub_23AA1D250(v68);
    if ((v70 & 1) == 0)
      goto LABEL_62;
    v129 = 0u;
    v130 = 0u;
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    v131 = 50331648;
    v132 = 3;
    sub_23A963A14(*(_QWORD *)(v67 + 56) + 40 * v69, (uint64_t)v121);
    sub_23A963B98(v121, (uint64_t)&v122);
    v51 = (uint64_t)v11;
    goto LABEL_14;
  }
  v71 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmerStateButton);
  v72 = sub_23AA3338C();

  if ((v72 & 1) != 0)
  {
    v73 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    v74 = v116;
    sub_23A9AFB80(v73, v116);
    v75 = *(_QWORD *)(v74 + 8);
    if (!*(_QWORD *)(v75 + 16))
      goto LABEL_61;
    v76 = v74 + *(int *)(v117 + 36);
    swift_retain();
    v77 = sub_23AA1D250(v76);
    if ((v78 & 1) == 0)
      goto LABEL_62;
    v129 = 0u;
    v130 = 0u;
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    v132 = 3;
    v79 = 50397184;
LABEL_38:
    v131 = v79;
    sub_23A963A14(*(_QWORD *)(v75 + 56) + 40 * v77, (uint64_t)v121);
    sub_23A963B98(v121, (uint64_t)&v122);
    v51 = v74;
LABEL_14:
    sub_23A9AFBC4(v51);
    v52 = v123;
    v53 = v124;
    sub_23A96545C(&v122, v123);
    v54 = (uint64_t)v119;
    (*(void (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
    sub_23A9C3948(&v125, v54);
    goto LABEL_19;
  }
  v80 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hotStateButton);
  v81 = sub_23AA3338C();

  if ((v81 & 1) != 0)
  {
    v82 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    v74 = v115;
    sub_23A9AFB80(v82, v115);
    v75 = *(_QWORD *)(v74 + 8);
    if (!*(_QWORD *)(v75 + 16))
      goto LABEL_61;
    v83 = v74 + *(int *)(v117 + 36);
    swift_retain();
    v77 = sub_23AA1D250(v83);
    if ((v84 & 1) == 0)
      goto LABEL_62;
    v129 = 0u;
    v130 = 0u;
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    v132 = 3;
    v79 = 50462720;
    goto LABEL_38;
  }
  v85 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_foundStateButton);
  v86 = sub_23AA3338C();

  if ((v86 & 1) != 0)
  {
    v87 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_mockSession)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    v74 = v114;
    sub_23A9AFB80(v87, v114);
    v75 = *(_QWORD *)(v74 + 8);
    if (!*(_QWORD *)(v75 + 16))
      goto LABEL_61;
    v88 = v74 + *(int *)(v117 + 36);
    swift_retain();
    v77 = sub_23AA1D250(v88);
    if ((v89 & 1) == 0)
      goto LABEL_62;
    v129 = 0u;
    v130 = 0u;
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    v132 = 3;
    v79 = 50528256;
    goto LABEL_38;
  }
  v90 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton);
  v91 = sub_23AA3338C();

  if ((v91 & 1) != 0)
  {
    v92 = MEMORY[0x23B85DBF0](v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_delegate);
    if (v92)
    {
      objc_msgSend(*(id *)(v92 + OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewContainer), sel_setHidden_, 1);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v93 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_loadButton);
    v94 = sub_23AA3338C();

    if ((v94 & 1) != 0)
    {
      sub_23A9EEAEC();
    }
    else
    {
      v95 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_saveButton);
      v96 = sub_23AA3338C();

      if ((v96 & 1) != 0)
      {
        if (MEMORY[0x23B85DBF0](v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_delegate))
        {
          v97 = swift_bridgeObjectRetain();
          sub_23A9EDEA4(v97);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v98 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton);
        v99 = sub_23AA3338C();

        if ((v99 & 1) != 0)
        {
          if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_middleStackView), sel_isHidden))sub_23A9EE4E8();
          else
            sub_23A9EE180();
        }
        else
        {
          v100 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton);
          v101 = sub_23AA3338C();

          if ((v101 & 1) != 0)
          {
            v102 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayTimer;
            v103 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayTimer);
            v104 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 32.0);
            if (v103)
            {
              v105 = (void *)sub_23AA32FB4();
              v106 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v105, v104);

              if (v106)
              {
                v107 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
                v108 = objc_msgSend(v106, sel_imageWithTintColor_renderingMode_, v107, 1);

              }
              else
              {
                v108 = 0;
              }

              objc_msgSend(v100, sel_setImage_forState_, v108, 0);
              objc_msgSend(*(id *)(v1 + v102), sel_invalidate);
              v113 = *(void **)(v1 + v102);
              *(_QWORD *)(v1 + v102) = 0;

            }
            else
            {
              v109 = (void *)sub_23AA32FB4();
              v110 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v109, v104);

              if (v110)
              {
                v111 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
                v112 = objc_msgSend(v110, sel_imageWithTintColor_renderingMode_, v111, 1);

              }
              else
              {
                v112 = 0;
              }

              objc_msgSend(v100, sel_setImage_forState_, v112, 0);
              sub_23A9EEBCC();
            }
          }
        }
      }
    }
  }
}

