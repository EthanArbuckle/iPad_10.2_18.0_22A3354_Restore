id sub_23A9EFE78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingDebugViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingDebugViewController()
{
  return objc_opt_self();
}

uint64_t sub_23A9F00A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v2);
  if (result)
  {
    v4 = (char *)result;
    v5 = sub_23AA32D50();
    v7 = v6;
    sub_23AA32C60();
    swift_allocObject();
    sub_23AA32C54();
    sub_23A9F0C34();
    sub_23AA32C48();
    swift_release();
    if (MEMORY[0x23B85DBF0](&v4[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_delegate]))
    {
      v8 = swift_bridgeObjectRetain();
      sub_23A9D4794(v8);
      swift_unknownObjectRelease();
    }
    sub_23A9F0C78(v5, v7);

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23A9F01E0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD3B0]), sel_init);
  v3 = (void *)sub_23AA32FB4();
  objc_msgSend(v2, sel_setTitle_, v3);

  swift_getErrorValue();
  sub_23AA3377C();
  v4 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setMessage_, v4);

  v5 = (void *)sub_23AA32FB4();
  v6 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v5, 0, 0);

  objc_msgSend(v2, sel_addAction_, v6);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);

}

uint64_t sub_23A9F0320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23AA32D44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23AA32D2C();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_23A9F041C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_backgroundLayer;
  v3 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 4);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, v3);

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_stackView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v6 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_topStackView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v7 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_middleStackView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v8 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_bottomStackView;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v9 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayButton;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v10 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_nextStateButton;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v11 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_prevStateButton;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v12 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_disconnectedStateButton;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v13 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_connectingStateButton;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v14 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_coldStateButton;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v15 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmStateButton;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v16 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_warmerStateButton;
  *(_QWORD *)&v1[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v17 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hotStateButton;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v18 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_foundStateButton;
  *(_QWORD *)&v1[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v19 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringFactorSlider;
  v20 = (objc_class *)type metadata accessor for FMFindingDebugSlider();
  v21 = objc_allocWithZone(v20);
  *(_QWORD *)&v1[v19] = sub_23AA14AD8(0x63614620676E6952, 0xEB00000000726F74, 0.0, 6.0, 0.01);
  v22 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_ringOpacitySlider;
  v23 = objc_allocWithZone(v20);
  *(_QWORD *)&v1[v22] = sub_23AA14AD8(0x61704F20676E6952, 0xEC00000079746963, 0.0, 1.0, 0.01);
  v24 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hapticForceSlider;
  v25 = objc_allocWithZone(v20);
  *(_QWORD *)&v1[v24] = sub_23AA14AD8(0x4620636974706148, 0xEC0000006563726FLL, 0.0, 1.0, 0.01);
  v26 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_dotScaleSlider;
  v27 = objc_allocWithZone(v20);
  *(_QWORD *)&v1[v26] = sub_23AA14AD8(0xD000000000000010, 0x800000023AA3FE70, 0.0, 1.0, 0.01);
  v28 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_pulsePeriodSlider;
  v29 = objc_allocWithZone(v20);
  *(_QWORD *)&v1[v28] = sub_23AA14AD8(0x65502065736C7550, 0xEC000000646F6972, 0.0, 2.0, 0.001);
  v30 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_saveButton;
  *(_QWORD *)&v1[v30] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v31 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_loadButton;
  *(_QWORD *)&v1[v31] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v32 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_closeButton;
  *(_QWORD *)&v1[v32] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  v33 = OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_hideButton;
  *(_QWORD *)&v1[v33] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_autoplayTimer] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_23AA335A8();
  __break(1u);
}

void sub_23A9F0894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23A964084((uint64_t *)&unk_2569D66C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32D44();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_23A9F0BA0((uint64_t)v4);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_initWithFilePresenter_, 0);
  v10 = sub_23AA32D14();
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = sub_23A9F0C04;
  v12[3] = v11;
  aBlock[4] = sub_23A968410;
  aBlock[5] = v12;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23A9F0320;
  aBlock[3] = &unk_250BC4948;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v9, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v10, 0, aBlock, v13);
  _Block_release(v13);

  v14 = aBlock[0];
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v10 & 1) != 0)
    __break(1u);
  if (v14)
  {
    v15 = v14;
    sub_23A9F01E0();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  }
  swift_release();

}

uint64_t sub_23A9F0BA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084((uint64_t *)&unk_2569D66C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A9F0BE0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A9F0C04(uint64_t a1)
{
  uint64_t v1;

  return sub_23A9F00A0(a1, v1);
}

uint64_t sub_23A9F0C0C()
{
  return swift_deallocObject();
}

uint64_t sub_23A9F0C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9F0C2C()
{
  return swift_release();
}

unint64_t sub_23A9F0C34()
{
  unint64_t result;

  result = qword_2569D7E70;
  if (!qword_2569D7E70)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA395E4, &type metadata for FMFindingExperienceConfiguration);
    atomic_store(result, (unint64_t *)&qword_2569D7E70);
  }
  return result;
}

uint64_t sub_23A9F0C78(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23A9F0CBC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A9F0CE0()
{
  return sub_23A9EEBCC();
}

unint64_t sub_23A9F0D00()
{
  unint64_t result;

  result = qword_2569D7E88;
  if (!qword_2569D7E88)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA395BC, &type metadata for FMFindingExperienceConfiguration);
    atomic_store(result, (unint64_t *)&qword_2569D7E88);
  }
  return result;
}

id sub_23A9F0D4C(double a1)
{
  char *v1;
  char *v2;
  double *v3;
  id result;
  float64x2_t v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  _BYTE v14[40];
  float64x2_t v15[2];
  char v16;

  v2 = v1;
  if ((v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction + 32] & 1) == 0
    && (v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 288] & 1) == 0)
  {
    v3 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction];
    a1 = pow(a1 * a1 * a1 * v3[3]+ a1 * a1 * ((1.0 - a1) * (v3[2] * 3.0))+ (1.0 - a1) * ((1.0 - a1) * (1.0 - a1)) * *v3+ (1.0 - a1) * (1.0 - a1) * (v3[1] * 3.0) * a1, *(long double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 280]);
  }
  v13 = a1;
  sub_23A9C1228((uint64_t)v14, a1);
  result = (id)sub_23A9F1744((uint64_t)v14, (uint64_t)v15);
  if ((v16 & 1) == 0)
  {
    v5 = v15[0];
    if ((v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor + 8] & 1) == 0
      && (v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset + 16] & 1) == 0)
    {
      v5 = vaddq_f64(v15[0], vmulq_n_f64(*(float64x2_t *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset], v13* (1.0- *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor])));
    }
    if ((v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition + 16] & 1) != 0
      || (v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor + 8] & 1) != 0)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode], sel_setPosition_, *(_OWORD *)&v5);
      v6 = v13;
      v7 = 1.0 - v13;
    }
    else
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode], sel_setPosition_, vaddq_f64(vmulq_n_f64(v5, 1.0 - *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor]), vmulq_n_f64(vaddq_f64(vmulq_n_f64(v15[1], 1.0 - v13), vmulq_n_f64(*(float64x2_t *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition], v13)), *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor])));
      v7 = 1.0 - v13;
      v6 = v13;
    }
    v12 = v7;
    v8 = v7 * *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_nonConformedBrightness]
       + v6 * *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedBrightness];
    v9 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_renderingColor];
    v10 = *(id *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode];
    v11 = v9;
    sub_23AA14D9C(v11, v8);

    return objc_msgSend(v2, sel_setAlpha_, v12 * *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 104]+ v13 * *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 96]);
  }
  return result;
}

id sub_23A9F0FCC(double a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;

  v2 = 1.0;
  v3 = 1.0 - a1;
  v4 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_maxScaleFactor) * a1
     + (1.0 - a1) * *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_minScaleFactor);
  v5 = v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style;
  v6 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 192);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 200))
    v6 = 1.0;
  v7 = *(double *)(v5 + 208);
  if (*(_BYTE *)(v5 + 216))
    v7 = 1.0;
  v8 = *(double *)(v5 + 224);
  if (*(_BYTE *)(v5 + 232))
    v8 = 1.0;
  if (!*(_BYTE *)(v5 + 248))
    v2 = *(double *)(v5 + 240);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_useAlternateScaling) == 1
    && (*(_BYTE *)(v5 + 264) & 1) == 0)
  {
    v9 = *(double *)(v5 + 256);
    v10 = 1.0;
    if (v6 > 1.0)
    {
      v6 = v6 * v9;
      if (v7 <= 1.0)
      {
LABEL_13:
        if (v8 <= 1.0)
          goto LABEL_14;
        goto LABEL_23;
      }
    }
    else if (v7 <= 1.0)
    {
      goto LABEL_13;
    }
    v7 = v7 * v9;
    if (v8 <= 1.0)
    {
LABEL_14:
      if (v2 <= 1.0)
      {
LABEL_16:
        v2 = v2 * v10;
        goto LABEL_17;
      }
LABEL_15:
      v10 = *(double *)(v5 + 256);
      goto LABEL_16;
    }
LABEL_23:
    v8 = v8 * v9;
    if (v2 <= 1.0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_17:
  v11 = v3 * v7 + v2 * a1;
  v12 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode), sel_setXScale_, v4 * (v3 * v6 + v8 * a1));
  objc_msgSend(*(id *)(v1 + v12), sel_setYScale_, v4 * v11);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_experienceType) == 1)
  {
    objc_msgSend(*(id *)(v1 + v12), sel_size);
    v14 = v13;
    objc_msgSend(*(id *)(v1 + v12), sel_xScale);
    v16 = v14 / v15;
    objc_msgSend(*(id *)(v1 + v12), sel_size);
    v18 = (v17 - v16) * 0.5;
    v19 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode);
  }
  else
  {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode);
    v18 = 0.0;
  }
  return objc_msgSend(v19, sel_setPosition_, v18, 0.0);
}

void sub_23A9F11D0(double a1)
{
  char *v1;
  char *v2;
  _BYTE *v4;
  _BYTE *v5;
  double *v6;
  double *v7;
  double *v8;
  double *v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  double *v14;
  _BYTE *v15;
  _BYTE *v16;
  double v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  double *v28;
  double v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  double v35;
  uint64_t v36;
  double v37;
  double *v39;
  double *v40;
  uint64_t v42;

  v2 = v1;
  if (v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceScatterOffset] != 1)
    goto LABEL_23;
  v4 = *(_BYTE **)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring];
  if (!v4)
    goto LABEL_23;
  v5 = *(_BYTE **)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring];
  if (!v5)
    goto LABEL_23;
  v6 = (double *)&v4[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  swift_beginAccess();
  v7 = (double *)&v4[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  if (v6[35] + *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40] == 1.79769313e308)
    goto LABEL_23;
  v8 = (double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  swift_beginAccess();
  v9 = (double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  if (v8[35] + *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40] == 1.79769313e308)
    goto LABEL_23;
  v10 = &v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style];
  if ((v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 136] & 1) != 0 || (v10[120] & 1) != 0)
    goto LABEL_23;
  v42 = *((_QWORD *)v10 + 16);
  v11 = *((double *)v10 + 14);
  sub_23A982B4C(a1);
  v4[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 1;
  sub_23A982B4C(a1);
  v5[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 1;
  v12 = *v6 + *v7;
  if (vabdd_f64(v6[35] + v7[5], v12) <= *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold])
    v12 = v6[35] + v7[5];
  v13 = *v8 + *v9;
  if (vabdd_f64(v8[35] + v9[5], v13) <= *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold])
    v13 = v8[35] + v9[5];
  v14 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
  *v14 = v12;
  v14[1] = v13;
  *((_BYTE *)v14 + 16) = 0;
  if ((v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) != 0)
  {
    v15 = v4;
    v16 = v5;
  }
  else
  {
    v17 = *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
    v18 = v4;
    v19 = v5;
    sub_23A9F0D4C(v17);
  }
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbScatterRandomOffsetFrameCounter];
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_54;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbScatterRandomOffsetFrameCounter] = v22;
  if (!v42)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v22 == 0x8000000000000000 && v42 == -1)
    goto LABEL_55;
  if (!(v22 % v42))
  {
    v23 = fmax(v11 * *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralDiskRadius], 1.0);
    if (v23 >= 0.0)
    {
      sub_23A9F6FC8(-v23, v23);
      v25 = v24;
      sub_23A9F6FC8(-v23, v23);
      sub_23A9C0C94(1, v25, v26);
      goto LABEL_22;
    }
LABEL_56:
    __break(1u);
    return;
  }
LABEL_22:

LABEL_23:
  if (v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceHomingFactor] == 1)
  {
    v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring];
    if (v27)
    {
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(a1);
        *(_BYTE *)(v27 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v28 = (double *)(v27 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v29 = *v28 + *(double *)(v27 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v28[35] + *(double *)(v27 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v29) <= *(double *)(v27 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v29 = v28[35] + *(double *)(v27 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        v30 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
        *v30 = v29;
        *((_BYTE *)v30 + 8) = 0;
      }
    }
  }
  v31 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_headingSpring;
  v32 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_headingSpring];
  if (!sub_23A9CCAA0()
    && *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction])
  {
    sub_23A982B4C(a1);
    *(_BYTE *)(v32 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v33 = *(_QWORD *)&v2[v31];
    v34 = (double *)(v33 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    v35 = *v34 + *(double *)(v33 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v34[35] + *(double *)(v33 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v35) <= *(double *)(v33 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
      v35 = v34[35] + *(double *)(v33 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading] = v35;
    objc_msgSend(v2, sel_setZRotation_, v35 / 180.0 * 3.14159265);
  }
  v36 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_noiseSubSpring];
  sub_23A982B4C(a1);
  *(_BYTE *)(v36 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  if ((v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) == 0)
  {
    v37 = *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
    if (v37 <= 0.0 && v37 <= *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 56])
    {
      sub_23A9C0654();
      return;
    }
    if (v37 > 0.0)
    {
      sub_23A9C0808();
      return;
    }
    if (v37 == 1.0)
    {
      v39 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
      v40 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
      if ((v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16] & 1) != 0)
      {
        if ((v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition + 16] & 1) == 0)
LABEL_52:
          sub_23A9C0B7C();
      }
      else
      {
        if ((v2[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition + 16] & 1) != 0)
          goto LABEL_52;
        if (*v39 != *v40 || v39[1] != v40[1])
          goto LABEL_52;
      }
    }
  }
}

uint64_t sub_23A9F1744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D7EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static FMFindingType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMFindingType.hash(into:)()
{
  return sub_23AA337DC();
}

uint64_t FMFindingTechnology.hash(into:)()
{
  __int16 *v0;

  if (*v0 < 0)
  {
    sub_23AA337DC();
    sub_23AA337E8();
    return sub_23AA337DC();
  }
  else
  {
    sub_23AA337DC();
    sub_23AA337DC();
    return sub_23AA337E8();
  }
}

uint64_t FMFindingTechnology.hashValue.getter()
{
  __int16 *v0;
  int v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23AA337DC();
  if (v1 < 0)
  {
    sub_23AA337E8();
    sub_23AA337DC();
  }
  else
  {
    sub_23AA337DC();
    sub_23AA337E8();
  }
  return sub_23AA33800();
}

uint64_t sub_23A9F18DC()
{
  __int16 *v0;

  if (*v0 < 0)
  {
    sub_23AA337DC();
    sub_23AA337E8();
    return sub_23AA337DC();
  }
  else
  {
    sub_23AA337DC();
    sub_23AA337DC();
    return sub_23AA337E8();
  }
}

uint64_t sub_23A9F1948()
{
  __int16 *v0;
  int v1;

  v1 = *v0;
  sub_23AA337D0();
  sub_23AA337DC();
  if (v1 < 0)
  {
    sub_23AA337E8();
    sub_23AA337DC();
  }
  else
  {
    sub_23AA337DC();
    sub_23AA337E8();
  }
  return sub_23AA33800();
}

uint64_t sub_23A9F19E0(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v1 << 6);
LABEL_5:
    if (*(__int16 *)(*(_QWORD *)(result + 48) + 2 * v8) < 0)
      return 1;
  }
  v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v9 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v9);
  ++v1;
  if (v10)
    goto LABEL_24;
  v1 = v9 + 1;
  if (v9 + 1 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_24;
  v1 = v9 + 2;
  if (v9 + 2 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_24;
  v1 = v9 + 3;
  if (v9 + 3 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_24;
  v1 = v9 + 4;
  if (v9 + 4 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_24:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_5;
  }
  v11 = v9 + 5;
  if (v11 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v6)
      return 0;
    v10 = *(_QWORD *)(v2 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s11FMFindingUI0A10TechnologyO2eeoiySbAC_ACtFZ_0(__int16 *a1, unsigned __int16 *a2)
{
  int v2;
  int v3;

  v2 = (unsigned __int16)*a1;
  v3 = *a2;
  if (*a1 < 0)
  {
    if ((v3 & 0x8000) != 0 && ((v2 & 1) == 0) != (v3 & 1))
      return ((v3 ^ v2) & 0x7F00) == 0;
  }
  else if ((v3 & 0x8000) == 0 && v3 == v2)
  {
    return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
  }
  return 0;
}

unint64_t sub_23A9F1B78()
{
  unint64_t result;

  result = qword_2569D7EB8;
  if (!qword_2569D7EB8)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMFindingType, &type metadata for FMFindingType);
    atomic_store(result, (unint64_t *)&qword_2569D7EB8);
  }
  return result;
}

unint64_t sub_23A9F1BC0()
{
  unint64_t result;

  result = qword_2569D7EC0;
  if (!qword_2569D7EC0)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMExperienceType, &type metadata for FMExperienceType);
    atomic_store(result, (unint64_t *)&qword_2569D7EC0);
  }
  return result;
}

unint64_t sub_23A9F1C08()
{
  unint64_t result;

  result = qword_2569D7EC8;
  if (!qword_2569D7EC8)
  {
    result = MEMORY[0x23B85DA58](&protocol conformance descriptor for FMFindingTechnology, &type metadata for FMFindingTechnology);
    atomic_store(result, (unint64_t *)&qword_2569D7EC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFindingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A9F1C98 + 4 * byte_23AA39C95[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A9F1CCC + 4 * asc_23AA39C90[v4]))();
}

uint64_t sub_23A9F1CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9F1CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9F1CDCLL);
  return result;
}

uint64_t sub_23A9F1CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9F1CF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A9F1CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9F1CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingType()
{
  return &type metadata for FMFindingType;
}

uint64_t storeEnumTagSinglePayload for FMExperienceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A9F1D64 + 4 * byte_23AA39C9F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A9F1D98 + 4 * byte_23AA39C9A[v4]))();
}

uint64_t sub_23A9F1D98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9F1DA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A9F1DA8);
  return result;
}

uint64_t sub_23A9F1DB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A9F1DBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A9F1DC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A9F1DC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMExperienceType()
{
  return &type metadata for FMExperienceType;
}

_WORD *initializeBufferWithCopyOfBuffer for FMFindingTechnology(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingTechnology(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xFFF)
    goto LABEL_17;
  if (a2 + 61441 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 61441 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 61441;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 61441;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 61441;
  }
LABEL_17:
  v6 = ((*a1 >> 15) | (2 * ((*a1 >> 4) & 0x7C0 | (*a1 >> 2)))) ^ 0xFFF;
  if (v6 >= 0xFFE)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for FMFindingTechnology(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 61441 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 61441 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFFE)
    return ((uint64_t (*)(void))((char *)&loc_23A9F1EE8 + 4 * byte_23AA39CA9[v4]))();
  *a1 = a2 - 4095;
  return ((uint64_t (*)(void))((char *)sub_23A9F1F1C + 4 * byte_23AA39CA4[v4]))();
}

uint64_t sub_23A9F1F1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23A9F1F24(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23A9F1F2CLL);
  return result;
}

uint64_t sub_23A9F1F4C(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23A9F1F54);
  v2 = ((-a2 >> 1) & 0x7FF) - (a2 << 11);
  *(_WORD *)result = (16 * v2) & 0xFC00 | (4 * (v2 & 0x3F));
  return result;
}

uint64_t sub_23A9F1F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23A9F1F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23A9F1F6C(unsigned __int16 *a1)
{
  return *a1 >> 15;
}

_WORD *sub_23A9F1F78(_WORD *result)
{
  *result &= ~0x8000u;
  return result;
}

_WORD *sub_23A9F1F88(_WORD *result, __int16 a2)
{
  *result = *result & 0x303 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for FMFindingTechnology()
{
  return &type metadata for FMFindingTechnology;
}

void sub_23A9F1FB4(uint64_t a1)
{
  sub_23A9F1FD4(a1, 0, &qword_2569E0530);
}

void sub_23A9F1FC4(uint64_t a1)
{
  sub_23A9F1FD4(a1, 1, &qword_2569E0538);
}

void sub_23A9F1FD4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v5, sel_setNumberStyle_, 1);
  objc_msgSend(v5, sel_setMaximumFractionDigits_, a2);

  *a3 = v5;
}

uint64_t sub_23A9F2048(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a5 + 24))(a1, a2 & 1);
}

void sub_23A9F2054(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  double v20;
  char *v21;
  double v22;
  double v23;
  double v24;
  long double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  id v35;
  void *ObjCClassFromMetadata;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  unint64_t v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  unint64_t v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  objc_class *v101;
  char *v102;
  void *v103;
  id v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void *v111;
  uint64_t v112;
  id v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  BOOL v120;
  uint64_t v121;
  void *v122;
  id v123;
  id v124;
  char *v125;
  id v126;
  id v127;
  void *v128;
  void *v129;
  void *v130;
  id v131;
  id v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  id v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  unint64_t v144;
  double *v145;
  uint64_t v146;
  id v147;
  double v148;
  id v149;
  _BYTE *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  id v155;
  id v156;
  void *v157;
  uint64_t v159;
  id v160;
  double v161;
  unsigned int v162;
  double v163;
  uint64_t v164;
  char *v165;
  void *v166;
  unint64_t v167;
  unsigned __int8 v168;
  _QWORD v169[7];

  v3 = v2;
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_standardUserDefaults);
  v162 = objc_msgSend(v6, sel_fmpfDebugMode);

  if ((a2 & 1) != 0)
  {
    a1 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor];
    LODWORD(v157) = v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor + 8];
  }
  else
  {
    LODWORD(v157) = 0;
  }
  v7 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDebugNode];
  v8 = objc_msgSend(v7, sel_children);
  sub_23A968488(0, (unint64_t *)&qword_2569D5998);
  v9 = sub_23AA330B0();

  v155 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode];
  v10 = objc_msgSend(v155, sel_children);
  v11 = sub_23AA330B0();

  v169[3] = v9;
  sub_23AA20988(v11);
  v12 = v9;
  v13 = (unint64_t *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes];
  swift_beginAccess();
  v14 = *v13;
  if (*v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_23AA335B4();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_23AA33734();
    v15 = v14;
  }
  swift_bridgeObjectRelease();
  v169[0] = v12;
  sub_23AA20988(v15);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_23AA335C0();
    if (!v16)
      goto LABEL_16;
  }
  else
  {
    v16 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_16;
  }
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_108;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
      v18 = (id)MEMORY[0x23B85D0B0](i, v12);
    else
      v18 = *(id *)(v12 + 8 * i + 32);
    v19 = v18;
    objc_msgSend(v18, sel_removeFromParent);

  }
LABEL_16:
  v166 = v5;
  swift_bridgeObjectRelease_n();
  *v13 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v20 = *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_sceneSize];
  if (*(double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_sceneSize + 8] < v20)
    v20 = *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_sceneSize + 8];
  v21 = &v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style];
  v22 = *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style];
  if (v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 8])
    v22 = 1.0;
  v23 = v20 * v22;
  v24 = *((double *)v21 + 2);
  v25 = *((double *)v21 + 3);
  v26 = v20 * v22 - v24;
  v27 = v24 + 2.22044605e-16;
  v154 = &v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style];
  if (v24 + 2.22044605e-16 <= v20 * v22 * *((double *)v21 + 4))
    v27 = v23 * *((double *)v21 + 4);
  v148 = *((double *)v21 + 2);
  v163 = v27 * 0.5;
  v28 = v27 * 0.5 + v24 * -0.5;
  v29 = 0.0 - v28;
  v161 = v28 / tan(v25);
  v30 = v26 * 0.5 - v161;
  v31 = v28 + 0.0;
  v32 = cos(v25);
  objc_msgSend(v155, sel_addChild_, v7);
  v33 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasPatternSpinesNode];
  objc_msgSend(v7, sel_addChild_, v33);
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  v150 = v3;
  objc_msgSend(v34, sel_moveToPoint_, 0.0, v26 * -0.5);
  objc_msgSend(v34, sel_addLineToPoint_, 0.0, v26 * 0.5);
  objc_msgSend(v34, sel_closePath);
  type metadata accessor for FMPFSKShapeNode();
  v143 = v34;
  v35 = objc_msgSend(v34, sel_CGPath);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v37 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v35);

  v38 = (void *)objc_opt_self();
  v39 = v37;
  v40 = objc_msgSend(v38, sel_whiteColor);
  objc_msgSend(v39, sel_setStrokeColor_, v40);

  objc_msgSend(v39, sel_setLineCap_, 1);
  v41 = qword_2569D4B18;
  v42 = v39;
  if (v41 != -1)
    swift_once();
  objc_msgSend(v42, sel_setAlpha_, *(double *)&qword_2569E00C8);

  v142 = v42;
  objc_msgSend(v33, sel_addChild_, v42);
  v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v43, sel_moveToPoint_, v29, v30);
  objc_msgSend(v43, sel_addLineToPoint_, 0.0, v26 * 0.5);
  objc_msgSend(v43, sel_closePath);
  v141 = v43;
  v44 = objc_msgSend(v43, sel_CGPath);
  v45 = v33;
  v46 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v44);

  v47 = v46;
  v48 = objc_msgSend(v38, sel_whiteColor);
  objc_msgSend(v47, sel_setStrokeColor_, v48);

  objc_msgSend(v47, sel_setLineCap_, 1);
  objc_msgSend(v47, sel_setAlpha_, *(double *)&qword_2569E00C8);
  v140 = v47;
  objc_msgSend(v45, sel_addChild_, v47);
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v49, sel_moveToPoint_, v31, v30);
  objc_msgSend(v49, sel_addLineToPoint_, 0.0, v26 * 0.5);
  objc_msgSend(v49, sel_closePath);
  v139 = v49;
  v50 = objc_msgSend(v49, sel_CGPath);
  v51 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v50);

  v52 = v51;
  v53 = objc_msgSend(v38, sel_whiteColor);
  objc_msgSend(v52, sel_setStrokeColor_, v53);

  objc_msgSend(v52, sel_setLineCap_, 1);
  objc_msgSend(v52, sel_setAlpha_, *(double *)&qword_2569E00C8);
  v147 = v45;
  v138 = v52;
  objc_msgSend(v45, sel_addChild_, v52);
  sub_23A968488(0, (unint64_t *)&unk_2569D7BE0);
  v137 = sub_23A9A0584(0.0, 0.0, v163 + v163, v23);
  v54 = objc_msgSend(v137, sel_CGPath);
  v55 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v54);

  v56 = v55;
  v57 = objc_msgSend(v38, sel_whiteColor);
  objc_msgSend(v56, sel_setStrokeColor_, v57);

  objc_msgSend(v56, sel_setAlpha_, *(double *)&qword_2569E00C8);
  v58 = (unint64_t)v7;
  objc_msgSend(v7, sel_addChild_, v56);
  v59 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode];
  v146 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode] = v56;
  v136 = v56;

  v164 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius;
  v135 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, 0.0, 0.0, *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius], -3.14159265, 3.14159265);
  v60 = objc_msgSend(v135, sel_CGPath);
  v61 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v60);

  v62 = v61;
  v149 = v38;
  v63 = objc_msgSend(v38, sel_whiteColor);
  objc_msgSend(v62, sel_setStrokeColor_, v63);

  objc_msgSend(v62, sel_setAlpha_, *(double *)&qword_2569E00C8);
  objc_msgSend(v62, sel_setZPosition_, -4.4408921e-16);
  objc_msgSend(v7, sel_addChild_, v62);
  v64 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode;
  v65 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode] = v62;
  v134 = v62;

  v66 = objc_msgSend(v166, sel_standardUserDefaults);
  v67 = objc_msgSend(v66, sel_fmpfArrowDotCount);

  if (__OFSUB__(v67, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  v68 = fmax((v26 + v161 / v32 + v161 / v32) / (double)((unint64_t)v67 - 1), 2.22044605e-16);
  v69 = round(v161 / v32 / v68);
  if ((~*(_QWORD *)&v69 & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v69 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v69 >= 9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v58 = (uint64_t)v69 + 1;
  if (__OFADD__((uint64_t)v69, 1))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v70 = round(v26 / v68);
  if ((~*(_QWORD *)&v70 & 0x7FF0000000000000) == 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v70 <= -9.22337204e18)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v70 >= 9.22337204e18)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v71 = (uint64_t)v70 + 1;
  if (__OFADD__((uint64_t)v70, 1))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v144 = v64;
  v152 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_explodedDiskRadius;
  v151 = &v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor];
  v67 = sub_23A9FA2C4((double *)v58, 1uLL, (void *)qword_2569E00B0, *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor], v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor + 8], a1, (char)v157, 0, v29, v30, 0.0, v26 * 0.5, *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_explodedDiskRadius], *(double *)&v3[v164]);
  v64 = v72;
  v161 = *(double *)&OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode], sel_addChild_, v67);
  v145 = (double *)v71;
  v65 = v58;
  if (!(v64 >> 62))
  {
    v73 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v167 = v64;
    if (!v73)
      goto LABEL_54;
    goto LABEL_35;
  }
LABEL_53:
  swift_bridgeObjectRetain();
  v73 = sub_23AA335C0();
  v167 = v64;
  if (!v73)
    goto LABEL_54;
LABEL_35:
  if (v73 < 1)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v74 = 0;
  v58 = v64 & 0xC000000000000001;
  do
  {
    if (v58)
      v75 = (id)MEMORY[0x23B85D0B0](v74, v64);
    else
      v75 = *(id *)(v64 + 8 * v74 + 32);
    v76 = v75;
    swift_beginAccess();
    v77 = v76;
    MEMORY[0x23B85CC30]();
    if (*(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23AA330D4();
    ++v74;
    sub_23AA330EC();
    sub_23AA330C8();
    swift_endAccess();

    v64 = v167;
  }
  while (v73 != v74);
LABEL_54:
  v132 = v67;
  swift_bridgeObjectRelease();
  v78 = sub_23A9FA2C4((double *)v65, 1uLL, (void *)qword_2569E00B0, *(_QWORD *)v151, v151[8], a1, (char)v157, v65, v31, v30, 0.0, v26 * 0.5, *(double *)&v150[v152], *(double *)&v150[v164]);
  v80 = v79;
  v133 = v78;
  objc_msgSend(*(id *)&v150[*(_QWORD *)&v161], sel_addChild_);
  if (v80 >> 62)
  {
    swift_bridgeObjectRetain();
    v81 = sub_23AA335C0();
    if (!v81)
      goto LABEL_66;
  }
  else
  {
    v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v81)
      goto LABEL_66;
  }
  if (v81 < 1)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  v82 = 0;
  do
  {
    if ((v80 & 0xC000000000000001) != 0)
      v83 = (id)MEMORY[0x23B85D0B0](v82, v80);
    else
      v83 = *(id *)(v80 + 8 * v82 + 32);
    v84 = v83;
    swift_beginAccess();
    v85 = v84;
    MEMORY[0x23B85CC30]();
    v58 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v58 >= *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23AA330D4();
    ++v82;
    sub_23AA330EC();
    sub_23AA330C8();
    swift_endAccess();

  }
  while (v81 != v82);
LABEL_66:
  swift_bridgeObjectRelease();
  if (v65 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    v86 = sub_23A9FA2C4(v145, 0, (void *)qword_2569E00B0, *(_QWORD *)v151, v151[8], a1, (char)v157, 2 * v65, 0.0, v26 * -0.5, 0.0, v26 * 0.5, *(double *)&v150[v152], *(double *)&v150[v164]);
    v58 = v87;
    v157 = v86;
    objc_msgSend(*(id *)&v150[*(_QWORD *)&v161], sel_addChild_);
    if (!(v58 >> 62))
    {
      v88 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v89 = v148;
      if (v88)
        goto LABEL_69;
      goto LABEL_80;
    }
  }
  swift_bridgeObjectRetain();
  v88 = sub_23AA335C0();
  v89 = v148;
  if (v88)
  {
LABEL_69:
    if (v88 >= 1)
    {
      v90 = 0;
      do
      {
        if ((v58 & 0xC000000000000001) != 0)
          v91 = (id)MEMORY[0x23B85D0B0](v90, v58);
        else
          v91 = *(id *)(v58 + 8 * v90 + 32);
        v92 = v91;
        swift_beginAccess();
        v93 = v92;
        MEMORY[0x23B85CC30]();
        if (*(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23AA330D4();
        ++v90;
        sub_23AA330EC();
        sub_23AA330C8();
        swift_endAccess();

      }
      while (v88 != v90);
      goto LABEL_80;
    }
LABEL_110:
    __break(1u);
    return;
  }
LABEL_80:
  swift_bridgeObjectRelease();
  objc_msgSend(v155, sel_addChild_, *(_QWORD *)&v150[*(_QWORD *)&v161]);
  if ((v162 & 1) != 0)
    v94 = objc_msgSend(v149, sel_yellowColor);
  else
    v94 = (id)qword_2569E00B8;
  v95 = v94;
  v96 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode;
  v97 = *(void **)&v150[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode];
  if (v97)
    objc_msgSend(v97, sel_removeFromParent);
  v159 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType;
  v168 = v150[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType];
  v98 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_findingTechnology;
  LOWORD(v169[0]) = *(_WORD *)&v150[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_findingTechnology];
  v99 = *(_QWORD *)&v150[v164];
  v100 = *((_QWORD *)v154 + 14);
  v101 = (objc_class *)type metadata accessor for FMPFSKPeripheralDotNode();
  objc_allocWithZone(v101);
  v156 = v95;
  v102 = sub_23A96CA10(&v168, (__int16 *)v169, 1852796750, 0xE400000000000000, v95, v99, 0, v100, v89, 0, 0, 0, 0x3FF0000000000000, 0, 0, 0, 1);
  objc_msgSend(v150, sel_addChild_, v102);
  objc_msgSend(*(id *)&v102[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode], sel_removeFromParent);
  v103 = *(void **)&v150[v96];
  *(_QWORD *)&v150[v96] = v102;
  v153 = v102;

  if (v162)
    v104 = objc_msgSend(v149, sel_purpleColor);
  else
    v104 = (id)qword_2569E00C0;
  v105 = v104;
  v106 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode;
  v107 = *(void **)&v150[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode];
  if (v107)
    objc_msgSend(v107, sel_removeFromParent);
  v168 = v150[v159];
  LOWORD(v169[0]) = *(_WORD *)&v150[v98];
  v108 = *(_QWORD *)&v150[v164];
  v109 = *((_QWORD *)v154 + 12);
  objc_allocWithZone(v101);
  v160 = v105;
  v110 = sub_23A96CA10(&v168, (__int16 *)v169, 0x6565746E696F50, 0xE700000000000000, v105, v108, 0, v109, v89, 0, 0, 0, 0x3FF0000000000000, 0, 0, 0, 1);
  objc_msgSend(v150, sel_addChild_, v110);
  v111 = *(void **)&v150[v106];
  *(_QWORD *)&v150[v106] = v110;
  v165 = v110;

  v112 = v162 ^ 1;
  objc_msgSend(v7, sel_setHidden_, v112);
  objc_msgSend(*(id *)&v150[v146], sel_setHidden_, v112);
  objc_msgSend(*(id *)&v150[v144], sel_setHidden_, v112);
  v113 = objc_msgSend(v147, sel_children);
  v114 = sub_23AA330B0();

  if (v114 >> 62)
    goto LABEL_102;
  v115 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v115; v115 = sub_23AA335C0())
  {
    v116 = 4;
    v117 = 0;
    if ((v114 & 0xC000000000000001) != 0)
    {
LABEL_93:
      v118 = (id)MEMORY[0x23B85D0B0](v117, v114);
      goto LABEL_95;
    }
    while (1)
    {
      v118 = *(id *)(v114 + 8 * v116);
LABEL_95:
      v119 = v118;
      v120 = __OFADD__(v117, 1);
      v121 = v117 + 1;
      if (v120)
        break;
      objc_opt_self();
      v122 = (void *)swift_dynamicCastObjCClass();
      if (v122)
        objc_msgSend(v122, sel_setLineWidth_, 1.0);

      if (v121 == v115)
        goto LABEL_103;
      v117 = ++v116 - 4;
      if ((v114 & 0xC000000000000001) != 0)
        goto LABEL_93;
    }
    __break(1u);
LABEL_102:
    swift_bridgeObjectRetain();
  }
LABEL_103:
  swift_bridgeObjectRelease_n();
  objc_msgSend(*(id *)&v150[*(_QWORD *)&v161], sel_setHidden_, 0);
  if ((v162 & 1) != 0)
  {
    v123 = objc_msgSend(v149, sel_yellowColor);
    v124 = objc_msgSend(v123, sel_colorWithAlphaComponent_, 0.75);

    v125 = v153;
    sub_23A96F4D0(v124);

    v126 = objc_msgSend(v149, sel_purpleColor);
    v127 = objc_msgSend(v126, sel_colorWithAlphaComponent_, 0.75);

    v128 = v132;
    v129 = v156;
    v130 = v160;
  }
  else
  {
    v129 = v156;
    v131 = v156;
    v125 = v153;
    sub_23A96F4D0(v131);

    v130 = v160;
    v127 = v160;
    v128 = v132;
  }
  sub_23A96F4D0(v127);

  objc_msgSend(v125, sel_setHidden_, 0);
  objc_msgSend(v165, sel_setHidden_, 0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t sub_23A9F3520(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = a2(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = sub_23A9F7044(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_23A9F3590(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_23A9FA2B0();
  v6 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  sub_23A9F7FD8(v8, a2);
  return sub_23AA33560();
}

uint64_t sub_23A9F3610(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_23A9FA2B0();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_23A9F771C(v6);
  return sub_23AA33560();
}

uint64_t sub_23A9F3688(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BYTE *v35;
  char v36;
  float64x2_t v37;
  double v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  float64x2_t v44;
  __double2 v45;
  uint64_t v46;
  double v47;
  char v48;
  double v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  float64x2_t v53;
  float64_t v54;
  uint64_t v55;
  float64x2_t v56;
  float64x2_t v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  double v61;
  double v62;
  uint64_t v63;
  long double v64;
  long double v65;
  long double v66;
  long double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  _BYTE *v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  double *v77;
  _QWORD *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _BOOL4 v82;
  id v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  float64x2_t v88;
  double v89;
  char v90;
  uint64_t v91;
  double v92;
  double v93;
  double v94;
  double v95;
  float64x2_t v96;
  __double2 v97;
  uint64_t v98;
  double v99;
  char v100;
  double v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  float64x2_t v106;
  float64_t v107;
  uint64_t v108;
  float64x2_t v109;
  float64x2_t v110;
  uint64_t v111;
  char v112;
  long double v113;
  long double v114;
  long double v115;
  long double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  BOOL v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  int64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int64_t v158;
  uint64_t v159;
  int64_t v160;
  float64x2_t v161;
  float64x2_t v162;
  float64x2_t v163;
  float64x2_t v164;
  float64x2_t v165;
  float64x2_t v166;
  double v167;
  double v168;
  float64x2_t v169;
  uint64_t v170[3];

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType) == 1)
  {
    v4 = (uint64_t *)v2;
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config + 48) & 1) == 0
      && *(uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config + 40) >= 1)
    {
      v6 = result;
      v146 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config;
      v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
      swift_beginAccess();
      v8 = *v7;
      v9 = MEMORY[0x24BEE4AF8];
      v170[0] = MEMORY[0x24BEE4AF8];
      if ((unint64_t)v8 >> 62)
      {
        if (v8 < 0)
          LODWORD(v2) = v8;
        else
          LODWORD(v2) = v8 & 0xFFFFFFF8;
        swift_bridgeObjectRetain();
        v10 = sub_23AA335C0();
        *(_QWORD *)&v169.f64[0] = v6;
        if (v10)
          goto LABEL_6;
      }
      else
      {
        v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v169.f64[0] = v6;
        if (v10)
        {
LABEL_6:
          if (v10 < 1)
          {
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
            swift_release();
            __break(1u);
LABEL_264:
            v15 = v8;
            v13 = v152;
            v4 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
            v3 = v158;
            v9 = v148;
            v80 = v156;
            if (!v8)
              goto LABEL_265;
LABEL_179:
            v81 = 0;
            a2 = 0;
            v17 = v9 & 0xC000000000000001;
            v149 = v9 + 32;
            v150 = v9 & 0xFFFFFFFFFFFFFF8;
            v160 = v3 + v80;
            v82 = __OFADD__(v3, v80);
            LODWORD(v157) = v82;
            v156 = 0xC01921FB54442D18;
            v154 = v15;
            v151 = v9 & 0xC000000000000001;
            while (1)
            {
              if (a2 == v15)
                goto LABEL_241;
              if (v17)
              {
                v83 = (id)MEMORY[0x23B85D0B0](a2, v9);
              }
              else
              {
                if (a2 >= *(_QWORD *)(v150 + 16))
                  goto LABEL_246;
                v83 = *(id *)(v149 + 8 * a2);
              }
              v2 = (uint64_t)v83;
              if (!objc_msgSend(v83, sel_isHidden, v142, v143))
              {

                goto LABEL_184;
              }
              v84 = v157;
              if (v81 == v3)
              {
                v85 = v160;
              }
              else
              {
                v84 = 0;
                v85 = v81;
              }
              if ((v84 & 1) != 0)
                goto LABEL_247;
              if ((v85 & 0x8000000000000000) != 0)
                goto LABEL_242;
              if (v85 >= *(_QWORD *)(v159 + 16))
                goto LABEL_243;
              v17 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition;
              *(_OWORD *)v17 = *(_OWORD *)(v159 + 32 + 16 * v85);
              *(_BYTE *)(v17 + 16) = 0;
              v86 = v2 + *v4;
              if ((*(_BYTE *)(v86 + 16) & 1) != 0)
              {
                v87 = 1;
                v88 = *(float64x2_t *)v86;
              }
              else
              {
                v89 = *(double *)v86;
                if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle))
                {
                  v90 = sub_23AA33728();
                  v91 = swift_bridgeObjectRelease();
                  v9 = v148;
                  if ((v90 & 1) == 0)
                  {
                    v87 = *(_BYTE *)(v86 + 16);
                    v88 = *(float64x2_t *)v86;
                    goto LABEL_206;
                  }
                }
                else
                {
                  v91 = swift_bridgeObjectRelease();
                }
                v169.f64[0] = *(float64_t *)(v2
                                           + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius);
                v92 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style);
                sub_23A9F604C(v91, 0.0, 3.14159265);
                v94 = v93 * 0.25;
                v95 = 2.0;
                if (v89 > 0.0)
                  v95 = -2.0;
                v97 = __sincos_stret(v92 * (v95 * v94) + 1.57079633);
                v96.f64[0] = v97.__cosval;
                v87 = 0;
                v96.f64[1] = v97.__sinval;
                v88 = vmulq_n_f64(v96, v169.f64[0]);
              }
LABEL_206:
              v98 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition;
              *(float64x2_t *)v98 = v88;
              *(_BYTE *)(v98 + 16) = v87;
              v99 = 0.0;
              if ((*(_BYTE *)(v17 + 16) & 1) == 0 && (v87 & 1) == 0)
              {
                v164 = v88;
                v166 = *(float64x2_t *)v17;
                v102 = sub_23A9C0100(*(double *)v17);
                v104 = v103;
                v105 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
                *(_QWORD *)&v106.f64[0] = v102;
                v106.f64[1] = v107;
                v162 = v106;
                v101 = 0.0;
                v108 = 1;
                v109 = v166;
                while (1)
                {
                  v169 = v109;
                  v168 = (double)v108 * 0.0625;
                  v167 = 1.0 - v168;
                  if (*(_BYTE *)(v2 + v105))
                  {
                    LODWORD(v17) = sub_23AA33728();
                    swift_bridgeObjectRelease();
                    if ((v17 & 1) != 0)
                      goto LABEL_218;
                    if (!*(_BYTE *)(v2 + v105) || *(_BYTE *)(v2 + v105) != 1)
                    {
                      LODWORD(v17) = sub_23AA33728();
                      swift_bridgeObjectRelease();
                      if ((v17 & 1) == 0)
                        goto LABEL_210;
                      goto LABEL_218;
                    }
                  }
                  swift_bridgeObjectRelease();
LABEL_218:
                  if ((v104 & 1) == 0)
                  {
                    v109 = vaddq_f64(vmulq_n_f64(vaddq_f64(vmulq_n_f64(v162, v168), vmulq_n_f64(v166, v167)), v167), vmulq_n_f64(vaddq_f64(vmulq_n_f64(v164, v168), vmulq_n_f64(v162, v167)), v168));
                    goto LABEL_211;
                  }
LABEL_210:
                  v109 = vaddq_f64(vmulq_n_f64(v164, v168), vmulq_n_f64(v166, v167));
LABEL_211:
                  v110 = vsubq_f64(v109, v169);
                  v101 = v101 + sqrt(vaddvq_f64(vmulq_f64(v110, v110)));
                  if (++v108 == 17)
                  {
                    v100 = 0;
                    v13 = v152;
                    v3 = v158;
                    v9 = v148;
                    goto LABEL_221;
                  }
                }
              }
              v100 = 1;
              v101 = 0.0;
LABEL_221:
              v111 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength;
              *(double *)v111 = v101;
              *(_BYTE *)(v111 + 8) = v100;
              if ((*(_BYTE *)(v98 + 16) & 1) != 0 || (*(_BYTE *)(v86 + 16) & 1) != 0)
              {
                v112 = 1;
                v4 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
                v15 = v154;
              }
              else
              {
                v113 = *(double *)v86;
                v114 = *(double *)(v86 + 8);
                v116 = *(double *)v98;
                v115 = *(double *)(v98 + 8);
                v117 = hypot(*(long double *)v86, v114);
                v118 = atan2(v115, v116);
                v119 = atan2(v114, v113);
                v120 = v119 - v118;
                if (vabdd_f64(v119, v118) > 3.14159265)
                {
                  if (v118 >= 0.0 || v119 < 0.0)
                  {
                    if (v119 < 0.0 && v118 >= 0.0)
                      v120 = v120 + 6.28318531;
                  }
                  else
                  {
                    v120 = v120 + -6.28318531;
                  }
                }
                v4 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
                v15 = v154;
                v112 = 0;
                v99 = fabs((v117 + v117) * v120);
              }
              v122 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength;
              *(double *)v122 = v99;
              *(_BYTE *)(v122 + 8) = v112;

              v81 = v85 + 1;
              if (__OFADD__(v85, 1))
                goto LABEL_244;
              v17 = v151;
LABEL_184:
              if (++a2 == v15)
                goto LABEL_265;
            }
          }
          v11 = 0;
          v3 = v8 & 0xC000000000000001;
          do
          {
            if (v3)
              v12 = (id)MEMORY[0x23B85D0B0](v11, v8);
            else
              v12 = *(id *)(v8 + 8 * v11 + 32);
            if ((*((_BYTE *)v12 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0
              || *((_BYTE *)v12 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) == 1)
            {

            }
            else
            {
              sub_23AA33554();
              sub_23AA33578();
              sub_23AA33584();
              sub_23AA33560();
            }
            ++v11;
          }
          while (v10 != v11);
          swift_bridgeObjectRelease();
          v13 = v170[0];
          v9 = MEMORY[0x24BEE4AF8];
LABEL_22:
          LODWORD(v2) = v13 < 0 || (v13 & 0x4000000000000000) != 0;
          swift_bridgeObjectRetain();
          v14 = (_QWORD *)v13;
          v147 = v2;
          if ((v2 & 1) != 0)
          {
            v14 = sub_23A9F6E54(v13);
            swift_release();
          }
          v170[0] = (uint64_t)v14;
          v15 = 0;
          sub_23A9F3590(v170, &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
          v16 = v170[0];
          v170[0] = v9;
          LODWORD(v17) = v16 < 0 || (v16 & 0x4000000000000000) != 0;
          v157 = v16;
          if ((_DWORD)v17 == 1)
          {
            swift_retain();
            v8 = sub_23AA335C0();
            v160 = v8;
            if (v8)
            {
LABEL_32:
              if (v8 >= 1)
              {
                v9 = 0;
                v3 = v157 & 0xC000000000000001;
                do
                {
                  if (v3)
                    v18 = (id)MEMORY[0x23B85D0B0](v9, v157);
                  else
                    v18 = *(id *)(v157 + 8 * v9 + 32);
                  v19 = v18;
                  if ((objc_msgSend(v18, sel_isHidden) & 1) != 0)
                  {

                  }
                  else
                  {
                    sub_23AA33554();
                    sub_23AA33578();
                    sub_23AA33584();
                    sub_23AA33560();
                  }
                  ++v9;
                }
                while (v160 != v9);
                swift_release();
                v20 = v170[0];
LABEL_44:
                LODWORD(v2) = v20 < 0 || (v20 & 0x4000000000000000) != 0;
                v155 = v20;
                if ((_DWORD)v2 == 1)
                  goto LABEL_248;
                if (!*(_QWORD *)(v20 + 16))
                {
LABEL_249:
                  v170[0] = 0;
                  v170[1] = 0xE000000000000000;
                  sub_23AA33500();
                  sub_23AA33038();
                  v124 = objc_msgSend(v4, sel_description);
                  sub_23AA32FD8();

                  sub_23AA33038();
                  swift_bridgeObjectRelease();
                  sub_23AA33038();
                  LODWORD(v143) = 0;
                  v142 = 377;
                  sub_23AA335A8();
                  __break(1u);
LABEL_250:
                  __break(1u);
LABEL_251:
                  __break(1u);
LABEL_252:
                  __break(1u);
LABEL_253:
                  __break(1u);
LABEL_254:
                  __break(1u);
                  goto LABEL_255;
                }
LABEL_49:
                if ((_DWORD)v17)
                {
                  LODWORD(v17) = v157;
                  swift_bridgeObjectRetain();
                  v21 = sub_23AA335C0();
                  swift_release();
                  v20 = v155;
                }
                else
                {
                  v21 = *(_QWORD *)(v157 + 16);
                }
                v4 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
                v22 = (double)v21;
                if ((a2 & 1) != 0)
                {
                  v23 = v22 * 0.5;
                  if (!(_DWORD)v2)
                    goto LABEL_54;
                }
                else
                {
                  v23 = (1.0 - v169.f64[0]) * v22;
                  if ((v2 & 1) == 0)
                  {
LABEL_54:
                    v24 = *(_QWORD *)(v20 + 16);
                    goto LABEL_57;
                  }
                }
                swift_bridgeObjectRetain();
                v25 = sub_23AA335C0();
                swift_release();
                v24 = v25;
LABEL_57:
                if (v24 >= 0)
                  v26 = v24;
                else
                  v26 = v24 + 1;
                v156 = v24;
                if (v147)
                {
                  swift_bridgeObjectRetain();
                  v8 = sub_23AA335C0();
                  swift_release();
                  v24 = v156;
                }
                else
                {
                  v8 = *(_QWORD *)(v13 + 16);
                }
                v3 = v8 - v24;
                if (__OFSUB__(v8, v24))
                  goto LABEL_250;
                v27 = v23 - (double)(v26 >> 1);
                if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
                  goto LABEL_251;
                if (v27 <= -9.22337204e18)
                  goto LABEL_252;
                if (v27 >= 9.22337204e18)
                  goto LABEL_253;
                if ((uint64_t)v27 < 0)
                {
                  if (v3 > 0)
                  {
                    v3 = 0;
                    if ((v147 & 1) != 0)
                      goto LABEL_71;
                    goto LABEL_74;
                  }
                }
                else if (v3 >= (uint64_t)v27)
                {
                  v3 = (uint64_t)v27;
                }
                if (v147)
                {
LABEL_71:
                  swift_retain();
                  v2 = sub_23AA335C0();
LABEL_75:
                  v9 = MEMORY[0x24BEE4AF8];
                  if (v2)
                  {
                    if (v2 < 1)
                      goto LABEL_261;
                    v28 = 0;
                    v8 = v13 & 0xC000000000000001;
                    do
                    {
                      if (v8)
                        v29 = (char *)MEMORY[0x23B85D0B0](v28, v13);
                      else
                        v29 = (char *)*(id *)(v13 + 8 * v28 + 32);
                      v169 = *(float64x2_t *)&v29[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
                      LODWORD(v17) = v29[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition
                                                        + 16];

                      if ((v17 & 1) == 0)
                      {
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                          v9 = (unint64_t)sub_23AA1CAC0(0, *(_QWORD *)(v9 + 16) + 1, 1, (_QWORD *)v9);
                        v17 = *(_QWORD *)(v9 + 16);
                        v30 = *(_QWORD *)(v9 + 24);
                        a2 = v17 + 1;
                        if (v17 >= v30 >> 1)
                          v9 = (unint64_t)sub_23AA1CAC0((_QWORD *)(v30 > 1), v17 + 1, 1, (_QWORD *)v9);
                        *(_QWORD *)(v9 + 16) = a2;
                        *(float64x2_t *)(v9 + 16 * v17 + 32) = v169;
                      }
                      ++v28;
                    }
                    while (v2 != v28);
                  }
                  swift_release();
                  v170[0] = v9;
                  swift_bridgeObjectRetain();
                  sub_23A9F3520(v170, sub_23A9FA29C);
                  if (v15)
                    goto LABEL_308;
                  v145 = 0;
                  v152 = v13;
                  swift_bridgeObjectRelease();
                  v31 = v156;
                  if ((v156 & 0x8000000000000000) != 0)
                    goto LABEL_254;
                  v158 = v3;
                  v159 = v170[0];
                  v32 = v155;
                  if (v156)
                  {
                    a2 = 0;
                    v153 = v170[0] + 32;
                    v13 = 0x3FB0000000000000;
                    do
                    {
                      if (a2 == v31)
                        goto LABEL_237;
                      if (v3 < 0)
                        goto LABEL_238;
                      if (a2 + v3 >= *(_QWORD *)(v159 + 16))
                        goto LABEL_239;
                      v169 = *(float64x2_t *)(v153 + 16 * (a2 + v3));
                      if ((v155 & 0xC000000000000001) != 0)
                      {
                        v35 = (_BYTE *)MEMORY[0x23B85D0B0](a2, v32);
                      }
                      else
                      {
                        if (a2 >= *(_QWORD *)(v32 + 16))
                          goto LABEL_245;
                        v35 = *(id *)(v155 + 32 + 8 * a2);
                      }
                      v2 = (uint64_t)v35;
                      v17 = (unint64_t)&v35[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
                      *(float64x2_t *)v17 = v169;
                      *(_BYTE *)(v17 + 16) = 0;
                      v15 = (unint64_t)&v35[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
                      if ((v35[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16] & 1) != 0)
                      {
                        v36 = 1;
                        v37 = *(float64x2_t *)v15;
                      }
                      else
                      {
                        v38 = *(double *)v15;
                        if (v35[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle])
                        {
                          if (v35[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle] == 1)
                            v8 = 0xE900000000000065;
                          else
                            v8 = 0xE600000000000000;
                          v9 = sub_23AA33728();
                          v39 = swift_bridgeObjectRelease();
                          if ((v9 & 1) == 0)
                          {
                            v36 = *(_BYTE *)(v15 + 16);
                            v37 = *(float64x2_t *)v15;
                            goto LABEL_113;
                          }
                        }
                        else
                        {
                          v39 = swift_bridgeObjectRelease();
                        }
                        v169.f64[0] = *(float64_t *)(v2
                                                   + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius);
                        v40 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style);
                        sub_23A9F604C(v39, 0.0, 3.14159265);
                        v42 = v41 * 0.25;
                        v43 = 2.0;
                        if (v38 > 0.0)
                          v43 = -2.0;
                        v45 = __sincos_stret(v40 * (v43 * v42) + 1.57079633);
                        v44.f64[0] = v45.__cosval;
                        v36 = 0;
                        v44.f64[1] = v45.__sinval;
                        v37 = vmulq_n_f64(v44, v169.f64[0]);
                      }
LABEL_113:
                      v46 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition;
                      *(float64x2_t *)v46 = v37;
                      *(_BYTE *)(v46 + 16) = v36;
                      v47 = 0.0;
                      if ((*(_BYTE *)(v17 + 16) & 1) == 0 && (v36 & 1) == 0)
                      {
                        v163 = v37;
                        v165 = *(float64x2_t *)v17;
                        v50 = sub_23A9C0100(*(double *)v17);
                        v9 = v51;
                        v52 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
                        *(_QWORD *)&v53.f64[0] = v50;
                        v53.f64[1] = v54;
                        v161 = v53;
                        v49 = 0.0;
                        v55 = 1;
                        v56 = v165;
                        while (1)
                        {
                          v169 = v56;
                          if (!*(_BYTE *)(v2 + v52))
                            break;
                          if (*(_BYTE *)(v2 + v52) == 1)
                            v8 = 0xE900000000000065;
                          else
                            v8 = 0xE600000000000000;
                          LODWORD(v17) = sub_23AA33728();
                          swift_bridgeObjectRelease();
                          if ((v17 & 1) != 0)
                            goto LABEL_128;
                          if (*(_BYTE *)(v2 + v52))
                          {
                            if (*(_BYTE *)(v2 + v52) == 1)
                              break;
                            v8 = 0xE600000000000000;
                          }
                          else
                          {
                            v8 = 0xEF637241646E4165;
                          }
                          LODWORD(v17) = sub_23AA33728();
                          swift_bridgeObjectRelease();
                          v59 = v163;
                          v60 = v169;
                          v62 = 1.0 - (double)v55 * 0.0625;
                          v61 = (double)v55 * 0.0625;
                          if ((v17 & 1) != 0 && (v9 & 1) == 0)
                          {
LABEL_133:
                            v57 = vaddq_f64(vmulq_n_f64(vaddq_f64(vmulq_n_f64(v161, v61), vmulq_n_f64(v165, v62)), v62), vmulq_n_f64(vaddq_f64(vmulq_n_f64(v59, v61), vmulq_n_f64(v161, v62)), v61));
                            goto LABEL_118;
                          }
LABEL_117:
                          v57 = vaddq_f64(vmulq_n_f64(v59, v61), vmulq_n_f64(v165, v62));
LABEL_118:
                          v58 = vsubq_f64(v57, v60);
                          v49 = v49 + sqrt(vaddvq_f64(vmulq_f64(v58, v58)));
                          ++v55;
                          v56 = v57;
                          if (v55 == 17)
                          {
                            v48 = 0;
                            v4 = &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
                            v3 = v158;
                            goto LABEL_135;
                          }
                        }
                        swift_bridgeObjectRelease();
LABEL_128:
                        v59 = v163;
                        v60 = v169;
                        v62 = 1.0 - (double)v55 * 0.0625;
                        v61 = (double)v55 * 0.0625;
                        if ((v9 & 1) == 0)
                          goto LABEL_133;
                        goto LABEL_117;
                      }
                      v48 = 1;
                      v49 = 0.0;
LABEL_135:
                      v63 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength;
                      *(double *)v63 = v49;
                      *(_BYTE *)(v63 + 8) = v48;
                      if ((*(_BYTE *)(v46 + 16) & 1) != 0 || (*(_BYTE *)(v15 + 16) & 1) != 0)
                      {
                        v33 = 1;
                      }
                      else
                      {
                        v64 = *(double *)v15;
                        v65 = *(double *)(v15 + 8);
                        v67 = *(double *)v46;
                        v66 = *(double *)(v46 + 8);
                        v68 = hypot(*(long double *)v15, v65);
                        v69 = atan2(v66, v67);
                        v70 = atan2(v65, v64);
                        v71 = v70 - v69;
                        if (vabdd_f64(v70, v69) > 3.14159265)
                        {
                          if (v69 >= 0.0 || v70 < 0.0)
                          {
                            if (v70 < 0.0 && v69 >= 0.0)
                              v71 = v71 + 6.28318531;
                          }
                          else
                          {
                            v71 = v71 + -6.28318531;
                          }
                        }
                        v33 = 0;
                        v47 = fabs((v68 + v68) * v71);
                      }
                      ++a2;
                      v34 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength;
                      *(double *)v34 = v47;
                      *(_BYTE *)(v34 + 8) = v33;

                      v32 = v155;
                      v31 = v156;
                    }
                    while (a2 != v156);
                  }
                  v9 = MEMORY[0x24BEE4AF8];
                  v170[0] = MEMORY[0x24BEE4AF8];
                  v13 = v160;
                  if (!v160)
                  {
                    a2 = v157;
                    goto LABEL_160;
                  }
                  a2 = v157;
                  v15 = v157 & 0xC000000000000001;
                  swift_retain();
                  v17 = 4;
                  do
                  {
                    v2 = v17 - 4;
                    if (v15)
                      v73 = (_BYTE *)MEMORY[0x23B85D0B0](v17 - 4, v157);
                    else
                      v73 = *(id *)(v157 + 8 * v17);
                    v9 = (unint64_t)v73;
                    v74 = v17 - 3;
                    if (__OFADD__(v2, 1))
                    {
                      __break(1u);
LABEL_237:
                      __break(1u);
LABEL_238:
                      __break(1u);
LABEL_239:
                      __break(1u);
LABEL_240:
                      __break(1u);
LABEL_241:
                      __break(1u);
LABEL_242:
                      __break(1u);
LABEL_243:
                      __break(1u);
LABEL_244:
                      __break(1u);
LABEL_245:
                      __break(1u);
LABEL_246:
                      __break(1u);
LABEL_247:
                      __break(1u);
LABEL_248:
                      swift_retain();
                      v123 = sub_23AA335C0();
                      swift_release();
                      v20 = v155;
                      if (!v123)
                        goto LABEL_249;
                      goto LABEL_49;
                    }
                    if ((v73[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16] & 1) != 0)
                      goto LABEL_262;
                    if (*(double *)&v73[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 8] < 0.0)
                    {
                      sub_23AA33554();
                      v8 = *(_QWORD *)(v170[0] + 16);
                      sub_23AA33578();
                      sub_23AA33584();
                      sub_23AA33560();
                    }
                    else
                    {

                    }
                    ++v17;
                  }
                  while (v74 != v160);
                  swift_release();
                  v9 = v170[0];
LABEL_160:
                  swift_bridgeObjectRetain();
                  if ((v9 & 0x8000000000000000) == 0)
                  {
                    v8 = v9;
                    if ((v9 & 0x4000000000000000) == 0)
                    {
LABEL_162:
                      v170[0] = v8;
                      sub_23A9F977C();
                      swift_release();
                      v15 = v170[0];
                      v170[0] = MEMORY[0x24BEE4AF8];
                      v13 = v152;
                      if (v160)
                      {
                        v17 = a2 & 0xC000000000000001;
                        v75 = 4;
                        do
                        {
                          v2 = v75 - 4;
                          if (v17)
                            v76 = (char *)MEMORY[0x23B85D0B0](v75 - 4, a2);
                          else
                            v76 = (char *)*(id *)(a2 + 8 * v75);
                          v9 = (unint64_t)v76;
                          v3 = v75 - 3;
                          if (__OFADD__(v2, 1))
                            goto LABEL_240;
                          v77 = (double *)&v76[*v4];
                          if (((_BYTE)v77[2] & 1) != 0)
                            goto LABEL_263;
                          if (v77[1] >= 0.0)
                          {
                            sub_23AA33554();
                            v8 = *(_QWORD *)(v170[0] + 16);
                            sub_23AA33578();
                            sub_23AA33584();
                            sub_23AA33560();
                          }
                          else
                          {

                          }
                          ++v75;
                          v133 = v3 == v160;
                          v3 = v158;
                        }
                        while (!v133);
                        swift_release();
                        v9 = v170[0];
                      }
                      else
                      {
                        swift_release();
                        v9 = MEMORY[0x24BEE4AF8];
                      }
                      swift_bridgeObjectRetain();
                      if ((v9 & 0x8000000000000000) != 0)
                        goto LABEL_258;
                      v78 = (_QWORD *)v9;
                      if ((v9 & 0x4000000000000000) != 0)
                        goto LABEL_258;
                      while (1)
                      {
                        v170[0] = (uint64_t)v78;
                        v2 = (uint64_t)v170;
                        sub_23A9F977C();
                        swift_release();
                        v79 = v170[0];
                        v170[0] = v15;
                        sub_23AA20AD8(v79);
                        v9 = v170[0];
                        v148 = v170[0];
                        v144 = (unint64_t)v170[0] >> 62;
                        if (!((unint64_t)v170[0] >> 62))
                          break;
                        swift_bridgeObjectRetain();
                        v8 = sub_23AA335C0();
                        swift_bridgeObjectRelease();
                        if ((v8 & 0x8000000000000000) == 0)
                          goto LABEL_264;
                        __break(1u);
LABEL_258:
                        v78 = sub_23A9F6E54(v9);
                        swift_release();
                      }
                      v15 = *(_QWORD *)((v170[0] & 0xFFFFFFFFFFFFF8) + 0x10);
                      v80 = v156;
                      if (v15)
                        goto LABEL_179;
LABEL_265:
                      swift_release();
                      swift_release();
                      if (*(_BYTE *)(v146 + 16) == 1)
                      {
                        swift_bridgeObjectRelease();
                        v125 = v145;
                        goto LABEL_292;
                      }
                      v126 = *(_QWORD *)(v146 + 8);
                      v125 = v145;
                      if (v144)
                      {
                        v128 = swift_bridgeObjectRetain();
                        v127 = (uint64_t)sub_23A9F6E54(v128);
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        v127 = v148 & 0xFFFFFFFFFFFFFF8;
                        swift_bridgeObjectRetain();
                      }
                      v170[0] = v127;
                      sub_23A9F3590(v170, &OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
                      if (v145)
                        goto LABEL_308;
                      swift_bridgeObjectRelease();
                      v129 = v170[0];
                      if (v170[0] < 0 || (v170[0] & 0x4000000000000000) != 0)
                        goto LABEL_286;
                      v130 = *(_QWORD *)(v170[0] + 16);
                      if (v130)
                      {
                        while (1)
                        {
                          v131 = v126 + 1;
                          if (__OFADD__(v126, 1))
                            goto LABEL_288;
                          if (v126 != -1)
                            break;
LABEL_289:
                          __break(1u);
LABEL_290:
                          v13 = v152;
                          if (!v130)
                            goto LABEL_291;
                        }
                        v126 = 0;
                        while (1)
                        {
                          v133 = v126 == 0x8000000000000000 && v131 == -1;
                          if (v133)
                            break;
                          if ((v129 & 0xC000000000000001) != 0)
                            v132 = (_BYTE *)MEMORY[0x23B85D0B0](v126, v129);
                          else
                            v132 = *(id *)(v129 + 8 * v126 + 32);
                          v132[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_useAlternateScaling] = v126 % v131 == 0;

                          ++v126;
                          v13 = v152;
                          if (v130 == v126)
                            goto LABEL_291;
                        }
                        __break(1u);
LABEL_286:
                        swift_bridgeObjectRetain();
                        v130 = sub_23AA335C0();
                        swift_release();
                        if ((v130 & 0x8000000000000000) == 0)
                          goto LABEL_290;
                        __break(1u);
LABEL_288:
                        __break(1u);
                        goto LABEL_289;
                      }
LABEL_291:
                      swift_release();
LABEL_292:
                      swift_bridgeObjectRetain();
                      v134 = (_QWORD *)v13;
                      if (v147)
                      {
                        v134 = sub_23A9F6E54(v13);
                        swift_release();
                      }
                      v170[0] = (uint64_t)v134;
                      sub_23A9F3610(v170);
                      if (v125)
                        goto LABEL_308;
                      swift_release();
                      v135 = v170[0];
                      if (v170[0] < 0 || (v170[0] & 0x4000000000000000) != 0)
                      {
                        swift_bridgeObjectRetain();
                        v136 = sub_23AA335C0();
                        swift_release();
                        swift_retain();
                        v137 = sub_23AA335C0();
                        if (v137)
                          goto LABEL_298;
                      }
                      else
                      {
                        v136 = *(_QWORD *)(v170[0] + 16);
                        swift_retain();
                        v137 = v136;
                        if (v136)
                        {
LABEL_298:
                          if (v137 >= 1)
                          {
                            v138 = 0;
                            v139 = 0.0;
                            do
                            {
                              if ((v135 & 0xC000000000000001) != 0)
                                v140 = (char *)MEMORY[0x23B85D0B0](v138, v135);
                              else
                                v140 = (char *)*(id *)(v135 + 8 * v138 + 32);
                              ++v138;
                              v141 = &v140[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction];
                              *(_QWORD *)v141 = 0;
                              *(float64x2_t *)(v141 + 8) = vmulq_n_f64((float64x2_t)xmmword_23AA39E90, 1.0 - v139);
                              *((_QWORD *)v141 + 3) = 0x3FF0000000000000;
                              v141[32] = 0;

                              v139 = 1.0 / (double)v136 + v139;
                            }
                            while (v137 != v138);
                            return swift_release_n();
                          }
                          __break(1u);
LABEL_308:
                          result = swift_release();
                          __break(1u);
                          return result;
                        }
                      }
                      return swift_release_n();
                    }
                  }
LABEL_255:
                  v8 = (uint64_t)sub_23A9F6E54(v9);
                  swift_release();
                  goto LABEL_162;
                }
LABEL_74:
                v2 = *(_QWORD *)(v13 + 16);
                swift_retain();
                goto LABEL_75;
              }
              goto LABEL_260;
            }
          }
          else
          {
            v8 = *(_QWORD *)(v16 + 16);
            swift_retain();
            v160 = v8;
            if (v8)
              goto LABEL_32;
          }
          swift_release();
          v20 = MEMORY[0x24BEE4AF8];
          goto LABEL_44;
        }
      }
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x24BEE4AF8];
      goto LABEL_22;
    }
  }
  return result;
}

uint64_t sub_23A9F4D3C(double a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  double v4;
  double v5;
  double v6;

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackTop + 16) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackBottom + 16) & 1) != 0)
    return 0;
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config + 48) & 1) != 0)
    return 0;
  if (__OFSUB__(*v2, 1))
  {
    __break(1u);
  }
  else
  {
    v4 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackTop + 8);
    v5 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackBottom + 8);
    v6 = (v4 - v5) / (double)(*v2 - 1) * (double)(uint64_t)v2[5] * 0.5;
    if (v6 + a1 < v4)
      v4 = v6 + a1;
    return *(_QWORD *)&v4;
  }
  return result;
}

uint64_t sub_23A9F4DF4()
{
  uint64_t v0;
  double v1;
  uint64_t result;
  double v3;
  char v4;
  double v5;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  unint64_t v12;
  void **p_weak_ivar_lyt;
  double v14;
  double v15;
  char v16;
  double *v17;
  double v18;
  double *v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  double v23;
  unint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  __double2 v30;
  double v31;
  double *v32;
  char v33;
  uint64_t v34;
  double v35;
  double v36;
  char v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  __double2 v43;
  char *v44;
  double v45;
  char v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  char v63;
  char v64;
  double *v65;
  long double v66;
  long double v67;
  long double v68;
  long double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  double v86;
  unint64_t v87;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode), sel_position);
  *(double *)&result = COERCE_DOUBLE(sub_23A9F4D3C(-v1));
  if ((v4 & 1) == 0)
  {
    v5 = *(double *)&result;
    v6 = v3;
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
    swift_beginAccess();
    v8 = *v7;
    if ((unint64_t)*v7 >> 62)
      goto LABEL_58;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRetain_n());
    if (v9)
    {
      while (v9 >= 1)
      {
        v10 = 0;
        v11 = (v5 + v6) * 0.5;
        v6 = 4.45014772e-308;
        v12 = v8 & 0xC000000000000001;
        v82 = v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style;
        v81 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius;
        v83 = v8 + 32;
        p_weak_ivar_lyt = (void **)(&FMProximityConnectionManager + 56);
        v14 = -0.5;
        v15 = 0.5;
        v75 = 6.28318531;
        v80 = v8 & 0xC000000000000001;
        v78 = v8;
        v79 = v0;
        v77 = v9;
        v76 = v11;
        while (1)
        {
          if (v12)
            v18 = COERCE_DOUBLE(MEMORY[0x23B85D0B0](v10, v8));
          else
            *(_QWORD *)&v18 = *(id *)(v83 + 8 * v10);
          v5 = v18;
          if ((objc_msgSend(*(id *)&v18, (SEL)p_weak_ivar_lyt[180], *(_QWORD *)&v75) & 1) == 0)
          {
            v19 = (double *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
            if ((*(_BYTE *)(*(_QWORD *)&v5
                           + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition
                           + 16) & 1) == 0)
              break;
          }
LABEL_8:

          if (++v10 == v9)
            goto LABEL_59;
        }
        if (v11 <= v19[1])
        {
          do
          {
            v87 = 0;
            v20 = MEMORY[0x23B85DB3C](&v87, 8);
          }
          while (0x20000000000001 * v87 < 0x1FFFFFFFFFF801);
          v24 = (v87 * (unsigned __int128)0x20000000000001uLL) >> 64;
          v23 = 3.14159265;
          if (v24 != 0x20000000000000)
            v23 = (double)v24 * 1.11022302e-16 * 3.14159265 + 0.0;
        }
        else
        {
          do
          {
            v87 = 0;
            v20 = MEMORY[0x23B85DB3C](&v87, 8);
          }
          while (0x20000000000001 * v87 < 0x1FFFFFFFFFF801);
          v21 = (v87 * (unsigned __int128)0x20000000000001uLL) >> 64;
          v22 = (double)v21 * 1.11022302e-16 * 3.14159265 + 2.22044605e-16;
          if (v21 == 0x20000000000000)
            v22 = 3.14159265;
          v23 = -v22;
        }
        v25 = *(double *)(v82 + 72);
        v26 = v25 * v14;
        v27 = v25 * v15;
        if (v26 <= v27)
        {
          sub_23A9F604C(v20, v26, v27);
          v29 = *(double *)(v0 + v81) * (1.0 - v28);
          v30 = __sincos_stret(v23);
          v31 = v30.__cosval * v29;
          v32 = (double *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
          *v32 = v30.__cosval * v29;
          v32[1] = v30.__sinval * v29;
          *((_BYTE *)v32 + 16) = 0;
          if (*(_BYTE *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle))
          {
            v33 = sub_23AA33728();
            v34 = swift_bridgeObjectRelease();
            v6 = 4.45014772e-308;
            if ((v33 & 1) == 0)
            {
              v35 = *v32;
              v36 = v32[1];
              v37 = *((_BYTE *)v32 + 16);
              goto LABEL_30;
            }
          }
          else
          {
            v34 = swift_bridgeObjectRelease();
          }
          v38 = *(double *)(*(_QWORD *)&v5
                          + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius);
          v39 = *(double *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style);
          sub_23A9F604C(v34, 0.0, 3.14159265);
          v41 = v40 * 0.25;
          v42 = 2.0;
          if (v31 > 0.0)
            v42 = -2.0;
          v43 = __sincos_stret(v39 * (v42 * v41) + 1.57079633);
          v37 = 0;
          v35 = v38 * v43.__cosval;
          v36 = v38 * v43.__sinval;
LABEL_30:
          v44 = (char *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition);
          *(double *)v44 = v35;
          *((double *)v44 + 1) = v36;
          v44[16] = v37;
          v45 = 0.0;
          if (((_BYTE)v19[2] & 1) != 0 || (v37 & 1) != 0)
          {
            v46 = 1;
            v47 = 0.0;
LABEL_45:
            v65 = (double *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength);
            *v65 = v47;
            *((_BYTE *)v65 + 8) = v46;
            if ((v44[16] & 1) != 0 || ((_BYTE)v32[2] & 1) != 0)
            {
              v16 = 1;
              v12 = v80;
              p_weak_ivar_lyt = &FMProximityConnectionManager.weak_ivar_lyt;
            }
            else
            {
              v66 = *v32;
              v67 = v32[1];
              v69 = *(double *)v44;
              v68 = *((double *)v44 + 1);
              v70 = hypot(*v32, v67);
              v71 = atan2(v68, v69);
              v72 = atan2(v67, v66);
              v73 = v72 - v71;
              if (vabdd_f64(v72, v71) > 3.14159265)
              {
                if (v71 >= 0.0 || v72 < 0.0)
                {
                  if (v72 < 0.0 && v71 >= 0.0)
                    v73 = v73 + v75;
                }
                else
                {
                  v73 = v73 + -6.28318531;
                }
              }
              v12 = v80;
              p_weak_ivar_lyt = (void **)(&FMProximityConnectionManager + 56);
              v14 = -0.5;
              v15 = 0.5;
              v16 = 0;
              v45 = fabs((v70 + v70) * v73);
            }
            v17 = (double *)(*(_QWORD *)&v5 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength);
            *v17 = v45;
            *((_BYTE *)v17 + 8) = v16;
            goto LABEL_8;
          }
          v85 = v36;
          v86 = v35;
          v49 = *v19;
          v48 = v19[1];
          *(double *)&v50 = COERCE_DOUBLE(sub_23A9C0100(*v19));
          v52 = v51;
          v53 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
          v84 = *(double *)&v50;
          v55 = v54;
          v47 = 0.0;
          v56 = v48;
          v57 = v49;
          v58 = 1;
          while (2)
          {
            v61 = (double)v58 * 0.0625;
            v62 = 1.0 - v61;
            if (!*(_BYTE *)(*(_QWORD *)&v5 + v53))
            {
LABEL_40:
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            v63 = sub_23AA33728();
            swift_bridgeObjectRelease();
            if ((v63 & 1) != 0)
              goto LABEL_42;
            if (*(_BYTE *)(*(_QWORD *)&v5 + v53) && *(_BYTE *)(*(_QWORD *)&v5 + v53) == 1)
              goto LABEL_40;
            v64 = sub_23AA33728();
            swift_bridgeObjectRelease();
            if ((v64 & 1) != 0)
            {
LABEL_42:
              if ((v52 & 1) == 0)
              {
                v59 = v62 * (v61 * v84 + v57 * v62) + v61 * (v86 * v61 + v62 * v84);
                v60 = v62 * (v61 * v55 + v56 * v62) + v61 * (v85 * v61 + v62 * v55);
LABEL_35:
                v47 = v47 + sqrt((v60 - v48) * (v60 - v48) + (v59 - v49) * (v59 - v49));
                ++v58;
                v48 = v60;
                v49 = v59;
                if (v58 == 17)
                {
                  v46 = 0;
                  v8 = v78;
                  v0 = v79;
                  v9 = v77;
                  v11 = v76;
                  v6 = 4.45014772e-308;
                  v14 = -0.5;
                  v15 = 0.5;
                  v45 = 0.0;
                  goto LABEL_45;
                }
                continue;
              }
            }
            break;
          }
          v59 = v86 * v61 + v57 * v62;
          v60 = v85 * v61 + v56 * v62;
          goto LABEL_35;
        }
        __break(1u);
LABEL_58:
        swift_bridgeObjectRetain_n();
        *(double *)&result = COERCE_DOUBLE(sub_23AA335C0());
        v9 = result;
        if (*(double *)&result == 0.0)
          goto LABEL_59;
      }
      __break(1u);
    }
    else
    {
LABEL_59:
      *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease_n());
    }
  }
  return result;
}

void sub_23A9F5590(uint64_t a1, char a2)
{
  double v2;
  unint64_t v3;
  double v4;
  id v7;
  void **p_weak_ivar_lyt;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  uint64_t *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  id v31;
  id v32;
  void *ObjCClassFromMetadata;
  id v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  void **v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  BOOL v65;
  uint64_t v66;
  void *v67;
  double v68;
  uint64_t v69;
  double v70;
  char v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void *v79;
  uint64_t v80;
  double v81;
  _BOOL8 v82;
  id v83;
  id v84;
  void *v85;
  void *v86;
  uint64_t v87;
  int v88;
  char *v89;
  void *v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  double v96;
  id v97;

  v4 = v2;
  v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  p_weak_ivar_lyt = (void **)objc_msgSend(v7, sel_fmpfDebugMode);

  if ((a2 & 1) != 0)
  {
    v95 = *(_QWORD *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor);
    v92 = *(_BYTE *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor + 8);
  }
  else
  {
    v95 = a1;
    v92 = 0;
  }
  v97 = *(id *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDebugNode);
  v9 = objc_msgSend(v97, sel_children);
  sub_23A968488(0, (unint64_t *)&qword_2569D5998);
  v10 = sub_23AA330B0();

  v11 = *(_QWORD *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode);
  v12 = objc_msgSend((id)v11, sel_children);
  v13 = sub_23AA330B0();

  sub_23AA20988(v13);
  v14 = v10;
  v15 = (unint64_t *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v16 = *v15;
  if (*v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_23AA335B4();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_23AA33734();
    v17 = v16;
  }
  swift_bridgeObjectRelease();
  sub_23AA20988(v17);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_23AA335C0();
    if (!v18)
      goto LABEL_16;
  }
  else
  {
    v18 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v18)
      goto LABEL_16;
  }
  if (v18 < 1)
    goto LABEL_60;
  for (i = 0; i != v18; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x23B85D0B0](i, v14);
    else
      v20 = *(id *)(v14 + 8 * i + 32);
    v21 = v20;
    objc_msgSend(v20, sel_removeFromParent);

  }
LABEL_16:
  v88 = (int)p_weak_ivar_lyt;
  swift_bridgeObjectRelease_n();
  *v15 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config);
  if ((*(_BYTE *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config + 32) & 1) != 0)
  {
    __break(1u);
    return;
  }
  v89 = (char *)OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius;
  v91 = *v22;
  v23 = *(double *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius);
  v24 = (v23 + v23) * (double)*v22 / (double)v22[3];
  v25 = -v23;
  v26 = v24 * 0.5;
  v27 = v24 * -0.5;
  v28 = *(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackTop;
  *(double *)v28 = -v23;
  *(double *)(v28 + 8) = v24 * 0.5;
  *(_BYTE *)(v28 + 16) = 0;
  v29 = *(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackBottom;
  *(double *)v29 = -v23;
  *(double *)(v29 + 8) = v24 * -0.5;
  *(_BYTE *)(v29 + 16) = 0;
  v94 = (id)v11;
  v3 = (unint64_t)v97;
  objc_msgSend((id)v11, sel_addChild_, v97);
  v30 = *(void ***)(*(_QWORD *)&v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasPatternSpinesNode);
  objc_msgSend(v97, sel_addChild_, v30);
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v31, sel_moveToPoint_, v25, v27);
  objc_msgSend(v31, sel_addLineToPoint_, v25, v26);
  objc_msgSend(v31, sel_closePath);
  type metadata accessor for FMPFSKShapeNode();
  v86 = v31;
  v32 = objc_msgSend(v31, sel_CGPath);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v34 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v32);

  v35 = v4;
  v4 = COERCE_DOUBLE(objc_opt_self());
  v36 = v34;
  v37 = objc_msgSend(*(id *)&v4, sel_whiteColor);
  objc_msgSend(v36, sel_setStrokeColor_, v37);

  objc_msgSend(v36, sel_setLineCap_, 1);
  v38 = qword_2569D4B18;
  v39 = v36;
  if (v38 != -1)
    swift_once();
  objc_msgSend(v39, sel_setAlpha_, *(double *)&qword_2569E00C8);

  p_weak_ivar_lyt = v30;
  v85 = v39;
  objc_msgSend(v30, sel_addChild_, v39);
  v11 = (unint64_t)v89;
  v84 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, 0.0, 0.0, *(double *)&v89[*(_QWORD *)&v35], -3.14159265, 3.14159265);
  v40 = objc_msgSend(v84, sel_CGPath);
  v41 = objc_msgSend(ObjCClassFromMetadata, sel_shapeNodeWithPath_, v40);

  v42 = v41;
  v43 = objc_msgSend(*(id *)&v4, sel_whiteColor);
  objc_msgSend(v42, sel_setStrokeColor_, v43);

  objc_msgSend(v42, sel_setAlpha_, *(double *)&qword_2569E00C8);
  objc_msgSend(v42, sel_setZPosition_, -4.4408921e-16);
  objc_msgSend(v97, sel_addChild_, v42);
  v44 = *(void **)(*(_QWORD *)&v35 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode);
  v87 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode;
  *(_QWORD *)(*(_QWORD *)&v35 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode) = v42;
  v83 = v42;

  v45 = sub_23A9FA888(v91, (__int128 *)qword_2569E00B0, v95, v92, 0, v25, v27, v25, v26, *(double *)&v89[*(_QWORD *)&v35]);
  v47 = v46;
  v90 = v48;
  v96 = v35;
  v93 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode;
  objc_msgSend(*(id *)(*(_QWORD *)&v35 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode), sel_addChild_, v45);
  if (v47 >> 62)
  {
    swift_bridgeObjectRetain();
    v49 = sub_23AA335C0();
    v50 = p_weak_ivar_lyt;
    if (v49)
      goto LABEL_21;
  }
  else
  {
    v49 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v50 = p_weak_ivar_lyt;
    if (v49)
    {
LABEL_21:
      if (v49 < 1)
        goto LABEL_61;
      v51 = 0;
      do
      {
        if ((v47 & 0xC000000000000001) != 0)
          v52 = (id)MEMORY[0x23B85D0B0](v51, v47);
        else
          v52 = *(id *)(v47 + 8 * v51 + 32);
        v53 = v52;
        swift_beginAccess();
        v54 = v53;
        MEMORY[0x23B85CC30](v54);
        if (*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23AA330D4();
        ++v51;
        sub_23AA330EC();
        sub_23AA330C8();
        swift_endAccess();

        v50 = p_weak_ivar_lyt;
      }
      while (v49 != v51);
    }
  }
  v89 = (char *)v45;
  swift_bridgeObjectRelease();
  objc_msgSend(v94, sel_addChild_, *(_QWORD *)(*(_QWORD *)&v96 + v93), v83);
  v55 = *(void **)(*(_QWORD *)&v96 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsNode);
  *(_QWORD *)(*(_QWORD *)&v96 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsNode) = v90;
  v56 = v90;

  v90 = v56;
  objc_msgSend(v94, sel_addChild_, v56);
  v57 = v88 ^ 1u;
  objc_msgSend(v97, sel_setHidden_, v57);
  objc_msgSend(*(id *)(*(_QWORD *)&v96 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode), sel_setHidden_, v57);
  objc_msgSend(*(id *)(*(_QWORD *)&v96 + v87), sel_setHidden_, v57);
  v58 = objc_msgSend(v50, sel_children);
  v59 = sub_23AA330B0();

  if (v59 >> 62)
    goto LABEL_43;
  v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v60; v60 = sub_23AA335C0())
  {
    v61 = 4;
    v62 = 0;
    if ((v59 & 0xC000000000000001) != 0)
    {
LABEL_34:
      v63 = (id)MEMORY[0x23B85D0B0](v62, v59);
      goto LABEL_36;
    }
    while (1)
    {
      v63 = *(id *)(v59 + 8 * v61);
LABEL_36:
      v64 = v63;
      v65 = __OFADD__(v62, 1);
      v66 = v62 + 1;
      if (v65)
        break;
      objc_opt_self();
      v67 = (void *)swift_dynamicCastObjCClass();
      if (v67)
        objc_msgSend(v67, sel_setLineWidth_, 1.0);

      if (v66 == v60)
        goto LABEL_44;
      v62 = ++v61 - 4;
      if ((v59 & 0xC000000000000001) != 0)
        goto LABEL_34;
    }
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
  }
LABEL_44:
  swift_bridgeObjectRelease_n();
  p_weak_ivar_lyt = &FMProximityConnectionManager.weak_ivar_lyt;
  objc_msgSend(*(id *)(*(_QWORD *)&v96 + v93), sel_setHidden_, 0);
  objc_msgSend(v94, sel_position);
  *(double *)&v69 = COERCE_DOUBLE(sub_23A9F4D3C(-v68));
  if ((v71 & 1) == 0)
  {
    v3 = v69;
    v4 = v70;
    v11 = *v15;
    if (*v15 >> 62)
      goto LABEL_62;
    v72 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v72; v72 = sub_23AA335C0())
    {
      v73 = *(double *)&v3;
      v3 = v11 & 0xC000000000000001;
      v74 = v73 + 1.0;
      v75 = v4 + -1.0;
      v76 = 4;
      v4 = COERCE_DOUBLE(&OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
      v77 = 0;
      if ((v11 & 0xC000000000000001) != 0)
      {
LABEL_48:
        v78 = (char *)MEMORY[0x23B85D0B0](v77, v11);
        goto LABEL_50;
      }
      while (1)
      {
        v78 = (char *)*(id *)(v11 + 8 * v76);
LABEL_50:
        v79 = v78;
        v65 = __OFADD__(v77, 1);
        v80 = v77 + 1;
        if (v65)
          break;
        if ((v78[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16] & 1) == 0)
        {
          v81 = *(double *)&v78[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8];
          v82 = v75 > v81 || v81 > v74;
          objc_msgSend(v78, (SEL)p_weak_ivar_lyt[182], v82, v83);
        }

        if (v80 == v72)
          goto LABEL_63;
        v77 = ++v76 - 4;
        if (*(double *)&v3 != 0.0)
          goto LABEL_48;
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain_n();
    }
LABEL_63:
    swift_bridgeObjectRelease_n();
  }
  sub_23A9F3688(0, 1uLL);

  swift_bridgeObjectRelease();
}

uint64_t sub_23A9F604C(uint64_t a1, double a2, double a3)
{
  return sub_23A9F6058(a1, (uint64_t (*)(uint64_t, double, double))sub_23A9F604C, a2, a3);
}

uint64_t sub_23A9F6058(uint64_t result, uint64_t (*a2)(uint64_t, double, double), double a3, double a4)
{
  double v6;
  uint64_t v8;
  uint64_t v9;

  if (a3 == a4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = a4 - a3;
  if ((~COERCE__INT64(a4 - a3) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v8 = result;
  v9 = 0;
  result = MEMORY[0x23B85DB3C](&v9, 8);
  if (v6 * ((double)(v9 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a3 == a4)
    return a2(v8, a3, a4);
  return result;
}

uint64_t sub_23A9F6104(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084((uint64_t *)&unk_2569D5B30);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F626C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084(&qword_2569D8890);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_23A964084((uint64_t *)&unk_2569D63B0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F640C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23A9F6A8C(a1, a2, a3, a4, &qword_2569D7F08, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23A9F6420(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084((uint64_t *)&unk_2569D7E90);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F658C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23A9F65B4(a1, a2, a3, a4, &qword_2569D7F18, (uint64_t *)&unk_2569D5D60);
}

uint64_t sub_23A9F65A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23A9F65B4(a1, a2, a3, a4, (uint64_t *)&unk_2569D7F20, &qword_2569D6E60);
}

uint64_t sub_23A9F65B4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23A964084(a5);
  v13 = *(_QWORD *)(sub_23A964084(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(sub_23A964084(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F6794(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084(&qword_2569D7EE8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F68F0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084((uint64_t *)&unk_2569D8880);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_23A964084(&qword_2569D8870);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F6A78(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23A9F6A8C(a1, a2, a3, a4, &qword_2569D7F10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
}

uint64_t sub_23A9F6A8C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23A964084(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

_QWORD *sub_23A9F6C6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23A964084(&qword_2569D8890);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_23A9F9D34((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23A9ABA5C();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_23A9F6D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23A964084(&qword_2569D7F08);
  v3 = *(_QWORD *)(sub_23AA32E1C() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_23A9F9F40(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_23A9ABA5C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A9F6E54(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      sub_23A964084(&qword_2569D6080);
      v3 = (_QWORD *)swift_allocObject();
      v4 = j__malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_23A9F9B30((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_23A9F6F4C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x23B85D0BCLL);
}

_QWORD *sub_23A9F6FB4(_QWORD *a1)
{
  return sub_23AA1CAC0(0, a1[2], 0, a1);
}

void sub_23A9F6FC8(double a1, double a2)
{
  if ((~COERCE__INT64(a2 - a1) & 0x7FF0000000000000) != 0)
    sub_23A9644D8(0x20000000000001);
  else
    __break(1u);
}

uint64_t sub_23A9F7044(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  double *v26;
  double v27;
  uint64_t v28;
  double *v29;
  double v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double *__dst;

  v3 = a1[1];
  result = sub_23AA336F8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v82 = *a1;
      v83 = *a1 + 8;
      v84 = -1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(double *)(v82 + 16 * i + 8);
        v87 = v84;
        v88 = v83;
        do
        {
          if (v86 >= *(double *)v88)
            break;
          if (!v82)
            goto LABEL_141;
          v89 = *(_QWORD *)(v88 + 8);
          *(_OWORD *)(v88 + 8) = *(_OWORD *)(v88 - 8);
          *(_QWORD *)(v88 - 8) = v89;
          *(double *)v88 = v86;
          v88 -= 16;
        }
        while (!__CFADD__(v87++, 1));
        v83 += 16;
        --v84;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v100 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v91 = v12;
      v102 = v9;
      if (v13 >= 2)
      {
        v92 = *v100;
        do
        {
          v93 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v92)
            goto LABEL_145;
          v94 = v91;
          v95 = *(_QWORD *)&v91[16 * v93 + 32];
          v96 = *(_QWORD *)&v91[16 * v13 + 24];
          sub_23A9F8A38((double *)(v92 + 16 * v95), (double *)(v92 + 16 * *(_QWORD *)&v91[16 * v13 + 16]), v92 + 16 * v96, __dst);
          if (v1)
            break;
          if (v96 < v95)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v94 = sub_23A9F9620((uint64_t)v94);
          if (v93 >= *((_QWORD *)v94 + 2))
            goto LABEL_134;
          v97 = &v94[16 * v93 + 32];
          *(_QWORD *)v97 = v95;
          *((_QWORD *)v97 + 1) = v96;
          v98 = *((_QWORD *)v94 + 2);
          if (v13 > v98)
            goto LABEL_135;
          memmove(&v94[16 * v13 + 16], &v94[16 * v13 + 32], 16 * (v98 - v13));
          v91 = v94;
          *((_QWORD *)v94 + 2) = v98 - 1;
          v13 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v102 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v102 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    type metadata accessor for CGPoint(0);
    v8 = sub_23AA330E0();
    *(_QWORD *)(v8 + 16) = v7;
    v102 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v101 = *a1 + 40;
  v99 = *a1 - 16;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v103 = v6;
  v104 = v3;
  v105 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v101 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = (__int128 *)(v99 + 16 * v10);
          v21 = v10;
          v22 = v14;
          v23 = (__int128 *)(v11 + 16 * v14);
          do
          {
            if (v22 != --v21)
            {
              if (!v11)
                goto LABEL_144;
              v24 = *v23;
              *v23 = *v20;
              *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v25 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v25 >= v3)
      v25 = v3;
    if (v25 < v14)
      break;
    if (v10 != v25)
    {
      v26 = (double *)(v11 + 16 * v10);
      do
      {
        v27 = *(double *)(v11 + 16 * v10 + 8);
        v28 = v14;
        v29 = v26;
        do
        {
          if (v27 >= *(v29 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v30 = *v29;
          *(_OWORD *)v29 = *((_OWORD *)v29 - 1);
          *(v29 - 1) = v27;
          *(v29 - 2) = v30;
          v29 -= 2;
          ++v28;
        }
        while (v10 != v28);
        ++v10;
        v26 += 2;
      }
      while (v10 != v25);
      v10 = v25;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_23A9F9320(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v32 = *((_QWORD *)v12 + 2);
    v31 = *((_QWORD *)v12 + 3);
    v13 = v32 + 1;
    v11 = v105;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_23A9F9320((char *)(v31 > 1), v32 + 1, 1, v12);
      v11 = v105;
      v12 = v81;
    }
    *((_QWORD *)v12 + 2) = v13;
    v33 = v12 + 32;
    v34 = &v12[16 * v32 + 32];
    *(_QWORD *)v34 = v14;
    *((_QWORD *)v34 + 1) = v10;
    if (v32)
    {
      while (1)
      {
        v35 = v13 - 1;
        if (v13 >= 4)
        {
          v40 = &v33[16 * v13];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_120;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_121;
          v47 = v13 - 2;
          v48 = &v33[16 * v13 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_123;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_126;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_130;
            v63 = v38 < v73;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v64 = *((_QWORD *)v12 + 4);
            v65 = *((_QWORD *)v12 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_77;
          }
          v37 = *((_QWORD *)v12 + 4);
          v36 = *((_QWORD *)v12 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_122;
        v47 = v13 - 2;
        v53 = &v33[16 * v13 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_125;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_128;
        if (__OFADD__(v57, v62))
          goto LABEL_129;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_83:
          if (v63)
            v35 = v47;
          goto LABEL_85;
        }
LABEL_77:
        if ((v58 & 1) != 0)
          goto LABEL_124;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_127;
        if (v69 < v57)
          goto LABEL_15;
LABEL_85:
        v74 = v35 - 1;
        if (v35 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v75 = v12;
        v76 = &v33[16 * v74];
        v77 = *(_QWORD *)v76;
        v78 = &v33[16 * v35];
        v79 = *((_QWORD *)v78 + 1);
        sub_23A9F8A38((double *)(v11 + 16 * *(_QWORD *)v76), (double *)(v11 + 16 * *(_QWORD *)v78), v11 + 16 * v79, __dst);
        if (v1)
          goto LABEL_93;
        if (v79 < v77)
          goto LABEL_117;
        if (v35 > *((_QWORD *)v75 + 2))
          goto LABEL_118;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v33[16 * v74 + 8] = v79;
        v80 = *((_QWORD *)v75 + 2);
        if (v35 >= v80)
          goto LABEL_119;
        v12 = v75;
        v13 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((_QWORD *)v75 + 2) = v80 - 1;
        v11 = v105;
        if (v80 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v103;
    v3 = v104;
    if (v10 >= v104)
    {
      v9 = v102;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23AA3359C();
  __break(1u);
  return result;
}

double *sub_23A9F771C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double *result;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  double *v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  double *v36;
  double *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  double *v49;
  double *v50;
  uint64_t v51;
  uint64_t v52;
  double *v53;
  double v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  double *v116;
  uint64_t v117;
  uint64_t v118;
  char *__dst;
  uint64_t v120;

  v2 = v1;
  v4 = a1[1];
  result = (double *)sub_23AA336F8();
  if ((uint64_t)result < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 >= -1)
    {
      v7 = result;
      v114 = a1;
      if (v4 < 2)
      {
        v21 = (char *)MEMORY[0x24BEE4AF8];
        v120 = MEMORY[0x24BEE4AF8];
        __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v4 != 1)
        {
          v24 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          if (v24 < 2)
            goto LABEL_127;
          goto LABEL_115;
        }
      }
      else
      {
        v8 = v6 >> 1;
        type metadata accessor for FMPFSKPatternFragmentNode();
        v9 = sub_23AA330E0();
        *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
        __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
        v120 = v9;
      }
      v116 = v7;
      v22 = 0;
      v23 = *a1;
      v115 = *a1 - 8;
      v21 = (char *)MEMORY[0x24BEE4AF8];
      v117 = v4;
      v118 = *a1;
      while (1)
      {
        v25 = v22++;
        if (v22 < v4)
        {
          v26 = *(_QWORD *)(v23 + 8 * v22);
          v27 = (double *)(v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
          if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
            goto LABEL_171;
          v28 = (double *)(v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
          if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
            goto LABEL_172;
          v29 = *(_QWORD *)(v23 + 8 * v25);
          v30 = (double *)(v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
          if ((*(_BYTE *)(v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
            goto LABEL_173;
          v31 = v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
          if ((*(_BYTE *)(v31 + 16) & 1) != 0)
            goto LABEL_174;
          v32 = v27[1] - v28[1];
          v33 = v32 * v32 + (*v27 - *v28) * (*v27 - *v28);
          v34 = (v30[1] - *(double *)(v31 + 8)) * (v30[1] - *(double *)(v31 + 8))
              + (*v30 - *(double *)v31) * (*v30 - *(double *)v31);
          v22 = v25 + 2;
          if (v25 + 2 < v4)
          {
            do
            {
              v35 = *(_QWORD *)(v23 + 8 * v22);
              if ((*(_BYTE *)(v35 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
                goto LABEL_165;
              if ((*(_BYTE *)(v35 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
                goto LABEL_166;
              v37 = (double *)(v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
              if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
                goto LABEL_167;
              v38 = v26 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
              if ((*(_BYTE *)(v38 + 16) & 1) != 0)
                goto LABEL_168;
              v36 = (double *)(v35 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
              if (v33 < v34 == (v36[1]
                               - *(double *)(v35
                                           + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition
                                           + 8))
                              * (v36[1]
                               - *(double *)(v35
                                           + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition
                                           + 8))
                              + (*v36
                               - *(double *)(v35
                                           + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition))
                              * (*v36
                               - *(double *)(v35
                                           + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition)) >= (v37[1] - *(double *)(v38 + 8)) * (v37[1] - *(double *)(v38 + 8)) + (*v37 - *(double *)v38) * (*v37 - *(double *)v38))
                goto LABEL_38;
              ++v22;
              v26 = v35;
            }
            while (v4 != v22);
            v22 = v4;
          }
LABEL_38:
          if (v33 < v34)
          {
            if (v22 < v25)
              goto LABEL_151;
            if (v25 < v22)
            {
              v39 = (uint64_t *)(v115 + 8 * v22);
              v40 = v22;
              v41 = v25;
              v42 = (uint64_t *)(v23 + 8 * v25);
              do
              {
                if (v41 != --v40)
                {
                  if (!v23)
                    goto LABEL_169;
                  v43 = *v42;
                  *v42 = *v39;
                  *v39 = v43;
                }
                ++v41;
                --v39;
                ++v42;
              }
              while (v41 < v40);
            }
          }
        }
        if (v22 < v4)
        {
          if (__OFSUB__(v22, v25))
            goto LABEL_149;
          if (v22 - v25 < (uint64_t)v116)
          {
            v44 = (uint64_t)v116 + v25;
            if (__OFADD__(v25, v116))
              goto LABEL_152;
            if (v44 >= v4)
              v44 = v4;
            if (v44 < v25)
            {
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              goto LABEL_155;
            }
            if (v22 != v44)
            {
              v45 = (uint64_t *)(v115 + 8 * v22);
              do
              {
                v46 = *(_QWORD *)(v23 + 8 * v22);
                v47 = v25;
                v48 = v45;
                do
                {
                  v49 = (double *)(v46 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
                  if ((*(_BYTE *)(v46 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
                    goto LABEL_159;
                  v50 = (double *)(v46 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
                  if ((*(_BYTE *)(v46 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
                    goto LABEL_160;
                  v51 = *v48;
                  v52 = *v48 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition;
                  if ((*(_BYTE *)(v52 + 16) & 1) != 0)
                    goto LABEL_161;
                  if ((*(_BYTE *)(v51 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
                    goto LABEL_162;
                  v54 = v49[1] - v50[1];
                  v53 = (double *)(v51 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
                  if (v54 * v54 + (*v49 - *v50) * (*v49 - *v50) >= (*(double *)(v52 + 8) - v53[1])
                                                                  * (*(double *)(v52 + 8) - v53[1])
                                                                  + (*(double *)v52 - *v53) * (*(double *)v52 - *v53))
                    break;
                  if (!v23)
                    goto LABEL_163;
                  *v48 = v46;
                  v48[1] = v51;
                  --v48;
                  ++v47;
                }
                while (v22 != v47);
                ++v22;
                ++v45;
              }
              while (v22 != v44);
              v22 = v44;
            }
          }
        }
        if (v22 < v25)
          goto LABEL_144;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_23A9F9320(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
        v56 = *((_QWORD *)v21 + 2);
        v55 = *((_QWORD *)v21 + 3);
        v24 = v56 + 1;
        v23 = v118;
        if (v56 >= v55 >> 1)
        {
          v105 = sub_23A9F9320((char *)(v55 > 1), v56 + 1, 1, v21);
          v23 = v118;
          v21 = v105;
        }
        *((_QWORD *)v21 + 2) = v24;
        v57 = v21 + 32;
        v58 = &v21[16 * v56 + 32];
        *(_QWORD *)v58 = v25;
        *((_QWORD *)v58 + 1) = v22;
        if (v56)
        {
          while (1)
          {
            v59 = v24 - 1;
            if (v24 >= 4)
            {
              v64 = &v57[16 * v24];
              v65 = *((_QWORD *)v64 - 8);
              v66 = *((_QWORD *)v64 - 7);
              v70 = __OFSUB__(v66, v65);
              v67 = v66 - v65;
              if (v70)
                goto LABEL_133;
              v69 = *((_QWORD *)v64 - 6);
              v68 = *((_QWORD *)v64 - 5);
              v70 = __OFSUB__(v68, v69);
              v62 = v68 - v69;
              v63 = v70;
              if (v70)
                goto LABEL_134;
              v71 = v24 - 2;
              v72 = &v57[16 * v24 - 32];
              v74 = *(_QWORD *)v72;
              v73 = *((_QWORD *)v72 + 1);
              v70 = __OFSUB__(v73, v74);
              v75 = v73 - v74;
              if (v70)
                goto LABEL_136;
              v70 = __OFADD__(v62, v75);
              v76 = v62 + v75;
              if (v70)
                goto LABEL_139;
              if (v76 >= v67)
              {
                v94 = &v57[16 * v59];
                v96 = *(_QWORD *)v94;
                v95 = *((_QWORD *)v94 + 1);
                v70 = __OFSUB__(v95, v96);
                v97 = v95 - v96;
                if (v70)
                  goto LABEL_143;
                v87 = v62 < v97;
                goto LABEL_103;
              }
            }
            else
            {
              if (v24 != 3)
              {
                v88 = *((_QWORD *)v21 + 4);
                v89 = *((_QWORD *)v21 + 5);
                v70 = __OFSUB__(v89, v88);
                v81 = v89 - v88;
                v82 = v70;
                goto LABEL_97;
              }
              v61 = *((_QWORD *)v21 + 4);
              v60 = *((_QWORD *)v21 + 5);
              v70 = __OFSUB__(v60, v61);
              v62 = v60 - v61;
              v63 = v70;
            }
            if ((v63 & 1) != 0)
              goto LABEL_135;
            v71 = v24 - 2;
            v77 = &v57[16 * v24 - 32];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v80 = __OFSUB__(v78, v79);
            v81 = v78 - v79;
            v82 = v80;
            if (v80)
              goto LABEL_138;
            v83 = &v57[16 * v59];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v70 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v70)
              goto LABEL_141;
            if (__OFADD__(v81, v86))
              goto LABEL_142;
            if (v81 + v86 >= v62)
            {
              v87 = v62 < v86;
LABEL_103:
              if (v87)
                v59 = v71;
              goto LABEL_105;
            }
LABEL_97:
            if ((v82 & 1) != 0)
              goto LABEL_137;
            v90 = &v57[16 * v59];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v70 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v70)
              goto LABEL_140;
            if (v93 < v81)
              goto LABEL_24;
LABEL_105:
            v98 = v59 - 1;
            if (v59 - 1 >= v24)
            {
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
              goto LABEL_153;
            }
            if (!v23)
              goto LABEL_164;
            v99 = v21;
            v100 = &v57[16 * v98];
            v101 = *(_QWORD *)v100;
            v102 = &v57[16 * v59];
            v103 = *((_QWORD *)v102 + 1);
            sub_23A9F8CC0((char *)(v23 + 8 * *(_QWORD *)v100), (char *)(v23 + 8 * *(_QWORD *)v102), v23 + 8 * v103, __dst);
            if (v1)
              goto LABEL_127;
            if (v103 < v101)
              goto LABEL_130;
            if (v59 > *((_QWORD *)v99 + 2))
              goto LABEL_131;
            *(_QWORD *)v100 = v101;
            *(_QWORD *)&v57[16 * v98 + 8] = v103;
            v104 = *((_QWORD *)v99 + 2);
            if (v59 >= v104)
              goto LABEL_132;
            v21 = v99;
            v24 = v104 - 1;
            memmove(&v57[16 * v59], v102 + 16, 16 * (v104 - 1 - v59));
            *((_QWORD *)v99 + 2) = v104 - 1;
            v23 = v118;
            if (v104 <= 2)
              goto LABEL_24;
          }
        }
        v24 = 1;
LABEL_24:
        v4 = v117;
        if (v22 >= v117)
        {
          v2 = v1;
          if (v24 < 2)
          {
LABEL_127:
            swift_bridgeObjectRelease();
            *(_QWORD *)((v120 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_23AA330C8();
            return (double *)swift_bridgeObjectRelease();
          }
LABEL_115:
          v106 = *v114;
          while (1)
          {
            v107 = v24 - 2;
            if (v24 < 2)
              goto LABEL_145;
            if (!v106)
              goto LABEL_170;
            v108 = v21;
            v109 = v21 + 32;
            v110 = *(_QWORD *)&v21[16 * v107 + 32];
            v111 = *(_QWORD *)&v21[16 * v24 + 24];
            sub_23A9F8CC0((char *)(v106 + 8 * v110), (char *)(v106 + 8 * *(_QWORD *)&v109[16 * v24 - 16]), v106 + 8 * v111, __dst);
            if (v2)
              goto LABEL_127;
            if (v111 < v110)
              goto LABEL_146;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v108 = sub_23A9F9620((uint64_t)v108);
            if (v107 >= *((_QWORD *)v108 + 2))
              goto LABEL_147;
            v112 = &v108[16 * v107 + 32];
            *(_QWORD *)v112 = v110;
            *((_QWORD *)v112 + 1) = v111;
            v113 = *((_QWORD *)v108 + 2);
            if (v24 > v113)
              goto LABEL_148;
            v21 = v108;
            memmove(&v108[16 * v24 + 16], &v108[16 * v24 + 32], 16 * (v113 - v24));
            *((_QWORD *)v108 + 2) = v113 - 1;
            v24 = v113 - 1;
            if (v113 <= 2)
              goto LABEL_127;
          }
        }
      }
    }
LABEL_175:
    result = (double *)sub_23AA3359C();
    __break(1u);
    return result;
  }
  if (v4 < 0)
    goto LABEL_150;
  if ((unint64_t)v4 >= 2)
  {
    v10 = 0;
    v11 = *a1;
    v12 = 1;
LABEL_12:
    v13 = *(_QWORD *)(v11 + 8 * v12);
    v14 = v10;
    while (1)
    {
      v15 = (double *)(v13 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
      if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
        break;
      result = (double *)(v13 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
      if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
        goto LABEL_157;
      v16 = (uint64_t *)(v11 + 8 * v14);
      v17 = *v16;
      v18 = *v16 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition;
      if ((*(_BYTE *)(v18 + 16) & 1) != 0)
        goto LABEL_156;
      if ((*(_BYTE *)(v17 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
        goto LABEL_154;
      v20 = v15[1] - result[1];
      v19 = (double *)(v17 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
      if (v20 * v20 + (*v15 - *result) * (*v15 - *result) < (*(double *)(v18 + 8) - v19[1])
                                                           * (*(double *)(v18 + 8) - v19[1])
                                                           + (*(double *)v18 - *v19) * (*(double *)v18 - *v19))
      {
        if (!v11)
          goto LABEL_158;
        v16[1] = v17;
        *(_QWORD *)(v11 + 8 * v14--) = v13;
        if (v14 != -1)
          continue;
      }
      ++v12;
      ++v10;
      if (v12 == v4)
        return result;
      goto LABEL_12;
    }
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
  return result;
}

uint64_t sub_23A9F7FD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  unint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *__dst;
  char *v150;
  char *v151;
  uint64_t v152;

  v5 = a1[1];
  result = sub_23AA336F8();
  if (result >= v5)
  {
    if (v5 < 0)
    {
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
LABEL_219:
      sub_23AA335F0();
      __break(1u);
      goto LABEL_220;
    }
    if ((unint64_t)v5 >= 2)
    {
      v11 = 0;
      v12 = *a1;
      v13 = 1;
LABEL_12:
      v14 = *(_QWORD *)(v12 + 8 * v13);
      v15 = v11;
      while (1)
      {
        v16 = v14 + *a2;
        if ((*(_BYTE *)(v16 + 16) & 1) != 0)
          goto LABEL_209;
        v17 = *(_QWORD *)(v12 + 8 * v15);
        v18 = v17 + *a2;
        if ((*(_BYTE *)(v18 + 16) & 1) != 0)
          goto LABEL_210;
        if (*(double *)(v16 + 8) < *(double *)(v18 + 8))
        {
          if (!v12)
            goto LABEL_211;
          *(_QWORD *)(v12 + 8 * v15 + 8) = v17;
          *(_QWORD *)(v12 + 8 * v15--) = v14;
          if (v15 != -1)
            continue;
        }
        ++v13;
        ++v11;
        if (v13 == v5)
          return result;
        goto LABEL_12;
      }
    }
  }
  else
  {
    if (v5 >= 0)
      v7 = v5;
    else
      v7 = v5 + 1;
    if (v5 < -1)
    {
LABEL_220:
      result = sub_23AA3359C();
      __break(1u);
      return result;
    }
    v139 = result;
    v141 = v2;
    v137 = a1;
    if (v5 >= 2)
    {
      v8 = v7 >> 1;
      type metadata accessor for FMPFSKPatternFragmentNode();
      v9 = sub_23AA330E0();
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
      v10 = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
      v152 = v9;
      goto LABEL_20;
    }
    v19 = (char *)MEMORY[0x24BEE4AF8];
    v152 = MEMORY[0x24BEE4AF8];
    v10 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 == 1)
    {
LABEL_20:
      v20 = 0;
      v21 = *a1;
      v138 = v21 + 16;
      v143 = v21 - 8;
      v19 = (char *)MEMORY[0x24BEE4AF8];
      v22 = v5;
      v140 = v5;
      __dst = v10;
      v147 = v21;
      while (1)
      {
        v24 = v20 + 1;
        if (v20 + 1 < v22)
        {
          v25 = *a2;
          v26 = *(_QWORD *)(v21 + 8 * v24) + *a2;
          if ((*(_BYTE *)(v26 + 16) & 1) != 0)
            goto LABEL_216;
          v27 = *(_QWORD *)(v21 + 8 * v20) + v25;
          if ((*(_BYTE *)(v27 + 16) & 1) != 0)
            goto LABEL_217;
          v28 = *(double *)(v27 + 8);
          v29 = *(double *)(v26 + 8);
          v24 = v20 + 2;
          if (v20 + 2 < v22)
          {
            v30 = (_QWORD *)(v138 + 8 * v20);
            do
            {
              v31 = *v30 + v25;
              if ((*(_BYTE *)(v31 + 16) & 1) != 0)
                goto LABEL_213;
              v32 = *(v30 - 1) + v25;
              if ((*(_BYTE *)(v32 + 16) & 1) != 0)
                goto LABEL_214;
              if (v29 < v28 == *(double *)(v31 + 8) >= *(double *)(v32 + 8))
                goto LABEL_33;
              ++v24;
              ++v30;
            }
            while (v22 != v24);
            v24 = v22;
          }
LABEL_33:
          if (v29 < v28)
          {
            if (v24 < v20)
              goto LABEL_198;
            if (v20 < v24)
            {
              v33 = (uint64_t *)(v143 + 8 * v24);
              v34 = v24;
              v35 = v20;
              v36 = (uint64_t *)(v21 + 8 * v20);
              do
              {
                if (v35 != --v34)
                {
                  if (!v21)
                    goto LABEL_215;
                  v37 = *v36;
                  *v36 = *v33;
                  *v33 = v37;
                }
                ++v35;
                --v33;
                ++v36;
              }
              while (v35 < v34);
            }
          }
        }
        if (v24 < v22)
        {
          if (__OFSUB__(v24, v20))
            goto LABEL_193;
          if (v24 - v20 < v139)
          {
            v38 = v20 + v139;
            if (__OFADD__(v20, v139))
              goto LABEL_199;
            if (v38 >= v22)
              v38 = v22;
            if (v38 < v20)
              goto LABEL_200;
            if (v24 != v38)
            {
              v39 = (uint64_t *)(v143 + 8 * v24);
              do
              {
                v40 = *(_QWORD *)(v21 + 8 * v24);
                v41 = v20;
                v42 = v39;
                do
                {
                  v43 = v40 + *a2;
                  if ((*(_BYTE *)(v43 + 16) & 1) != 0)
                    goto LABEL_205;
                  v44 = *v42;
                  v45 = *v42 + *a2;
                  if ((*(_BYTE *)(v45 + 16) & 1) != 0)
                    goto LABEL_206;
                  if (*(double *)(v43 + 8) >= *(double *)(v45 + 8))
                    break;
                  if (!v21)
                    goto LABEL_207;
                  *v42 = v40;
                  v42[1] = v44;
                  --v42;
                  ++v41;
                }
                while (v24 != v41);
                ++v24;
                ++v39;
              }
              while (v24 != v38);
              v24 = v38;
            }
          }
        }
        if (v24 < v20)
          goto LABEL_192;
        v142 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_23A9F9320(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
        v10 = __dst;
        v47 = *((_QWORD *)v19 + 2);
        v46 = *((_QWORD *)v19 + 3);
        v23 = v47 + 1;
        if (v47 >= v46 >> 1)
        {
          v129 = sub_23A9F9320((char *)(v46 > 1), v47 + 1, 1, v19);
          v10 = __dst;
          v19 = v129;
        }
        *((_QWORD *)v19 + 2) = v23;
        v48 = v19 + 32;
        v49 = &v19[16 * v47 + 32];
        *(_QWORD *)v49 = v20;
        *((_QWORD *)v49 + 1) = v142;
        if (v47)
          break;
        v23 = 1;
LABEL_22:
        v22 = v140;
        v20 = v142;
        if (v142 >= v140)
          goto LABEL_164;
      }
      v148 = v19 + 32;
      v144 = v19;
      while (1)
      {
        v50 = v23 - 1;
        if (v23 >= 4)
        {
          v55 = &v48[16 * v23];
          v56 = *((_QWORD *)v55 - 8);
          v57 = *((_QWORD *)v55 - 7);
          v61 = __OFSUB__(v57, v56);
          v58 = v57 - v56;
          if (v61)
            goto LABEL_181;
          v60 = *((_QWORD *)v55 - 6);
          v59 = *((_QWORD *)v55 - 5);
          v61 = __OFSUB__(v59, v60);
          v53 = v59 - v60;
          v54 = v61;
          if (v61)
            goto LABEL_182;
          v62 = v23 - 2;
          v63 = &v48[16 * v23 - 32];
          v65 = *(_QWORD *)v63;
          v64 = *((_QWORD *)v63 + 1);
          v61 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          if (v61)
            goto LABEL_184;
          v61 = __OFADD__(v53, v66);
          v67 = v53 + v66;
          if (v61)
            goto LABEL_187;
          if (v67 >= v58)
          {
            v85 = &v48[16 * v50];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v61 = __OFSUB__(v86, v87);
            v88 = v86 - v87;
            if (v61)
              goto LABEL_191;
            v78 = v53 < v88;
            goto LABEL_97;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v79 = *((_QWORD *)v19 + 4);
            v80 = *((_QWORD *)v19 + 5);
            v61 = __OFSUB__(v80, v79);
            v72 = v80 - v79;
            v73 = v61;
            goto LABEL_91;
          }
          v52 = *((_QWORD *)v19 + 4);
          v51 = *((_QWORD *)v19 + 5);
          v61 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          v54 = v61;
        }
        if ((v54 & 1) != 0)
          goto LABEL_183;
        v62 = v23 - 2;
        v68 = &v48[16 * v23 - 32];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v71 = __OFSUB__(v69, v70);
        v72 = v69 - v70;
        v73 = v71;
        if (v71)
          goto LABEL_186;
        v74 = &v48[16 * v50];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v61 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v61)
          goto LABEL_189;
        if (__OFADD__(v72, v77))
          goto LABEL_190;
        if (v72 + v77 >= v53)
        {
          v78 = v53 < v77;
LABEL_97:
          if (v78)
            v50 = v62;
          goto LABEL_99;
        }
LABEL_91:
        if ((v73 & 1) != 0)
          goto LABEL_185;
        v81 = &v48[16 * v50];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v61 = __OFSUB__(v82, v83);
        v84 = v82 - v83;
        if (v61)
          goto LABEL_188;
        if (v84 < v72)
          goto LABEL_22;
LABEL_99:
        if (v50 - 1 >= v23)
        {
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
          goto LABEL_194;
        }
        if (!v21)
          goto LABEL_212;
        v89 = a2;
        v90 = v19;
        v151 = &v48[16 * v50 - 16];
        v91 = *(_QWORD *)v151;
        v92 = &v48[16 * v50];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v150 = v92;
        v95 = (char *)(v21 + 8 * *(_QWORD *)v151);
        v96 = (char *)(v21 + 8 * *(_QWORD *)v92);
        v97 = v21 + 8 * v93;
        v98 = v96 - v95;
        v99 = v96 - v95 + 7;
        if (v96 - v95 >= 0)
          v99 = v96 - v95;
        v100 = v99 >> 3;
        v101 = v97 - (_QWORD)v96;
        v102 = v97 - (_QWORD)v96 + 7;
        if ((uint64_t)(v97 - (_QWORD)v96) >= 0)
          v102 = v97 - (_QWORD)v96;
        v103 = v102 >> 3;
        if (v100 >= v102 >> 3)
        {
          if (v101 < -7)
            goto LABEL_219;
          if ((unint64_t)v10 >= v97 || v10 != v96)
          {
            v146 = v93;
            v113 = *(_QWORD *)v151;
            v114 = v94;
            memmove(v10, v96, 8 * v103);
            v94 = v114;
            v93 = v146;
            v91 = v113;
            v10 = __dst;
          }
          v106 = &v10[8 * v103];
          v21 = v147;
          if (v91 >= v94 || v101 < 8)
          {
            v107 = v10;
            v19 = v90;
            a2 = v89;
            goto LABEL_152;
          }
          v115 = (char *)(v143 + 8 * v93);
          v19 = v90;
          a2 = v89;
          while (2)
          {
            v116 = *v89;
            v117 = *((_QWORD *)v106 - 1) + *v89;
            if ((*(_BYTE *)(v117 + 16) & 1) != 0)
              goto LABEL_203;
            v118 = v96 - 8;
            v119 = *((_QWORD *)v96 - 1);
            v120 = v119 + v116;
            if ((*(_BYTE *)(v119 + v116 + 16) & 1) != 0)
              goto LABEL_204;
            v121 = v115 + 8;
            if (*(double *)(v117 + 8) >= *(double *)(v120 + 8))
            {
              v119 = *((_QWORD *)v106 - 1);
              v118 = v96;
              if (v121 != v106)
              {
                v106 -= 8;
                goto LABEL_145;
              }
              v122 = v115 >= v106;
              v106 -= 8;
              if (v122)
LABEL_145:
                *(_QWORD *)v115 = v119;
            }
            else if (v121 != v96 || v115 >= v96)
            {
              goto LABEL_145;
            }
            if (v95 >= v118 || (v115 -= 8, v96 = v118, v10 >= v106))
            {
              v107 = v10;
              v96 = v118;
              goto LABEL_152;
            }
            continue;
          }
        }
        if (v98 < -7)
          goto LABEL_219;
        if (v10 != v95 || (v19 = v90, v10 >= v96))
        {
          v145 = v93;
          v104 = *(_QWORD *)v151;
          v105 = v94;
          memmove(v10, v95, 8 * v100);
          v94 = v105;
          v19 = v144;
          v93 = v145;
          v91 = v104;
          v10 = __dst;
        }
        v106 = &v10[8 * v100];
        a2 = v89;
        if (v94 < v93 && v98 >= 8)
        {
          v107 = v10;
          while (1)
          {
            v108 = *(_QWORD *)v96 + *v89;
            if ((*(_BYTE *)(v108 + 16) & 1) != 0)
              goto LABEL_201;
            v109 = *(_QWORD *)v107;
            v110 = *(_QWORD *)v107 + *v89;
            if ((*(_BYTE *)(v110 + 16) & 1) != 0)
              goto LABEL_202;
            if (*(double *)(v108 + 8) >= *(double *)(v110 + 8))
              break;
            v109 = *(_QWORD *)v96;
            v111 = v95 == v96;
            v96 += 8;
            if (!v111)
              goto LABEL_123;
LABEL_124:
            v95 += 8;
            if (v107 >= v106 || (unint64_t)v96 >= v97)
              goto LABEL_150;
          }
          v112 = v107 + 8;
          if (v95 == v107)
          {
            v107 += 8;
            if (v95 < v112)
              goto LABEL_124;
          }
          else
          {
            v107 += 8;
          }
LABEL_123:
          *(_QWORD *)v95 = v109;
          goto LABEL_124;
        }
        v107 = v10;
LABEL_150:
        v96 = v95;
        v21 = v147;
LABEL_152:
        v123 = v106 - v107;
        v124 = v106 - v107 + 7;
        if (v123 >= 0)
          v124 = v123;
        v48 = v148;
        if (v123 <= -8)
          goto LABEL_219;
        v125 = v124 >> 3;
        if (v96 != v107 || v96 >= &v107[8 * v125])
        {
          v126 = v93;
          v127 = v91;
          memmove(v96, v107, 8 * v125);
          v93 = v126;
          v91 = v127;
        }
        if (v93 < v91)
          goto LABEL_178;
        if (v50 > *((_QWORD *)v19 + 2))
          goto LABEL_179;
        *(_QWORD *)v151 = v91;
        *(_QWORD *)&v148[16 * v50 - 8] = v93;
        v128 = *((_QWORD *)v19 + 2);
        if (v50 >= (uint64_t)v128)
          goto LABEL_180;
        v23 = v128 - 1;
        memmove(v150, v150 + 16, 16 * (v128 - 1 - v50));
        *((_QWORD *)v19 + 2) = v128 - 1;
        v10 = __dst;
        if (v128 <= 2)
          goto LABEL_22;
      }
    }
    v23 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_164:
    if (v23 >= 2)
    {
      v130 = *v137;
      while (1)
      {
        v131 = v23 - 2;
        if (v23 < 2)
          break;
        if (!v130)
          goto LABEL_218;
        v132 = v10;
        v133 = *(_QWORD *)&v19[16 * v131 + 32];
        v134 = *(_QWORD *)&v19[16 * v23 + 24];
        sub_23A9F904C((char *)(v130 + 8 * v133), (char *)(v130 + 8 * *(_QWORD *)&v19[16 * v23 + 16]), v130 + 8 * v134, v10, a2);
        if (v141)
          goto LABEL_175;
        if (v134 < v133)
          goto LABEL_195;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_23A9F9620((uint64_t)v19);
        if (v131 >= *((_QWORD *)v19 + 2))
          goto LABEL_196;
        v135 = &v19[16 * v131 + 32];
        *(_QWORD *)v135 = v133;
        *((_QWORD *)v135 + 1) = v134;
        v136 = *((_QWORD *)v19 + 2);
        if (v23 > v136)
          goto LABEL_197;
        memmove(&v19[16 * v23 + 16], &v19[16 * v23 + 32], 16 * (v136 - v23));
        *((_QWORD *)v19 + 2) = v136 - 1;
        v23 = v136 - 1;
        v10 = v132;
        if (v136 <= 2)
          goto LABEL_175;
      }
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
LABEL_175:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v152 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_23AA330C8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A9F8A38(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 2;
            if (v21 <= v7)
              break;
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_23A9F94D0((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v6[1] >= v15[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F8CC0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double v21;
  char *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  double *v26;
  double *v27;
  char *v28;
  uint64_t v29;
  double *v30;
  double *v31;
  char *v32;
  double v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t *v36;
  char *v37;

  v4 = (uint64_t *)__dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v37 = __src;
  v36 = (uint64_t *)__dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v23 = &v4[v13];
      v35 = v23;
      v37 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v24 = (char *)(a3 - 8);
        while (1)
        {
          v25 = *(v23 - 1);
          v26 = (double *)(v25 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
          if ((*(_BYTE *)(v25 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
            break;
          v27 = (double *)(v25 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
          if ((*(_BYTE *)(v25 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
            goto LABEL_52;
          v28 = v6 - 8;
          v29 = *((_QWORD *)v6 - 1);
          if ((*(_BYTE *)(v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0)
            goto LABEL_53;
          if ((*(_BYTE *)(v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
            goto LABEL_54;
          v32 = v24 + 8;
          v33 = v26[1] - v27[1];
          v31 = (double *)(v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
          v30 = (double *)(v29 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition);
          if (v33 * v33 + (*v26 - *v27) * (*v26 - *v27) >= (v30[1] - v31[1]) * (v30[1] - v31[1])
                                                          + (*v30 - *v31) * (*v30 - *v31))
          {
            v35 = v23 - 1;
            if (v32 < (char *)v23 || v24 >= (char *)v23 || v32 != (char *)v23)
              *(_QWORD *)v24 = *(v23 - 1);
            --v23;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v32 != v6 || v24 >= v6)
              *(_QWORD *)v24 = v29;
            v37 = v6 - 8;
            v6 -= 8;
            if (v28 <= v7)
              goto LABEL_50;
          }
          v24 -= 8;
          if (v23 <= v4)
            goto LABEL_50;
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
LABEL_50:
      sub_23A9F9578((void **)&v37, (const void **)&v36, &v35);
      return 1;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v35 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        v15 = *(_QWORD *)v6;
        v16 = *(_QWORD *)v6 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition;
        if ((*(_BYTE *)(v16 + 16) & 1) != 0)
          break;
        v17 = (double *)(v15 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
        if ((*(_BYTE *)(v15 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
          goto LABEL_56;
        v18 = *v4;
        v19 = *v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition;
        if ((*(_BYTE *)(v19 + 16) & 1) != 0)
          goto LABEL_57;
        if ((*(_BYTE *)(v18 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
          goto LABEL_58;
        v21 = *(double *)(v16 + 8) - v17[1];
        v20 = (double *)(v18 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
        if (v21 * v21 + (*(double *)v16 - *v17) * (*(double *)v16 - *v17) >= (*(double *)(v19 + 8) - v20[1])
                                                                            * (*(double *)(v19 + 8) - v20[1])
                                                                            + (*(double *)v19 - *v20)
                                                                            * (*(double *)v19 - *v20))
        {
          if (v7 != (char *)v4)
            *(_QWORD *)v7 = v18;
          v36 = ++v4;
          v22 = v6;
        }
        else
        {
          v22 = v6 + 8;
          if (v7 < v6 || v7 >= v22 || v7 != v6)
            *(_QWORD *)v7 = v15;
        }
        v7 += 8;
        if (v4 < v14)
        {
          v6 = v22;
          if ((unint64_t)v22 < a3)
            continue;
        }
        v37 = v7;
        goto LABEL_50;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    goto LABEL_50;
  }
LABEL_59:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F904C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t *a5)
{
  char *v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  char *v29;
  const void *v30;
  char *v31;

  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v31 = __src;
  v30 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v20 = &v6[8 * v15];
      v29 = v20;
      v31 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v21 = (char *)(a3 - 8);
        while (1)
        {
          v22 = *a5;
          v23 = *((_QWORD *)v20 - 1) + *a5;
          if ((*(_BYTE *)(v23 + 16) & 1) != 0)
            break;
          v24 = v8 - 8;
          v25 = *((_QWORD *)v8 - 1);
          v26 = v25 + v22;
          if ((*(_BYTE *)(v25 + v22 + 16) & 1) != 0)
            goto LABEL_49;
          v27 = v21 + 8;
          if (*(double *)(v23 + 8) >= *(double *)(v26 + 8))
          {
            v29 = v20 - 8;
            if (v27 < v20 || v21 >= v20 || v27 != v20)
              *(_QWORD *)v21 = *((_QWORD *)v20 - 1);
            v24 = v8;
            v20 -= 8;
            if (v8 <= v9)
              goto LABEL_47;
          }
          else
          {
            if (v27 != v8 || v21 >= v8)
              *(_QWORD *)v21 = v25;
            v31 = v8 - 8;
            if (v24 <= v9)
              goto LABEL_47;
          }
          v21 -= 8;
          v8 = v24;
          if (v20 <= v6)
            goto LABEL_47;
        }
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_47:
      sub_23A9F9578((void **)&v31, &v30, &v29);
      return 1;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[8 * v12];
    v29 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      while (1)
      {
        v17 = *(_QWORD *)v8 + *a5;
        if ((*(_BYTE *)(v17 + 16) & 1) != 0)
          break;
        v18 = *(_QWORD *)v6 + *a5;
        if ((*(_BYTE *)(v18 + 16) & 1) != 0)
          goto LABEL_51;
        if (*(double *)(v17 + 8) >= *(double *)(v18 + 8))
        {
          if (v9 != v6 || v9 >= v6 + 8)
            *(_QWORD *)v9 = *(_QWORD *)v6;
          v30 = v6 + 8;
          v19 = v8;
          v6 += 8;
        }
        else
        {
          v19 = v8 + 8;
          if (v9 < v8 || v9 >= v19 || v9 != v8)
            *(_QWORD *)v9 = *(_QWORD *)v8;
        }
        v9 += 8;
        if (v6 < v16)
        {
          v8 = v19;
          if ((unint64_t)v19 < a3)
            continue;
        }
        v31 = v9;
        goto LABEL_47;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    goto LABEL_47;
  }
LABEL_52:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

char *sub_23A9F9320(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23A964084(&qword_2569D7ED0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_23A9F9418(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_23AA335F0();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_23A9F94D0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_23AA335F0();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_23A9F9578(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_23AA335F0();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_23A9F9620(uint64_t a1)
{
  return sub_23A9F9320(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_23A9F9634()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = v2 - 2;
  if (v2 >= 2)
  {
    v4 = 0;
    while (1)
    {
      v13 = 0;
      MEMORY[0x23B85DB3C](&v13, 8);
      v6 = (v13 * (unsigned __int128)v2) >> 64;
      if (v2 > v13 * v2)
      {
        v7 = -(uint64_t)v2 % v2;
        if (v7 > v13 * v2)
        {
          do
          {
            v13 = 0;
            MEMORY[0x23B85DB3C](&v13, 8);
          }
          while (v7 > v13 * v2);
          v6 = (v13 * (unsigned __int128)v2) >> 64;
        }
      }
      v8 = v4 + v6;
      if (__OFADD__(v4, v6))
        break;
      if (v4 != v8)
      {
        v9 = *(_QWORD *)(v1 + 16);
        if (v4 >= v9)
          goto LABEL_19;
        if (v8 >= v9)
          goto LABEL_20;
        v11 = *(_OWORD *)(v1 + 32 + 16 * v4);
        v12 = *(_OWORD *)(v1 + 32 + 16 * v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v1 = sub_23A9FA29C(v1);
        v10 = *(_QWORD *)(v1 + 16);
        if (v4 >= v10)
          goto LABEL_21;
        *(_OWORD *)(v1 + 32 + 16 * v4) = v12;
        if (v8 >= v10)
          goto LABEL_22;
        *(_OWORD *)(v1 + 32 + 16 * v8) = v11;
        *v0 = v1;
      }
      --v2;
      if (v4++ == v3)
        return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

void sub_23A9F977C()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;

  v1 = *(_QWORD *)(*v0 + 16);
  v2 = v1 - 2;
  if (v1 >= 2)
  {
    v3 = 0;
    while (1)
    {
      v20 = 0;
      MEMORY[0x23B85DB3C](&v20, 8);
      v5 = (v20 * (unsigned __int128)v1) >> 64;
      if (v1 > v20 * v1)
      {
        v6 = -(uint64_t)v1 % v1;
        if (v6 > v20 * v1)
        {
          do
          {
            v20 = 0;
            MEMORY[0x23B85DB3C](&v20, 8);
          }
          while (v6 > v20 * v1);
          v5 = (v20 * (unsigned __int128)v1) >> 64;
        }
      }
      v7 = v3 + v5;
      if (__OFADD__(v3, v5))
        break;
      if (v3 != v7)
      {
        v8 = *v0;
        v9 = *(_QWORD *)(*v0 + 16);
        if (v3 >= v9)
          goto LABEL_21;
        if (v7 >= v9)
          goto LABEL_22;
        v10 = *(void **)(v8 + 32 + 8 * v7);
        v11 = *(id *)(v8 + 32 + 8 * v3);
        v12 = v10;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v0 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23A9FA2B0();
        if (v3 >= *(_QWORD *)(v8 + 16))
          goto LABEL_23;
        v14 = v8 + 8 * v3;
        v15 = *(void **)(v14 + 32);
        *(_QWORD *)(v14 + 32) = v12;

        sub_23AA33560();
        v16 = *v0;
        v17 = swift_isUniquelyReferenced_nonNull_native();
        *v0 = v16;
        if ((v17 & 1) == 0)
          sub_23A9FA2B0();
        if (v7 >= *(_QWORD *)(v16 + 16))
          goto LABEL_24;
        v18 = v16 + 8 * v7;
        v19 = *(void **)(v18 + 32);
        *(_QWORD *)(v18 + 32) = v11;

        sub_23AA33560();
      }
      --v1;
      if (v3++ == v2)
        return;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_23A9F991C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23A9FA848(&qword_2569D7EF8, &qword_2569D7EF0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_23A964084(&qword_2569D7EF0);
          v12 = sub_23AA06530(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D5998);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F9B30(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23A9FA848(&qword_2569D7EE0, &qword_2569D7ED8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_23A964084(&qword_2569D7ED8);
          v12 = sub_23AA06588(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for FMPFSKPatternFragmentNode();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23A9F9D34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_23A963A14(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_23A963B98(v21, (uint64_t)v22);
    result = sub_23A963B98(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23A9F9F40(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23AA32E1C();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_23A972098((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23A9FA288(_QWORD *a1)
{
  return sub_23A9F626C(0, a1[2], 0, a1);
}

uint64_t sub_23A9FA29C(uint64_t a1)
{
  return sub_23A9F6794(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_23A9FA2B0()
{
  JUMPOUT(0x23B85D284);
}

id sub_23A9FA2C4(double *a1, unint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  uint64_t *v14;
  __int128 *v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id result;
  char *v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  __double2 v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  double v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjCClassFromMetadata;
  double v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  char v61;
  char v62;
  uint64_t v63;
  double v64;
  uint64_t *v65;
  double v66;
  double v67;
  uint64_t v68;
  void *v73;
  double v74;
  double v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;

  LOBYTE(v18) = a7;
  LOBYTE(v19) = a5;
  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFSKNode()), sel_init);
  v73 = result;
  v78 = MEMORY[0x24BEE4AF8];
  v29 = (char *)a1 - 1;
  if (__OFSUB__(a1, 1))
    goto LABEL_23;
  v17 = (uint64_t)a1 - (a2 & 1);
  v68 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType;
  if (*((_BYTE *)v14 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType) == 1)
  {
    a1 = (double *)&xmmword_2569E0288 + 1;
    a2 = (unint64_t)&xmmword_2569E02A8 + 8;
    v15 = &xmmword_2569E02A8;
    v16 = (double *)&xmmword_2569E0298 + 1;
    if (qword_2569D4B30 != -1)
    {
      result = (id)swift_once();
      if ((v17 & 0x8000000000000000) == 0)
        goto LABEL_8;
      goto LABEL_26;
    }
  }
  else
  {
    a1 = (double *)&xmmword_2569E01B8 + 1;
    a2 = (unint64_t)&xmmword_2569E01D8 + 8;
    v15 = &xmmword_2569E01D8;
    v16 = (double *)&xmmword_2569E01C8 + 1;
    if (qword_2569D4B28 != -1)
      goto LABEL_25;
  }
  if (v17 < 0)
  {
LABEL_26:
    __break(1u);
    return result;
  }
LABEL_8:
  while (v17)
  {
    v66 = *v16 * 0.5;
    v67 = *v16 * -0.5;
    if (v67 <= v66)
    {
      v63 = v17;
      v65 = v14;
      v61 = v18 & 1;
      v62 = v19 & 1;
      v60 = (a11 - a9) / (double)(uint64_t)v29;
      v58 = *(_QWORD *)v15;
      v59 = *(double *)a2;
      v56 = (a12 - a10) / (double)(uint64_t)v29;
      v57 = *a1;
      type metadata accessor for FMPFView();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v17 = objc_opt_self();
      v30 = objc_opt_self();
      v19 = (void *)v30;
      v18 = 0;
      a2 = 0x800000023AA3FF40;
      v64 = a14;
      while (1)
      {
        v75 = a9;
        a9 = a10;
        sub_23A9F604C(v30, v67, v66);
        a11 = 1.0;
        v32 = (1.0 - v31) * a14;
        a12 = sub_23A964320(*(uint64_t *)&v32, 0, 0, 1, 2u, 8);
        a10 = v33;
        v35 = v34;
        v36 = sub_23A9644D8(0x20000000000001);
        a14 = 1.0;
        v37 = v36 == 0x20000000000000 ? 1.0 : ((double)(unint64_t)v36 * 1.11022302e-16 * 100.0 + 0.0) / 100.0;
        sub_23A9F604C(v36, 0.0, 3.14159265);
        sub_23A9644D8(0x7FFFFFFFFFFFFFFFLL);
        v38 = __sincos_stret(a12);
        if (__OFADD__(a8, v18))
          break;
        v76 = 0x746E656D67617246;
        v77 = 0xE900000000000023;
        sub_23AA33710();
        sub_23AA33038();
        swift_bridgeObjectRelease();
        v40 = v76;
        v39 = v77;
        v41 = objc_msgSend((id)v17, sel_bundleForClass_, ObjCClassFromMetadata);
        v42 = (void *)sub_23AA32FB4();
        v43 = objc_msgSend(v19, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v42, v41, 0);

        v74 = a10;
        if (v43)
        {
          v44 = objc_msgSend((id)objc_opt_self(), sel_textureWithImage_, v43);

          v41 = v43;
        }
        else
        {
          v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9ED0]), sel_init);
        }
        v45 = a13 - v57 * ((1.0 - v37) * a13);

        LOBYTE(v76) = *((_BYTE *)v65 + v68);
        v16 = (double *)objc_allocWithZone((Class)type metadata accessor for FMPFSKPatternFragmentNode());
        v46 = a3;
        a1 = (double *)v44;
        v47 = a9;
        *(double *)&v53 = v38.__cosval * v45;
        *(double *)&v54 = v38.__sinval * v45;
        a14 = v64;
        v52 = sub_23A9BF058((unsigned __int8 *)&v76, v37, a13 - v57 * ((1.0 - v37) * a13), v64, v32, v40, v39, a3, v44, 0, 0, v58, v48, v49, v50, v51, 0, v59, 0,
                v53,
                v54,
                0,
                v74,
                v35,
                0,
                *(uint64_t *)&v75,
                *(uint64_t *)&a9,
                0,
                a4,
                v62,
                a6,
                v61,
                0,
                0);
        objc_msgSend(v73, sel_addChild_, v52);
        v29 = v52;
        v14 = &v78;
        MEMORY[0x23B85CC30]();
        v15 = *(__int128 **)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)v15 >= *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23AA330D4();
        ++v18;
        sub_23AA330EC();
        sub_23AA330C8();

        a9 = v60 + v75;
        a10 = v56 + v47;
        if (v63 == v18)
          return v73;
      }
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
LABEL_25:
    result = (id)swift_once();
    if (v17 < 0)
      goto LABEL_26;
  }
  return v73;
}

uint64_t sub_23A9FA848(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23A96C258(a2);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A9FA888(uint64_t a1, __int128 *a2, uint64_t a3, char a4, uint64_t a5, double sinval, double a7, double a8, double cosval, double a10)
{
  uint64_t v10;
  id v11;
  objc_class *v18;
  void **p_weak_ivar_lyt;
  double *v20;
  double *v21;
  __int128 *v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  double *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  __double2 v42;
  unint64_t v43;
  double *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  unint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  long double v61;
  double v62;
  double v63;
  unint64_t v64;
  double v65;
  double v66;
  __double2 v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  __int128 *v72;
  double v73;
  double v74;
  double v75;
  double v76;
  char *v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  uint64_t v85;
  id v86;
  __int128 *v87;
  id v88;
  id v89;
  id v90;
  double v91;
  char v92;
  double v93;
  __int128 v94;
  __int128 v95;
  double v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  double v100;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD v111[9];

  LOBYTE(v11) = a4;
  v18 = (objc_class *)type metadata accessor for FMPFSKNode();
  p_weak_ivar_lyt = &FMProximityConnectionManager.weak_ivar_lyt;
  v105 = objc_msgSend(objc_allocWithZone(v18), sel_init);
  v110 = MEMORY[0x24BEE4AF8];
  v106 = v10;
  v104 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType;
  if (*(_BYTE *)(v10 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType) == 1)
  {
    v20 = (double *)&xmmword_2569E0298 + 1;
    v21 = (double *)&xmmword_2569E02A8 + 1;
    v22 = &xmmword_2569E02A8;
    if (qword_2569D4B30 != -1)
      swift_once();
  }
  else
  {
    v20 = (double *)&xmmword_2569E01C8 + 1;
    v21 = (double *)&xmmword_2569E01D8 + 1;
    v22 = &xmmword_2569E01D8;
    if (qword_2569D4B28 != -1)
      goto LABEL_82;
  }
  while (1)
  {
    if (a1 <= 1)
      v23 = 1;
    else
      v23 = a1;
    if (__OFSUB__(a1, 1))
      goto LABEL_79;
    v99 = *(_QWORD *)v22;
    v100 = *v21;
    v24 = *v20;
    v25 = (double)(a1 - 1);
    p_weak_ivar_lyt = (void **)objc_msgSend(objc_allocWithZone(v18), (SEL)p_weak_ivar_lyt[205]);
    v26 = v106 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config;
    v91 = 0.0;
    if ((*(_BYTE *)(v106 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config + 64) & 1) != 0
      || (*(_BYTE *)(v26 + 80) & 1) != 0)
    {
      v98 = 1;
      if (a1 < 0)
        goto LABEL_74;
    }
    else
    {
      v98 = 0;
      v91 = -(*(double *)(v26 + 72) - *(double *)(v26 + 56)) / v25;
      if (a1 < 0)
      {
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
    }
    v97 = v106 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config;
    if (a1)
    {
      v27 = a8 - sinval;
      v28 = cosval - a7;
      a8 = 6.28318531 / (double)v23;
      v29 = v27 / v25;
      v30 = v28 / v25;
      v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v32 = sub_23AA1CAC0(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v33 = v32[2];
      v34 = 2 * v33;
      v35 = a1;
      do
      {
        v36 = v32[3];
        v37 = v33 + 1;
        if (v33 >= v36 >> 1)
          v32 = sub_23AA1CAC0((_QWORD *)(v36 > 1), v33 + 1, 1, v32);
        v32[2] = v37;
        v38 = (double *)&v32[v34];
        v38[4] = sinval;
        v38[5] = a7;
        sinval = v29 + sinval;
        a7 = v30 + a7;
        v34 += 2;
        v33 = v37;
        --v35;
      }
      while (v35);
      v109 = v31;
      v39 = sub_23AA1CAC0(0, 1, 1, v31);
      v40 = v39[2];
      v41 = 2 * v40;
      a7 = -2.22044605e-16;
      do
      {
        v42 = __sincos_stret(a7);
        sinval = v42.__sinval;
        cosval = v42.__cosval;
        v43 = v39[3];
        if (v40 >= v43 >> 1)
          v39 = sub_23AA1CAC0((_QWORD *)(v43 > 1), v40 + 1, 1, v39);
        v39[2] = v40 + 1;
        v44 = (double *)&v39[v41];
        v44[4] = v42.__cosval * a10;
        v44[5] = v42.__sinval * a10;
        a7 = a7 - a8;
        v41 += 2;
        ++v40;
        --a1;
      }
      while (a1);
    }
    else
    {
      v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v109 = v39;
    sub_23A9F3520((uint64_t *)&v109, (uint64_t (*)(uint64_t))sub_23A9F6FB4);
    v45 = (uint64_t)v109;
    v46 = v109[2];
    if (v46)
    {
      swift_bridgeObjectRetain();
      v47 = 0;
      v48 = MEMORY[0x24BEE4AF8];
      do
      {
        v51 = v45 + 16 * v47;
        if (*(double *)(v51 + 40) < 0.0)
        {
          v94 = *(_OWORD *)(v51 + 32);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v111[0] = v48;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23AA1CF9C(0, *(_QWORD *)(v48 + 16) + 1, 1);
            v48 = v111[0];
          }
          v22 = *(__int128 **)(v48 + 16);
          v49 = *(_QWORD *)(v48 + 24);
          v50 = v94;
          if ((unint64_t)v22 >= v49 >> 1)
          {
            sub_23AA1CF9C(v49 > 1, (int64_t)v22 + 1, 1);
            v50 = v94;
            v48 = v111[0];
          }
          *(_QWORD *)(v48 + 16) = (char *)v22 + 1;
          *(_OWORD *)(v48 + 16 * (_QWORD)v22 + 32) = v50;
        }
        ++v47;
      }
      while (v46 != v47);
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = MEMORY[0x24BEE4AF8];
    }
    v111[0] = v48;
    sub_23A9F9634();
    v20 = (double *)v111[0];
    v21 = *(double **)(v45 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      v22 = 0;
      v53 = MEMORY[0x24BEE4AF8];
      do
      {
        v56 = v45 + 16 * (_QWORD)v22;
        if (*(double *)(v56 + 40) >= 0.0)
        {
          v95 = *(_OWORD *)(v56 + 32);
          v57 = swift_isUniquelyReferenced_nonNull_native();
          v111[0] = v53;
          if ((v57 & 1) == 0)
          {
            sub_23AA1CF9C(0, *(_QWORD *)(v53 + 16) + 1, 1);
            v53 = v111[0];
          }
          a1 = *(_QWORD *)(v53 + 16);
          v54 = *(_QWORD *)(v53 + 24);
          v55 = v95;
          if (a1 >= v54 >> 1)
          {
            sub_23AA1CF9C(v54 > 1, a1 + 1, 1);
            v55 = v95;
            v53 = v111[0];
          }
          *(_QWORD *)(v53 + 16) = a1 + 1;
          *(_OWORD *)(v53 + 16 * a1 + 32) = v55;
        }
        v22 = (__int128 *)((char *)v22 + 1);
      }
      while (v21 != (double *)v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      v53 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v111[0] = v53;
    sub_23A9F9634();
    v58 = v111[0];
    v111[0] = v20;
    v59 = sub_23AA20994(v58);
    v18 = (objc_class *)v111[0];
    v60 = *(_QWORD *)(v111[0] + 16);
    if (!v60)
      break;
    v93 = v24 * 0.5;
    v96 = v24 * -0.5;
    if (v24 * -0.5 > v24 * 0.5)
      goto LABEL_80;
    if ((unint64_t)v60 <= v32[2])
    {
      v90 = p_weak_ivar_lyt;
      v20 = 0;
      p_weak_ivar_lyt = 0;
      v92 = v11 & 1;
      sinval = 1.0;
      v21 = (double *)0x800000023AA3FF60;
      while (1)
      {
        v61 = *(double *)((char *)v20 + (_QWORD)v18 + 32);
        a7 = *(double *)((char *)v20 + (_QWORD)v18 + 40);
        cosval = *(double *)((char *)v20 + (_QWORD)v32 + 32);
        a8 = *(double *)((char *)v20 + (_QWORD)v32 + 40);
        sub_23A9F604C(v59, v96, v93);
        v63 = v62;
        v64 = sub_23A9644D8(0x20000000000001);
        if (__OFADD__(a5, p_weak_ivar_lyt))
          goto LABEL_75;
        if (v64 == 0x20000000000000)
          v65 = 1.0;
        else
          v65 = ((double)v64 * 1.11022302e-16 * 100.0 + 0.0) / 100.0;
        v66 = atan2(a7, v61);
        v67 = __sincos_stret(v66);
        v68 = (1.0 - v63) * a10;
        a7 = v68 * v67.__sinval;
        v107 = 0x746E656D67617246;
        v108 = 0xE900000000000023;
        sub_23AA33710();
        sub_23AA33038();
        swift_bridgeObjectRelease();
        v69 = v107;
        v70 = v108;
        LOBYTE(v107) = *(_BYTE *)(v106 + v104);
        v71 = objc_allocWithZone((Class)type metadata accessor for FMPFSKPatternFragmentNode());
        v22 = a2;
        v72 = a2;
        v77 = sub_23A9BF058((unsigned __int8 *)&v107, v65, v68, a10, v68, v69, v70, a2, 0, 0xD000000000000015, 0x800000023AA3FF60, v99, v73, v74, v75, v76, 0, v100, 0,
                COERCE__INT64(v68 * v67.__cosval),
                *(uint64_t *)&a7,
                0,
                v68 * v67.__cosval,
                a7,
                0,
                *(uint64_t *)&cosval,
                *(uint64_t *)&a8,
                0,
                0,
                0,
                a3,
                v92,
                0,
                0);
        objc_msgSend(v105, sel_addChild_, v77);
        a1 = v77;
        MEMORY[0x23B85CC30]();
        v11 = *(id *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)v11 >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23AA330D4();
        sub_23AA330EC();
        result = sub_23AA330C8();
        if ((v98 & 1) == 0
          && *(_BYTE *)(v97 + 80) != 1
          && (*(_BYTE *)(v97 + 16) & 1) == 0
          && (*(_BYTE *)(v97 + 96) & 1) == 0)
        {
          v79 = *(_QWORD *)(v97 + 8);
          v80 = v79 + 1;
          if (__OFADD__(v79, 1))
            goto LABEL_76;
          v81 = *(_QWORD *)(v97 + 88);
          v82 = v80 * v81;
          if ((unsigned __int128)(v80 * (__int128)v81) >> 64 != (v80 * v81) >> 63)
            goto LABEL_77;
          if (!v82)
            goto LABEL_78;
          if (!((uint64_t)p_weak_ivar_lyt % v82))
          {
            v83 = round((v91 * (double)(uint64_t)p_weak_ivar_lyt + *(double *)(v97 + 72)) * 10.0) / 10.0;
            v84 = v83 * 10.0;
            if ((~COERCE__INT64(v83 * 10.0) & 0x7FF0000000000000) == 0)
            {
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              __break(1u);
              return result;
            }
            if (v84 <= -9.22337204e18)
              goto LABEL_84;
            if (v84 >= 9.22337204e18)
              goto LABEL_85;
            v85 = (uint64_t)v84;
            v22 = (__int128 *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
            objc_msgSend(v22, sel_setNumberStyle_, 1);
            if (__ROR8__(0xCCCCCCCCCCCCCCCDLL * v85 + 0x1999999999999998, 1) <= 0x1999999999999998uLL)
            {
              objc_msgSend(v22, sel_setMaximumFractionDigits_, 0);
            }
            else
            {
              objc_msgSend(v22, sel_setMinimumFractionDigits_, 1);
              objc_msgSend(v22, sel_setMaximumFractionDigits_, 1);
            }
            v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v83);
            v86 = objc_msgSend(v22, sel_stringFromNumber_, v11);

            if (v86)
            {
              LOBYTE(v11) = sub_23AA32FD8();
              v22 = v87;

              LOBYTE(v107) = *(_BYTE *)(v106 + v104);
              sub_23A9FB2C0(v97 + 120, (uint64_t)v111);
              v88 = objc_allocWithZone((Class)type metadata accessor for FMPFSKLabelNode());
              sub_23A9FB308((uint64_t)v111);
              v89 = sub_23AA06AC8(&v107, (uint64_t)v111, cosval, a8, 1.0 - (double)(uint64_t)p_weak_ivar_lyt / (double)v60);
              objc_msgSend(v90, sel_addChild_, v89);

            }
          }
        }
        p_weak_ivar_lyt = (void **)((char *)p_weak_ivar_lyt + 1);

        v20 += 2;
        if ((void **)v60 == p_weak_ivar_lyt)
          goto LABEL_72;
      }
    }
LABEL_81:
    __break(1u);
LABEL_82:
    swift_once();
  }
LABEL_72:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v105;
}

uint64_t sub_23A9FB2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D7F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A9FB308(uint64_t a1)
{
  sub_23A9E96DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
  return a1;
}

uint64_t sub_23A9FB340(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_23A9FB348(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_23A9FB350(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_23A9FB358()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AB0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0010);
  v9 = v0;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33218();
  v12 = os_log_type_enabled(v10, v11);
  v34 = v5;
  if (v12)
  {
    v31 = v2;
    v32 = v1;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode];
    if (v15)
    {
      v16 = objc_msgSend(v15, sel_description);
      v17 = sub_23AA32FD8();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0xE000000000000000;
    }
    v35 = sub_23A964DBC(v17, v19, aBlock);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v10, v11, "🧭 FMPFSKPatternNode%s: fragmentsStartedOrbiting()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v14, -1, -1);
    MEMORY[0x23B85DB24](v13, -1, -1);

    v2 = v31;
    v1 = v32;
  }
  else
  {

  }
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v9;
  v21 = (void *)objc_opt_self();
  v22 = v9;
  if (objc_msgSend(v21, sel_isMainThread))
  {
    v23 = &v22[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v22[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v24 = *((_QWORD *)v23 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 8))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_23A9731D4();
    v27 = (void *)sub_23AA33290();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = sub_23A9FCFF8;
    *(_QWORD *)(v28 + 24) = v20;
    aBlock[4] = (uint64_t)sub_23A9B18A8;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A9C4DBC;
    aBlock[3] = (uint64_t)&unk_250BC4FA0;
    v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v7, v4, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
  }

  return swift_release();
}

BOOL sub_23A9FB774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FB7D4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AB0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0010);
  v9 = v0;
  v10 = sub_23AA32E88();
  v11 = sub_23AA33218();
  v12 = os_log_type_enabled(v10, v11);
  v34 = v5;
  if (v12)
  {
    v31 = v2;
    v32 = v1;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_patternNode];
    if (v15)
    {
      v16 = objc_msgSend(v15, sel_description);
      v17 = sub_23AA32FD8();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0xE000000000000000;
    }
    v35 = sub_23A964DBC(v17, v19, aBlock);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v10, v11, "🧭 FMPFSKPatternNode%s: fragmentsStoppedOrbiting()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v14, -1, -1);
    MEMORY[0x23B85DB24](v13, -1, -1);

    v2 = v31;
    v1 = v32;
  }
  else
  {

  }
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v9;
  v21 = (void *)objc_opt_self();
  v22 = v9;
  if (objc_msgSend(v21, sel_isMainThread))
  {
    v23 = &v22[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v22[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v24 = *((_QWORD *)v23 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 16))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_23A9731D4();
    v27 = (void *)sub_23AA33290();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = sub_23A9FCFF0;
    *(_QWORD *)(v28 + 24) = v20;
    aBlock[4] = (uint64_t)sub_23A9B18A8;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A9C4DBC;
    aBlock[3] = (uint64_t)&unk_250BC4F28;
    v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v7, v4, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
  }

  return swift_release();
}

BOOL sub_23A9FBBF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 16))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FBC50()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = (void *)objc_opt_self();
  v11 = v0;
  if (objc_msgSend(v10, sel_isMainThread))
  {
    v12 = &v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v13 = *((_QWORD *)v12 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 40))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    sub_23A9731D4();
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23A9FCFE8;
    *(_QWORD *)(v17 + 24) = v9;
    aBlock[4] = sub_23A9B18A8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4EB0;
    v18 = _Block_copy(aBlock);
    v21 = v2;
    v19 = v18;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    v20 = v11;
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v8, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return swift_release();
  }
}

BOOL sub_23A9FBF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 40))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FBF78()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = (void *)objc_opt_self();
  v11 = v0;
  if (objc_msgSend(v10, sel_isMainThread))
  {
    v12 = &v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v13 = *((_QWORD *)v12 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 48))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    sub_23A9731D4();
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23A9FCFE0;
    *(_QWORD *)(v17 + 24) = v9;
    aBlock[4] = sub_23A9B18A8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4E38;
    v18 = _Block_copy(aBlock);
    v21 = v2;
    v19 = v18;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    v20 = v11;
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v8, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return swift_release();
  }
}

BOOL sub_23A9FC240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 48))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FC2A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = (void *)objc_opt_self();
  v11 = v0;
  if (objc_msgSend(v10, sel_isMainThread))
  {
    v12 = &v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v13 = *((_QWORD *)v12 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 56))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    sub_23A9731D4();
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23A9FCFD8;
    *(_QWORD *)(v17 + 24) = v9;
    aBlock[4] = sub_23A9B18A8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4DC0;
    v18 = _Block_copy(aBlock);
    v21 = v2;
    v19 = v18;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    v20 = v11;
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v8, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return swift_release();
  }
}

BOOL sub_23A9FC568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 56))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FC5C8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = (void *)objc_opt_self();
  v11 = v0;
  if (objc_msgSend(v10, sel_isMainThread))
  {
    v12 = &v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v13 = *((_QWORD *)v12 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 64))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    sub_23A9731D4();
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23A9FCFAC;
    *(_QWORD *)(v17 + 24) = v9;
    aBlock[4] = sub_23A9B18A8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4D48;
    v18 = _Block_copy(aBlock);
    v21 = v2;
    v19 = v18;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    v20 = v11;
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v8, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return swift_release();
  }
}

BOOL sub_23A9FC890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 64))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FC8F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = (void *)objc_opt_self();
  v11 = v0;
  if (objc_msgSend(v10, sel_isMainThread))
  {
    v12 = &v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v13 = *((_QWORD *)v12 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 72))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    sub_23A9731D4();
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23A9FCFA4;
    *(_QWORD *)(v17 + 24) = v9;
    aBlock[4] = sub_23A9B18A8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4CD0;
    v18 = _Block_copy(aBlock);
    v21 = v2;
    v19 = v18;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    v20 = v11;
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v8, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return swift_release();
  }
}

BOOL sub_23A9FCBB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 72))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FCC18()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = sub_23AA32ED0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = (void *)objc_opt_self();
  v11 = v0;
  if (objc_msgSend(v10, sel_isMainThread))
  {
    v12 = &v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate];
    if (MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]))
    {
      v13 = *((_QWORD *)v12 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 80))(ObjectType);

      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    sub_23A9731D4();
    v16 = (void *)sub_23AA33290();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23A9FCF84;
    *(_QWORD *)(v17 + 24) = v9;
    aBlock[4] = sub_23A968410;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC4C58;
    v18 = _Block_copy(aBlock);
    v21 = v2;
    v19 = v18;
    swift_retain();
    swift_release();
    sub_23AA32EE8();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    v20 = v11;
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    MEMORY[0x23B85CE40](0, v8, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return swift_release();
  }
}

BOOL sub_23A9FCEE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate;
  v2 = MEMORY[0x23B85DBF0](a1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 80))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v2 == 0;
}

uint64_t sub_23A9FCF60()
{
  uint64_t v0;

  return swift_deallocObject();
}

BOOL sub_23A9FCF84()
{
  uint64_t v0;

  return sub_23A9FCEE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9FCF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9FCF9C()
{
  return swift_release();
}

BOOL sub_23A9FCFA4()
{
  uint64_t v0;

  return sub_23A9FCBB8(*(_QWORD *)(v0 + 16));
}

BOOL sub_23A9FCFAC()
{
  uint64_t v0;

  return sub_23A9FC890(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9FCFB4()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_23A9FCFD8()
{
  uint64_t v0;

  return sub_23A9FC568(*(_QWORD *)(v0 + 16));
}

BOOL sub_23A9FCFE0()
{
  uint64_t v0;

  return sub_23A9FC240(*(_QWORD *)(v0 + 16));
}

BOOL sub_23A9FCFE8()
{
  uint64_t v0;

  return sub_23A9FBF18(*(_QWORD *)(v0 + 16));
}

BOOL sub_23A9FCFF0()
{
  uint64_t v0;

  return sub_23A9FBBF0(*(_QWORD *)(v0 + 16));
}

BOOL sub_23A9FCFF8()
{
  uint64_t v0;

  return sub_23A9FB774(*(_QWORD *)(v0 + 16));
}

void sub_23A9FD070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  _QWORD aBlock[6];

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x23B85DBF0](v3);
  if (v4)
  {
    v5 = (char *)v4;
    sub_23A9FDFB4();
    v6 = *(NSObject **)&v5[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalProcessingQueue];
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = sub_23A9FFA54;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_23A9FFA3C;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9AFD6C;
    aBlock[3] = &unk_250BC5110;
    v9 = _Block_copy(aBlock);
    v10 = v5;
    swift_retain();
    swift_release();
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v6 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_23A9ABF28();
      sub_23A9FDCAC();

    }
  }
}

id sub_23A9FD258()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id result;
  objc_super v10;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ecoModeObservation];
  if (v2)
  {
    v3 = v2;
    sub_23AA32CD8();

  }
  v4 = *(NSObject **)&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalProcessingQueue];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23A9FF940;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23A971F88;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9AFD6C;
  aBlock[3] = &unk_250BC5020;
  v7 = _Block_copy(aBlock);
  v8 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = (id)swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10.receiver = v8;
    v10.super_class = (Class)type metadata accessor for FMPFView();
    return objc_msgSendSuper2(&v10, sel_dealloc);
  }
  return result;
}

void sub_23A9FD56C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = (void *)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23AA35F80;
  v5 = objc_msgSend(*(id *)&v1[v2], sel_topAnchor);
  v6 = objc_msgSend(v1, (SEL)&selRef_setPreferredEdgeInsets_ + 4);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(*(id *)&v1[v2], sel_bottomAnchor);
  v9 = objc_msgSend(v1, (SEL)&selRef_didStartRangingOn_withError_ + 5);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(*(id *)&v1[v2], sel_leadingAnchor);
  v12 = objc_msgSend(v1, (SEL)&stru_250BD6128.name + 6);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(*(id *)&v1[v2], sel_trailingAnchor);
  v15 = objc_msgSend(v1, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v4 + 56) = v16;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v17 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v17);

  v18 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView];
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23AA35F80;
  v20 = objc_msgSend(v18, sel_topAnchor);
  v21 = objc_msgSend(v1, sel_topAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(v19 + 32) = v22;
  v23 = objc_msgSend(v18, sel_bottomAnchor);
  v24 = objc_msgSend(v1, sel_bottomAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(_QWORD *)(v19 + 40) = v25;
  v26 = objc_msgSend(v18, sel_leadingAnchor);
  v27 = objc_msgSend(v1, sel_leadingAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(_QWORD *)(v19 + 48) = v28;
  v29 = objc_msgSend(v18, sel_trailingAnchor);
  v30 = objc_msgSend(v1, sel_trailingAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(_QWORD *)(v19 + 56) = v31;
  sub_23AA330C8();
  v32 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v32);

}

void sub_23A9FD9D0()
{
  unsigned __int8 *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  int v5;
  __int128 *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  NSObject *v13;
  id v14;
  NSObject *v15;
  unsigned __int8 *v16;
  char *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  char *v21;
  unsigned __int16 v22;
  unsigned __int8 v23;
  _BYTE v24[184];
  _OWORD v25[11];
  char v26;
  _OWORD v27[11];
  char v28;

  objc_msgSend(v0, sel_bounds);
  v2 = v1;
  v4 = v3;
  v5 = v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_experienceType];
  if (v5 == 1)
  {
    if (qword_2569D4B30 != -1)
      swift_once();
    v6 = &xmmword_2569E0298;
  }
  else
  {
    if (qword_2569D4B28 != -1)
      swift_once();
    v6 = &xmmword_2569E01C8;
  }
  v7 = *(double *)v6;
  objc_msgSend(v0, sel_bounds);
  v9 = v8;
  v11 = v10;
  v12 = objc_allocWithZone((Class)type metadata accessor for FMPFRingView());
  v13 = sub_23A9B80C4(0, 0, v9, v11, v7);
  v23 = v5;
  v22 = *(_WORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_findingTechnology];
  sub_23A96C1B8((uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_config], (uint64_t)v24, &qword_2569D8080);
  sub_23A96C1B8((uint64_t)v24, (uint64_t)v25, &qword_2569D8080);
  if (sub_23A9FEA48((uint64_t)v25) == 1)
  {
    __break(1u);
  }
  else
  {
    v27[8] = v25[8];
    v27[9] = v25[9];
    v27[10] = v25[10];
    v28 = v26;
    v27[4] = v25[4];
    v27[5] = v25[5];
    v27[6] = v25[6];
    v27[7] = v25[7];
    v27[0] = v25[0];
    v27[1] = v25[1];
    v27[2] = v25[2];
    v27[3] = v25[3];
    v14 = objc_allocWithZone((Class)type metadata accessor for FMPFSKScene());
    sub_23A9FF888((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23A9FEA6C);
    v15 = v13;
    v16 = v0;
    v17 = sub_23A9E5F00(&v23, &v22, (uint64_t)v27, v13, (uint64_t)v0, &off_250BC2120, v2, v4);
    -[NSObject setFrame:](v15, sel_setFrame_, 0.0, 0.0, v2, v4);
    sub_23A9B92A0(0, 0, 1);
    v18 = *(void **)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView];
    *(_QWORD *)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView] = v13;
    v19 = v15;

    -[NSObject setUserInteractionEnabled:](v19, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v16, sel_addSubview_, v19);
    sub_23A9E8294(*(void **)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView], 1);
    v20 = *(void **)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    *(_QWORD *)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene] = v17;
    v21 = v17;

    sub_23A9FE324(*(_QWORD *)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastThermalState]);
  }
}

void sub_23A9FDCAC()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  unsigned int v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFARTrackingConfiguration()), sel_init);
  objc_msgSend(v2, sel_setLightEstimationEnabled_, 1);
  v3 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView], sel_pointOfView);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_addChildNode_, *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_cameraGimbalNode]);

  }
  objc_msgSend(*(id *)&v1[v3], sel_setDelegate_, v1);
  v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v8 = objc_msgSend(v7, sel_isInternalBuild);

  if (v8)
  {
    v9 = (void *)sub_23AA32FB4();
    v10 = objc_msgSend(v6, sel_BOOLForKey_, v9);

    if ((v10 & 1) != 0)
    {
      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1530]), sel_initWithBaseConfiguration_fileURL_, v2, 0);

      objc_opt_self();
      v11 = swift_dynamicCastObjCClass();
      if (!v11)
        goto LABEL_10;
      v12 = (void *)v11;
      sub_23A964084((uint64_t *)&unk_2569D6690);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_23AA35F90;
      *(_QWORD *)(v13 + 56) = type metadata accessor for FMPFView();
      *(_QWORD *)(v13 + 64) = sub_23A99D034(&qword_2569D8070, v14, (uint64_t (*)(uint64_t))type metadata accessor for FMPFView, MEMORY[0x24BEE5BE8]);
      *(_QWORD *)(v13 + 32) = v1;
      sub_23A968488(0, &qword_2569D8078);
      v6 = v18;
      v15 = v1;
      v16 = (void *)sub_23AA333BC();
      sub_23AA33218();
      sub_23AA32E7C();
      swift_bridgeObjectRelease();

      objc_msgSend(v12, sel_startRecording);
      v2 = v6;
    }
    else
    {
      v6 = v2;
    }
  }
  else
  {

  }
  v18 = v2;
LABEL_10:
  if (!v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_experienceType])
  {
    v17 = objc_msgSend(*(id *)&v1[v3], sel_session);
    objc_msgSend(v17, sel_runWithConfiguration_options_, v18, 0);

    v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_sceneIsRunning] = 1;
  }
  sub_23A9FE3C4(0);
  sub_23A9FE324(*(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastThermalState]);

}

void sub_23A9FDFB4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  _QWORD v15[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView], sel_session);
  v4 = objc_msgSend(v3, sel_configuration);

  if (v4)
  {
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (v5 && v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_sceneIsRunning] == 1)
    {
      v6 = (void *)v5;
      sub_23A964084((uint64_t *)&unk_2569D6690);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_23AA35F90;
      *(_QWORD *)(v7 + 56) = type metadata accessor for FMPFView();
      *(_QWORD *)(v7 + 64) = sub_23A99D034(&qword_2569D8070, v8, (uint64_t (*)(uint64_t))type metadata accessor for FMPFView, MEMORY[0x24BEE5BE8]);
      *(_QWORD *)(v7 + 32) = v1;
      sub_23A968488(0, &qword_2569D8078);
      v9 = v1;
      v10 = (void *)sub_23AA333BC();
      sub_23AA33218();
      sub_23AA32E7C();
      swift_bridgeObjectRelease();

      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v9;
      v15[4] = sub_23A9FF970;
      v15[5] = v11;
      v15[0] = MEMORY[0x24BDAC760];
      v15[1] = 1107296256;
      v15[2] = sub_23A9FE2D0;
      v15[3] = &unk_250BC5070;
      v12 = _Block_copy(v15);
      v13 = v9;
      swift_release();
      objc_msgSend(v6, sel_finishRecordingWithHandler_, v12);

      _Block_release(v12);
    }
    else
    {

    }
  }
  v14 = objc_msgSend(*(id *)&v1[v2], sel_session);
  objc_msgSend(v14, sel_pause);

  v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_sceneIsRunning] = 0;
}

void sub_23A9FE1EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  sub_23A964084((uint64_t *)&unk_2569D6690);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23AA35F90;
  *(_QWORD *)(v3 + 56) = type metadata accessor for FMPFView();
  *(_QWORD *)(v3 + 64) = sub_23A99D034(&qword_2569D8070, v4, (uint64_t (*)(uint64_t))type metadata accessor for FMPFView, MEMORY[0x24BEE5BE8]);
  *(_QWORD *)(v3 + 32) = a2;
  sub_23A968488(0, &qword_2569D8078);
  v5 = a2;
  v6 = (id)sub_23AA333BC();
  sub_23AA33218();
  sub_23AA32E7C();
  swift_bridgeObjectRelease();

}

void sub_23A9FE2D0(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id sub_23A9FE324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 3)
    goto LABEL_6;
  if (a1 != 2)
    goto LABEL_7;
  if (qword_2569D4AA8 != -1)
    swift_once();
  if ((byte_2569DFFE0 & 1) != 0)
LABEL_6:
    v2 = 30;
  else
LABEL_7:
    v2 = 60;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView), sel_setPreferredFramesPerSecond_, v2);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView), sel_setPreferredFramesPerSecond_, v2);
}

void sub_23A9FE3C4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  float v8;
  float v9;
  id v10;
  float v11;
  float v12;
  double v13;
  id v14;
  id v15;
  float v16;
  double v17;
  float v18;
  double v19;
  float v20;
  id v21;
  id v22;
  float v23;
  id v24;
  float v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41[2];

  v2 = v1;
  v41[1] = *(double *)MEMORY[0x24BDAC8D0];
  if (qword_2569D4BC0 != -1)
    swift_once();
  v4 = (id)qword_2569E0568;
  v5 = (void *)objc_opt_self();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_standardUserDefaults);
  objc_msgSend(v7, sel_fmpfBlackBackdropSigma);
  v9 = v8;

  v10 = objc_msgSend(v5, sel_standardUserDefaults);
  objc_msgSend(v10, sel_fmpfBlackBackdropAlpha);
  v12 = v11;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown) == 1
    && (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity + 8) & 1) == 0)
  {
    v13 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity);
    v14 = v6;
    v15 = objc_msgSend(v5, sel_standardUserDefaults);
    objc_msgSend(v15, sel_fmpfGreenBackdropHue);
    v17 = v16;
    objc_msgSend(v15, sel_fmpfGreenBackdropSaturation);
    v19 = v18;
    objc_msgSend(v15, sel_fmpfGreenBackdropValue);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithHue_saturation_brightness_alpha_, v17, v19, v20, 1.0);

    v4 = sub_23AA290D0(v21, v13);
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity) == 1)
  {
    v22 = objc_msgSend(v5, sel_standardUserDefaults);
    objc_msgSend(v22, sel_fmpfGreenBackdropSigma);
    v9 = v23;

    v24 = objc_msgSend(v5, sel_standardUserDefaults);
    objc_msgSend(v24, sel_fmpfGreenBackdropAlpha);
    v12 = v25;

  }
  if (v4)
  {
    v40 = 0.5;
    v41[0] = 0.5;
    v38 = 0x3FE0000000000000;
    v39 = 0.5;
    v26 = v4;
    objc_msgSend(v26, sel_getRed_green_blue_alpha_, v41, &v40, &v39, &v38);
    v27 = v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings;
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings);
    if ((a1 & 1) != 0)
    {
      v29 = v28 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(double *)v29 = v41[0];
      *(_BYTE *)(v29 + 8) = 0;
      sub_23A9CC9DC();
      v30 = *(_QWORD *)(v27 + 8) + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(double *)v30 = v40;
      *(_BYTE *)(v30 + 8) = 0;
      sub_23A9CC9DC();
      v31 = *(_QWORD *)(v27 + 16) + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(double *)v31 = v39;
      *(_BYTE *)(v31 + 8) = 0;
      sub_23A9CC9DC();
      v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring)
          + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(double *)v32 = v9;
      *(_BYTE *)(v32 + 8) = 0;
      sub_23A9CC9DC();
      v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring)
          + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(double *)v33 = v12;
      *(_BYTE *)(v33 + 8) = 0;
      sub_23A9CC9DC();
    }
    else
    {
      sub_23A9829AC(v41[0]);
      *(_BYTE *)(v28 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v34 = *(_QWORD *)(v27 + 8);
      sub_23A9829AC(v40);
      *(_BYTE *)(v34 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v35 = *(_QWORD *)(v27 + 16);
      sub_23A9829AC(v39);
      *(_BYTE *)(v35 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v36 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring);
      sub_23A9829AC(v9);
      *(_BYTE *)(v36 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v37 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring);
      sub_23A9829AC(v12);
      *(_BYTE *)(v37 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    }

  }
}

void sub_23A9FE794(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  _OWORD v4[2];
  _BYTE v5[24];
  uint64_t v6;

  if (objc_msgSend(a1, sel_object))
  {
    sub_23AA33434();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_23A96C1B8((uint64_t)v4, (uint64_t)v5, &qword_2569D6680);
  if (v6)
  {
    sub_23A968488(0, (unint64_t *)&unk_2569D8060);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = objc_msgSend(v3, sel_thermalState);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastThermalState) = v2;
      sub_23A9FE324((uint64_t)v2);

    }
  }
  else
  {
    sub_23A968C64((uint64_t)v5);
  }
}

void sub_23A9FE8CC()
{
  void *v0;
  double v1;
  double v2;
  id v3;

  objc_msgSend(v0, sel_bounds);
  if (v2 == 0.0 && v1 == 0.0)
  {
    sub_23AA33500();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend(v0, sel_description);
    sub_23AA32FD8();

    sub_23AA33038();
    swift_bridgeObjectRelease();
    sub_23AA33038();
    sub_23AA335A8();
    __break(1u);
  }
  else
  {
    sub_23A9FD9D0();
    sub_23A9FDCAC();
  }
}

uint64_t type metadata accessor for FMPFView()
{
  return objc_opt_self();
}

uint64_t sub_23A9FEA48(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 128);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

id sub_23A9FEA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  id result;

  if (a17 != 1)
    return sub_23A9E96DC(a16, a17, a18);
  return result;
}

char *sub_23A9FEA94(unsigned __int8 *a1, unsigned __int16 *a2, uint64_t a3, void *a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  id v34;
  id v35;
  objc_class *v36;
  char *v37;
  char *v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  id v64;
  objc_super v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[5];
  _BYTE v74[184];
  _BYTE v75[184];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  _BYTE v88[200];

  v57 = a3;
  v58 = a4;
  sub_23A96C1B8(a3, (uint64_t)v74, &qword_2569D8080);
  sub_23A96C1B8((uint64_t)v74, (uint64_t)v88, &qword_2569D8080);
  v7 = sub_23AA33284();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23AA33260();
  MEMORY[0x24BDAC7A8](v10);
  v11 = *a2;
  v55 = *a1;
  v56 = v11;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI8FMPFView_style] = 0x3FE8000000000000;
  v12 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView;
  v13 = objc_allocWithZone(MEMORY[0x24BDE9EE8]);
  v14 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v13, sel_init);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView] = 0;
  v15 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFARSCNView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = &v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring;
  *(_QWORD *)&v14[v17] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  v18 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring;
  *(_QWORD *)&v14[v18] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene] = 0;
  v19 = &v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor] = 2;
  v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 0;
  v20 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_videoHelpers;
  type metadata accessor for FMPFVideoHelpers();
  v21 = (_QWORD *)swift_allocObject();
  v21[3] = 0;
  v21[4] = 0;
  v21[2] = 0;
  *(_QWORD *)&v14[v20] = v21;
  v22 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalDevice;
  *(_QWORD *)&v14[v22] = MTLCreateSystemDefaultDevice();
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalCommandQueue] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState] = 0;
  v23 = &v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerParameters];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalProcessingQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v76 = MEMORY[0x24BEE4AF8];
  sub_23A99D034((unint64_t *)&unk_2569D6100, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_23A964084((uint64_t *)&unk_2569D5B40);
  sub_23A990C70();
  sub_23AA3344C();
  sub_23AA32EE8();
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, *MEMORY[0x24BEE5750], v54);
  *(_QWORD *)&v14[v24] = sub_23AA332B4();
  v26 = v57;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRATextures] = v25;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRANextTextureIndex] = 0;
  v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalHasLoggedSetup] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_locationManager] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ecoModeObservation] = 0;
  v27 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_cameraGimbalNode;
  *(_QWORD *)&v14[v27] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8250]), sel_init);
  v28 = v55;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_sceneIsRunning] = 0;
  v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 0;
  v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_experienceType] = v28;
  *(_WORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_findingTechnology] = v56;
  sub_23A96C1B8(v26, (uint64_t)v75, &qword_2569D8080);
  if (sub_23A9FEA48((uint64_t)v75) == 1)
  {
    if (v28 == 1)
    {
      v29 = v58;
      if (qword_2569D4B20 != -1)
        swift_once();
      v73[1] = unk_2569E0150;
      v73[2] = xmmword_2569E0160;
      v73[3] = xmmword_2569E0170;
      LOBYTE(v73[4]) = byte_2569E0180;
      v70 = xmmword_2569E0110;
      v71 = *(_OWORD *)&byte_2569E0120;
      v72 = xmmword_2569E0130;
      v73[0] = *(_OWORD *)&byte_2569E0140;
      v66 = xmmword_2569E00D0;
      v67 = *(_OWORD *)&byte_2569E00E0;
      v68 = xmmword_2569E00F0;
      v69 = *(_OWORD *)&byte_2569E0100;
    }
    else
    {
      LOBYTE(v76) = 1;
      LOBYTE(v64) = 1;
      v63 = 1;
      v62 = 1;
      v61 = 1;
      v60 = 1;
      v59 = 1;
      v66 = xmmword_23AA39EE0;
      LOBYTE(v67) = 1;
      *((_QWORD *)&v67 + 1) = 0;
      LOBYTE(v68) = 1;
      *((_QWORD *)&v68 + 1) = 0;
      LOBYTE(v69) = 1;
      *((_QWORD *)&v69 + 1) = 0;
      LOBYTE(v70) = 1;
      *((_QWORD *)&v70 + 1) = 0;
      LOBYTE(v71) = 1;
      *((_QWORD *)&v71 + 1) = 0;
      LOBYTE(v72) = 1;
      *((_QWORD *)&v72 + 1) = 0;
      LOBYTE(v73[0]) = 1;
      *(_OWORD *)((char *)&v73[3] + 1) = 0u;
      *(_OWORD *)((char *)&v73[2] + 8) = 0u;
      *(_OWORD *)((char *)&v73[1] + 8) = 0u;
      *(_OWORD *)((char *)v73 + 8) = 0u;
      v29 = v58;
    }
    sub_23A9FF978((uint64_t)&v66);
    v84 = v73[1];
    v85 = v73[2];
    v86 = v73[3];
    v87 = v73[4];
    v80 = v70;
    v81 = v71;
    v82 = v72;
    v83 = v73[0];
    v76 = v66;
    v77 = v67;
    v78 = v68;
    v79 = v69;
  }
  else
  {
    sub_23A96C1B8((uint64_t)v88, (uint64_t)&v76, &qword_2569D8080);
    v29 = v58;
  }
  v73[1] = v84;
  v73[2] = v85;
  v73[3] = v86;
  LOBYTE(v73[4]) = v87;
  v70 = v80;
  v71 = v81;
  v72 = v82;
  v73[0] = v83;
  v66 = v76;
  v67 = v77;
  v68 = v78;
  v69 = v79;
  nullsub_1(&v66);
  sub_23A96C1B8((uint64_t)&v66, (uint64_t)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_config], &qword_2569D8080);
  sub_23A9FF888(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23A9FEA6C);
  v30 = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  v31 = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  v32 = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  v33 = &v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings];
  *(_QWORD *)v33 = v30;
  *((_QWORD *)v33 + 1) = v31;
  *((_QWORD *)v33 + 2) = v32;
  v34 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v35 = objc_msgSend(v34, sel_thermalState);

  *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastThermalState] = v35;
  v36 = (objc_class *)type metadata accessor for FMPFView();
  v65.receiver = v14;
  v65.super_class = v36;
  v37 = (char *)objc_msgSendSuper2(&v65, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v38 = v37;
  if (v29)
  {
    v39 = *(void **)&v37[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView];
    v40 = v37;
    objc_msgSend(v39, sel_setSession_, v29);
  }
  else
  {
    v41 = v37;
  }
  v42 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
  v43 = objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView], sel_session);
  v44 = objc_msgSend(v43, sel_delegate);
  swift_unknownObjectRelease();

  if (!v44)
  {
    v45 = objc_msgSend(*(id *)&v38[v42], sel_session);
    objc_msgSend(v45, sel_setDelegate_, v38);

  }
  objc_msgSend(*(id *)&v38[v42], sel_setAlpha_, 1.0);
  objc_msgSend(v38, sel_addSubview_, *(_QWORD *)&v38[v42]);
  v46 = *(void **)&v38[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView];
  v47 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v46, sel_setBackgroundColor_, v47);

  objc_msgSend(v46, sel_setAllowsTransparency_, 1);
  objc_msgSend(v38, sel_addSubview_, v46);
  sub_23A9FD56C();
  v48 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v48, sel_addObserver_selector_name_object_, v38, sel_thermalStateDidChangeWithNotification_, *MEMORY[0x24BDD1168], 0);

  sub_23A9ABF28();
  v64 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v49 = sub_23AA32CFC();
  swift_release();
  swift_release();

  sub_23A9FF888(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23A9FF8F4);
  v50 = *(void **)&v38[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ecoModeObservation];
  *(_QWORD *)&v38[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ecoModeObservation] = v49;

  return v38;
}

void sub_23A9FF454()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_23AA33284();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23AA32F00();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23AA33260();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_style] = 0x3FE8000000000000;
  v8 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9EE8]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView] = 0;
  v9 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFARSCNView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = &v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring;
  *(_QWORD *)&v0[v11] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  v12 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring;
  *(_QWORD *)&v0[v12] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene] = 0;
  v13 = &v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor] = 2;
  v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 0;
  v14 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_videoHelpers;
  type metadata accessor for FMPFVideoHelpers();
  v15 = (_QWORD *)swift_allocObject();
  v15[3] = 0;
  v15[4] = 0;
  v15[2] = 0;
  *(_QWORD *)&v0[v14] = v15;
  v16 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalDevice;
  *(_QWORD *)&v0[v16] = MTLCreateSystemDefaultDevice();
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalCommandQueue] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState] = 0;
  v17 = &v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerParameters];
  *v17 = 0;
  v17[1] = 0;
  v18 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalProcessingQueue;
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v19 = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  sub_23A99D034((unint64_t *)&unk_2569D6100, 255, v7, MEMORY[0x24BEE5698]);
  sub_23A964084((uint64_t *)&unk_2569D5B40);
  sub_23A990C70();
  sub_23AA3344C();
  sub_23AA32EE8();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v4, *MEMORY[0x24BEE5750], v23);
  *(_QWORD *)&v0[v18] = sub_23AA332B4();
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRATextures] = v19;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRANextTextureIndex] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalHasLoggedSetup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_locationManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ecoModeObservation] = 0;
  v20 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_cameraGimbalNode;
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8250]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_sceneIsRunning] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 0;

  sub_23AA335A8();
  __break(1u);
}

uint64_t sub_23A9FF888(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 176);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    v4);
  return a1;
}

void sub_23A9FF8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (a17 != 1)
    sub_23A9E983C(a16, a17, a18);
}

uint64_t sub_23A9FF91C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23A9FF940()
{
  uint64_t v0;

  sub_23A9AC5D8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A9FF948()
{
  return swift_deallocObject();
}

uint64_t sub_23A9FF958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23A9FF968()
{
  return swift_release();
}

void sub_23A9FF970(uint64_t a1)
{
  uint64_t v1;

  sub_23A9FE1EC(a1, *(void **)(v1 + 16));
}

uint64_t sub_23A9FF978(uint64_t a1)
{
  sub_23A9E96DC(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(void **)(a1 + 136));
  return a1;
}

char *sub_23A9FF9B0()
{
  return sel_fmpfEcoMode;
}

id sub_23A9FF9BC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fmpfEcoMode);
  *a2 = (_BYTE)result;
  return result;
}

id sub_23A9FF9EC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFmpfEcoMode_, *a1);
}

uint64_t sub_23A9FFA00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A9FFA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23A9FD070(a1, a2, v2);
}

uint64_t sub_23A9FFA2C()
{
  return swift_deallocObject();
}

void sub_23A9FFA5C()
{
  void *v0;
  double v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v0 = (void *)objc_opt_self();
  v1 = *MEMORY[0x24BEBB608];
  v2 = (void *)sub_23AA32FB4();
  v3 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v2, 60.0, v1);

  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = (void *)sub_23AA32FB4();
  v5 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v4, 56.0, v1);

  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = (void *)sub_23AA32FB4();
  v7 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v6, 60.0, v1);

  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = (void *)sub_23AA32FB4();
  v9 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v8, 56.0, v1);

  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = *MEMORY[0x24BEBB5E8];
  v11 = (void *)sub_23AA32FB4();
  v12 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v11, 20.0, v10);

  if (v12)
  {
    v13 = (void *)objc_opt_self();
    v14 = objc_msgSend(v13, sel_whiteColor);
    v15 = objc_msgSend(v13, sel_whiteColor);
    v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.35);

    qword_2569D8088 = (uint64_t)v3;
    unk_2569D8090 = v5;
    qword_2569D8098 = (uint64_t)v7;
    unk_2569D80A0 = v9;
    qword_2569D80A8 = (uint64_t)v12;
    qword_2569D80B0 = 0x4010000000000000;
    qword_2569D80B8 = (uint64_t)v14;
    unk_2569D80C0 = v16;
    xmmword_2569D80C8 = xmmword_23AA39F50;
    unk_2569D80D8 = xmmword_23AA39F60;
    xmmword_2569D80E8 = xmmword_23AA39F70;
    return;
  }
LABEL_11:
  __break(1u);
}

char *sub_23A9FFCDC(uint64_t a1, char a2, unint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  id v34;
  double v35;
  double v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  objc_class *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  id v61;
  void *v62;
  char *v63;
  id v64;
  uint64_t v66;
  __int128 v70;
  __int128 v71;
  _QWORD v72[3];
  uint64_t v73;
  objc_super v74;

  v4 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style;
  v5 = qword_2569D4BB8;
  v6 = v3;
  if (v5 != -1)
    swift_once();
  v7 = &v6[v4];
  v8 = (void *)qword_2569D8088;
  v9 = (void *)unk_2569D8090;
  v11 = (void *)qword_2569D8098;
  v10 = (void *)unk_2569D80A0;
  v12 = (void *)qword_2569D80A8;
  v13 = qword_2569D80B0;
  v14 = (void *)qword_2569D80B8;
  v15 = (void *)unk_2569D80C0;
  v16 = xmmword_2569D80C8;
  v17 = unk_2569D80D8;
  v18 = xmmword_2569D80E8;
  *(_QWORD *)v7 = qword_2569D8088;
  *((_QWORD *)v7 + 1) = v9;
  *((_QWORD *)v7 + 2) = v11;
  *((_QWORD *)v7 + 3) = v10;
  *((_QWORD *)v7 + 4) = v12;
  *((_QWORD *)v7 + 5) = v13;
  *((_QWORD *)v7 + 6) = v14;
  *((_QWORD *)v7 + 7) = v15;
  *((_OWORD *)v7 + 4) = v16;
  *((_OWORD *)v7 + 5) = v17;
  *((_OWORD *)v7 + 6) = v18;
  v66 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
  v19 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v20 = v8;
  v21 = v9;
  v22 = v11;
  v23 = v10;
  v24 = v12;
  v25 = v14;
  v26 = v15;
  *(_QWORD *)&v6[v66] = objc_msgSend(v19, sel_init);
  v27 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
  *(_QWORD *)&v6[v27] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint] = 0;
  v28 = &v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_initialAboveOrBelowTimestamp];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = &v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide];
  *(_DWORD *)v29 = 0;
  v29[4] = 1;
  v30 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring;
  *(_QWORD *)&v6[v30] = sub_23A9CD958(0, 1, 0, 1);
  v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold] = 2;
  v31 = &v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_deviceName];
  *v31 = 0;
  v31[1] = 0;
  v32 = &v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distance];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  v33 = &v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v34 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v34, sel_bounds);
  v36 = v35;

  v37 = (void **)(v7 + 8);
  if (v36 >= 414.0)
    v37 = (void **)v7;
  v38 = 16;
  if (v36 < 414.0)
    v38 = 24;
  v39 = 64;
  if (v36 < 414.0)
    v39 = 72;
  v40 = *v37;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDistanceLabelFont] = v40;
  v41 = *(void **)&v7[v38];
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDirectionLabelFont] = v41;
  v42 = *(_QWORD *)&v7[v39];
  v43 = v40;
  v44 = v41;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleLabelHeight] = v42;

  v45 = (objc_class *)type metadata accessor for FMR1DistanceView();
  v74.receiver = v6;
  v74.super_class = v45;
  v46 = (char *)objc_msgSendSuper2(&v74, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v47 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
  v48 = *(void **)&v46[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel];
  v49 = sub_23A968488(0, &qword_2569D81D0);
  v73 = v49;
  *((_QWORD *)&v71 + 1) = v45;
  v72[0] = v48;
  *(_QWORD *)&v70 = v46;
  v50 = v46;
  v51 = v48;
  v52 = sub_23AA00174(v72, 4, 0, &v70, 4, 1.0, 0.0);
  v53 = *(void **)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint];
  *(_QWORD *)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint] = v52;

  v54 = *(void **)&v46[v47];
  v73 = v49;
  v72[0] = v54;
  v70 = 0u;
  v71 = 0u;
  v55 = v54;
  v56 = sub_23AA00174(v72, 8, 0, &v70, 0, 1.0, 0.0);
  v57 = *(void **)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
  *(_QWORD *)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint] = v56;

  objc_msgSend(*(id *)&v46[v47], sel_setFont_, *(_QWORD *)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDistanceLabelFont]);
  v58 = *(void **)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDirectionLabelFont];
  v59 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont;
  v60 = *(void **)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont];
  *(_QWORD *)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont] = v58;
  v61 = v58;

  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel], sel_setFont_, *(_QWORD *)&v50[v59]);
  sub_23AA004A8();
  sub_23AA00720();
  v62 = (void *)objc_opt_self();
  v63 = v50;
  v64 = objc_msgSend(v62, sel_clearColor);
  objc_msgSend(v63, sel_setBackgroundColor_, v64);

  sub_23AA03C50(a1, a2 & 1, a3 | ((HIDWORD(a3) & 1) << 32), 1, 2);
  return v63;
}

id sub_23AA00174(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  id v23;
  uint64_t v25;
  uint64_t v26;

  sub_23A96545C(a1, a1[3]);
  v14 = sub_23AA3371C();
  v15 = a4[3];
  if (v15)
  {
    v16 = sub_23A96545C(a4, a4[3]);
    v25 = a5;
    v26 = a2;
    v17 = a3;
    v18 = *(_QWORD *)(v15 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    v21 = sub_23AA3371C();
    v22 = *(void (**)(char *, uint64_t))(v18 + 8);
    a3 = v17;
    v22(v20, v15);
    a5 = v25;
    a2 = v26;
    sub_23A963B3C((uint64_t)a4);
  }
  else
  {
    v21 = 0;
  }
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_, v14, a2, a3, v21, a5, a6, a7);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_23A963B3C((uint64_t)a1);
  return v23;
}

uint64_t sub_23AA00360()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23AA33500();
  swift_bridgeObjectRelease();
  v0 = sub_23AA33824();
  v2 = sub_23A9E2E00(6uLL, v0, v1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  MEMORY[0x23B85CBA0](v2, v4, v6, v8);
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v9 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v9;
}

id sub_23AA004A8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel], sel_setFont_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDistanceLabelFont]);
  objc_msgSend(*(id *)&v0[v1], sel_setAdjustsFontForContentSizeCategory_, 0);
  objc_msgSend(*(id *)&v0[v1], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setNumberOfLines_, 1);
  v2 = *(void **)&v0[v1];
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_whiteColor);
  objc_msgSend(v4, sel_setTextColor_, v5);

  objc_msgSend(*(id *)&v0[v1], sel_setTextAlignment_, 4);
  v6 = *(id *)&v0[v1];
  v7 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  objc_msgSend(*(id *)&v0[v1], sel_setAlpha_, 0.0);
  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[v1]);
  v8 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel], sel_setFont_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDirectionLabelFont]);
  objc_msgSend(*(id *)&v0[v8], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setNumberOfLines_, 0);
  v9 = *(id *)&v0[v8];
  v10 = objc_msgSend(v3, sel_whiteColor);
  objc_msgSend(v9, sel_setTextColor_, v10);

  objc_msgSend(*(id *)&v0[v8], sel_setTextAlignment_, 4);
  v11 = *(id *)&v0[v8];
  v12 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  objc_msgSend(*(id *)&v0[v8], sel_setAlpha_, 0.0);
  return objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[v8]);
}

void sub_23AA00720()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23A964084(&qword_2569D6080);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23AA39BE0;
  v4 = objc_msgSend(*(id *)&v1[v2], sel_topAnchor);
  v5 = objc_msgSend(v1, sel_topAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(_QWORD *)(v3 + 32) = v6;
  v7 = objc_msgSend(*(id *)&v1[v2], sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 88];
  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, v10);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = objc_msgSend(*(id *)&v1[v2], sel_trailingAnchor);
  v13 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -v10);
  *(_QWORD *)(v3 + 48) = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
  if (v16)
  {
    *(_QWORD *)(v3 + 56) = v16;
    v17 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint];
    if (v17)
    {
      v18 = (void *)objc_opt_self();
      *(_QWORD *)(v3 + 64) = v17;
      sub_23AA330C8();
      sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
      v19 = v16;
      v20 = v17;
      v21 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_activateConstraints_, v21);

      v22 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_23AA35F80;
      v24 = objc_msgSend(*(id *)&v1[v22], sel_leadingAnchor);
      v25 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v26 = objc_msgSend(v25, sel_leadingAnchor);

      v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, v10);
      *(_QWORD *)(v23 + 32) = v27;
      v28 = objc_msgSend(*(id *)&v1[v22], sel_trailingAnchor);
      v29 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v30 = objc_msgSend(v29, sel_trailingAnchor);

      v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, -v10);
      *(_QWORD *)(v23 + 40) = v31;
      v32 = objc_msgSend(*(id *)&v1[v22], sel_bottomAnchor);
      v33 = objc_msgSend(v1, sel_bottomAnchor);
      v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

      *(_QWORD *)(v23 + 48) = v34;
      v35 = objc_msgSend(*(id *)&v1[v22], sel_heightAnchor);
      v36 = objc_msgSend(v35, sel_constraintEqualToConstant_, *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleLabelHeight]);

      *(_QWORD *)(v23 + 56) = v36;
      sub_23AA330C8();
      v37 = (id)sub_23AA330A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_activateConstraints_, v37);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23AA00BDC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26;
  float v27;
  float v28;
  uint64_t *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  float v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v60[12];
  _BOOL4 v61;
  id v62;
  id v63;
  uint64_t v64;
  _BYTE *v65;
  __int128 v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v3 = sub_23A964084(&qword_2569D81A8);
  MEMORY[0x24BDAC7A8](v3);
  v65 = &v60[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = sub_23A964084(&qword_2569D81B0);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v70 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23A964084(&qword_2569D53F8);
  inited = swift_initStackObject();
  v66 = xmmword_23AA35F90;
  *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
  v7 = (void *)*MEMORY[0x24BEBB368];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB368];
  v8 = v1 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 48);
  v10 = sub_23A968488(0, &qword_2569D5408);
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 40) = v9;
  v11 = v7;
  v12 = v9;
  v67 = sub_23A9B69D0(inited);
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = v66;
  *(_QWORD *)(v13 + 32) = v11;
  v14 = *(void **)(v8 + 56);
  *(_QWORD *)(v13 + 64) = v10;
  *(_QWORD *)(v13 + 40) = v14;
  v15 = v11;
  v16 = v14;
  v17 = sub_23A9B69D0(v13);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1668]), sel_init);
  objc_msgSend(v18, sel_setUnitOptions_, 1);
  objc_msgSend(v18, sel_setUnitStyle_, 2);
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_meters);
  *(_QWORD *)&v66 = v17;
  if (a1 >= 10.0)
  {
    if (qword_2569D4BA8 != -1)
      swift_once();
    v21 = &qword_2569E0530;
  }
  else
  {
    if (qword_2569D4BB0 != -1)
      swift_once();
    v21 = &qword_2569E0538;
  }
  v22 = qword_2569D4B38;
  v23 = (id)*v21;
  if (v22 != -1)
    swift_once();
  v24 = objc_msgSend((id)qword_2569E0328, sel_measurementSystem);
  v25 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold;
  v26 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold);
  if ((v26 & 1) != 0)
  {
    v27 = 1.8288;
    goto LABEL_14;
  }
  if (qword_2569D4B90 != -1)
  {
    swift_once();
    v26 = *(_BYTE *)(v1 + v25);
  }
  v27 = *(double *)&qword_2569E0520;
  if ((v26 & 1) != 0)
  {
LABEL_14:
    v28 = 1.8288;
    if (v24 != (id)3)
      goto LABEL_28;
    goto LABEL_20;
  }
  if (qword_2569D4B90 != -1)
    swift_once();
  v28 = *(double *)&qword_2569E0520;
  if (v24 == (id)3)
  {
LABEL_20:
    a1 = a1 * 3.28084;
    if (a1 >= 2.0)
    {
      if (qword_2569D4BA8 != -1)
        swift_once();
      v29 = &qword_2569E0530;
    }
    else
    {
      if (qword_2569D4BB0 != -1)
        swift_once();
      v29 = &qword_2569E0538;
    }
    v27 = v27 * 3.2808;
    v28 = v28 * 3.3;
    v30 = (id)*v29;

    v31 = objc_msgSend(v19, sel_feet);
    v23 = v30;
    v20 = v31;
  }
LABEL_28:
  objc_msgSend(v18, sel_setNumberFormatter_, v23);
  sub_23A968488(0, &qword_2569D81B8);
  v32 = v20;
  sub_23AA32C90();
  v33 = sub_23AA33314();
  v35 = v34;
  v36 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  swift_bridgeObjectRetain();
  v37 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  _s3__C3KeyVMa_0(0);
  v39 = v38;
  sub_23AA04614();
  v64 = v39;
  v40 = (void *)sub_23AA32F78();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v66 = objc_msgSend(v36, sel_initWithString_attributes_, v37, v40);

  v41 = (void *)sub_23AA32E34();
  v42 = objc_msgSend(v23, sel_stringFromNumber_, v41);

  if (!v42)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v70, v69);
    return v66;
  }
  v62 = v23;
  v63 = v18;
  v43 = sub_23AA32FD8();
  v45 = v44;

  v46 = a1;
  v47 = v27 < v46;
  v73 = v33;
  v74 = v35;
  if (v28 <= v46)
    v47 = 0;
  v61 = v47;
  v71 = v43;
  v72 = v45;
  v48 = sub_23AA32E28();
  v49 = (uint64_t)v65;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v65, 1, 1, v48);
  sub_23A9E4710();
  v50 = sub_23AA3341C();
  v52 = v51;
  v54 = v53;
  sub_23AA0472C(v49);
  swift_bridgeObjectRelease();
  if ((v54 & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v70, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v61)
      return v66;
    return v66;
  }
  v55 = (void *)sub_23AA32F78();
  swift_bridgeObjectRelease();
  v73 = v50;
  v74 = v52;
  v71 = v33;
  v72 = v35;
  sub_23A964084(&qword_2569D81C0);
  sub_23AA0476C();
  v56 = sub_23AA333B0();
  v57 = v66;
  objc_msgSend((id)v66, sel_setAttributes_range_, v55, v56, v58);

  (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v70, v69);
  return v57;
}

id sub_23AA0143C(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  const char *v11;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  const char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;

  v4 = 0;
  if ((a1 & 0x100000000) != 0)
    return v4;
  v5 = v3;
  v6 = a1;
  v4 = 0;
  if ((int)a1 <= 127)
  {
    switch((int)a1)
    {
      case 2:
        v13 = 0xD00000000000001BLL;
        v10 = sub_23A9E4FD4(0xD00000000000001BLL, 0x800000023AA40980, 0, 0);
        v9 = v14;
        if ((a3 & 1) != 0)
          v15 = "R1_DIRECTION_IN_FRONT_HINT3";
        else
          v15 = "R1_DIRECTION_IN_FRONT_HINT2";
        goto LABEL_38;
      case 3:
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
        return v4;
      case 4:
        v10 = sub_23A9E4FD4(0xD000000000000018, 0x800000023AA40940, 0, 0);
        v9 = v26;
        v25 = "R1_DIRECTION_AHEAD_HINT2";
        goto LABEL_31;
      case 8:
        v13 = 0xD000000000000017;
        v10 = sub_23A9E4FD4(0xD000000000000017, 0x800000023AA40900, 0, 0);
        v9 = v27;
        v15 = "R1_DIRECTION_LEFT_HINT2";
        goto LABEL_38;
      case 16:
        v10 = sub_23A9E4FD4(0xD000000000000018, 0x800000023AA408C0, 0, 0);
        v9 = v28;
        v25 = "R1_DIRECTION_RIGHT_HINT2";
        goto LABEL_31;
      case 32:
        v13 = 0xD000000000000019;
        v10 = sub_23A9E4FD4(0xD000000000000019, 0x800000023AA40880, 0, 0);
        v9 = v31;
        v15 = "R1_DIRECTION_BEHIND_HINT2";
        goto LABEL_38;
      default:
        if ((_DWORD)a1 != 64)
          return v4;
        if ((*(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold) & 1) != 0)
        {
          v10 = sub_23A9E4EB0();
          v9 = v63;
          v22 = sub_23A9E4EB0();
        }
        else
        {
          v10 = sub_23A9E4FD4(0xD000000000000025, 0x800000023AA406D0, 0, 0);
          v9 = v19;
          if ((a2 & 1) != 0)
            v20 = 0xD000000000000029;
          else
            v20 = 0xD000000000000025;
          if ((a2 & 1) != 0)
            v21 = 0x800000023AA40730;
          else
            v21 = 0x800000023AA40700;
          v22 = sub_23A9E4FD4(v20, v21, 0, 0);
        }
        v35 = v22;
        v37 = v23;
        swift_bridgeObjectRelease();
        break;
    }
    goto LABEL_40;
  }
  if ((int)a1 <= 1023)
  {
    switch((_DWORD)a1)
    {
      case 0x80:
        v13 = 0xD00000000000001CLL;
        v10 = sub_23A9E4FD4(0xD00000000000001CLL, 0x800000023AA40840, 0, 0);
        v9 = v32;
        v15 = "R1_DIRECTION_ABOVE_YOU_HINT2";
        break;
      case 0x100:
        v13 = 0xD00000000000001CLL;
        v10 = sub_23A9E4FD4(0xD00000000000001CLL, 0x800000023AA40800, 0, 0);
        v9 = v33;
        v15 = "R1_DIRECTION_BELOW_YOU_HINT2";
        break;
      case 0x200:
        v7 = 0xD000000000000017;
        *(_QWORD *)&v66 = sub_23A9E4FD4(0xD000000000000017, 0x800000023AA40630, 0, 0);
        *((_QWORD *)&v66 + 1) = v16;
        swift_bridgeObjectRetain();
        sub_23AA33038();
        swift_bridgeObjectRelease();
        v9 = *((_QWORD *)&v66 + 1);
        v10 = v66;
        v11 = "BT_DIRECTION_FAR_HINT_2";
        goto LABEL_36;
      default:
        return v4;
    }
LABEL_38:
    v29 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    v30 = v13;
    goto LABEL_39;
  }
  if ((int)a1 <= 4095)
  {
    if ((_DWORD)a1 == 1024)
    {
      *(_QWORD *)&v66 = sub_23A9E4FD4(0xD000000000000018, 0x800000023AA40550, 0, 0);
      *((_QWORD *)&v66 + 1) = v24;
      swift_bridgeObjectRetain();
      sub_23AA33038();
      swift_bridgeObjectRelease();
      v9 = *((_QWORD *)&v66 + 1);
      v10 = v66;
      v25 = "BT_DIRECTION_NEAR_HINT_2";
LABEL_31:
      v29 = (unint64_t)(v25 - 32) | 0x8000000000000000;
      v30 = 0xD000000000000018;
      goto LABEL_39;
    }
    if ((_DWORD)a1 != 2048)
      return v4;
    v7 = 0xD000000000000019;
    *(_QWORD *)&v66 = sub_23A9E4FD4(0xD000000000000019, 0x800000023AA405B0, 0, 0);
    *((_QWORD *)&v66 + 1) = v8;
    swift_bridgeObjectRetain();
    sub_23AA33038();
    swift_bridgeObjectRelease();
    v9 = *((_QWORD *)&v66 + 1);
    v10 = v66;
    v11 = "BT_DIRECTION_CLOSE_HINT_2";
    goto LABEL_36;
  }
  if ((_DWORD)a1 != 4096)
  {
    if ((_DWORD)a1 != 0x2000)
      return v4;
    v13 = 0xD000000000000028;
    v10 = sub_23A9E4FD4(0xD000000000000028, 0x800000023AA40670, 0, 0);
    v9 = v17;
    v15 = "R1_DIRECTION_NO_DISTANCE_CONNECTED_HINT2";
    goto LABEL_38;
  }
  v7 = 0xD00000000000001ALL;
  *(_QWORD *)&v66 = sub_23A9E4FD4(0xD00000000000001ALL, 0x800000023AA405F0, 0, 0);
  *((_QWORD *)&v66 + 1) = v34;
  swift_bridgeObjectRetain();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)&v66 + 1);
  v10 = v66;
  v11 = "BT_DIRECTION_NEARBY_HINT_2";
LABEL_36:
  v29 = (unint64_t)(v11 - 32) | 0x8000000000000000;
  v30 = v7;
LABEL_39:
  v35 = sub_23A9E4FD4(v30, v29, 0, 0);
  v37 = v36;
LABEL_40:
  v38 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v38 = v10 & 0xFFFFFFFFFFFFLL;
  if (v38)
    goto LABEL_46;
  v39 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000) == 0)
    v39 = v35 & 0xFFFFFFFFFFFFLL;
  if (v39)
  {
LABEL_46:
    v64 = v35;
    v40 = v9;
    sub_23A964084(&qword_2569D53F8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
    v42 = (void *)*MEMORY[0x24BEBB368];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB368];
    v65 = v5;
    v43 = v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style;
    v44 = *(void **)(v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 48);
    v45 = sub_23A968488(0, &qword_2569D5408);
    *(_QWORD *)(inited + 64) = v45;
    *(_QWORD *)(inited + 40) = v44;
    v46 = v42;
    v47 = v44;
    sub_23A9B69D0(inited);
    v48 = swift_initStackObject();
    *(_OWORD *)(v48 + 16) = xmmword_23AA35F90;
    *(_QWORD *)(v48 + 32) = v46;
    v49 = *(void **)(v43 + 56);
    *(_QWORD *)(v48 + 64) = v45;
    *(_QWORD *)(v48 + 40) = v49;
    v50 = v46;
    v51 = v49;
    v52 = sub_23A9B69D0(v48);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_init);
    *(_QWORD *)&v66 = sub_23A9E4FD4(0xD000000000000013, 0x800000023AA40590, 0, 0);
    *((_QWORD *)&v66 + 1) = v53;
    v54 = sub_23A9E4710();
    v55 = MEMORY[0x23B85CFC0](124, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v54);
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(v55 + 16);
    if (v56)
    {
      swift_bridgeObjectRetain();
      v57 = (uint64_t *)(v55 + 56);
      v58 = v37;
      v59 = v40;
      do
      {
        v60 = *(v57 - 1);
        v61 = *v57;
        v66 = *(_OWORD *)(v57 - 3);
        v67 = v60;
        v68 = v61;
        swift_bridgeObjectRetain();
        sub_23AA01C84((unint64_t *)&v66, v10, v59, v52, v4, v6, v64, v58, v65);
        swift_bridgeObjectRelease();
        v57 += 4;
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

void sub_23AA01C84(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;

  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  if ((sub_23AA04430(*a1, v10, v12, v13, 2371877, 0xE300000000000000) & 1) != 0)
  {
    v14 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    sub_23AA04614();
    v16 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

    objc_msgSend(a5, sel_appendAttributedString_, v17);
LABEL_8:

    return;
  }
  if ((sub_23AA04430(v11, v10, v12, v13, 2372133, 0xE300000000000000) & 1) != 0)
  {
    v18 = objc_allocWithZone(MEMORY[0x24BDD1688]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((a6 & 0x1FFFFFFFFLL) == 0x40)
    {
      v19 = (void *)sub_23AA32FB4();
      swift_bridgeObjectRelease();
      _s3__C3KeyVMa_0(0);
      sub_23AA04614();
      v20 = (void *)sub_23AA32F78();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBB490]), sel_init);
      objc_msgSend(v22, sel_setLineSpacing_, *(double *)(a9 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 40));
      v23 = *MEMORY[0x24BEBB3A8];
      v17 = v22;
      objc_msgSend(v21, sel_addAttribute_value_range_, v23, v17, 0, objc_msgSend(v21, sel_length));

      objc_msgSend(a5, sel_appendAttributedString_, v21);
    }
    else
    {
      v24 = (void *)sub_23AA32FB4();
      swift_bridgeObjectRelease();
      _s3__C3KeyVMa_0(0);
      sub_23AA04614();
      v25 = (void *)sub_23AA32F78();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v18, sel_initWithString_attributes_, v24, v25);

      objc_msgSend(a5, sel_appendAttributedString_, v17);
    }
    goto LABEL_8;
  }
}

void sub_23AA01FE0(char a1, id a2, char a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  double v12;
  id v13;
  char v14;
  void *v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  v6 = v5;
  objc_msgSend(a2, sel_alpha);
  if ((a1 & 1) != 0)
  {
    if (v12 != 1.0)
      goto LABEL_3;
LABEL_11:
    if (!a4)
      return;
    goto LABEL_12;
  }
  if (v12 == 0.0)
    goto LABEL_11;
LABEL_3:
  sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
  v13 = *(id *)(v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel);
  v14 = sub_23AA3338C();

  if ((v14 & 1) != 0)
  {
    v15 = *(void **)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint);
    if (!v15)
    {
      __break(1u);
      return;
    }
    v16 = 0.0;
    if ((a1 & 1) != 0)
      v16 = *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleLabelHeight);
    objc_msgSend(v15, sel_setConstant_, v16);
  }
  if ((a3 & 1) != 0)
  {
    v17 = (void *)objc_opt_self();
    v19 = *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96);
    v18 = *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a2;
    *(_BYTE *)(v20 + 24) = a1 & 1;
    v31 = sub_23AA049F0;
    v32 = v20;
    v21 = MEMORY[0x24BDAC760];
    v27 = MEMORY[0x24BDAC760];
    v28 = 1107296256;
    v29 = sub_23A9C4DBC;
    v30 = &unk_250BC58F0;
    v22 = _Block_copy(&v27);
    v23 = a2;
    swift_release();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = a4;
    *(_QWORD *)(v24 + 24) = a5;
    v31 = sub_23AA043D0;
    v32 = v24;
    v27 = v21;
    v28 = 1107296256;
    v29 = sub_23A9A366C;
    v30 = &unk_250BC5940;
    v25 = _Block_copy(&v27);
    sub_23A971FB8((uint64_t)a4);
    swift_release();
    objc_msgSend(v17, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v22, v25, v18, 0.0, v19, 0.0);
    _Block_release(v25);
    _Block_release(v22);
    return;
  }
  v26 = 0.0;
  if ((a1 & 1) != 0)
    v26 = 1.0;
  objc_msgSend(a2, sel_setAlpha_, v26);
  if (a4)
LABEL_12:
    a4(1);
}

void sub_23AA02258(uint64_t a1, char a2, char a3, void (*a4)(uint64_t), uint64_t a5)
{
  char *v5;
  id v11;
  void *v12;
  id v13;
  uint64_t inited;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;

  v11 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel], sel_attributedText);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_string);

    if (!v13)
    {
      sub_23AA32FD8();
      v13 = (id)sub_23AA32FB4();
      swift_bridgeObjectRelease();
    }
    sub_23A964084(&qword_2569D53F8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
    v15 = (void *)*MEMORY[0x24BEBB360];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
    v16 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDirectionLabelFont];
    *(_QWORD *)(inited + 64) = sub_23A968488(0, &qword_2569D81A0);
    *(_QWORD *)(inited + 40) = v16;
    v17 = v15;
    v18 = v16;
    sub_23A9B69D0(inited);
    _s3__C3KeyVMa_0(0);
    sub_23AA04614();
    v19 = (void *)sub_23AA32F78();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_sizeWithAttributes_, v19);
    v21 = v20;

  }
  else
  {
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleDistanceLabelFont], sel_lineHeight);
    v21 = v22;
  }
  v23 = *(double *)&a1;
  if ((a2 & 1) != 0)
    v23 = v21;
  v24 = 0.0;
  if (v23 == 0.0)
  {
    if ((a3 & 1) != 0)
    {
LABEL_10:
      v25 = (void *)objc_opt_self();
      v27 = *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96];
      v26 = *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104];
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v5;
      *(double *)(v28 + 24) = v24;
      v39 = sub_23AA04680;
      v40 = v28;
      v29 = MEMORY[0x24BDAC760];
      v35 = MEMORY[0x24BDAC760];
      v36 = 1107296256;
      v37 = sub_23A9C4DBC;
      v38 = &unk_250BC5850;
      v30 = _Block_copy(&v35);
      v31 = v5;
      swift_release();
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = a4;
      *(_QWORD *)(v32 + 24) = a5;
      v39 = sub_23AA043D0;
      v40 = v32;
      v35 = v29;
      v36 = 1107296256;
      v37 = sub_23A9A366C;
      v38 = &unk_250BC58A0;
      v33 = _Block_copy(&v35);
      sub_23A971FB8((uint64_t)a4);
      swift_release();
      objc_msgSend(v25, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v30, v33, v26, 0.0, v27, 0.0);
      _Block_release(v33);
      _Block_release(v30);
      return;
    }
  }
  else
  {
    v24 = -v23 - *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 80];
    if ((a3 & 1) != 0)
      goto LABEL_10;
  }
  v34 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint];
  if (v34)
  {
    objc_msgSend(v34, sel_setConstant_, v24);
    if (a4)
      a4(1);
  }
  else
  {
    __break(1u);
  }
}

void sub_23AA025AC(uint64_t a1, char a2, unint64_t a3)
{
  char *v3;
  char *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  id v29;
  char *v30;
  double v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  id v41;
  double v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  double v61;
  char v62;
  void *v63;
  void *v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  double v77;
  id v78;
  char v79;
  void *v80;
  void *v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  uint64_t v88;
  void *v89;
  id v90;
  char v91;
  void *v92;
  void *v93;
  double v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  void *v101;
  id v102;
  char v103;
  void *v104;
  void *v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  void *v112;
  id v113;
  id v114;
  char v115;
  void *v116;
  void *v117;
  double v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  id v127;
  uint64_t aBlock;
  uint64_t v129;
  void *v130;
  void *v131;
  void *v132;
  uint64_t v133;

  v4 = v3;
  v8 = (char *)sub_23AA32DC8();
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    v12 = (void *)sub_23AA00BDC(*(double *)&a1);
    v14 = v13;
    v15 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
    v16 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel];
    v127 = v12;
    v17 = objc_msgSend(v16, sel_attributedText);

    v18 = *(void **)&v4[v15];
    if (v17)
    {
      if ((v14 & 1) == 0)
      {
LABEL_4:
        v19 = v127;
        v20 = 0;
        goto LABEL_10;
      }
    }
    else if ((v14 & 0x101) == 0)
    {
      goto LABEL_4;
    }
    v19 = 0;
    v20 = 1;
LABEL_10:
    v32 = v18;
    objc_msgSend(v32, sel_setAttributedText_, v19);

    v33 = &v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_initialAboveOrBelowTimestamp];
    if ((a3 & 0x100000000) != 0 || (_DWORD)a3 != 64)
    {
      v36 = 0;
      *(_QWORD *)v33 = 0;
      v33[8] = 1;
    }
    else if ((v33[8] & 1) != 0)
    {
      sub_23AA32DBC();
      sub_23AA32D74();
      v35 = v34;
      (*(void (**)(char *, char *))(v9 + 8))(v11, v8);
      v36 = 0;
      *(_QWORD *)v33 = v35;
      v33[8] = 0;
    }
    else
    {
      v48 = *(double *)v33;
      sub_23AA32DBC();
      sub_23AA32D74();
      v50 = v49;
      (*(void (**)(char *, char *))(v9 + 8))(v11, v8);
      v36 = v48 + 5.0 <= v50;
    }
    v51 = HIDWORD(a3) & 1;
    v52 = sub_23AA0143C(a3 | (unint64_t)(v51 << 32), v36, v20);
    if (v52)
    {
      v53 = v52;
      v54 = objc_msgSend(*(id *)&v4[v15], sel_attributedText);
      v55 = v54;
      if (v54)

      v56 = *(void **)&v4[v15];
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = v4;
      *(_DWORD *)(v57 + 24) = a3;
      *(_BYTE *)(v57 + 28) = v51;
      *(_QWORD *)(v57 + 32) = v53;
      v58 = v56;
      v4;
      v59 = v53;
      sub_23AA01FE0(v55 != 0, v58, 1, (void (*)(uint64_t))sub_23AA045AC, v57);

      goto LABEL_44;
    }
    v60 = *(id *)&v4[v15];
    v21 = (uint64_t)&selRef_animateAlongsideTransition_completion_;
    objc_msgSend(v60, sel_alpha);
    if (v61 == 1.0)
      goto LABEL_29;
    sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
    v8 = (char *)*(id *)&v4[v15];
    v62 = sub_23AA3338C();

    if ((v62 & 1) == 0)
    {
LABEL_28:
      v64 = (void *)objc_opt_self();
      v66 = *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96];
      v65 = *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104];
      v67 = swift_allocObject();
      *(_QWORD *)(v67 + 16) = v60;
      *(_BYTE *)(v67 + 24) = 1;
      v132 = sub_23AA049F0;
      v133 = v67;
      v68 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v129 = 1107296256;
      v130 = sub_23A9C4DBC;
      v131 = &unk_250BC5468;
      v69 = _Block_copy(&aBlock);
      v70 = v60;
      swift_release();
      v71 = swift_allocObject();
      *(_QWORD *)(v71 + 16) = 0;
      *(_QWORD *)(v71 + 24) = 0;
      v132 = sub_23AA043D0;
      v133 = v71;
      aBlock = v68;
      v129 = 1107296256;
      v130 = sub_23A9A366C;
      v131 = &unk_250BC54B8;
      v72 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v64, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v69, v72, v65, 0.0, v66, 0.0);
      _Block_release(v72);
      _Block_release(v69);
LABEL_29:

      v73 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
      v74 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel];
      v75 = swift_allocObject();
      *(_QWORD *)(v75 + 16) = v4;
      v8 = v4;
      v76 = v74;
      objc_msgSend(v76, sel_alpha);
      if (v77 == 0.0)
      {
        objc_msgSend(*(id *)&v4[v73], sel_setFont_, *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont]);
        objc_msgSend(*(id *)&v4[v73], sel_setAttributedText_, 0);
        sub_23AA02258(0, 0, 1, 0, 0);
LABEL_43:

LABEL_44:
        swift_release();
        v113 = v127;

        return;
      }
      sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
      v102 = *(id *)&v4[v15];
      v103 = sub_23AA3338C();

      if ((v103 & 1) == 0)
      {
LABEL_42:
        v105 = (void *)objc_opt_self();
        v107 = *(double *)&v8[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96];
        v106 = *(double *)&v8[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104];
        v108 = swift_allocObject();
        *(_QWORD *)(v108 + 16) = v76;
        *(_BYTE *)(v108 + 24) = 0;
        v132 = sub_23AA049F0;
        v133 = v108;
        v109 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v129 = 1107296256;
        v130 = sub_23A9C4DBC;
        v131 = &unk_250BC5530;
        v110 = _Block_copy(&aBlock);
        v76 = v76;
        swift_release();
        v111 = swift_allocObject();
        *(_QWORD *)(v111 + 16) = sub_23AA04590;
        *(_QWORD *)(v111 + 24) = v75;
        v132 = sub_23AA043D0;
        v133 = v111;
        aBlock = v109;
        v129 = 1107296256;
        v130 = sub_23A9A366C;
        v131 = &unk_250BC5580;
        v112 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v105, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v110, v112, v106, 0.0, v107, 0.0);
        _Block_release(v112);
        _Block_release(v110);
        goto LABEL_43;
      }
      v104 = *(void **)&v8[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
      if (v104)
      {
        objc_msgSend(v104, sel_setConstant_, 0.0);
        goto LABEL_42;
      }
      goto LABEL_52;
    }
    v63 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
    if (v63)
    {
      objc_msgSend(v63, sel_setConstant_, *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleLabelHeight]);
      goto LABEL_28;
    }
    goto LABEL_50;
  }
  v21 = HIDWORD(a3) & 1;
  v22 = a3;
  v23 = sub_23AA0143C(a3 | (unint64_t)(v21 << 32), 0, 0);
  if (v23)
  {
    v24 = v23;
    v25 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
    v26 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel];
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v4;
    *(_DWORD *)(v27 + 24) = a3;
    *(_BYTE *)(v27 + 28) = v21;
    *(_QWORD *)(v27 + 32) = v24;
    v28 = v4;
    v29 = v24;
    v30 = v28;
    v8 = (char *)v29;
    v11 = v26;
    objc_msgSend(v11, sel_alpha);
    if (v31 == 0.0)
    {
      sub_23AA044A4(v30, v22 | (v21 << 32), (uint64_t)v8);

    }
    else
    {
      sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
      v78 = *(id *)&v4[v25];
      v79 = sub_23AA3338C();

      if ((v79 & 1) != 0)
      {
        v80 = *(void **)&v30[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
        if (!v80)
        {

          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        objc_msgSend(v80, sel_setConstant_, 0.0);
      }
      v81 = (void *)objc_opt_self();
      v83 = *(double *)&v30[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96];
      v82 = *(double *)&v30[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104];
      v84 = swift_allocObject();
      *(_QWORD *)(v84 + 16) = v11;
      *(_BYTE *)(v84 + 24) = 0;
      v132 = sub_23AA049F0;
      v133 = v84;
      v85 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v129 = 1107296256;
      v130 = sub_23A9C4DBC;
      v131 = &unk_250BC53C8;
      v86 = _Block_copy(&aBlock);
      v87 = v11;
      swift_release();
      v88 = swift_allocObject();
      *(_QWORD *)(v88 + 16) = sub_23AA04404;
      *(_QWORD *)(v88 + 24) = v27;
      v132 = sub_23AA043D0;
      v133 = v88;
      aBlock = v85;
      v129 = 1107296256;
      v130 = sub_23A9A366C;
      v131 = &unk_250BC5418;
      v89 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v81, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v86, v89, v82, 0.0, v83, 0.0);
      _Block_release(v89);
      _Block_release(v86);

    }
LABEL_18:
    swift_release();
    return;
  }
  v37 = &v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_initialAboveOrBelowTimestamp];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v38 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
  v39 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel];
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = v4;
  v11 = v4;
  v41 = v39;
  objc_msgSend(v41, sel_alpha);
  if (v42 != 0.0)
  {
    sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
    v90 = *(id *)&v4[v38];
    v91 = sub_23AA3338C();

    if ((v91 & 1) != 0)
    {
      v92 = *(void **)&v11[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
      if (!v92)
      {
LABEL_51:

        __break(1u);
LABEL_52:

        __break(1u);
        goto LABEL_53;
      }
      objc_msgSend(v92, sel_setConstant_, 0.0);
    }
    v93 = (void *)objc_opt_self();
    v95 = *(double *)&v11[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96];
    v94 = *(double *)&v11[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104];
    v96 = swift_allocObject();
    *(_QWORD *)(v96 + 16) = v41;
    *(_BYTE *)(v96 + 24) = 0;
    v132 = sub_23A9EB8B0;
    v133 = v96;
    v97 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v129 = 1107296256;
    v130 = sub_23A9C4DBC;
    v131 = &unk_250BC5238;
    v98 = _Block_copy(&aBlock);
    v99 = v41;
    swift_release();
    v100 = swift_allocObject();
    *(_QWORD *)(v100 + 16) = sub_23AA043AC;
    *(_QWORD *)(v100 + 24) = v40;
    v132 = sub_23AA043D0;
    v133 = v100;
    aBlock = v97;
    v129 = 1107296256;
    v130 = sub_23A9A366C;
    v131 = &unk_250BC5288;
    v101 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v93, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v98, v101, v94, 0.0, v95, 0.0);
    _Block_release(v101);
    _Block_release(v98);

    goto LABEL_18;
  }
  v127 = v40;
  objc_msgSend(*(id *)&v4[v38], sel_setAttributedText_, 0);
  v43 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
  v44 = *(void **)&v11[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel];
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v11;
  v21 = v11;
  v46 = v44;
  objc_msgSend(v46, sel_alpha);
  if (v47 == 0.0)
  {
    objc_msgSend(*(id *)&v11[v43], sel_setFont_, *(_QWORD *)(v21 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont));
    objc_msgSend(*(id *)&v11[v43], sel_setAttributedText_, 0);
    sub_23AA02258(0, 0, 1, 0, 0);

    swift_release();
    goto LABEL_18;
  }
  sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
  v114 = *(id *)&v4[v38];
  v115 = sub_23AA3338C();

  if ((v115 & 1) == 0)
  {
LABEL_48:
    v117 = (void *)objc_opt_self();
    v119 = *(double *)(v21 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96);
    v118 = *(double *)(v21 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104);
    v120 = swift_allocObject();
    *(_QWORD *)(v120 + 16) = v46;
    *(_BYTE *)(v120 + 24) = 0;
    v132 = sub_23AA049F0;
    v133 = v120;
    v121 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v129 = 1107296256;
    v130 = sub_23A9C4DBC;
    v131 = &unk_250BC5300;
    v122 = _Block_copy(&aBlock);
    v123 = v46;
    swift_release();
    v124 = swift_allocObject();
    *(_QWORD *)(v124 + 16) = sub_23AA049B8;
    *(_QWORD *)(v124 + 24) = v45;
    v132 = sub_23AA043D0;
    v133 = v124;
    aBlock = v121;
    v129 = 1107296256;
    v130 = sub_23A9A366C;
    v131 = &unk_250BC5350;
    v125 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v117, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v122, v125, v118, 0.0, v119, 0.0);
    _Block_release(v125);
    _Block_release(v122);

    swift_release();
    goto LABEL_18;
  }
  v116 = *(void **)(v21 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint);
  if (v116)
  {
    objc_msgSend(v116, sel_setConstant_, 0.0);
    goto LABEL_48;
  }
LABEL_53:

  __break(1u);
}

uint64_t sub_23AA03398(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;

  v6 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
  v7 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel];
  if ((a3 & 0x1FFFFFFFFLL) == 0x40)
    v8 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 32];
  else
    v8 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont];
  v9 = v8;
  v10 = v7;
  objc_msgSend(v10, sel_setFont_, v9);

  objc_msgSend(*(id *)&a2[v6], sel_setAttributedText_, a4);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  v12 = a2;
  sub_23AA02258(0, 1, 1, sub_23AA045D4, v11);
  return swift_release();
}

void sub_23AA03480(uint64_t a1, uint64_t a2)
{
  double v3;
  id v4;
  char v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t aBlock;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v16 = *(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel);
  objc_msgSend(v16, sel_alpha);
  if (v3 == 1.0)
  {

    return;
  }
  sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
  v4 = *(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel);
  v5 = sub_23AA3338C();

  if ((v5 & 1) == 0)
    goto LABEL_6;
  v6 = *(void **)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint);
  if (v6)
  {
    objc_msgSend(v6, sel_setConstant_, *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleLabelHeight));
LABEL_6:
    v7 = (void *)objc_opt_self();
    v9 = *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96);
    v8 = *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v16;
    *(_BYTE *)(v10 + 24) = 1;
    v21 = sub_23AA049F0;
    v22 = v10;
    v11 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v18 = 1107296256;
    v19 = sub_23A9C4DBC;
    v20 = &unk_250BC5620;
    v12 = _Block_copy(&aBlock);
    v13 = v16;
    swift_release();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    v21 = sub_23AA043D0;
    v22 = v14;
    aBlock = v11;
    v18 = 1107296256;
    v19 = sub_23A9A366C;
    v20 = &unk_250BC5670;
    v15 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v12, v15, v8, 0.0, v9, 0.0);
    _Block_release(v15);
    _Block_release(v12);

    return;
  }
  __break(1u);
}

void sub_23AA036BC(uint64_t a1, uint64_t a2)
{
  double v3;
  id v4;
  char v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t aBlock;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v16 = *(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel);
  objc_msgSend(v16, sel_alpha);
  if (v3 == 1.0)
  {

    return;
  }
  sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
  v4 = *(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel);
  v5 = sub_23AA3338C();

  if ((v5 & 1) == 0)
    goto LABEL_6;
  v6 = *(void **)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint);
  if (v6)
  {
    objc_msgSend(v6, sel_setConstant_, *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_styleLabelHeight));
LABEL_6:
    v7 = (void *)objc_opt_self();
    v9 = *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96);
    v8 = *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v16;
    *(_BYTE *)(v10 + 24) = 1;
    v21 = sub_23AA049F0;
    v22 = v10;
    v11 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v18 = 1107296256;
    v19 = sub_23A9C4DBC;
    v20 = &unk_250BC56E8;
    v12 = _Block_copy(&aBlock);
    v13 = v16;
    swift_release();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    v21 = sub_23AA043D0;
    v22 = v14;
    aBlock = v11;
    v18 = 1107296256;
    v19 = sub_23A9A366C;
    v20 = &unk_250BC5738;
    v15 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v12, v15, v8, 0.0, v9, 0.0);
    _Block_release(v15);
    _Block_release(v12);

    return;
  }
  __break(1u);
}

void sub_23AA038F8(char a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  id v8;
  double v9;
  id v10;
  char v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  if ((a1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel], sel_setAttributedText_, 0);
    v4 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
    v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel];
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a2;
    v7 = a2;
    v8 = v5;
    objc_msgSend(v8, sel_alpha);
    if (v9 == 0.0)
    {
      objc_msgSend(*(id *)&a2[v4], sel_setFont_, *(_QWORD *)&v7[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont]);
      objc_msgSend(*(id *)&a2[v4], sel_setAttributedText_, 0);
      sub_23AA02258(0, 0, 1, 0, 0);

      swift_release();
      return;
    }
    sub_23A968488(0, (unint64_t *)&qword_2569D6DE0);
    v10 = *(id *)&a2[v3];
    v11 = sub_23AA3338C();

    if ((v11 & 1) != 0)
    {
      v12 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint];
      if (!v12)
      {

        __break(1u);
        return;
      }
      objc_msgSend(v12, sel_setConstant_, 0.0);
    }
    v13 = (void *)objc_opt_self();
    v15 = *(double *)&v7[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 96];
    v14 = *(double *)&v7[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 104];
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v8;
    *(_BYTE *)(v16 + 24) = 0;
    v26 = sub_23AA049F0;
    v27 = v16;
    v17 = MEMORY[0x24BDAC760];
    v22 = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v24 = sub_23A9C4DBC;
    v25 = &unk_250BC57B0;
    v18 = _Block_copy(&v22);
    v19 = v8;
    swift_release();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_23AA049B8;
    *(_QWORD *)(v20 + 24) = v6;
    v26 = sub_23AA043D0;
    v27 = v20;
    v22 = v17;
    v23 = 1107296256;
    v24 = sub_23A9A366C;
    v25 = &unk_250BC5800;
    v21 = _Block_copy(&v22);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v18, v21, v14, 0.0, v15, 0.0);
    _Block_release(v21);
    _Block_release(v18);

    swift_release();
  }
}

void sub_23AA03BE0(char a1, uint64_t a2)
{
  uint64_t v3;

  if ((a1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
    objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel), sel_setFont_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont));
    objc_msgSend(*(id *)(a2 + v3), sel_setAttributedText_, 0);
    sub_23AA02258(0, 0, 1, 0, 0);
  }
}

void sub_23AA03C50(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;

  v6 = v5;
  v7 = v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distance;
  *(double *)v7 = *(double *)&a1;
  *(_BYTE *)(v7 + 8) = a2 & 1;
  v8 = v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide;
  *(_DWORD *)v8 = a3;
  *(_BYTE *)(v8 + 4) = BYTE4(a3) & 1;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold) = a5;
  if ((a2 & 1) != 0)
  {
    v9 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring);
    sub_23A9829AC(1.79769313e308);
    *(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
  }
  else if ((a4 & 1) != 0
         && (v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring),
             v13 = v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
             swift_beginAccess(),
             v14 = *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40),
             *(double *)(v13 + 280) + v14 != 1.79769313e308))
  {
    v17 = *(double *)&a1 - v14;
    *(double *)(v13 + 280) = v17;
    *(double *)(v13 + 240) = v17;
    *(_QWORD *)(v13 + 248) = 0;
  }
  else
  {
    v15 = *(_QWORD *)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring);
    sub_23A9829AC(*(double *)&a1);
    *(_BYTE *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v16 = v6 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance;
    *(double *)v16 = *(double *)&a1;
    *(_BYTE *)(v16 + 8) = 0;
  }
}

void sub_23AA03DA0(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring);
  v5 = (double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  v6 = (double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v7 = v5[35] + *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (v7 == 1.79769313e308)
  {
    v8 = 0;
    v9 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance;
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance) = 0;
  }
  else
  {
    sub_23A982B4C(a1);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v10 = *v5 + *v6;
    if (vabdd_f64(v5[35] + v6[5], v10) <= *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
      v10 = v5[35] + v6[5];
    v9 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance;
    *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance) = v10;
    v8 = *(_QWORD *)&v10;
  }
  *(_BYTE *)(v2 + v9 + 8) = v7 == 1.79769313e308;
  sub_23AA025AC(v8, v7 == 1.79769313e308, *(unsigned int *)(v2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide) | ((unint64_t)*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide + 4) << 32));
}

id sub_23AA03F10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1DistanceView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1DistanceView()
{
  return objc_opt_self();
}

void destroy for FMR1DistanceViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for FMR1DistanceViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(void **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  return a1;
}

uint64_t assignWithCopy for FMR1DistanceViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v19 = *(void **)(a2 + 48);
  v20 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 56);
  v23 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v22;
  v24 = v22;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for FMR1DistanceViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  __int128 v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMR1DistanceViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMR1DistanceViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMR1DistanceViewStyle()
{
  return &type metadata for FMR1DistanceViewStyle;
}

uint64_t sub_23AA04388()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23AA043AC(char a1)
{
  uint64_t v1;

  sub_23AA038F8(a1, *(char **)(v1 + 16));
}

uint64_t sub_23AA043B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA043C4()
{
  return swift_release();
}

uint64_t sub_23AA043D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AA04404()
{
  uint64_t v0;

  return sub_23AA044A4(*(char **)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23AA04430(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_23AA33704() & 1;
}

uint64_t sub_23AA044A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;

  v5 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
  v6 = *(void **)&a1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel];
  if ((a2 & 0x1FFFFFFFFLL) == 0x40)
    v7 = *(void **)&a1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style + 32];
  else
    v7 = *(void **)&a1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont];
  v8 = v7;
  v9 = v6;
  objc_msgSend(v9, sel_setFont_, v8);

  objc_msgSend(*(id *)&a1[v5], sel_setAttributedText_, a3);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = a1;
  sub_23AA02258(0, 1, 1, sub_23AA045E0, v10);
  return swift_release();
}

void sub_23AA04590(char a1)
{
  uint64_t v1;

  sub_23AA03BE0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23AA045AC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA03398(a1, *(char **)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32), *(_QWORD *)(v1 + 32));
}

void sub_23AA045D4(uint64_t a1)
{
  uint64_t v1;

  sub_23AA03480(a1, *(_QWORD *)(v1 + 16));
}

void sub_23AA045E0(uint64_t a1)
{
  uint64_t v1;

  sub_23AA036BC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23AA045EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_23AA04614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D50D8;
  if (!qword_2569D50D8)
  {
    _s3__C3KeyVMa_0(255);
    result = MEMORY[0x23B85DA58](&unk_23AA35F24, v1);
    atomic_store(result, (unint64_t *)&qword_2569D50D8);
  }
  return result;
}

uint64_t sub_23AA0465C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23AA04680()
{
  uint64_t v0;
  char *v1;
  id result;

  v1 = *(char **)(v0 + 16);
  result = *(id *)&v1[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint];
  if (result)
  {
    objc_msgSend(result, sel_setConstant_, *(double *)(v0 + 24));
    return objc_msgSend(v1, sel_layoutIfNeeded);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23AA046D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AA04700(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v2 = *(uint64_t (**)(uint64_t))(v1 + 16);
  if (v2)
    return v2(result & 1);
  return result;
}

uint64_t sub_23AA0472C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084(&qword_2569D81A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23AA0476C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D81C8;
  if (!qword_2569D81C8)
  {
    v1 = sub_23A96C258(&qword_2569D81C0);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_2569D81C8);
  }
  return result;
}

void sub_23AA047B8()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  char *v29;

  v1 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_style;
  if (qword_2569D4BB8 != -1)
    swift_once();
  v2 = &v0[v1];
  v3 = (void *)qword_2569D8088;
  v4 = (void *)unk_2569D8090;
  v5 = (void *)qword_2569D8098;
  v6 = (void *)unk_2569D80A0;
  v7 = (void *)qword_2569D80A8;
  v8 = qword_2569D80B0;
  v9 = (void *)qword_2569D80B8;
  v10 = (void *)unk_2569D80C0;
  v11 = xmmword_2569D80C8;
  v12 = unk_2569D80D8;
  v13 = xmmword_2569D80E8;
  *(_QWORD *)v2 = qword_2569D8088;
  *((_QWORD *)v2 + 1) = v4;
  *((_QWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 3) = v6;
  *((_QWORD *)v2 + 4) = v7;
  *((_QWORD *)v2 + 5) = v8;
  *((_QWORD *)v2 + 6) = v9;
  *((_QWORD *)v2 + 7) = v10;
  *((_OWORD *)v2 + 4) = v11;
  *((_OWORD *)v2 + 5) = v12;
  *((_OWORD *)v2 + 6) = v13;
  v14 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabel;
  v15 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v16 = v3;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v9;
  v22 = v10;
  *(_QWORD *)&v0[v14] = objc_msgSend(v15, sel_init);
  v23 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabel;
  *(_QWORD *)&v0[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_directionLabelFont] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceLabelBottomConstraint] = 0;
  v24 = &v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_initialAboveOrBelowTimestamp];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v25 = &v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide];
  *(_DWORD *)v25 = 0;
  v25[4] = 1;
  v26 = OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring;
  *(_QWORD *)&v0[v26] = sub_23A9CD958(0, 1, 0, 1);
  v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold] = 2;
  v27 = &v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_deviceName];
  *v27 = 0;
  v27[1] = 0;
  v28 = &v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distance];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = &v0[OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_presentedDistance];
  *(_QWORD *)v29 = 0;
  v29[8] = 1;

  sub_23AA335A8();
  __break(1u);
}

char *sub_23AA04A90(unsigned __int8 *a1, __int16 *a2, uint64_t a3, void *a4, uint64_t a5, char a6, uint64_t a7, char a8, double a9, double a10)
{
  char *v10;
  int v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  void *v64;
  id v65;
  void *v66;
  int v67;
  double *v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  double v73;
  double v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  char *v82;
  void *v83;
  char *v84;
  id v85;
  __int16 v88;
  int v89;
  objc_super v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;

  v14 = *a1;
  v88 = *a2;
  v15 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_ringView;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_ringView] = 0;
  v16 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDebugNode;
  v17 = (objc_class *)type metadata accessor for FMPFSKNode();
  v18 = objc_allocWithZone(v17);
  v19 = v10;
  *(_QWORD *)&v10[v16] = objc_msgSend(v18, sel_init);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode] = 0;
  v20 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasPatternSpinesNode;
  *(_QWORD *)&v19[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9E98]), sel_init);
  v21 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode;
  *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  v22 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode;
  *(_QWORD *)&v19[v22] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes] = MEMORY[0x24BEE4AF8];
  v23 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsNode;
  *(_QWORD *)&v19[v23] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode] = 0;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_extraDiskRadiusWhenSnapping] = 0;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_forceHideNoonNode] = 0;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_allFragmentsAreOrbiting] = 0;
  v24 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackDidChange] = 0;
  v25 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackTop];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  v26 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackBottom];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_needsRecomputeVisibleFragments] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_inFOV] = 2;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyConformedToExplodedFactor] = 1;
  v27 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v28 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyConformationFactor] = 1;
  v29 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor];
  *(_QWORD *)v29 = 0;
  v29[8] = 1;
  v30 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyBearing] = 1;
  v31 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v32 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  v33 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyCenterFactor] = 1;
  v34 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactor];
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  v35 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_derivativeCenterFactor] = 0;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldLookout] = 1;
  v36 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookout];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  v37 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldLabelsOpacity] = 1;
  v38 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsOpacity];
  *(_QWORD *)v38 = 0;
  v38[8] = 1;
  v39 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLabelsOpacity];
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType] = v14;
  *(_WORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_findingTechnology] = v88;
  v89 = v14;
  if (v14 == 1)
  {
    if (qword_2569D4B30 != -1)
      swift_once();
    v40 = &xmmword_2569E0258;
  }
  else
  {
    if (qword_2569D4B28 != -1)
      swift_once();
    v40 = &xmmword_2569E0188;
  }
  v41 = v40[11];
  v105 = v40[10];
  v106 = v41;
  v107 = v40[12];
  v42 = v40[7];
  v101 = v40[6];
  v102 = v42;
  v43 = v40[9];
  v103 = v40[8];
  v104 = v43;
  v44 = v40[3];
  v97 = v40[2];
  v98 = v44;
  v45 = v40[5];
  v99 = v40[4];
  v100 = v45;
  v46 = v40[1];
  v95 = *v40;
  v96 = v46;
  v47 = (__int128 *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style];
  v47[2] = v97;
  v47[3] = v44;
  v48 = v102;
  v47[6] = v101;
  v47[7] = v48;
  v49 = v100;
  v47[4] = v99;
  v47[5] = v49;
  v50 = v107;
  v51 = v105;
  v47[11] = v106;
  v47[12] = v50;
  v52 = v104;
  v47[8] = v103;
  v47[9] = v52;
  v47[10] = v51;
  v53 = v96;
  *v47 = v95;
  v47[1] = v53;
  v54 = &v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config];
  v55 = *(_OWORD *)(a3 + 48);
  v57 = *(_OWORD *)a3;
  v56 = *(_OWORD *)(a3 + 16);
  *((_OWORD *)v54 + 2) = *(_OWORD *)(a3 + 32);
  *((_OWORD *)v54 + 3) = v55;
  *(_OWORD *)v54 = v57;
  *((_OWORD *)v54 + 1) = v56;
  v58 = *(_OWORD *)(a3 + 112);
  v60 = *(_OWORD *)(a3 + 64);
  v59 = *(_OWORD *)(a3 + 80);
  *((_OWORD *)v54 + 6) = *(_OWORD *)(a3 + 96);
  *((_OWORD *)v54 + 7) = v58;
  *((_OWORD *)v54 + 4) = v60;
  *((_OWORD *)v54 + 5) = v59;
  v62 = *(_OWORD *)(a3 + 144);
  v61 = *(_OWORD *)(a3 + 160);
  v63 = *(_OWORD *)(a3 + 128);
  v54[176] = *(_BYTE *)(a3 + 176);
  *((_OWORD *)v54 + 9) = v62;
  *((_OWORD *)v54 + 10) = v61;
  *((_OWORD *)v54 + 8) = v63;
  v64 = (void *)objc_opt_self();
  sub_23A9E9800(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E96DC);
  v65 = objc_msgSend(v64, sel_mainScreen);
  v66 = (void *)sub_23AA32FB4();
  v67 = MGGetSInt32Answer();

  *(double *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pixelsPerInch] = (double)v67;
  v68 = (double *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_sceneSize];
  *v68 = a9;
  v68[1] = a10;
  v69 = *(void **)&v10[v15];
  *(_QWORD *)&v10[v15] = a4;
  v70 = a4;

  if (qword_2569D4B18 != -1)
    swift_once();
  v71 = (void *)qword_2569E00B8;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonDotColor] = qword_2569E00B8;
  v72 = (void *)qword_2569E00C0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeDotColor] = qword_2569E00C0;
  v73 = 1.0;
  if (v89 == 1)
    v73 = 0.5;
  v74 = v73 * *v68;
  v75 = v73 * v68[1];
  if (v75 >= v74)
    v75 = v74;
  v76 = v75 * 0.5;
  *(double *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_explodedDiskRadius] = *((double *)v47 + 6) * v76;
  *(double *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius] = v76 * *((double *)v47 + 8);
  if ((a6 & 1) != 0)
    v77 = 0;
  else
    v77 = a5;
  *(_QWORD *)v27 = v77;
  v27[8] = 0;
  if ((a8 & 1) != 0)
    v78 = 0;
  else
    v78 = a7;
  *(_QWORD *)v29 = v78;
  v29[8] = 0;
  v79 = *((_QWORD *)v47 + 22);
  v80 = v71;
  v81 = v72;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactorSpring] = sub_23A9CCF6C(v78, 0, 0x3F50624DD2F1A9FCLL, 0, v79, 0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactorSpring] = sub_23A9CCF6C(v77, 0, 0x3F847AE147AE147BLL, 0, v79, 0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_energeticAngleSpring] = sub_23A9CCF6C(0, 0, 0x3F69BC65B68B71C3, 0, 0, 1);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lethargicAngleSpring] = sub_23A9CDC7C(0, 0, 0x3F69BC65B68B71C3, 0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactorSpring] = sub_23A9CCF6C(0, 1, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookoutSpring] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackSpring] = sub_23A9CDC7C(0x3FE0000000000000, 0, 0x3F1A36E2EB1C432DLL, 0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsOpacitySpring] = sub_23A9CCF6C(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);

  v94.receiver = v19;
  v94.super_class = (Class)type metadata accessor for FMPFSKPatternNode();
  v82 = (char *)objc_msgSendSuper2(&v94, sel_init);
  v83 = *(void **)&v82[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode];
  v84 = v82;
  v85 = v83;
  objc_msgSend(v84, sel_addChild_, v85);

  sub_23A9E9800(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E983C);
  return v84;
}

uint64_t sub_23AA0534C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  BOOL v29;
  uint64_t v30;
  void *v31;

  v2 = v1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDebugNode), sel_setHidden_, (a1 & 1) == 0);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode), sel_setHidden_, (a1 & 1) == 0);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode), sel_setHidden_, (a1 & 1) == 0);
  v4 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode);
  if (v5)
    objc_msgSend(v5, sel_setHidden_, 0);
  v6 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode);
  if (v7)
    objc_msgSend(v7, sel_setHidden_, 0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode), sel_setHidden_, 0);
  v8 = *(void **)(v2 + v4);
  if (v8)
  {
    if ((a1 & 1) != 0)
    {
      v9 = (void *)objc_opt_self();
      v10 = v8;
      v11 = objc_msgSend(v9, sel_yellowColor);
      v12 = objc_msgSend(v11, sel_colorWithAlphaComponent_, 0.75);

    }
    else
    {
      v13 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonDotColor);
      v14 = v8;
      v12 = v13;
    }
    sub_23A96F4D0(v12);

  }
  v15 = *(void **)(v2 + v6);
  if (v15)
  {
    if ((a1 & 1) != 0)
    {
      v16 = (void *)objc_opt_self();
      v17 = v15;
      v18 = objc_msgSend(v16, sel_purpleColor);
      v19 = objc_msgSend(v18, sel_colorWithAlphaComponent_, 0.75);

    }
    else
    {
      v20 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeDotColor);
      v21 = v15;
      v19 = v20;
    }
    sub_23A96F4D0(v19);

  }
  v22 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasPatternSpinesNode), sel_children);
  sub_23AA06730();
  v23 = sub_23AA330B0();

  if (v23 >> 62)
    goto LABEL_27;
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v24; v24 = sub_23AA335C0())
  {
    v25 = 4;
    v26 = 0;
    if ((v23 & 0xC000000000000001) != 0)
    {
LABEL_18:
      v27 = (id)MEMORY[0x23B85D0B0](v26, v23);
      goto LABEL_20;
    }
    while (1)
    {
      v27 = *(id *)(v23 + 8 * v25);
LABEL_20:
      v28 = v27;
      v29 = __OFADD__(v26, 1);
      v30 = v26 + 1;
      if (v29)
        break;
      objc_opt_self();
      v31 = (void *)swift_dynamicCastObjCClass();
      if (v31)
        objc_msgSend(v31, sel_setLineWidth_, 1.0);

      if (v30 == v24)
        return swift_bridgeObjectRelease_n();
      v26 = ++v25 - 4;
      if ((v23 & 0xC000000000000001) != 0)
        goto LABEL_18;
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease_n();
}

void sub_23AA05644(char a1, uint64_t a2, char a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD aBlock[6];

  objc_msgSend(v3, sel_removeAllActions);
  if ((a1 & 1) != 0)
  {
    if ((a3 & 1) != 0 || *(double *)&a2 <= 0.0)
    {
      objc_msgSend(v3, sel_setAlpha_, 1.0);
      *((_BYTE *)v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_forceHideNoonNode) = 0;
    }
    else
    {
      v7 = objc_msgSend((id)objc_opt_self(), sel_fadeAlphaTo_duration_, 1.0, *(double *)&a2);
      objc_msgSend(v7, sel_setTimingMode_, 2);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v3;
      aBlock[4] = sub_23AA06704;
      aBlock[5] = v8;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23A9C4DBC;
      aBlock[3] = &unk_250BC5990;
      v9 = _Block_copy(aBlock);
      v10 = v3;
      swift_release();
      objc_msgSend(v10, sel_runAction_completion_, v7, v9);
      _Block_release(v9);

    }
  }
  else
  {
    *((_BYTE *)v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_forceHideNoonNode) = 1;
    if ((a3 & 1) != 0 || *(double *)&a2 <= 0.0)
    {
      objc_msgSend(v3, sel_setAlpha_, 0.0);
    }
    else
    {
      v11 = objc_msgSend((id)objc_opt_self(), sel_fadeAlphaTo_duration_, 0.0, *(double *)&a2);
      objc_msgSend(v11, sel_setTimingMode_, 2);
      objc_msgSend(v3, sel_runAction_, v11);

    }
  }
}

void sub_23AA0584C(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor;
  *(double *)v6 = a2;
  *(_BYTE *)(v6 + 8) = 0;
  v7 = (double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor + 8) & 1) == 0)
  {
    v8 = *v7;
    if (*v7 == 0.0 && a2 > 0.0)
    {
      v9 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
      if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate, v8))
      {
        v10 = *(_QWORD *)(v9 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
        swift_unknownObjectRelease();
      }
      sub_23A9F3688(*(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track), *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track + 8));
    }
    else if (v8 == 1.0 && a2 < 1.0)
    {
      v13 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
      if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
      {
        v14 = *(_QWORD *)(v13 + 8);
        v15 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v15, v14);
        swift_unknownObjectRelease();
      }
      sub_23A9F4DF4();
    }
  }
  if ((a1 & 1) != 0
    && (v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactorSpring),
        v17 = v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v17 + 280) + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    v19 = v16 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v19 = a2;
    *(_BYTE *)(v19 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactorSpring);
    sub_23A9829AC(a2);
    *(_BYTE *)(v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    sub_23AA0D058(1, a2);
  }
}

void sub_23AA05A18(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  double v8;
  char v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;

  v4 = v3;
  if ((a2 & 1) != 0)
  {
    v12 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing;
    *(double *)v12 = *(double *)&a1;
    *(_BYTE *)(v12 + 8) = 1;
    v13 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing;
    *(_QWORD *)v13 = 0;
    *(_BYTE *)(v13 + 8) = 1;
    v14 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing;
    *(_QWORD *)v14 = 0;
    *(_BYTE *)(v14 + 8) = 1;
    goto LABEL_26;
  }
  v7 = v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing;
  v8 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing);
  v9 = *(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing + 8);
  v10 = 0.0;
  if ((v9 & 1) == 0)
  {
    v10 = fmod(*(long double *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing), 360.0);
    if (v10 <= 180.0)
    {
      if (v10 >= -180.0)
        goto LABEL_9;
      v11 = 360.0;
    }
    else
    {
      v11 = -360.0;
    }
    v10 = v10 + v11;
  }
LABEL_9:
  v15 = *(double *)&a1 - v10;
  if (vabdd_f64(*(double *)&a1, v10) > 180.0)
  {
    if (v10 >= 0.0 || *(double *)&a1 < 0.0)
    {
      if (*(double *)&a1 < 0.0 && v10 >= 0.0)
        v15 = v15 + 360.0;
      v16 = 0.0;
      if ((v9 & 1) == 0)
        goto LABEL_14;
      goto LABEL_22;
    }
    v15 = v15 + -360.0;
  }
  v16 = 0.0;
  if ((v9 & 1) == 0)
  {
LABEL_14:
    if (fabs(v15) <= 2.22044605e-16)
      goto LABEL_26;
    v16 = v8;
  }
LABEL_22:
  v18 = v15 + v16;
  *(double *)v7 = v15 + v16;
  *(_BYTE *)(v7 + 8) = 0;
  v19 = (v15 + v16) / 180.0 * 3.14159265;
  if ((a3 & 1) == 0)
    goto LABEL_25;
  v20 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_energeticAngleSpring);
  v21 = v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  v22 = *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v21 + 280) + v22 == 1.79769313e308
    || (v23 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lethargicAngleSpring,
        v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lethargicAngleSpring),
        v25 = v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v25 + 280) + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) == 1.79769313e308))
  {
LABEL_25:
    v26 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_energeticAngleSpring);
    sub_23A9829AC(v19);
    *(_BYTE *)(v26 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v27 = v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing;
    *(double *)v27 = v18;
    *(_BYTE *)(v27 + 8) = 0;
    v28 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lethargicAngleSpring);
    sub_23A9829AC(v19);
    *(_BYTE *)(v28 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v29 = v4 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing;
    *(double *)v29 = v18;
    *(_BYTE *)(v29 + 8) = 0;
  }
  else
  {
    *(double *)(v21 + 280) = v19 - v22;
    *(double *)(v21 + 240) = v19 - v22;
    *(_QWORD *)(v21 + 248) = 0;
    v30 = *(_QWORD *)(v4 + v23);
    v31 = v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
    swift_beginAccess();
    v32 = v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
    v33 = *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    if (*(double *)(v31 + 280) + v33 == 1.79769313e308)
    {
      sub_23A9829AC(v19);
      *(_BYTE *)(v30 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v33 = *(double *)(v32 + 40);
    }
    v34 = v19 - v33;
    *(double *)(v31 + 280) = v34;
    *(double *)(v31 + 240) = v34;
    *(_QWORD *)(v31 + 248) = 0;
  }
LABEL_26:
  sub_23AA0D544();
}

void sub_23AA05D70(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactor;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactor + 8) & 1) == 0)
  {
    if (*(double *)v5 >= a2)
    {
      v6 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_derivativeCenterFactor;
      if (*(double *)v5 <= a2)
        v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_derivativeCenterFactor);
      else
        v7 = -1;
    }
    else
    {
      v6 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_derivativeCenterFactor;
      v7 = 1;
    }
    *(_QWORD *)(v2 + v6) = v7;
  }
  *(double *)v5 = a2;
  *(_BYTE *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactorSpring),
        v9 = v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v9 + 280) + *(double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    v12 = v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v12 = a2;
    *(_BYTE *)(v12 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactorSpring);
    sub_23A9829AC(a2);
    *(_BYTE *)(v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v11 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor;
    *(double *)v11 = a2;
    *(_BYTE *)(v11 + 8) = 0;
  }
  sub_23AA0D544();
}

void sub_23AA05EB4(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookout;
  *(double *)v5 = a2;
  *(_BYTE *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookoutSpring),
        v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    v10 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v10 = a2;
    *(_BYTE *)(v10 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookoutSpring);
    sub_23A9829AC(a2);
    *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v9 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout;
    *(double *)v9 = a2;
    *(_BYTE *)(v9 + 8) = 0;
  }
  sub_23AA0D544();
}

void sub_23AA05FB8(double a1)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  int64x2_t v24;

  v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v4 = *v3;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_23AA335C0();
    if (!v5)
      goto LABEL_12;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v5)
      goto LABEL_12;
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  v6 = 0;
  v24 = vdupq_n_s64(0x4341C37937E08000uLL);
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (char *)MEMORY[0x23B85D0B0](v6, v4);
    else
      v8 = (char *)*(id *)(v4 + 8 * v6 + 32);
    v9 = v8;
    v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_headingSpring];
    v11 = v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
    swift_beginAccess();
    v12 = v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
    v13 = *(double *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v14 = *(double *)(v11 + 280) + v13;
    v15 = v14 + a1;
    if (v14 == 1.79769313e308)
    {
      v16 = *(_QWORD *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
      v17 = *(_QWORD *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
      *(double *)v11 = v15;
      *(_QWORD *)(v11 + 8) = 0;
      *(_QWORD *)(v11 + 16) = v16;
      *(_OWORD *)(v11 + 24) = xmmword_23AA36E50;
      *(_OWORD *)(v11 + 40) = xmmword_23AA36E60;
      *(_QWORD *)(v11 + 56) = v16;
      *(_QWORD *)(v11 + 64) = 0;
      *(_QWORD *)(v11 + 72) = 0;
      *(int64x2_t *)(v11 + 80) = v24;
      *(_OWORD *)(v11 + 96) = 0u;
      *(_OWORD *)(v11 + 112) = 0u;
      *(_QWORD *)(v11 + 128) = v17;
      *(_OWORD *)(v11 + 136) = xmmword_23AA36E50;
      *(_OWORD *)(v11 + 152) = xmmword_23AA36E60;
      *(_QWORD *)(v11 + 168) = v17;
      *(_QWORD *)(v11 + 176) = 0;
      *(_QWORD *)(v11 + 184) = 0;
      *(_OWORD *)(v11 + 208) = 0u;
      *(_OWORD *)(v11 + 224) = 0u;
      *(int64x2_t *)(v11 + 192) = v24;
      *(double *)(v11 + 240) = v15;
      *(_OWORD *)(v11 + 248) = xmmword_23AA36E50;
      *(_QWORD *)(v11 + 264) = 0x4063BD3CC9BE45DELL;
      *(_QWORD *)(v11 + 272) = 0x403921FB54442D18;
      *(double *)(v11 + 280) = v15;
      *(_QWORD *)(v11 + 288) = 0;
      *(_QWORD *)(v11 + 296) = 0;
      *(int64x2_t *)(v11 + 304) = v24;
      *(_OWORD *)(v11 + 320) = 0u;
      *(_OWORD *)(v11 + 336) = 0u;
      v18 = *(_QWORD *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
      *(_QWORD *)(v11 + 352) = v18;
      v19 = *(_QWORD *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
      *(_QWORD *)(v11 + 360) = v19;
      v20 = 6.28318531
          / *(double *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
          * (6.28318531
           / *(double *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
      v21 = sqrt(v20);
      v22 = *(double *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v21 + v21);
      *(_QWORD *)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
      *(_QWORD *)(v12 + 16) = 0x3FF0000000000000;
      *(double *)(v12 + 24) = v20;
      *(double *)(v12 + 32) = v22;
      *(_QWORD *)(v12 + 40) = 0;
      *(int64x2_t *)(v12 + 64) = v24;
      *(_OWORD *)(v12 + 80) = 0u;
      *(_OWORD *)(v12 + 96) = 0u;
      *(_QWORD *)(v12 + 48) = v18;
      *(_QWORD *)(v12 + 56) = v19;
      *(double *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = v15;
      *(_QWORD *)(v10 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
      *(_BYTE *)(v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v13 = 0.0;
    }
    v7 = v15 - v13;
    *(double *)(v11 + 280) = v7;
    ++v6;
    *(double *)(v11 + 240) = v7;
    *(_QWORD *)(v11 + 248) = 0;

  }
  while (v5 != v6);
LABEL_12:
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v23 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode))
    sub_23A96EBCC(a1);
}

id sub_23AA06308()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKPatternNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKPatternNode()
{
  return objc_opt_self();
}

uint64_t (*sub_23AA06530(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23AA06608(v6, a2, a3);
  return sub_23AA06584;
}

uint64_t (*sub_23AA06588(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23AA06674(v6, a2, a3);
  return sub_23AA06584;
}

void sub_23AA065DC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_23AA06608(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x23B85D0B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s11FMFindingUI39FMFindingSymbolBasedPartPickerViewStyleVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_23AA06674(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x23B85D0B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for FMFindingSymbolBasedPartPickerViewStyle;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA066E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23AA06704()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_forceHideNoonNode) = 0;
}

uint64_t sub_23AA06718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA06728()
{
  return swift_release();
}

unint64_t sub_23AA06730()
{
  unint64_t result;

  result = qword_2569D5998;
  if (!qword_2569D5998)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D5998);
  }
  return result;
}

void sub_23AA0676C()
{
  _BYTE *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_ringView] = 0;
  v1 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDebugNode;
  v2 = (objc_class *)type metadata accessor for FMPFSKNode();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasInsideBorderBezierNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasDiskBezierNode] = 0;
  v3 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasPatternSpinesNode;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9E98]), sel_init);
  v4 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v5 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes] = MEMORY[0x24BEE4AF8];
  v6 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsNode;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_extraDiskRadiusWhenSnapping] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_forceHideNoonNode] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_allFragmentsAreOrbiting] = 0;
  v7 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackDidChange] = 0;
  v8 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackTop];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackBottom];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_needsRecomputeVisibleFragments] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_inFOV] = 2;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyConformedToExplodedFactor] = 1;
  v10 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyConformationFactor] = 1;
  v12 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyBearing] = 1;
  v14 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyCenterFactor] = 1;
  v17 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactor];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_derivativeCenterFactor] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldLookout] = 1;
  v19 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookout];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldLabelsOpacity] = 1;
  v21 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsOpacity];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLabelsOpacity];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;

  sub_23AA335A8();
  __break(1u);
}

id sub_23AA06AC8(_BYTE *a1, uint64_t a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  char v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  char v34;
  double v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  id v42;
  int v44;
  objc_super v45;
  _QWORD v46[7];
  char v47;
  char v48[8];
  uint64_t v49;

  sub_23A9FB2C0(a2, (uint64_t)v46);
  v12 = v46[0];
  v11 = v46[1];
  v13 = (id)v46[2];
  v14 = *(double *)&v46[3];
  v15 = v46[4];
  v16 = *(double *)&v46[5];
  v17 = *(double *)&v46[6];
  v18 = v47;
  v5[OBJC_IVAR____TtC11FMFindingUI15FMPFSKLabelNode_experienceType] = *a1;
  sub_23A9FB2C0(a2, (uint64_t)v48);
  if (v49)
  {
    v19 = v18 & 1;
    v20 = v5;
  }
  else
  {
    v21 = qword_2569D4B60;
    v22 = v5;
    if (v21 != -1)
      swift_once();
    v12 = qword_2569E0488;
    v11 = unk_2569E0490;
    v23 = (void *)qword_2569E0498;
    v14 = *(double *)&qword_2569E04A0;
    v16 = *((double *)&xmmword_2569E04A8 + 1);
    v15 = xmmword_2569E04A8;
    v17 = *(double *)&qword_2569E04B8;
    v19 = byte_2569E04C0;
    swift_bridgeObjectRetain();
    v13 = v23;
  }
  v24 = &v5[OBJC_IVAR____TtC11FMFindingUI15FMPFSKLabelNode_style];
  *(_QWORD *)v24 = v12;
  *((_QWORD *)v24 + 1) = v11;
  *((_QWORD *)v24 + 2) = v13;
  *((double *)v24 + 3) = v14;
  *((_QWORD *)v24 + 4) = v15;
  *((double *)v24 + 5) = v16;
  *((double *)v24 + 6) = v17;
  v44 = v19;
  v24[56] = v19;
  *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI15FMPFSKLabelNode_normalizedIndex] = a5;
  v25 = objc_allocWithZone(MEMORY[0x24BDE9E90]);
  sub_23AA0723C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E96DC);
  swift_bridgeObjectRetain_n();
  v26 = v13;
  v27 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v25, sel_initWithFontNamed_, v27);

  objc_msgSend(v28, sel_setFontSize_, v14);
  objc_msgSend(v28, sel_setFontColor_, v26);
  v29 = (void *)sub_23AA32FB4();
  objc_msgSend(v28, sel_setText_, v29);

  objc_msgSend(v28, sel_setVerticalAlignmentMode_, 1);
  objc_msgSend(v28, sel_setHorizontalAlignmentMode_, v15);
  objc_msgSend(v28, sel_setNumberOfLines_, 1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11FMFindingUI15FMPFSKLabelNode_labelNode] = v28;
  v30 = v28;

  v45.receiver = v5;
  v45.super_class = (Class)type metadata accessor for FMPFSKLabelNode();
  v31 = objc_msgSendSuper2(&v45, sel_init);
  objc_msgSend(v31, sel_addChild_, v30);
  v32 = v31;
  v33 = (void *)sub_23AA32FB4();
  objc_msgSend(v32, sel_setName_, v33);

  v34 = sub_23AA33050();
  swift_bridgeObjectRelease();
  v35 = 0.0;
  if ((v34 & 1) != 0)
  {
    v36 = objc_msgSend(v30, sel_horizontalAlignmentMode, 0.0);
    v35 = 0.0;
    if (v36 == (id)2)
    {
      objc_msgSend(v30, sel_fontSize, 0.0);
      v35 = v37 * -0.125;
    }
  }
  if (v44)
    v38 = 0.0;
  else
    v38 = v17;
  if (v44)
    v39 = 0.0;
  else
    v39 = v16;
  v40 = v39 + a3 + v35;
  v41 = v38 + a4;
  v42 = v32;
  objc_msgSend(v42, sel_setPosition_, v40, v41);
  sub_23AA0723C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A9E983C);

  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_23AA06F04()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = v0;
  sub_23AA33500();
  swift_bridgeObjectRelease();
  v2 = sub_23AA33824();
  v4 = sub_23A9E2E00(6uLL, v2, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease();
  MEMORY[0x23B85CBA0](v4, v6, v8, v10);
  sub_23AA33038();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  v11 = objc_msgSend(v0, sel_name);
  if (v11)
  {
    v12 = v11;
    sub_23AA32FD8();

  }
  sub_23AA33038();
  swift_bridgeObjectRelease();
  sub_23AA33038();
  sub_23A964084((uint64_t *)&unk_2569D6690);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23AA35F90;
  v14 = objc_msgSend(v1, sel_isHidden);
  v15 = sub_23A9640C4();
  v16 = 0x656C6269736976;
  if (v14)
    v16 = 0x6E6564646968;
  v17 = 0xE700000000000000;
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 64) = v15;
  if (v14)
    v17 = 0xE600000000000000;
  *(_QWORD *)(v13 + 32) = v16;
  *(_QWORD *)(v13 + 40) = v17;
  v18 = sub_23AA32FE4();
  swift_bridgeObjectRelease();
  return v18;
}

void sub_23AA07168()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
}

id sub_23AA071A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKLabelNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKLabelNode()
{
  return objc_opt_self();
}

uint64_t sub_23AA0723C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

uint64_t sub_23AA07278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t sub_23AA07280(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AA072B8 + 4 * a6[a1]))(0x65676E6168636E75, 0xE900000000000064);
}

uint64_t sub_23AA072B8()
{
  return 0x6E69686372616573;
}

uint64_t sub_23AA072D0()
{
  return 0x6F4D7463656A626FLL;
}

unint64_t sub_23AA072F0()
{
  return 0xD000000000000014;
}

uint64_t sub_23AA07380()
{
  return 0x7974706D65;
}

void sub_23AA07394()
{
  JUMPOUT(0x23AA073ACLL);
}

uint64_t sub_23AA073B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23AA073F4 + 4 * byte_23AA3A06B[a1]))(0xD000000000000017, 0x800000023AA3B160);
}

uint64_t sub_23AA073F4()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_23AA07500()
{
  return 0x7974706D65;
}

uint64_t sub_23AA07514(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_23AA0764C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_23AA07280);
}

uint64_t sub_23AA07520@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AA0C0B0();
  *a1 = result;
  return result;
}

uint64_t sub_23AA0754C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AA07280(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23AA07574(uint64_t a1, uint64_t a2)
{
  return sub_23AA07738(a1, a2, (void (*)(uint64_t))sub_23AA07280);
}

uint64_t sub_23AA07580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AA077A8(a1, a2, a3, (void (*)(_QWORD))sub_23AA07280);
}

uint64_t sub_23AA0758C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AA077F4(a1, a2, a3, (void (*)(uint64_t))sub_23AA07280);
}

uint64_t sub_23AA07598()
{
  sub_23AA0C184();
  return sub_23AA33080();
}

uint64_t sub_23AA075F4()
{
  sub_23AA0C184();
  return sub_23AA33068();
}

uint64_t sub_23AA07640(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_23AA0764C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_23AA073B8);
}

uint64_t sub_23AA0764C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  if (v7 == a5(v6) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_23AA076D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AA0C0F8();
  *a1 = result;
  return result;
}

uint64_t sub_23AA07704@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AA073B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23AA0772C(uint64_t a1, uint64_t a2)
{
  return sub_23AA07738(a1, a2, (void (*)(uint64_t))sub_23AA073B8);
}

uint64_t sub_23AA07738(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;

  v5 = *v3;
  sub_23AA337D0();
  a3(v5);
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23AA0779C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AA077A8(a1, a2, a3, (void (*)(_QWORD))sub_23AA073B8);
}

uint64_t sub_23AA077A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unsigned __int8 *v4;

  a4(*v4);
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA077E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AA077F4(a1, a2, a3, (void (*)(uint64_t))sub_23AA073B8);
}

uint64_t sub_23AA077F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;

  v6 = *v4;
  sub_23AA337D0();
  a4(v6);
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23AA07854()
{
  sub_23AA0C140();
  return sub_23AA33080();
}

uint64_t sub_23AA078B0()
{
  sub_23AA0C140();
  return sub_23AA33068();
}

NSObject *sub_23AA078FC(uint64_t a1, char *a2)
{
  _BYTE *v2;
  char v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  NSObject *v15;
  objc_super v17;

  v4 = *a2;
  v5 = &v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_constants];
  *(_OWORD *)v5 = xmmword_23AA3A330;
  *((_OWORD *)v5 + 1) = xmmword_23AA3A340;
  *((_QWORD *)v5 + 4) = 6;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_previousInState] = 11;
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState] = 14;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingDelayWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_tryMovingNoBTConnectionWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingWithBTConnectionWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_stillSearchingWithBTConnectionWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionCount] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState] = 10;
  sub_23A963A14(a1, (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable]);
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_experienceType] = v4;
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for FMR1InstructionsController();
  v6 = objc_msgSendSuper2(&v17, sel_init);
  v7 = qword_2569D4AC0;
  v8 = v6;
  if (v7 != -1)
    swift_once();
  v9 = sub_23AA32EA0();
  sub_23A9620E8(v9, (uint64_t)qword_2569E0040);
  v10 = v8;
  v11 = sub_23AA32E88();
  v12 = sub_23AA33218();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = v10;
    sub_23AA333F8();
    *v14 = v10;

    _os_log_impl(&dword_23A95E000, v11, v12, "🧭 FMR1InstrCtrl%@: init", v13, 0xCu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v14, -1, -1);
    MEMORY[0x23B85DB24](v13, -1, -1);
  }
  else
  {

    v11 = v10;
  }

  sub_23A963B3C(a1);
  return v10;
}

id sub_23AA07BC0()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  objc_class *v11;
  uint64_t v13;
  objc_super v14;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0040);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(v2, sel_description);
    v8 = sub_23AA32FD8();
    v10 = v9;

    sub_23A964DBC(v8, v10, &v13);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "🧭 FMR1InstrCtrl%s: deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v11 = (objc_class *)type metadata accessor for FMR1InstructionsController();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

uint64_t sub_23AA07EAC(uint64_t result)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  NSObject *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  NSObject *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  NSObject *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  os_log_type_t type;
  uint64_t v39;
  NSObject *v40;

  v2 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected;
  if (v1[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected] == (result & 1))
    return result;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0040);
  v4 = v1;
  v5 = sub_23AA32E88();
  v6 = sub_23AA33218();
  if (os_log_type_enabled(v5, v6))
  {
    type = v6;
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v40 = v39;
    *(_DWORD *)v7 = 138412802;
    v9 = v4;
    sub_23AA333F8();
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 1024;
    sub_23AA333F8();

    *(_WORD *)(v7 + 18) = 2080;
    v10 = sub_23AA32FFC();
    sub_23A964DBC(v10, v11, (uint64_t *)&v40);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v5, type, "🧭 FMR1InstrCtrl%@: set isBTConnected to %{BOOL}d: outState: %s", (uint8_t *)v7, 0x1Cu);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v39, -1, -1);
    MEMORY[0x23B85DB24](v7, -1, -1);

  }
  else
  {

  }
  if (v1[v2] != 1)
  {
    v14 = v4;
    v15 = sub_23AA32E88();
    v16 = sub_23AA33218();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v40 = v14;
      v19 = v14;
      sub_23AA333F8();
      *v18 = v14;

      _os_log_impl(&dword_23A95E000, v15, v16, "🧭 FMR1InstrCtrl%@: bt connected false don't understand", v17, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v18, -1, -1);
      MEMORY[0x23B85DB24](v17, -1, -1);
    }
    else
    {

      v15 = v14;
    }

    v21 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
    if (sub_23AA073B8(*((_BYTE *)&v14->isa + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState)) != 0xD000000000000019
      || v22 != 0x800000023AA3B1C0)
    {
      v23 = sub_23AA33728();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_20;
      if (sub_23AA073B8(*((_BYTE *)&v14->isa + v21)) != 0xD00000000000001ELL || v34 != 0x800000023AA3B1E0)
      {
        v35 = sub_23AA33728();
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
          goto LABEL_20;
        if (sub_23AA073B8(*((_BYTE *)&v14->isa + v21)) != 0xD000000000000016 || v36 != 0x800000023AA3B200)
        {
          v37 = sub_23AA33728();
          result = swift_bridgeObjectRelease();
          if ((v37 & 1) == 0)
            return result;
          goto LABEL_20;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_20:
    v24 = v14;
    v25 = sub_23AA32E88();
    v26 = sub_23AA33218();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v27 = 138412290;
      v40 = v24;
      v29 = v24;
      sub_23AA333F8();
      *v28 = v24;

      _os_log_impl(&dword_23A95E000, v25, v26, "🧭 FMR1InstrCtrl%@: UPDATINGGGGGG", v27, 0xCu);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v28, -1, -1);
      MEMORY[0x23B85DB24](v27, -1, -1);
    }
    else
    {

      v25 = v24;
    }

    return sub_23AA095D8();
  }
  v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  if (sub_23AA073B8(v4[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState]) == 0xD000000000000017
    && v13 == 0x800000023AA3B160)
  {
    goto LABEL_10;
  }
  v20 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    return sub_23AA0A0A0();
  if (sub_23AA073B8(v4[v12]) == 0xD000000000000017 && v30 == 0x800000023AA3B180)
    goto LABEL_10;
  v31 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    return sub_23AA0A0A0();
  if (sub_23AA073B8(v4[v12]) == 0xD000000000000014 && v32 == 0x800000023AA3B1A0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return sub_23AA0A0A0();
  }
  v33 = sub_23AA33728();
  result = swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
    return sub_23AA0A0A0();
  return result;
}

void sub_23AA08594(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;

  v2 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging;
  if (v1[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging] != (a1 & 1))
  {
    v3 = v1;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = v1;
    v6 = sub_23AA32E88();
    v7 = sub_23AA33218();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412546;
      v9 = v5;
      sub_23AA333F8();
      *v10 = v5;

      *(_WORD *)(v8 + 12) = 1024;
      sub_23AA333F8();

      _os_log_impl(&dword_23A95E000, v6, v7, "🧭 FMR1InstrCtrl%@: set isRanging to %{BOOL}d", (uint8_t *)v8, 0x12u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v10, -1, -1);
      MEMORY[0x23B85DB24](v8, -1, -1);

    }
    else
    {

    }
    if (v3[v2] == 1)
    {
      sub_23AA091D0();
      v5[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState] = 14;
      sub_23AA08EB8(0, 0, 0, 0, 14);
    }
  }
}

uint64_t sub_23AA087BC(unsigned __int8 a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;
  uint64_t v12;
  _BYTE *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *log;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_previousInState] = a1;
  v4 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
  v5 = sub_23AA07280(v2[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState]);
  v7 = v6;
  if (v5 == sub_23AA07280(a1) && v7 == v8)
    return swift_bridgeObjectRelease_n();
  v10 = sub_23AA33728();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v12 = sub_23AA32EA0();
    sub_23A9620E8(v12, (uint64_t)qword_2569E0040);
    v13 = v2;
    v14 = sub_23AA32E88();
    v15 = sub_23AA33218();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v23 = v22;
      *(_DWORD *)v16 = 138412546;
      log = v14;
      v17 = v13;
      sub_23AA333F8();
      *v21 = v13;

      *(_WORD *)(v16 + 12) = 2080;
      v18 = sub_23AA32FFC();
      sub_23A964DBC(v18, v19, &v23);
      sub_23AA333F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, log, v15, "🧭 FMR1InstrCtrl%@: asking state '%s'", (uint8_t *)v16, 0x16u);
      sub_23A964084(&qword_2569D6058);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v21, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v22, -1, -1);
      MEMORY[0x23B85DB24](v16, -1, -1);

    }
    else
    {

    }
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23AA08EB8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t ObjectType;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  if (qword_2569D4AC0 != -1)
    swift_once();
  v10 = sub_23AA32EA0();
  sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
  swift_bridgeObjectRetain_n();
  v11 = v5;
  v12 = sub_23AA32E88();
  v13 = sub_23AA33218();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v29 = v26;
    *(_DWORD *)v14 = 138412802;
    v27 = a4;
    v25 = a5;
    v16 = v11;
    sub_23AA333F8();
    *v15 = v11;

    *(_WORD *)(v14 + 12) = 2080;
    if (a2)
      v17 = a1;
    else
      v17 = 7104878;
    if (a2)
      v18 = a2;
    else
      v18 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_23A964DBC(v17, v18, &v29);
    a5 = v25;
    sub_23AA333F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    v19 = sub_23AA32FFC();
    sub_23A964DBC(v19, v20, &v29);
    sub_23AA333F8();
    a4 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v12, v13, "🧭 FMR1InstrCtrl%@: message=\"%s\", state='%s'", (uint8_t *)v14, 0x20u);
    sub_23A964084(&qword_2569D6058);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v26, -1, -1);
    MEMORY[0x23B85DB24](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v21 = &v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_delegate];
  result = MEMORY[0x23B85DBF0](&v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_delegate]);
  if (result)
  {
    v23 = *((_QWORD *)v21 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v11, a1, a2, a3, a4, a5, ObjectType, v23);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23AA091D0()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    result = swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_stillSearchingWithBTConnectionWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    result = swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingWithBTConnectionWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    result = swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_tryMovingNoBTConnectionWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    result = swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    result = swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingDelayWorkItem))
  {
    swift_retain();
    sub_23AA32F48();
    return swift_release();
  }
  return result;
}

uint64_t sub_23AA092CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = sub_23AA32F30();
  v13[0] = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - v5;
  v7 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23AA091D0();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23AA0C2B8;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC5D70;
  _Block_copy(aBlock);
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v9 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingDelayWorkItem) = v9;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v10 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v4, 1.0);
  v11 = *(void (**)(char *, uint64_t))(v13[0] + 8);
  v11(v4, v1);
  sub_23AA3326C();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v11)(v6, v1);
}

void sub_23AA0951C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (_BYTE *)v2;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging) == 1)
    {
      sub_23AA091D0();
      v3[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState] = 14;
      sub_23AA08EB8(0, 0, 0, 0, 14);
    }
    else if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected) == 1)
    {
      sub_23AA0A0A0();
    }
    else
    {
      *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionCount) = 0;
      sub_23AA095D8();
    }

  }
}

uint64_t sub_23AA095D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (*v12)();
  int v13;
  uint64_t result;
  uint64_t v15;
  int v16;
  void *v17;
  void (*v18)();
  int v19;
  void (*v20)();
  void *v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[3];
  void *v50;
  void (*v51)();
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;

  v1 = v0;
  v2 = sub_23AA32F30();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - v7;
  v44 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA091D0();
  v10 = v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable;
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)aBlock);
  v11 = v50;
  v12 = v51;
  sub_23A96545C(aBlock, (uint64_t)v50);
  (*((void (**)(void **__return_ptr, void *, void (*)()))v12 + 3))(&v53, v11, v12);
  v13 = v56;
  sub_23A980B18(v53, v54, v55, v56);
  sub_23A963B3C((uint64_t)aBlock);
  if (v13 == 1)
    result = sub_23A9E4EB0();
  else
    result = sub_23A9E4FD4(0xD00000000000001FLL, 0x800000023AA41670, 0, 0);
  v16 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_experienceType);
  v47 = v3;
  v48 = v2;
  v45 = result;
  v46 = v15;
  if (v16 == 2)
  {
    sub_23A963A14(v10, (uint64_t)aBlock);
    v17 = v50;
    v18 = v51;
    sub_23A96545C(aBlock, (uint64_t)v50);
    (*((void (**)(void **__return_ptr, void *, void (*)()))v18 + 3))(&v53, v17, v18);
    v19 = v56;
    sub_23A980B18(v53, v54, v55, v56);
    sub_23A963B3C((uint64_t)aBlock);
    sub_23A963A14(v10, (uint64_t)aBlock);
    v21 = v50;
    v20 = v51;
    sub_23A96545C(aBlock, (uint64_t)v50);
    (*((void (**)(void **__return_ptr, void *, void (*)()))v20 + 3))(&v53, v21, v20);
    v22 = v54;
    if (v56)
    {
      if (v56 == 1)
        sub_23A980B18(v53, v54, v55, 1);
      sub_23A963B3C((uint64_t)aBlock);
      v23 = 0x800000023AA416B0;
      v24 = 0xD000000000000015;
    }
    else
    {
      sub_23A963B3C((uint64_t)aBlock);
      v24 = 0xD00000000000001ALL;
      if ((v22 & 1) == 0)
        v24 = 0xD000000000000015;
      v23 = 0x800000023AA416B0;
      if ((v22 & 1) != 0)
        v23 = 0x800000023AA416D0;
    }
    if (v19)
      v31 = 0xD00000000000001BLL;
    else
      v31 = v24;
    if (v19)
      v32 = 0x800000023AA41690;
    else
      v32 = v23;
    sub_23A963A14(v10, (uint64_t)aBlock);
    v42 = sub_23AA0C314(v31, v32, aBlock);
    v30 = v33;
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)aBlock);
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionCount);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionCount) = v27;
    if (v13 == 1)
      v28 = sub_23A9E4EB0();
    else
      v28 = sub_23A9E4FD4(0xD00000000000001BLL, 0x800000023AA41690, 0, 0);
    v42 = v28;
    v30 = v29;
LABEL_25:
    v34 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 0;
    v35 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v51 = sub_23AA0C298;
    v52 = v35;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    v50 = &unk_250BC5D48;
    _Block_copy(aBlock);
    v53 = (void *)MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v36 = sub_23AA32F3C();
    swift_release();
    swift_release();
    *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionWorkItem) = v36;
    swift_retain();
    swift_release();
    sub_23A9731D4();
    v37 = (void *)sub_23AA33290();
    sub_23AA32F24();
    MEMORY[0x23B85CB04](v6, 5.0);
    v38 = *(void (**)(char *, uint64_t))(v47 + 8);
    v39 = v6;
    v40 = v48;
    v38(v39, v48);
    sub_23AA3326C();

    v38(v8, v40);
    sub_23AA08EB8(v42, v30, v45, v46, *(unsigned __int8 *)(v1 + v34));
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA09B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void (*v10)();
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[3];
  void *v33;
  void (*v34)();
  uint64_t v35;
  void *v36[3];
  unsigned __int8 v37;

  v1 = v0;
  v2 = sub_23AA32F30();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v26 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)aBlock);
  v9 = v33;
  v10 = v34;
  sub_23A96545C(aBlock, (uint64_t)v33);
  (*((void (**)(void **__return_ptr, void *, void (*)()))v10 + 3))(v36, v9, v10);
  v11 = v37;
  sub_23A980B18(v36[0], (uint64_t)v36[1], (uint64_t)v36[2], v37);
  sub_23A963B3C((uint64_t)aBlock);
  if (v11 == 1)
  {
    v28 = sub_23A9E4EB0();
    v29 = v12;
    v13 = sub_23A9E4EB0();
  }
  else
  {
    v28 = sub_23A9E4FD4(0xD000000000000017, 0x800000023AA41630, 0, 0);
    v29 = v15;
    v13 = sub_23A9E4FD4(0xD000000000000013, 0x800000023AA41650, 0, 0);
  }
  v26 = v13;
  v27 = v14;
  v16 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 1;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingNoBTConnectionCount) < 6;
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_BYTE *)(v19 + 24) = v17;
  v34 = sub_23AA0C28C;
  v35 = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  v33 = &unk_250BC5D20;
  _Block_copy(aBlock);
  v36[0] = (void *)MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v20 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_tryMovingNoBTConnectionWorkItem) = v20;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v21 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 5.0);
  v22 = *(void (**)(char *, uint64_t))(v30 + 8);
  v23 = v5;
  v24 = v31;
  v22(v23, v31);
  sub_23AA3326C();

  v22(v7, v24);
  sub_23AA08EB8(v26, v27, v28, v29, *(unsigned __int8 *)(v1 + v16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23AA09ED0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x23B85DBF0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if ((a2 & 1) != 0)
      sub_23AA095D8();
    else
      sub_23AA09F30();

  }
}

uint64_t sub_23AA09F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v12[3];
  unsigned __int8 v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  sub_23AA091D0();
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)v14);
  v2 = v15;
  v3 = v16;
  sub_23A96545C(v14, v15);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v3 + 24))(v12, v2, v3);
  v4 = v13;
  sub_23A980B18(v12[0], (uint64_t)v12[1], (uint64_t)v12[2], v13);
  sub_23A963B3C((uint64_t)v14);
  if (v4 == 1)
  {
    v5 = sub_23A9E4EB0();
    v7 = v6;
    v8 = sub_23A9E4EB0();
  }
  else
  {
    v5 = sub_23A9E4FD4(0xD00000000000001ELL, 0x800000023AA415A0, 0, 0);
    v7 = v10;
    v8 = sub_23A9E4FD4(0xD00000000000001ALL, 0x800000023AA415C0, 0, 0);
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 2;
  sub_23AA08EB8(v8, v9, v5, v7, 2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0A0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void (*v10)();
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[3];
  void *v31;
  void (*v32)();
  uint64_t v33;
  void *v34[3];
  unsigned __int8 v35;

  v1 = v0;
  v2 = sub_23AA32F30();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)aBlock);
  v9 = v31;
  v10 = v32;
  sub_23A96545C(aBlock, (uint64_t)v31);
  (*((void (**)(void **__return_ptr, void *, void (*)()))v10 + 3))(v34, v9, v10);
  v11 = v35;
  sub_23A980B18(v34[0], (uint64_t)v34[1], (uint64_t)v34[2], v35);
  sub_23A963B3C((uint64_t)aBlock);
  if (v11 == 1)
    v12 = sub_23A9E4EB0();
  else
    v12 = sub_23A9E4FD4(0xD000000000000021, 0x800000023AA413C0, 0, 0);
  v26 = v12;
  v27 = v13;
  v14 = sub_23A9E4FD4(0xD00000000000001DLL, 0x800000023AA41580, 0, 0);
  v24 = v15;
  v25 = v14;
  v16 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 3;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v32 = sub_23AA0C26C;
  v33 = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  v31 = &unk_250BC5CD0;
  _Block_copy(aBlock);
  v34[0] = (void *)MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v18 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingWithBTConnectionWorkItem) = v18;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v19 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 10.0);
  v20 = *(void (**)(char *, uint64_t))(v28 + 8);
  v21 = v5;
  v22 = v29;
  v20(v21, v29);
  sub_23AA3326C();

  v20(v7, v22);
  sub_23AA08EB8(v25, v24, v26, v27, *(unsigned __int8 *)(v1 + v16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0A40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void (*v10)();
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[3];
  void *v31;
  void (*v32)();
  uint64_t v33;
  void *v34[3];
  unsigned __int8 v35;

  v1 = v0;
  v2 = sub_23AA32F30();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)aBlock);
  v9 = v31;
  v10 = v32;
  sub_23A96545C(aBlock, (uint64_t)v31);
  (*((void (**)(void **__return_ptr, void *, void (*)()))v10 + 3))(v34, v9, v10);
  v11 = v35;
  sub_23A980B18(v34[0], (uint64_t)v34[1], (uint64_t)v34[2], v35);
  sub_23A963B3C((uint64_t)aBlock);
  if (v11 == 1)
    v12 = sub_23A9E4EB0();
  else
    v12 = sub_23A9E4FD4(0xD000000000000027, 0x800000023AA414F0, 0, 0);
  v26 = v12;
  v27 = v13;
  v14 = sub_23A9E4FD4(0xD000000000000023, 0x800000023AA41520, 0, 0);
  v24 = v15;
  v25 = v14;
  v16 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 4;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v32 = sub_23AA0C24C;
  v33 = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  v31 = &unk_250BC5CA8;
  _Block_copy(aBlock);
  v34[0] = (void *)MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v18 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_stillSearchingWithBTConnectionWorkItem) = v18;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v19 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 20.0);
  v20 = *(void (**)(char *, uint64_t))(v28 + 8);
  v21 = v5;
  v22 = v29;
  v20(v21, v29);
  sub_23AA3326C();

  v20(v7, v22);
  sub_23AA08EB8(v25, v24, v26, v27, *(unsigned __int8 *)(v1 + v16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23AA0A778(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x23B85DBF0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    a2();

  }
}

uint64_t sub_23AA0A7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v12[3];
  unsigned __int8 v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  sub_23AA091D0();
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)v14);
  v2 = v15;
  v3 = v16;
  sub_23A96545C(v14, v15);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v3 + 24))(v12, v2, v3);
  v4 = v13;
  sub_23A980B18(v12[0], (uint64_t)v12[1], (uint64_t)v12[2], v13);
  sub_23A963B3C((uint64_t)v14);
  if (v4 == 1)
  {
    v5 = sub_23A9E4EB0();
    v7 = v6;
    v8 = sub_23A9E4EB0();
  }
  else
  {
    v5 = sub_23A9E4FD4(0xD00000000000001FLL, 0x800000023AA41480, 0, 0);
    v7 = v10;
    v8 = sub_23A9E4FD4(0xD00000000000001BLL, 0x800000023AA414A0, 0, 0);
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 5;
  sub_23AA08EB8(v8, v9, v5, v7, 5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0A93C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_23AA32F30();
  v16[0] = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v16 - v7;
  v9 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23AA091D0();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_BYTE *)(v11 + 24) = a1;
  aBlock[4] = sub_23AA0C240;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC5C80;
  _Block_copy(aBlock);
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v12 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_searchingDelayWorkItem) = v12;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v13 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v6, 1.0);
  v14 = *(void (**)(char *, uint64_t))(v16[0] + 8);
  v14(v6, v3);
  sub_23AA3326C();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v14)(v8, v3);
}

uint64_t sub_23AA0ABAC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17[3];
  unsigned __int8 v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  if (result)
  {
    v5 = (_BYTE *)result;
    sub_23A963A14(result + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)v19);
    v6 = v20;
    v7 = v21;
    sub_23A96545C(v19, v20);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v7 + 24))(v17, v6, v7);
    v8 = v18;
    sub_23A980B18(v17[0], (uint64_t)v17[1], (uint64_t)v17[2], v18);
    sub_23A963B3C((uint64_t)v19);
    if (v8 == 1)
      v9 = sub_23A9E4EB0();
    else
      v9 = sub_23A9E4FD4(0xD000000000000021, 0x800000023AA413C0, 0, 0);
    v11 = v9;
    v12 = v10;
    v13 = sub_23A9E4EB0();
    if ((a2 & 1) != 0)
    {
      v15 = v14;
      v16 = 12;
    }
    else
    {
      v15 = v14;
      v16 = 13;
    }
    v5[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState] = v16;
    sub_23AA08EB8(v13, v15, v11, v12, v16);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AA0AD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void (*v10)();
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[3];
  void *v31;
  void (*v32)();
  uint64_t v33;
  void *v34[3];
  unsigned __int8 v35;

  v1 = v0;
  v2 = sub_23AA32F30();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  sub_23A963A14(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_findable, (uint64_t)aBlock);
  v9 = v31;
  v10 = v32;
  sub_23A96545C(aBlock, (uint64_t)v31);
  (*((void (**)(void **__return_ptr, void *, void (*)()))v10 + 3))(v34, v9, v10);
  v11 = v35;
  sub_23A980B18(v34[0], (uint64_t)v34[1], (uint64_t)v34[2], v35);
  sub_23A963B3C((uint64_t)aBlock);
  if (v11 == 1)
  {
    v26 = sub_23A9E4EB0();
    v27 = v12;
    v13 = sub_23A9E4EB0();
  }
  else
  {
    v26 = sub_23A9E4FD4(0xD000000000000024, 0x800000023AA41300, 0, 0);
    v27 = v15;
    v13 = sub_23A9E4FD4(0xD00000000000002CLL, 0x800000023AA41330, 0, 0);
  }
  v24 = v13;
  v25 = v14;
  v16 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 6;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v32 = sub_23AA0C1EC;
  v33 = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  v31 = &unk_250BC5C30;
  _Block_copy(aBlock);
  v34[0] = (void *)MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v18 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem) = v18;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v19 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 5.0);
  v20 = *(void (**)(char *, uint64_t))(v28 + 8);
  v21 = v5;
  v22 = v29;
  v20(v21, v29);
  sub_23AA3326C();

  v20(v7, v22);
  sub_23AA08EB8(v24, v25, v26, v27, *(unsigned __int8 *)(v1 + v16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0B0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23AA32F30();
  v20 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v16 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  v9 = sub_23A9E4FD4(0xD000000000000020, 0x800000023AA412D0, 0, 0);
  v18 = v10;
  v19 = v9;
  v17 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 8;
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23AA0C1EC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC5C08;
  _Block_copy(aBlock);
  v21 = MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v12 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem) = v12;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v13 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 5.0);
  v14 = *(void (**)(char *, uint64_t))(v20 + 8);
  v14(v5, v2);
  sub_23AA3326C();

  v14(v7, v2);
  sub_23AA08EB8(v19, v18, 0, 0, *(unsigned __int8 *)(v1 + v17));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0B380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23AA32F30();
  v20 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v16 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  v9 = sub_23A9E4FD4(0xD000000000000029, 0x800000023AA412A0, 0, 0);
  v18 = v10;
  v19 = v9;
  v17 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 9;
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23AA0C1EC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC5BE0;
  _Block_copy(aBlock);
  v21 = MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v12 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem) = v12;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v13 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 5.0);
  v14 = *(void (**)(char *, uint64_t))(v20 + 8);
  v14(v5, v2);
  sub_23AA3326C();

  v14(v7, v2);
  sub_23AA08EB8(v19, v18, 0, 0, *(unsigned __int8 *)(v1 + v17));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0B63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23AA32F30();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v21 - v6;
  v8 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23AA091D0();
  v9 = sub_23A9E4FD4(0xD00000000000002ELL, 0x800000023AA41230, 0, 0);
  v24 = v10;
  v25 = v9;
  v11 = sub_23A9E4FD4(0xD000000000000036, 0x800000023AA41260, 0, 0);
  v22 = v12;
  v23 = v11;
  v13 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState) = 10;
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23AA0C1EC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC5BB8;
  _Block_copy(aBlock);
  v28 = MEMORY[0x24BEE4AF8];
  sub_23A97324C();
  swift_retain();
  sub_23A964084((uint64_t *)&unk_2569D5D00);
  sub_23A973294();
  sub_23AA3344C();
  sub_23AA32F54();
  swift_allocObject();
  v15 = sub_23AA32F3C();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem) = v15;
  swift_retain();
  swift_release();
  sub_23A9731D4();
  v16 = (void *)sub_23AA33290();
  sub_23AA32F24();
  MEMORY[0x23B85CB04](v5, 5.0);
  v17 = *(void (**)(char *, uint64_t))(v26 + 8);
  v18 = v5;
  v19 = v27;
  v17(v18, v27);
  sub_23AA3326C();

  v17(v7, v19);
  sub_23AA08EB8(v23, v22, v25, v24, *(unsigned __int8 *)(v1 + v13));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA0B92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  _QWORD v20[2];
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23AA32F30();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v20 - v7;
  v9 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState;
  if (sub_23AA073B8(*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_outState)) == 0xD000000000000019
    && v11 == 0x800000023AA3B0F0)
  {
    return swift_bridgeObjectRelease();
  }
  v23 = v3;
  v13 = sub_23AA33728();
  result = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    sub_23AA091D0();
    v14 = sub_23A9E4FD4(0xD000000000000024, 0x800000023AA41200, 0, 0);
    v21 = v15;
    v22 = v14;
    *(_BYTE *)(v0 + v10) = 11;
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_23AA0C1EC;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A9C4DBC;
    aBlock[3] = &unk_250BC5B90;
    v20[1] = _Block_copy(aBlock);
    v24 = MEMORY[0x24BEE4AF8];
    sub_23A97324C();
    swift_retain();
    sub_23A964084((uint64_t *)&unk_2569D5D00);
    sub_23A973294();
    sub_23AA3344C();
    sub_23AA32F54();
    swift_allocObject();
    v17 = sub_23AA32F3C();
    swift_release();
    swift_release();
    *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_autoDismissWorkItem) = v17;
    swift_retain();
    swift_release();
    sub_23A9731D4();
    v18 = (void *)sub_23AA33290();
    sub_23AA32F24();
    MEMORY[0x23B85CB04](v6, 5.0);
    v19 = *(void (**)(char *, uint64_t))(v23 + 8);
    v19(v6, v2);
    sub_23AA3326C();

    v19(v8, v2);
    sub_23AA08EB8(v22, v21, 0, 0, *(unsigned __int8 *)(v1 + v10));
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23AA0BC64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (_BYTE *)v2;
    v4 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState);
    v3[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState] = 3;
    sub_23AA087BC(v4);

  }
  swift_beginAccess();
  v5 = MEMORY[0x23B85DBF0](v1);
  if (v5)
  {
    v6 = (_BYTE *)v5;
    v7 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState);
    v6[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState] = 1;
    sub_23AA087BC(v7);

  }
}

uint64_t type metadata accessor for FMR1InstructionsController()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for FMR1InstructionsOutState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMR1InstructionsOutState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_23AA0BE34 + 4 * byte_23AA3A08A[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_23AA0BE68 + 4 * byte_23AA3A085[v4]))();
}

uint64_t sub_23AA0BE68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA0BE70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA0BE78);
  return result;
}

uint64_t sub_23AA0BE84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA0BE8CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_23AA0BE90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA0BE98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMR1InstructionsOutState()
{
  return &type metadata for FMR1InstructionsOutState;
}

uint64_t getEnumTagSinglePayload for FMR1InstructionsInState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMR1InstructionsInState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_23AA0BF90 + 4 * byte_23AA3A094[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_23AA0BFC4 + 4 * byte_23AA3A08F[v4]))();
}

uint64_t sub_23AA0BFC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA0BFCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA0BFD4);
  return result;
}

uint64_t sub_23AA0BFE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA0BFE8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_23AA0BFEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA0BFF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMR1InstructionsInState()
{
  return &type metadata for FMR1InstructionsInState;
}

ValueMetadata *type metadata accessor for FMR1InstructionsConstants()
{
  return &type metadata for FMR1InstructionsConstants;
}

unint64_t sub_23AA0C024()
{
  unint64_t result;

  result = qword_2569D84D0;
  if (!qword_2569D84D0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3A214, &type metadata for FMR1InstructionsInState);
    atomic_store(result, (unint64_t *)&qword_2569D84D0);
  }
  return result;
}

unint64_t sub_23AA0C06C()
{
  unint64_t result;

  result = qword_2569D84D8;
  if (!qword_2569D84D8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3A304, &type metadata for FMR1InstructionsOutState);
    atomic_store(result, (unint64_t *)&qword_2569D84D8);
  }
  return result;
}

uint64_t sub_23AA0C0B0()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_23AA0C0F8()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF)
    return 15;
  else
    return v0;
}

unint64_t sub_23AA0C140()
{
  unint64_t result;

  result = qword_2569D84E0;
  if (!qword_2569D84E0)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3A2CC, &type metadata for FMR1InstructionsOutState);
    atomic_store(result, (unint64_t *)&qword_2569D84E0);
  }
  return result;
}

unint64_t sub_23AA0C184()
{
  unint64_t result;

  result = qword_2569D84E8;
  if (!qword_2569D84E8)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3A1DC, &type metadata for FMR1InstructionsInState);
    atomic_store(result, (unint64_t *)&qword_2569D84E8);
  }
  return result;
}

uint64_t sub_23AA0C1C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23AA0C1EC()
{
  uint64_t v0;

  sub_23AA0BC64(v0);
}

uint64_t sub_23AA0C204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA0C214()
{
  return swift_release();
}

uint64_t sub_23AA0C21C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AA0C240()
{
  uint64_t v0;

  return sub_23AA0ABAC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_23AA0C24C()
{
  uint64_t v0;

  sub_23AA0A778(v0, (void (*)(void))sub_23AA0A7CC);
}

void sub_23AA0C26C()
{
  uint64_t v0;

  sub_23AA0A778(v0, (void (*)(void))sub_23AA0A40C);
}

void sub_23AA0C28C()
{
  uint64_t v0;

  sub_23AA09ED0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_23AA0C298()
{
  uint64_t v0;

  sub_23AA0A778(v0, (void (*)(void))sub_23AA09B18);
}

void sub_23AA0C2B8()
{
  uint64_t v0;

  sub_23AA0951C(v0);
}

uint64_t sub_23AA0C314(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  unint64_t v24;
  char v25;

  v5 = a3[3];
  v6 = a3[4];
  sub_23A96545C(a3, v5);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v6 + 24))(&v23, v5, v6);
  if (v25)
  {
    if (v25 == 1)
    {

      swift_bridgeObjectRelease();
    }
    sub_23A964084((uint64_t *)&unk_2569D5B30);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_23AA35F90;
    swift_bridgeObjectRetain();
    sub_23AA33038();
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    v8 = 1;
  }
  else
  {
    sub_23A964084((uint64_t *)&unk_2569D5B30);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_23AA36190;
    swift_bridgeObjectRetain();
    sub_23AA33038();
    sub_23AA33710();
    sub_23AA33038();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_23AA33038();
    *(_QWORD *)(v7 + 48) = a1;
    *(_QWORD *)(v7 + 56) = a2;
    v8 = *(_QWORD *)(v7 + 16);
    if (!v8)
      goto LABEL_17;
  }
  v20 = a1;
  v21 = a2;
  type metadata accessor for FMFindingUILocalizer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  v10 = (uint64_t *)(v7 + 40);
  do
  {
    v12 = *(v10 - 1);
    v11 = *v10;
    swift_bridgeObjectRetain();
    v13 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_23AA33500();
    swift_bridgeObjectRelease();
    v23 = (id)0xD000000000000019;
    v24 = 0x800000023AA3F2B0;
    sub_23AA33038();
    v14 = sub_23AA32CCC();
    v16 = v15;

    swift_bridgeObjectRelease();
    if (v14 == v12 && v16 == v11)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = sub_23AA33728();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    v10 += 2;
    swift_bridgeObjectRelease();
    --v8;
  }
  while (v8);
  a1 = v20;
  a2 = v21;
LABEL_17:
  swift_bridgeObjectRelease();
  return sub_23A9E4FD4(a1, a2, 0, 0);
}

void sub_23AA0C658(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  char v6;
  double v7;
  double v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char *v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  double v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double *v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double *v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  double v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  double v80;
  double v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;

  v3 = v2;
  v5 = *(double *)&a1;
  v6 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_bearing + 8);
  if ((v6 & 1) != 0)
  {
    v7 = 0.0;
    v8 = 0.0;
    v9 = 1;
    v10 = 1;
  }
  else
  {
    v8 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing);
    v10 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing + 8);
    if ((v10 & 1) == 0)
      v8 = v8 / 180.0 * 3.14159265;
    v7 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing + 8) & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      v9 = 0;
      v7 = v7 / 180.0 * 3.14159265;
    }
  }
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor);
  v12 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout);
  v14 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout + 8);
  if ((a2 & 1) == 0)
  {
    v86 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout + 8);
    v87 = v10;
    v84 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout);
    v85 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor);
    v82 = v9;
    v83 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyConformedToExplodedFactor) != 1)
      goto LABEL_23;
    v16 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactorSpring;
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactorSpring);
    if (sub_23A9CCAA0())
      goto LABEL_23;
    sub_23A982B4C(v5);
    *(_BYTE *)(v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    v18 = *(_QWORD *)(v3 + v16);
    v19 = (double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    v20 = *v19 + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v19[35] + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v20) <= *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
      v20 = v19[35] + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v21 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor;
    *(double *)v21 = v20;
    *(_BYTE *)(v21 + 8) = 0;
    v22 = (unint64_t *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
    swift_beginAccess();
    v23 = *v22;
    v80 = v8;
    v81 = v5;
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v24 = sub_23AA335C0();
      if (v24)
        goto LABEL_15;
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v24)
      {
LABEL_15:
        if (v24 < 1)
        {
LABEL_79:
          __break(1u);
          return;
        }
        v25 = 0;
        v26 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformedToExplodedFactor;
        do
        {
          if ((v23 & 0xC000000000000001) != 0)
            v27 = (char *)MEMORY[0x23B85D0B0](v25, v23);
          else
            v27 = (char *)*(id *)(v23 + 8 * v25 + 32);
          v28 = *(_BYTE *)(v26 + 8);
          v29 = &v27[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor];
          *(_QWORD *)v29 = *(_QWORD *)v26;
          v29[8] = v28;

          ++v25;
        }
        while (v24 != v25);
      }
    }
    swift_bridgeObjectRelease_n();
    v8 = v80;
    v5 = v81;
LABEL_23:
    v30 = v7;
    v31 = v5;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyConformationFactor) == 1)
    {
      v32 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactorSpring;
      v33 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactorSpring);
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(*(double *)&a1);
        *(_BYTE *)(v33 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v34 = *(_QWORD *)(v3 + v32);
        v35 = (double *)(v34 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v36 = *v35 + *(double *)(v34 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v35[35] + *(double *)(v34 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v36) <= *(double *)(v34 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v36 = v35[35] + *(double *)(v34 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        sub_23AA0D058(1, v36);
      }
    }
    v37 = (_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyBearing);
    if (!(v6 & 1 | ((*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyBearing) & 1) == 0)))
    {
      v38 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_energeticAngleSpring;
      v39 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_energeticAngleSpring);
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(*(double *)&a1);
        *(_BYTE *)(v39 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v40 = *(_QWORD *)(v3 + v38);
        v41 = (double *)(v40 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v87 = 0;
        v42 = *v41 + *(double *)(v40 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v41[35] + *(double *)(v40 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v42) <= *(double *)(v40 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v42 = v41[35] + *(double *)(v40 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        v8 = v42;
      }
    }
    if (v6 & 1 | ((*v37 & 1) == 0))
    {
      v9 = v82;
      v5 = v31;
      v7 = v30;
    }
    else
    {
      v43 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lethargicAngleSpring;
      v44 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lethargicAngleSpring);
      v9 = v82;
      v5 = v31;
      v7 = v30;
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(*(double *)&a1);
        *(_BYTE *)(v44 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v45 = *(_QWORD *)(v3 + v43);
        v46 = (double *)(v45 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v9 = 0;
        v47 = *v46 + *(double *)(v45 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v46[35] + *(double *)(v45 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v47) <= *(double *)(v45 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v47 = v46[35] + *(double *)(v45 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        v7 = v47;
      }
    }
    v12 = v83;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyCenterFactor) == 1)
    {
      v48 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactorSpring;
      v49 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactorSpring);
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(*(double *)&a1);
        *(_BYTE *)(v49 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v50 = *(_QWORD *)(v3 + v48);
        v51 = (double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v12 = 0;
        v52 = *v51 + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v51[35] + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v52) <= *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v52 = v51[35] + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        v85 = *(_QWORD *)&v52;
      }
    }
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldLookout) == 1)
    {
      v53 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookoutSpring;
      v54 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_lookoutSpring);
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(*(double *)&a1);
        *(_BYTE *)(v54 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v55 = *(_QWORD *)(v3 + v53);
        v56 = (double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v86 = 0;
        v57 = *v56 + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v56[35] + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v57) <= *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v57 = v56[35] + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        v84 = *(_QWORD *)&v57;
      }
    }
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldLabelsOpacity) == 1)
    {
      v58 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsOpacitySpring;
      v59 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsOpacitySpring);
      if (!sub_23A9CCAA0())
      {
        sub_23A982B4C(*(double *)&a1);
        *(_BYTE *)(v59 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
        v60 = *(_QWORD *)(v3 + v58);
        v61 = (double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
        swift_beginAccess();
        v62 = *v61 + *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
        if (vabdd_f64(v61[35] + *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v62) <= *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
          v62 = v61[35] + *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        v63 = v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLabelsOpacity;
        *(double *)v63 = v62;
        *(_BYTE *)(v63 + 8) = 0;
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsNode), sel_setAlpha_);
      }
    }
    v64 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackSpring;
    v65 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackSpring);
    if (!sub_23A9CCAA0())
    {
      sub_23A982B4C(*(double *)&a1);
      *(_BYTE *)(v65 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      v66 = *(_QWORD *)(v3 + v64);
      v67 = (double *)(v66 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      v68 = *v67 + *(double *)(v66 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v67[35] + *(double *)(v66 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v68) <= *(double *)(v66 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
        v68 = v67[35] + *(double *)(v66 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      sub_23AA0EF48(v68);
    }
    v14 = v86;
    v10 = v87;
    v13 = v84;
    v11 = v85;
  }
  sub_23AA0DE18(*(uint64_t *)&v8, v10, *(uint64_t *)&v7, v9, v11, v12, v13, v14);
  v69 = (uint64_t *)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v70 = *v69;
  if ((unint64_t)*v69 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v71 = sub_23AA335C0();
    if (v71)
      goto LABEL_61;
  }
  else
  {
    v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v71)
    {
LABEL_61:
      if (v71 >= 1)
      {
        v72 = 0;
        while (1)
        {
          if ((v70 & 0xC000000000000001) != 0)
          {
            v73 = (id)MEMORY[0x23B85D0B0](v72, v70);
            if ((a2 & 1) == 0)
              goto LABEL_68;
          }
          else
          {
            v73 = *(id *)(v70 + 8 * v72 + 32);
            if ((a2 & 1) == 0)
LABEL_68:
              sub_23A9F11D0(v5);
          }

          if (v71 == ++v72)
            goto LABEL_70;
        }
      }
      __break(1u);
      goto LABEL_79;
    }
  }
LABEL_70:
  swift_bridgeObjectRelease_n();
  if ((a2 & 1) == 0)
  {
    v74 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode);
    if (v74)
    {
      v75 = v74;
      sub_23A9E5404(v5);

    }
    v76 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode);
    if (v76)
    {
      v77 = v76;
      sub_23A9E5404(v5);

    }
    v78 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_ringView);
    if (v78)
    {
      v79 = v78;
      sub_23A9B8908(v5);

    }
  }
  sub_23AA0D544();
}

void sub_23AA0D058(char a1, double a2)
{
  uint64_t v2;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char *v13;
  _BYTE *v14;
  double *v15;
  double *v16;
  uint64_t v17;
  double *v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  double v40;
  int64x2_t v41;

  v4 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 184);
  v5 = (a2 - v4) / (1.0 - v4);
  if (v5 < 0.0)
    v6 = 0.0;
  else
    v6 = v5;
  v7 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor;
  *(double *)v7 = a2;
  *(_BYTE *)(v7 + 8) = 0;
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v9 = *v8;
  if (!((unint64_t)*v8 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10)
      goto LABEL_6;
LABEL_35:
    swift_bridgeObjectRelease_n();
    sub_23AA0D544();
    return;
  }
  swift_bridgeObjectRetain_n();
  v10 = sub_23AA335C0();
  if (!v10)
    goto LABEL_35;
LABEL_6:
  if (v10 >= 1)
  {
    v11 = 0;
    v12 = fmin(a2 / v4, 1.0);
    v41 = vdupq_n_s64(0x4341C37937E08000uLL);
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (char *)MEMORY[0x23B85D0B0](v11, v9);
      else
        v13 = (char *)*(id *)(v9 + 8 * v11 + 32);
      v14 = v13;
      v15 = (double *)&v13[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
      *v15 = v12;
      *((_BYTE *)v15 + 8) = 0;
      sub_23A9F0D4C(v12);
      v16 = (double *)&v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor];
      *v16 = v6;
      *((_BYTE *)v16 + 8) = 0;
      sub_23A9F0FCC(v6);
      v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring];
      if (!v17
        || (v18 = (double *)&v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style],
            (v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 168] & 1) != 0)
        || ((_BYTE)v18[19] & 1) != 0
        || ((_BYTE)v18[23] & 1) != 0)
      {
        v19 = &v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
        *(_QWORD *)v19 = 0x3FF0000000000000;
        v19[8] = 0;
      }
      else
      {
        v20 = v18[20];
        if (v20 <= a2)
        {
          v24 = (v18[22] - a2) / (v18[22] - v20);
          v25 = 1.0 - v24;
          if (v24 >= 1.0)
            v25 = 0.0;
          if (v24 < 0.0)
            v23 = 1.0;
          else
            v23 = v25;
        }
        else
        {
          v21 = (a2 - v18[18]) / (v20 - v18[18]);
          v22 = 1.0 - v21;
          if (v21 < 0.0)
            v22 = 1.0;
          if (v21 >= 1.0)
            v23 = 0.0;
          else
            v23 = v22;
        }
        v26 = (double *)&v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
        *v26 = v23;
        *((_BYTE *)v26 + 8) = 0;
        if ((a1 & 1) != 0
          && (v27 = v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
              swift_beginAccess(),
              v28 = *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40),
              *(double *)(v27 + 280) + v28 != 1.79769313e308))
        {
          v39 = v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
          *(double *)v39 = v23;
          *(_BYTE *)(v39 + 8) = 0;
          v40 = v23 - v28;
          *(double *)(v27 + 280) = v40;
          *(double *)(v27 + 240) = v40;
          *(_QWORD *)(v27 + 248) = 0;
        }
        else
        {
          v29 = *(_QWORD *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
          v30 = *(_QWORD *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
          v31 = v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
          swift_beginAccess();
          *(double *)v31 = v23;
          *(_QWORD *)(v31 + 8) = 0;
          *(_QWORD *)(v31 + 16) = v29;
          *(_OWORD *)(v31 + 24) = xmmword_23AA36E50;
          *(_OWORD *)(v31 + 40) = xmmword_23AA36E60;
          *(_QWORD *)(v31 + 56) = v29;
          *(_QWORD *)(v31 + 64) = 0;
          *(_QWORD *)(v31 + 72) = 0;
          *(int64x2_t *)(v31 + 80) = v41;
          *(_OWORD *)(v31 + 96) = 0u;
          *(_OWORD *)(v31 + 112) = 0u;
          *(_QWORD *)(v31 + 128) = v30;
          *(_OWORD *)(v31 + 136) = xmmword_23AA36E50;
          *(_OWORD *)(v31 + 152) = xmmword_23AA36E60;
          *(_QWORD *)(v31 + 168) = v30;
          *(_QWORD *)(v31 + 176) = 0;
          *(_QWORD *)(v31 + 184) = 0;
          *(_OWORD *)(v31 + 208) = 0u;
          *(_OWORD *)(v31 + 224) = 0u;
          *(int64x2_t *)(v31 + 192) = v41;
          *(double *)(v31 + 240) = v23;
          *(_OWORD *)(v31 + 248) = xmmword_23AA36E50;
          *(_QWORD *)(v31 + 264) = 0x4063BD3CC9BE45DELL;
          *(_QWORD *)(v31 + 272) = 0x403921FB54442D18;
          *(double *)(v31 + 280) = v23;
          *(_QWORD *)(v31 + 288) = 0;
          *(_QWORD *)(v31 + 296) = 0;
          *(int64x2_t *)(v31 + 304) = v41;
          *(_OWORD *)(v31 + 320) = 0u;
          *(_OWORD *)(v31 + 336) = 0u;
          v32 = *(_QWORD *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
          *(_QWORD *)(v31 + 352) = v32;
          v33 = *(_QWORD *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
          *(_QWORD *)(v31 + 360) = v33;
          v34 = 6.28318531
              / *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
              * (6.28318531
               / *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
          v35 = sqrt(v34);
          v36 = *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v35 + v35);
          v37 = v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
          *(_QWORD *)v37 = 0;
          *(_QWORD *)(v37 + 8) = 0;
          *(_QWORD *)(v37 + 16) = 0x3FF0000000000000;
          *(double *)(v37 + 24) = v34;
          *(double *)(v37 + 32) = v36;
          *(_QWORD *)(v37 + 40) = 0;
          *(int64x2_t *)(v37 + 64) = v41;
          *(_OWORD *)(v37 + 80) = 0u;
          *(_OWORD *)(v37 + 96) = 0u;
          *(_QWORD *)(v37 + 48) = v32;
          *(_QWORD *)(v37 + 56) = v33;
          *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = v23;
          *(_QWORD *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
          *(_BYTE *)(v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
          v38 = (double *)&v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
          *v38 = v23;
          *((_BYTE *)v38 + 8) = 0;
        }
      }

      ++v11;
    }
    while (v10 != v11);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_23AA0D544()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  BOOL v6;
  double v7;
  uint64_t *v8;
  double v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  _BYTE *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  double v22;
  int v23;
  _BOOL4 v25;
  double v27;
  double *v28;
  BOOL v29;
  double v30;
  uint64_t v31;
  double v32;
  char v33;
  unint64_t *v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  BOOL v41;
  double v42;
  _BOOL8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = v0;
  v3 = v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor;
  v4 = 0.0;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor + 8))
    v5 = 0.0;
  else
    v5 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor);
  v6 = v5 > 0.0;
  *(_QWORD *)&v7 = v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor;
  v8 = &OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor + 8) & 1) != 0)
    goto LABEL_21;
  v9 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 184);
  if (**(double **)&v7 - v9 >= 0.0)
    v4 = **(double **)&v7 - v9;
  if (*(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 200) <= v4
                                                                                       / (1.0 - **(double **)&v7 - v9)
    || (*(_BYTE *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8) & 1) != 0
    || *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor) >= 0.0)
  {
    v6 = 1;
  }
  v10 = (unint64_t *)(v0 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v11 = *v10;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v12 = sub_23AA335C0();
    if (v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v12)
    {
LABEL_13:
      if (v12 < 1)
        goto LABEL_85;
      for (i = 0; i != v12; ++i)
      {
        if ((v11 & 0xC000000000000001) != 0)
          v14 = (_BYTE *)MEMORY[0x23B85D0B0](i, v11);
        else
          v14 = *(id *)(v11 + 8 * i + 32);
        v14[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceScatterOffset] = v5 <= 0.0;

      }
    }
  }
  swift_bridgeObjectRelease_n();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyCenterFactor) = v6;
  v8 = &OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes;
LABEL_21:
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_shouldApplyBearing) = 1;
  if ((*(_BYTE *)(*(_QWORD *)&v7 + 8) & 1) != 0)
    goto LABEL_25;
  v15 = **(double **)&v7;
  if (**(double **)&v7 <= 0.0)
  {
    v19 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
    if (!MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate, v15))
      goto LABEL_53;
    v20 = *(_QWORD *)(v19 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v20 + 40))(ObjectType, v20);
    goto LABEL_30;
  }
  if ((*(_BYTE *)(v3 + 8) & 1) != 0)
  {
LABEL_25:
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8) & 1) == 0
      && *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor) >= 1.0)
    {
LABEL_26:
      v16 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
      if (!MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
        goto LABEL_53;
      v17 = *(_QWORD *)(v16 + 8);
      v18 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v17 + 56))(v18, v17);
LABEL_30:
      swift_unknownObjectRelease();
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v15 < 1.0
    || *(double *)v3 > 0.0
    || (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8) & 1) == 0
    && *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor) >= 1.0)
  {
    v22 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor);
    v23 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8);
    if (v23 == 1 || v22 < 1.0)
    {
      if ((*(_BYTE *)(v3 + 8) & 1) != 0)
        goto LABEL_52;
    }
    else if ((*(_BYTE *)(v3 + 8) & 1) != 0 || v15 < 1.0 || *(double *)v3 > 0.0)
    {
      goto LABEL_26;
    }
    v25 = v15 < 1.0;
    if (*(double *)v3 > 0.0)
      v25 = 1;
    if ((v23 | v25) != 1 && v22 >= 1.0)
    {
      v47 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
      if (!MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
        goto LABEL_83;
      v48 = *(_QWORD *)(v47 + 8);
      v49 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v48 + 64))(v49, v48);
      goto LABEL_82;
    }
LABEL_52:
    *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_needsRecomputeVisibleFragments) = 0;
    goto LABEL_53;
  }
  v44 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
  if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
  {
    v45 = *(_QWORD *)(v44 + 8);
    v46 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v45 + 48))(v46, v45);
LABEL_82:
    swift_unknownObjectRelease();
  }
LABEL_83:
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_needsRecomputeVisibleFragments) = 1;
LABEL_53:
  v27 = 0.0;
  if ((*(_BYTE *)(*(_QWORD *)&v7 + 8) & 1) == 0)
  {
    v28 = (double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor + 8) & 1) == 0
      && *v28 >= 0.0)
    {
      v29 = v5 <= 0.0
         || *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_derivativeCenterFactor) == -1;
      v27 = **(double **)&v7 * *v28;
      if (v29)
        v27 = 0.0;
    }
  }
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode), sel_setAlpha_, 1.0 - v27);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_needsRecomputeVisibleFragments) == 1)
  {
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode), sel_position);
    *(double *)&v31 = COERCE_DOUBLE(sub_23A9F4D3C(-v30));
    if ((v33 & 1) == 0)
    {
      v1 = *(double *)&v31;
      v7 = v32;
      v34 = (unint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
      swift_beginAccess();
      v11 = *v34;
      if (v11 >> 62)
        goto LABEL_86;
      v35 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      for (; v35; v35 = sub_23AA335C0())
      {
        v3 = v11 & 0xC000000000000001;
        v36 = v1 + 1.0;
        v37 = v7 + -1.0;
        v38 = 4;
        v39 = 0;
        if ((v11 & 0xC000000000000001) != 0)
        {
LABEL_67:
          v40 = COERCE_DOUBLE(MEMORY[0x23B85D0B0](v39, v11));
          goto LABEL_69;
        }
        while (1)
        {
          *(_QWORD *)&v40 = *(id *)(v11 + 8 * v38);
LABEL_69:
          v1 = v40;
          v41 = __OFADD__(v39, 1);
          *(_QWORD *)&v7 = v39 + 1;
          if (v41)
            break;
          if ((*(_BYTE *)(*(_QWORD *)&v40
                         + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition
                         + 16) & 1) == 0)
          {
            v42 = *(double *)(*(_QWORD *)&v40
                            + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition
                            + 8);
            v43 = v37 > v42 || v42 > v36;
            objc_msgSend(*(id *)&v40, sel_setHidden_, v43);
          }

          if (*(_QWORD *)&v7 == v35)
            goto LABEL_87;
          v39 = ++v38 - 4;
          if (v3)
            goto LABEL_67;
        }
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        swift_bridgeObjectRetain_n();
      }
LABEL_87:
      swift_bridgeObjectRelease_n();
    }
  }
  v50 = (unint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v51 = *v50;
  if (*v50 >> 62)
    goto LABEL_102;
  v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v52)
  {
LABEL_103:
    v8 = 0;
    v3 = 0;
LABEL_104:
    swift_bridgeObjectRelease_n();
    v7 = *(double *)&OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_allFragmentsAreOrbiting;
    v55 = *v50;
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_allFragmentsAreOrbiting) & 1) == 0)
    {
      if (v55 >> 62)
        goto LABEL_111;
      if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10) == v3)
        goto LABEL_107;
LABEL_112:
      if (*(_BYTE *)(v2 + *(_QWORD *)&v7) != 1)
        goto LABEL_121;
      v55 = *v50;
    }
    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      v65 = sub_23AA335C0();
      swift_bridgeObjectRelease();
      if ((uint64_t *)v65 == v8)
        goto LABEL_116;
    }
    else if (*(uint64_t **)((v55 & 0xFFFFFFFFFFFFF8) + 0x10) == v8)
    {
LABEL_116:
      *(_BYTE *)(v2 + *(_QWORD *)&v7) = 0;
      v61 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
      if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
      {
        v62 = *(_QWORD *)(v61 + 8);
        v63 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
        swift_unknownObjectRelease();
      }
      if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track + 8) & 1) == 0)
      {
        v64 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackSpring);
        sub_23A9829AC(*(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track));
        *(_BYTE *)(v64 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      }
      return;
    }
LABEL_121:
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackDidChange) == 1
      && (*(_BYTE *)(v2 + *(_QWORD *)&v7) & 1) == 0
      && (*(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track + 8) & 1) == 0)
    {
      v66 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_track);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackDidChange) = 0;
      v67 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackSpring)
          + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(_QWORD *)v67 = v66;
      *(_BYTE *)(v67 + 8) = 0;
      sub_23A9CC9DC();
    }
    return;
  }
LABEL_90:
  if (v52 >= 1)
  {
    v7 = 0.0;
    v8 = 0;
    v3 = 0;
    while (1)
    {
      if ((v51 & 0xC000000000000001) != 0)
        v53 = (char *)MEMORY[0x23B85D0B0](*(_QWORD *)&v7, v51);
      else
        v53 = (char *)*(id *)(v51 + 8 * *(_QWORD *)&v7 + 32);
      v54 = *(_QWORD *)&v53[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction];

      if (v54)
      {
        v41 = __OFADD__(v3++, 1);
        if (v41)
        {
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          swift_bridgeObjectRetain_n();
          v52 = sub_23AA335C0();
          if (!v52)
            goto LABEL_103;
          goto LABEL_90;
        }
      }
      else
      {
        v41 = __OFADD__(v8, 1);
        v8 = (uint64_t *)((char *)v8 + 1);
        if (v41)
          goto LABEL_101;
      }
      if (v52 == ++*(_QWORD *)&v7)
        goto LABEL_104;
    }
  }
  __break(1u);
LABEL_111:
  swift_bridgeObjectRetain();
  v60 = sub_23AA335C0();
  swift_bridgeObjectRelease();
  if (v60 != v3)
    goto LABEL_112;
LABEL_107:
  *(_BYTE *)(v2 + *(_QWORD *)&v7) = 1;
  v56 = v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
  if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
  {
    v57 = *(_QWORD *)(v56 + 8);
    v58 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v57);
    swift_unknownObjectRelease();
  }
  v59 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_trackSpring);
  sub_23A9829AC(0.5);
  *(_BYTE *)(v59 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
  sub_23AA0EF48(0.5);
}

void sub_23AA0DE18(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v17;
  uint64_t v18;
  double v19;
  void *v20;
  char *v21;
  id v22;
  unsigned int v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  long double v30;
  double v31;
  double v32;
  char v33;
  double *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  long double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double *v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  double v56;
  double v57;
  double v58;
  char *v59;
  uint64_t v60;
  char *v61;
  double *v62;
  uint64_t v63;
  double *v64;
  uint64_t v65;
  char *v66;
  double v67;
  double v68;
  int v69;
  double v70;
  double v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t ObjectType;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double *v88;
  uint64_t v89;
  double *v90;
  double v91;
  double *v92;
  uint64_t v93;
  double *v94;
  double v95;
  double v96;
  uint64_t v97;
  void *v98;
  id v99;
  double v100;
  void *v101;
  id v102;
  char v103;
  double v104;
  char *v105;
  uint64_t v106;
  _BOOL4 v107;
  double v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  uint64_t v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double *v126;
  uint64_t v127;
  double *v128;
  double v129;
  double *v130;
  uint64_t v131;
  double *v132;
  double v133;
  double *v134;
  uint64_t v135;
  double *v136;
  double v137;
  double *v138;
  uint64_t v139;
  double *v140;
  _BYTE *v141;
  BOOL v142;
  BOOL v143;
  id v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  id v149;
  void *v150;
  void *v151;
  id v152;
  char v153;
  id v154;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  double v165;
  BOOL v166;
  double v167;
  uint64_t v168;
  double v169;
  double v170;
  unint64_t v171;
  double v172;
  double v173;
  double v174;
  double v176;
  _BYTE *v177;

  v9 = v8;
  v10 = *(void **)(v8 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNode);
  if (v10)
  {
    v11 = *(void **)(v8 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pointeeNode);
    if (v11)
    {
      if ((*(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor + 8) & 1) == 0)
      {
        v17 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformationFactor);
        v18 = v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedCenterFactor;
        *(double *)v18 = *(double *)&a5;
        *(_BYTE *)(v18 + 8) = a6 & 1;
        if ((a6 & 1) != 0)
          v19 = 0.0;
        else
          v19 = *(double *)&a5;
        v20 = (void *)objc_opt_self();
        v177 = v10;
        v21 = v11;
        v22 = objc_msgSend(v20, sel_standardUserDefaults);
        v23 = objc_msgSend(v22, sel_fmpfDebugMode);

        v24 = 1.0;
        if (!v23)
          v24 = 0.0;
        objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_canvasPatternSpinesNode), sel_setAlpha_, v24);
        v25 = *(void **)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode);
        if ((a4 & 1) != 0)
          objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode), sel_zRotation);
        else
          v26 = *(double *)&a3;
        objc_msgSend(v25, sel_setZRotation_, v26);
        v27 = *(double *)&a1;
        if ((a2 & 1) == 0)
          v27 = *(double *)&a1 / 3.14159265 * 180.0;
        v28 = v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedEnergeticBearing;
        *(double *)v28 = v27;
        *(_BYTE *)(v28 + 8) = a2 & 1;
        v166 = (a2 & 1) == 0;
        if ((a4 & 1) == 0)
          *(double *)&a3 = *(double *)&a3 / 3.14159265 * 180.0;
        v29 = v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLethargicBearing;
        *(double *)v29 = *(double *)&a3;
        *(_BYTE *)(v29 + 8) = a4 & 1;
        objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode], sel_zRotation);
        v31 = fmod(v30, 6.28318531);
        if (v31 <= 3.14159265)
        {
          if (v31 < -3.14159265)
            v31 = v31 + 6.28318531;
        }
        else
        {
          v31 = v31 + -6.28318531;
        }
        v32 = fmod(v31, 6.28318531);
        if (v32 <= 3.14159265)
        {
          v33 = a8;
          if (v32 < -3.14159265)
            v32 = v32 + 6.28318531;
        }
        else
        {
          v32 = v32 + -6.28318531;
          v33 = a8;
        }
        if ((a2 & 1) == 0)
          v32 = *(double *)&a1;
        v34 = (double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style);
        v35 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 112);
        v36 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 120);
        v37 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 96);
        v38 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 104);
        v160 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 144);
        v39 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 128);
        v159 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_style + 136);
        v40 = v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedLookout;
        *(double *)v40 = *(double *)&a7;
        *(_BYTE *)(v40 + 8) = v33 & 1;
        v41 = remainder(v32, 6.28318531);
        v42 = fmod(v41, 6.28318531);
        if (v42 <= 3.14159265)
        {
          if (v42 < -3.14159265)
            v42 = v42 + 6.28318531;
        }
        else
        {
          v42 = v42 + -6.28318531;
        }
        v176 = v42;
        v43 = (v17 - v34[20]) / (1.0 - v34[20]);
        if (v43 < 0.0)
          v43 = 0.0;
        v165 = *(double *)&a7;
        if ((a8 & 1) != 0)
          v44 = 0.0;
        else
          v44 = *(double *)&a7;
        v46 = (1.0 - v19) * v43;
        v47 = (1.0 - v44) * v46;
        v48 = v17;
        if (*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_forceHideNoonNode))
          v49 = 0.0;
        else
          v49 = v43;
        v50 = (double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor);
        v173 = v48;
        if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_presentedConformedToExplodedFactor + 8) & 1) != 0)
        {
          v169 = (1.0 - v44) * v46;
          v51 = 1.0;
        }
        else
        {
          v51 = 1.0 - *v50;
          v52 = v48 * *v50;
          v43 = v52 + v43 * v51;
          v44 = v52 + v44 * v51;
          v169 = v47 * v51;
        }
        v45 = 1.0 - v19;
        v167 = v51
             * -(*(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_sceneSize + 8)
               * (v19 * (v19 * v19) + v19 * v19 * (v45 * 0.0) + v45 * (v45 * v45) * 0.0 + v19 * (v45 * v45 * 0.0)));
        v53 = v38 * v43 + v37 * (1.0 - v43);
        v174 = v44;
        v170 = v36 * v43 + v35 * (1.0 - v43);
        v172 = v39 * v44;
        v54 = v34[21];
        v158 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_pixelsPerInch);
        v55 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v55, sel_scale);
        v57 = v56;

        v58 = v34[2];
        v59 = &v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
        *(_QWORD *)v59 = 0x3FF0000000000000;
        v59[8] = 0;
        v60 = *(_QWORD *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring];
        sub_23A9829AC(1.0);
        *(_BYTE *)(v60 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        v61 = &v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
        *(_QWORD *)v61 = 0x3FF0000000000000;
        v61[8] = 0;
        v163 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
        objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_setAlpha_, 1.0);
        objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode], sel_setAlpha_, 1.0);
        v62 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
        *v62 = v49;
        *((_BYTE *)v62 + 8) = 0;
        v63 = *(_QWORD *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring];
        sub_23A9829AC(v49);
        *(_BYTE *)(v63 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        v64 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
        *v64 = v49;
        *((_BYTE *)v64 + 8) = 0;
        v65 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
        objc_msgSend(*(id *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_setAlpha_, v49);
        objc_msgSend(*(id *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode], sel_setAlpha_, v49);
        v66 = "FMBTDistanceViewStyle" + 16;
        v67 = v176;
        v68 = fabs(v176);
        if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactor + 8) & 1) != 0
          || (v69 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_inFOV), v69 == 2)
          || (v70 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_centerFactor), (v69 & 1) == 0)
          && v19 < 2.22044605e-16)
        {
          v71 = v53;
          v72 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_extraDiskRadiusWhenSnapping;
          v73 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_extraDiskRadiusWhenSnapping);
          v74 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode;
          if (*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode) == 1)
          {
            v75 = 0.0;
            sub_23AA05EB4(1, 0.0);
            if (v73 <= 0.0)
            {
              v79 = v68;
              *(_BYTE *)(v9 + v74) = 0;
              v67 = v176;
              v80 = v174;
              v66 = "Style";
            }
            else
            {
              v76 = v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
              if (MEMORY[0x23B85DBF0](v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate))
              {
                v77 = *(_QWORD *)(v76 + 8);
                ObjectType = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v77 + 80))(ObjectType, v77);
                swift_unknownObjectRelease();
              }
              v79 = v68;
              *(_BYTE *)(v9 + v74) = 0;
              v67 = v176;
              v80 = v174;
              v66 = "FMBTDistanceViewStyle" + 16;
              v75 = v176 * v174;
            }
          }
          else
          {
            v79 = v68;
            *(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode) = 0;
            v75 = 0.0;
            v80 = v174;
            if (v73 > 0.0)
              v75 = v176 * v174;
          }
          v81 = v80 * *(double *)(v9 + v72);
          v82 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius;
          v83 = -((v81 + *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius)) * v19);
          v84 = *((double *)v66 + 2);
          v85 = -(v83 * cos(v84 - v67));
          v86 = sin(v84 - v79) * v83;
          if (*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType) != 1)
            objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode), sel_setPosition_, 0.0, v167);
          sub_23A96EA20(0, v85, v86);
          sub_23A96EA20(0, v85, v86);
          sub_23A96E7D4(1, v170);
          sub_23A96E8F8(0, v75);
          v87 = v81 + *(double *)(v9 + v82);
          v88 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
          *v88 = v87;
          *((_BYTE *)v88 + 8) = 0;
          v89 = *(_QWORD *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring];
          sub_23A9829AC(v87);
          *(_BYTE *)(v89 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
          v90 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
          *v90 = v87;
          *((_BYTE *)v90 + 8) = 0;
          objc_msgSend(*(id *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode], sel_setPosition_, 0.0, v87);
          sub_23A96E7D4(1, v71);
          v91 = v81 + *(double *)(v9 + v82);
          v92 = (double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
          *v92 = v91;
          *((_BYTE *)v92 + 8) = 0;
          v93 = *(_QWORD *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring];
          sub_23A9829AC(v91);
          *(_BYTE *)(v93 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
          v94 = (double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
          *v94 = v91;
          *((_BYTE *)v94 + 8) = 0;
          objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode], sel_setPosition_, 0.0, v91);
          v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] = 0;
          sub_23A96E0B8(0, 0);
          v95 = v172;
          if (v73 <= 0.0)
            v95 = 0.0;
          v96 = v173;
LABEL_59:
          v97 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_ringView;
          v98 = *(void **)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_ringView);
          if (v98)
          {
            v99 = v98;
            sub_23A9B92A0(*(uint64_t *)&v169, 0, 1);

          }
          if ((v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle + 8] & 1) == 0)
          {
            v100 = fmod(*(long double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle], 6.28318531);
            if (v100 <= 3.14159265)
            {
              if (v100 < -3.14159265)
                v100 = v100 + 6.28318531;
            }
            else
            {
              v100 = v100 + -6.28318531;
            }
            v101 = *(void **)(v9 + v97);
            if (v101)
            {
              v102 = v101;
              sub_23A9B8E88(*(uint64_t *)&v95, 0, 0, v100, v176);

            }
          }
          if (v174 <= 0.0)
          {
            v104 = v176;
            if ((a8 & 1) != 0)
            {
              v103 = v166;
            }
            else
            {
              v103 = v166;
              if (v165 > 0.0)
              {
LABEL_73:
                if (*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType) == 1)
                {
                  if (v96 > 0.0)
                    goto LABEL_80;
                }
                else if (v96 > 0.75)
                {
                  goto LABEL_80;
                }
                if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor + 8) & 1) == 0
                  && *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_conformationFactor) == 0.0)
                {
                  v105 = &v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor];
                  *(_QWORD *)v105 = 0;
                  v105[8] = 1;
                  sub_23A96DC8C();
LABEL_81:

                  return;
                }
LABEL_80:
                sub_23A96DEBC();
                sub_23A96EC88(COERCE_ID(v96 * (v96 * v96)+ v96 * v96 * ((1.0 - v96) * 3.0)+ (1.0 - v96) * ((1.0 - v96) * (1.0 - v96)) * 0.0+ v96 * ((1.0 - v96) * (1.0 - v96) * 3.0)), 0);
                goto LABEL_81;
              }
            }
          }
          else
          {
            v103 = 0;
            v104 = v176;
          }
          sub_23A96E8F8(v103, v104);
          goto LABEL_73;
        }
        v106 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode;
        v156 = v54;
        if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode) & 1) != 0)
        {
          *(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_noonNodeSnappedUnderPointeeNode) = 1;
          v107 = v70 >= 0.5;
          if ((v69 & 1) != 0)
          {
            v108 = v174;
            if (v70 >= 0.5)
            {
              v107 = 1;
              v109 = v176;
              goto LABEL_96;
            }
            goto LABEL_91;
          }
          v108 = v174;
        }
        else
        {
          sub_23AA05EB4(1, 1.0);
          if ((v69 & 1) != 0)
          {
            v110 = v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_delegate;
            if (MEMORY[0x23B85DBF0]())
            {
              v111 = *(_QWORD *)(v110 + 8);
              v112 = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v111 + 72))(v112, v111);
              swift_unknownObjectRelease();
            }
            v107 = 1;
            *(_BYTE *)(v9 + v106) = 1;
            v67 = v176;
            v109 = v176;
            v108 = v174;
            v66 = "FMBTDistanceViewStyle" + 16;
            if (v70 < 0.5)
            {
LABEL_91:
              v109 = v67 * v108;
              v107 = 1;
            }
LABEL_96:
            v157 = v109;
            v113 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_experienceType);
            v114 = 0.0;
            v115 = 1.0;
            v116 = 0.0;
            if (v113 != 2)
            {
              v117 = 1.0;
              v118 = 0.0;
              if (v107)
              {
                v118 = v108;
                v117 = 1.0 - v108;
              }
              v116 = 1.0 - v108 + v159 * v118;
              v115 = v19 * (v156 * v158 / v57 / v58 / v53 - v160) + v117 + v160 * v118;
            }
            v161 = v53;
            v119 = OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius;
            v120 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius);
            if ((v69 & 1) != 0)
              v114 = v108;
            v121 = v114 * (v39 * v120);
            *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_extraDiskRadiusWhenSnapping) = v121;
            v122 = -((v120 + v121) * v19);
            v123 = *((double *)v66 + 2);
            v124 = -(v122 * cos(v123 - v67));
            v125 = sin(v123 - v68) * v122;
            if (v113 != 1)
              objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentsNode), sel_setPosition_, 0.0, v167);
            sub_23A96EA20(0, v124, v125);
            sub_23A96EA20(0, v124, v125);
            v126 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
            *v126 = v170 * v116;
            *((_BYTE *)v126 + 8) = 0;
            v127 = *(_QWORD *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring];
            sub_23A9829AC(v170 * v116);
            *(_BYTE *)(v127 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
            v128 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
            *v128 = v170 * v116;
            *((_BYTE *)v128 + 8) = 0;
            objc_msgSend(*(id *)&v177[v65], sel_setScale_, v170 * v116 * *(double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale]);
            sub_23A96E8F8(0, v157);
            v129 = v121 + *(double *)(v9 + v119);
            v130 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
            *v130 = v129;
            *((_BYTE *)v130 + 8) = 0;
            v131 = *(_QWORD *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring];
            sub_23A9829AC(v129);
            *(_BYTE *)(v131 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
            v132 = (double *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
            *v132 = v129;
            *((_BYTE *)v132 + 8) = 0;
            objc_msgSend(*(id *)&v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode], sel_setPosition_, 0.0, v129);
            v133 = v161 * v115;
            v134 = (double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
            *v134 = v133;
            *((_BYTE *)v134 + 8) = 0;
            v135 = *(_QWORD *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring];
            sub_23A9829AC(v133);
            *(_BYTE *)(v135 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
            v136 = (double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
            *v136 = v133;
            *((_BYTE *)v136 + 8) = 0;
            objc_msgSend(*(id *)&v21[v163], sel_setScale_, v133 * *(double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale]);
            v137 = v121 + *(double *)(v9 + v119);
            v138 = (double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
            *v138 = v137;
            *((_BYTE *)v138 + 8) = 0;
            v139 = *(_QWORD *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring];
            sub_23A9829AC(v137);
            *(_BYTE *)(v139 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
            v140 = (double *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
            *v140 = v137;
            *((_BYTE *)v140 + 8) = 0;
            objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode], sel_setPosition_, 0.0, v137);
            v141 = v177;
            v142 = 0;
            v143 = v19 < 1.0;
            v96 = v173;
            v95 = v172;
            if (!v143)
            {
              v164 = v177[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse];
              v144 = objc_msgSend(*(id *)&v177[v65], sel_children);
              sub_23AA06730();
              v145 = sub_23AA330B0();

              if (v145 >> 62)
                goto LABEL_121;
              v146 = *(_QWORD *)((v145 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v146)
              {
                while (1)
                {
                  if (v146 < 1)
                  {
                    __break(1u);
                    return;
                  }
                  v147 = 0;
                  v168 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
                  v162 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
                  v148 = v145 & 0xC000000000000001;
                  v171 = v145;
                  while (1)
                  {
                    v149 = v148 ? (id)MEMORY[0x23B85D0B0](v147, v145) : *(id *)(v145 + 8 * v147 + 32);
                    v150 = v149;
                    objc_opt_self();
                    if (swift_dynamicCastObjCClass())
                    {
                      v151 = *(void **)&v177[v168];
                      if (!v151)
                        break;
                      v152 = v151;
                      v153 = sub_23AA3338C();

                      v145 = v171;
                      if ((v153 & 1) == 0)
                        break;
                    }

LABEL_110:
                    if (v146 == ++v147)
                      goto LABEL_122;
                  }
                  v154 = *(id *)&v177[v162];
                  v145 = sub_23AA3338C();

                  if ((v145 & 1) != 0)
                    break;
                  if (!__OFADD__(v164++, 1))
                    break;
                  __break(1u);
LABEL_121:
                  swift_bridgeObjectRetain();
                  v146 = sub_23AA335C0();
                  if (!v146)
                    goto LABEL_122;
                }
                v145 = v171;
                goto LABEL_110;
              }
LABEL_122:
              swift_bridgeObjectRelease_n();
              v142 = v164 == 0;
              v141 = v177;
            }
            v141[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] = v142;
            goto LABEL_59;
          }
          *(_BYTE *)(v9 + v106) = 1;
          v107 = v70 >= 0.5;
          v67 = v176;
          v108 = v174;
          v66 = "Style";
        }
        v109 = 0.0;
        if (v107)
          v109 = v67;
        goto LABEL_96;
      }
    }
  }
}

uint64_t sub_23AA0EF48(double a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v4;
  double v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  char *v11;
  void *v12;
  double *v13;
  uint64_t result;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  void *v21;
  double v22;
  double v23;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config;
  v5 = 0.0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_config + 32) & 1) == 0)
    v5 = (a1 + -0.5)
       * ((*(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius)
         + *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_peripheralDiskRadius))
        * (double)*(uint64_t *)v4
        / (double)*(uint64_t *)(v4 + 24));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_gimbalNode), sel_position);
  objc_msgSend(v6, sel_setPosition_);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_patternFragmentNodes);
  swift_beginAccess();
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v9 = sub_23AA335C0();
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v9)
      goto LABEL_14;
  }
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v11 = (char *)MEMORY[0x23B85D0B0](i, v8);
    else
      v11 = (char *)*(id *)(v8 + 8 * i + 32);
    v12 = v11;
    v13 = (double *)&v11[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset];
    *v13 = v5;
    *((_BYTE *)v13 + 8) = 0;
    if ((v11[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) == 0)
      sub_23A9F0D4C(*(double *)&v11[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor]);

  }
LABEL_14:
  result = swift_bridgeObjectRelease_n();
  if ((*(_BYTE *)(v4 + 112) & 1) == 0)
  {
    v5 = *(double *)(v4 + 104);
    v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                + OBJC_IVAR____TtC11FMFindingUI17FMPFSKPatternNode_labelsNode), sel_children));
    sub_23AA06730();
    v16 = sub_23AA330B0();

    v2 = sub_23AA0F268(v16);
    result = swift_bridgeObjectRelease();
    if (v2)
    {
      if (!(v2 >> 62))
      {
        v17 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain();
        if (v17)
        {
LABEL_18:
          if (v17 < 1)
          {
            __break(1u);
            return result;
          }
          v18 = 0;
          v19 = (double)*(uint64_t *)v4;
          do
          {
            if ((v2 & 0xC000000000000001) != 0)
              v20 = (char *)MEMORY[0x23B85D0B0](v18, v2);
            else
              v20 = (char *)*(id *)(v2 + 8 * v18 + 32);
            v21 = v20;
            v22 = v5 * ((*(double *)&v20[OBJC_IVAR____TtC11FMFindingUI15FMPFSKLabelNode_normalizedIndex] - a1) * v19);
            ++v18;
            if (v22 < 0.0)
              v23 = 1.0;
            else
              v23 = 1.0 - v22;
            objc_msgSend(v20, sel_setAlpha_, v23);

          }
          while (v17 != v18);
        }
        return swift_bridgeObjectRelease_n();
      }
LABEL_28:
      swift_bridgeObjectRetain();
      result = sub_23AA335C0();
      v17 = result;
      if (result)
        goto LABEL_18;
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_23AA0F268(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_23AA3356C();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x23B85D0B0](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        type metadata accessor for FMPFSKLabelNode();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_23AA33554();
        sub_23AA33578();
        sub_23AA33584();
        sub_23AA33560();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for FMPFSKLabelNode();
        v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_23AA33554();
        sub_23AA33578();
        sub_23AA33584();
        sub_23AA33560();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_23AA335C0();
    swift_bridgeObjectRelease();
    sub_23AA3356C();
    swift_bridgeObjectRetain();
    v2 = sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_23AA0F4A0()
{
  id v0;
  unsigned int v1;
  void *ObjCClassFromMetadata;
  unint64_t i;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  unint64_t v33;
  id v34;
  void *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  void *v48;
  uint64_t result;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  objc_super v53;
  objc_super v54;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = objc_msgSend(v0, sel_fmpfEcoMode);

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v54.receiver = ObjCClassFromMetadata;
  v54.super_class = (Class)&OBJC_METACLASS____TtC11FMFindingUI27FMPFARTrackingConfiguration;
  i = (unint64_t)objc_msgSendSuper2(&v54, sel_supportedVideoFormats);
  sub_23A968488(0, &qword_2569D8518);
  v4 = sub_23AA330B0();

  v5 = MEMORY[0x24BEE4AF8];
  if (!v1)
  {
LABEL_25:
    v53.receiver = ObjCClassFromMetadata;
    v53.super_class = (Class)&OBJC_METACLASS____TtC11FMFindingUI27FMPFARTrackingConfiguration;
    v23 = (uint64_t)objc_msgSendSuper2(&v53, sel_supportedVideoFormats);
    v24 = sub_23AA330B0();

    v52 = v5;
    if ((unint64_t)v24 >> 62)
    {
      if (v24 < 0)
        v23 = v24;
      else
        v23 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v6 = sub_23AA335C0();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_27:
        if (v6 < 1)
          goto LABEL_84;
        for (i = 0; i != v6; ++i)
        {
          if ((v24 & 0xC000000000000001) != 0)
            v25 = (id)MEMORY[0x23B85D0B0](i, v24);
          else
            v25 = *(id *)(v24 + 8 * i + 32);
          v26 = v25;
          objc_msgSend(v25, sel_imageResolution);
          v28 = v27;
          objc_msgSend(v26, sel_imageResolution);
          if (v28 > v29)
            v30 = v28;
          else
            v30 = v29;
          if (v30 <= 1920.0)
          {
            sub_23AA33554();
            sub_23AA33578();
            sub_23AA33584();
            sub_23AA33560();
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease();
        v23 = v52;
        v5 = MEMORY[0x24BEE4AF8];
        if ((v52 & 0x8000000000000000) != 0)
          goto LABEL_78;
        goto LABEL_46;
      }
    }
    else
    {
      v6 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v6)
        goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_78;
LABEL_46:
    if ((v23 & 0x4000000000000000) != 0)
      goto LABEL_78;
    v6 = *(_QWORD *)(v23 + 16);
    swift_retain();
    if (!v6)
      goto LABEL_79;
    goto LABEL_48;
  }
  if (!(v4 >> 62))
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v6)
      goto LABEL_4;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain_n();
  v6 = sub_23AA335C0();
  if (!v6)
  {
LABEL_24:
    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
LABEL_4:
  i = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_87;
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v4 + 32);
LABEL_7:
    v8 = v7;
    v9 = v6 - 1;
    if (v6 != 1)
    {
      if (v6 < 2)
        goto LABEL_90;
      if (!i)
      {
        v11 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v11 < 2 || v9 >= v11)
          goto LABEL_92;
      }
      v12 = 0;
      do
      {
        if (i)
          v13 = (id)MEMORY[0x23B85D0B0](v12 + 1, v4);
        else
          v13 = *(id *)(v4 + 8 * v12 + 40);
        v14 = v13;
        objc_msgSend(v13, sel_imageResolution);
        v16 = v15;
        objc_msgSend(v14, sel_imageResolution);
        v18 = v16 * v17;
        objc_msgSend(v8, sel_imageResolution);
        v20 = v19;
        objc_msgSend(v8, sel_imageResolution);
        if (v18 >= v20 * v21)
          v22 = v14;
        else
          v22 = v8;
        if (v18 < v20 * v21)
          v8 = v14;

        ++v12;
      }
      while (v9 != v12);
    }
    swift_bridgeObjectRelease_n();
    sub_23A964084(&qword_2569D6080);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23AA36180;
    *(_QWORD *)(v10 + 32) = v8;
    while (2)
    {
      v52 = v10;
      sub_23AA330C8();
      v4 = v52;
      if (!(v52 >> 62))
      {
LABEL_54:
        v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v6)
          goto LABEL_55;
LABEL_81:
        swift_bridgeObjectRelease();
        return MEMORY[0x24BEE4AF8];
      }
      while (1)
      {
        swift_bridgeObjectRetain();
        v6 = sub_23AA335C0();
        swift_bridgeObjectRelease();
        if (!v6)
          goto LABEL_81;
LABEL_55:
        v52 = v5;
        v23 = (uint64_t)&v52;
        sub_23AA3356C();
        if (v6 < 0)
          break;
        i = 0;
        while (v6 != i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v34 = (id)MEMORY[0x23B85D0B0](i, v4);
          else
            v34 = *(id *)(v4 + 8 * i + 32);
          v35 = v34;
          v50 = v34;
          sub_23AA0FAF8(&v50, &v51);

          ++i;
          sub_23AA33554();
          sub_23AA33578();
          sub_23AA33584();
          v23 = (uint64_t)&v52;
          sub_23AA33560();
          if (v6 == i)
          {
            v36 = v52;
            swift_bridgeObjectRelease();
            return v36;
          }
        }
        __break(1u);
LABEL_78:
        swift_retain();
        v6 = sub_23AA335C0();
        if (v6)
        {
LABEL_48:
          i = v23 & 0xC000000000000001;
          if ((v23 & 0xC000000000000001) != 0)
            goto LABEL_85;
          if (*(_QWORD *)(v23 + 16))
          {
            v31 = *(id *)(v23 + 32);
            goto LABEL_51;
          }
          __break(1u);
LABEL_87:
          v7 = (id)MEMORY[0x23B85D0B0](0, v4);
          goto LABEL_7;
        }
LABEL_79:
        swift_release_n();
        if (!(v4 >> 62))
          goto LABEL_54;
      }
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      v31 = (id)MEMORY[0x23B85D0B0](0, v23);
LABEL_51:
      v32 = v31;
      v33 = v6 - 1;
      if (v6 == 1)
      {
LABEL_52:
        swift_release_n();
        swift_bridgeObjectRelease();
        sub_23A964084(&qword_2569D6080);
        v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_23AA36180;
        *(_QWORD *)(v10 + 32) = v32;
        continue;
      }
      break;
    }
    if (v6 >= 2)
    {
      if (i || (v37 = *(_QWORD *)(v23 + 16), v37 >= 2) && v33 < v37)
      {
        v38 = 0;
        do
        {
          if (i)
            v39 = (id)MEMORY[0x23B85D0B0](v38 + 1, v23);
          else
            v39 = *(id *)(v23 + 8 * v38 + 40);
          v40 = v39;
          objc_msgSend(v32, sel_imageResolution);
          v42 = v41;
          objc_msgSend(v32, sel_imageResolution);
          v44 = v42 * v43;
          objc_msgSend(v40, sel_imageResolution);
          v46 = v45;
          objc_msgSend(v40, sel_imageResolution);
          if (v44 >= v46 * v47)
            v48 = v40;
          else
            v48 = v32;
          if (v44 < v46 * v47)
            v32 = v40;

          ++v38;
        }
        while (v33 != v38);
        goto LABEL_52;
      }
      goto LABEL_91;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23AA0FAF8(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v53;

  v2 = *a1;
  if (qword_2569D4AA8 != -1)
    swift_once();
  if (byte_2569DFFE0 == 1)
  {
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_23AA370F0;
    v4 = objc_msgSend(v2, sel_captureDeviceType);
    v5 = sub_23AA32FD8();
    v7 = v6;

    v8 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
    v9 = sub_23A9640C4();
    *(_QWORD *)(v3 + 64) = v9;
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v7;
    v10 = MEMORY[0x23B85CEC4](objc_msgSend(v2, sel_imageResolution));
    *(_QWORD *)(v3 + 96) = v8;
    *(_QWORD *)(v3 + 104) = v9;
    *(_QWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 80) = v11;
    v12 = objc_msgSend(v2, sel_frameRatesByPowerUsage);
    v13 = sub_23A968488(0, &qword_2569D5410);
    v14 = sub_23AA330B0();

    v15 = MEMORY[0x23B85CC54](v14, v13);
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 136) = v8;
    *(_QWORD *)(v3 + 144) = v9;
    *(_QWORD *)(v3 + 112) = v15;
    *(_QWORD *)(v3 + 120) = v17;
    v18 = sub_23AA32FE4();
    v20 = v19;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v21 = sub_23AA32EA0();
    sub_23A9620E8(v21, (uint64_t)qword_2569E0010);
    swift_bridgeObjectRetain();
    v22 = sub_23AA32E88();
    v23 = sub_23AA33218();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v53 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A964DBC(v18, v20, &v53);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v22, v23, "%s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v25, -1, -1);
      MEMORY[0x23B85DB24](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *a2 = v2;
    v51 = v2;
  }
  else
  {
    v26 = objc_msgSend(v2, sel_videoFormatWithUnthrottledLowPowerUsageFramerate);
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23AA370F0;
    v28 = objc_msgSend(v26, sel_captureDeviceType);
    v29 = sub_23AA32FD8();
    v31 = v30;

    v32 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE0D00];
    v33 = sub_23A9640C4();
    *(_QWORD *)(v27 + 64) = v33;
    *(_QWORD *)(v27 + 32) = v29;
    *(_QWORD *)(v27 + 40) = v31;
    v34 = MEMORY[0x23B85CEC4](objc_msgSend(v26, sel_imageResolution));
    *(_QWORD *)(v27 + 96) = v32;
    *(_QWORD *)(v27 + 104) = v33;
    *(_QWORD *)(v27 + 72) = v34;
    *(_QWORD *)(v27 + 80) = v35;
    v36 = objc_msgSend(v26, sel_frameRatesByPowerUsage);
    v37 = sub_23A968488(0, &qword_2569D5410);
    v38 = sub_23AA330B0();

    v39 = MEMORY[0x23B85CC54](v38, v37);
    v41 = v40;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + 136) = v32;
    *(_QWORD *)(v27 + 144) = v33;
    *(_QWORD *)(v27 + 112) = v39;
    *(_QWORD *)(v27 + 120) = v41;
    v42 = sub_23AA32FE4();
    v44 = v43;
    if (qword_2569D4AB0 != -1)
      swift_once();
    v45 = sub_23AA32EA0();
    sub_23A9620E8(v45, (uint64_t)qword_2569E0010);
    swift_bridgeObjectRetain();
    v46 = sub_23AA32E88();
    v47 = sub_23AA33218();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = v42;
      v50 = swift_slowAlloc();
      v53 = v50;
      *(_DWORD *)v48 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A964DBC(v49, v44, &v53);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v46, v47, "%s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v50, -1, -1);
      MEMORY[0x23B85DB24](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *a2 = v26;
  }
}

id sub_23AA100DC(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FMPFARTrackingConfiguration();
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_23AA10118()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFARTrackingConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFARTrackingConfiguration()
{
  return objc_opt_self();
}

id sub_23AA10168()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  objc_super v17;

  v1 = OBJC_IVAR____TtC11FMFindingUI20FMPFSKBTRangeDotNode_sizeSpring;
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_23A9CCC54(0, 0, 0x3F50624DD2F1A9FCLL, 0);

  type metadata accessor for FMPFView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = (void *)sub_23AA32FB4();
  v6 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, v4, 0);

  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_textureWithImage_, v6);

    v4 = v6;
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9ED0]), sel_init);
  }

  v8 = (void *)objc_opt_self();
  v9 = v7;
  v10 = objc_msgSend(v8, sel_whiteColor);
  objc_msgSend(v9, sel_size);
  v12 = v11;
  v14 = v13;
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for FMPFSKBTRangeDotNode();
  v15 = objc_msgSendSuper2(&v17, sel_initWithTexture_color_size_, v9, v10, v12, v14);

  return v15;
}

id sub_23AA103F0(double a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  double *v4;
  double v5;
  id v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  double v13;
  double v14;

  v2 = v1;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI20FMPFSKBTRangeDotNode_sizeSpring];
  sub_23A982B4C(a1);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  v4 = (double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v4[35] + *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v4 + *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v3+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v5 = *v4 + *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  else
    v5 = v4[35] + *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v6 = objc_msgSend(v2, sel_scene);
  v7 = 1.0;
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v6, sel_size);
    v10 = v9;

    v11 = objc_msgSend(v2, sel_texture);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel_size);
      v14 = v13;

      v7 = round(v5 * v10) / v14;
    }
  }
  return objc_msgSend(v2, sel_setScale_, v7);
}

void sub_23AA1053C(char a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  double v7;
  id v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;

  v3 = v2;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI20FMPFSKBTRangeDotNode_sizeSpring];
  if ((a1 & 1) != 0)
  {
    v5 = v4 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)v5 = a2;
    *(_BYTE *)(v5 + 8) = 0;
    sub_23A9CC9DC();
  }
  else
  {
    sub_23A9829AC(a2);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    v6 = (double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v6[35] + *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v6 + *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v4+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v7 = *v6 + *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    else
      v7 = v6[35] + *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    v8 = objc_msgSend(v3, sel_scene);
    v9 = 1.0;
    if (v8)
    {
      v10 = v8;
      objc_msgSend(v8, sel_size);
      v12 = v11;

      v13 = objc_msgSend(v3, sel_texture);
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, sel_size);
        v16 = v15;

        v9 = round(v7 * v12) / v16;
      }
    }
    objc_msgSend(v3, sel_setScale_, v9);
  }
}

void sub_23AA106A8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD v24[6];

  v1 = v0;
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    v2 = objc_msgSend(v0, sel_texture);
    if (v2)
    {
      v3 = v2;
      type metadata accessor for FMPFSKSpriteNode();
      v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      sub_23A964084(&qword_2569D6080);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_23AA36180;
      v6 = (void *)objc_opt_self();
      v7 = (void *)objc_opt_self();
      v8 = v4;
      v9 = objc_msgSend(v7, sel_rangeWithConstantValue_, 0.0);
      v10 = objc_msgSend(v6, sel_distance_toNode_, v9, v1);

      *(_QWORD *)(v5 + 32) = v10;
      sub_23AA330C8();
      sub_23A968488(0, (unint64_t *)&qword_2569D5990);
      v11 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setConstraints_, v11, v5);

      objc_msgSend(v8, sel_setTexture_, v3);
      v12 = v8;
      objc_msgSend(v3, sel_size);
      objc_msgSend(v12, sel_setSize_);

      objc_msgSend(v12, sel_setScale_, 1.0);
      v13 = (void *)objc_opt_self();
      v14 = objc_msgSend(v13, sel_scaleTo_duration_, 2.0, 0.5);
      objc_msgSend(v14, sel_setTimingMode_, 2);
      v15 = objc_msgSend(v13, sel_fadeAlphaTo_duration_, 0.0, 0.5);
      objc_msgSend(v15, sel_setTimingMode_, 2);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_23AA36AF0;
      *(_QWORD *)(v16 + 32) = v15;
      *(_QWORD *)(v16 + 40) = v14;
      v24[0] = v16;
      sub_23AA330C8();
      sub_23A968488(0, (unint64_t *)&unk_2569D59A0);
      v17 = v15;
      v18 = v14;
      v19 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(v13, sel_group_, v19, v24[0]);

      objc_msgSend(v1, sel_addChild_, v12);
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v12;
      v24[4] = sub_23A96F624;
      v24[5] = v21;
      v24[0] = MEMORY[0x24BDAC760];
      v24[1] = 1107296256;
      v24[2] = sub_23A9C4DBC;
      v24[3] = &unk_250BC5E38;
      v22 = _Block_copy(v24);
      v23 = v12;
      swift_release();
      objc_msgSend(v23, sel_runAction_completion_, v20, v22);
      _Block_release(v22);

    }
  }
}

void sub_23AA10A80()
{
  uint64_t v0;

}

id sub_23AA10A90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKBTRangeDotNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKBTRangeDotNode()
{
  return objc_opt_self();
}

uint64_t sub_23AA10AF0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AA10B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA10B24()
{
  return swift_release();
}

id sub_23AA10B2C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  double v34;
  double v35;

  v1 = v0;
  v2 = sub_23AA32DC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, sel_timestamp);
  sub_23AA32DA4();

  objc_msgSend(v1, sel_coordinate);
  v35 = v7;
  objc_msgSend(v1, sel_coordinate);
  v34 = v8;
  objc_msgSend(v1, sel_altitude);
  v10 = v9;
  objc_msgSend(v1, sel_ellipsoidalAltitude);
  v12 = v11;
  objc_msgSend(v1, sel_horizontalAccuracy);
  v14 = v13;
  objc_msgSend(v1, sel_verticalAccuracy);
  v16 = v15;
  objc_msgSend(v1, sel_speed);
  v18 = v17;
  objc_msgSend(v1, sel_speedAccuracy);
  v20 = v19;
  objc_msgSend(v1, sel_course);
  v22 = v21;
  objc_msgSend(v1, sel_courseAccuracy);
  v24 = v23;
  v25 = objc_msgSend(v1, sel_floor);
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, sel_level);

  }
  else
  {
    v27 = 0;
  }
  v28 = objc_msgSend(v1, sel_type);
  v29 = objc_msgSend(v1, sel_signalEnvironmentType);
  v30 = objc_allocWithZone(MEMORY[0x24BDDFE20]);
  v31 = (void *)sub_23AA32D8C();
  v32 = objc_msgSend(v30, sel_initWithTimestamp_latitude_longitude_altitude_ellipsoidalAltitude_horizontalAccuracy_verticalAccuracy_speed_speedAccuracy_course_courseAccuracy_floor_locationType_signalEnvironment_, v31, v27, v28, v29, v35, v34, v10, v12, v14, v16, v18, v20, v22, v24);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v32;
}

id sub_23AA10D88()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;
  _OWORD v15[11];
  uint64_t v16;

  v1 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_titleLabel;
  v2 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_subtitleLabel;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v5 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_style;
  if (qword_2569D4B48 != -1)
    swift_once();
  v15[8] = xmmword_2569E03B0;
  v15[9] = unk_2569E03C0;
  v15[10] = xmmword_2569E03D0;
  v16 = qword_2569E03E0;
  v15[4] = xmmword_2569E0370;
  v15[5] = unk_2569E0380;
  v15[6] = xmmword_2569E0390;
  v15[7] = unk_2569E03A0;
  v15[0] = xmmword_2569E0330;
  v15[1] = *(_OWORD *)&qword_2569E0340;
  v15[2] = xmmword_2569E0350;
  v15[3] = unk_2569E0360;
  memmove(&v3[v5], &xmmword_2569E0330, 0xB8uLL);
  swift_getObjectType();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  sub_23A9D5530((uint64_t)v15);
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  v9 = (void *)sub_23AA32FB4();
  v10 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_withConfiguration_, v9, v8, 0);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_initWithImage_, v10);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_imageView] = v11;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for FMIncorrectOrientationView();
  v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23AA10FE0();
  sub_23AA11398();

  return v12;
}

id sub_23AA10FE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;

  v1 = v0;
  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_imageView]);
  v2 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_titleLabel;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_titleLabel];
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x24BEBE250];
  v6 = v3;
  v7 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v5);
  v8 = (void *)sub_23A9B310C(2);

  objc_msgSend(v6, sel_setFont_, v8);
  objc_msgSend(*(id *)&v1[v2], sel_setAdjustsFontForContentSizeCategory_, 0);
  objc_msgSend(*(id *)&v1[v2], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v1[v2], sel_setNumberOfLines_, 1);
  v9 = *(void **)&v1[v2];
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = objc_msgSend(v10, sel_whiteColor);
  objc_msgSend(v11, sel_setTextColor_, v12);

  objc_msgSend(*(id *)&v1[v2], sel_setTextAlignment_, 1);
  v13 = *(id *)&v1[v2];
  v14 = objc_msgSend(v10, sel_clearColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  v15 = *(id *)&v1[v2];
  sub_23A9E5198();
  v16 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setText_, v16);

  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v1[v2]);
  v17 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_subtitleLabel;
  v18 = *MEMORY[0x24BEBE1D0];
  v19 = *(id *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_subtitleLabel];
  v20 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v18);
  objc_msgSend(v19, sel_setFont_, v20);

  objc_msgSend(*(id *)&v1[v17], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v1[v17], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v1[v17], sel_setNumberOfLines_, 0);
  v21 = *(id *)&v1[v17];
  v22 = objc_msgSend(v10, sel_whiteColor);
  objc_msgSend(v21, sel_setTextColor_, v22);

  objc_msgSend(*(id *)&v1[v17], sel_setTextAlignment_, 1);
  v23 = *(id *)&v1[v17];
  v24 = objc_msgSend(v10, sel_clearColor);
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  v25 = *(id *)&v1[v17];
  sub_23A9E5198();
  v26 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setText_, v26);

  return objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v1[v17]);
}

void sub_23AA11398()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  double v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  id v34;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_imageView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_imageView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v33 = (char *)OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_titleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_titleLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v32 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_subtitleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_subtitleLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v31 = (id)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23AA36AF0;
  v4 = objc_msgSend(*(id *)((char *)v1 + v2), sel_centerXAnchor);
  v5 = objc_msgSend(v1, sel_centerXAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(_QWORD *)(v3 + 32) = v6;
  v7 = objc_msgSend(*(id *)((char *)v1 + v2), sel_centerYAnchor);
  v8 = objc_msgSend(v1, sel_centerYAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v3 + 40) = v9;
  sub_23AA330C8();
  sub_23A964144();
  v10 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v10);

  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23AA36AF0;
  v12 = objc_msgSend(*(id *)&v33[(_QWORD)v1], sel_centerXAnchor);
  v13 = objc_msgSend(v1, sel_centerXAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v11 + 32) = v14;
  v15 = objc_msgSend(*(id *)&v33[(_QWORD)v1], sel_topAnchor);
  v16 = objc_msgSend(*(id *)((char *)v1 + v2), sel_bottomAnchor);
  v17 = (double *)((char *)v1 + OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_style);
  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, *(double *)((char *)v1 + OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_style + 88));

  *(_QWORD *)(v11 + 40) = v18;
  sub_23AA330C8();
  v19 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v19);

  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23AA36F20;
  v21 = objc_msgSend(*(id *)((char *)v1 + v32), sel_topAnchor);
  v22 = objc_msgSend(*(id *)&v33[(_QWORD)v1], sel_bottomAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, v17[22]);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(*(id *)((char *)v1 + v32), sel_leadingAnchor);
  v25 = objc_msgSend(v1, sel_leadingAnchor);
  v26 = v17[16];
  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, v26);

  *(_QWORD *)(v20 + 40) = v27;
  v28 = objc_msgSend(*(id *)((char *)v1 + v32), sel_trailingAnchor);
  v29 = objc_msgSend(v1, sel_trailingAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, -v26);

  *(_QWORD *)(v20 + 48) = v30;
  sub_23AA330C8();
  v34 = (id)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v34);

}

id sub_23AA11870()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMIncorrectOrientationView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMIncorrectOrientationView()
{
  return objc_opt_self();
}

void sub_23AA11960()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD v4[11];
  uint64_t v5;

  v1 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v2 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_subtitleLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v3 = OBJC_IVAR____TtC11FMFindingUI26FMIncorrectOrientationView_style;
  if (qword_2569D4B48 != -1)
    swift_once();
  v4[8] = xmmword_2569E03B0;
  v4[9] = unk_2569E03C0;
  v4[10] = xmmword_2569E03D0;
  v5 = qword_2569E03E0;
  v4[4] = xmmword_2569E0370;
  v4[5] = unk_2569E0380;
  v4[6] = xmmword_2569E0390;
  v4[7] = unk_2569E03A0;
  v4[0] = xmmword_2569E0330;
  v4[1] = *(_OWORD *)&qword_2569E0340;
  v4[2] = xmmword_2569E0350;
  v4[3] = unk_2569E0360;
  memmove(&v0[v3], &xmmword_2569E0330, 0xB8uLL);
  sub_23A9D5530((uint64_t)v4);

  sub_23AA335A8();
  __break(1u);
}

uint64_t sub_23AA11A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_WORD *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 56))(v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingState, 1, 1);
  sub_23AA32DBC();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_23A9732E0(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23AA2B26C((uint64_t)v5, 10, v8);
  sub_23AA13734((uint64_t)v8, v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_currentState);
  sub_23A9732E0(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23AA2B26C((uint64_t)v5, 10, v8);
  sub_23A973324(a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23AA13734((uint64_t)v8, v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_previousState);
  return v1;
}

uint64_t sub_23AA11BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(char *, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  char *v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BOOL4 v79;
  uint64_t v80;
  int v81;
  _BOOL4 v82;
  int v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  _BOOL4 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  void *v121;
  uint64_t v122;
  unsigned __int16 *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  void *v141;
  id v142;
  void *v143;
  uint64_t v144;
  unsigned __int16 *v145;
  unsigned __int16 *v146;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  _BOOL4 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int *v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned __int16 *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(uint64_t, void *);
  void *v175;
  uint64_t (*v176)();
  uint64_t v177;
  _QWORD v178[12];
  int v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  char v194;

  v3 = sub_23A964084(&qword_2569D7960);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v151 = (uint64_t)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v162 = (uint64_t)&v149 - v6;
  v165 = sub_23AA32DC8();
  v163 = *(int **)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v157 = (char *)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23AA32E1C();
  v168 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v149 - v12;
  v14 = (int *)type metadata accessor for FMFindingViewState();
  v161 = *((_QWORD *)v14 - 1);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v160 = (uint64_t)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v150 = (uint64_t)&v149 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v149 = (uint64_t)&v149 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v159 = (uint64_t)&v149 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v166 = (uint64_t)&v149 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v149 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v149 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v170 = (unsigned __int16 *)((char *)&v149 - v31);
  sub_23A9732E0(a1, (uint64_t)&v149 - v31, v32);
  v167 = v1;
  v33 = v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_currentState;
  swift_beginAccess();
  v34 = v14[8];
  v169 = v33;
  v35 = *(_DWORD *)(v33 + v34 + 96);
  v156 = v27;
  if ((v35 & 0xFC000000 | 0x2000000) == 0x6000000 || (*(_QWORD *)&v35 & 0xFF0000) != 0x30000)
  {
    sub_23A9732E0(a1, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v158 = 0;
  }
  else
  {
    sub_23A9732E0(a1, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v158 = (unint64_t)v30[v14[8] + 99] << 24 == 0x4000000;
  }
  sub_23A973324((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v37 = v168;
  v36 = v169;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 16);
  v38(v13, v169 + v14[5], v8);
  v38(v11, a1 + v14[5], v8);
  sub_23A9D29E0();
  v164 = sub_23AA32FA8();
  v39 = *(void (**)(char *, uint64_t))(v37 + 8);
  v39(v11, v8);
  v39(v13, v8);
  v40 = *(_BYTE *)(v36 + v14[7]);
  v168 = a1;
  v41 = (uint64_t)v156;
  sub_23A9732E0(a1, (uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if ((v40 & 1) != 0)
    v152 = 0;
  else
    v152 = *(unsigned __int8 *)(v41 + v14[7]) ^ 1;
  v42 = v167;
  sub_23A973324(v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v43 = v42 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_lastStateUpdateTime;
  swift_beginAccess();
  v44 = v163;
  v45 = v157;
  v46 = v165;
  (*((void (**)(char *, uint64_t, uint64_t))v163 + 2))(v157, v43, v165);
  sub_23AA32D98();
  v48 = v47;
  (*((void (**)(char *, uint64_t))v44 + 1))(v45, v46);
  v49 = v166;
  sub_23A9732E0(v169, v166, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v163 = v14;
  v50 = v14[8];
  v51 = *(_QWORD *)(v49 + v50);
  v52 = *(_QWORD *)(v49 + v50 + 8);
  v53 = *(void **)(v49 + v50 + 16);
  v54 = *(void **)(v49 + v50 + 24);
  v55 = *(_QWORD *)(v49 + v50 + 32);
  v56 = *(_QWORD *)(v49 + v50 + 40);
  v57 = *(_QWORD *)(v49 + v50 + 48);
  v58 = *(_QWORD *)(v49 + v50 + 56);
  v59 = *(_QWORD *)(v49 + v50 + 72);
  v156 = *(char **)(v49 + v50 + 64);
  v60 = *(_QWORD *)(v49 + v50 + 80);
  v61 = *(_QWORD *)(v49 + v50 + 88);
  v62 = *(unsigned int *)(v49 + v50 + 96);
  v63 = v62 | ((unint64_t)*(unsigned __int8 *)(v49 + v50 + 100) << 32);
  v64 = *(_QWORD *)((char *)v170 + v50);
  v65 = *(_QWORD *)((char *)v170 + v50 + 8);
  v66 = *(void **)((char *)v170 + v50 + 16);
  v67 = *(void **)((char *)v170 + v50 + 24);
  v68 = *(_QWORD *)((char *)v170 + v50 + 32);
  v69 = *(_QWORD *)((char *)v170 + v50 + 40);
  v70 = *(_QWORD *)((char *)v170 + v50 + 48);
  v71 = *(_QWORD *)((char *)v170 + v50 + 56);
  v72 = *(_QWORD *)((char *)v170 + v50 + 64);
  v73 = *(_QWORD *)((char *)v170 + v50 + 72);
  v74 = *(unsigned int *)((char *)v170 + v50 + 96) | ((unint64_t)*((unsigned __int8 *)v170 + v50 + 100) << 32);
  v76 = *(_QWORD *)((char *)v170 + v50 + 80);
  v75 = *(_QWORD *)((char *)v170 + v50 + 88);
  if ((v62 & 0xFF000000) == 0x4000000)
  {
    v77 = *(_DWORD *)((_BYTE *)v170 + v50 + 96) & 0xFF000000;
    v78 = 0x4000000;
    goto LABEL_12;
  }
  if ((v62 & 0xFF000000) == 0x5000000)
  {
    v77 = *(_DWORD *)((_BYTE *)v170 + v50 + 96) & 0xFF000000;
    v78 = 83886080;
LABEL_12:
    v79 = v77 != v78;
    goto LABEL_16;
  }
  v79 = (v63 & 0xFE000000) == 0x6000000 || (*(_DWORD *)((_BYTE *)v170 + v50 + 96) & 0xFC000000) == 0x4000000;
LABEL_16:
  LODWORD(v157) = v79;
  LODWORD(v165) = v164 ^ 1;
  v178[0] = v51;
  v178[1] = v52;
  v178[2] = v53;
  v178[3] = v54;
  v178[4] = v55;
  v178[5] = v56;
  v178[6] = v57;
  v178[7] = v58;
  v178[8] = v156;
  v178[9] = v59;
  v178[10] = v60;
  v178[11] = v61;
  v179 = v63;
  v180 = BYTE4(v63);
  v181 = v64;
  v182 = v65;
  v183 = v66;
  v184 = v67;
  v185 = v68;
  v186 = v69;
  v187 = v70;
  v188 = v71;
  v189 = v72;
  v190 = v73;
  v191 = v76;
  v192 = v75;
  v193 = v74;
  v194 = BYTE4(v74);
  v148 = (uint64_t)v156;
  v153 = v68;
  v154 = v69;
  v155 = v70;
  v156 = (char *)v71;
  v80 = v72;
  v81 = v74;
  sub_23A963BDC(v51, v52, v53, v54, v55, v56, v57, v58, v148, v59, v60, v61, v63);
  sub_23A963BDC(v64, v65, v66, v67, v153, v154, v155, (uint64_t)v156, v80, v73, v76, v75, v81);
  sub_23AA13BAC((uint64_t)v178);
  sub_23A973324(v166, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v82 = v158;
  v83 = v165 & v158;
  v84 = fabs(v48);
  v85 = sub_23AA32EA0();
  v86 = sub_23A9620E8(v85, (uint64_t)qword_2569E0040);
  v87 = v159;
  sub_23A9732E0(v168, v159, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v88 = sub_23AA32E88();
  v89 = sub_23AA33200();
  if (os_log_type_enabled(v88, v89))
  {
    LODWORD(v155) = v84 < 1.0;
    v90 = swift_slowAlloc();
    LODWORD(v156) = v83;
    v91 = v82;
    v92 = v90;
    v93 = swift_slowAlloc();
    v172 = v93;
    *(_DWORD *)v92 = 136316674;
    v166 = v86;
    sub_23AA2D564();
    v171 = sub_23A964DBC(v94, v95, &v172);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A973324(v87, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    *(_WORD *)(v92 + 12) = 1024;
    LODWORD(v171) = v91;
    v83 = (int)v156;
    sub_23AA333F8();
    *(_WORD *)(v92 + 18) = 1024;
    LODWORD(v171) = v165 & 1;
    sub_23AA333F8();
    *(_WORD *)(v92 + 24) = 1024;
    LODWORD(v171) = v152 & 1;
    sub_23AA333F8();
    *(_WORD *)(v92 + 30) = 1024;
    LODWORD(v171) = v83;
    sub_23AA333F8();
    *(_WORD *)(v92 + 36) = 1024;
    LODWORD(v171) = v155;
    sub_23AA333F8();
    *(_WORD *)(v92 + 42) = 1024;
    v86 = v166;
    LODWORD(v171) = (_DWORD)v157;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v88, v89, "    FMFindingStateTransCoord: Enqueuing state update: %s.\n    didTransitionFromFoundToNonFound: %{BOOL}d\n    didTransitionToDifferentBeacon: %{BOOL}d\n    groupedStateTransition: %{BOOL}d\n    shouldShowAutomaticReconnection: %{BOOL}d\n    isQuickUpdate: %{BOOL}d\n    isDifferentLevel: %{BOOL}d", (uint8_t *)v92, 0x30u);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v93, -1, -1);
    MEMORY[0x23B85DB24](v92, -1, -1);
  }
  else
  {
    sub_23A973324(v87, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  }

  v96 = v167;
  v97 = v160;
  if (v83)
  {
    v98 = v168;
    v99 = v149;
    sub_23A9732E0(v168, v149, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v100 = sub_23AA32E88();
    v101 = sub_23AA33200();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc();
      v103 = swift_slowAlloc();
      v172 = v103;
      v166 = v86;
      *(_DWORD *)v102 = 136315138;
      sub_23AA2D564();
      v171 = sub_23A964DBC(v104, v105, &v172);
      v98 = v168;
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      sub_23A973324(v99, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      _os_log_impl(&dword_23A95E000, v100, v101, "FMFindingStateTransCoord: Delaying state update to: %s.", v102, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v103, -1, -1);
      MEMORY[0x23B85DB24](v102, -1, -1);
    }
    else
    {
      sub_23A973324(v99, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    }

    v114 = v162;
    sub_23A9732E0(v98, v162, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v115 = v163;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v161 + 56))(v114, 0, 1, v163);
    v116 = v151;
    sub_23AA13C90(v114, v151);
    v117 = v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingState;
    swift_beginAccess();
    sub_23AA13778(v116, v117);
    swift_endAccess();
    v118 = (void *)objc_opt_self();
    v176 = sub_23AA13F60;
    v177 = v96;
    v172 = MEMORY[0x24BDAC760];
    v173 = 1107296256;
    v174 = sub_23A970F10;
    v175 = &unk_250BC5EA8;
    v119 = _Block_copy(&v172);
    swift_retain();
    swift_release();
    v120 = objc_msgSend(v118, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v119, 2.0);
    _Block_release(v119);
    v121 = *(void **)(v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer);
    *(_QWORD *)(v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer) = v120;

    v122 = v169;
    swift_beginAccess();
    v123 = v170;
    sub_23A973324((uint64_t)v170, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9732E0(v122, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    swift_endAccess();
    v124 = (uint64_t *)(v98 + v115[6]);
    v126 = *v124;
    v125 = v124[1];
    v127 = (_QWORD *)((char *)v123 + v115[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v127 = v126;
    v127[1] = v125;
    v128 = v150;
    sub_23A9732E0(v98, v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v129 = sub_23AA32E88();
    v130 = sub_23AA33200();
    if (os_log_type_enabled(v129, v130))
    {
      v131 = (uint8_t *)swift_slowAlloc();
      v132 = swift_slowAlloc();
      v172 = v132;
      *(_DWORD *)v131 = 136315138;
      sub_23AA2D564();
      v171 = sub_23A964DBC(v133, v134, &v172);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      sub_23A973324(v128, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      _os_log_impl(&dword_23A95E000, v129, v130, "FMFindingStateTransCoord: Transitional state will be displayed: %s.", v131, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v132, -1, -1);
      MEMORY[0x23B85DB24](v131, -1, -1);
    }
    else
    {
      sub_23A973324(v128, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    }

  }
  else
  {
    v106 = (int)v157;
    if (v84 >= 1.0)
      v106 = 0;
    if (v106 == 1 && ((v164 | v152) & 1) != 0)
    {
      v107 = v168;
      sub_23A9732E0(v168, v160, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v108 = sub_23AA32E88();
      v109 = sub_23AA33200();
      if (os_log_type_enabled(v108, v109))
      {
        v110 = (uint8_t *)swift_slowAlloc();
        v111 = swift_slowAlloc();
        v172 = v111;
        *(_DWORD *)v110 = 136315138;
        sub_23AA2D564();
        v171 = sub_23A964DBC(v112, v113, &v172);
        v107 = v168;
        sub_23AA333F8();
        swift_bridgeObjectRelease();
        sub_23A973324(v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
        _os_log_impl(&dword_23A95E000, v108, v109, "FMFindingStateTransCoord: Delaying State Update to: %s.", v110, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v111, -1, -1);
        MEMORY[0x23B85DB24](v110, -1, -1);
      }
      else
      {
        sub_23A973324(v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      }

      v137 = v162;
      sub_23A9732E0(v107, v162, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v161 + 56))(v137, 0, 1, v163);
      v138 = v151;
      sub_23AA13C90(v137, v151);
      v139 = v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingState;
      swift_beginAccess();
      sub_23AA13778(v138, v139);
      swift_endAccess();
      v140 = (void *)objc_opt_self();
      v176 = sub_23AA13CD8;
      v177 = v96;
      v172 = MEMORY[0x24BDAC760];
      v173 = 1107296256;
      v174 = sub_23A970F10;
      v175 = &unk_250BC5E80;
      v141 = _Block_copy(&v172);
      swift_retain();
      swift_release();
      v142 = objc_msgSend(v140, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v141, 1.0);
      _Block_release(v141);
      v143 = *(void **)(v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer);
      *(_QWORD *)(v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer) = v142;

      v144 = v169;
      swift_beginAccess();
      v145 = v170;
      sub_23A973324((uint64_t)v170, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      sub_23A9732E0(v144, (uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    }
    else
    {
      objc_msgSend(*(id *)(v167 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer), sel_invalidate);
      v135 = v162;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v161 + 56))(v162, 1, 1, v163);
      v136 = v96 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingState;
      swift_beginAccess();
      sub_23AA13778(v135, v136);
    }
    swift_endAccess();
  }
  v146 = v170;
  sub_23AA12BC8(v170);
  return sub_23A973324((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

uint64_t sub_23AA12BC8(unsigned __int16 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];

  v2 = v1;
  v4 = sub_23AA32DC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (unsigned __int16 *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_currentState;
  swift_beginAccess();
  sub_23A9732E0(v11, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v12 = sub_23AA2D880(a1, v10);
  result = sub_23A973324((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if (v12)
    return result;
  v49 = v5;
  sub_23A9732E0(v11, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v14 = v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_previousState;
  swift_beginAccess();
  sub_23AA13B68((uint64_t)v10, v14);
  swift_endAccess();
  swift_beginAccess();
  sub_23A9E49D4((uint64_t)a1, v11);
  swift_endAccess();
  v15 = sub_23AA2B1B0();
  v16 = sub_23AA2B1B0();
  v48 = v7;
  if (v15 == 4)
  {
    if (v16 != 4)
      goto LABEL_11;
  }
  else if (v16 == 4 || (sub_23AA154A8(v15), (v17 & 1) == 0))
  {
LABEL_11:
    if (qword_2569D4AC0 != -1)
      swift_once();
    v30 = sub_23AA32EA0();
    sub_23A9620E8(v30, (uint64_t)qword_2569E0040);
    swift_retain_n();
    v19 = sub_23AA32E88();
    v31 = sub_23AA33218();
    if (os_log_type_enabled(v19, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v47 = v4;
      v34 = v33;
      v51[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v46 = v32 + 4;
      sub_23A9732E0(v11, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      sub_23AA2D564();
      v36 = v35;
      v38 = v37;
      sub_23A973324((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v50 = sub_23A964DBC(v36, v38, v51);
      sub_23AA333F8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v19, v31, "🧭 FMFindingStateTransCoord: %s", v32, 0xCu);
      swift_arrayDestroy();
      v39 = v34;
      v4 = v47;
      MEMORY[0x23B85DB24](v39, -1, -1);
      v29 = v32;
      goto LABEL_15;
    }
LABEL_16:

    swift_release_n();
    goto LABEL_17;
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v18 = sub_23AA32EA0();
  sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
  swift_retain_n();
  v19 = sub_23AA32E88();
  v20 = sub_23AA33200();
  if (!os_log_type_enabled(v19, v20))
    goto LABEL_16;
  v21 = (uint8_t *)swift_slowAlloc();
  v22 = swift_slowAlloc();
  v47 = v4;
  v23 = v22;
  v51[0] = v22;
  *(_DWORD *)v21 = 136315138;
  v46 = v21 + 4;
  sub_23A9732E0(v11, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA2D564();
  v25 = v24;
  v27 = v26;
  sub_23A973324((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v50 = sub_23A964DBC(v25, v27, v51);
  sub_23AA333F8();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_23A95E000, v19, v20, "🧭 FMFindingStateTransCoord: %s", v21, 0xCu);
  swift_arrayDestroy();
  v28 = v23;
  v4 = v47;
  MEMORY[0x23B85DB24](v28, -1, -1);
  v29 = v21;
LABEL_15:
  MEMORY[0x23B85DB24](v29, -1, -1);

LABEL_17:
  v40 = v48;
  v41 = v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate;
  if (MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate))
  {
    v42 = *(_QWORD *)(v41 + 8);
    ObjectType = swift_getObjectType();
    sub_23A9732E0(v11, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    (*(void (**)(uint64_t, unsigned __int16 *, uint64_t, uint64_t))(v42 + 8))(v2, v10, ObjectType, v42);
    swift_unknownObjectRelease();
    sub_23A973324((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  }
  sub_23AA32DBC();
  v44 = v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_lastStateUpdateTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 40))(v44, v40, v4);
  return swift_endAccess();
}

void sub_23AA13164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[2];
  uint8_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31[3];

  v1 = v0;
  v2 = sub_23A964084(&qword_2569D7960);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v26 - v6;
  v8 = type metadata accessor for FMFindingViewState();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (unsigned __int16 *)((char *)v26 - v13);
  v15 = v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingState;
  swift_beginAccess();
  sub_23AA136AC(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_23AA136F4((uint64_t)v7);
  }
  else
  {
    sub_23AA13734((uint64_t)v7, (uint64_t)v14);
    if (qword_2569D4AC0 != -1)
      swift_once();
    v16 = sub_23AA32EA0();
    sub_23A9620E8(v16, (uint64_t)qword_2569E0040);
    sub_23A9732E0((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v17 = sub_23AA32E88();
    v18 = sub_23AA33200();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31[0] = v28;
      v29 = v5;
      *(_DWORD *)v19 = 136315138;
      v26[1] = v19 + 4;
      v27 = v19;
      sub_23AA2D564();
      v30 = sub_23A964DBC(v20, v21, v31);
      v5 = v29;
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v22 = v27;
      _os_log_impl(&dword_23A95E000, v17, v18, "FMFindingStateTransCoord: Commiting delayed state update to: %s.", v27, 0xCu);
      v23 = v28;
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v23, -1, -1);
      MEMORY[0x23B85DB24](v22, -1, -1);
    }
    else
    {
      sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    }

    sub_23AA12BC8(v14);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
    swift_beginAccess();
    sub_23AA13778((uint64_t)v5, v15);
    swift_endAccess();
    v24 = OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingStateTimer), sel_invalidate);
    sub_23A973324((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v25 = *(void **)(v1 + v24);
    *(_QWORD *)(v1 + v24) = 0;

  }
}

uint64_t sub_23AA134B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23A973324(v0 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_currentState, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA136F4(v0 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_pendingState);
  sub_23A973324(v0 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_previousState, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v1 = v0 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_lastStateUpdateTime;
  v2 = sub_23AA32DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_23A972074(v0 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_23AA13560()
{
  return type metadata accessor for FMFindingStateTransitionCoordinator();
}

uint64_t type metadata accessor for FMFindingStateTransitionCoordinator()
{
  uint64_t result;

  result = qword_2569D85E8;
  if (!qword_2569D85E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23AA135A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for FMFindingViewState();
  if (v0 <= 0x3F)
  {
    sub_23AA13658();
    if (v1 <= 0x3F)
    {
      sub_23AA32DC8();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_23AA13658()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2569D85F8[0])
  {
    type metadata accessor for FMFindingViewState();
    v0 = sub_23AA333D4();
    if (!v1)
      atomic_store(v0, qword_2569D85F8);
  }
}

uint64_t sub_23AA136AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D7960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA136F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A964084(&qword_2569D7960);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AA13734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA13778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D7960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA137C0(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;

  v3 = v2;
  v6 = type metadata accessor for FMFindingViewState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v24 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v24 - v13;
  v15 = v3 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_currentState;
  swift_beginAccess();
  sub_23A9732E0(v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA2C760(a2, v14);
  sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v16 = sub_23AA32EA0();
  sub_23A9620E8(v16, (uint64_t)qword_2569E0040);
  sub_23A9732E0((uint64_t)v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v17 = sub_23AA32E88();
  v18 = sub_23AA33200();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v25 = v20;
    *(_DWORD *)v19 = 136315138;
    v24[0] = v3;
    sub_23AA2D564();
    v24[1] = sub_23A964DBC(v21, v22, &v25);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    _os_log_impl(&dword_23A95E000, v17, v18, "FMFindingStateTransCoord: Received new session state: %s.", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v20, -1, -1);
    MEMORY[0x23B85DB24](v19, -1, -1);
  }
  else
  {
    sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  }

  if (*(__int16 *)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology) < 0)
    sub_23AA12BC8((unsigned __int16 *)v14);
  else
    sub_23AA11BF0((uint64_t)v14);
  return sub_23A973324((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

void *sub_23AA13A88(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_23AA335F0();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_23AA13B1C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_23AA13B40@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_23AA13B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA13BAC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *(_QWORD *)(a1 + 104);
  v2 = *(void **)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(void **)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v12 = *(_OWORD *)(a1 + 168);
  v8 = *(_DWORD *)(a1 + 200);
  v9 = *(_QWORD *)(a1 + 184);
  v10 = *(_QWORD *)(a1 + 192);
  sub_23A963F38(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_DWORD *)(a1 + 96));
  sub_23A963F38(v14, v13, v2, v3, v4, v5, v6, v7, v12, *((uint64_t *)&v12 + 1), v9, v10, v8);
  return a1;
}

uint64_t sub_23AA13C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A964084(&qword_2569D7960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA13CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA13CEC()
{
  return swift_release();
}

uint64_t sub_23AA13CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for FMFindingSession.Error(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - v8;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v10 = sub_23AA32EA0();
  sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
  sub_23A9732E0(a1, (uint64_t)v9, type metadata accessor for FMFindingSession.Error);
  v11 = sub_23AA32E88();
  v12 = sub_23AA33218();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v24 = v2;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v26 = v15;
    *(_DWORD *)v14 = 136315138;
    sub_23A9732E0((uint64_t)v9, (uint64_t)v7, type metadata accessor for FMFindingSession.Error);
    v16 = sub_23AA32FFC();
    v25 = sub_23A964DBC(v16, v17, &v26);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A973324((uint64_t)v9, type metadata accessor for FMFindingSession.Error);
    _os_log_impl(&dword_23A95E000, v11, v12, "FMFindingStateTransCoord: Forwarding error from finding session: %s.", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v15, -1, -1);
    v18 = v14;
    v2 = v24;
    MEMORY[0x23B85DB24](v18, -1, -1);
  }
  else
  {
    sub_23A973324((uint64_t)v9, type metadata accessor for FMFindingSession.Error);
  }

  v19 = v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate;
  result = MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate);
  if (result)
  {
    v21 = *(_QWORD *)(v19 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(v2, a1, ObjectType, v21);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_23AA13F6C(double a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  float v4;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = v1;
  v3 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value;
  LODWORD(a1) = *(_DWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_slider], sel_setValue_, a1);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepper], sel_setValue_, *(float *)&v2[v3]);
  v4 = roundf(fabsf(log10f(*(float *)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepValue])));
  if ((~LODWORD(v4) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -9.2234e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 9.2234e18)
  {
    sub_23AA33710();
    sub_23AA33038();
    swift_bridgeObjectRelease();
    sub_23AA33038();
    v5 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_valueLabel];
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v6 = swift_allocObject();
    v7 = *(_DWORD *)&v1[v3];
    v8 = MEMORY[0x24BEE14E8];
    *(_OWORD *)(v6 + 16) = xmmword_23AA35F90;
    v9 = MEMORY[0x24BEE1568];
    *(_QWORD *)(v6 + 56) = v8;
    *(_QWORD *)(v6 + 64) = v9;
    *(_DWORD *)(v6 + 32) = v7;
    sub_23AA32FE4();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v10);

    objc_msgSend(v2, sel_sendActionsForControlEvents_, 4096);
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_23AA14138(uint64_t a1, uint64_t a2, uint64_t a3, float a4, float a5, float a6)
{
  _QWORD *v10;
  void *v11;
  void *v12;
  double v13;
  uint64_t v14;
  void *v15;
  double v16;
  void *v17;
  uint64_t v18;
  double v19;

  v10 = (_QWORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_title);
  *v10 = a2;
  v10[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_titleLabel);
  if (v10[1])
  {
    swift_bridgeObjectRetain();
    v12 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v11, sel_setText_, v12);

  *(float *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = a4;
  sub_23AA13F6C(v13);
  v14 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_minimumValue;
  *(float *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_minimumValue) = a4;
  v15 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_slider);
  *(float *)&v16 = a4;
  objc_msgSend(v15, sel_setMinimumValue_, v16);
  v17 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepper);
  objc_msgSend(v17, sel_setMinimumValue_, *(float *)(a1 + v14));
  v18 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_maximumValue;
  *(float *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_maximumValue) = a5;
  *(float *)&v19 = a5;
  objc_msgSend(v15, sel_setMaximumValue_, v19);
  objc_msgSend(v17, sel_setMaximumValue_, *(float *)(a1 + v18));
  *(float *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepValue) = a6;
  return objc_msgSend(v17, sel_setStepValue_, a6);
}

void sub_23AA142CC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;

  v1 = v0;
  objc_msgSend(v0, sel_setLayoutMargins_, 4.0, 4.0, 4.0, 4.0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_titleLabel];
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1E0]);
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
  objc_msgSend(v4, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v6, sel_setAxis_, 0);
  v7 = v4;
  v8 = v5;
  v9 = v6;
  objc_msgSend(v7, sel_setSpacing_, 2.0);
  objc_msgSend(v8, sel_setSpacing_, 2.0);
  objc_msgSend(v9, sel_setSpacing_, 2.0);

  v10 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_valueLabel];
  v11 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_slider];
  v12 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepper];
  v13 = v7;
  v14 = v8;
  v40 = v9;
  v15 = v2;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v40, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v39 = v18;
  objc_msgSend(v14, sel_addArrangedSubview_, v15);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  objc_msgSend(v14, sel_addArrangedSubview_, v19);

  objc_msgSend(v14, sel_addArrangedSubview_, v16);
  objc_msgSend(v40, sel_addArrangedSubview_, v17);
  objc_msgSend(v40, sel_addArrangedSubview_, v18);
  objc_msgSend(v13, sel_addArrangedSubview_, v14);
  objc_msgSend(v13, sel_addArrangedSubview_, v40);
  objc_msgSend(v1, sel_addSubview_, v13);
  v38 = (id)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23AA35F80;
  v21 = objc_msgSend(v13, sel_topAnchor);
  v22 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v23 = objc_msgSend(v22, sel_topAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v20 + 32) = v24;
  v25 = objc_msgSend(v13, sel_bottomAnchor);
  v26 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v27 = objc_msgSend(v26, sel_bottomAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v20 + 40) = v28;
  v29 = objc_msgSend(v13, sel_leadingAnchor);
  v30 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v31 = objc_msgSend(v30, sel_leadingAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  *(_QWORD *)(v20 + 48) = v32;
  v33 = objc_msgSend(v13, sel_trailingAnchor);
  v34 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v35 = objc_msgSend(v34, sel_trailingAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(_QWORD *)(v20 + 56) = v36;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v37 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v38, sel_activateConstraints_, v37);

  objc_msgSend(v17, sel_addTarget_action_forControlEvents_, v1, sel_handleValueChangedWithSender_, 4096);
  objc_msgSend(v39, sel_addTarget_action_forControlEvents_, v1, sel_handleValueChangedWithSender_, 4096);

}

void sub_23AA148A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char v4;
  double v5;
  id v6;
  char v7;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepper);
  sub_23A968488(0, &qword_2569D87C0);
  v3 = v2;
  v4 = sub_23AA3338C();

  if ((v4 & 1) != 0)
  {
    objc_msgSend(v3, sel_value);
    *(float *)&v5 = v5;
  }
  else
  {
    v6 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_slider);
    v7 = sub_23AA3338C();

    if ((v7 & 1) == 0)
      return;
    objc_msgSend(v6, sel_value);
    *(float *)&v5 = *(float *)(v1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepValue)
                  * roundf(*(float *)&v5 / *(float *)(v1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepValue));
  }
  *(_DWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value) = LODWORD(v5);
  sub_23AA13F6C(v5);
}

id sub_23AA14A1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingDebugSlider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingDebugSlider()
{
  return objc_opt_self();
}

id sub_23AA14AD8(uint64_t a1, uint64_t a2, float a3, float a4, float a5)
{
  char *v5;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  objc_super v20;

  v11 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_titleLabel;
  v12 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v13 = v5;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_init);
  v14 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_valueLabel;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v15 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_slider;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD958]), sel_init);
  v16 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepper;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD998]), sel_init);
  v17 = &v13[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_title];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepValue] = 1008981770;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_minimumValue] = 0;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_maximumValue] = 1065353216;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value] = 0;

  v20.receiver = v13;
  v20.super_class = (Class)type metadata accessor for FMFindingDebugSlider();
  v18 = objc_msgSendSuper2(&v20, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23AA142CC();
  sub_23AA14138((uint64_t)v18, a1, a2, a3, a4, a5);

  return v18;
}

void sub_23AA14C6C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v2 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_valueLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v3 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_slider;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD958]), sel_init);
  v4 = OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepper;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD998]), sel_init);
  v5 = &v0[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_title];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_stepValue] = 1008981770;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_minimumValue] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_maximumValue] = 1065353216;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMFindingDebugSlider_value] = 0;

  sub_23AA335A8();
  __break(1u);
}

void sub_23AA14D9C(void *a1, double a2)
{
  char *v2;
  double *v4;
  double *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10[2];

  v10[1] = *(double *)MEMORY[0x24BDAC8D0];
  v4 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_brightness];
  *v4 = a2;
  *((_BYTE *)v4 + 8) = 0;
  v5 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_previousBrightness];
  if ((v2[OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_previousBrightness + 8] & 1) != 0
    || vabdd_f64(*v5, a2) >= 2.22044605e-16)
  {
    *v5 = a2;
    *((_BYTE *)v5 + 8) = 0;
    v9 = 1.0;
    v10[0] = 1.0;
    v7 = 1.0;
    v8 = 1.0;
    objc_msgSend(a1, sel_getRed_green_blue_alpha_, v10, &v9, &v8, &v7);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, v10[0] * a2, v9 * a2, v8 * a2, v7);
    objc_msgSend(v2, sel_setColor_, v6);

  }
}

id sub_23AA14F48()
{
  return sub_23AA15164(type metadata accessor for FMPFSKNode);
}

uint64_t type metadata accessor for FMPFSKNode()
{
  return objc_opt_self();
}

id sub_23AA1507C()
{
  return sub_23AA15164(type metadata accessor for FMPFSKSpriteNode);
}

uint64_t type metadata accessor for FMPFSKSpriteNode()
{
  return objc_opt_self();
}

id sub_23AA15158()
{
  return sub_23AA15164(type metadata accessor for FMPFSKShapeNode);
}

id sub_23AA15164(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKShapeNode()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FMPFBezierFunction()
{
  return &type metadata for FMPFBezierFunction;
}

uint64_t sub_23AA151C4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEF637241646E4165;
  v3 = 0x7672754364617571;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7672754364617571;
    else
      v5 = 0x7261656E696CLL;
    if (v4 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v5 = 0x7672754364617571;
    v6 = 0xEF637241646E4165;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  if (v7 == 1)
  {
    v2 = 0xE900000000000065;
  }
  else
  {
    v3 = 0x7261656E696CLL;
    v2 = 0xE600000000000000;
  }
LABEL_12:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23AA152CC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23AA15340(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23AA153D0 + 4 * byte_23AA3A557[a2]))(0xD000000000000012);
}

uint64_t sub_23AA153D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000012 && v1 == 0x800000023AA3AFB0)
    v2 = 1;
  else
    v2 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23AA154A8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23AA1551C@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23AA15574 + 4 * byte_23AA3A562[a1]))(a2 + 1);
}

uint64_t sub_23AA15574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  if (a1 == a2 + 1 && v2 == 0x800000023AA3C2D0)
    v3 = 1;
  else
    v3 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_23AA15604(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AA15660(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23AA156D0 + 4 * byte_23AA3A56B[a2]))(1702060387);
}

uint64_t sub_23AA156D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1702060387 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23AA1578C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AA157CC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23AA15828 + 4 * byte_23AA3A574[a2]))(0x6D6572757361656DLL);
}

uint64_t sub_23AA15828(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D6572757361656DLL && v1 == 0xEB00000000746E65)
    v2 = 1;
  else
    v2 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23AA158C8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x65636E6174736964;
    else
      v3 = 0xD00000000000001BLL;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0x800000023AA3B060;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x65636E6174736964;
      else
        v6 = 0xD00000000000001BLL;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0x800000023AA3B060;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701869940;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701869940)
  {
LABEL_21:
    v8 = sub_23AA33728();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23AA159D0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * i);
    v20 = v18;
    swift_bridgeObjectRetain();
    v19 = a1(&v20);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((v19 & 1) != 0)
    {
      swift_release();
      return v18;
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
      break;
    if (v12 >= v10)
      goto LABEL_28;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v10)
        goto LABEL_28;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (v16)
        goto LABEL_16;
      v17 = v12 + 2;
      if (v12 + 2 >= v10)
        goto LABEL_28;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (v16)
        goto LABEL_16;
      v17 = v12 + 3;
      if (v12 + 3 >= v10)
        goto LABEL_28;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (v16)
      {
LABEL_16:
        v12 = v17;
        goto LABEL_17;
      }
      v17 = v12 + 4;
      if (v12 + 4 < v10)
      {
        v16 = *(_QWORD *)(v6 + 8 * v17);
        if (!v16)
        {
          while (1)
          {
            v12 = v17 + 1;
            if (__OFADD__(v17, 1))
              goto LABEL_31;
            if (v12 >= v10)
              goto LABEL_28;
            v16 = *(_QWORD *)(v6 + 8 * v12);
            ++v17;
            if (v16)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_23AA15B88(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_23AA335C0())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B85D0B0](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AA15CA8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_23AA1CF2C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x23B85D0B0](i, a1);
        sub_23A968488(0, &qword_2569D8C10);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23AA1CF2C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_23AA1CF2C(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_23A9ABA4C(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_23A968488(0, &qword_2569D8C10);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23AA1CF2C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_23AA1CF2C(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_23A9ABA4C(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA15F08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  v2 = type metadata accessor for FMFindableGroupItem();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23AA1CF48(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_23A9732E0(v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_23AA1CF48(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = &off_250BC2D30;
      v12 = sub_23A9E4754((uint64_t *)&v14);
      sub_23A9732E0((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_23A963B98(&v14, v7 + 40 * v11 + 32);
      sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23AA16070(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(__int128 *);
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(__int128 *);
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  uint64_t v29;

  v4 = a3;
  v5 = MEMORY[0x24BEE4AF8];
  v29 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = (uint64_t (*)(__int128 *))result;
    v9 = 0;
    v10 = a3 + 32;
    v23 = (uint64_t (*)(__int128 *))result;
    v24 = a3;
    v22 = v6;
    while (v9 < *(_QWORD *)(v4 + 16))
    {
      sub_23A963A14(v10, (uint64_t)v28);
      v5 = a2;
      v11 = v8(v28);
      if (v3)
      {
        sub_23A963B3C((uint64_t)v28);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if ((v11 & 1) != 0)
      {
        sub_23A963B98(v28, (uint64_t)v25);
        v12 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23AA1CF48(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v29;
        }
        v14 = *(_QWORD *)(v12 + 16);
        v13 = *(_QWORD *)(v12 + 24);
        if (v14 >= v13 >> 1)
          sub_23AA1CF48(v13 > 1, v14 + 1, 1);
        v15 = v26;
        v16 = v27;
        v17 = sub_23AA22CF4((uint64_t)v25, v26);
        MEMORY[0x24BDAC7A8](v17);
        v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_23AA21094(v14, (uint64_t)v19, &v29, v15, v16);
        result = sub_23A963B3C((uint64_t)v25);
        v8 = v23;
        v4 = v24;
        v6 = v22;
      }
      else
      {
        result = sub_23A963B3C((uint64_t)v28);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        v5 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_23AA16254(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for FMFindableGroupItem();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_23A9732E0(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      v17 = a1(v12);
      if (v3)
      {
        sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_23A9E4BD0((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23AA1CFD4(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_23AA1CFD4(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_23A9E4BD0(v23, v15 + v16 + v19 * v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23AA1646C(uint64_t *a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  objc_class *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[40];
  int v58;
  unsigned __int16 v59;

  v6 = v5;
  v52 = a5;
  v53 = a4;
  v10 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23AA32E1C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v50 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v16);
  v49 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a3;
  v19 = OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_arSession;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_arSession) = 0;
  v20 = &OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context;
  v51 = v6;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1[2])
  {
    v20 = a1;
    v47 = v19;
    v58 = v18;
    v59 = v18;
    sub_23A9ABDD8(a2, (uint64_t)v57);
    v48 = a2;
    sub_23A9ABDD8(a2, (uint64_t)v54);
    v21 = v55;
    if (v55)
    {
      v22 = v56;
      sub_23A96545C(v54, v55);
      (*(void (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
      sub_23A963B3C((uint64_t)v54);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      v24 = v53;
      if (v23 != 1)
      {
        v25 = (uint64_t)v50;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v50, v12, v13);
LABEL_12:
        v34 = v49;
        sub_23A9C7D7C(&v59, (uint64_t)v20, (uint64_t)v57, v25, v24, v49);
        v30 = v51;
        sub_23A9E4BD0(v34, v51 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
        v35 = v58;
        *(_WORD *)(v30 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology) = v58;
        v36 = *(void **)(v30 + v47);
        v37 = v52;
        *(_QWORD *)(v30 + v47) = v52;
        v38 = v37;

        swift_beginAccess();
        v39 = swift_bridgeObjectRetain();
        v40 = sub_23A9F6C6C(v39);
        swift_bridgeObjectRelease();
        LOWORD(v54[0]) = v35;
        v41 = (objc_class *)type metadata accessor for FMFindingLocalizer();
        v42 = objc_allocWithZone(v41);
        v43 = v38;
        v44 = sub_23A97353C(v40, (__int16 *)v54, v37);
        v45 = (uint64_t *)(v30 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer);
        v45[3] = (uint64_t)v41;
        v45[4] = (uint64_t)&off_250BC0A78;
        *v45 = v44;
        *(_QWORD *)(*(_QWORD *)(v44 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline)
                  + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate
                  + 8) = &off_250BC5F60;
        swift_unknownObjectWeakAssign();

        sub_23A9683BC(v48, &qword_2569D53C8);
        return v30;
      }
    }
    else
    {
      sub_23A9683BC((uint64_t)v54, &qword_2569D53C8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
      v24 = v53;
    }
    if (v20[2])
    {
      sub_23A963A14((uint64_t)(v20 + 4), (uint64_t)v54);
      v32 = v55;
      v33 = v56;
      sub_23A96545C(v54, v55);
      v25 = (uint64_t)v50;
      (*(void (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
      sub_23A963B3C((uint64_t)v54);
      sub_23A9683BC((uint64_t)v12, (uint64_t *)&unk_2569D5D30);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_2569D4AC0 != -1)
LABEL_15:
    swift_once();
  v26 = sub_23AA32EA0();
  sub_23A9620E8(v26, (uint64_t)qword_2569E0040);
  v27 = sub_23AA32E88();
  v28 = sub_23AA3320C();
  v29 = os_log_type_enabled(v27, v28);
  v30 = v51;
  if (v29)
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_23A95E000, v27, v28, "🧭 FMFindingSession: Empty findables list passed in.", v31, 2u);
    MEMORY[0x23B85DB24](v31, -1, -1);
  }

  type metadata accessor for FMFindingSession.Error(0);
  sub_23A961DE4(&qword_2569D8C80, type metadata accessor for FMFindingSession.Error, (uint64_t)&unk_23AA3A6E0);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  sub_23A9683BC(a2, &qword_2569D53C8);
  sub_23A972074(v30 + v20[171]);
  type metadata accessor for FMFindingSession(0);
  swift_deallocPartialClassInstance();
  return v30;
}

uint64_t FMFindingSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v2 = sub_23AA32EA0();
  sub_23A9620E8(v2, (uint64_t)qword_2569E0040);
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23A95E000, v3, v4, "FMFindingSession deinit", v5, 2u);
    MEMORY[0x23B85DB24](v5, -1, -1);
  }

  sub_23A973324(v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23A963B3C(v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer);

  sub_23A972074(v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate);
  return v1;
}

uint64_t sub_23AA16AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int128 v17[2];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v1 = sub_23AA32E1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v8, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v9 = *((_QWORD *)v7 + 1);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_23AA1D250((uint64_t)&v7[*(int *)(v5 + 36)]), (v11 & 1) != 0))
  {
    sub_23A963A14(*(_QWORD *)(v9 + 56) + 40 * v10, (uint64_t)v17);
    sub_23A963B98(v17, (uint64_t)v18);
    sub_23A973324((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v12 = v19;
    v13 = v20;
    sub_23A96545C(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    v14 = sub_23AA32DE0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_23A963B3C((uint64_t)v18);
    return v14;
  }
  else
  {
    result = sub_23AA335A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AA16C84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t result;
  __int128 v11[2];

  v3 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v7 = *((_QWORD *)v5 + 1);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_23AA1D250((uint64_t)&v5[*(int *)(v3 + 36)]), (v9 & 1) != 0))
  {
    sub_23A963A14(*(_QWORD *)(v7 + 56) + 40 * v8, (uint64_t)v11);
    sub_23A963B98(v11, a1);
    return sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  }
  else
  {
    result = sub_23AA335A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AA16DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (unsigned __int16 *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23AA22E34(a1, v6);
  swift_endAccess();
  if (MEMORY[0x23B85DBF0](v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate))
  {
    sub_23A9732E0(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    sub_23AA137C0(v1, v5);
    swift_unknownObjectRelease();
    sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  }
  return sub_23A973324(a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
}

void sub_23AA16EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for FMFindingSessionState();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v30 - v8;
  v10 = v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  v12 = sub_23AA1C210(a1, v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v13 = sub_23AA32EA0();
    sub_23A9620E8(v13, (uint64_t)qword_2569E0040);
    swift_bridgeObjectRetain_n();
    v14 = sub_23AA32E88();
    v15 = sub_23AA33218();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v32 = v4;
      v17 = (uint8_t *)v16;
      v31 = swift_slowAlloc();
      v35 = v31;
      *(_DWORD *)v17 = 136315138;
      v30[1] = v17 + 4;
      swift_bridgeObjectRetain();
      sub_23A964084(&qword_2569D8870);
      sub_23AA1D2BC();
      v18 = sub_23AA33188();
      v33 = v2;
      v20 = v19;
      swift_bridgeObjectRelease();
      v34 = sub_23A964DBC(v18, v20, &v35);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v14, v15, "🧭 FMFindingSession: Updating grouped items: %s", v17, 0xCu);
      v21 = v31;
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v21, -1, -1);
      v22 = v17;
      v4 = v32;
      MEMORY[0x23B85DB24](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_23A9732E0(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v23 = *(_WORD *)v7;
    v24 = *((_QWORD *)v7 + 1);
    sub_23A9ABDD8((uint64_t)(v7 + 24), (uint64_t)(v9 + 24));
    v25 = *(int *)(v4 + 36);
    v26 = &v7[v25];
    v27 = &v9[v25];
    v28 = sub_23AA32E1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v26, v28);
    v29 = *((_QWORD *)v7 + 8);
    *(_WORD *)v9 = v23;
    *((_QWORD *)v9 + 8) = v29;
    *((_QWORD *)v9 + 1) = v24;
    *((_QWORD *)v9 + 2) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23A973324((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    sub_23AA16DC8((uint64_t)v9);
    sub_23AA17918();
  }
}

void sub_23AA171F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for FMFindingSession.Error(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MEMORY[0x23B85DBF0](v0 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate))
  {
    swift_storeEnumTagMultiPayload();
    sub_23AA13CF4((uint64_t)v3);
    swift_unknownObjectRelease();
    sub_23A973324((uint64_t)v3, type metadata accessor for FMFindingSession.Error);
  }
  sub_23AA17710();
}

uint64_t sub_23AA172A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for FMFindingSession.Error(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MEMORY[0x23B85DBF0](v0 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate))
  {
    swift_storeEnumTagMultiPayload();
    sub_23AA13CF4((uint64_t)v4);
    swift_unknownObjectRelease();
    sub_23A973324((uint64_t)v4, type metadata accessor for FMFindingSession.Error);
  }
  if (qword_2569D4AC0 != -1)
    swift_once();
  v5 = sub_23AA32EA0();
  sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
  v6 = sub_23AA32E88();
  v7 = sub_23AA33218();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23A95E000, v6, v7, "🧭 FMFindingSession: Stopping finding session", v8, 2u);
    MEMORY[0x23B85DB24](v8, -1, -1);
  }

  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 24);
  v11 = v9[4];
  sub_23A96545C(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v10, v11);
}

uint64_t sub_23AA1742C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];
  uint64_t v27;
  _BYTE v28[40];

  v24 = type metadata accessor for FMFindingSessionState();
  v2 = MEMORY[0x24BDAC7A8](v24);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - v5;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
  sub_23A963A14((uint64_t)a1, (uint64_t)v28);
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v27 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_23A963A14((uint64_t)v28, (uint64_t)v26);
    sub_23A964084((uint64_t *)&unk_2569D63B0);
    v12 = sub_23AA32FFC();
    v26[0] = sub_23A964DBC(v12, v13, &v27);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A963B3C((uint64_t)v28);
    _os_log_impl(&dword_23A95E000, v8, v9, "🧭 FMFindingSession: Selecting new part: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v11, -1, -1);
    MEMORY[0x23B85DB24](v10, -1, -1);
  }
  else
  {
    sub_23A963B3C((uint64_t)v28);
  }

  v14 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v14, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v15 = *(_WORD *)v4;
  v16 = *((_QWORD *)v4 + 1);
  sub_23A9ABDD8((uint64_t)(v4 + 24), (uint64_t)v28);
  v17 = a1[3];
  v18 = a1[4];
  sub_23A96545C(a1, v17);
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 16);
  swift_bridgeObjectRetain();
  v19(v17, v18);
  v20 = *((_QWORD *)v4 + 8);
  v21 = *((_QWORD *)v4 + 2);
  *(_WORD *)v6 = v15;
  *((_QWORD *)v6 + 1) = v16;
  *((_QWORD *)v6 + 8) = v20;
  sub_23A9C83B4((uint64_t)v28, (uint64_t)(v6 + 24));
  *((_QWORD *)v6 + 2) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23A973324((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  return sub_23AA16DC8((uint64_t)v6);
}

void sub_23AA17710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for FMFindingSessionState();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v21 - v6;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  v9 = sub_23AA32E88();
  v10 = sub_23AA33218();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23A95E000, v9, v10, "🧭 FMFindingSession: Reset", v11, 2u);
    MEMORY[0x23B85DB24](v11, -1, -1);
  }

  v12 = v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v13 = sub_23AA20730(*((_QWORD *)v5 + 8));
  v14 = *(_WORD *)v5;
  v15 = *((_QWORD *)v5 + 1);
  sub_23A9ABDD8((uint64_t)(v5 + 24), (uint64_t)(v7 + 24));
  v16 = *(int *)(v2 + 36);
  v17 = &v5[v16];
  v18 = &v7[v16];
  v19 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, v17, v19);
  v20 = *((_QWORD *)v5 + 2);
  *(_WORD *)v7 = v14;
  *((_QWORD *)v7 + 8) = v13;
  *((_QWORD *)v7 + 1) = v15;
  *((_QWORD *)v7 + 2) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23AA16DC8((uint64_t)v7);
  sub_23AA17918();
}

void sub_23AA17918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  void *v44;
  _QWORD v45[26];
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = sub_23AA32EA0();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23AA32E1C();
  v58 = *(_QWORD *)(v59 - 8);
  v2 = MEMORY[0x24BDAC7A8](v59);
  v45[23] = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v56 = (char *)v45 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v45[24] = (char *)v45 - v6;
  v60 = type metadata accessor for FMFindingSessionState();
  v7 = MEMORY[0x24BDAC7A8](v60);
  v45[17] = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v45[19] = (char *)v45 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v45[16] = (char *)v45 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v45[18] = (char *)v45 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v45[25] = (char *)v45 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v45[22] = (char *)v45 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v45[21] = (char *)v45 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v51 = (char *)v45 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v45[20] = (char *)v45 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v45 - v25;
  v57 = v0;
  v27 = v0 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  v52 = v27;
  sub_23A9732E0(v27, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v28 = *((_QWORD *)v26 + 8);
  if (*(_QWORD *)(v28 + 16))
  {
    v29 = sub_23AA1D250((uint64_t)&v26[*(int *)(v60 + 36)]);
    if ((v30 & 1) != 0)
    {
      v31 = *(_QWORD *)(v28 + 56) + 104 * v29;
      v32 = *(void **)(v31 + 16);
      v33 = *(void **)(v31 + 24);
      v34 = *(_QWORD *)(v31 + 32);
      v35 = *(_QWORD *)(v31 + 40);
      v36 = *(_QWORD *)(v31 + 48);
      v37 = *(_QWORD *)(v31 + 56);
      v38 = *(_QWORD *)(v31 + 64);
      v39 = *(_QWORD *)(v31 + 72);
      v40 = *(_QWORD *)(v31 + 80);
      v41 = *(_QWORD *)(v31 + 88);
      v42 = *(_DWORD *)(v31 + 96);
      v43 = *(_QWORD *)v31;
      v46 = *(_QWORD *)(v31 + 8);
      v44 = v32;
      v47 = v33;
      v48 = v34;
      v49 = v35;
      v50 = v36;
      sub_23A963BDC(v43, v46, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42);
      sub_23A973324((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      if ((v42 | 0x2000000u) >> 25 == 3)
      {
        sub_23A963F38(v43, v46, v44, v47, v48, v49, v50, v37, v38, v39, v40, v41, v42);
        JUMPOUT(0x23AA17E24);
      }
      v45[10] = v41;
      v45[11] = v40;
      v45[12] = v39;
      v45[13] = v38;
      v45[14] = v43;
      v45[15] = v44;
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x23AA18E9CLL);
}

uint64_t sub_23AA17E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  int v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  int v72;
  uint64_t result;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  int v115;

  sub_23A963F38(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9, v10, v11, v12);
  v18 = *(_QWORD *)(v17 - 360);
  sub_23A9732E0(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v19 = v13;
  v20 = *(_QWORD *)(v13 + 8);
  swift_bridgeObjectRetain_n();
  v21 = sub_23A9F6C6C(v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 - 168) = v21;
  sub_23A9E1D24((_QWORD **)(v17 - 168));
  v22 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v22);
  v114 = v19;
  v24 = sub_23AA16070((uint64_t)sub_23AA22E78, (uint64_t)&v113, v23);
  sub_23A973324(v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v25 = sub_23A9D44C8(v24);
  *(_QWORD *)(v17 - 416) = 0;
  swift_bridgeObjectRelease();
  v26 = sub_23AA2161C(v25);
  swift_bridgeObjectRelease();
  if (qword_2569D4AC0 != -1)
    swift_once();
  v27 = sub_23A9620E8(v15, (uint64_t)qword_2569E0040);
  v28 = *(_QWORD *)(v17 - 384);
  v29 = *(void (**)(uint64_t))(v28 + 16);
  v30 = *(_QWORD *)(v17 - 392);
  *(_QWORD *)(v17 - 408) = v27;
  v29(v30);
  swift_retain_n();
  v31 = sub_23AA32E88();
  v32 = v15;
  v33 = sub_23AA33200();
  v34 = os_log_type_enabled(v31, (os_log_type_t)v33);
  v35 = *(_QWORD *)(v17 - 352);
  if (v34)
  {
    *(_DWORD *)(v17 - 440) = v33;
    *(_QWORD *)(v17 - 424) = v26;
    v36 = v14;
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    *(_QWORD *)(v17 - 432) = v38;
    *(_QWORD *)(v17 - 248) = v38;
    *(_DWORD *)v37 = 136315394;
    v39 = v36;
    v40 = *(_QWORD *)(v17 - 488);
    sub_23A9732E0(v36, v40, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v41 = *(_QWORD *)(v40 + 8);
    if (!*(_QWORD *)(v41 + 16) || (v42 = sub_23AA1D250(v40 + *(int *)(*(_QWORD *)(v17 - 336) + 36)), (v43 & 1) == 0))
    {
      swift_release_n();
      goto LABEL_47;
    }
    sub_23A963A14(*(_QWORD *)(v41 + 56) + 40 * v42, v17 - 208);
    sub_23A963B98((__int128 *)(v17 - 208), v17 - 168);
    sub_23A973324(v40, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    sub_23A964084((uint64_t *)&unk_2569D63B0);
    v44 = sub_23AA32FFC();
    *(_QWORD *)(v17 - 168) = sub_23A964DBC(v44, v45, (uint64_t *)(v17 - 248));
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    v46 = *(_QWORD *)(v17 - 360);
    swift_release_n();
    *(_WORD *)(v37 + 12) = 2080;
    v47 = *(_QWORD *)(v17 - 480);
    sub_23A9732E0(v36, v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v48 = sub_23A9C79F0();
    v50 = v49;
    sub_23A973324(v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    *(_QWORD *)(v17 - 168) = sub_23A964DBC(v48, v50, (uint64_t *)(v17 - 248));
    v18 = v46;
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23A95E000, v31, (os_log_type_t)*(_DWORD *)(v17 - 440), "FMFindingSession currentFindable: %s and name: %s", (uint8_t *)v37, 0x16u);
    v51 = *(_QWORD *)(v17 - 432);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v51, -1, -1);
    v52 = v37;
    v14 = v39;
    MEMORY[0x23B85DB24](v52, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v17 - 384) + 8))(*(_QWORD *)(v17 - 392), *(_QWORD *)(v17 - 376));
    v53 = *(_QWORD *)(v17 - 344);
    v16 = *(_QWORD *)(v17 - 368);
    v35 = *(_QWORD *)(v17 - 352);
    v26 = *(_QWORD *)(v17 - 424);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v32);
    v53 = *(_QWORD *)(v17 - 344);
  }
  v54 = *(_QWORD *)(v17 - 456);
  sub_23A9732E0(v14, v54, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v55 = *(_QWORD *)(v54 + 8);
  if (!*(_QWORD *)(v55 + 16))
    goto LABEL_47;
  v56 = sub_23AA1D250(v54 + *(int *)(*(_QWORD *)(v17 - 336) + 36));
  if ((v57 & 1) == 0)
    goto LABEL_47;
  sub_23A963A14(*(_QWORD *)(v55 + 56) + 40 * v56, v17 - 208);
  sub_23A963B98((__int128 *)(v17 - 208), v17 - 168);
  sub_23A973324(v54, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v58 = *(_QWORD *)(v17 - 144);
  v59 = *(_QWORD *)(v17 - 136);
  sub_23A96545C((_QWORD *)(v17 - 168), v58);
  (*(void (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
  v60 = sub_23AA1A7DC(v16, v26);
  v61 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v61(v16, v53);
  sub_23A963B3C(v17 - 168);
  sub_23A9ABDD8(v14 + 24, v17 - 208);
  if (*(_QWORD *)(v17 - 184))
  {
    *(_DWORD *)(v17 - 352) = v60;
    *(_QWORD *)(v17 - 376) = v14 + 24;
    sub_23A963B98((__int128 *)(v17 - 208), v17 - 168);
    v62 = *(_QWORD *)(v17 - 144);
    v63 = *(_QWORD *)(v17 - 136);
    sub_23A96545C((_QWORD *)(v17 - 168), v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 16))(v62, v63);
    v64 = sub_23AA1A7DC(v16, v26);
    swift_bridgeObjectRelease();
    v61(v16, v53);
    swift_retain();
    v65 = swift_bridgeObjectRetain();
    v66 = v53;
    v67 = sub_23AA2110C(v65, v18);
    swift_release();
    swift_bridgeObjectRelease();
    if (v67)
    {
      v68 = *(_QWORD *)(v17 - 144);
      v69 = *(_QWORD *)(v17 - 136);
      sub_23A96545C((_QWORD *)(v17 - 168), v68);
      (*(void (**)(uint64_t, uint64_t))(v69 + 16))(v68, v69);
      v70 = sub_23AA1A7DC(v16, v67);
      swift_bridgeObjectRelease();
      v71 = v16;
      v61(v16, v66);
      v72 = v70 & 1;
    }
    else
    {
      v71 = v16;
      v72 = 2;
    }
    sub_23A963A14(v17 - 168, v17 - 208);
    if ((v64 & 1) != 0)
    {
      v81 = *(_QWORD *)(v17 - 512);
      sub_23A9732E0(v14, v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      v82 = *(_QWORD *)(v81 + 8);
      if (!*(_QWORD *)(v82 + 16))
        goto LABEL_47;
      v83 = v71;
      v84 = sub_23AA1D250(v81 + *(int *)(*(_QWORD *)(v17 - 336) + 36));
      if ((v85 & 1) == 0)
        goto LABEL_47;
      sub_23A963A14(*(_QWORD *)(v82 + 56) + 40 * v84, v17 - 288);
      sub_23A963B98((__int128 *)(v17 - 288), v17 - 248);
      sub_23A973324(v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      v86 = *(_QWORD *)(v17 - 224);
      v87 = *(_QWORD *)(v17 - 216);
      sub_23A96545C((_QWORD *)(v17 - 248), v86);
      (*(void (**)(uint64_t, uint64_t))(v87 + 16))(v86, v87);
      v88 = *(_QWORD *)(v17 - 184);
      v89 = *(_QWORD *)(v17 - 176);
      sub_23A96545C((_QWORD *)(v17 - 208), v88);
      v90 = *(_QWORD *)(v17 - 472);
      (*(void (**)(uint64_t, uint64_t))(v89 + 16))(v88, v89);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v91 = *(_QWORD *)(v17 - 344);
      LOBYTE(v88) = sub_23AA32FA8();
      v61(v90, v91);
      v61(v83, v91);
      sub_23A963B3C(v17 - 248);
      sub_23A963B3C(v17 - 208);
      if ((v88 & 1) == 0)
      {
        v92 = sub_23AA32E88();
        v93 = sub_23AA33218();
        if (!os_log_type_enabled(v92, v93))
        {
LABEL_35:

          sub_23AA1742C((_QWORD *)(v17 - 168));
          return sub_23A963B3C(v17 - 168);
        }
        v94 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v94 = 0;
        v95 = "🧭 FMFindingSession: Transitioning back to pre-selected part.";
LABEL_34:
        _os_log_impl(&dword_23A95E000, v92, v93, v95, v94, 2u);
        MEMORY[0x23B85DB24](v94, -1, -1);
        goto LABEL_35;
      }
    }
    else
    {
      sub_23A963B3C(v17 - 208);
      v83 = v71;
      if ((*(_DWORD *)(v17 - 352) & 1) == 0)
      {
        v106 = sub_23AA32E88();
        v107 = sub_23AA33218();
        if (os_log_type_enabled(v106, v107))
        {
          v108 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v108 = 0;
          _os_log_impl(&dword_23A95E000, v106, v107, "🧭 FMFindingSession: Trying to find a findable that ranges and is in the same group as primary part.", v108, 2u);
          MEMORY[0x23B85DB24](v108, -1, -1);
        }

        sub_23A9ABDD8(*(_QWORD *)(v17 - 376), v17 - 288);
        if (*(_QWORD *)(v17 - 264))
        {
          sub_23A963B98((__int128 *)(v17 - 288), v17 - 248);
        }
        else
        {
          v109 = *(_QWORD *)(v17 - 528);
          sub_23A9732E0(v14, v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
          v110 = *(_QWORD *)(v109 + 8);
          if (!*(_QWORD *)(v110 + 16))
            goto LABEL_47;
          v111 = sub_23AA1D250(v109 + *(int *)(*(_QWORD *)(v17 - 336) + 36));
          if ((v112 & 1) == 0)
            goto LABEL_47;
          sub_23A963A14(*(_QWORD *)(v110 + 56) + 40 * v111, v17 - 328);
          sub_23A963B98((__int128 *)(v17 - 328), v17 - 248);
          sub_23A973324(v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
          sub_23A9683BC(v17 - 288, &qword_2569D53C8);
        }
        sub_23AA18F28(v17 - 248);
        sub_23A963B3C(v17 - 248);
        return sub_23A963B3C(v17 - 168);
      }
    }
    v96 = *(_QWORD *)(v17 - 504);
    sub_23A9732E0(v14, v96, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v97 = *(_QWORD *)(v96 + 8);
    if (*(_QWORD *)(v97 + 16))
    {
      v98 = sub_23AA1D250(v96 + *(int *)(*(_QWORD *)(v17 - 336) + 36));
      if ((v99 & 1) != 0)
      {
        sub_23A963A14(*(_QWORD *)(v97 + 56) + 40 * v98, v17 - 288);
        sub_23A963B98((__int128 *)(v17 - 288), v17 - 248);
        sub_23A973324(v96, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
        v100 = *(_QWORD *)(v17 - 224);
        v101 = *(_QWORD *)(v17 - 216);
        sub_23A96545C((_QWORD *)(v17 - 248), v100);
        (*(void (**)(uint64_t, uint64_t))(v101 + 16))(v100, v101);
        v102 = *(_QWORD *)(v17 - 144);
        v103 = *(_QWORD *)(v17 - 136);
        sub_23A96545C((_QWORD *)(v17 - 168), v102);
        v104 = *(_QWORD *)(v17 - 472);
        (*(void (**)(uint64_t, uint64_t))(v103 + 16))(v102, v103);
        sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v105 = *(_QWORD *)(v17 - 344);
        LOBYTE(v102) = sub_23AA32FA8();
        v61(v104, v105);
        v61(v83, v105);
        sub_23A963B3C(v17 - 248);
        if ((v102 & 1) != 0 || v72 == 2 || (v72 & 1) != 0)
          return sub_23A963B3C(v17 - 168);
        v92 = sub_23AA32E88();
        v93 = sub_23AA33218();
        if (!os_log_type_enabled(v92, v93))
          goto LABEL_35;
        v94 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v94 = 0;
        v95 = "🧭 FMFindingSession: Current findable is not primary part and it's not grouped with primary part any longer"
              ". Transitioning back to pre-selected part.";
        goto LABEL_34;
      }
    }
LABEL_47:
    v115 = 0;
    v114 = 30;
    sub_23AA335A8();
    __break(1u);
    JUMPOUT(0x23AA18F1CLL);
  }
  swift_bridgeObjectRelease();
  result = sub_23A9683BC(v17 - 208, &qword_2569D53C8);
  if ((v60 & 1) != 0)
    return result;
  v74 = sub_23AA32E88();
  v75 = sub_23AA33218();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    _os_log_impl(&dword_23A95E000, v74, v75, "🧭 FMFindingSession: Trying to find a findable that ranges and is in the same group as seelected part.", v76, 2u);
    MEMORY[0x23B85DB24](v76, -1, -1);
  }

  v77 = *(_QWORD *)(v17 - 520);
  sub_23A9732E0(v14, v77, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v78 = *(_QWORD *)(v77 + 8);
  if (!*(_QWORD *)(v78 + 16))
    goto LABEL_47;
  v79 = sub_23AA1D250(v77 + *(int *)(*(_QWORD *)(v17 - 336) + 36));
  if ((v80 & 1) == 0)
    goto LABEL_47;
  sub_23A963A14(*(_QWORD *)(v78 + 56) + 40 * v79, v17 - 208);
  sub_23A963B98((__int128 *)(v17 - 208), v17 - 168);
  sub_23A973324(v77, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23AA18F28(v17 - 168);
  return sub_23A963B3C(v17 - 168);
}

void sub_23AA18F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A964084((uint64_t *)&unk_2569D8C18);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 16);
  v31 = a1;
  swift_bridgeObjectRetain();
  v13 = sub_23AA159D0(sub_23AA22A24, (uint64_t)v30, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = sub_23AA3314C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
    sub_23A963A14(a1, (uint64_t)&v34);
    sub_23AA33134();
    swift_retain();
    v15 = sub_23AA33128();
    v16 = (_QWORD *)swift_allocObject();
    v17 = MEMORY[0x24BEE6930];
    v16[2] = v15;
    v16[3] = v17;
    v16[4] = v2;
    v16[5] = v13;
    sub_23A963B98(&v34, (uint64_t)(v16 + 6));
    sub_23AA1B5EC((uint64_t)v10, (uint64_t)&unk_2569D8C30, (uint64_t)v16);
    swift_release();
  }
  else
  {
    if (qword_2569D4AC0 != -1)
      swift_once();
    v18 = sub_23AA32EA0();
    sub_23A9620E8(v18, (uint64_t)qword_2569E0040);
    sub_23A963A14(a1, (uint64_t)&v34);
    v19 = sub_23AA32E88();
    v20 = sub_23AA3320C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v33 = v29;
      *(_DWORD *)v21 = 136315138;
      v28 = v21 + 4;
      v23 = v35;
      v22 = v36;
      sub_23A96545C(&v34, v35);
      (*(void (**)(uint64_t, uint64_t))(v22 + 16))(v23, v22);
      sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v24 = sub_23AA33710();
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v32 = sub_23A964DBC(v24, v26, &v33);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      sub_23A963B3C((uint64_t)&v34);
      _os_log_impl(&dword_23A95E000, v19, v20, "🧭 FMFindingSession: Findable: %s does not belong to any group.", v21, 0xCu);
      v27 = v29;
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v27, -1, -1);
      MEMORY[0x23B85DB24](v21, -1, -1);
    }
    else
    {
      sub_23A963B3C((uint64_t)&v34);
    }

  }
}

id sub_23AA19384()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1AvailabilityHelper.FMR1AvailabilityHelperTrampoline();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23AA193C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  void (**v10)(void *, char);
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  objc_super v17;

  v2 = sub_23A964084(&qword_2569D8C48);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(_QWORD *)(v7 + ((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v8 = (objc_class *)type metadata accessor for FMR1AvailabilityHelper.FMR1AvailabilityHelperTrampoline();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = (void (**)(void *, char))&v9[OBJC_IVAR____TtCC11FMFindingUI22FMR1AvailabilityHelper32FMR1AvailabilityHelperTrampoline_handler];
  *v10 = sub_23AA22C90;
  v10[1] = (void (*)(void *, char))v7;
  v17.receiver = v9;
  v17.super_class = v8;
  swift_retain();
  v11 = objc_msgSendSuper2(&v17, sel_init);
  sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
  v12 = v11;
  v13 = (void *)sub_23AA33290();
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7BA58]), sel_initWithDelegate_queue_, v12, v13);

  swift_beginAccess();
  v15 = *(void **)(v5 + 16);
  *(_QWORD *)(v5 + 16) = v14;
  swift_release();

}

void sub_23AA1958C(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    sub_23A964084(&qword_2569D8C48);
    sub_23AA33110();
  }
  else
  {
    sub_23A964084(&qword_2569D8C48);
    sub_23AA3311C();
  }
  swift_beginAccess();
  swift_beginAccess();
  v6 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = 0;

}

uint64_t static Set<>.from(findables:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v1 = sub_23A9D44C8(a1);
  v2 = sub_23AA2161C(v1);
  swift_bridgeObjectRelease();
  sub_23A964084((uint64_t *)&unk_2569D8880);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
  *(_QWORD *)(inited + 32) = v2;
  v4 = sub_23AA21F14(inited);
  swift_setDeallocating();
  sub_23A964084(&qword_2569D8870);
  swift_arrayDestroy();
  return v4;
}

void sub_23AA196D8()
{
  char *v0;

  type metadata accessor for FMFindingLocalizerError();
  v0 = (char *)sub_23AA19720 + 4 * byte_23AA3A582[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AA19720()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  type metadata accessor for FMFindingSession.Error(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t FMFindingSession.__deallocating_deinit()
{
  FMFindingSession.deinit();
  return swift_deallocClassInstance();
}

void FMFindingSession.findingTechnology.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
}

uint64_t FMFindingSession.__allocating_init(itemGroupFindables:primaryPart:groupName:findingTechnology:arSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _UNKNOWN **v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106[3];
  void (*v107)(_QWORD, _QWORD, _QWORD, _QWORD);
  _UNKNOWN **v108;
  uint64_t v109;

  v83 = a6;
  v101 = a3;
  v86 = a2;
  v9 = sub_23AA32E1C();
  v102 = *(_QWORD *)(v9 - 8);
  v103 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v99 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v80 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v80 - v15;
  v17 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v17);
  v94 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = (_QWORD *)type metadata accessor for FMFindableGroupItem();
  v19 = *(v92 - 1);
  v20 = MEMORY[0x24BDAC7A8](v92);
  v97 = (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v80 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (uint64_t *)((char *)&v80 - v25);
  v82 = *a5;
  *(_QWORD *)&v104 = MEMORY[0x24BEE4AF8];
  v27 = *(_QWORD *)(a1 + 16);
  v85 = a1;
  v87 = v16;
  v95 = v27;
  v100 = v14;
  if (v27)
  {
    v28 = 0;
    v93 = a1 + 32;
    v29 = a4;
    do
    {
      v98 = v28;
      v30 = *(_QWORD *)(v93 + 8 * v28);
      v31 = *(_QWORD *)(v30 + 16);
      if (v31)
      {
        v32 = v30 + 32;
        v96 = *(_QWORD *)(v93 + 8 * v28);
        swift_bridgeObjectRetain();
        v33 = MEMORY[0x24BEE4AF8];
        do
        {
          sub_23A963A14(v32, (uint64_t)v106);
          swift_bridgeObjectRetain();
          sub_23A9C91AC(v106, v101, a4, v26);
          sub_23A9E4BD0((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v33 = sub_23AA1CBCC(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
          v35 = *(_QWORD *)(v33 + 16);
          v34 = *(_QWORD *)(v33 + 24);
          if (v35 >= v34 >> 1)
            v33 = sub_23AA1CBCC(v34 > 1, v35 + 1, 1, v33);
          *(_QWORD *)(v33 + 16) = v35 + 1;
          sub_23A9E4BD0((uint64_t)v24, v33+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
          v32 += 40;
          --v31;
          a4 = v29;
        }
        while (v31);
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = MEMORY[0x24BEE4AF8];
      }
      v28 = v98 + 1;
      sub_23AA20CA0(v33);
    }
    while (v28 != v95);
    swift_bridgeObjectRelease();
    v36 = v104;
    a1 = v85;
    v16 = v87;
    v14 = v100;
    if (*(_QWORD *)(v104 + 16))
    {
LABEL_14:
      v37 = v36 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      v101 = v36;
      swift_bridgeObjectRetain();
      v38 = v97;
      sub_23A9732E0(v37, v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      v39 = v92;
      v107 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v92;
      v108 = &off_250BC2D60;
      v40 = sub_23A9E4754(v106);
      sub_23A9732E0(v38, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
      v41 = (char *)&loc_23AA19C68
          + 4 * byte_23AA3A588[*((unsigned __int8 *)sub_23A96545C(v106, (uint64_t)v107) + *((int *)v39 + 10))];
      __asm { BR              X9 }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_14;
  }
  sub_23A9ABDD8(v86, (uint64_t)&v104);
  v42 = v103;
  v43 = v94;
  if (v105)
  {
    sub_23A963B98(&v104, (uint64_t)v106);
    sub_23A963B3C((uint64_t)v106);
  }
  else
  {
    sub_23A9683BC((uint64_t)&v104, &qword_2569D53C8);
  }
  v45 = v102;
  v81 = sub_23AA15F08(v36);
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(a1 + 16);
  if (v46)
  {
    *(_QWORD *)&v104 = MEMORY[0x24BEE4AF8];
    sub_23AA1CFB8(0, v46, 0);
    v47 = 0;
    v88 = a1 + 32;
    v89 = v46;
    do
    {
      v91 = v47;
      v48 = *(_QWORD *)(v88 + 8 * v47);
      v49 = *(_QWORD *)(v48 + 16);
      v90 = v48;
      if (v49)
      {
        v109 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_23AA1CF10(0, v49, 0);
        v50 = v48 + 32;
        v51 = v109;
        do
        {
          sub_23A963A14(v50, (uint64_t)v106);
          v52 = (uint64_t)v107;
          v53 = v108;
          sub_23A96545C(v106, (uint64_t)v107);
          ((void (*)(uint64_t, _UNKNOWN **))v53[2])(v52, v53);
          sub_23A963B3C((uint64_t)v106);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23AA1CF10(0, *(_QWORD *)(v51 + 16) + 1, 1);
            v51 = v109;
          }
          v55 = *(_QWORD *)(v51 + 16);
          v54 = *(_QWORD *)(v51 + 24);
          if (v55 >= v54 >> 1)
          {
            sub_23AA1CF10(v54 > 1, v55 + 1, 1);
            v51 = v109;
          }
          *(_QWORD *)(v51 + 16) = v55 + 1;
          v56 = v51
              + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
              + *(_QWORD *)(v45 + 72) * v55;
          v42 = v103;
          (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v56, v16, v103);
          v109 = v51;
          v50 += 40;
          --v49;
        }
        while (v49);
        v43 = v94;
      }
      else
      {
        swift_bridgeObjectRetain();
        v51 = MEMORY[0x24BEE4AF8];
      }
      v97 = sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v57 = sub_23AA33194();
      v96 = *(_QWORD *)(v51 + 16);
      if (v96)
      {
        v58 = 0;
        v95 = v51 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
        v101 = *(_QWORD *)(v45 + 72);
        v59 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v93 = v51;
        v59(v43, v95, v42);
        while (1)
        {
          v92 = *(_QWORD **)(v45 + 56);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v92)(v43, 0, 1, v42);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v42) == 1)
          {
            v16 = v87;
            goto LABEL_46;
          }
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v14, v43, v42);
          swift_bridgeObjectRetain();
          v65 = sub_23AA32F9C();
          v66 = -1 << *(_BYTE *)(v57 + 32);
          v67 = v65 & ~v66;
          v68 = *(_QWORD *)(v57 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67;
          v98 = v58;
          if ((v68 & 1) != 0)
          {
            v69 = ~v66;
            while (1)
            {
              v70 = v99;
              v71 = v103;
              v59(v99, *(_QWORD *)(v57 + 48) + v67 * v101, v103);
              sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v72 = sub_23AA32FA8();
              v64 = *(void (**)(char *, uint64_t))(v102 + 8);
              v64(v70, v71);
              if ((v72 & 1) != 0)
                break;
              v67 = (v67 + 1) & v69;
              if (((*(_QWORD *)(v57 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
                goto LABEL_33;
            }
            swift_bridgeObjectRelease();
            v45 = v102;
            v42 = v103;
            v14 = v100;
          }
          else
          {
LABEL_33:
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v61 = v99;
            v14 = v100;
            v62 = v103;
            v59(v99, (uint64_t)v100, v103);
            v106[0] = v57;
            v63 = (uint64_t)v61;
            v42 = v62;
            sub_23AA1F804(v63, v67, isUniquelyReferenced_nonNull_native);
            v57 = v106[0];
            swift_bridgeObjectRelease();
            v45 = v102;
            v64 = *(void (**)(char *, uint64_t))(v102 + 8);
          }
          v43 = v94;
          v58 = v98 + 1;
          v64(v14, v42);
          if (v58 == v96)
            break;
          v59(v43, v95 + v101 * v58, v42);
        }
        v16 = v87;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v92)(v43, 1, 1, v42);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v43, 1, 1, v42);
      }
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23AA1CFB8(0, *(_QWORD *)(v44 + 16) + 1, 1);
        v44 = v104;
      }
      v73 = v91;
      v75 = *(_QWORD *)(v44 + 16);
      v74 = *(_QWORD *)(v44 + 24);
      if (v75 >= v74 >> 1)
      {
        sub_23AA1CFB8(v74 > 1, v75 + 1, 1);
        v73 = v91;
        v44 = v104;
      }
      v47 = v73 + 1;
      *(_QWORD *)(v44 + 16) = v75 + 1;
      *(_QWORD *)(v44 + 8 * v75 + 32) = v57;
      v45 = v102;
    }
    while (v47 != v89);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x24BEE4AF8];
  }
  v76 = sub_23AA21F14(v44);
  swift_bridgeObjectRelease();
  v77 = v86;
  sub_23A9ABDD8(v86, (uint64_t)v106);
  LOWORD(v104) = v82;
  v78 = (*(uint64_t (**)(uint64_t, uint64_t *, __int128 *, uint64_t, uint64_t))(v84 + 208))(v81, v106, &v104, v76, v83);
  sub_23A9683BC(v77, &qword_2569D53C8);
  return v78;
}

void sub_23AA1A3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7[3];
  uint64_t v8;
  _UNKNOWN **v9;

  v2 = sub_23AA32E1C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for FMFindableGroupItem();
  v8 = v4;
  v9 = &off_250BC2D60;
  v5 = sub_23A9E4754(v7);
  sub_23A9732E0(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindableGroupItem);
  v6 = (char *)sub_23AA1A4AC + 4 * byte_23AA3A58D[*((unsigned __int8 *)sub_23A96545C(v7, v8) + *(int *)(v4 + 40))];
  __asm { BR              X10 }
}

uint64_t sub_23AA1A4AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_23A963A14(v1 - 120, v1 - 160);
  sub_23A963A14(v0, v1 - 200);
  sub_23A963B3C(v1 - 160);
  sub_23A963B3C(v1 - 200);
  sub_23A963B3C(v1 - 120);
  return 1;
}

uint64_t FMFindingSession.__allocating_init(findable:findingTechnology:arSession:)(uint64_t a1, __int16 *a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[2];
  uint64_t v15;
  __int16 v16;

  v6 = *a2;
  sub_23A964084(&qword_2569D8890);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23AA35F90;
  sub_23A963A14(a1, inited + 32);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  v16 = v6;
  v8 = sub_23A9D44C8(inited);
  v9 = sub_23AA2161C(v8);
  swift_bridgeObjectRelease();
  sub_23A964084((uint64_t *)&unk_2569D8880);
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_23AA35F90;
  *(_QWORD *)(v10 + 32) = v9;
  v11 = sub_23AA21F14(v10);
  swift_setDeallocating();
  sub_23A964084(&qword_2569D8870);
  swift_arrayDestroy();
  v12 = (*(uint64_t (**)(uint64_t, _OWORD *, __int16 *, uint64_t, uint64_t))(v3 + 208))(inited, v14, &v16, v11, a3);
  sub_23A963B3C(a1);
  return v12;
}

uint64_t sub_23AA1A760(uint64_t *a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, void *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_23AA1646C(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_23AA1A7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_23AA32E1C();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]), v6 = sub_23AA32F9C(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_23AA32FA8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_23AA1A960(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a2[3];
  v10 = a2[4];
  sub_23A96545C(a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  LOBYTE(a2) = sub_23AA1A7DC((uint64_t)v7, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

uint64_t sub_23AA1AA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  v7 = sub_23AA32E1C();
  v6[30] = v7;
  v6[31] = *(_QWORD *)(v7 - 8);
  v6[32] = swift_task_alloc();
  v6[33] = type metadata accessor for FMFindingSession.Error(0);
  v6[34] = swift_task_alloc();
  type metadata accessor for FMFindingSessionState();
  v6[35] = swift_task_alloc();
  sub_23AA33134();
  v6[36] = sub_23AA33128();
  v6[37] = sub_23AA33104();
  v6[38] = v8;
  return swift_task_switch();
}

uint64_t sub_23AA1AB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v3 = *(_QWORD *)(v1 + 8);
  swift_bridgeObjectRetain_n();
  v4 = sub_23A9F6C6C(v3);
  swift_bridgeObjectRelease();
  v23 = v4;
  sub_23A9E1D24(&v23);
  v5 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRelease();
  v8 = v23;
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v5;
  v10 = sub_23AA16070((uint64_t)sub_23AA22BD8, v9, (uint64_t)v8);
  swift_task_dealloc();
  sub_23A973324(v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v11 = sub_23A9D44C8(v10);
  swift_bridgeObjectRelease();
  v12 = sub_23AA2161C(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v13 = sub_23AA1EC98(v12, v6);
  swift_bridgeObjectRelease();
  swift_retain();
  v14 = sub_23AA21A14(v13, v7);
  *(_QWORD *)(v0 + 312) = v14;
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v0 + 320) = v15;
  if (v15)
  {
    v16 = v14 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23A963A14(v16, v0 + 96);
      v17 = *(_QWORD *)(v0 + 120);
      v18 = *(_QWORD *)(v0 + 128);
      sub_23A96545C((_QWORD *)(v0 + 96), v17);
      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
      LOBYTE(v17) = sub_23A9F19E0(v19);
      swift_bridgeObjectRelease();
      sub_23A963B3C(v0 + 96);
      if ((v17 & 1) != 0)
        break;
      v16 += 40;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
LABEL_6:
    v20 = 1;
  }
  *(_BYTE *)(v0 + 345) = v20;
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v21;
  *v21 = v0;
  v21[1] = sub_23AA1ADAC;
  return sub_23AA33740();
}

uint64_t sub_23AA1ADAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23AA1AE10()
{
  uint64_t v0;

  return swift_task_switch();
}

uint64_t sub_23AA1AE48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_release();
  v1 = *(_QWORD **)(v0 + 312);
  if (*(_QWORD *)(v0 + 320))
  {
    if (!v1[2])
    {
      __break(1u);
      goto LABEL_18;
    }
    sub_23A963A14((uint64_t)(v1 + 4), v0 + 136);
  }
  else
  {
    *(_QWORD *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 160))
  {
    v1 = (_QWORD *)(v0 + 16);
    sub_23A963B98((__int128 *)(v0 + 136), v0 + 16);
    if (qword_2569D4AC0 == -1)
    {
LABEL_7:
      v2 = sub_23AA32EA0();
      sub_23A9620E8(v2, (uint64_t)qword_2569E0040);
      v3 = sub_23AA32E88();
      v4 = sub_23AA33218();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_23A95E000, v3, v4, "🧭 FMFindingSession: Automatically transitioning to ranging part.", v5, 2u);
        MEMORY[0x23B85DB24](v5, -1, -1);
      }

      sub_23AA1742C(v1);
      sub_23A963B3C((uint64_t)v1);
      goto LABEL_16;
    }
LABEL_18:
    swift_once();
    goto LABEL_7;
  }
  sub_23A9683BC(v0 + 136, &qword_2569D53C8);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 232);
  v7 = sub_23AA32EA0();
  sub_23A9620E8(v7, (uint64_t)qword_2569E0040);
  sub_23A963A14(v6, v0 + 56);
  v8 = sub_23AA32E88();
  v9 = sub_23AA33218();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 256);
    v19 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 240);
    v11 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v11 = 136315138;
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    sub_23A96545C((_QWORD *)(v0 + 56), v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v14 = sub_23AA33710();
    v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v10, v18);
    *(_QWORD *)(v0 + 208) = sub_23A964DBC(v14, v16, &v21);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A963B3C(v0 + 56);
    _os_log_impl(&dword_23A95E000, v8, v9, "🧭 FMFindingSession: No ranging parts in the group for findable: %s.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v20, -1, -1);
    MEMORY[0x23B85DB24](v11, -1, -1);
  }
  else
  {
    sub_23A963B3C(v0 + 56);
  }

  sub_23AA1742C(*(_QWORD **)(v0 + 232));
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23AA1B1CC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 346) = *(_BYTE *)(v0 + 344);
  return swift_task_switch();
}

uint64_t sub_23AA1B1E4()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD **)(v0 + 216);
  v2 = *(unsigned __int8 *)(v0 + 346);
  v3 = *(_BYTE *)(v0 + 345);
  swift_release();
  if ((v3 & 1) == 0
    && (*(__int16 *)((_BYTE *)v1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology) & 0x80000000) == 0
    && v2
    && MEMORY[0x23B85DBF0](*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate))
  {
    v1 = *(_QWORD **)(v0 + 272);
    swift_storeEnumTagMultiPayload();
    sub_23AA13CF4((uint64_t)v1);
    swift_unknownObjectRelease();
    sub_23A973324((uint64_t)v1, type metadata accessor for FMFindingSession.Error);
  }
  v4 = *(_QWORD *)(v0 + 312);
  if (*(_QWORD *)(v0 + 320))
  {
    if (!*(_QWORD *)(v4 + 16))
    {
      __break(1u);
      goto LABEL_23;
    }
    sub_23A963A14(v4 + 32, v0 + 136);
  }
  else
  {
    *(_QWORD *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 160))
  {
    v1 = (_QWORD *)(v0 + 16);
    sub_23A963B98((__int128 *)(v0 + 136), v0 + 16);
    if (qword_2569D4AC0 == -1)
    {
LABEL_12:
      v5 = sub_23AA32EA0();
      sub_23A9620E8(v5, (uint64_t)qword_2569E0040);
      v6 = sub_23AA32E88();
      v7 = sub_23AA33218();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_23A95E000, v6, v7, "🧭 FMFindingSession: Automatically transitioning to ranging part.", v8, 2u);
        MEMORY[0x23B85DB24](v8, -1, -1);
      }

      sub_23AA1742C(v1);
      sub_23A963B3C((uint64_t)v1);
      goto LABEL_21;
    }
LABEL_23:
    swift_once();
    goto LABEL_12;
  }
  sub_23A9683BC(v0 + 136, &qword_2569D53C8);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v9 = *(_QWORD *)(v0 + 232);
  v10 = sub_23AA32EA0();
  sub_23A9620E8(v10, (uint64_t)qword_2569E0040);
  sub_23A963A14(v9, v0 + 56);
  v11 = sub_23AA32E88();
  v12 = sub_23AA33218();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 256);
    v22 = *(_QWORD *)(v0 + 248);
    v21 = *(_QWORD *)(v0 + 240);
    v14 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v24 = v23;
    *(_DWORD *)v14 = 136315138;
    v16 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 88);
    sub_23A96545C((_QWORD *)(v0 + 56), v16);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
    sub_23A961DE4((unint64_t *)&qword_2569D5D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_23AA33710();
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v13, v21);
    *(_QWORD *)(v0 + 208) = sub_23A964DBC(v17, v19, &v24);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    sub_23A963B3C(v0 + 56);
    _os_log_impl(&dword_23A95E000, v11, v12, "🧭 FMFindingSession: No ranging parts in the group for findable: %s.", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v23, -1, -1);
    MEMORY[0x23B85DB24](v14, -1, -1);
  }
  else
  {
    sub_23A963B3C(v0 + 56);
  }

  sub_23AA1742C(*(_QWORD **)(v0 + 232));
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23AA1B5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23AA3314C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23AA33140();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23A9683BC(a1, (uint64_t *)&unk_2569D8C18);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23AA33104();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_23AA1B738(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v4 = v3;
  v7 = type metadata accessor for FMFindingSessionState();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v25 - v11;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v13 = sub_23AA32EA0();
  sub_23A9620E8(v13, (uint64_t)qword_2569E0040);
  sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  v14 = sub_23AA32E88();
  v15 = sub_23AA33200();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v26 = v12;
    v18 = v17;
    v29[0] = v17;
    v27 = a3;
    *(_DWORD *)v16 = 136315138;
    v25[1] = v16 + 4;
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
    v19 = sub_23A99DA28();
    v20 = v4;
    v22 = v21;
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    v28 = sub_23A964DBC(v19, v22, v29);
    a3 = v27;
    sub_23AA333F8();
    v4 = v20;
    swift_bridgeObjectRelease();
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    _os_log_impl(&dword_23A95E000, v14, v15, "🧭 FMFindingSession: Received new state from FMFindingLocalizer: %s", v16, 0xCu);
    swift_arrayDestroy();
    v23 = v18;
    v12 = v26;
    MEMORY[0x23B85DB24](v23, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);
  }
  else
  {
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
    sub_23A963ED4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
  }

  v24 = v4 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v24, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23A9C8234(a3, a2, (uint64_t)v12);
  sub_23A973324((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  sub_23AA16DC8((uint64_t)v12);
  sub_23AA17918();
}

void sub_23AA1BA1C(_QWORD *a1, __int128 *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  __int128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[12];
  unsigned __int16 v76;
  unsigned __int8 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  char v90;

  v5 = v4;
  v64 = a4;
  v62 = a3;
  v65 = a1;
  sub_23A964108(a2, (uint64_t)v75);
  v60 = v75[0];
  v59 = v75[1];
  v58 = v75[2];
  v57 = v75[3];
  v56 = v75[4];
  v55 = v75[5];
  v54 = v75[6];
  v53 = v75[7];
  v52 = v75[8];
  v51 = v75[9];
  v50 = v75[10];
  v49 = v75[11];
  v48 = v76;
  v47 = v77;
  v7 = type metadata accessor for FMFindingSessionState();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v63 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v61 = (uint64_t)&v45 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - v12;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v14 = sub_23AA32EA0();
  v68 = sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
  v15 = sub_23AA32E88();
  v16 = sub_23AA33200();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23A95E000, v15, v16, "🧭 FMFindingSession: Received new measurement & trend from FMFindingLocalizer, but not updating state", v17, 2u);
    MEMORY[0x23B85DB24](v17, -1, -1);
  }
  v67 = a2;

  v66 = v5;
  v18 = v5 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  v46 = v18;
  sub_23A9732E0(v18, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v19 = *((_QWORD *)v13 + 8);
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_23AA1D250((uint64_t)&v13[*(int *)(v7 + 36)]), (v21 & 1) != 0))
  {
    v22 = *(_QWORD *)(v19 + 56) + 104 * v20;
    v23 = *(void **)(v22 + 24);
    v24 = *(_QWORD *)(v22 + 32);
    v25 = *(_QWORD *)(v22 + 40);
    v26 = *(_QWORD *)(v22 + 48);
    v27 = *(_QWORD *)(v22 + 56);
    v28 = *(_QWORD *)(v22 + 64);
    v29 = *(_QWORD *)(v22 + 72);
    v30 = *(_QWORD *)(v22 + 80);
    v31 = *(_QWORD *)(v22 + 88);
    v32 = *(unsigned int *)(v22 + 96);
    v33 = v32 | ((unint64_t)*(unsigned __int8 *)(v22 + 100) << 32);
    v44 = *(_DWORD *)(v22 + 96);
    v34 = *(_QWORD *)v22;
    v35 = *(_QWORD *)(v22 + 8);
    v71 = *(void **)(v22 + 16);
    v72 = v23;
    v73 = v24;
    v69 = v25;
    v70 = v26;
    sub_23A963BDC(v34, v35, v71, v23, v24, v25, v26, v27, v28, v29, v30, v31, v44);
    sub_23A973324((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    if ((v32 | 0x2000000) >> 25 == 3)
    {
      sub_23A963F38(v34, v35, v71, v72, v73, v69, v70, v27, v28, v29, v30, v31, v33);
      v36 = sub_23AA32E88();
      v37 = sub_23AA33200();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_23A95E000, v36, v37, "🧭 FMFindingSession: should not update if we're not connected", v38, 2u);
        MEMORY[0x23B85DB24](v38, -1, -1);
      }

    }
    else
    {
      sub_23A963F38(v34, v35, v71, v72, v73, v69, v70, v27, v28, v29, v30, v31, v33);
      *(_QWORD *)&v78 = v60;
      *((_QWORD *)&v78 + 1) = v59;
      v79 = v58;
      v80 = v57;
      v81 = v56;
      v82 = v55;
      v83 = v54;
      v84 = v53;
      v85 = v52;
      v86 = v51;
      v87 = v50;
      v88 = v49;
      v90 = BYTE4(v33);
      v89 = v48 | ((_DWORD)v47 << 16) | (v62 << 24);
      v39 = v63;
      sub_23A9732E0(v46, v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      v40 = (uint64_t)v67;
      sub_23A981C24((uint64_t)v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23A963C14);
      v41 = v61;
      sub_23A9C8234(v64, &v78, v61);
      sub_23A973324(v39, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      sub_23AA16DC8(v41);
      v42 = v65[3];
      v43 = v65[4];
      sub_23A96545C(v65, v42);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v43 + 8))(&v74, v42, v43);
      if ((__int16)v74 < 0 || (v74 & 0x100) == 0)
        sub_23AA17918();
      sub_23A981C24(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23A963AE0);
    }
  }
  else
  {
    sub_23AA335A8();
    __break(1u);
  }
}

uint64_t sub_23AA1C05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  result = MEMORY[0x23B85DBF0](v3 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate);
  if (result)
  {
    v7 = result;
    v8 = result + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate;
    if (MEMORY[0x23B85DBF0](result + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate))
    {
      v9 = *(_QWORD *)(v8 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(v7, a2, a3, ObjectType, v9);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23AA1C118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMFindingSession.Error(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x23B85DBF0](v2 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate);
  if (result)
  {
    sub_23A9732E0(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingLocalizerError);
    sub_23AA196D8();
    sub_23AA13CF4((uint64_t)v9);
    swift_unknownObjectRelease();
    return sub_23A973324((uint64_t)v9, type metadata accessor for FMFindingSession.Error);
  }
  return result;
}

uint64_t sub_23AA1C210(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int64_t v24;
  __int128 v25[4];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v23 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v24 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_26;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v11 >= v24)
      return 1;
    v12 = *(_QWORD *)(v23 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v24)
        return 1;
      v12 = *(_QWORD *)(v23 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v24)
          return 1;
        v12 = *(_QWORD *)(v23 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v24)
            return 1;
          v12 = *(_QWORD *)(v23 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_25:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_26:
    v14 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_23AA337D0();
    swift_bridgeObjectRetain();
    sub_23AA20E08(v25, v14);
    v15 = sub_23AA33800();
    v16 = -1 << *(_BYTE *)(a2 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      goto LABEL_33;
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23AA1C490(v18, v14);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = swift_bridgeObjectRetain();
        v22 = sub_23AA1C490(v21, v14);
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          goto LABEL_7;
      }
LABEL_33:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 4;
  if (v13 >= v24)
    return 1;
  v12 = *(_QWORD *)(v23 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v24)
      return 1;
    v12 = *(_QWORD *)(v23 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_25;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23AA1C490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_23AA32E1C();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v27 = sub_23AA32F9C();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v31 = sub_23AA32FA8();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23AA1C800(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23AA1C864;
  return v6(a1);
}

uint64_t sub_23AA1C864()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23AA1C8B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23A964084(&qword_2569D8C88);
  v10 = *(_QWORD *)(sub_23A964084((uint64_t *)&unk_2569D8C90) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23AA3359C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23A964084((uint64_t *)&unk_2569D8C90) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23AA217EC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_23AA1CAC0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23A964084(&qword_2569D7EE8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AA2293C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA1CBCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23A964084(&qword_2569D7F10);
  v10 = *(_QWORD *)(type metadata accessor for FMFindableGroupItem() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23AA3359C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for FMFindableGroupItem() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23AA22D1C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_23AA1CDD4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23A964084(&qword_2569D8890);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AA21908(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA1CEF4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A9F6104(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23AA1CF10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A9F640C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23AA1CF2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A9F6420(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23AA1CF48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A9F626C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23AA1CF64(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A9F658C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23AA1CF80(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A9F65A0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23AA1CF9C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A9F6794(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23AA1CFB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A9F68F0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23AA1CFD4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A9F6A78(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

unint64_t sub_23AA1CFF0(__int128 *a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  char v45;

  sub_23AA337D0();
  sub_23A963B5C(a1, (uint64_t)&v18);
  v2 = v31;
  v3 = v30;
  switch((unsigned __int16)(((unint64_t)(v30 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_23AA337DC();
LABEL_3:
      v4 = sub_23AA33800();
      return sub_23AA1D380(a1, v4);
    default:
      v16 = v19;
      v17 = v18;
      v14 = v21;
      v15 = v20;
      v12 = v23;
      v13 = v22;
      v10 = v25;
      v11 = v24;
      v6 = v26;
      v7 = v27;
      v8 = v28;
      v9 = v29;
      v32 = v18;
      v33 = v19;
      v34 = v20;
      v35 = v21;
      v36 = v22;
      v37 = v23;
      v38 = v24;
      v39 = v25;
      v40 = v26;
      v41 = v27;
      v42 = v28;
      v43 = v29;
      v44 = v30;
      v45 = BYTE2(v30);
      sub_23AA337DC();
      sub_23A963C14(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7, v8, v9, v3, SBYTE2(v3));
      sub_23A9CADC4();
      sub_23AA337DC();
      if (v2 == 3)
        goto LABEL_8;
      sub_23AA337E8();
      if (v2 == 2)
      {
        sub_23AA337DC();
      }
      else
      {
        sub_23AA337DC();
LABEL_8:
        sub_23AA337E8();
      }
      sub_23A963ED4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
      goto LABEL_3;
  }
}

unint64_t sub_23AA1D1D0(uint64_t a1)
{
  uint64_t v2;

  sub_23AA32FD8();
  sub_23AA337D0();
  sub_23AA33014();
  v2 = sub_23AA33800();
  swift_bridgeObjectRelease();
  return sub_23AA1DD18(a1, v2);
}

unint64_t sub_23AA1D250(uint64_t a1)
{
  uint64_t v2;

  sub_23AA32E1C();
  sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23AA32F9C();
  return sub_23AA1DE8C(a1, v2);
}

unint64_t sub_23AA1D2BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569D8878;
  if (!qword_2569D8878)
  {
    v1 = sub_23A96C258(&qword_2569D8870);
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE1708], v1);
    atomic_store(result, (unint64_t *)&qword_2569D8878);
  }
  return result;
}

uint64_t type metadata accessor for FMFindingSession.Error(uint64_t a1)
{
  return sub_23AA2201C(a1, qword_2569D8BC0);
}

unint64_t sub_23AA1D31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23AA337D0();
  sub_23AA33014();
  v4 = sub_23AA33800();
  return sub_23AA1DFCC(a1, a2, v4);
}

unint64_t sub_23AA1D380(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[104];
  _BYTE v13[104];
  _BYTE v14[96];
  int v15;
  uint64_t v16;
  int v17;

  sub_23A963B5C(a1, (uint64_t)&v11);
  v5 = -1 << *(_BYTE *)(v2 + 32);
  v6 = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v10 = ~v5;
    while (2)
    {
      v7 = *(_QWORD *)(v2 + 48) + 104 * v6;
      switch((unsigned __int16)(((unint64_t)(*(_DWORD *)(v7 + 96) & 0xFF000000) - 0x4000000) >> 24))
      {
        case 0u:
          sub_23A963B5C(a1, (uint64_t)v12);
          if ((unint64_t)v12[99] << 24 != 0x4000000)
            goto LABEL_4;
          return v6;
        case 1u:
          sub_23A963B5C(a1, (uint64_t)v13);
          if ((unint64_t)v13[99] << 24 != 83886080)
            goto LABEL_4;
          return v6;
        case 2u:
          sub_23A963B5C(a1, (uint64_t)v14);
          if ((v15 & 0xFE000000) != 0x6000000)
            goto LABEL_4;
          return v6;
        case 3u:
          goto LABEL_4;
        default:
          v9 = *(_DWORD *)(v7 + 96);
          sub_23A963B5C(a1, (uint64_t)&v16);
          if ((v17 | 0x2000000u) >> 25 != 3)
            __asm { BR              X10 }
LABEL_4:
          v6 = (v6 + 1) & v10;
          if (((*(_QWORD *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
            continue;
          return v6;
      }
    }
  }
  return v6;
}

unint64_t sub_23AA1DD18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23AA32FD8();
    v8 = v7;
    if (v6 == sub_23AA32FD8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23AA33728();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23AA32FD8();
          v15 = v14;
          if (v13 == sub_23AA32FD8() && v15 == v16)
            break;
          v18 = sub_23AA33728();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_23AA1DE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23AA32E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23AA32FA8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23AA1DFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23AA33728() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23AA33728() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23AA1E0AC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23A961DE4((unint64_t *)&unk_2569D5CF0, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23AA32F9C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_23AA32FA8();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AA1F804((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23AA1E308(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23AA32E64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23A961DE4((unint64_t *)&unk_2569D8C60, v11, MEMORY[0x24BDDFDB0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23AA32F9C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23A961DE4(&qword_2569D60B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], MEMORY[0x24BDDFDB8]);
      v21 = sub_23AA32FA8();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AA1FA58((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23AA1E564(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  __int128 v17[4];

  v5 = *v2;
  sub_23AA337D0();
  swift_bridgeObjectRetain();
  sub_23AA20E08(v17, a2);
  v6 = sub_23AA33800();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = sub_23AA1C490(v9, a2);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    v11 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v12 = swift_bridgeObjectRetain();
      v13 = sub_23AA1C490(v12, a2);
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v17[0] = *v2;
  *v2 = 0x8000000000000000;
  v16 = swift_bridgeObjectRetain();
  sub_23AA1FCAC(v16, v8, isUniquelyReferenced_nonNull_native);
  *v2 = *(_QWORD *)&v17[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_23AA1E6F4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  sub_23A964084(a3);
  v12 = sub_23AA334E8();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_23A961DE4(v45, v44, v46);
      result = sub_23AA32F9C();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

unint64_t sub_23AA1EA54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20[4];

  v1 = v0;
  v2 = *v0;
  sub_23A964084((uint64_t *)&unk_2569D8C70);
  v3 = sub_23AA334E8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_23;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_23;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_23;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                v19 = 1 << *(_BYTE *)(v2 + 32);
                if (v19 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v19;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_29;
                  if (v12 >= v9)
                    goto LABEL_23;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_22;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_22:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_23AA337D0();
      sub_23AA20E08(v20, v15);
      sub_23AA33800();
      result = sub_23AA33464();
      *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23AA1EC98(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_23AA1EE18((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_23AA1EE18((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x23B85DB24](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23AA1EE18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t (*v42)(char *, uint64_t);
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t i;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v66 = a2;
  v69 = a1;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v66 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v66 - v15;
  result = MEMORY[0x24BDAC7A8](v14);
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(a4 + 16);
  v75 = a4;
  v76 = a3;
  v77 = v7;
  if (v20 >= v19)
  {
    v71 = 0;
    v43 = 0;
    v44 = *(_QWORD *)(a3 + 56);
    v67 = a3 + 56;
    v45 = 1 << *(_BYTE *)(a3 + 32);
    if (v45 < 64)
      v46 = ~(-1 << v45);
    else
      v46 = -1;
    v47 = v46 & v44;
    v68 = (unint64_t)(v45 + 63) >> 6;
    v74 = a4 + 56;
    if (v47)
      goto LABEL_38;
LABEL_39:
    v49 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v49 < v68)
    {
      v50 = *(_QWORD *)(v67 + 8 * v49);
      v51 = v43 + 1;
      if (v50)
        goto LABEL_52;
      v51 = v43 + 2;
      if (v43 + 2 < v68)
      {
        v50 = *(_QWORD *)(v67 + 8 * v51);
        if (v50)
          goto LABEL_52;
        v51 = v43 + 3;
        if (v43 + 3 < v68)
        {
          v50 = *(_QWORD *)(v67 + 8 * v51);
          if (v50)
            goto LABEL_52;
          v52 = v43 + 4;
          if (v43 + 4 < v68)
          {
            v50 = *(_QWORD *)(v67 + 8 * v52);
            if (!v50)
            {
              while (1)
              {
                v51 = v52 + 1;
                if (__OFADD__(v52, 1))
                  goto LABEL_67;
                if (v51 >= v68)
                  goto LABEL_61;
                v50 = *(_QWORD *)(v67 + 8 * v51);
                ++v52;
                if (v50)
                  goto LABEL_52;
              }
            }
            v51 = v43 + 4;
LABEL_52:
            v72 = (v50 - 1) & v50;
            v73 = v51;
            for (i = __clz(__rbit64(v50)) + (v51 << 6); ; i = __clz(__rbit64(v47)) | (v43 << 6))
            {
              v53 = *(_QWORD *)(a3 + 48);
              v54 = *(_QWORD *)(v7 + 72);
              v70 = i;
              v55 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
              v55(v10, v53 + v54 * i, v6);
              sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
              v56 = v7;
              v57 = v10;
              v58 = sub_23AA32F9C();
              v59 = -1 << *(_BYTE *)(a4 + 32);
              v60 = v58 & ~v59;
              if (((*(_QWORD *)(v74 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) != 0)
              {
                v61 = ~v59;
                while (1)
                {
                  v55(v13, *(_QWORD *)(v75 + 48) + v60 * v54, v6);
                  sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  v62 = sub_23AA32FA8();
                  v63 = *(void (**)(char *, uint64_t))(v77 + 8);
                  v63(v13, v6);
                  if ((v62 & 1) != 0)
                    break;
                  v60 = (v60 + 1) & v61;
                  if (((*(_QWORD *)(v74 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
                    goto LABEL_59;
                }
                v10 = v57;
                result = ((uint64_t (*)(char *, uint64_t))v63)(v57, v6);
                *(unint64_t *)((char *)v69 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
                v47 = v72;
                v26 = __OFADD__(v71++, 1);
                a4 = v75;
                a3 = v76;
                v7 = v77;
                v43 = v73;
                if (v26)
                  goto LABEL_65;
                if (!v72)
                  goto LABEL_39;
              }
              else
              {
                v63 = *(void (**)(char *, uint64_t))(v56 + 8);
LABEL_59:
                v10 = v57;
                result = ((uint64_t (*)(char *, uint64_t))v63)(v57, v6);
                a4 = v75;
                a3 = v76;
                v7 = v77;
                v47 = v72;
                v43 = v73;
                if (!v72)
                  goto LABEL_39;
              }
LABEL_38:
              v72 = (v47 - 1) & v47;
              v73 = v43;
            }
          }
        }
      }
    }
LABEL_61:
    v64 = v66;
    v65 = v71;
    swift_retain();
    return sub_23AA1F514(v69, v64, v65, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_2569D8C50, (unint64_t *)&unk_2569D5CF0, MEMORY[0x24BDCEA88]);
  }
  v70 = (unint64_t)&v66 - v18;
  v71 = 0;
  v21 = 0;
  v22 = *(_QWORD *)(a4 + 56);
  v67 = a4 + 56;
  v23 = 1 << *(_BYTE *)(a4 + 32);
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v25 = v24 & v22;
  v68 = (unint64_t)(v23 + 63) >> 6;
  v74 = a3 + 56;
  do
  {
    v27 = v70;
    if (v25)
    {
LABEL_8:
      v72 = (v25 - 1) & v25;
      v73 = v21;
      v28 = __clz(__rbit64(v25)) | (v21 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_63;
      }
      if (v29 >= v68)
        goto LABEL_61;
      v30 = *(_QWORD *)(v67 + 8 * v29);
      v31 = v21 + 1;
      if (!v30)
      {
        v31 = v21 + 2;
        if (v21 + 2 >= v68)
          goto LABEL_61;
        v30 = *(_QWORD *)(v67 + 8 * v31);
        if (!v30)
        {
          v31 = v21 + 3;
          if (v21 + 3 >= v68)
            goto LABEL_61;
          v30 = *(_QWORD *)(v67 + 8 * v31);
          if (!v30)
          {
            v32 = v21 + 4;
            if (v21 + 4 >= v68)
              goto LABEL_61;
            v30 = *(_QWORD *)(v67 + 8 * v32);
            if (!v30)
            {
              while (1)
              {
                v31 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_66;
                if (v31 >= v68)
                  goto LABEL_61;
                v30 = *(_QWORD *)(v67 + 8 * v31);
                ++v32;
                if (v30)
                  goto LABEL_22;
              }
            }
            v31 = v21 + 4;
          }
        }
      }
LABEL_22:
      v72 = (v30 - 1) & v30;
      v73 = v31;
      v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_23:
      v33 = *(_QWORD *)(v7 + 72);
      v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      v34(v27, *(_QWORD *)(a4 + 48) + v33 * v28, v6);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v16, v27, v6);
      sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v35 = v7;
      v36 = v16;
      v37 = sub_23AA32F9C();
      a3 = v76;
      v38 = -1 << *(_BYTE *)(v76 + 32);
      v39 = v37 & ~v38;
      if (((*(_QWORD *)(v74 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
        break;
      v42 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
LABEL_29:
      v16 = v36;
      result = v42(v36, v6);
      a4 = v75;
      v7 = v77;
      v27 = v70;
      v25 = v72;
      v21 = v73;
      if (v72)
        goto LABEL_8;
    }
    v40 = ~v38;
    while (1)
    {
      v34((unint64_t)v13, *(_QWORD *)(a3 + 48) + v39 * v33, v6);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v41 = sub_23AA32FA8();
      v42 = *(uint64_t (**)(char *, uint64_t))(v77 + 8);
      v42(v13, v6);
      if ((v41 & 1) != 0)
        break;
      v39 = (v39 + 1) & v40;
      a3 = v76;
      if (((*(_QWORD *)(v74 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        goto LABEL_29;
    }
    v16 = v36;
    result = v42(v36, v6);
    *(unint64_t *)((char *)v69 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v25 = v72;
    v26 = __OFADD__(v71++, 1);
    a4 = v75;
    a3 = v76;
    v7 = v77;
    v21 = v73;
  }
  while (!v26);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_23AA1F4F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AA1F514(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], &qword_2569D8C58, (unint64_t *)&unk_2569D8C60, MEMORY[0x24BDDFDB0]);
}

uint64_t sub_23AA1F514(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t *a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a7;
  v42 = a8;
  v40 = a5;
  v13 = a5(0);
  v43 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - v14;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  sub_23A964084(a6);
  result = sub_23AA334F4();
  v16 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 56;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v39)
      {
LABEL_37:
        swift_release();
        return v16;
      }
      v24 = v38[v23];
      ++v19;
      if (!v24)
      {
        v19 = v23 + 1;
        if (v23 + 1 >= v39)
          goto LABEL_37;
        v24 = v38[v19];
        if (!v24)
        {
          v19 = v23 + 2;
          if (v23 + 2 >= v39)
            goto LABEL_37;
          v24 = v38[v19];
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v39)
              goto LABEL_37;
            v24 = v38[v25];
            if (!v24)
            {
              while (1)
              {
                v19 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v19 >= v39)
                  goto LABEL_37;
                v24 = v38[v19];
                ++v25;
                if (v24)
                  goto LABEL_24;
              }
            }
            v19 = v25;
          }
        }
      }
LABEL_24:
      v18 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
    }
    v26 = a4;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = *(_QWORD *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v15, v27 + v28 * v22, v13);
    sub_23A961DE4(v41, v40, v42);
    result = sub_23AA32F9C();
    v29 = -1 << *(_BYTE *)(v16 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v20 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v20 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v20 + 8 * v31);
      }
      while (v36 == -1);
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(_QWORD *)(v20 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v43 + 32))(*(_QWORD *)(v16 + 48) + v32 * v28, v15, v13);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v26;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23AA1F804(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23AA1E6F4(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_2569D8C50, (unint64_t *)&unk_2569D5CF0, MEMORY[0x24BDCEA88]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_23AA1FE38((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_2569D8C50);
      goto LABEL_12;
    }
    sub_23AA20204(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_2569D8C50, (unint64_t *)&unk_2569D5CF0, MEMORY[0x24BDCEA88]);
  }
  v13 = *v3;
  sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_23AA32F9C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_23AA32FA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23AA3374C();
  __break(1u);
  return result;
}

uint64_t sub_23AA1FA58(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23AA32E64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23AA1E6F4(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], &qword_2569D8C58, (unint64_t *)&unk_2569D8C60, MEMORY[0x24BDDFDB0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_23AA1FE38((uint64_t (*)(_QWORD))MEMORY[0x24BDDFDA0], &qword_2569D8C58);
      goto LABEL_12;
    }
    sub_23AA20204(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], &qword_2569D8C58, (unint64_t *)&unk_2569D8C60, MEMORY[0x24BDDFDB0]);
  }
  v13 = *v3;
  sub_23A961DE4((unint64_t *)&unk_2569D8C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], MEMORY[0x24BDDFDB0]);
  v14 = sub_23AA32F9C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23A961DE4(&qword_2569D60B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFDA0], MEMORY[0x24BDDFDB8]);
      v19 = sub_23AA32FA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23AA3374C();
  __break(1u);
  return result;
}

uint64_t sub_23AA1FCAC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19[4];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23AA1EA54();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23AA2005C();
      goto LABEL_14;
    }
    sub_23AA20520();
  }
  v8 = *v3;
  sub_23AA337D0();
  sub_23AA20E08(v19, v5);
  result = sub_23AA33800();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = swift_bridgeObjectRetain();
    v11 = sub_23AA1C490(v10, v5);
    result = swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_13:
      sub_23A964084(&qword_2569D8870);
      result = sub_23AA3374C();
      __break(1u);
    }
    else
    {
      v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v13 = swift_bridgeObjectRetain();
        v14 = sub_23AA1C490(v13, v5);
        result = swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = v5;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
  return result;
}

void *sub_23AA1FE38(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  sub_23A964084(a2);
  v9 = *v2;
  v10 = sub_23AA334DC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_23AA2005C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_23A964084((uint64_t *)&unk_2569D8C70);
  v2 = *v0;
  v3 = sub_23AA334DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23AA20204(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  sub_23A964084(a3);
  v13 = sub_23AA334E8();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_23A961DE4(v40, v39, v41);
    result = sub_23AA32F9C();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_23AA20520()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  __int128 v19[4];

  v1 = v0;
  v2 = *v0;
  sub_23A964084((uint64_t *)&unk_2569D8C70);
  v3 = sub_23AA334E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_23AA337D0();
    swift_bridgeObjectRetain();
    sub_23AA20E08(v19, v15);
    sub_23AA33800();
    result = sub_23AA33464();
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23AA20730(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v2 = sub_23AA32E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A964084(&qword_2569D5D18);
  result = sub_23AA335CC();
  v7 = (_QWORD *)result;
  v8 = 0;
  v29 = a1;
  v11 = *(_QWORD *)(a1 + 64);
  v10 = a1 + 64;
  v9 = v11;
  v12 = 1 << *(_BYTE *)(v10 - 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v9;
  v27 = v10;
  v28 = (unint64_t)(v12 + 63) >> 6;
  v15 = result + 64;
  if ((v13 & v9) == 0)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v8 << 6); ; i = __clz(__rbit64(v19)) + (v8 << 6))
  {
    v21 = *(_QWORD *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v29 + 48) + v21, v2);
    *(_QWORD *)(v15 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7[6] + v21, v5, v2);
    v22 = v7[7] + 104 * i;
    *(_OWORD *)v22 = 0u;
    *(_OWORD *)(v22 + 16) = 0u;
    *(_OWORD *)(v22 + 32) = 0u;
    *(_OWORD *)(v22 + 48) = 0u;
    *(_OWORD *)(v22 + 64) = 0u;
    *(_OWORD *)(v22 + 80) = 0u;
    *(_BYTE *)(v22 + 100) = 0;
    *(_DWORD *)(v22 + 96) = 0x4000000;
    v23 = v7[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v7[2] = v25;
    if (v14)
      goto LABEL_4;
LABEL_5:
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_24;
    if (v18 >= v28)
      return (uint64_t)v7;
    v19 = *(_QWORD *)(v27 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v28)
        return (uint64_t)v7;
      v19 = *(_QWORD *)(v27 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v28)
          return (uint64_t)v7;
        v19 = *(_QWORD *)(v27 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v14 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v28)
    return (uint64_t)v7;
  v19 = *(_QWORD *)(v27 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v28)
      return (uint64_t)v7;
    v19 = *(_QWORD *)(v27 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23AA20988(unint64_t a1)
{
  return sub_23AA20AE4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23A9F991C);
}

uint64_t sub_23AA20994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23AA1CAC0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23AA20AD8(unint64_t a1)
{
  return sub_23AA20AE4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23A9F9B30);
}

uint64_t sub_23AA20AE4(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23AA335C0();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x23B85D0BC](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_23AA335C0();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23AA330C8();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA20CA0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_23AA1CBCC(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for FMFindableGroupItem();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23AA20E08(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v31 = *a1;
  v32 = v12;
  v13 = a1[2];
  v14 = a1[3];
  v29[1] = a1;
  v33 = v13;
  v34 = v14;
  v35 = v11;
  v29[2] = sub_23AA33800();
  v30 = a2;
  v15 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      goto LABEL_19;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v28 = sub_23AA32F9C();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v18)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v22++, 1))
      goto LABEL_21;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    if (!v26)
      break;
LABEL_14:
    v18 = (v26 - 1) & v26;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v19)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_23AA337DC();
  }
  v26 = *(_QWORD *)(v15 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_23AA21094(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_23A9E4754((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_23A963B98(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_23AA2110C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, unint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  char v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t result;
  _BYTE v43[16];
  uint64_t v44;
  int64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56[2];
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;

  v4 = sub_23AA32E1C();
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v53 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v60 = &v43[-v7];
  v48 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v48);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(a1 + 56);
  v44 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & v10;
  v14 = a2 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  v49 = a1;
  swift_bridgeObjectRetain();
  v47 = v14;
  swift_beginAccess();
  v15 = 0;
  v45 = (unint64_t)(v11 + 63) >> 6;
  v46 = v9;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v17 = (v13 - 1) & v13;
      v18 = v16 | (v15 << 6);
      goto LABEL_23;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= v45)
      goto LABEL_33;
    v20 = *(_QWORD *)(v44 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v45)
        goto LABEL_33;
      v20 = *(_QWORD *)(v44 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v45)
          goto LABEL_33;
        v20 = *(_QWORD *)(v44 + 8 * v15);
        if (!v20)
        {
          v15 = v19 + 3;
          if (v19 + 3 >= v45)
            goto LABEL_33;
          v20 = *(_QWORD *)(v44 + 8 * v15);
          if (!v20)
          {
            v21 = v19 + 4;
            if (v21 >= v45)
            {
LABEL_33:
              swift_release();
              return 0;
            }
            v20 = *(_QWORD *)(v44 + 8 * v21);
            v15 = v21;
            if (!v20)
            {
              while (1)
              {
                v15 = v21 + 1;
                if (__OFADD__(v21, 1))
                  break;
                if (v15 >= v45)
                  goto LABEL_33;
                v20 = *(_QWORD *)(v44 + 8 * v15);
                ++v21;
                if (v20)
                  goto LABEL_22;
              }
LABEL_35:
              __break(1u);
LABEL_36:
              swift_bridgeObjectRetain();
LABEL_37:
              result = sub_23AA335A8();
              __break(1u);
              return result;
            }
          }
        }
      }
    }
LABEL_22:
    v17 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_23:
    v22 = *(_QWORD *)(*(_QWORD *)(v49 + 48) + 8 * v18);
    sub_23A9732E0(v47, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v23 = *((_QWORD *)v9 + 1);
    if (!*(_QWORD *)(v23 + 16))
      goto LABEL_36;
    v50 = v17;
    v51 = v15;
    v24 = (uint64_t)&v9[*(int *)(v48 + 36)];
    swift_bridgeObjectRetain();
    v25 = sub_23AA1D250(v24);
    if ((v26 & 1) == 0)
      goto LABEL_37;
    v27 = v22;
    sub_23A963A14(*(_QWORD *)(v23 + 56) + 40 * v25, (uint64_t)v56);
    sub_23A963B98(v56, (uint64_t)v57);
    sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v28 = v58;
    v29 = v59;
    sub_23A96545C(v57, v58);
    (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    if (*(_QWORD *)(v27 + 16))
    {
      sub_23A961DE4((unint64_t *)&unk_2569D5CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v30 = sub_23AA32F9C();
      v31 = -1 << *(_BYTE *)(v27 + 32);
      v32 = v30 & ~v31;
      v33 = v27 + 56;
      if (((*(_QWORD *)(v27 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
        break;
    }
LABEL_5:
    (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v60, v55);
    sub_23A963B3C((uint64_t)v57);
    swift_bridgeObjectRelease();
    v9 = v46;
    v13 = v50;
    v15 = v51;
  }
  v52 = ~v31;
  v34 = *(_QWORD *)(v54 + 72);
  v35 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v54 + 16);
  while (1)
  {
    v36 = v27;
    v37 = *(_QWORD *)(v27 + 48) + v34 * v32;
    v38 = v53;
    v39 = v55;
    v35(v53, v37, v55);
    sub_23A961DE4((unint64_t *)&qword_2569D60F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v40 = sub_23AA32FA8();
    v41 = *(void (**)(_BYTE *, uint64_t))(v54 + 8);
    v41(v38, v39);
    if ((v40 & 1) != 0)
      break;
    v32 = (v32 + 1) & v52;
    v27 = v36;
    if (((*(_QWORD *)(v33 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      goto LABEL_5;
  }
  v41(v60, v55);
  sub_23A963B3C((uint64_t)v57);
  swift_release();
  return v36;
}

uint64_t sub_23AA2161C(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_23AA32E1C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_23A961DE4((unint64_t *)&unk_2569D5CF0, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_23AA33194();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_23AA1E0AC((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_23AA217EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_23A964084((uint64_t *)&unk_2569D8C90) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23AA21908(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_23A964084((uint64_t *)&unk_2569D63B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23AA21A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  _QWORD *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t i;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36[2];
  uint64_t v37;

  v4 = sub_23AA32E1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A964084((uint64_t *)&unk_2569D5D30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 56);
  v30 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v15 = a2 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  v37 = a1;
  swift_bridgeObjectRetain();
  v32 = v15;
  result = swift_beginAccess();
  v17 = 0;
  v31 = (unint64_t)(v12 + 63) >> 6;
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v14)
    goto LABEL_35;
LABEL_6:
  v19 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
  }
  else
  {
    if (v19 >= v31)
      goto LABEL_36;
    v20 = *(_QWORD *)(v30 + 8 * v19);
    ++v17;
    if (v20)
      goto LABEL_21;
    v17 = v19 + 1;
    if (v19 + 1 >= v31)
      goto LABEL_36;
    v20 = *(_QWORD *)(v30 + 8 * v17);
    if (v20)
      goto LABEL_21;
    v17 = v19 + 2;
    if (v19 + 2 >= v31)
      goto LABEL_36;
    v20 = *(_QWORD *)(v30 + 8 * v17);
    if (v20)
      goto LABEL_21;
    v17 = v19 + 3;
    if (v19 + 3 >= v31)
      goto LABEL_36;
    v20 = *(_QWORD *)(v30 + 8 * v17);
    if (v20)
      goto LABEL_21;
    v21 = v19 + 4;
    if (v21 >= v31)
    {
LABEL_36:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
LABEL_37:
      swift_release();
      return (uint64_t)v18;
    }
    v20 = *(_QWORD *)(v30 + 8 * v21);
    if (v20)
    {
      v17 = v21;
LABEL_21:
      v14 = (v20 - 1) & v20;
      for (i = __clz(__rbit64(v20)) + (v17 << 6); ; i = v28 | (v17 << 6))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v37 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
        v23 = *(_QWORD *)(v32 + 8);
        if (*(_QWORD *)(v23 + 16))
        {
          swift_bridgeObjectRetain();
          v24 = sub_23AA1D250((uint64_t)v7);
          if ((v25 & 1) != 0)
          {
            sub_23A963A14(*(_QWORD *)(v23 + 56) + 40 * v24, (uint64_t)&v33);
          }
          else
          {
            v35 = 0;
            v33 = 0u;
            v34 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v35 = 0;
          v33 = 0u;
          v34 = 0u;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (*((_QWORD *)&v34 + 1))
        {
          sub_23A963B98(&v33, (uint64_t)v36);
          sub_23A963B98(v36, (uint64_t)&v33);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = sub_23AA1CDD4(0, v18[2] + 1, 1, v18);
          v27 = v18[2];
          v26 = v18[3];
          if (v27 >= v26 >> 1)
            v18 = sub_23AA1CDD4((_QWORD *)(v26 > 1), v27 + 1, 1, v18);
          v18[2] = v27 + 1;
          result = sub_23A963B98(&v33, (uint64_t)&v18[5 * v27 + 4]);
          if (!v14)
            goto LABEL_6;
        }
        else
        {
          result = sub_23A9683BC((uint64_t)&v33, &qword_2569D53C8);
          if (!v14)
            goto LABEL_6;
        }
LABEL_35:
        v28 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
      }
      goto LABEL_37;
    }
    while (1)
    {
      v17 = v21 + 1;
      if (__OFADD__(v21, 1))
        break;
      if (v17 >= v31)
        goto LABEL_36;
      v20 = *(_QWORD *)(v30 + 8 * v17);
      ++v21;
      if (v20)
        goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA21DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v2 = sub_23AA32E64();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_23A961DE4((unint64_t *)&unk_2569D8C60, v10, MEMORY[0x24BDDFDB0]);
  result = sub_23AA33194();
  v16 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_23AA1E308((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

uint64_t sub_23AA21F14(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23A964084(&qword_2569D8870);
  sub_23AA1D2BC();
  result = sub_23AA33194();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      swift_bridgeObjectRetain();
      sub_23AA1E564(&v6, v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_23AA21FA4(uint64_t a1)
{
  char v1;

  sub_23AA1A3B0(a1);
  return v1 & 1;
}

uint64_t type metadata accessor for FMR1AvailabilityHelper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FMR1AvailabilityHelper.FMR1AvailabilityHelperTrampoline()
{
  return objc_opt_self();
}

uint64_t sub_23AA22000()
{
  return type metadata accessor for FMFindingSession(0);
}

uint64_t type metadata accessor for FMFindingSession(uint64_t a1)
{
  return sub_23AA2201C(a1, qword_2569D89E8);
}

uint64_t sub_23AA2201C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AA22050()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFindingSessionState();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFindingSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFindingSession.findingSessionIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of FMFindingSession.currentFindable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of FMFindingSession.update(groupedItemIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of FMFindingSession.updateSessionForRemovedFriendship()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of FMFindingSession.sessionTimedOut()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

char *sub_23AA2212C(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v7 = *a2;
        v8 = v7;
        *(_QWORD *)a1 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        v11 = sub_23AA32E1C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v12 = sub_23AA32E1C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = *(int *)(sub_23A964084(&qword_2569D7950) + 48);
        v14 = *(char **)((char *)a2 + v13);
        v15 = v14;
        *(_QWORD *)&a1[v13] = v14;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_23AA222CC(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:

      break;
    case 1u:
    case 2u:
      v2 = sub_23AA32E1C();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 3u:
      v3 = sub_23AA32E1C();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = *(id *)((char *)a1 + *(int *)(sub_23A964084(&qword_2569D7950) + 48));

      break;
    default:
      return;
  }
}

_QWORD *sub_23AA22378(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v11 = *a2;
      v12 = v11;
      *a1 = v11;
      goto LABEL_6;
    case 1u:
    case 2u:
      v6 = sub_23AA32E1C();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_6;
    case 3u:
      v7 = sub_23AA32E1C();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_23A964084(&qword_2569D7950) + 48);
      v9 = *(void **)((char *)a2 + v8);
      v10 = v9;
      *(_QWORD *)((char *)a1 + v8) = v9;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_23AA224E0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  if (a1 != a2)
  {
    sub_23A973324((uint64_t)a1, type metadata accessor for FMFindingSession.Error);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v11 = *a2;
        v12 = v11;
        *a1 = v11;
        goto LABEL_7;
      case 1u:
      case 2u:
        v6 = sub_23AA32E1C();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 3u:
        v7 = sub_23AA32E1C();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = *(int *)(sub_23A964084(&qword_2569D7950) + 48);
        v9 = *(void **)((char *)a2 + v8);
        v10 = v9;
        *(void **)((char *)a1 + v8) = v9;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_23AA22660(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v8 = sub_23AA32E1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = sub_23A964084(&qword_2569D7950);
    *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v7 = sub_23AA32E1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_23AA2277C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23A973324((uint64_t)a1, type metadata accessor for FMFindingSession.Error);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v8 = sub_23AA32E1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = sub_23A964084(&qword_2569D7950);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v7 = sub_23AA32E1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23AA228B0()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;

  v3 = &unk_23AA3A6A8;
  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v5 = v4;
    swift_getTupleTypeLayout2();
    v6 = &v2;
    v7 = &unk_23AA3A6A8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_23AA2293C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23AA22A24(uint64_t *a1)
{
  uint64_t v1;

  return sub_23AA1A960(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_23AA22A40()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23A963B3C(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_23AA22A7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23AA22AFC;
  return sub_23AA1AA2C(a1, v4, v5, v6, v7, (uint64_t)(v1 + 6));
}

uint64_t sub_23AA22AFC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23AA22B44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AA22B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23AA22AFC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2569D8C38 + dword_2569D8C38))(a1, v4);
}

BOOL sub_23AA22BD8(_QWORD *a1)
{
  uint64_t v1;

  return sub_23A9C7834(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23AA22BF4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AA22C18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23A964084(&qword_2569D8C48);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_23AA22C90(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_23A964084(&qword_2569D8C48) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_23AA1958C(a1, v4, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AA22CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23AA22D1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for FMFindableGroupItem() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_23AA335F0();
  __break(1u);
  return result;
}

uint64_t sub_23AA22E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFindingSessionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

BOOL sub_23AA22E78(_QWORD *a1)
{
  return sub_23AA22BD8(a1);
}

OpaqueVTPixelTransferSession *sub_23AA22E90(void *a1, double a2)
{
  uint64_t v2;
  CVPixelBufferRef v3;
  __CVBuffer *v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id *v26;
  id v27;
  CFAllocatorRef *v28;
  void *v29;
  id v30;
  char v31;
  const __CFAllocator *v32;
  const __CFDictionary *v33;
  CVReturn v34;
  void *v35;
  const __CFDictionary *v36;
  OSStatus v37;
  uint64_t PixelBuffer;
  CVPixelBufferRef v39;
  uint64_t v40;
  OpaqueVTPixelTransferSession *result;
  OSStatus v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  CVPixelBufferRef v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  os_log_type_t v81;
  uint8_t *v82;
  __CVBuffer *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  __CVBuffer *v94;
  __CVBuffer *v95;
  CVPixelBufferRef pixelBufferOut[3];
  uint64_t v97;
  uint64_t v98[7];

  v98[6] = *MEMORY[0x24BDAC8D0];
  if (!a1)
    return 0;
  v3 = (CVPixelBufferRef)v2;
  v5 = a1;
  v6 = (double)(uint64_t)CVPixelBufferGetWidth(v5) * a2;
  v7 = (double)(uint64_t)CVPixelBufferGetHeight(v5) * a2;
  sub_23A964084(&qword_2569D8DA0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23AA36A90;
  v9 = (id)*MEMORY[0x24BDC5668];
  v10 = sub_23AA32FF0();
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v12;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE70]), sel_init);
  *(_QWORD *)(v8 + 88) = sub_23AA23EBC();
  *(_QWORD *)(v8 + 64) = v13;
  v14 = (id)*MEMORY[0x24BDC56B8];
  v15 = sub_23AA32FF0();
  *(_QWORD *)(v8 + 120) = v11;
  *(_QWORD *)(v8 + 96) = v15;
  *(_QWORD *)(v8 + 104) = v16;
  v17 = MEMORY[0x24BEE44F0];
  *(_QWORD *)(v8 + 152) = MEMORY[0x24BEE44F0];
  *(_DWORD *)(v8 + 128) = 1111970369;
  v18 = (id)*MEMORY[0x24BDC5708];
  v19 = sub_23AA32FF0();
  *(_QWORD *)(v8 + 184) = v11;
  v20 = (id)MEMORY[0x24BEE50B0];
  *(_QWORD *)(v8 + 160) = v19;
  *(_QWORD *)(v8 + 168) = v21;
  *(_QWORD *)(v8 + 216) = v20;
  *(double *)(v8 + 192) = v6;
  v22 = (id)*MEMORY[0x24BDC5650];
  v23 = sub_23AA32FF0();
  *(_QWORD *)(v8 + 248) = v11;
  *(_QWORD *)(v8 + 224) = v23;
  *(_QWORD *)(v8 + 232) = v24;
  *(_QWORD *)(v8 + 280) = v20;
  *(double *)(v8 + 256) = v7;
  v25 = (void *)sub_23AA331E8();
  v26 = (id *)(v2 + 24);
  swift_beginAccess();
  v27 = *(id *)(v2 + 24);
  v28 = (CFAllocatorRef *)MEMORY[0x24BDBD240];
  if (!v27
    || (v29 = *(void **)(v2 + 16)) == 0
    || (v20 = v25,
        v30 = v29,
        v31 = sub_23AA3338C(),
        v20,
        v30,
        v27 = *v26,
        (v31 & 1) == 0))
  {
    *v26 = 0;

    v32 = *v28;
    swift_beginAccess();
    v33 = v25;
    v34 = CVPixelBufferPoolCreate(v32, 0, v33, (CVPixelBufferPoolRef *)v3 + 3);
    swift_endAccess();

    if (*v26)
    {
      v20 = *v26;
      if (v34 == sub_23AA32EAC())
      {
        v35 = (void *)*((_QWORD *)v3 + 2);
        *((_QWORD *)v3 + 2) = v25;
        v36 = v33;

        goto LABEL_10;
      }

    }
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_23AA38250;
    if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -9.22337204e18)
      {
        if (v6 < 9.22337204e18)
        {
          v44 = MEMORY[0x24BEE1768];
          v45 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v43 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v43 + 64) = v45;
          *(_QWORD *)(v43 + 32) = (uint64_t)v6;
          if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
          {
            if (v7 > -9.22337204e18)
            {
              if (v7 < 9.22337204e18)
              {
                *(_QWORD *)(v43 + 96) = v44;
                *(_QWORD *)(v43 + 104) = v45;
                *(_QWORD *)(v43 + 72) = (uint64_t)v7;
                v46 = MEMORY[0x24BEE4558];
                *(_QWORD *)(v43 + 136) = v17;
                *(_QWORD *)(v43 + 144) = v46;
                *(_DWORD *)(v43 + 112) = 66;
                *(_QWORD *)(v43 + 176) = v17;
                *(_QWORD *)(v43 + 184) = v46;
                *(_DWORD *)(v43 + 152) = 71;
                *(_QWORD *)(v43 + 216) = v17;
                *(_QWORD *)(v43 + 224) = v46;
                *(_DWORD *)(v43 + 192) = 82;
                *(_QWORD *)(v43 + 256) = v17;
                *(_QWORD *)(v43 + 264) = v46;
                *(_DWORD *)(v43 + 232) = 65;
                v20 = (id)sub_23AA32FE4();
                v25 = v47;
                if (qword_2569D4AB0 == -1)
                {
LABEL_25:
                  v48 = sub_23AA32EA0();
                  sub_23A9620E8(v48, (uint64_t)qword_2569E0010);
                  swift_bridgeObjectRetain();
                  v49 = sub_23AA32E88();
                  v50 = sub_23AA33218();
                  if (!os_log_type_enabled(v49, v50))
                  {

                    swift_bridgeObjectRelease_n();
                    goto LABEL_29;
                  }
                  v51 = (uint8_t *)swift_slowAlloc();
                  v52 = swift_slowAlloc();
                  v98[0] = v52;
                  v94 = v5;
                  *(_DWORD *)v51 = 136315138;
                  swift_bridgeObjectRetain();
                  pixelBufferOut[0] = (CVPixelBufferRef)sub_23A964DBC((uint64_t)v20, (unint64_t)v25, v98);
                  sub_23AA333F8();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_23A95E000, v49, v50, "%s", v51, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x23B85DB24](v52, -1, -1);
                  MEMORY[0x23B85DB24](v51, -1, -1);

LABEL_27:
LABEL_29:
                  v53 = (CVPixelBufferRef)*v26;
                  *v26 = 0;
LABEL_44:

                  return 0;
                }
LABEL_78:
                swift_once();
                goto LABEL_25;
              }
LABEL_77:
              __break(1u);
              goto LABEL_78;
            }
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_74;
  }
  if (!v27)
  {
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_23AA38250;
    if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -9.22337204e18)
      {
        if (v6 < 9.22337204e18)
        {
          v65 = MEMORY[0x24BEE1768];
          v66 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v64 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v64 + 64) = v66;
          *(_QWORD *)(v64 + 32) = (uint64_t)v6;
          if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
          {
            if (v7 > -9.22337204e18)
            {
              if (v7 < 9.22337204e18)
              {
                *(_QWORD *)(v64 + 96) = v65;
                *(_QWORD *)(v64 + 104) = v66;
                *(_QWORD *)(v64 + 72) = (uint64_t)v7;
                v67 = MEMORY[0x24BEE4558];
                *(_QWORD *)(v64 + 136) = v17;
                *(_QWORD *)(v64 + 144) = v67;
                *(_DWORD *)(v64 + 112) = 66;
                *(_QWORD *)(v64 + 176) = v17;
                *(_QWORD *)(v64 + 184) = v67;
                *(_DWORD *)(v64 + 152) = 71;
                *(_QWORD *)(v64 + 216) = v17;
                *(_QWORD *)(v64 + 224) = v67;
                *(_DWORD *)(v64 + 192) = 82;
                *(_QWORD *)(v64 + 256) = v17;
                *(_QWORD *)(v64 + 264) = v67;
                *(_DWORD *)(v64 + 232) = 65;
                v26 = (id *)sub_23AA32FE4();
                v25 = v68;
                if (qword_2569D4AB0 == -1)
                  goto LABEL_54;
                goto LABEL_92;
              }
LABEL_91:
              __break(1u);
LABEL_92:
              swift_once();
LABEL_54:
              v69 = sub_23AA32EA0();
              sub_23A9620E8(v69, (uint64_t)qword_2569E0010);
              swift_bridgeObjectRetain();
              v70 = sub_23AA32E88();
              v71 = sub_23AA33218();
              if (os_log_type_enabled(v70, v71))
              {
                v72 = (uint8_t *)swift_slowAlloc();
                v73 = swift_slowAlloc();
                v98[0] = v73;
                *(_DWORD *)v72 = 136315138;
                swift_bridgeObjectRetain();
                pixelBufferOut[0] = (CVPixelBufferRef)sub_23A964DBC((uint64_t)v26, (unint64_t)v25, v98);
                sub_23AA333F8();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_23A95E000, v70, v71, "%s", v72, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B85DB24](v73, -1, -1);
                MEMORY[0x23B85DB24](v72, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              return 0;
            }
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
LABEL_88:
        __break(1u);
        goto LABEL_89;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_88;
  }
  v20 = v27;
LABEL_10:
  v26 = (id *)((char *)v3 + 32);
  swift_beginAccess();
  if (!*((_QWORD *)v3 + 4))
  {
    swift_beginAccess();
    v37 = VTPixelTransferSessionCreate(0, (VTPixelTransferSessionRef *)v3 + 4);
    swift_endAccess();
    if (v37 != sub_23AA32EAC())
    {
      sub_23A964084((uint64_t *)&unk_2569D6690);
      v74 = swift_allocObject();
      v75 = MEMORY[0x24BEE3F88];
      *(_OWORD *)(v74 + 16) = xmmword_23AA35F90;
      v76 = MEMORY[0x24BEE3FF0];
      *(_QWORD *)(v74 + 56) = v75;
      *(_QWORD *)(v74 + 64) = v76;
      *(_DWORD *)(v74 + 32) = v37;
      v77 = sub_23AA32FE4();
      v79 = v78;
      if (qword_2569D4AB0 != -1)
        swift_once();
      v80 = sub_23AA32EA0();
      sub_23A9620E8(v80, (uint64_t)qword_2569E0010);
      swift_bridgeObjectRetain();
      v49 = sub_23AA32E88();
      v81 = sub_23AA33218();
      if (!os_log_type_enabled(v49, v81))
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
      v82 = (uint8_t *)swift_slowAlloc();
      v83 = (__CVBuffer *)swift_slowAlloc();
      pixelBufferOut[0] = v83;
      v94 = v5;
      *(_DWORD *)v82 = 136315138;
      swift_bridgeObjectRetain();
      v97 = sub_23A964DBC(v77, v79, (uint64_t *)pixelBufferOut);
      sub_23AA333F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A95E000, v49, v81, "%s", v82, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v83, -1, -1);
      MEMORY[0x23B85DB24](v82, -1, -1);

      goto LABEL_27;
    }
  }
  pixelBufferOut[0] = 0;
  PixelBuffer = CVPixelBufferPoolCreatePixelBuffer(*v28, (CVPixelBufferPoolRef)v20, pixelBufferOut);
  v39 = pixelBufferOut[0];
  if (!pixelBufferOut[0])
    goto LABEL_31;
  v40 = PixelBuffer;
  v3 = pixelBufferOut[0];
  if ((_DWORD)v40 != sub_23AA32EAC())
  {

LABEL_31:
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_23AA38250;
    if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -9.22337204e18)
      {
        if (v6 < 9.22337204e18)
        {
          v55 = MEMORY[0x24BEE1768];
          v56 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v54 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v54 + 64) = v56;
          *(_QWORD *)(v54 + 32) = (uint64_t)v6;
          if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
          {
            if (v7 > -9.22337204e18)
            {
              if (v7 < 9.22337204e18)
              {
                *(_QWORD *)(v54 + 96) = v55;
                *(_QWORD *)(v54 + 104) = v56;
                *(_QWORD *)(v54 + 72) = (uint64_t)v7;
                v57 = MEMORY[0x24BEE4558];
                *(_QWORD *)(v54 + 136) = v17;
                *(_QWORD *)(v54 + 144) = v57;
                *(_DWORD *)(v54 + 112) = 66;
                *(_QWORD *)(v54 + 176) = v17;
                *(_QWORD *)(v54 + 184) = v57;
                *(_DWORD *)(v54 + 152) = 71;
                *(_QWORD *)(v54 + 216) = v17;
                *(_QWORD *)(v54 + 224) = v57;
                *(_DWORD *)(v54 + 192) = 82;
                *(_QWORD *)(v54 + 256) = v17;
                *(_QWORD *)(v54 + 264) = v57;
                *(_DWORD *)(v54 + 232) = 65;
                v3 = (CVPixelBufferRef)sub_23AA32FE4();
                v26 = v58;
                if (qword_2569D4AB0 == -1)
                {
LABEL_38:
                  v59 = sub_23AA32EA0();
                  sub_23A9620E8(v59, (uint64_t)qword_2569E0010);
                  swift_bridgeObjectRetain();
                  v60 = sub_23AA32E88();
                  v61 = sub_23AA33218();
                  if (os_log_type_enabled(v60, v61))
                  {
                    v95 = v5;
                    v62 = (uint8_t *)swift_slowAlloc();
                    v63 = swift_slowAlloc();
                    v97 = v63;
                    *(_DWORD *)v62 = 136315138;
                    swift_bridgeObjectRetain();
                    sub_23A964DBC((uint64_t)v3, (unint64_t)v26, &v97);
                    sub_23AA333F8();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_23A95E000, v60, v61, "%s", v62, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B85DB24](v63, -1, -1);
                    MEMORY[0x23B85DB24](v62, -1, -1);

LABEL_40:
LABEL_43:
                    v53 = pixelBufferOut[0];
                    goto LABEL_44;
                  }

LABEL_42:
                  swift_bridgeObjectRelease_n();

                  goto LABEL_43;
                }
LABEL_85:
                swift_once();
                goto LABEL_38;
              }
LABEL_84:
              __break(1u);
              goto LABEL_85;
            }
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
LABEL_82:
          __break(1u);
          goto LABEL_83;
        }
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_81;
  }
  result = (OpaqueVTPixelTransferSession *)*v26;
  if (*v26)
  {
    v42 = VTPixelTransferSessionTransferImage(result, v5, v3);
    if (v42 == sub_23AA32EAC())
    {

      return v39;
    }
    sub_23A964084((uint64_t *)&unk_2569D6690);
    v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_23AA38250;
    if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -9.22337204e18)
      {
        if (v6 < 9.22337204e18)
        {
          v85 = MEMORY[0x24BEE1768];
          v86 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v84 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v84 + 64) = v86;
          *(_QWORD *)(v84 + 32) = (uint64_t)v6;
          if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
          {
            if (v7 > -9.22337204e18)
            {
              if (v7 < 9.22337204e18)
              {
                *(_QWORD *)(v84 + 96) = v85;
                *(_QWORD *)(v84 + 104) = v86;
                *(_QWORD *)(v84 + 72) = (uint64_t)v7;
                v87 = MEMORY[0x24BEE4558];
                *(_QWORD *)(v84 + 136) = v17;
                *(_QWORD *)(v84 + 144) = v87;
                *(_DWORD *)(v84 + 112) = 66;
                *(_QWORD *)(v84 + 176) = v17;
                *(_QWORD *)(v84 + 184) = v87;
                *(_DWORD *)(v84 + 152) = 71;
                *(_QWORD *)(v84 + 216) = v17;
                *(_QWORD *)(v84 + 224) = v87;
                *(_DWORD *)(v84 + 192) = 82;
                *(_QWORD *)(v84 + 256) = v17;
                *(_QWORD *)(v84 + 264) = v87;
                *(_DWORD *)(v84 + 232) = 65;
                v40 = sub_23AA32FE4();
                v26 = v88;
                if (qword_2569D4AB0 == -1)
                {
LABEL_67:
                  v89 = sub_23AA32EA0();
                  sub_23A9620E8(v89, (uint64_t)qword_2569E0010);
                  swift_bridgeObjectRetain();
                  v90 = sub_23AA32E88();
                  v91 = sub_23AA33218();
                  if (os_log_type_enabled(v90, v91))
                  {
                    v92 = (uint8_t *)swift_slowAlloc();
                    v93 = swift_slowAlloc();
                    v97 = v93;
                    v95 = v5;
                    *(_DWORD *)v92 = 136315138;
                    swift_bridgeObjectRetain();
                    sub_23A964DBC(v40, (unint64_t)v26, &v97);
                    sub_23AA333F8();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_23A95E000, v90, v91, "%s", v92, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B85DB24](v93, -1, -1);
                    MEMORY[0x23B85DB24](v92, -1, -1);

                    goto LABEL_40;
                  }

                  goto LABEL_42;
                }
LABEL_99:
                swift_once();
                goto LABEL_67;
              }
LABEL_98:
              __break(1u);
              goto LABEL_99;
            }
LABEL_97:
            __break(1u);
            goto LABEL_98;
          }
LABEL_96:
          __break(1u);
          goto LABEL_97;
        }
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_95;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA23E68()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMPFVideoHelpers()
{
  return objc_opt_self();
}

unint64_t sub_23AA23EBC()
{
  unint64_t result;

  result = qword_2569D8DA8;
  if (!qword_2569D8DA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569D8DA8);
  }
  return result;
}

char *sub_23AA23EF8(__int16 *a1, double a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  __int16 v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  CGMutablePathRef Mutable;
  void *v28;
  objc_super v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v12 = *a1;
  v13 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring;
  v14 = v6;
  v15 = sub_23A9CCC54(0, 0, 0x3F50624DD2F1A9FCLL, 0);
  *(_QWORD *)&v6[v13] = v15;
  v16 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_collapseSpring;
  *(_QWORD *)&v14[v16] = sub_23A9CCC54(0x3FF0000000000000, 0, 0x3F50624DD2F1A9FCLL, 0);
  v17 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_ringNode;
  *(_QWORD *)&v14[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9EB8]), sel_init);
  *(_WORD *)&v14[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_findingTechnology] = v12;
  *(double *)&v14[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold] = a2;
  *(double *)&v14[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetAlpha] = a5;
  *(double *)&v14[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetWidth] = a4;
  *(double *)&v14[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetRadius] = round(a3);
  v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16) = a6;
  sub_23A9828C4(v18, v19, v20, v21);

  v30.receiver = v14;
  v30.super_class = (Class)type metadata accessor for FMPFSKBTLevelRingNode();
  v22 = (char *)objc_msgSendSuper2(&v30, sel_init);
  v23 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_ringNode;
  v24 = *(void **)&v22[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_ringNode];
  v25 = v22;
  v26 = v24;
  Mutable = CGPathCreateMutable();
  v31 = 0x3FF0000000000000;
  v32 = 0;
  v33 = 0;
  v34 = 0x3FF0000000000000;
  v35 = 0;
  v36 = 0;
  sub_23AA33248();
  objc_msgSend(v26, sel_setPath_, Mutable);

  v28 = *(void **)&v22[v23];
  objc_msgSend(v28, sel_setLineWidth_, *(double *)&v25[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetWidth]);
  objc_msgSend(v25, sel_addChild_, v28);

  return v25;
}

id sub_23AA2413C()
{
  char *v0;
  int v1;
  uint64_t v2;
  double *v3;
  double *v4;
  double v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  int v16;

  if (UIAccessibilityIsReduceMotionEnabled())
  {
    v1 = 1;
  }
  else if (*(__int16 *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_findingTechnology] >= 0)
  {
    v1 = HIBYTE(*(unsigned __int16 *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_findingTechnology]) & 1;
  }
  else
  {
    v1 = 0;
  }
  v16 = v1;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring];
  v3 = (double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  v4 = (double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v5 = *v3 + *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v6 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v3[35] + *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v5) <= *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v5 = v3[35] + *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  objc_msgSend(v0, sel_setAlpha_, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetAlpha] * v5);
  v7 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_ringNode];
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_collapseSpring];
  v9 = (double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  v10 = (double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v11 = *v9 + *(double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  v12 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v9[35] + *(double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v11) <= *(double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))
    v11 = v9[35] + v10[5];
  objc_msgSend(v7, sel_setAlpha_, v11);
  if (v16)
  {
    objc_msgSend(v0, sel_setScale_, v3[35] + v4[5]);
    v13 = 1.0;
  }
  else
  {
    v14 = *v3 + *v4;
    if (vabdd_f64(v3[35] + v4[5], v14) <= *(double *)(v2 + v6))
      v14 = v3[35] + v4[5];
    objc_msgSend(v0, sel_setScale_, v14);
    v13 = *v9 + *v10;
    if (vabdd_f64(v9[35] + v10[5], v13) <= *(double *)(v8 + v12))
      v13 = v9[35] + v10[5];
  }
  return sub_23AA24348(v13);
}

id sub_23AA24348(double a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  double *v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  CGMutablePathRef Mutable;
  id v21;
  id v22;

  v2 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetRadius);
  v3 = v2 * a1;
  v4 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_targetWidth) + v2 - v2 * a1 + v2 - v2 * a1;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_collapseSpring);
  v6 = (double *)(v5 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v6[35] + *(double *)(v5 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v6 + *(double *)(v5 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v5+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))v7 = *v6 + *(double *)(v5 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  else
    v7 = v6[35] + *(double *)(v5 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_ringNode);
  v9 = (void *)objc_opt_self();
  v10 = v9;
  if (v7 >= 0.7)
  {
    v21 = objc_msgSend(v9, sel_whiteColor);
    objc_msgSend(v8, sel_setStrokeColor_, v21);

    v22 = objc_msgSend(v10, sel_clearColor);
    objc_msgSend(v8, sel_setFillColor_, v22);

    Mutable = CGPathCreateMutable();
    sub_23AA33248();
  }
  else
  {
    v11 = objc_msgSend(v9, sel_clearColor);
    objc_msgSend(v8, sel_setStrokeColor_, v11);

    v12 = objc_msgSend(v10, sel_whiteColor);
    objc_msgSend(v8, sel_setFillColor_, v12);

    v13 = v3 + v4 * 0.5;
    v14 = v3 - v4 * 0.5;
    v15 = -v13;
    v16 = v13 + v13;
    v17 = (void *)objc_opt_self();
    v18 = objc_msgSend(v17, sel_bezierPathWithOvalInRect_, v15, v15, v16, v16);
    v19 = objc_msgSend(v17, sel_bezierPathWithOvalInRect_, -v14, -v14, v14 + v14, v14 + v14);
    objc_msgSend(v18, sel_appendPath_, v19);
    objc_msgSend(v18, sel_setUsesEvenOddFillRule_, 1);
    Mutable = (CGMutablePathRef)objc_msgSend(v18, sel_CGPath);

    v4 = 0.0;
  }
  objc_msgSend(v8, sel_setPath_, Mutable);

  return objc_msgSend(v8, sel_setLineWidth_, v4);
}

id sub_23AA2467C()
{
  return sub_23AA15164(type metadata accessor for FMPFSKBTLevelRingNode);
}

uint64_t type metadata accessor for FMPFSKBTLevelRingNode()
{
  return objc_opt_self();
}

id sub_23AA246F0(__int16 *a1)
{
  char *v1;
  __int16 v2;
  void *v3;
  char *v4;
  id v5;
  id v6;
  double v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  double v15;
  objc_super v16;
  uint64_t v17;

  v2 = *a1;
  *(_WORD *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_findingTechnology] = *a1;
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel_currentDevice);
  v6 = objc_msgSend(v5, sel_userInterfaceIdiom);

  if ((v2 & 0x8100) == 0x100)
  {
    v7 = 0.9;
    if (v6 == (id)1)
      v7 = 1.0;
    v15 = v7;
    sub_23A964084(&qword_2569D8E50);
    v8 = (_OWORD *)swift_allocObject();
    v8[1] = xmmword_23AA36A90;
    v8[2] = vmulq_n_f64((float64x2_t)xmmword_23AA3A780, v15);
    v8[3] = vmulq_n_f64((float64x2_t)xmmword_23AA3A790, v15);
  }
  else
  {
    v8 = &unk_250BBE928;
  }
  v17 = MEMORY[0x24BEE4AF8];
  sub_23AA3356C();
  v9 = *((_QWORD *)v8 + 2);
  if (v9)
  {
    v10 = 0;
    do
    {
      v11 = v10 + 1;
      sub_23AA248F0(v10, v2, *((double *)v8 + v10 + 4));
      sub_23AA33554();
      sub_23AA33578();
      sub_23AA33584();
      sub_23AA33560();
      v10 = v11;
    }
    while (v9 != v11);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_ringNodes] = v17;

  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for FMPFSKBTLevelsNode();
  v12 = objc_msgSendSuper2(&v16, sel_init);
  v13 = swift_bridgeObjectRetain();
  sub_23AA25F30(v13, v12);
  swift_bridgeObjectRelease();

  return v12;
}

char *sub_23AA248F0(uint64_t a1, __int16 a2, double a3)
{
  double v6;
  double v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  double Height;
  id v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  id v27;
  __int16 v29;
  CGRect v30;

  if ((a2 & 0x8100) == 0x100)
  {
    v6 = dbl_23AA3A7A0[(a1 & 1) == 0];
    if ((a1 & 1) != 0)
      v7 = 10.0;
    else
      v7 = 5.0;
  }
  else
  {
    v6 = (double)a1 * -0.05 + 0.45;
    v7 = 10.0;
  }
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_currentDevice);
  v10 = objc_msgSend(v9, sel_userInterfaceIdiom);

  v11 = a3;
  if (a2 < 0)
    goto LABEL_14;
  v12 = 1.0;
  v13 = 1.5;
  if (v10 != (id)1)
    v13 = 1.0;
  if ((a2 & 0x100) != 0)
    v12 = v13;
  v11 = v12 * a3;
  if ((a2 & 0x100) != 0
    && (v14 = objc_msgSend(v8, sel_currentDevice),
        v15 = objc_msgSend(v14, sel_userInterfaceIdiom),
        v14,
        v15 == (id)1))
  {
    Height = 1180.0;
  }
  else
  {
LABEL_14:
    v17 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v17, sel_bounds);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;

    v30.origin.x = v19;
    v30.origin.y = v21;
    v30.size.width = v23;
    v30.size.height = v25;
    Height = CGRectGetHeight(v30);
  }
  v26 = Height * a3 * 0.5;
  v29 = a2;
  v27 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTLevelRingNode());
  return sub_23AA23EF8(&v29, v11, v26, v7, v6, (double)a1 * 0.33 + 1.0);
}

uint64_t sub_23AA24B4C(char a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  int64x2_t v31;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_ringNodes);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v31 = vdupq_n_s64(0x4341C37937E08000uLL);
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v16 = (char *)MEMORY[0x23B85D0B0](v6, v3);
      else
        v16 = (char *)*(id *)(v3 + 8 * v6 + 32);
      v17 = v16;
      v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring];
      if ((a1 & 1) != 0)
      {
        v19 = v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
        *(_QWORD *)v19 = 0x3FF0000000000000;
        *(_BYTE *)(v19 + 8) = 0;
        v20 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
        swift_beginAccess();
        v21 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
        v22 = *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        if (*(double *)(v20 + 280) + v22 == 1.79769313e308)
        {
          v23 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
          v24 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
          *(_OWORD *)v20 = xmmword_23AA38440;
          *(_QWORD *)(v20 + 16) = v23;
          *(_OWORD *)(v20 + 24) = xmmword_23AA36E50;
          *(_OWORD *)(v20 + 40) = xmmword_23AA36E60;
          *(_QWORD *)(v20 + 56) = v23;
          *(_QWORD *)(v20 + 64) = 0;
          *(_QWORD *)(v20 + 72) = 0;
          *(int64x2_t *)(v20 + 80) = v31;
          *(_OWORD *)(v20 + 96) = 0u;
          *(_OWORD *)(v20 + 112) = 0u;
          *(_QWORD *)(v20 + 128) = v24;
          *(_OWORD *)(v20 + 136) = xmmword_23AA36E50;
          *(_OWORD *)(v20 + 152) = xmmword_23AA36E60;
          *(_QWORD *)(v20 + 168) = v24;
          *(_QWORD *)(v20 + 176) = 0;
          *(_QWORD *)(v20 + 184) = 0;
          *(int64x2_t *)(v20 + 192) = v31;
          *(_OWORD *)(v20 + 208) = 0u;
          *(_OWORD *)(v20 + 224) = 0u;
          *(_OWORD *)(v20 + 240) = xmmword_23AA38440;
          *(_OWORD *)(v20 + 256) = xmmword_23AA3A7B0;
          *(_OWORD *)(v20 + 272) = xmmword_23AA3A7C0;
          *(_QWORD *)(v20 + 288) = 0;
          *(_QWORD *)(v20 + 296) = 0;
          *(int64x2_t *)(v20 + 304) = v31;
          *(_OWORD *)(v20 + 320) = 0u;
          *(_OWORD *)(v20 + 336) = 0u;
          v25 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
          *(_QWORD *)(v20 + 352) = v25;
          v26 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
          *(_QWORD *)(v20 + 360) = v26;
          v27 = 6.28318531
              / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
              * (6.28318531
               / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
          v28 = sqrt(v27);
          v29 = *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v28 + v28);
          *(_QWORD *)v21 = 0;
          *(_QWORD *)(v21 + 8) = 0;
          *(_QWORD *)(v21 + 16) = 0x3FF0000000000000;
          *(double *)(v21 + 24) = v27;
          *(double *)(v21 + 32) = v29;
          *(_QWORD *)(v21 + 40) = 0;
          *(int64x2_t *)(v21 + 64) = v31;
          *(_OWORD *)(v21 + 80) = 0u;
          *(_OWORD *)(v21 + 96) = 0u;
          *(_QWORD *)(v21 + 48) = v25;
          *(_QWORD *)(v21 + 56) = v26;
          *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0x3FF0000000000000;
          *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
          *(_BYTE *)(v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
          v22 = 0.0;
        }
        v30 = 1.0 - v22;
        *(double *)(v20 + 280) = v30;
        *(double *)(v20 + 240) = v30;
        *(_QWORD *)(v20 + 248) = 0;
      }
      else
      {
        v7 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
        v8 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
        v9 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
        swift_beginAccess();
        *(_OWORD *)v9 = xmmword_23AA38440;
        *(_QWORD *)(v9 + 16) = v7;
        *(_OWORD *)(v9 + 24) = xmmword_23AA36E50;
        *(_OWORD *)(v9 + 40) = xmmword_23AA36E60;
        *(_QWORD *)(v9 + 56) = v7;
        *(_QWORD *)(v9 + 64) = 0;
        *(_QWORD *)(v9 + 72) = 0;
        *(int64x2_t *)(v9 + 80) = v31;
        *(_OWORD *)(v9 + 96) = 0u;
        *(_OWORD *)(v9 + 112) = 0u;
        *(_QWORD *)(v9 + 128) = v8;
        *(_OWORD *)(v9 + 136) = xmmword_23AA36E50;
        *(_OWORD *)(v9 + 152) = xmmword_23AA36E60;
        *(_QWORD *)(v9 + 168) = v8;
        *(_QWORD *)(v9 + 176) = 0;
        *(_QWORD *)(v9 + 184) = 0;
        *(int64x2_t *)(v9 + 192) = v31;
        *(_OWORD *)(v9 + 208) = 0u;
        *(_OWORD *)(v9 + 224) = 0u;
        *(_OWORD *)(v9 + 240) = xmmword_23AA38440;
        *(_OWORD *)(v9 + 256) = xmmword_23AA3A7B0;
        *(_OWORD *)(v9 + 272) = xmmword_23AA3A7C0;
        *(_QWORD *)(v9 + 288) = 0;
        *(_QWORD *)(v9 + 296) = 0;
        *(int64x2_t *)(v9 + 304) = v31;
        *(_OWORD *)(v9 + 320) = 0u;
        *(_OWORD *)(v9 + 336) = 0u;
        v10 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
        *(_QWORD *)(v9 + 352) = v10;
        v11 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
        *(_QWORD *)(v9 + 360) = v11;
        v12 = 6.28318531
            / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
            * (6.28318531
             / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
        v13 = sqrt(v12);
        v14 = *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v13 + v13);
        v15 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
        *(_QWORD *)v15 = 0;
        *(_QWORD *)(v15 + 8) = 0;
        *(_QWORD *)(v15 + 16) = 0x3FF0000000000000;
        *(double *)(v15 + 24) = v12;
        *(double *)(v15 + 32) = v14;
        *(_QWORD *)(v15 + 40) = 0;
        *(int64x2_t *)(v15 + 64) = v31;
        *(_OWORD *)(v15 + 80) = 0u;
        *(_OWORD *)(v15 + 96) = 0u;
        *(_QWORD *)(v15 + 48) = v10;
        *(_QWORD *)(v15 + 56) = v11;
        *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0x3FF0000000000000;
        *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
        *(_BYTE *)(v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        sub_23AA2413C();
      }

      ++v6;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA24F94(char a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  int64x2_t v31;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_ringNodes);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23AA335C0();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v31 = vdupq_n_s64(0x4341C37937E08000uLL);
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v16 = (char *)MEMORY[0x23B85D0B0](v6, v3);
      else
        v16 = (char *)*(id *)(v3 + 8 * v6 + 32);
      v17 = v16;
      v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring];
      if ((a1 & 1) != 0)
      {
        v19 = v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
        *(_QWORD *)v19 = 0;
        *(_BYTE *)(v19 + 8) = 0;
        v20 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
        swift_beginAccess();
        v21 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
        v22 = *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        if (*(double *)(v20 + 280) + v22 == 1.79769313e308)
        {
          v23 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
          v24 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
          *(_QWORD *)v20 = 0;
          *(_QWORD *)(v20 + 8) = 0;
          *(_QWORD *)(v20 + 16) = v23;
          *(_OWORD *)(v20 + 24) = xmmword_23AA36E50;
          *(_OWORD *)(v20 + 40) = xmmword_23AA36E60;
          *(_QWORD *)(v20 + 56) = v23;
          *(_QWORD *)(v20 + 64) = 0;
          *(_QWORD *)(v20 + 72) = 0;
          *(int64x2_t *)(v20 + 80) = v31;
          *(_OWORD *)(v20 + 96) = 0u;
          *(_OWORD *)(v20 + 112) = 0u;
          *(_QWORD *)(v20 + 128) = v24;
          *(_OWORD *)(v20 + 136) = xmmword_23AA36E50;
          *(_OWORD *)(v20 + 152) = xmmword_23AA36E60;
          *(_QWORD *)(v20 + 168) = v24;
          *(_QWORD *)(v20 + 176) = 0;
          *(_QWORD *)(v20 + 184) = 0;
          *(int64x2_t *)(v20 + 192) = v31;
          *(_OWORD *)(v20 + 208) = 0u;
          *(_OWORD *)(v20 + 224) = 0u;
          *(_OWORD *)(v20 + 240) = 0u;
          *(_OWORD *)(v20 + 256) = xmmword_23AA3A7B0;
          *(_QWORD *)(v20 + 272) = 0x403921FB54442D18;
          *(_QWORD *)(v20 + 288) = 0;
          *(_QWORD *)(v20 + 296) = 0;
          *(_QWORD *)(v20 + 280) = 0;
          *(int64x2_t *)(v20 + 304) = v31;
          *(_OWORD *)(v20 + 320) = 0u;
          *(_OWORD *)(v20 + 336) = 0u;
          v25 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
          *(_QWORD *)(v20 + 352) = v25;
          v26 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
          *(_QWORD *)(v20 + 360) = v26;
          v27 = 6.28318531
              / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
              * (6.28318531
               / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
          v28 = sqrt(v27);
          v29 = *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v28 + v28);
          *(_QWORD *)v21 = 0;
          *(_QWORD *)(v21 + 8) = 0;
          *(_QWORD *)(v21 + 16) = 0x3FF0000000000000;
          *(double *)(v21 + 24) = v27;
          *(double *)(v21 + 32) = v29;
          *(_QWORD *)(v21 + 40) = 0;
          *(int64x2_t *)(v21 + 64) = v31;
          *(_OWORD *)(v21 + 80) = 0u;
          *(_OWORD *)(v21 + 96) = 0u;
          *(_QWORD *)(v21 + 48) = v25;
          *(_QWORD *)(v21 + 56) = v26;
          *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0;
          *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
          *(_BYTE *)(v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
          v22 = 0.0;
        }
        v30 = 0.0 - v22;
        *(double *)(v20 + 280) = v30;
        *(double *)(v20 + 240) = v30;
        *(_QWORD *)(v20 + 248) = 0;
      }
      else
      {
        v7 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
        v8 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
        v9 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
        swift_beginAccess();
        *(_QWORD *)v9 = 0;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = v7;
        *(_OWORD *)(v9 + 24) = xmmword_23AA36E50;
        *(_OWORD *)(v9 + 40) = xmmword_23AA36E60;
        *(_QWORD *)(v9 + 56) = v7;
        *(_QWORD *)(v9 + 64) = 0;
        *(_QWORD *)(v9 + 72) = 0;
        *(int64x2_t *)(v9 + 80) = v31;
        *(_OWORD *)(v9 + 96) = 0u;
        *(_OWORD *)(v9 + 112) = 0u;
        *(_QWORD *)(v9 + 128) = v8;
        *(_OWORD *)(v9 + 136) = xmmword_23AA36E50;
        *(_OWORD *)(v9 + 152) = xmmword_23AA36E60;
        *(_QWORD *)(v9 + 168) = v8;
        *(_QWORD *)(v9 + 176) = 0;
        *(_QWORD *)(v9 + 184) = 0;
        *(int64x2_t *)(v9 + 192) = v31;
        *(_OWORD *)(v9 + 208) = 0u;
        *(_OWORD *)(v9 + 224) = 0u;
        *(_OWORD *)(v9 + 240) = 0u;
        *(_OWORD *)(v9 + 256) = xmmword_23AA3A7B0;
        *(_QWORD *)(v9 + 272) = 0x403921FB54442D18;
        *(_QWORD *)(v9 + 280) = 0;
        *(_QWORD *)(v9 + 288) = 0;
        *(_QWORD *)(v9 + 296) = 0;
        *(int64x2_t *)(v9 + 304) = v31;
        *(_OWORD *)(v9 + 320) = 0u;
        *(_OWORD *)(v9 + 336) = 0u;
        v10 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
        *(_QWORD *)(v9 + 352) = v10;
        v11 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
        *(_QWORD *)(v9 + 360) = v11;
        v12 = 6.28318531
            / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
            * (6.28318531
             / *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
        v13 = sqrt(v12);
        v14 = *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v13 + v13);
        v15 = v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
        *(_QWORD *)v15 = 0;
        *(_QWORD *)(v15 + 8) = 0;
        *(_QWORD *)(v15 + 16) = 0x3FF0000000000000;
        *(double *)(v15 + 24) = v12;
        *(double *)(v15 + 32) = v14;
        *(_QWORD *)(v15 + 40) = 0;
        *(int64x2_t *)(v15 + 64) = v31;
        *(_OWORD *)(v15 + 80) = 0u;
        *(_OWORD *)(v15 + 96) = 0u;
        *(_QWORD *)(v15 + 48) = v10;
        *(_QWORD *)(v15 + 56) = v11;
        *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0;
        *(_QWORD *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
        *(_BYTE *)(v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        sub_23AA2413C();
      }

      ++v6;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA253EC(char a1, double a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t j;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  unint64_t v73;
  int64x2_t v74;
  int64x2_t v75;
  uint64_t v76;
  uint64_t v77;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_ringNodes);
  v77 = MEMORY[0x24BEE4AF8];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23AA335C0();
    v6 = result;
    v73 = v5 >> 62;
    if (!result)
      goto LABEL_15;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v73 = v5 >> 62;
    if (!v6)
      goto LABEL_15;
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_62;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(double *)(MEMORY[0x23B85D0B0](i, v5) + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold) <= a2)
      {
        sub_23AA33554();
        sub_23AA33578();
        sub_23AA33584();
        sub_23AA33560();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    v9 = 0;
    v10 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold;
    do
    {
      v11 = *(char **)(v5 + 8 * v9 + 32);
      if (*(double *)&v11[v10] <= a2)
      {
        v12 = v11;
        sub_23AA33554();
        sub_23AA33578();
        sub_23AA33584();
        sub_23AA33560();
        v10 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold;
      }
      ++v9;
    }
    while (v6 != v9);
  }
LABEL_15:
  swift_bridgeObjectRelease();
  v13 = &OBJC_IVAR____TtC11FMFindingUI8FMPFView_ecoModeObservation;
  if (v77 < 0 || (v77 & 0x4000000000000000) != 0)
  {
    swift_retain();
    result = sub_23AA335C0();
    v14 = result;
    if (!result)
      goto LABEL_30;
  }
  else
  {
    v14 = *(_QWORD *)(v77 + 16);
    result = swift_retain();
    if (!v14)
      goto LABEL_30;
  }
  if (v14 < 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v15 = 0;
  v75 = vdupq_n_s64(0x4341C37937E08000uLL);
  do
  {
    if ((v77 & 0xC000000000000001) != 0)
      v25 = (char *)MEMORY[0x23B85D0B0](v15, v77);
    else
      v25 = (char *)*(id *)(v77 + 8 * v15 + 32);
    v26 = v25;
    v27 = v13;
    v28 = *(_QWORD *)&v25[v13[440]];
    if ((a1 & 1) != 0)
    {
      v29 = v28 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(_QWORD *)v29 = 0;
      *(_BYTE *)(v29 + 8) = 0;
      v30 = v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
      swift_beginAccess();
      v31 = v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
      v32 = *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      if (*(double *)(v30 + 280) + v32 == 1.79769313e308)
      {
        v33 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
        v34 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
        *(_QWORD *)v30 = 0;
        *(_QWORD *)(v30 + 8) = 0;
        *(_QWORD *)(v30 + 16) = v33;
        *(_OWORD *)(v30 + 24) = xmmword_23AA36E50;
        *(_OWORD *)(v30 + 40) = xmmword_23AA36E60;
        *(_QWORD *)(v30 + 56) = v33;
        *(_QWORD *)(v30 + 64) = 0;
        *(_QWORD *)(v30 + 72) = 0;
        *(int64x2_t *)(v30 + 80) = v75;
        *(_OWORD *)(v30 + 96) = 0u;
        *(_OWORD *)(v30 + 112) = 0u;
        *(_QWORD *)(v30 + 128) = v34;
        *(_OWORD *)(v30 + 136) = xmmword_23AA36E50;
        *(_OWORD *)(v30 + 152) = xmmword_23AA36E60;
        *(_QWORD *)(v30 + 168) = v34;
        *(_QWORD *)(v30 + 176) = 0;
        *(_QWORD *)(v30 + 184) = 0;
        *(int64x2_t *)(v30 + 192) = v75;
        *(_OWORD *)(v30 + 208) = 0u;
        *(_OWORD *)(v30 + 224) = 0u;
        *(_OWORD *)(v30 + 240) = 0u;
        *(_OWORD *)(v30 + 256) = xmmword_23AA3A7B0;
        *(_QWORD *)(v30 + 272) = 0x403921FB54442D18;
        *(_QWORD *)(v30 + 288) = 0;
        *(_QWORD *)(v30 + 296) = 0;
        *(_QWORD *)(v30 + 280) = 0;
        *(int64x2_t *)(v30 + 304) = v75;
        *(_OWORD *)(v30 + 320) = 0u;
        *(_OWORD *)(v30 + 336) = 0u;
        v35 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
        *(_QWORD *)(v30 + 352) = v35;
        v36 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
        *(_QWORD *)(v30 + 360) = v36;
        v37 = 6.28318531
            / *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
            * (6.28318531
             / *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
        v38 = sqrt(v37);
        v39 = *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v38 + v38);
        *(_QWORD *)v31 = 0;
        *(_QWORD *)(v31 + 8) = 0;
        *(_QWORD *)(v31 + 16) = 0x3FF0000000000000;
        *(double *)(v31 + 24) = v37;
        *(double *)(v31 + 32) = v39;
        *(_QWORD *)(v31 + 40) = 0;
        *(int64x2_t *)(v31 + 64) = v75;
        *(_OWORD *)(v31 + 80) = 0u;
        *(_OWORD *)(v31 + 96) = 0u;
        *(_QWORD *)(v31 + 48) = v35;
        *(_QWORD *)(v31 + 56) = v36;
        *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0;
        *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
        *(_BYTE *)(v28 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        v32 = 0.0;
      }
      v40 = 0.0 - v32;
      *(double *)(v30 + 280) = v40;
      *(double *)(v30 + 240) = v40;
      *(_QWORD *)(v30 + 248) = 0;
    }
    else
    {
      v16 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
      v17 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
      v18 = v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
      swift_beginAccess();
      *(_QWORD *)v18 = 0;
      *(_QWORD *)(v18 + 8) = 0;
      *(_QWORD *)(v18 + 16) = v16;
      *(_OWORD *)(v18 + 24) = xmmword_23AA36E50;
      *(_OWORD *)(v18 + 40) = xmmword_23AA36E60;
      *(_QWORD *)(v18 + 56) = v16;
      *(_QWORD *)(v18 + 64) = 0;
      *(_QWORD *)(v18 + 72) = 0;
      *(int64x2_t *)(v18 + 80) = v75;
      *(_OWORD *)(v18 + 96) = 0u;
      *(_OWORD *)(v18 + 112) = 0u;
      *(_QWORD *)(v18 + 128) = v17;
      *(_OWORD *)(v18 + 136) = xmmword_23AA36E50;
      *(_OWORD *)(v18 + 152) = xmmword_23AA36E60;
      *(_QWORD *)(v18 + 168) = v17;
      *(_QWORD *)(v18 + 176) = 0;
      *(_QWORD *)(v18 + 184) = 0;
      *(int64x2_t *)(v18 + 192) = v75;
      *(_OWORD *)(v18 + 208) = 0u;
      *(_OWORD *)(v18 + 224) = 0u;
      *(_OWORD *)(v18 + 240) = 0u;
      *(_OWORD *)(v18 + 256) = xmmword_23AA3A7B0;
      *(_QWORD *)(v18 + 272) = 0x403921FB54442D18;
      *(_QWORD *)(v18 + 280) = 0;
      *(_QWORD *)(v18 + 288) = 0;
      *(_QWORD *)(v18 + 296) = 0;
      *(int64x2_t *)(v18 + 304) = v75;
      *(_OWORD *)(v18 + 320) = 0u;
      *(_OWORD *)(v18 + 336) = 0u;
      v19 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
      *(_QWORD *)(v18 + 352) = v19;
      v20 = *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
      *(_QWORD *)(v18 + 360) = v20;
      v21 = 6.28318531
          / *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
          * (6.28318531
           / *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
      v22 = sqrt(v21);
      v23 = *(double *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v22 + v22);
      v24 = v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
      *(_QWORD *)v24 = 0;
      *(_QWORD *)(v24 + 8) = 0;
      *(_QWORD *)(v24 + 16) = 0x3FF0000000000000;
      *(double *)(v24 + 24) = v21;
      *(double *)(v24 + 32) = v23;
      *(_QWORD *)(v24 + 40) = 0;
      *(int64x2_t *)(v24 + 64) = v75;
      *(_OWORD *)(v24 + 80) = 0u;
      *(_OWORD *)(v24 + 96) = 0u;
      *(_QWORD *)(v24 + 48) = v19;
      *(_QWORD *)(v24 + 56) = v20;
      *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0;
      *(_QWORD *)(v28 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
      *(_BYTE *)(v28 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      sub_23AA2413C();
    }

    ++v15;
    v13 = v27;
  }
  while (v14 != v15);
LABEL_30:
  swift_release_n();
  v76 = MEMORY[0x24BEE4AF8];
  if (v73)
  {
    swift_bridgeObjectRetain();
    result = sub_23AA335C0();
    v41 = result;
    if (!result)
      goto LABEL_45;
  }
  else
  {
    v41 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v41)
      goto LABEL_45;
  }
  if (v41 < 1)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    for (j = 0; j != v41; ++j)
    {
      if (*(double *)(MEMORY[0x23B85D0B0](j, v5) + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold) > a2)
      {
        sub_23AA33554();
        sub_23AA33578();
        sub_23AA33584();
        sub_23AA33560();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    v43 = 0;
    v44 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold;
    do
    {
      v45 = *(char **)(v5 + 8 * v43 + 32);
      if (*(double *)&v45[v44] > a2)
      {
        v46 = v45;
        sub_23AA33554();
        sub_23AA33578();
        sub_23AA33584();
        sub_23AA33560();
        v44 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_threshold;
      }
      ++v43;
    }
    while (v41 != v43);
  }
LABEL_45:
  swift_bridgeObjectRelease();
  if ((v76 & 0x8000000000000000) == 0 && (v76 & 0x4000000000000000) == 0)
  {
    v47 = *(_QWORD *)(v76 + 16);
    result = swift_retain();
    if (v47)
      goto LABEL_48;
    return swift_release_n();
  }
  swift_retain();
  result = sub_23AA335C0();
  v47 = result;
  if (!result)
    return swift_release_n();
LABEL_48:
  if (v47 >= 1)
  {
    v48 = 0;
    v74 = vdupq_n_s64(0x4341C37937E08000uLL);
    do
    {
      if ((v76 & 0xC000000000000001) != 0)
        v58 = (char *)MEMORY[0x23B85D0B0](v48, v76);
      else
        v58 = (char *)*(id *)(v76 + 8 * v48 + 32);
      v59 = v58;
      v60 = *(_QWORD *)&v58[v13[440]];
      if ((a1 & 1) != 0)
      {
        v61 = v60 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
        *(_QWORD *)v61 = 0x3FF0000000000000;
        *(_BYTE *)(v61 + 8) = 0;
        v62 = v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
        swift_beginAccess();
        v63 = v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
        v64 = *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
        if (*(double *)(v62 + 280) + v64 == 1.79769313e308)
        {
          v65 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
          v66 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
          *(_OWORD *)v62 = xmmword_23AA38440;
          *(_QWORD *)(v62 + 16) = v65;
          *(_OWORD *)(v62 + 24) = xmmword_23AA36E50;
          *(_OWORD *)(v62 + 40) = xmmword_23AA36E60;
          *(_QWORD *)(v62 + 56) = v65;
          *(_QWORD *)(v62 + 64) = 0;
          *(_QWORD *)(v62 + 72) = 0;
          *(int64x2_t *)(v62 + 80) = v74;
          *(_OWORD *)(v62 + 96) = 0u;
          *(_OWORD *)(v62 + 112) = 0u;
          *(_QWORD *)(v62 + 128) = v66;
          *(_OWORD *)(v62 + 136) = xmmword_23AA36E50;
          *(_OWORD *)(v62 + 152) = xmmword_23AA36E60;
          *(_QWORD *)(v62 + 168) = v66;
          *(_QWORD *)(v62 + 176) = 0;
          *(_QWORD *)(v62 + 184) = 0;
          *(int64x2_t *)(v62 + 192) = v74;
          *(_OWORD *)(v62 + 208) = 0u;
          *(_OWORD *)(v62 + 224) = 0u;
          *(_OWORD *)(v62 + 240) = xmmword_23AA38440;
          *(_OWORD *)(v62 + 256) = xmmword_23AA3A7B0;
          *(_OWORD *)(v62 + 272) = xmmword_23AA3A7C0;
          *(_QWORD *)(v62 + 288) = 0;
          *(_QWORD *)(v62 + 296) = 0;
          *(int64x2_t *)(v62 + 304) = v74;
          *(_OWORD *)(v62 + 320) = 0u;
          *(_OWORD *)(v62 + 336) = 0u;
          v67 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
          *(_QWORD *)(v62 + 352) = v67;
          v68 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
          *(_QWORD *)(v62 + 360) = v68;
          v69 = 6.28318531
              / *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
              * (6.28318531
               / *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
          v70 = sqrt(v69);
          v71 = *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v70 + v70);
          *(_QWORD *)v63 = 0;
          *(_QWORD *)(v63 + 8) = 0;
          *(_QWORD *)(v63 + 16) = 0x3FF0000000000000;
          *(double *)(v63 + 24) = v69;
          *(double *)(v63 + 32) = v71;
          *(_QWORD *)(v63 + 40) = 0;
          *(int64x2_t *)(v63 + 64) = v74;
          *(_OWORD *)(v63 + 80) = 0u;
          *(_OWORD *)(v63 + 96) = 0u;
          *(_QWORD *)(v63 + 48) = v67;
          *(_QWORD *)(v63 + 56) = v68;
          *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0x3FF0000000000000;
          *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
          *(_BYTE *)(v60 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
          v64 = 0.0;
        }
        v72 = 1.0 - v64;
        *(double *)(v62 + 280) = v72;
        *(double *)(v62 + 240) = v72;
        *(_QWORD *)(v62 + 248) = 0;
      }
      else
      {
        v49 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
        v50 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
        v51 = v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
        swift_beginAccess();
        *(_OWORD *)v51 = xmmword_23AA38440;
        *(_QWORD *)(v51 + 16) = v49;
        *(_OWORD *)(v51 + 24) = xmmword_23AA36E50;
        *(_OWORD *)(v51 + 40) = xmmword_23AA36E60;
        *(_QWORD *)(v51 + 56) = v49;
        *(_QWORD *)(v51 + 64) = 0;
        *(_QWORD *)(v51 + 72) = 0;
        *(int64x2_t *)(v51 + 80) = v74;
        *(_OWORD *)(v51 + 96) = 0u;
        *(_OWORD *)(v51 + 112) = 0u;
        *(_QWORD *)(v51 + 128) = v50;
        *(_OWORD *)(v51 + 136) = xmmword_23AA36E50;
        *(_OWORD *)(v51 + 152) = xmmword_23AA36E60;
        *(_QWORD *)(v51 + 168) = v50;
        *(_QWORD *)(v51 + 176) = 0;
        *(_QWORD *)(v51 + 184) = 0;
        *(int64x2_t *)(v51 + 192) = v74;
        *(_OWORD *)(v51 + 208) = 0u;
        *(_OWORD *)(v51 + 224) = 0u;
        *(_OWORD *)(v51 + 240) = xmmword_23AA38440;
        *(_OWORD *)(v51 + 256) = xmmword_23AA3A7B0;
        *(_OWORD *)(v51 + 272) = xmmword_23AA3A7C0;
        *(_QWORD *)(v51 + 288) = 0;
        *(_QWORD *)(v51 + 296) = 0;
        *(int64x2_t *)(v51 + 304) = v74;
        *(_OWORD *)(v51 + 320) = 0u;
        *(_OWORD *)(v51 + 336) = 0u;
        v52 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
        *(_QWORD *)(v51 + 352) = v52;
        v53 = *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
        *(_QWORD *)(v51 + 360) = v53;
        v54 = 6.28318531
            / *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
            * (6.28318531
             / *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
        v55 = sqrt(v54);
        v56 = *(double *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v55 + v55);
        v57 = v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
        *(_QWORD *)v57 = 0;
        *(_QWORD *)(v57 + 8) = 0;
        *(_QWORD *)(v57 + 16) = 0x3FF0000000000000;
        *(double *)(v57 + 24) = v54;
        *(double *)(v57 + 32) = v56;
        *(_QWORD *)(v57 + 40) = 0;
        *(int64x2_t *)(v57 + 64) = v74;
        *(_OWORD *)(v57 + 80) = 0u;
        *(_OWORD *)(v57 + 96) = 0u;
        *(_QWORD *)(v57 + 48) = v52;
        *(_QWORD *)(v57 + 56) = v53;
        *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = 0x3FF0000000000000;
        *(_QWORD *)(v60 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
        *(_BYTE *)(v60 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
        sub_23AA2413C();
      }

      ++v48;
    }
    while (v47 != v48);
    return swift_release_n();
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_23AA25EE4()
{
  return swift_bridgeObjectRelease();
}

id sub_23AA25EF4()
{
  return sub_23AA15164(type metadata accessor for FMPFSKBTLevelsNode);
}

uint64_t type metadata accessor for FMPFSKBTLevelsNode()
{
  return objc_opt_self();
}

uint64_t sub_23AA25F30(unint64_t a1, void *a2)
{
  unint64_t v4;
  id v5;
  void *v6;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (!__OFSUB__(v4--, 1))
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x23B85D0B0](v4, a1);
LABEL_5:
        v6 = v5;
        objc_msgSend(a2, sel_addChild_, v5);

        if (!v4)
          return swift_bridgeObjectRelease();
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_12;
        if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v5 = *(id *)(a1 + 32 + 8 * v4);
          goto LABEL_5;
        }
LABEL_13:
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        v4 = sub_23AA335C0();
        if (!v4)
          return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return swift_bridgeObjectRelease();
}

void sub_23AA26030()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring;
  *(_QWORD *)&v0[v1] = sub_23A9CCC54(0, 0, 0x3F50624DD2F1A9FCLL, 0);
  v2 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_collapseSpring;
  *(_QWORD *)&v0[v2] = sub_23A9CCC54(0x3FF0000000000000, 0, 0x3F50624DD2F1A9FCLL, 0);
  v3 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_ringNode;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9EB8]), sel_init);

  sub_23AA335A8();
  __break(1u);
}

id sub_23AA26314()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1InsetLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1InsetLabel()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FMR1InsetLabelStyle()
{
  return &type metadata for FMR1InsetLabelStyle;
}

double sub_23AA26374(double a1)
{
  return a1 + 4.0;
}

void sub_23AA26390()
{
  char *v0;
  void *v1;
  char *v2;
  char *v3;
  objc_class *v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  CGFloat v9;
  CGFloat m11;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  double v43;
  id v44;
  id v45;
  id v46;
  double v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  void (**v53)(char, double);
  uint64_t v54;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  id v62;
  CGFloat m31;
  objc_super v64;
  CATransform3D v65;
  CATransform3D v66;
  objc_super v67;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    objc_msgSend(v3, sel_setAlpha_, 0.0);
    objc_msgSend(v3, sel_setContentMode_, 4);
    v4 = (objc_class *)type metadata accessor for FMAVPlayerView();
    v67.receiver = v3;
    v67.super_class = v4;
    v5 = objc_msgSendSuper2(&v67, sel_layer);
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
      objc_msgSend(v6, sel_setVideoGravity_, *MEMORY[0x24BDB1C80]);

    v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    sub_23A96170C();
    v9 = v8;

    CATransform3DMakeTranslation(&v66, 0.0, 0.0, 0.0);
    CATransform3DScale(&v65, &v66, v9, v9, 1.0);
    m11 = v65.m11;
    m12 = v65.m12;
    m13 = v65.m13;
    m14 = v65.m14;
    m21 = v65.m21;
    m22 = v65.m22;
    m23 = v65.m23;
    m24 = v65.m24;
    m31 = v65.m31;
    m32 = v65.m32;
    m33 = v65.m33;
    m34 = v65.m34;
    m41 = v65.m41;
    m42 = v65.m42;
    m43 = v65.m43;
    m44 = v65.m44;
    v64.receiver = v3;
    v64.super_class = v4;
    v18 = objc_msgSendSuper2(&v64, sel_layer);
    objc_opt_self();
    v19 = (void *)swift_dynamicCastObjCClass();
    if (v19)
    {
      v66.m11 = m11;
      v66.m12 = m12;
      v66.m13 = m13;
      v66.m14 = m14;
      v66.m21 = m21;
      v66.m22 = m22;
      v66.m23 = m23;
      v66.m24 = m24;
      v66.m31 = m31;
      v66.m32 = m32;
      v66.m33 = m33;
      v66.m34 = m34;
      v66.m41 = m41;
      v66.m42 = m42;
      v66.m43 = m43;
      v66.m44 = m44;
      objc_msgSend(v19, sel_setTransform_, &v66);
    }

    v20 = objc_msgSend(v2, sel_view);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, sel_addSubview_, v3);

      objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v62 = (id)objc_opt_self();
      sub_23A964084(&qword_2569D6080);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_23AA39BE0;
      v23 = objc_msgSend(v3, sel_centerXAnchor);
      v24 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
      v25 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView], sel_centerXAnchor);
      v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);

      *(_QWORD *)(v22 + 32) = v26;
      v27 = objc_msgSend(v3, sel_centerYAnchor);
      v28 = objc_msgSend(*(id *)&v2[v24], sel_centerYAnchor);
      v29 = objc_msgSend(v27, (SEL)&selRef_isHighlighted + 6, v28);

      *(_QWORD *)(v22 + 40) = v29;
      v30 = objc_msgSend(v3, sel_widthAnchor);
      v31 = objc_msgSend(*(id *)&v2[v24], sel_widthAnchor);
      v32 = objc_msgSend(v30, sel_constraintLessThanOrEqualToAnchor_, v31);

      *(_QWORD *)(v22 + 48) = v32;
      v33 = objc_msgSend(v3, sel_heightAnchor);
      v34 = objc_msgSend(*(id *)&v2[v24], (SEL)&selRef_setAttributedText_ + 2);
      v35 = objc_msgSend(v33, sel_constraintLessThanOrEqualToAnchor_, v34);

      *(_QWORD *)(v22 + 56) = v35;
      v36 = objc_msgSend(v3, sel_widthAnchor);
      v37 = objc_msgSend(v3, (SEL)&selRef_setAttributedText_ + 2);
      v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_multiplier_, v37, 1.0);

      *(_QWORD *)(v22 + 64) = v38;
      *(_QWORD *)&v66.m11 = v22;
      sub_23AA330C8();
      sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
      v39 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_activateConstraints_, v39);

      v40 = objc_msgSend(v3, sel_widthAnchor);
      v41 = objc_msgSend(*(id *)&v2[v24], sel_widthAnchor);
      v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

      LODWORD(v43) = 1132068864;
      objc_msgSend(v42, sel_setPriority_, v43);
      v44 = objc_msgSend(v3, sel_heightAnchor);
      v45 = objc_msgSend(*(id *)&v2[v24], sel_heightAnchor);
      v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

      LODWORD(v47) = 1132068864;
      objc_msgSend(v46, sel_setPriority_, v47);
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_23AA36AF0;
      *(_QWORD *)(v48 + 32) = v42;
      *(_QWORD *)(v48 + 40) = v46;
      *(_QWORD *)&v66.m11 = v48;
      sub_23AA330C8();
      v49 = v42;
      v50 = v46;
      v51 = (void *)sub_23AA330A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_activateConstraints_, v51);

      v52 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v53 = (void (**)(char, double))&v3[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
      v54 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
      *v53 = sub_23AA290C0;
      v53[1] = (void (*)(char, double))v52;
      sub_23A98C874(v54);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_23AA26A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  int *v26;
  uint64_t v27;
  char v28;
  unsigned __int16 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  int v48;
  char v49;
  uint64_t result;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  __int128 aBlock;
  __int128 v68;
  void (*v69)();
  uint64_t v70;
  uint64_t v71;

  v63 = sub_23AA32F30();
  v61 = *(_QWORD *)(v63 - 8);
  v4 = MEMORY[0x24BDAC7A8](v63);
  v60 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)&v57 - v6;
  v58 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v58);
  v59 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFindingViewState();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (unsigned __int16 *)((char *)&v57 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v64 = (uint64_t)&v57 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v65 = (char *)&v57 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v57 - v20;
  v22 = sub_23A964084(&qword_2569D7960);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A9732E0(a1, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v26 = (int *)v8;
  v25(v24, 0, 1, v8);
  LOBYTE(a1) = sub_23AA2CF38((uint64_t)v24);
  sub_23A9683BC((uint64_t)v24, &qword_2569D7960);
  sub_23A9732E0(a2, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if ((a1 & 1) != 0)
  {
    v27 = v66;
    v28 = v21[*(int *)(v8 + 48)];
    sub_23A973324((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    if ((v28 & 1) != 0)
    {
      sub_23A9732E0(a2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v29 = v15;
    }
    else
    {
      if (qword_2569D4AC0 != -1)
        swift_once();
      v32 = sub_23AA32EA0();
      sub_23A9620E8(v32, (uint64_t)qword_2569E0040);
      v33 = sub_23AA32E88();
      v34 = sub_23AA33218();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_23A95E000, v33, v34, "🧭 FMFindingViewCtrl: Should start playing video in 1 sec", v35, 2u);
        MEMORY[0x23B85DB24](v35, -1, -1);
      }

      v36 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v69 = sub_23AA29068;
      v70 = v36;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v68 = sub_23A9C4DBC;
      *((_QWORD *)&v68 + 1) = &unk_250BC6108;
      _Block_copy(&aBlock);
      v71 = MEMORY[0x24BEE4AF8];
      sub_23A97324C();
      swift_retain();
      sub_23A964084((uint64_t *)&unk_2569D5D00);
      sub_23A973294();
      sub_23AA3344C();
      sub_23AA32F54();
      swift_allocObject();
      v37 = sub_23AA32F3C();
      swift_release();
      swift_release();
      *(_QWORD *)(v27 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundItemWorkItem) = v37;
      swift_retain();
      swift_release();
      sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
      v38 = (void *)sub_23AA33290();
      v39 = v60;
      sub_23AA32F24();
      v40 = v62;
      MEMORY[0x23B85CB04](v39, 1.0);
      v41 = *(void (**)(char *, uint64_t))(v61 + 8);
      v42 = v39;
      v43 = v63;
      v41(v42, v63);
      sub_23AA3326C();

      v41(v40, v43);
      v44 = v27 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
      swift_beginAccess();
      if ((*(_BYTE *)(v44 + *(int *)(v8 + 56)) & 1) == 0)
      {
        v45 = *(void **)(v27 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        aBlock = 0u;
        v68 = 0u;
        v46 = v45;
        sub_23A9A97E8((uint64_t)&aBlock);

        sub_23A9683BC((uint64_t)&aBlock, &qword_2569D6680);
      }
      v47 = v64;
      sub_23A9732E0(v44, v64, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v29 = (unsigned __int16 *)v65;
      sub_23AA2CAD0(2u, 2u, 1, 2, 2, v65);
      sub_23A973324(v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      sub_23AA12BC8(v29);
      swift_release();
    }
  }
  else
  {
    sub_23A973324((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v30 = v66;
    v31 = v66 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    LOBYTE(v31) = *(_BYTE *)(v31 + v26[13]);
    sub_23A9732E0(a2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    if ((v31 & 1) != 0)
    {
      v29 = v15;
    }
    else
    {
      v48 = *((unsigned __int8 *)v15 + v26[12]);
      sub_23AA13734((uint64_t)v15, (uint64_t)v12);
      if (v48 == 1)
      {
        sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      }
      else
      {
        v49 = v12[v26[14]];
        result = sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
        if ((v49 & 1) == 0)
          return result;
      }
      if (qword_2569D4AC0 != -1)
        swift_once();
      v51 = sub_23AA32EA0();
      sub_23A9620E8(v51, (uint64_t)qword_2569E0040);
      v52 = sub_23AA32E88();
      v53 = sub_23AA33218();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_23A95E000, v52, v53, "🧭 FMFindingViewCtrl: Should stop playing video", v54, 2u);
        MEMORY[0x23B85DB24](v54, -1, -1);
      }

      sub_23AA28524(0, 2u);
      v55 = v30 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
      swift_beginAccess();
      v56 = v64;
      sub_23A9732E0(v55, v64, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v29 = (unsigned __int16 *)v65;
      sub_23AA2CAD0(2u, 2u, 0, 2, 2, v65);
      sub_23A973324(v56, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      sub_23AA12BC8(v29);
    }
  }
  return sub_23A973324((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

void sub_23AA271E4(char a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26[3];

  v6 = type metadata accessor for FMFindingViewState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v25 - v10;
  swift_beginAccess();
  v12 = MEMORY[0x23B85DBF0](a2 + 16);
  if (v12)
  {
    v13 = (char *)v12;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v14 = sub_23AA32EA0();
    sub_23A9620E8(v14, (uint64_t)qword_2569E0040);
    v15 = sub_23AA32E88();
    v16 = sub_23AA33218();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      v26[0] = v18;
      if ((a1 & 1) != 0)
        v19 = 2003789907;
      else
        v19 = 1701079368;
      v25[1] = sub_23A964DBC(v19, 0xE400000000000000, v26);
      sub_23AA333F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v15, v16, "🧭 FMFindingViewCtrl: %s FMPF scene", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v18, -1, -1);
      MEMORY[0x23B85DB24](v17, -1, -1);
    }

    v20 = *(char **)&v13[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
    v21 = *(void **)&v20[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v21)
    {
      v22 = v20;
      v23 = v21;
      sub_23A9E8418((a1 & 1) == 0, *(uint64_t *)&a3, 0);

    }
    objc_msgSend(v13, sel_accessibilityShowViewHandler);
    v24 = (uint64_t)&v13[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state];
    swift_beginAccess();
    sub_23A9732E0(v24, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23AA2CAD0(2u, a1 & 1, 2, 2, 2, v11);
    sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23AA12BC8((unsigned __int16 *)v11);
    sub_23A973324((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);

  }
}

uint64_t sub_23AA274EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (**v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t ObjCClassFromMetadata;
  id v51;
  void *v52;
  id v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  id v60;
  void *v61;
  id v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int16 *v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v1 = type metadata accessor for FMFindingViewState();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v86 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v84 = (char *)&v69 - v4;
  v5 = sub_23A964084((uint64_t *)&unk_2569D66C0);
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23AA32D44();
  v87 = *(_QWORD *)(v88 - 8);
  v7 = MEMORY[0x24BDAC7A8](v88);
  v79 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)&v69 - v9;
  v10 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v0;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
      + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_23A9732E0(v13, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
  v14 = *((_QWORD *)v12 + 1);
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = sub_23AA1D250((uint64_t)&v12[*(int *)(v10 + 36)]);
    if ((v16 & 1) != 0)
    {
      sub_23A963A14(*(_QWORD *)(v14 + 56) + 40 * v15, (uint64_t)&v95);
      sub_23A963B98(&v95, (uint64_t)&v109);
      sub_23A973324((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      v17 = v110;
      v18 = v111;
      sub_23A96545C(&v109, v110);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 40))(&v95, v17, v18);
      v19 = *((_QWORD *)&v95 + 1);
      v91 = v95;
      v20 = v99;
      v90 = v100;
      v21 = v102;
      v89 = v101;
      v22 = v105;
      v83 = v106;
      v92 = v107;
      v82 = v108;
      v23 = v97;
      v24 = v96;
      v25 = v98;
      v26 = v103;
      v27 = v104;
      sub_23AA33344();
      v29 = v28;
      v30 = v93;
      v31 = (uint64_t *)(v93 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo);
      v81 = *(char **)(v93 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo + 112);
      v32 = v91;
      *v31 = v91;
      v31[1] = v19;
      v78 = v19;
      v70 = v24;
      v31[2] = v24;
      v31[3] = v23;
      v72 = v23;
      v71 = v25;
      v31[4] = v25;
      v31[5] = v20;
      v73 = v20;
      v33 = v32;
      v34 = v89;
      v31[6] = v90;
      v31[7] = v34;
      v74 = v21;
      v31[8] = v21;
      v31[9] = v26;
      v76 = v26;
      v75 = v27;
      v31[10] = v27;
      v31[11] = v22;
      v77 = v22;
      v35 = v83;
      v31[12] = v83;
      v36 = v82;
      v31[13] = v92;
      v31[14] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37 = *(char **)(v30 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView);
      if (v37)
      {
        v38 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = v38;
        *(_QWORD *)(v39 + 24) = v29;
        *(double *)(v39 + 32) = 1.0 / (double)v33;
        v40 = (void (**)(uint64_t, uint64_t, uint64_t))&v37[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler];
        v41 = *(_QWORD *)&v37[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler];
        *v40 = sub_23AA290B4;
        v40[1] = (void (*)(uint64_t, uint64_t, uint64_t))v39;
        sub_23A98C874(v41);
      }
      if (qword_2569D4AC0 != -1)
        swift_once();
      v42 = sub_23AA32EA0();
      sub_23A9620E8(v42, (uint64_t)qword_2569E0040);
      swift_bridgeObjectRetain_n();
      v43 = sub_23AA32E88();
      v44 = sub_23AA33218();
      if (os_log_type_enabled(v43, v44))
      {
        v81 = v37;
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        *(_QWORD *)&v95 = v46;
        *(_DWORD *)v45 = 136315138;
        swift_bridgeObjectRetain();
        v94 = sub_23A964DBC(v92, v36, (uint64_t *)&v95);
        v37 = v81;
        sub_23AA333F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A95E000, v43, v44, "🧭 FMFindingViewCtrl: Asked to start playing 'found item' video (%s)", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B85DB24](v46, -1, -1);
        MEMORY[0x23B85DB24](v45, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v47 = (uint64_t)v85;
      if (v37)
      {
        *(_QWORD *)&v95 = v91;
        *((_QWORD *)&v95 + 1) = v78;
        v96 = v70;
        v97 = v72;
        v98 = v71;
        v99 = v73;
        v100 = v90;
        v101 = v89;
        v102 = v74;
        v103 = v76;
        v104 = v75;
        v105 = v77;
        v48 = v92;
        v106 = v35;
        v107 = v92;
        v108 = v36;
        swift_bridgeObjectRetain();
        v49 = v37;
        sub_23A9BD1D0(v48, v36, 0, 0, 0, 1, (uint64_t)&v95);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v49 = 0;
        swift_bridgeObjectRelease();
      }
      type metadata accessor for FMFindingViewController();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v51 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v52 = (void *)sub_23AA32FB4();
      v53 = objc_msgSend(v51, sel_URLForResource_withExtension_, v52, 0);

      if (v53)
      {
        v54 = v79;
        sub_23AA32D2C();

        v55 = v87;
        v56 = *(void (**)(uint64_t, char *, uint64_t))(v87 + 32);
        v57 = v54;
        v58 = v88;
        v56(v47, v57, v88);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v47, 0, 1, v58);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v47, 1, v58) != 1)
        {
          v59 = v80;
          v56((uint64_t)v80, (char *)v47, v88);
          if (v49)
          {
            v60 = objc_msgSend(v49, sel_layer);
            v61 = (void *)sub_23AA32D14();
            v62 = (id)SFAdjustmentFiltersForAssetTypeAndURL();

            sub_23A968488(0, &qword_2569D8C10);
            v63 = sub_23AA330B0();

            sub_23AA15CA8(v63);
            swift_bridgeObjectRelease();
            v64 = (void *)sub_23AA330A4();
            v59 = v80;
            swift_bridgeObjectRelease();
            objc_msgSend(v60, sel_setFilters_, v64);

          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v88);
          goto LABEL_20;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v47, 1, 1, v88);
      }
      sub_23A9683BC(v47, (uint64_t *)&unk_2569D66C0);
LABEL_20:
      v65 = v93 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
      swift_beginAccess();
      v66 = v86;
      sub_23A9732E0(v65, v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      v67 = (unsigned __int16 *)v84;
      sub_23AA2CAD0(2u, 2u, 2, 2, 1, v84);
      sub_23A973324(v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      sub_23AA12BC8(v67);

      sub_23A973324((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      return sub_23A963B3C((uint64_t)&v109);
    }
  }
  result = sub_23AA335A8();
  __break(1u);
  return result;
}

void sub_23AA27ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;

  v11 = a4 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x23B85DBF0](v11);
  if (v12)
  {
    v13 = (char *)v12;
    v14 = v12 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo;
    *(_QWORD *)v14 = a1;
    *(_QWORD *)(v14 + 8) = a2;
    *(_QWORD *)(v14 + 16) = a3;
    *(_BYTE *)(v14 + 24) = 0;
    v15 = v12 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    if (*(_BYTE *)(v15 + *(int *)(type metadata accessor for FMFindingViewState() + 52)) == 1)
    {
      sub_23AA33344();
      if (vabdd_f64(v16, a5) <= a6 * 4.0)
      {
        if (qword_2569D4AC0 != -1)
          swift_once();
        v17 = sub_23AA32EA0();
        sub_23A9620E8(v17, (uint64_t)qword_2569E0040);
        v18 = sub_23AA32E88();
        v19 = sub_23AA33218();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_23A95E000, v18, v19, "🧭 FMFindingViewCtrl: Ready to stop playing 'found item' video", v20, 2u);
          MEMORY[0x23B85DB24](v20, -1, -1);
        }

        if (*(_QWORD *)&v13[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem])
        {
          swift_retain();
          sub_23AA32F48();
          swift_release();
        }
        sub_23AA280A4();
      }
    }

  }
}

uint64_t sub_23AA280A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  int v19;
  char v20;
  _BYTE *v21;
  id v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for FMFindingViewState();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v8 = sub_23AA32EA0();
  sub_23A9620E8(v8, (uint64_t)qword_2569E0040);
  v9 = sub_23AA32E88();
  v10 = sub_23AA33218();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23A95E000, v9, v10, "🧭 FMFindingViewCtrl: Asked to stop playing 'found item' video", v11, 2u);
    MEMORY[0x23B85DB24](v11, -1, -1);
  }

  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView);
  if (v12)
  {
    sub_23A9BDAB4();
    v13 = (_QWORD *)(v12 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler);
    v14 = *(_QWORD *)(v12 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler);
    *v13 = 0;
    v13[1] = 0;
    sub_23A98C874(v14);
  }
  v15 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo;
  *(_QWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_BYTE *)(v15 + 24) = 1;
  v16 = *(_BYTE **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  v17 = *(void **)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v17)
  {
    v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor];
    v19 = v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor + 8];
    v20 = (v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor] == 2) | v16[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor];
    v21 = v16;
    v22 = v17;
    sub_23A9E8DC4(v18, v19, v20 & 1);

  }
  v23 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_23A9732E0(v23, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA2CAD0(2u, 2u, 0, 0, 0, v7);
  sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23AA12BC8((unsigned __int16 *)v7);
  return sub_23A973324((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
}

void sub_23AA28338(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  if (qword_2569D4AC0 != -1)
    swift_once();
  v4 = sub_23AA32EA0();
  sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
  v5 = sub_23AA32E88();
  v6 = sub_23AA33218();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v15 = v8;
    if ((a1 & 1) != 0)
      v9 = 0x7075206465657073;
    else
      v9 = 0x776F6420776F6C73;
    if ((a1 & 1) != 0)
      v10 = 0xE800000000000000;
    else
      v10 = 0xE90000000000006ELL;
    v14 = sub_23A964DBC(v9, v10, &v15);
    sub_23AA333F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v5, v6, "🧭 FMFindingViewCtrl: Asked to %s 'found item' video", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v8, -1, -1);
    MEMORY[0x23B85DB24](v7, -1, -1);
  }

  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView);
  if (v12)
  {
    v13 = *(void **)(v12 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player);
    if (v13)
    {
      LODWORD(v11) = 1.0;
      if ((a1 & 1) != 0)
        *(float *)&v11 = 2.0;
      objc_msgSend(v13, sel_setRate_, v11, v14, v15);
    }
  }
}

uint64_t sub_23AA28524(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t result;
  _BYTE *v29;
  char *v30;
  void *v31;
  _BYTE *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *v40;
  void (*v41)();
  int v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int16 *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  int v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  _QWORD aBlock[3];
  void *v75;
  void (*v76)();
  uint64_t v77;

  v3 = v2;
  v6 = type metadata accessor for FMFindingViewState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v65 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)&v58 - v9;
  v64 = sub_23AA32F30();
  v62 = *(_QWORD *)(v64 - 8);
  v10 = MEMORY[0x24BDAC7A8](v64);
  v61 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v58 - v12;
  v59 = sub_23AA32ED0();
  MEMORY[0x24BDAC7A8](v59);
  v60 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x24BDAC7A8](v68);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569D4AC0 != -1)
    swift_once();
  v16 = a2;
  v17 = sub_23AA32EA0();
  sub_23A9620E8(v17, (uint64_t)qword_2569E0040);
  v18 = sub_23AA32E88();
  v19 = sub_23AA33218();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    *(_DWORD *)v20 = 67109376;
    LODWORD(aBlock[0]) = a1 & 1;
    sub_23AA333F8();
    *(_WORD *)(v20 + 8) = 1024;
    LODWORD(aBlock[0]) = v16 & 1;
    sub_23AA333F8();
    _os_log_impl(&dword_23A95E000, v18, v19, "🧭 FMFindingViewCtrl: Set playing video to %{BOOL}d, immediately=%{BOOL}d", (uint8_t *)v20, 0xEu);
    MEMORY[0x23B85DB24](v20, -1, -1);
  }

  v67 = v16;
  v69 = v15;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo + 112))
  {
    v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo);
    swift_bridgeObjectRetain();
    sub_23AA33344();
    v23 = v22;
    sub_23AA33344();
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((a1 & 1) == 0)
    {
      v26 = 1.0 / (double)v21;
      goto LABEL_20;
    }
  }
  else if ((a1 & 1) == 0)
  {
    v25 = 0.0;
    v26 = 0.0166666667;
    v23 = 0.0;
LABEL_20:
    v44 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    result = swift_beginAccess();
    if (*(_BYTE *)(v44 + *(int *)(v6 + 56)) == 1)
    {
      if ((v67 & 1) != 0)
        return sub_23AA280A4();
      if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo + 24) & 1) == 0
        && (result = sub_23AA33344(), vabdd_f64(v45, v23) <= v26 * 4.0))
      {
        return sub_23AA280A4();
      }
      else if ((*(_BYTE *)(v44 + *(int *)(v6 + 52)) & 1) == 0)
      {
        v46 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView);
        if (v46)
          *(_BYTE *)(v46 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop) = 1;
        v47 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem;
        if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem))
        {
          swift_retain();
          sub_23AA32F48();
          swift_release();
        }
        v48 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v76 = sub_23AA29088;
        v77 = v48;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_23A9C4DBC;
        v75 = &unk_250BC6130;
        _Block_copy(aBlock);
        v73 = MEMORY[0x24BEE4AF8];
        sub_23A97324C();
        swift_retain();
        sub_23A964084((uint64_t *)&unk_2569D5D00);
        sub_23A973294();
        sub_23AA3344C();
        sub_23AA32F54();
        swift_allocObject();
        v49 = sub_23AA32F3C();
        swift_release();
        swift_release();
        *(_QWORD *)(v3 + v47) = v49;
        swift_retain();
        swift_release();
        sub_23A968488(0, (unint64_t *)&qword_2569D5B10);
        v50 = (void *)sub_23AA33290();
        v51 = v61;
        sub_23AA32F24();
        v52 = v63;
        MEMORY[0x23B85CB04](v51, v25 * 1.1);
        v53 = *(void (**)(char *, uint64_t))(v62 + 8);
        v54 = v51;
        v55 = v64;
        v53(v54, v64);
        sub_23AA3326C();

        v53(v52, v55);
        v56 = v65;
        sub_23A9732E0(v44, v65, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
        v57 = (unsigned __int16 *)v66;
        sub_23AA2CAD0(2u, 2u, 2, 1, 2, v66);
        sub_23A973324(v56, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
        sub_23AA12BC8(v57);
        sub_23AA28338(1);
        swift_release();
        return sub_23A973324((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
      }
    }
    return result;
  }
  v27 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v27 + *(int *)(v6 + 56)) & 1) == 0)
  {
    v29 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
    v30 = &v29[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor];
    *(_QWORD *)v30 = 0x3FF0000000000000;
    v30[8] = 0;
    v29[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor] = 1;
    v31 = *(void **)&v29[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v31)
    {
      v32 = v29;
      v33 = v31;
      sub_23A9E8DC4(0x3FF0000000000000, 0, 1);

    }
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem))
    {
      swift_retain();
      sub_23AA32F48();
      swift_release();
    }
    v34 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
        + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    v35 = v34;
    v36 = (uint64_t)v69;
    sub_23A9732E0(v35, (uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v37 = *(_QWORD *)(v36 + 8);
    if (*(_QWORD *)(v37 + 16) && (v38 = sub_23AA1D250(v36 + *(int *)(v68 + 36)), (v39 & 1) != 0))
    {
      sub_23A963A14(*(_QWORD *)(v37 + 56) + 40 * v38, (uint64_t)&v70);
      sub_23A963B98(&v70, (uint64_t)aBlock);
      sub_23A973324(v36, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
      v40 = v75;
      v41 = v76;
      sub_23A96545C(aBlock, (uint64_t)v75);
      (*((void (**)(__int128 *__return_ptr, void *, void (*)()))v41 + 3))(&v70, v40, v41);
      v42 = v72;
      sub_23A980B18((void *)v70, *((uint64_t *)&v70 + 1), v71, v72);
      v43 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView);
      if (v43)
        *(_BYTE *)(v43 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop) = v42 == 1;
      sub_23AA274EC();
      return sub_23A963B3C((uint64_t)aBlock);
    }
    else
    {
      result = sub_23AA335A8();
      __break(1u);
    }
  }
  return result;
}

void sub_23AA28DD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23A95E000, v5, v6, "🧭 FMFindingViewCtrl: Autostop playing 'found item' video (timeout)", v7, 2u);
      MEMORY[0x23B85DB24](v7, -1, -1);
    }

    sub_23AA280A4();
  }
}

void sub_23AA28EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char *v8;
  id v9;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x23B85DBF0](v1);
  if (v2)
  {
    v3 = (char *)v2;
    if (qword_2569D4AC0 != -1)
      swift_once();
    v4 = sub_23AA32EA0();
    sub_23A9620E8(v4, (uint64_t)qword_2569E0040);
    v5 = sub_23AA32E88();
    v6 = sub_23AA33218();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23A95E000, v5, v6, "🧭 FMFindingViewCtrl: Reach mode in here for 1 sec, will now play video", v7, 2u);
      MEMORY[0x23B85DB24](v7, -1, -1);
    }

    v8 = &v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state];
    swift_beginAccess();
    if ((v8[*(int *)(type metadata accessor for FMFindingViewState() + 56)] & 1) == 0)
    {
      v9 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
      sub_23A9A8118();

    }
    sub_23AA28524(1, 2u);

  }
}

uint64_t sub_23AA29044()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23AA29068()
{
  uint64_t v0;

  sub_23AA28EDC(v0);
}

uint64_t sub_23AA29070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA29080()
{
  return swift_release();
}

void sub_23AA29088()
{
  uint64_t v0;

  sub_23AA28DD4(v0);
}

uint64_t sub_23AA29090()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23AA290B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23AA27ED4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(double *)(v3 + 24), *(double *)(v3 + 32));
}

void sub_23AA290C0(char a1, double a2)
{
  uint64_t v2;

  sub_23AA271E4(a1, v2, a2);
}

id sub_23AA290D0(void *a1, double a2)
{
  void *v2;
  unsigned int v5;
  id result;
  BOOL v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15[2];

  v15[1] = *(double *)MEMORY[0x24BDAC8D0];
  v14 = 0.0;
  v15[0] = 0.0;
  v12 = 0;
  v13 = 0.0;
  v10 = 0.0;
  v11 = 0.0;
  v8 = 0;
  v9 = 0.0;
  v5 = objc_msgSend(v2, sel_getRed_green_blue_alpha_, v15, &v14, &v13, &v12);
  result = 0;
  if (v5)
    v7 = a1 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    if (objc_msgSend(a1, sel_getRed_green_blue_alpha_, &v11, &v10, &v9, &v8))
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, (1.0 - a2) * v15[0] + v11 * a2, (1.0 - a2) * v14 + v10 * a2, (1.0 - a2) * v13 + v9 * a2, 1.0);
    else
      return 0;
  }
  return result;
}

id sub_23AA29214()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  qword_2569E0568 = (uint64_t)result;
  return result;
}

uint64_t sub_23AA2924C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
  swift_beginAccess();
  return MEMORY[0x23B85DBF0](v1);
}

uint64_t sub_23AA29298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_23AA29300(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x23B85DBF0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23A9AFFF8;
}

id FMProximityConnectionManager.__allocating_init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return FMProximityConnectionManager.init(findables:connectionContext:)(a1, a2);
}

id FMProximityConnectionManager.init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  char *v2;
  char v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v4 = *a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_subscriptions] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5 = qword_2569D4AE0;
  v6 = v2;
  if (v5 != -1)
    swift_once();
  v7 = (void *)qword_2569E00A0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_nearbyInteractionManager] = qword_2569E00A0;
  v8 = v7;

  LOBYTE(v23) = v4;
  v9 = sub_23A96465C(a1, (unsigned __int8 *)&v23);
  v10 = qword_2569D4AB8;
  v11 = v9;
  if (v10 != -1)
    swift_once();
  v12 = sub_23AA32EA0();
  sub_23A9620E8(v12, (uint64_t)qword_2569E0028);
  v13 = v11;
  v14 = sub_23AA32E88();
  v15 = sub_23AA33218();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = swift_bridgeObjectRetain();
    v19 = MEMORY[0x23B85CC54](v18, MEMORY[0x24BEE0D00]);
    v21 = v20;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v19, v21, &v23);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v14, v15, "FMProximityConnectionManager: initialized for items: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v17, -1, -1);
    MEMORY[0x23B85DB24](v16, -1, -1);

  }
  else
  {

  }
  return v13;
}

uint64_t sub_23AA2961C()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v1 = sub_23AA32EA0();
  sub_23A9620E8(v1, (uint64_t)qword_2569E0028);
  v2 = v0;
  v3 = sub_23AA32E88();
  v4 = sub_23AA33218();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x23B85CC54](v7, MEMORY[0x24BEE0D00]);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_23A964DBC(v8, v10, &v15);
    sub_23AA333F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A95E000, v3, v4, "FMProximityConnectionManager: requesting connection for items: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B85DB24](v6, -1, -1);
    MEMORY[0x23B85DB24](v5, -1, -1);

  }
  else
  {

  }
  v11 = (char *)v2;
  v12 = swift_bridgeObjectRetain();
  v13 = sub_23AA29FFC(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  *(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_subscriptions] = v13;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA29838()
{
  unint64_t v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  char *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t aBlock[6];

  if (qword_2569D4AB8 != -1)
    goto LABEL_16;
  while (1)
  {
    v1 = sub_23AA32EA0();
    sub_23A9620E8(v1, (uint64_t)qword_2569E0028);
    v2 = (char *)(id)v0;
    v3 = sub_23AA32E88();
    v4 = sub_23AA33218();
    v24 = v2;
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      aBlock[0] = v6;
      *(_DWORD *)v5 = 136315138;
      v7 = swift_bridgeObjectRetain();
      v8 = MEMORY[0x23B85CC54](v7, MEMORY[0x24BEE0D00]);
      v10 = v9;
      swift_bridgeObjectRelease();
      sub_23A964DBC(v8, v10, aBlock);
      sub_23AA333F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A95E000, v3, v4, "FMProximityConnectionManager: requesting disconnection for items: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B85DB24](v6, -1, -1);
      MEMORY[0x23B85DB24](v5, -1, -1);

    }
    else
    {

    }
    v0 = *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_subscriptions];
    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_23AA335C0();
      v11 = result;
      if (!result)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v11)
        return swift_bridgeObjectRelease();
    }
    if (v11 < 1)
      break;
    v13 = 0;
    v23 = OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_nearbyInteractionManager;
    while (1)
    {
      v14 = (v0 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x23B85D0B0](v13, v0)
          : *(id *)(v0 + 8 * v13 + 32);
      v15 = v14;
      v16 = *(char **)&v2[v23];
      v17 = *(NSObject **)&v16[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v16;
      *(_QWORD *)(v18 + 24) = v15;
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = sub_23A981D34;
      *(_QWORD *)(v19 + 24) = v18;
      aBlock[4] = (uint64_t)sub_23A971F88;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23A9AFD6C;
      aBlock[3] = (uint64_t)&unk_250BC61D0;
      v20 = _Block_copy(aBlock);
      v21 = v16;
      v22 = v15;
      swift_retain();
      swift_release();
      dispatch_sync(v17, v20);
      _Block_release(v20);
      LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if ((v17 & 1) != 0)
        break;
      ++v13;
      v2 = v24;
      if (v11 == v13)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA29BE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return sub_23A972074(v0 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate);
}

id FMProximityConnectionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMProximityConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23AA29C94(char a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if (qword_2569D4AB8 != -1)
    swift_once();
  v3 = sub_23AA32EA0();
  sub_23A9620E8(v3, (uint64_t)qword_2569E0028);
  v4 = sub_23AA32E88();
  v5 = sub_23AA33218();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v6 = 136315138;
    __asm { BR              X10 }
  }

  if (a1)
  {
    v7 = v1 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x23B85DBF0](v7))
    {
      v8 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, BOOL, _QWORD, uint64_t, uint64_t))(v8 + 8))(v1, a1 == 2, 0, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v10 = sub_23AA32E88();
    v11 = sub_23AA33218();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23A95E000, v10, v11, "FMProximityConnectionManager: ignoring unknown state, waiting for a decision to be made before forwarding.", v12, 2u);
      MEMORY[0x23B85DB24](v12, -1, -1);
    }

  }
}

uint64_t sub_23AA29F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  if (result)
  {
    v5 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, 0, a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23AA29FFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD aBlock[6];
  __int128 v19[2];
  uint64_t v20;

  result = MEMORY[0x24BEE4AF8];
  v20 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a1 + 32;
    v15 = OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_nearbyInteractionManager;
    swift_bridgeObjectRetain();
    v6 = type metadata accessor for FMNearbyInteractionManagerSubscription();
    while (1)
    {
      v17 = v4;
      MEMORY[0x24BDAC7A8](v6);
      v8 = v7;
      sub_23AA3329C();

      v9 = *(char **)(a2 + v15);
      v10 = *(NSObject **)&v9[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
      sub_23A963A14(v5, (uint64_t)v19);
      v11 = swift_allocObject();
      sub_23A963B98(v19, v11 + 16);
      *(_QWORD *)(v11 + 56) = v9;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = sub_23A9B188C;
      *(_QWORD *)(v12 + 24) = v11;
      aBlock[4] = sub_23A9FFA3C;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23A9AFD6C;
      aBlock[3] = &unk_250BC62A8;
      v13 = _Block_copy(aBlock);
      v14 = v9;
      swift_retain();
      swift_release();
      dispatch_sync(v10, v13);
      _Block_release(v13);
      LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      result = swift_release();
      if ((v13 & 1) != 0)
        break;
      MEMORY[0x23B85CC30](result);
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23AA330D4();
      sub_23AA330EC();
      v6 = sub_23AA330C8();
      v5 += 40;
      v4 = v17 - 1;
      if (v17 == 1)
      {
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23AA2A2AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AA2A2D8()
{
  return swift_deallocObject();
}

uint64_t sub_23AA2A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA2A2F8()
{
  return swift_release();
}

uint64_t type metadata accessor for FMProximityConnectionManager()
{
  return objc_opt_self();
}

uint64_t sub_23AA2A320@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B85DBF0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_23AA2A378(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11FMFindingUI28FMProximityConnectionManager_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMProximityConnectionManagerDelegate.proximityConnectionManager(_:isAvailable:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FMProximityConnectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMProximityConnectionManager.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of FMProximityConnectionManager.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of FMProximityConnectionManager.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of FMProximityConnectionManager.__allocating_init(findables:connectionContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_23AA2A448()
{
  uint64_t v0;

  sub_23A963B3C(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_23AA2A474()
{
  return swift_deallocObject();
}

_QWORD *sub_23AA2A48C(_WORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23AA32E1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (_QWORD *)((char *)v4 + v11);
    v14 = (_QWORD *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
    v16 = a3[8];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_DWORD *)((char *)a2 + v16 + 96);
    swift_bridgeObjectRetain();
    if ((v19 | 0x2000000u) >> 25 == 3)
    {
      v20 = *((_OWORD *)v18 + 5);
      *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
      *((_OWORD *)v17 + 5) = v20;
      *(_QWORD *)(v17 + 93) = *(_QWORD *)(v18 + 93);
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      v22 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v22;
    }
    else
    {
      v24 = *((_QWORD *)v18 + 1);
      v25 = v19;
      v26 = (void *)*((_QWORD *)v18 + 2);
      v27 = (void *)*((_QWORD *)v18 + 3);
      v39 = *((_QWORD *)v18 + 5);
      v40 = *((_QWORD *)v18 + 4);
      v37 = *((_QWORD *)v18 + 7);
      v38 = *((_QWORD *)v18 + 6);
      v41 = *((_QWORD *)v18 + 8);
      v42 = *((_QWORD *)v18 + 9);
      v43 = *((_QWORD *)v18 + 10);
      v44 = *((_QWORD *)v18 + 11);
      v28 = *(_QWORD *)v18;
      sub_23A963C14(*(_QWORD *)v18, v24, v26, v27, v40, v39, v38, v37, v41, v42, v43, v44, v25, SBYTE2(v25));
      *(_QWORD *)v17 = v28;
      *((_QWORD *)v17 + 1) = v24;
      *((_QWORD *)v17 + 2) = v26;
      *((_QWORD *)v17 + 3) = v27;
      *((_QWORD *)v17 + 4) = v40;
      *((_QWORD *)v17 + 5) = v39;
      *((_QWORD *)v17 + 6) = v38;
      *((_QWORD *)v17 + 7) = v37;
      *((_QWORD *)v17 + 8) = v41;
      *((_QWORD *)v17 + 9) = v42;
      *((_QWORD *)v17 + 10) = v43;
      *((_QWORD *)v17 + 11) = v44;
      *((_WORD *)v17 + 48) = v25;
      v17[98] = BYTE2(v25);
      *(_WORD *)(v17 + 99) = *(_WORD *)(v18 + 99);
    }
    v29 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)v4 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[15];
    v33 = (_QWORD *)((char *)v4 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23AA2A6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23AA32E1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  v7 = *(_DWORD *)(v6 + 96);
  if ((v7 | 0x2000000u) >> 25 != 3)
    sub_23A963AE0(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(void **)(v6 + 16), *(void **)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v7, SBYTE2(v7));
  return swift_bridgeObjectRelease();
}

_WORD *sub_23AA2A770(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v10);
  v13 = (_QWORD *)((char *)a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_DWORD *)((char *)a2 + v15 + 96);
  swift_bridgeObjectRetain();
  if ((v18 | 0x2000000u) >> 25 == 3)
  {
    v19 = *((_OWORD *)v17 + 5);
    *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
    *((_OWORD *)v16 + 5) = v19;
    *(_QWORD *)(v16 + 93) = *(_QWORD *)(v17 + 93);
    v20 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v20;
    v21 = *((_OWORD *)v17 + 3);
    *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
    *((_OWORD *)v16 + 3) = v21;
  }
  else
  {
    v22 = *((_QWORD *)v17 + 1);
    v23 = v18;
    v24 = (void *)*((_QWORD *)v17 + 2);
    v25 = (void *)*((_QWORD *)v17 + 3);
    v37 = *((_QWORD *)v17 + 5);
    v38 = *((_QWORD *)v17 + 4);
    v35 = *((_QWORD *)v17 + 7);
    v36 = *((_QWORD *)v17 + 6);
    v39 = *((_QWORD *)v17 + 8);
    v40 = *((_QWORD *)v17 + 9);
    v41 = *((_QWORD *)v17 + 10);
    v42 = *((_QWORD *)v17 + 11);
    v26 = *(_QWORD *)v17;
    sub_23A963C14(*(_QWORD *)v17, v22, v24, v25, v38, v37, v36, v35, v39, v40, v41, v42, v23, SBYTE2(v23));
    *(_QWORD *)v16 = v26;
    *((_QWORD *)v16 + 1) = v22;
    *((_QWORD *)v16 + 2) = v24;
    *((_QWORD *)v16 + 3) = v25;
    *((_QWORD *)v16 + 4) = v38;
    *((_QWORD *)v16 + 5) = v37;
    *((_QWORD *)v16 + 6) = v36;
    *((_QWORD *)v16 + 7) = v35;
    *((_QWORD *)v16 + 8) = v39;
    *((_QWORD *)v16 + 9) = v40;
    *((_QWORD *)v16 + 10) = v41;
    *((_QWORD *)v16 + 11) = v42;
    *((_WORD *)v16 + 48) = v23;
    v16[98] = BYTE2(v23);
    *(_WORD *)(v16 + 99) = *(_WORD *)(v17 + 99);
  }
  v27 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  v28 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v28) = *((_BYTE *)a2 + v28);
  v29 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  v30 = a3[15];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  return a1;
}

_WORD *sub_23AA2A964(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  int v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v69;
  uint64_t v70;
  unint64_t v71;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = a3[8];
  v14 = (uint64_t)a1 + v13;
  v15 = (char *)a2 + v13;
  if ((*(_DWORD *)((char *)a1 + v13 + 96) | 0x2000000u) >> 25 != 3)
  {
    v22 = *((_DWORD *)v15 + 24);
    if ((v22 | 0x2000000u) >> 25 == 3)
    {
      sub_23A9683BC(v14, &qword_2569D8EC8);
      v24 = *((_OWORD *)v15 + 1);
      v23 = *((_OWORD *)v15 + 2);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v24;
      *(_OWORD *)(v14 + 32) = v23;
      v26 = *((_OWORD *)v15 + 4);
      v25 = *((_OWORD *)v15 + 5);
      v27 = *((_OWORD *)v15 + 3);
      *(_QWORD *)(v14 + 93) = *(_QWORD *)(v15 + 93);
      *(_OWORD *)(v14 + 64) = v26;
      *(_OWORD *)(v14 + 80) = v25;
      *(_OWORD *)(v14 + 48) = v27;
      goto LABEL_9;
    }
    v33 = *((_DWORD *)v15 + 24);
    v60 = *((_QWORD *)v15 + 1);
    v62 = *(_QWORD *)v15;
    v34 = (void *)*((_QWORD *)v15 + 2);
    v35 = (void *)*((_QWORD *)v15 + 3);
    v36 = *((_QWORD *)v15 + 4);
    v37 = *((_QWORD *)v15 + 5);
    v56 = *((_QWORD *)v15 + 7);
    v58 = *((_QWORD *)v15 + 6);
    v64 = *((_QWORD *)v15 + 8);
    v66 = *((_QWORD *)v15 + 9);
    v68 = *((_QWORD *)v15 + 10);
    v70 = *((_QWORD *)v15 + 11);
    sub_23A963C14(*(_QWORD *)v15, v60, v34, v35, v36, v37, v58, v56, v64, v66, v68, v70, v22, SBYTE2(v22));
    v38 = *(_QWORD *)v14;
    v39 = *(_QWORD *)(v14 + 8);
    v40 = *(void **)(v14 + 16);
    v41 = *(void **)(v14 + 24);
    v42 = *(_QWORD *)(v14 + 32);
    v43 = *(_QWORD *)(v14 + 40);
    v44 = *(_QWORD *)(v14 + 48);
    v45 = *(_QWORD *)(v14 + 56);
    v46 = *(_OWORD *)(v14 + 64);
    v47 = *(_QWORD *)(v14 + 80);
    v48 = *(_QWORD *)(v14 + 88);
    v49 = *(_WORD *)(v14 + 96);
    v50 = *(_BYTE *)(v14 + 98);
    *(_QWORD *)v14 = v62;
    *(_QWORD *)(v14 + 8) = v60;
    *(_QWORD *)(v14 + 16) = v34;
    *(_QWORD *)(v14 + 24) = v35;
    *(_QWORD *)(v14 + 32) = v36;
    *(_QWORD *)(v14 + 40) = v37;
    *(_QWORD *)(v14 + 48) = v58;
    *(_QWORD *)(v14 + 56) = v56;
    *(_QWORD *)(v14 + 64) = v64;
    *(_QWORD *)(v14 + 72) = v66;
    *(_QWORD *)(v14 + 80) = v68;
    *(_QWORD *)(v14 + 88) = v70;
    *(_WORD *)(v14 + 96) = v33;
    *(_BYTE *)(v14 + 98) = BYTE2(v33);
    sub_23A963AE0(v38, v39, v40, v41, v42, v43, v44, v45, v46, *((uint64_t *)&v46 + 1), v47, v48, v49, v50);
LABEL_8:
    *(_BYTE *)(v14 + 99) = v15[99];
    *(_BYTE *)(v14 + 100) = v15[100];
    goto LABEL_9;
  }
  v16 = *((unsigned int *)v15 + 24);
  if ((v16 | 0x2000000) >> 25 != 3)
  {
    v28 = *(_QWORD *)v15;
    v29 = *((_QWORD *)v15 + 1);
    v71 = ((v16 | ((unint64_t)v15[100] << 32)) >> 16) & 0xFFFFFF;
    v30 = (void *)*((_QWORD *)v15 + 2);
    v31 = (void *)*((_QWORD *)v15 + 3);
    v32 = *((_QWORD *)v15 + 4);
    v57 = *((_QWORD *)v15 + 6);
    v59 = *((_QWORD *)v15 + 5);
    v55 = *((_QWORD *)v15 + 7);
    v61 = *((_QWORD *)v15 + 8);
    v63 = *((_QWORD *)v15 + 9);
    v65 = *((_QWORD *)v15 + 10);
    v67 = *((_QWORD *)v15 + 11);
    v69 = *((_DWORD *)v15 + 24);
    sub_23A963C14(*(_QWORD *)v15, v29, v30, v31, v32, v59, v57, v55, v61, v63, v65, v67, v16, SBYTE2(v16));
    *(_QWORD *)v14 = v28;
    *(_QWORD *)(v14 + 8) = v29;
    *(_QWORD *)(v14 + 16) = v30;
    *(_QWORD *)(v14 + 24) = v31;
    *(_QWORD *)(v14 + 32) = v32;
    *(_QWORD *)(v14 + 40) = v59;
    *(_QWORD *)(v14 + 48) = v57;
    *(_QWORD *)(v14 + 56) = v55;
    *(_QWORD *)(v14 + 64) = v61;
    *(_QWORD *)(v14 + 72) = v63;
    *(_QWORD *)(v14 + 80) = v65;
    *(_QWORD *)(v14 + 88) = v67;
    *(_WORD *)(v14 + 96) = v69;
    *(_BYTE *)(v14 + 98) = v71;
    goto LABEL_8;
  }
  v17 = *(_OWORD *)v15;
  v18 = *((_OWORD *)v15 + 2);
  *(_OWORD *)(v14 + 16) = *((_OWORD *)v15 + 1);
  *(_OWORD *)(v14 + 32) = v18;
  *(_OWORD *)v14 = v17;
  v19 = *((_OWORD *)v15 + 3);
  v20 = *((_OWORD *)v15 + 4);
  v21 = *((_OWORD *)v15 + 5);
  *(_QWORD *)(v14 + 93) = *(_QWORD *)(v15 + 93);
  *(_OWORD *)(v14 + 64) = v20;
  *(_OWORD *)(v14 + 80) = v21;
  *(_OWORD *)(v14 + 48) = v19;
LABEL_9:
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v51 = a3[15];
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_WORD *sub_23AA2ACE0(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[8];
  v12 = a3[9];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)(v13 + 93) = *(_QWORD *)(v14 + 93);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v16 = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((_OWORD *)v13 + 5) = v16;
  v17 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v17;
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v18 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  v19 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v20 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  return a1;
}

_WORD *sub_23AA2ADD0(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23AA32E1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(unsigned int *)((char *)a1 + v15 + 96);
  if ((v18 | 0x2000000) >> 25 != 3)
  {
    v19 = *((_DWORD *)v17 + 24);
    if ((v19 | 0x2000000u) >> 25 != 3)
    {
      v32 = (v18 | ((unint64_t)*(unsigned __int8 *)(v16 + 100) << 32)) >> 16;
      v33 = *(_QWORD *)v16;
      v34 = *(_QWORD *)(v16 + 8);
      v35 = *(void **)(v16 + 16);
      v36 = *(void **)(v16 + 24);
      v37 = *(_QWORD *)(v16 + 32);
      v38 = *(_QWORD *)(v16 + 40);
      v39 = *(_QWORD *)(v16 + 48);
      v40 = *(_QWORD *)(v16 + 56);
      v41 = *(_OWORD *)(v16 + 64);
      v42 = *(_QWORD *)(v16 + 80);
      v43 = *(_QWORD *)(v16 + 88);
      v44 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v44;
      v45 = *((_OWORD *)v17 + 3);
      *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
      *(_OWORD *)(v16 + 48) = v45;
      v46 = *((_OWORD *)v17 + 5);
      *(_OWORD *)(v16 + 64) = *((_OWORD *)v17 + 4);
      *(_OWORD *)(v16 + 80) = v46;
      *(_WORD *)(v16 + 96) = v19;
      *(_BYTE *)(v16 + 98) = BYTE2(v19);
      sub_23A963AE0(v33, v34, v35, v36, v37, v38, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, v43, v18, v32);
      *(_WORD *)(v16 + 99) = *(_WORD *)(v17 + 99);
      goto LABEL_5;
    }
    sub_23A9683BC(v16, &qword_2569D8EC8);
  }
  v20 = *((_OWORD *)v17 + 5);
  *(_OWORD *)(v16 + 64) = *((_OWORD *)v17 + 4);
  *(_OWORD *)(v16 + 80) = v20;
  *(_QWORD *)(v16 + 93) = *(_QWORD *)(v17 + 93);
  v21 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v21;
  v22 = *((_OWORD *)v17 + 3);
  *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
  *(_OWORD *)(v16 + 48) = v22;
LABEL_5:
  v23 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  v24 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v25 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  v26 = a3[15];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23AA2AFA8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AA2AFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23AA32E1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23AA2B038()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AA2B044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23AA32E1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FMFindingViewState()
{
  uint64_t result;

  result = qword_2569D8F28;
  if (!qword_2569D8F28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AA2B100()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23AA32E1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23AA2B1B0()
{
  __int16 *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v7;
  unsigned int v8;

  if ((*v0 & 0x80000000) == 0)
    return 4;
  v2 = type metadata accessor for FMFindingViewState();
  if ((*((_BYTE *)v0 + *(int *)(v2 + 44)) & 1) != 0)
    return 3;
  v3 = v2;
  result = 0;
  v4 = (char *)v0 + *(int *)(v3 + 32);
  v5 = *((_DWORD *)v4 + 24);
  if ((v5 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v5 & 0xFF0000) == 0x40000 && *((_QWORD *)v4 + 2) != 1)
  {
    v7 = *((_QWORD *)v4 + 7);
    if ((v4[40] & 1) != 0)
    {
      if ((v7 & 0x100) != 0)
        v8 = 3;
      else
        v8 = 2;
      if ((v7 & 0x101) != 0)
        return v8;
      else
        return 1;
    }
    else if ((v7 & 0x100) != 0)
    {
      return 3;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23AA2B26C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _WORD *a3@<X8>)
{
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v5 = (int *)type metadata accessor for FMFindingViewState();
  v6 = (_QWORD *)((char *)a3 + v5[15]);
  *v6 = 0;
  v6[1] = 0;
  *a3 = *(_WORD *)a1;
  v7 = sub_23A9C79F0();
  v8 = (uint64_t *)((char *)a3 + v5[6]);
  *v8 = v7;
  v8[1] = v9;
  sub_23A9C722C((uint64_t)v37);
  v10 = v38;
  v11 = v39;
  sub_23A96545C(v37, v38);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_23A963B3C((uint64_t)v37);
  sub_23A968378(a1 + 24, (uint64_t)v37, &qword_2569D53C8);
  v12 = v38;
  sub_23A9683BC((uint64_t)v37, &qword_2569D53C8);
  if (v12)
    v13 = 0;
  else
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) > 1uLL;
  *((_BYTE *)a3 + v5[7]) = v13;
  v14 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v14 + 16)
    && (v15 = type metadata accessor for FMFindingSessionState(),
        v16 = sub_23AA1D250(a1 + *(int *)(v15 + 36)),
        (v17 & 1) != 0))
  {
    v18 = *(_QWORD *)(v14 + 56) + 104 * v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(void **)(v18 + 16);
    v22 = *(void **)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_QWORD *)(v18 + 40);
    v31 = a1;
    v25 = *(_QWORD *)(v18 + 48);
    v26 = *(_QWORD *)(v18 + 56);
    v29 = *(_QWORD *)(v18 + 64);
    v30 = *(_QWORD *)(v18 + 72);
    v32 = *(_QWORD *)(v18 + 80);
    v33 = *(_QWORD *)(v18 + 88);
    v34 = *(_BYTE *)(v18 + 100);
    v35 = *(_DWORD *)(v18 + 96);
    sub_23A963BDC(*(_QWORD *)v18, v20, v21, v22, v23, v24, v25, v26, v29, v30, v32, v33, v35);
    result = sub_23A973324(v31, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingSessionState);
    v28 = (char *)a3 + v5[8];
    *(_QWORD *)v28 = v19;
    *((_QWORD *)v28 + 1) = v20;
    *((_QWORD *)v28 + 2) = v21;
    *((_QWORD *)v28 + 3) = v22;
    *((_QWORD *)v28 + 4) = v23;
    *((_QWORD *)v28 + 5) = v24;
    *((_QWORD *)v28 + 6) = v25;
    *((_QWORD *)v28 + 7) = v26;
    *((_QWORD *)v28 + 8) = v29;
    *((_QWORD *)v28 + 9) = v30;
    *((_QWORD *)v28 + 10) = v32;
    *((_QWORD *)v28 + 11) = v33;
    v28[100] = v34;
    *((_DWORD *)v28 + 24) = v35;
    *((_BYTE *)a3 + v5[9]) = a2;
    *((_BYTE *)a3 + v5[10]) = 0;
    *((_BYTE *)a3 + v5[11]) = 0;
    *((_BYTE *)a3 + v5[12]) = 0;
    *((_BYTE *)a3 + v5[13]) = 0;
    *((_BYTE *)a3 + v5[14]) = 0;
  }
  else
  {
    result = sub_23AA335A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AA2B4DC()
{
  __int16 *v0;
  int *v1;
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t result;
  char v6;
  char v7;
  char *v8;
  int v9;
  char *v11;
  int v12;
  BOOL v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  if ((v4 & 0x80000000) == 0)
    return 0x3FF0000000000000;
  if ((v4 & 1) == 0)
    return 0;
  if ((*((_BYTE *)v0 + v1[11]) & 1) == 0)
  {
    v11 = (char *)v0 + v1[8];
    v12 = *((_DWORD *)v11 + 24);
    if ((v12 & 0xFC000000) == 0x4000000
      || ((*(_QWORD *)&v12 & 0xFF0000) == 0x40000 ? (v13 = *((_QWORD *)v11 + 2) == 1) : (v13 = 1),
          v13 || (v11[40] & 1) == 0 && (*((_QWORD *)v11 + 7) & 0x100) == 0))
    {
      swift_bridgeObjectRelease();
      sub_23A9EA28C((uint64_t)v0, (uint64_t)v3);
      goto LABEL_24;
    }
  }
  v6 = sub_23AA33728();
  swift_bridgeObjectRelease();
  sub_23A9EA28C((uint64_t)v0, (uint64_t)v3);
  if ((v6 & 1) != 0)
  {
LABEL_24:
    sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    return 0;
  }
  v7 = v3[v1[10]];
  sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  if ((v7 & 1) != 0)
    return 0;
  v8 = (char *)v0 + v1[8];
  v9 = *((_DWORD *)v8 + 24);
  result = 0x3FF0000000000000;
  if ((v9 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v9 & 0xFF0000) == 0x40000 && *((_QWORD *)v8 + 2) != 1)
  {
    if ((v8[40] & 1) != 0)
      return 0;
    else
      return 0x3FF0000000000000;
  }
  return result;
}

uint64_t sub_23AA2B70C()
{
  __int16 *v0;
  int *v1;
  uint64_t v2;
  char *v3;
  int v4;
  char v6;
  int v7;
  char *v8;
  int v9;
  BOOL v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v0 < 0)
  {
    if ((*((_BYTE *)v0 + v1[11]) & 1) != 0
      || (v8 = (char *)v0 + v1[8], v9 = *((_DWORD *)v8 + 24), (v9 & 0xFC000000) != 0x4000000)
      && ((*(_QWORD *)&v9 & 0xFF0000) == 0x40000 ? (v10 = *((_QWORD *)v8 + 2) == 1) : (v10 = 1),
          !v10 && ((v8[40] & 1) != 0 || (*((_QWORD *)v8 + 7) & 0x100) != 0)))
    {
      v6 = sub_23AA33728();
      swift_bridgeObjectRelease();
      sub_23A9EA28C((uint64_t)v0, (uint64_t)v3);
      if ((v6 & 1) == 0)
      {
        v7 = v3[v1[10]];
        sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
        if (v7)
          return 0;
        else
          return 0x3FF0000000000000;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_23A9EA28C((uint64_t)v0, (uint64_t)v3);
    }
    sub_23A973324((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    return 0;
  }
  v4 = *(_DWORD *)((char *)v0 + v1[8] + 96);
  if ((v4 & 0xFE000000) == 0x4000000)
    return 0;
  if ((v4 & 0xFE000000) != 0x6000000)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_23AA2B940()
{
  __int16 *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  int v8;
  char v10;
  char *v11;
  int v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v1 = (int *)type metadata accessor for FMFindingViewState();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - v5;
  v7 = *v0;
  if (v7 < 0)
  {
    if ((v7 & 1) == 0)
      return 0;
    if ((*((_BYTE *)v0 + v1[11]) & 1) != 0)
    {
      v10 = 3;
    }
    else
    {
      v10 = 0;
      v11 = (char *)v0 + v1[8];
      v12 = *((_DWORD *)v11 + 24);
      if ((v12 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v12 & 0xFF0000) == 0x40000 && *((_QWORD *)v11 + 2) != 1)
      {
        v14 = *((_QWORD *)v11 + 7);
        v15 = v11[40];
        if ((v14 & 0x100) != 0)
          v16 = 3;
        else
          v16 = 0;
        if ((v14 & 0x100) != 0)
          v17 = 3;
        else
          v17 = 2;
        if ((v14 & 0x101) != 0)
          v18 = v17;
        else
          v18 = 1;
        if ((v15 & 1) != 0)
          v10 = v18;
        else
          v10 = v16;
      }
    }
    v19 = *((unsigned __int8 *)v0 + v1[9]);
    if (v19 == 10)
    {
      sub_23A9EA28C((uint64_t)v0, (uint64_t)v6);
    }
    else
    {
      if (sub_23A9B3278(v19) == 0xD000000000000014 && v21 == 0x800000023AA3AEB0)
      {
        swift_bridgeObjectRelease();
        sub_23A9EA28C((uint64_t)v0, (uint64_t)v6);
        goto LABEL_39;
      }
      v23 = sub_23AA33728();
      swift_bridgeObjectRelease();
      sub_23A9EA28C((uint64_t)v0, (uint64_t)v6);
      if ((v23 & 1) != 0)
      {
LABEL_39:
        sub_23A973324((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
        __asm { BR              X12 }
      }
    }
    v20 = v6[v1[9]];
    if (v20 != 10)
    {
      if (sub_23A9B3278(v20) == 0xD000000000000030 && v22 == 0x800000023AA3AEF0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23AA33728();
        swift_bridgeObjectRelease();
      }
    }
    goto LABEL_39;
  }
  v8 = *(_DWORD *)((char *)v0 + v1[8] + 96);
  if ((v8 & 0xFE000000) == 0x4000000)
    return 0;
  if ((v8 & 0xFE000000) != 0x6000000)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_23AA2BDDC()
{
  __int16 *v0;
  uint64_t v1;
  int *v3;
  char *v4;
  int v5;
  uint64_t v7;
  char v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if ((*v0 & 0x80000000) == 0)
    return 0;
  v3 = (int *)type metadata accessor for FMFindingViewState();
  if ((*((_BYTE *)v0 + v3[11]) & 1) != 0)
    goto LABEL_5;
  v4 = (char *)v0 + v3[8];
  v5 = *((_DWORD *)v4 + 24);
  if ((v5 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v5 & 0xFF0000) == 0x40000 && *((_QWORD *)v4 + 2) != 1)
  {
    v7 = *((_QWORD *)v4 + 7);
    if ((v4[40] & 1) == 0)
    {
      if ((v7 & 0x100) == 0)
        goto LABEL_17;
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if ((v7 & 0x101) != 0 && ((v7 & 0x100) != 0 || 0x800000023AA3C2B0 == 0x800000023AA3C290))
      goto LABEL_5;
  }
LABEL_17:
  v8 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
    return 0;
LABEL_18:
  if ((*((_BYTE *)v0 + v3[10]) & 1) != 0)
    return 0;
  v9 = (char *)v0 + v3[8];
  v10 = *((_DWORD *)v9 + 24);
  if ((v10 | 0x2000000u) >> 25 == 3)
    return 0;
  v11 = *((_DWORD *)v9 + 24);
  if ((*(_QWORD *)&v10 & 0xFF0000) != 0x40000)
    return 0;
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v15 = (void *)*((_QWORD *)v9 + 2);
  v14 = (void *)*((_QWORD *)v9 + 3);
  v16 = *((_QWORD *)v9 + 4);
  v17 = *((_QWORD *)v9 + 5);
  v19 = *((_QWORD *)v9 + 6);
  v18 = *((_QWORD *)v9 + 7);
  v20 = *((_QWORD *)v9 + 8);
  v21 = *((_QWORD *)v9 + 9);
  v22 = *((_QWORD *)v9 + 10);
  v23 = *((_QWORD *)v9 + 11);
  v29 = v22;
  v30 = v20;
  v28 = v23;
  if (v15 == (void *)1)
  {
    v24 = *(_QWORD *)v9;
    sub_23A963C14(v12, v13, (void *)1, v14, v16, v17, v19, v18, v20, v21, v22, v23, v11, 4);
    sub_23A963C14(v24, v13, (void *)1, v14, v16, v17, v19, v18, v30, v21, v29, v28, v11, 4);
    return 0;
  }
  else
  {
    v27 = *(_QWORD *)v9;
    sub_23A963C14(v12, v13, v15, v14, v16, v17, v19, v18, v20, v21, v22, v23, v11, 4);
    v25 = sub_23A96A54C();
    v26 = v17;
    v1 = v25;
    sub_23A963F38(v27, v13, v15, v14, v16, v26, v19, v18, v30, v21, v29, v28, v11);
  }
  return v1;
}

uint64_t sub_23AA2C134()
{
  __int16 *v0;
  int *v2;
  char *v3;
  int v4;
  uint64_t v6;
  char v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if ((*v0 & 0x80000000) == 0)
    return 0;
  v2 = (int *)type metadata accessor for FMFindingViewState();
  if ((*((_BYTE *)v0 + v2[11]) & 1) != 0)
  {
    if (0x800000023AA3C290 == 0x800000023AA3C2B0)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  else
  {
    v3 = (char *)v0 + v2[8];
    v4 = *((_DWORD *)v3 + 24);
    if ((v4 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v4 & 0xFF0000) == 0x40000 && *((_QWORD *)v3 + 2) != 1)
    {
      v6 = *((_QWORD *)v3 + 7);
      if ((v3[40] & 1) != 0)
      {
        if ((v6 & 0x101) != 0 && ((v6 & 0x100) == 0 || 0x800000023AA3C290 == 0x800000023AA3C2B0))
          goto LABEL_5;
      }
      else if ((v6 & 0x100) != 0 && 0x800000023AA3C290 == 0x800000023AA3C2B0)
      {
        goto LABEL_5;
      }
    }
  }
  v7 = sub_23AA33728();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    return 0;
LABEL_19:
  if ((*((_BYTE *)v0 + v2[10]) & 1) != 0)
    return 0;
  v8 = (char *)v0 + v2[8];
  v9 = *((_DWORD *)v8 + 24);
  if ((v9 | 0x2000000u) >> 25 == 3)
    return 0;
  v10 = *((_DWORD *)v8 + 24);
  if ((*(_QWORD *)&v9 & 0xFF0000) != 0x40000)
    return 0;
  v11 = *(_QWORD *)v8;
  v12 = *((_QWORD *)v8 + 1);
  v13 = (void *)*((_QWORD *)v8 + 2);
  v14 = (void *)*((_QWORD *)v8 + 3);
  v15 = *((_QWORD *)v8 + 4);
  v16 = *((_QWORD *)v8 + 5);
  v18 = *((_QWORD *)v8 + 6);
  v17 = *((_QWORD *)v8 + 7);
  v20 = *((uint64_t *)v8 + 8);
  v19 = *((_QWORD *)v8 + 9);
  v21 = *((_QWORD *)v8 + 10);
  v22 = *((_QWORD *)v8 + 11);
  if (v13 == (void *)1)
  {
    v34 = *((_QWORD *)v8 + 8);
    v36 = *((_QWORD *)v8 + 10);
    v38 = *((_QWORD *)v8 + 9);
    v23 = *((_QWORD *)v8 + 11);
    sub_23A963C14(v11, v12, (void *)1, v14, v15, v16, v18, v17, v34, v19, v21, v22, v10, 4);
    sub_23A963C14(v11, v12, (void *)1, v14, v15, v16, v18, v17, v34, v38, v36, v23, v10, 4);
    return 0;
  }
  else
  {
    if ((v10 & 0x100) != 0)
    {
      v32 = 2.11024;
    }
    else
    {
      v35 = *(_QWORD *)v8;
      v37 = *((_QWORD *)v8 + 10);
      v24 = *((_QWORD *)v8 + 1);
      v25 = (void *)*((_QWORD *)v8 + 3);
      v26 = *((_QWORD *)v8 + 4);
      v27 = *((_QWORD *)v8 + 5);
      v28 = *((_QWORD *)v8 + 6);
      v29 = *((_QWORD *)v8 + 7);
      v39 = *((_QWORD *)v8 + 9);
      v30 = *((_QWORD *)v8 + 11);
      sub_23A963C14(*(_QWORD *)v8, v24, v13, v25, v26, v27, v28, v29, v20, v19, v21, v22, v10, 4);
      if (qword_2569D4B70 != -1)
        swift_once();
      v31 = *(double *)&qword_2569E0500;
      sub_23A963F38(v35, v24, v13, v25, v26, v27, v28, v29, v20, v39, v37, v30, v10);
      v32 = 4.0 - v31;
      if (4.0 - v31 < 0.0)
        v32 = 0.0;
    }
    v33 = (4.0 - *(double *)&v20) / v32;
    if (v33 < 0.0)
      v33 = 0.0;
    return fmin(v33, 1.0);
  }
}

double sub_23AA2C540(double result)
{
  __int16 *v1;
  int *v2;
  char *v3;
  int v4;
  uint64_t v6;
  char v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  double v12;

  if ((*v1 & 0x80000000) == 0)
    return result;
  v2 = (int *)type metadata accessor for FMFindingViewState();
  if ((*((_BYTE *)v1 + v2[11]) & 1) != 0)
    goto LABEL_4;
  v3 = (char *)v1 + v2[8];
  v4 = *((_DWORD *)v3 + 24);
  if ((v4 & 0xFC000000) == 0x4000000)
    goto LABEL_16;
  if ((*(_QWORD *)&v4 & 0xFF0000) != 0x40000 || *((_QWORD *)v3 + 2) == 1)
    goto LABEL_16;
  v6 = *((_QWORD *)v3 + 7);
  if ((v3[40] & 1) != 0)
  {
    if ((v6 & 0x101) != 0 && ((v6 & 0x100) != 0 || 0x800000023AA3C2B0 == 0x800000023AA3C290))
      goto LABEL_4;
LABEL_16:
    v7 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return result;
    goto LABEL_17;
  }
  if ((v6 & 0x100) == 0)
    goto LABEL_16;
LABEL_4:
  swift_bridgeObjectRelease();
LABEL_17:
  if ((*((_BYTE *)v1 + v2[10]) & 1) == 0)
  {
    v8 = (char *)v1 + v2[8];
    v9 = *((_DWORD *)v8 + 24);
    if ((v9 | 0x2000000u) >> 25 != 3 && (*(_QWORD *)&v9 & 0xFF0000) == 0x40000)
    {
      v10 = *(uint64_t *)v8;
      v11 = *((_QWORD *)v8 + 1);
      if (*((_QWORD *)v8 + 2) == 1)
      {
        sub_23A963C14(v10, v11, (void *)1, *((void **)v8 + 3), *((_QWORD *)v8 + 4), *((_QWORD *)v8 + 5), *((_QWORD *)v8 + 6), *((_QWORD *)v8 + 7), *((_QWORD *)v8 + 8), *((_QWORD *)v8 + 9), *((_QWORD *)v8 + 10), *((_QWORD *)v8 + 11), v9, 4);
      }
      else if ((v11 & 1) == 0)
      {
        v12 = (1.2192 - *(double *)&v10) / 1.2192;
        if (v12 < 0.0)
          v12 = 0.0;
        return fmin(v12, 1.0);
      }
    }
  }
  return result;
}

uint64_t sub_23AA2C760@<X0>(unsigned __int16 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[24];
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v3 = v2;
  v6 = sub_23AA32E1C();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *a1;
  sub_23A9C722C((uint64_t)v68);
  v9 = v69;
  v10 = v70;
  sub_23A96545C(v68, v69);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
  v63 = v8;
  v11(v9, v10);
  v12 = sub_23A9C79F0();
  v60 = v13;
  v61 = v12;
  sub_23A968378((uint64_t)(a1 + 12), (uint64_t)v66, &qword_2569D53C8);
  v14 = v67;
  sub_23A9683BC((uint64_t)v66, &qword_2569D53C8);
  if (v14)
    v59 = 0;
  else
    v59 = *(_QWORD *)(*((_QWORD *)a1 + 2) + 16) > 1uLL;
  v15 = *((_QWORD *)a1 + 8);
  if (*(_QWORD *)(v15 + 16)
    && (v16 = type metadata accessor for FMFindingSessionState(),
        v17 = sub_23AA1D250((uint64_t)a1 + *(int *)(v16 + 36)),
        (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(v15 + 56) + 104 * v17;
    v20 = *(_QWORD *)v19;
    v56 = *(_QWORD *)(v19 + 8);
    v57 = v20;
    v55 = *(void **)(v19 + 16);
    v54 = *(void **)(v19 + 24);
    v53 = *(_QWORD *)(v19 + 32);
    v52 = *(_QWORD *)(v19 + 40);
    v51 = *(_QWORD *)(v19 + 48);
    v21 = *(_QWORD *)(v19 + 64);
    v50 = *(_QWORD *)(v19 + 56);
    v22 = *(_QWORD *)(v19 + 72);
    v23 = *(_QWORD *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 88);
    v25 = *(unsigned __int8 *)(v19 + 100);
    v26 = *(unsigned int *)(v19 + 96);
    v58 = v26 | (v25 << 32);
    v27 = (int *)type metadata accessor for FMFindingViewState();
    v28 = *(_BYTE *)(v3 + v27[9]);
    v49 = *(unsigned __int8 *)(v3 + v27[10]);
    v29 = v27[12];
    v47 = *(unsigned __int8 *)(v3 + v27[11]);
    v48 = *(unsigned __int8 *)(v3 + v29);
    v30 = v27[14];
    v46 = *(unsigned __int8 *)(v3 + v27[13]);
    v31 = *(_BYTE *)(v3 + v30);
    v32 = &a2[v27[15]];
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0;
    *(_WORD *)a2 = v62;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&a2[v27[5]], v63, v65);
    v33 = (uint64_t *)&a2[v27[6]];
    v34 = v60;
    *v33 = v61;
    v33[1] = v34;
    a2[v27[7]] = v59;
    v35 = &a2[v27[8]];
    v37 = v56;
    v36 = v57;
    *(_QWORD *)v35 = v57;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v55;
    v39 = v54;
    *((_QWORD *)v35 + 2) = v55;
    *((_QWORD *)v35 + 3) = v39;
    v40 = v53;
    v41 = v52;
    *((_QWORD *)v35 + 4) = v53;
    *((_QWORD *)v35 + 5) = v41;
    v42 = v51;
    v43 = v50;
    *((_QWORD *)v35 + 6) = v51;
    *((_QWORD *)v35 + 7) = v43;
    *((_QWORD *)v35 + 8) = v21;
    *((_QWORD *)v35 + 9) = v22;
    *((_QWORD *)v35 + 10) = v23;
    *((_QWORD *)v35 + 11) = v24;
    v35[100] = v25;
    *((_DWORD *)v35 + 24) = v26;
    a2[v27[9]] = v28;
    a2[v27[10]] = v49;
    a2[v27[11]] = v47;
    a2[v27[12]] = v48;
    a2[v27[13]] = v46;
    a2[v27[14]] = v31;
    sub_23A963BDC(v36, v37, v38, v39, v40, v41, v42, v43, v21, v22, v23, v24, v58);
    return sub_23A963B3C((uint64_t)v68);
  }
  else
  {
    result = sub_23AA335A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AA2CAD0@<X0>(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, char *a6@<X8>)
{
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  int v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  char v46;
  int v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  uint64_t result;
  char *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;

  v7 = v6;
  v72 = a5;
  v65 = a4;
  LODWORD(v69) = a3;
  v64 = a2;
  v9 = a1;
  v10 = (int *)type metadata accessor for FMFindingViewState();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v63 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v63 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v63 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v63 - v23;
  v25 = sub_23AA32E1C();
  MEMORY[0x24BDAC7A8](v25);
  v71 = *v7;
  v73 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v27;
  v28 = *(void (**)(void))(v27 + 16);
  v75 = v29;
  v28();
  v30 = v10[7];
  v31 = (uint64_t *)((char *)v7 + v10[6]);
  v32 = v31[1];
  v68 = *v31;
  v70 = *((unsigned __int8 *)v7 + v30);
  v33 = v10[9];
  v34 = (char *)v7 + v10[8];
  v35 = *((_QWORD *)v34 + 1);
  v76 = *(_QWORD *)v34;
  v77 = v35;
  v36 = (void *)*((_QWORD *)v34 + 3);
  v78 = (void *)*((_QWORD *)v34 + 2);
  v79 = v36;
  v37 = *((_QWORD *)v34 + 5);
  v80 = *((_QWORD *)v34 + 4);
  v81 = v37;
  v82 = *((_QWORD *)v34 + 6);
  v84 = *((_QWORD *)v34 + 7);
  v38 = *((_QWORD *)v34 + 9);
  v86 = *((_QWORD *)v34 + 8);
  v87 = v38;
  v88 = *((unsigned int *)v34 + 24) | ((unint64_t)v34[100] << 32);
  v40 = *((_QWORD *)v34 + 10);
  v39 = *((_QWORD *)v34 + 11);
  v83 = v40;
  v85 = v39;
  v67 = *((unsigned __int8 *)v7 + v33);
  sub_23A9EA28C((uint64_t)v7, (uint64_t)v24);
  if (v9 == 2)
    v41 = v24[v10[10]];
  else
    v41 = v9 & 1;
  v66 = v41;
  v42 = v69;
  v69 = v32;
  swift_bridgeObjectRetain();
  sub_23A963BDC(v76, v77, v78, v79, v80, v81, v82, v84, v86, v87, v83, v85, v88);
  sub_23A973324((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)v7, (uint64_t)v22);
  v43 = (uint64_t)v13;
  if (v64 == 2)
    v44 = v22[v10[11]];
  else
    v44 = v64 & 1;
  v64 = v44;
  v45 = v65;
  sub_23A973324((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)v7, (uint64_t)v19);
  if (v42 == 2)
    v46 = v19[v10[12]];
  else
    v46 = v42 & 1;
  v47 = v72;
  sub_23A973324((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)v7, (uint64_t)v16);
  if (v45 == 2)
    v48 = v16[v10[13]];
  else
    v48 = v45 & 1;
  sub_23A973324((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v49 = v43;
  sub_23A9EA28C((uint64_t)v7, v43);
  if (v47 == 2)
    v50 = *(_BYTE *)(v43 + v10[14]);
  else
    v50 = v47 & 1;
  v51 = v69;
  sub_23A973324(v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v52 = &a6[v10[15]];
  *(_QWORD *)v52 = 0;
  *((_QWORD *)v52 + 1) = 0;
  *(_WORD *)a6 = v71;
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(&a6[v10[5]], v73, v75);
  v54 = &a6[v10[6]];
  *(_QWORD *)v54 = v68;
  *((_QWORD *)v54 + 1) = v51;
  a6[v10[7]] = v70;
  v55 = &a6[v10[8]];
  v56 = v77;
  *(_QWORD *)v55 = v76;
  *((_QWORD *)v55 + 1) = v56;
  v57 = v79;
  *((_QWORD *)v55 + 2) = v78;
  *((_QWORD *)v55 + 3) = v57;
  v58 = v81;
  *((_QWORD *)v55 + 4) = v80;
  *((_QWORD *)v55 + 5) = v58;
  v59 = v84;
  *((_QWORD *)v55 + 6) = v82;
  *((_QWORD *)v55 + 7) = v59;
  v60 = v87;
  *((_QWORD *)v55 + 8) = v86;
  *((_QWORD *)v55 + 9) = v60;
  v61 = v85;
  *((_QWORD *)v55 + 10) = v83;
  *((_QWORD *)v55 + 11) = v61;
  v62 = v88;
  v55[100] = BYTE4(v88);
  *((_DWORD *)v55 + 24) = v62;
  a6[v10[9]] = v67;
  a6[v10[10]] = v66;
  a6[v10[11]] = v64;
  a6[v10[12]] = v46;
  a6[v10[13]] = v48;
  a6[v10[14]] = v50;
  return result;
}

uint64_t sub_23AA2CF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for FMFindingViewState();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_23AA2D0F0(a1) & 1) != 0)
  {
    v7 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 36));
    if (v7 == 10)
    {
      sub_23A9EA28C(v1, (uint64_t)v5);
      goto LABEL_10;
    }
    if (sub_23A9B3278(v7) == 0xD000000000000019 && v8 == 0x800000023AA3AED0)
    {
      swift_bridgeObjectRelease();
      sub_23A9EA28C(v1, (uint64_t)v5);
      v6 = 1;
    }
    else
    {
      v9 = sub_23AA33728();
      swift_bridgeObjectRelease();
      sub_23A9EA28C(v1, (uint64_t)v5);
      if ((v9 & 1) == 0)
      {
LABEL_10:
        v10 = v5[*(int *)(v3 + 36)];
        if (v10 == 10)
        {
          v6 = 0;
        }
        else if (sub_23A9B3278(v10) == 0xD000000000000030 && v11 == 0x800000023AA3AEF0)
        {
          swift_bridgeObjectRelease();
          v6 = 1;
        }
        else
        {
          v6 = sub_23AA33728();
          swift_bridgeObjectRelease();
        }
        goto LABEL_16;
      }
      v6 = 1;
    }
LABEL_16:
    sub_23A973324((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    return v6 & 1;
  }
  v6 = 0;
  return v6 & 1;
}

uint64_t sub_23AA2D0F0(uint64_t a1)
{
  __int16 *v1;
  __int16 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char *v14;
  int v15;
  uint64_t v17;
  char v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  __int16 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;

  v2 = v1;
  v4 = sub_23A964084(&qword_2569D7960);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - v8;
  sub_23A968378(a1, (uint64_t)&v40 - v8, &qword_2569D7960);
  v10 = (int *)type metadata accessor for FMFindingViewState();
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23A9683BC((uint64_t)v9, &qword_2569D7960);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v11 + 56))(v7, 1, 1, v10);
    v12 = sub_23AA2D0F0(v7);
    sub_23A9683BC((uint64_t)v7, &qword_2569D7960);
    sub_23A973324((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    if (v12 != 2)
    {
      v13 = v12 & 1;
      if ((*v2 & 0x80000000) == 0)
        return 2;
      goto LABEL_7;
    }
  }
  v13 = 0;
  if ((*v2 & 0x80000000) == 0)
    return 2;
LABEL_7:
  if ((*((_BYTE *)v2 + v10[11]) & 1) == 0)
  {
    v14 = (char *)v2 + v10[8];
    v15 = *((_DWORD *)v14 + 24);
    if ((v15 & 0xFC000000) != 0x4000000 && (*(_QWORD *)&v15 & 0xFF0000) == 0x40000 && *((_QWORD *)v14 + 2) != 1)
    {
      v17 = *((_QWORD *)v14 + 7);
      if ((v14[40] & 1) != 0)
      {
        if ((v17 & 0x101) != 0 && ((v17 & 0x100) != 0 || 0x800000023AA3C2B0 == 0x800000023AA3C290))
          goto LABEL_8;
      }
      else if ((v17 & 0x100) != 0)
      {
        goto LABEL_8;
      }
    }
    v18 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      return 2;
    goto LABEL_21;
  }
LABEL_8:
  swift_bridgeObjectRelease();
LABEL_21:
  if ((*((_BYTE *)v2 + v10[10]) & 1) == 0)
  {
    v19 = (char *)v2 + v10[8];
    v20 = *((_DWORD *)v19 + 24);
    if ((v20 | 0x2000000u) >> 25 != 3)
    {
      v21 = *((_DWORD *)v19 + 24);
      if ((*(_QWORD *)&v20 & 0xFF0000) == 0x40000)
      {
        v23 = *(_QWORD *)v19;
        v22 = *((_QWORD *)v19 + 1);
        v25 = (void *)*((_QWORD *)v19 + 2);
        v24 = (void *)*((_QWORD *)v19 + 3);
        v26 = *((_QWORD *)v19 + 4);
        v27 = *((_QWORD *)v19 + 5);
        v28 = *((_QWORD *)v19 + 6);
        v29 = *((_QWORD *)v19 + 7);
        v30 = *((_QWORD *)v19 + 8);
        v31 = *((_QWORD *)v19 + 9);
        v32 = *((_QWORD *)v19 + 10);
        v33 = *((_QWORD *)v19 + 11);
        v43 = v32;
        v44 = v30;
        if (v25 != (void *)1)
        {
          v45 = v23;
          v46 = v22 & 1;
          v47 = v25;
          v48 = v24;
          v49 = v26;
          v50 = v27 & 1;
          v51 = v28;
          v52 = v29 & 0x101;
          v53 = v30;
          v54 = v31 & 0x101;
          v55 = BYTE2(v31) & 1;
          v56 = v32;
          v57 = v33;
          v58 = v21 & 0x101;
          v41 = v22;
          v42 = v23;
          v40 = v33;
          sub_23A963C14(v23, v22, v25, v24, v26, v27, v28, v29, v30, v31, v32, v33, v21, 4);
          v38 = sub_23A96A668(v13);
          sub_23A963F38(v42, v41, v25, v24, v26, v27, v28, v29, v44, v31, v43, v40, v21);
          return v38;
        }
        v34 = v22;
        v35 = v27;
        v36 = v27;
        v37 = v33;
        sub_23A963C14(v23, v22, (void *)1, v24, v26, v36, v28, v29, v30, v31, v32, v33, v21, 4);
        sub_23A963C14(v23, v34, (void *)1, v24, v26, v35, v28, v29, v44, v31, v43, v37, v21, 4);
      }
    }
  }
  return 2;
}

void sub_23AA2D564()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  char v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  char v8;
  double v9;
  char v10;
  int *v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;

  sub_23A964084((uint64_t *)&unk_2569D6690);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23AA3AA20;
  v2 = COERCE_DOUBLE(sub_23AA2B4DC());
  if ((v3 & 1) != 0)
    v4 = -100.0;
  else
    v4 = v2 * 100.0;
  v5 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE50B0];
  v6 = sub_23AA2E608();
  *(_QWORD *)(v1 + 64) = v6;
  *(double *)(v1 + 32) = v4;
  v7 = COERCE_DOUBLE(sub_23AA2B70C()) * 100.0;
  if ((v8 & 1) != 0)
    v7 = -100.0;
  *(_QWORD *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 104) = v6;
  *(double *)(v1 + 72) = v7;
  v9 = COERCE_DOUBLE(sub_23AA2B940()) * 100.0;
  if ((v10 & 1) != 0)
    v9 = -100.0;
  *(_QWORD *)(v1 + 136) = v5;
  *(_QWORD *)(v1 + 144) = v6;
  *(double *)(v1 + 112) = v9;
  v11 = (int *)type metadata accessor for FMFindingViewState();
  v12 = *(unsigned __int8 *)(v0 + v11[10]);
  v13 = sub_23A9640C4();
  v14 = 1702195828;
  if (v12)
    v15 = 1702195828;
  else
    v15 = 0x65736C6166;
  if (v12)
    v16 = 0xE400000000000000;
  else
    v16 = 0xE500000000000000;
  v17 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v1 + 176) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v1 + 184) = v13;
  *(_QWORD *)(v1 + 152) = v15;
  *(_QWORD *)(v1 + 160) = v16;
  if (*(_BYTE *)(v0 + v11[11]))
    v18 = 1702195828;
  else
    v18 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v11[11]))
    v19 = 0xE400000000000000;
  else
    v19 = 0xE500000000000000;
  *(_QWORD *)(v1 + 216) = v17;
  *(_QWORD *)(v1 + 224) = v13;
  *(_QWORD *)(v1 + 192) = v18;
  *(_QWORD *)(v1 + 200) = v19;
  if (*(_BYTE *)(v0 + v11[12]))
    v20 = 1702195828;
  else
    v20 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v11[12]))
    v21 = 0xE400000000000000;
  else
    v21 = 0xE500000000000000;
  *(_QWORD *)(v1 + 256) = v17;
  *(_QWORD *)(v1 + 264) = v13;
  *(_QWORD *)(v1 + 232) = v20;
  *(_QWORD *)(v1 + 240) = v21;
  if (*(_BYTE *)(v0 + v11[14]))
    v22 = 1702195828;
  else
    v22 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v11[14]))
    v23 = 0xE400000000000000;
  else
    v23 = 0xE500000000000000;
  *(_QWORD *)(v1 + 296) = v17;
  *(_QWORD *)(v1 + 304) = v13;
  *(_QWORD *)(v1 + 272) = v22;
  *(_QWORD *)(v1 + 280) = v23;
  if (*(_BYTE *)(v0 + v11[13]))
  {
    v24 = 0xE400000000000000;
  }
  else
  {
    v14 = 0x65736C6166;
    v24 = 0xE500000000000000;
  }
  *(_QWORD *)(v1 + 336) = v17;
  *(_QWORD *)(v1 + 344) = v13;
  *(_QWORD *)(v1 + 312) = v14;
  *(_QWORD *)(v1 + 320) = v24;
  sub_23AA32FE4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23AA36A90;
  v25 = (char *)sub_23AA2D78C + 4 * byte_23AA3A90E[sub_23AA2B1B0()];
  __asm { BR              X13 }
}

uint64_t sub_23AA2D78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3[7] = v7;
  v3[8] = v0;
  v8 = 7104878;
  if (0x800000023AA3C2D0)
    v8 = v6 + 1;
  v9 = 0xE300000000000000;
  if (0x800000023AA3C2D0)
    v9 = 0x800000023AA3C2D0;
  v3[4] = v8;
  v3[5] = v9;
  v10 = (uint64_t *)(v1 + *(int *)(v2 + 24));
  v11 = *v10;
  v12 = v10[1];
  v3[12] = v7;
  v3[13] = v0;
  v3[9] = v11;
  v3[10] = v12;
  sub_23A963B5C((__int128 *)(v1 + *(int *)(v2 + 32)), (uint64_t)&v16);
  swift_bridgeObjectRetain();
  v13 = sub_23A99DA28();
  v3[17] = v7;
  v3[18] = v0;
  v3[14] = v13;
  v3[15] = v14;
  v3[22] = v7;
  v3[23] = v0;
  v3[19] = v4;
  v3[20] = v5;
  return sub_23AA32FE4();
}

BOOL sub_23AA2D880(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  int v54;
  unsigned __int16 v55;
  unsigned __int16 v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char v85;
  int *v86;
  int v87;
  int v88;
  int *v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  int v98;
  _BYTE *v99;
  BOOL v100;
  int *v101;
  int v102;
  _BYTE *v103;
  int *v104;
  int v105;
  int v106;
  _BYTE *v107;
  int *v108;
  int v109;
  int v110;
  int *v111;
  int v112;
  uint64_t v113;
  _BYTE *v114;
  int v115;
  double v116;
  double v117;
  uint64_t v118;
  int v119;
  char v120;
  _BYTE v121[4];
  int v122;
  int *v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  _BYTE *v134;
  _BYTE *v135;
  _BYTE *v136;
  _BYTE *v137;
  _BYTE *v138;
  __int128 v139[6];
  __int128 v140;

  v4 = type metadata accessor for FMFindingViewState();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v121[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v5);
  v135 = &v121[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v134 = &v121[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v133 = &v121[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v132 = &v121[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v131 = &v121[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v130 = &v121[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v138 = &v121[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v129 = &v121[-v23];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v124 = &v121[-v27];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v137 = &v121[-v29];
  v30 = MEMORY[0x24BDAC7A8](v28);
  v136 = &v121[-v31];
  v32 = MEMORY[0x24BDAC7A8](v30);
  v127 = &v121[-v33];
  v34 = MEMORY[0x24BDAC7A8](v32);
  v126 = &v121[-v35];
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = &v121[-v37];
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = &v121[-v40];
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = &v121[-v43];
  v45 = MEMORY[0x24BDAC7A8](v42);
  v47 = &v121[-v46];
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = &v121[-v49];
  v51 = MEMORY[0x24BDAC7A8](v48);
  v53 = &v121[-v52];
  v54 = (__int16)*a1;
  v55 = *a1;
  v56 = *a2;
  v128 = v57;
  v125 = v58;
  if (v54 < 0)
  {
    if ((v56 & 0x8000) != 0 && ((v55 & 1) == 0) != (v56 & 1) && ((v56 ^ v55) & 0x7F00) == 0)
    {
      v123 = (int *)v51;
      sub_23A9EA28C((uint64_t)a1, (uint64_t)&v121[-v52]);
      sub_23A9EA28C((uint64_t)a2, (uint64_t)v50);
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if ((v56 & 0x8000) != 0 || v56 != v55)
  {
LABEL_7:
    sub_23A9EA28C((uint64_t)a1, (uint64_t)&v121[-v52]);
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v50);
    goto LABEL_8;
  }
  v123 = (int *)v51;
  v59 = ((v55 & 0x100) == 0) ^ ((unsigned __int16)(v56 & 0x100) >> 8);
  sub_23A9EA28C((uint64_t)a1, (uint64_t)&v121[-v52]);
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v50);
  if ((v59 & 1) == 0)
  {
LABEL_8:
    sub_23A973324((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v47);
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v44);
LABEL_9:
    sub_23A973324((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v41);
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v38);
    v60 = v7;
    v61 = (uint64_t)v131;
    v62 = v136;
    goto LABEL_10;
  }
LABEL_23:
  v80 = v123;
  v122 = sub_23AA32DF8();
  sub_23A973324((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A973324((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)a1, (uint64_t)v47);
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v44);
  if ((v122 & 1) == 0)
    goto LABEL_9;
  v81 = v80[6];
  v82 = *(_QWORD *)&v47[v81];
  v83 = *(_QWORD *)&v47[v81 + 8];
  v84 = &v44[v81];
  v60 = v7;
  if (v82 == *v84 && v83 == v84[1])
  {
    sub_23A973324((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v41);
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v38);
    v61 = (uint64_t)v131;
    v62 = v136;
    goto LABEL_28;
  }
  v85 = sub_23AA33728();
  sub_23A973324((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A973324((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)a1, (uint64_t)v41);
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v38);
  v61 = (uint64_t)v131;
  v62 = v136;
  if ((v85 & 1) == 0)
  {
LABEL_10:
    sub_23A973324((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v63 = v126;
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v126);
    v64 = v127;
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v127);
LABEL_11:
    sub_23A973324((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v62);
    v65 = v137;
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v137);
    v66 = (uint64_t)v134;
    v67 = (uint64_t)v133;
    goto LABEL_12;
  }
LABEL_28:
  v86 = v123;
  v87 = v41[v123[7]];
  sub_23A973324((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v123 = v86;
  v88 = v38[v86[7]];
  sub_23A973324((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v63 = v126;
  sub_23A9EA28C((uint64_t)a1, (uint64_t)v126);
  v64 = v127;
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v127);
  if (v87 != v88)
    goto LABEL_11;
  v89 = v123;
  sub_23A963B5C((__int128 *)&v63[v123[8]], (uint64_t)v139);
  sub_23A963B5C((__int128 *)&v64[v89[8]], (uint64_t)&v140);
  LOBYTE(v89) = sub_23A99ED04(v139, &v140);
  sub_23A973324((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A973324((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)a1, (uint64_t)v62);
  v65 = v137;
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v137);
  v66 = (uint64_t)v134;
  v67 = (uint64_t)v133;
  if ((v89 & 1) == 0)
    goto LABEL_12;
  v90 = v123[9];
  v91 = v62[v90];
  v92 = v65[v90];
  if (v91 == 10)
  {
    sub_23A973324((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    if (v92 == 10)
      goto LABEL_37;
    goto LABEL_13;
  }
  if (v92 == 10)
  {
LABEL_12:
    sub_23A973324((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
LABEL_13:
    v68 = (uint64_t)v60;
    v69 = v124;
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v124);
    v70 = v125;
    sub_23A9EA28C((uint64_t)a2, v125);
    v71 = v138;
    goto LABEL_14;
  }
  v93 = sub_23A9B3278(v91);
  v95 = v94;
  if (v93 == sub_23A9B3278(v92) && v95 == v96)
  {
    swift_bridgeObjectRelease_n();
    sub_23A973324((uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
LABEL_37:
    v68 = (uint64_t)v60;
    v69 = v124;
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v124);
    v70 = v125;
    sub_23A9EA28C((uint64_t)a2, v125);
    goto LABEL_38;
  }
  v68 = (uint64_t)v60;
  v120 = sub_23AA33728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A973324((uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A973324((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v69 = v124;
  sub_23A9EA28C((uint64_t)a1, (uint64_t)v124);
  v70 = v125;
  sub_23A9EA28C((uint64_t)a2, v125);
  v71 = v138;
  if ((v120 & 1) == 0)
  {
LABEL_14:
    sub_23A973324(v70, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v72 = v128;
    sub_23A9EA28C((uint64_t)a1, v128);
    v73 = v129;
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v129);
LABEL_15:
    sub_23A973324((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324(v72, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, (uint64_t)v71);
    v74 = v130;
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v130);
LABEL_16:
    sub_23A973324((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, v61);
    v75 = v132;
    sub_23A9EA28C((uint64_t)a2, (uint64_t)v132);
    v76 = v68;
LABEL_17:
    sub_23A973324((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324(v61, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A9EA28C((uint64_t)a1, v67);
    sub_23A9EA28C((uint64_t)a2, v66);
LABEL_18:
    sub_23A973324(v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324(v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    v77 = (uint64_t)a1;
    v78 = v135;
    sub_23A9EA28C(v77, (uint64_t)v135);
    sub_23A9EA28C((uint64_t)a2, v76);
LABEL_19:
    sub_23A973324(v76, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    sub_23A973324((uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
    return 0;
  }
LABEL_38:
  v97 = v123;
  v98 = v69[v123[10]];
  sub_23A973324((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  LODWORD(v97) = *(unsigned __int8 *)(v70 + v97[10]);
  sub_23A973324(v70, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v72 = v128;
  sub_23A9EA28C((uint64_t)a1, v128);
  v99 = v129;
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v129);
  v100 = v98 == (_DWORD)v97;
  v73 = v99;
  v71 = v138;
  if (!v100)
    goto LABEL_15;
  v101 = v123;
  LODWORD(v137) = *(unsigned __int8 *)(v72 + v123[11]);
  sub_23A973324(v72, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v102 = v99[v101[11]];
  sub_23A973324((uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)a1, (uint64_t)v138);
  v103 = v130;
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v130);
  v100 = (_DWORD)v137 == v102;
  v71 = v138;
  v74 = v103;
  if (!v100)
    goto LABEL_16;
  v104 = v123;
  v105 = v138[v123[12]];
  sub_23A973324((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v106 = v103[v104[12]];
  sub_23A973324((uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)a1, v61);
  v107 = v132;
  sub_23A9EA28C((uint64_t)a2, (uint64_t)v132);
  v100 = v105 == v106;
  v75 = v107;
  v76 = v68;
  if (!v100)
    goto LABEL_17;
  v108 = v123;
  v109 = *(unsigned __int8 *)(v61 + v123[13]);
  sub_23A973324(v61, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v110 = v107[v108[13]];
  sub_23A973324((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  sub_23A9EA28C((uint64_t)a1, v67);
  sub_23A9EA28C((uint64_t)a2, v66);
  if (v109 != v110)
    goto LABEL_18;
  v111 = v123;
  v112 = *(unsigned __int8 *)(v67 + v123[14]);
  sub_23A973324(v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  LODWORD(v111) = *(unsigned __int8 *)(v66 + v111[14]);
  sub_23A973324(v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v113 = (uint64_t)a1;
  v78 = v135;
  sub_23A9EA28C(v113, (uint64_t)v135);
  sub_23A9EA28C((uint64_t)a2, v76);
  if (v112 != (_DWORD)v111)
    goto LABEL_19;
  v114 = &v78[v123[8]];
  v115 = *((_DWORD *)v114 + 24);
  v116 = 0.0;
  v117 = 0.0;
  if ((v115 | 0x2000000u) >> 25 != 3 && ((v115 & 0xFFFF0000) >> 16) <= 3u)
  {
    v117 = *(double *)v114;
    sub_23A963C14(*(_QWORD *)v114, *((_QWORD *)v114 + 1), *((void **)v114 + 2), *((void **)v114 + 3), *((_QWORD *)v114 + 4), *((_QWORD *)v114 + 5), *((_QWORD *)v114 + 6), *((_QWORD *)v114 + 7), *((_QWORD *)v114 + 8), *((_QWORD *)v114 + 9), *((_QWORD *)v114 + 10), *((_QWORD *)v114 + 11), v115, SBYTE2(v115));
  }
  sub_23A973324((uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  v118 = v76 + v123[8];
  v119 = *(_DWORD *)(v118 + 96);
  if ((v119 | 0x2000000u) >> 25 != 3 && ((v119 & 0xFFFF0000) >> 16) <= 3u)
  {
    v116 = *(double *)v118;
    sub_23A963C14(*(_QWORD *)v118, *(_QWORD *)(v118 + 8), *(void **)(v118 + 16), *(void **)(v118 + 24), *(_QWORD *)(v118 + 32), *(_QWORD *)(v118 + 40), *(_QWORD *)(v118 + 48), *(_QWORD *)(v118 + 56), *(_QWORD *)(v118 + 64), *(_QWORD *)(v118 + 72), *(_QWORD *)(v118 + 80), *(_QWORD *)(v118 + 88), v119, SBYTE2(v119));
  }
  sub_23A973324(v76, (uint64_t (*)(_QWORD))type metadata accessor for FMFindingViewState);
  return v117 == v116;
}

unint64_t sub_23AA2E608()
{
  unint64_t result;

  result = qword_2569D8F88;
  if (!qword_2569D8F88)
  {
    result = MEMORY[0x23B85DA58](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2569D8F88);
  }
  return result;
}

double sub_23AA2E64C()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.8);

  xmmword_2569E0570 = xmmword_23AA3AA40;
  qword_2569E0580 = 0x4026000000000000;
  qword_2569E0588 = (uint64_t)v1;
  result = 1.15;
  xmmword_2569E0590 = xmmword_23AA3AA50;
  qword_2569E05A0 = 0x3FE0000000000000;
  return result;
}

id sub_23AA2E6DC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  id v23;
  objc_super v25;

  v9 = &v4[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style];
  v10 = qword_2569D4BC8;
  v11 = v4;
  if (v10 != -1)
    swift_once();
  v12 = qword_2569E0580;
  v13 = (void *)qword_2569E0588;
  v14 = qword_2569E05A0;
  v15 = xmmword_2569E0590;
  *(_OWORD *)v9 = xmmword_2569E0570;
  *((_QWORD *)v9 + 2) = v12;
  *((_QWORD *)v9 + 3) = v13;
  *((_OWORD *)v9 + 2) = v15;
  *((_QWORD *)v9 + 6) = v14;
  v16 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  v17 = (void *)objc_opt_self();
  v18 = v13;
  *(_QWORD *)&v11[v16] = objc_msgSend(v17, sel_buttonWithType_, 0);
  v19 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label;
  *(_QWORD *)&v11[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  *(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring] = 0;
  v20 = &v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_lastRenderTime];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_isEnabled] = 0;
  v21 = &v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v11[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;

  v25.receiver = v11;
  v25.super_class = (Class)type metadata accessor for FMR1GlyphButton();
  v23 = objc_msgSendSuper2(&v25, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23AA2EA78();
  sub_23AA2EC80();
  if (a2)
  {
    sub_23AA2FC84(a1, a2, a3, a4);
    swift_bridgeObjectRelease();
  }

  return v23;
}

id sub_23AA2E8F4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  objc_super v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink];
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    v3 = v1;
    v4 = objc_msgSend(v2, sel_currentRunLoop);
    objc_msgSend(v3, sel_removeFromRunLoop_forMode_, v4, *MEMORY[0x24BDBCB80]);

  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FMR1GlyphButton();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_23AA2EA78()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  double v12;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v0, sel_setAccessibilityRespondsToUserInteraction_, 1);
  objc_msgSend(v0, sel_setIsAccessibilityElement_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  v2 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_setUserInteractionEnabled_, 0);
  objc_msgSend(*(id *)&v0[v2], sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[v2]);
  v3 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label;
  v4 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
  v5 = (void *)objc_opt_self();
  v6 = *MEMORY[0x24BEBE1F0];
  v7 = v4;
  v8 = objc_msgSend(v5, sel_preferredFontForTextStyle_, v6);
  v9 = &v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style];
  v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(v8, sel_fontWithSize_, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style
                                                                                            + 16]));

  objc_msgSend(v7, sel_setFont_, v10);
  objc_msgSend(*(id *)&v0[v3], sel_setNumberOfLines_, 0);
  objc_msgSend(*(id *)&v0[v3], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v0[v3], sel_setTextAlignment_, 1);
  objc_msgSend(*(id *)&v0[v3], sel_setTextColor_, *((_QWORD *)v9 + 3));
  v11 = objc_msgSend(*(id *)&v0[v3], sel_layer);
  LODWORD(v12) = 0;
  objc_msgSend(v11, sel_setOpacity_, v12);

  return objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[v3]);
}

void sub_23AA2EC80()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double *v14;
  double v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v31 = (void *)objc_opt_self();
  sub_23A964084(&qword_2569D6080);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23AA39BE0;
  v4 = objc_msgSend(*(id *)&v1[v2], sel_topAnchor);
  v5 = objc_msgSend(v1, (SEL)&selRef_setPreferredEdgeInsets_ + 4);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(_QWORD *)(v3 + 32) = v6;
  v7 = objc_msgSend(*(id *)&v1[v2], sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v3 + 40) = v9;
  v10 = objc_msgSend(*(id *)&v1[v2], sel_trailingAnchor);
  v11 = objc_msgSend(v1, sel_trailingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v3 + 48) = v12;
  v13 = objc_msgSend(*(id *)&v1[v2], sel_widthAnchor);
  v14 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style];
  v15 = *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style];
  v16 = objc_msgSend(v13, sel_constraintEqualToConstant_, v15);

  *(_QWORD *)(v3 + 56) = v16;
  v17 = objc_msgSend(*(id *)&v1[v2], sel_heightAnchor);
  v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, v15);

  *(_QWORD *)(v3 + 64) = v18;
  sub_23AA330C8();
  sub_23A968488(0, (unint64_t *)&qword_2569D7EA0);
  v19 = (void *)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v19);

  v20 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_23AA36F20;
  v22 = objc_msgSend(*(id *)&v1[v20], sel_topAnchor);
  v23 = objc_msgSend(*(id *)&v1[v2], sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, v14[1]);

  *(_QWORD *)(v21 + 32) = v24;
  v25 = objc_msgSend(*(id *)&v1[v20], sel_bottomAnchor);
  v26 = objc_msgSend(v1, sel_bottomAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(_QWORD *)(v21 + 40) = v27;
  v28 = objc_msgSend(*(id *)&v1[v20], sel_centerXAnchor);
  v29 = objc_msgSend(*(id *)&v1[v2], sel_centerXAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(_QWORD *)(v21 + 48) = v30;
  sub_23AA330C8();
  v32 = (id)sub_23AA330A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v32);

}

void sub_23AA2F0C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v9;

  sub_23A968488(0, (unint64_t *)&qword_2569D6488);
  sub_23A9A052C();
  v4 = (void *)sub_23AA33170();
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for FMR1GlyphButton();
  objc_msgSendSuper2(&v9, sel_touchesBegan_withEvent_, v4, a2);

  v5 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
  v6 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.5);

  v8 = objc_msgSend(v7, sel_CGColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v8);

}

void sub_23AA2F200(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  id v15;
  objc_super v16;
  CGPoint v17;
  CGRect v18;

  sub_23A968488(0, (unint64_t *)&qword_2569D6488);
  sub_23A9A052C();
  v4 = (void *)sub_23AA33170();
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for FMR1GlyphButton();
  objc_msgSendSuper2(&v16, sel_touchesEnded_withEvent_, v4, a2);

  v5 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  v6 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
  v7 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor];
  if (v7)
    v8 = objc_msgSend(v7, sel_CGColor);
  else
    v8 = 0;
  objc_msgSend(v6, sel_setBackgroundColor_, v8);

  v9 = swift_bridgeObjectRetain();
  v10 = (void *)sub_23A9D464C(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    objc_msgSend(v10, sel_locationInView_, v2);
    v12 = v11;
    v14 = v13;
    objc_msgSend(v2, sel_bounds);
    v17.x = v12;
    v17.y = v14;
    if (CGRectContainsPoint(v18, v17))
    {
      v15 = *(id *)&v2[v5];
      objc_msgSend(v15, sel_sendActionsForControlEvents_, 64);

    }
  }
}

uint64_t sub_23AA2F390(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_23A968488(0, (unint64_t *)&qword_2569D6488);
  sub_23A9A052C();
  v8 = sub_23AA3317C();
  v9 = a4;
  v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

void sub_23AA2F428(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  sub_23A968488(0, (unint64_t *)&qword_2569D6488);
  sub_23A9A052C();
  v4 = (void *)sub_23AA33170();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for FMR1GlyphButton();
  objc_msgSendSuper2(&v8, sel_touchesCancelled_withEvent_, v4, a2);

  v5 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
  v6 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor];
  if (v6)
    v7 = objc_msgSend(v6, sel_CGColor);
  else
    v7 = 0;
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

}

void sub_23AA2F52C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  _BOOL4 v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;
  CGPoint v18;
  CGRect v19;

  sub_23A968488(0, (unint64_t *)&qword_2569D6488);
  sub_23A9A052C();
  v4 = (void *)sub_23AA33170();
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for FMR1GlyphButton();
  objc_msgSendSuper2(&v17, sel_touchesMoved_withEvent_, v4, a2);

  v5 = swift_bridgeObjectRetain();
  v6 = (void *)sub_23A9D464C(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    objc_msgSend(v6, sel_locationInView_, v2);
    v8 = v7;
    v10 = v9;
    objc_msgSend(v2, sel_bounds);
    v18.x = v8;
    v18.y = v10;
    v11 = CGRectContainsPoint(v19, v18);
    v12 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
    if (v11)
    {
      v13 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
      v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.5);

      v15 = objc_msgSend(v14, sel_CGColor);
    }
    else
    {
      v16 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor];
      if (v16)
        v15 = objc_msgSend(v16, sel_CGColor);
      else
        v15 = 0;
    }
    objc_msgSend(v12, sel_setBackgroundColor_, v15);

  }
}

id sub_23AA2F700(id a1)
{
  char *v1;
  double *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;

  v3 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_lastRenderTime];
  if ((v1[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_lastRenderTime + 8] & 1) == 0)
  {
    v4 = v1;
    v5 = *v3;
    objc_msgSend(a1, sel_timestamp);
    v7 = v6 - v5;
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring];
    if (v8)
    {
      sub_23A982B4C(v7);
      *(_BYTE *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    }
    v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring];
    if (v9)
    {
      sub_23A982B4C(v7);
      *(_BYTE *)(v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    }
    objc_msgSend(v4, sel_setNeedsDisplay);
  }
  result = objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)v3 = v11;
  *((_BYTE *)v3 + 8) = 0;
  return result;
}

id sub_23AA2F85C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button), sel_setEnabled_, *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_isEnabled));
}

void sub_23AA2F884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;

  v6 = v5;
  v12 = objc_msgSend(v6, sel_layer);
  objc_msgSend(v12, sel_removeAllAnimations);

  v13 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  v14 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
  objc_msgSend(v14, sel_removeAllAnimations);

  v15 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label], sel_layer);
  objc_msgSend(v15, sel_removeAllAnimations);

  v16 = *(void **)&v6[v13];
  sub_23A9AACC0(a1, (uint64_t)v34);
  v17 = v35;
  if (v35)
  {
    v18 = sub_23A96545C(v34, v35);
    v32 = a1;
    v33 = a5;
    v19 = a3;
    v20 = *(_QWORD *)(v17 - 8);
    MEMORY[0x24BDAC7A8](v18);
    v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v22);
    v23 = v16;
    v24 = sub_23AA3371C();
    v25 = *(void (**)(char *, uint64_t))(v20 + 8);
    a3 = v19;
    v25(v22, v17);
    a1 = v32;
    a5 = v33;
    sub_23A963B3C((uint64_t)v34);
  }
  else
  {
    v26 = v16;
    v24 = 0;
  }
  objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v24, a2, a3, v32, v33);

  swift_unknownObjectRelease();
  if (a5)
  {
    swift_bridgeObjectRetain();
    v27 = (void *)sub_23AA32FB4();
    objc_msgSend(v6, sel_setAccessibilityLabel_, v27);

    sub_23A968488(0, &qword_2569D9010);
    sub_23A9AACC0(a1, (uint64_t)v34);
    v28 = sub_23AA2FB64(a4, a5, v34, a2);
    sub_23A964084(&qword_2569D6080);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_23AA36180;
    *(_QWORD *)(v29 + 32) = v28;
    v34[0] = v29;
    sub_23AA330C8();
    v30 = v28;
    v31 = (void *)sub_23AA330A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccessibilityCustomActions_, v31);

  }
  else
  {
    objc_msgSend(v6, sel_setAccessibilityLabel_, 0);
    objc_msgSend(v6, sel_setAccessibilityCustomActions_, 0);
  }
}

id sub_23AA2FB64(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v7 = a3[3];
  if (v7)
  {
    v8 = sub_23A96545C(a3, a3[3]);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x24BDAC7A8](v8);
    v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = sub_23AA3371C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_23A963B3C((uint64_t)a3);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithName_target_selector_, v6, v12, a4);

  swift_unknownObjectRelease();
  return v13;
}

void sub_23AA2FC84(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  _QWORD *v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v7 = (_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named);
  *v7 = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style);
  v9 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 7, v8 / 3.0);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_23AA32FB4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10);

  v12 = objc_msgSend(v11, sel_imageByApplyingSymbolConfiguration_, v9);
  if (v12)
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button), sel_setImage_forState_, v12, 0);
  v13 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button), sel_setAdjustsImageWhenHighlighted_, 0);
  objc_msgSend(*(id *)(v4 + v13), sel_setShowsTouchWhenHighlighted_, 0);
  v14 = *(void **)(v4 + v13);
  if (a3)
  {
    v15 = v14;
    v16 = a3;
  }
  else
  {
    v17 = (void *)objc_opt_self();
    v18 = v14;
    v16 = objc_msgSend(v17, sel_whiteColor);
  }
  v19 = a3;
  objc_msgSend(v14, sel_setTintColor_, v16);

  v20 = objc_msgSend(*(id *)(v4 + v13), sel_layer);
  objc_msgSend(v20, sel_setCornerRadius_, v8 * 0.5);

  if (!a4 || (v21 = objc_msgSend(a4, sel_CGColor)) == 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.5);

    v21 = objc_msgSend(v23, sel_CGColor);
  }
  v24 = objc_msgSend(*(id *)(v4 + v13), sel_layer);
  objc_msgSend(v24, sel_setBackgroundColor_, v21);

  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithCGColor_, v21);
  v26 = *(id *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor) = v25;

}

void sub_23AA2FF80()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v1 = (void *)sub_23AA32FB4();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_animationWithKeyPath_, v1);

  v4 = (void *)sub_23AA32E34();
  objc_msgSend(v3, sel_setFromValue_, v4);

  v5 = (void *)sub_23AA32E34();
  objc_msgSend(v3, sel_setToValue_, v5);

  objc_msgSend(v3, sel_setDuration_, 1.0);
  v6 = (id)*MEMORY[0x24BDE5D20];
  v7 = (void *)objc_opt_self();
  v8 = v3;
  v9 = objc_msgSend(v7, sel_functionWithName_, v6);
  objc_msgSend(v8, sel_setTimingFunction_, v9);

  objc_msgSend(v8, sel_setAutoreverses_, 1);
  LODWORD(v10) = 2139095039;
  objc_msgSend(v8, sel_setRepeatCount_, v10);
  v11 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v11, sel_removeAllAnimations);

  v12 = objc_msgSend(v0, sel_layer);
  v13 = objc_msgSend(v8, sel_keyPath);
  objc_msgSend(v12, sel_addAnimation_forKey_, v8, v13);

  v14 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor];
  if (v14)
  {
    v15 = v14;
    v16 = (void *)sub_23AA32FB4();
    v17 = objc_msgSend(v2, sel_animationWithKeyPath_, v16);

    v43 = v6;
    v18 = objc_msgSend(v15, sel_CGColor);
    objc_msgSend(v17, sel_setFromValue_, v18);

    v19 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v20 = objc_msgSend(v19, sel_colorWithAlphaComponent_, 0.5);

    v21 = objc_msgSend(v20, sel_CGColor);
    objc_msgSend(v17, sel_setToValue_, v21);

    v22 = v17;
    objc_msgSend(v8, sel_duration);
    objc_msgSend(v22, sel_setDuration_);

    v23 = v22;
    v24 = objc_msgSend(v8, sel_timingFunction);
    objc_msgSend(v23, sel_setTimingFunction_, v24);

    v25 = v23;
    objc_msgSend(v25, sel_setAutoreverses_, objc_msgSend(v8, sel_autoreverses));

    v26 = v25;
    objc_msgSend(v8, sel_repeatCount);
    objc_msgSend(v26, sel_setRepeatCount_);

    v27 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
    v28 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
    objc_msgSend(v28, sel_removeAllAnimations);

    v29 = *(void **)&v0[v27];
    v6 = v43;
    v30 = objc_msgSend(v29, sel_layer);
    v31 = objc_msgSend(v26, sel_keyPath);
    objc_msgSend(v30, sel_addAnimation_forKey_, v26, v31);

  }
  v32 = (void *)sub_23AA32FB4();
  v33 = objc_msgSend(v2, sel_animationWithKeyPath_, v32);

  v34 = (void *)sub_23AA32E34();
  objc_msgSend(v33, sel_setFromValue_, v34);

  v35 = (void *)sub_23AA32E34();
  objc_msgSend(v33, sel_setToValue_, v35);

  v36 = v33;
  objc_msgSend(v8, sel_duration);
  objc_msgSend(v36, sel_setDuration_);

  v37 = v36;
  v38 = objc_msgSend(v7, sel_functionWithName_, v6);
  objc_msgSend(v37, sel_setTimingFunction_, v38);

  objc_msgSend(v37, sel_setAutoreverses_, 1);
  v39 = v37;
  objc_msgSend(v8, sel_repeatCount);
  objc_msgSend(v39, sel_setRepeatCount_);

  v40 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label;
  v41 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label], sel_layer);
  objc_msgSend(v41, sel_removeAllAnimations);

  v42 = objc_msgSend(*(id *)&v0[v40], sel_layer);
  v44 = objc_msgSend(v39, sel_keyPath);
  objc_msgSend(v42, sel_addAnimation_forKey_, v39, v44);

}

void sub_23AA305B8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  double *v13;
  double *v14;
  double v15;
  double v16;
  void *v17;

  v3 = v2;
  v4 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink))
  {
    v6 = *(double *)&a1 * 0.5;
    v7 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v3, sel_ringDisplayLinkUpdateWithDisplaylink_);
    v8 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
    objc_msgSend(v7, sel_addToRunLoop_forMode_, v8, *MEMORY[0x24BDBCB80]);

    v9 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v10 = v7;

    if ((a2 & 1) != 0)
      v11 = 0x3FD0000000000000;
    else
      v11 = *(_QWORD *)&v6;
    v12 = sub_23A9CCF6C(0, 0, 0x3F50624DD2F1A9FCLL, 0, v11, 0);
    v13 = (double *)((char *)v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    v14 = (double *)((char *)v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    v15 = *(double *)((char *)v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    if (v13[35] + v15 == 1.79769313e308)
    {
      sub_23A9829AC(1.0);
      *((_BYTE *)v12 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v15 = v14[5];
    }
    v16 = 1.0 - v15;
    v13[35] = v16;
    v13[30] = v16;
    v13[31] = 0.0;
    v17 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring) = v12;

  }
}

uint64_t type metadata accessor for FMR1GlyphButton()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for FMR1GlyphButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for FMR1GlyphButtonStyle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for FMR1GlyphButtonStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMR1GlyphButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMR1GlyphButtonStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMR1GlyphButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMR1GlyphButtonStyle()
{
  return &type metadata for FMR1GlyphButtonStyle;
}

void sub_23AA3097C()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;

  v1 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style;
  if (qword_2569D4BC8 != -1)
    swift_once();
  v2 = &v0[v1];
  v3 = qword_2569E0580;
  v4 = (void *)qword_2569E0588;
  v5 = qword_2569E05A0;
  v6 = xmmword_2569E0590;
  *(_OWORD *)v2 = xmmword_2569E0570;
  *((_QWORD *)v2 + 2) = v3;
  *((_QWORD *)v2 + 3) = v4;
  *((_OWORD *)v2 + 2) = v6;
  *((_QWORD *)v2 + 6) = v5;
  v7 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  v8 = (void *)objc_opt_self();
  v9 = v4;
  *(_QWORD *)&v0[v7] = objc_msgSend(v8, sel_buttonWithType_, 0);
  v10 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_normalBackgroundColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring] = 0;
  v11 = &v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_lastRenderTime];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_isEnabled] = 0;
  v12 = &v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v0[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named];
  *v13 = 0;
  v13[1] = 0;

  sub_23AA335A8();
  __break(1u);
}

void sub_23AA30B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  const char *v4;
  double *v5;
  double v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  double *v10;
  double *v11;
  double v12;
  double v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  void **v17;
  char *v18;
  double *v19;
  double v20;
  double v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  CGFloat v33;
  CGFloat v34;
  uint64_t v35;
  double v36;
  id v37;
  id v38;
  CGRect v39;
  CGRect v40;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringPerimiterAnimationSpring);
  v4 = "FMR1DistanceViewStyle";
  if (!v3)
  {
    v17 = (void **)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring);
    v18 = *(char **)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring);
    if (!v18)
      return;
    goto LABEL_12;
  }
  v5 = (double *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  swift_beginAccess();
  if (vabdd_f64(v5[35] + *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40], *v5 + *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o]) > *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold])v6 = *v5 + *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  else
    v6 = v5[35] + *(double *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40];
  if (v6 >= 0.99)
  {
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16];
    v8 = v3;
    v9 = sub_23A9CCF6C(0, 0, 0x3F50624DD2F1A9FCLL, 0, v7, 0);
    v10 = (double *)((char *)v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    v11 = (double *)((char *)v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    v12 = *(double *)((char *)v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    if (v10[35] + v12 == 1.79769313e308)
    {
      sub_23A9829AC(1.0);
      *((_BYTE *)v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      v12 = v11[5];
    }
    v13 = 1.0 - v12;
    v10[35] = v13;
    v10[30] = v13;
    v10[31] = 0.0;
    v14 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring) = v9;
    v15 = v9;

    v16 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = 0;

  }
  v17 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring);
  v18 = *(char **)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringFadeAnimationSpring);
  if (v18)
  {
    v4 = "FMR1DistanceViewStyle";
LABEL_12:
    v19 = (double *)&v18[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
    swift_beginAccess();
    v20 = *v19 + *(double *)&v18[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
    if (vabdd_f64(v19[35] + *(double *)&v18[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40], v20) <= *(double *)&v18[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold])
      v20 = v19[35] + *(double *)&v18[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40];
    v6 = 1.0 - v20;
    v21 = 4.71238898;
    if (v20 >= *((double *)v4 + 326))
    {
      v22 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink;
      v23 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_ringDisplayLink);
      if (v23)
      {
        v24 = (void *)objc_opt_self();
        v25 = v18;
        v26 = v23;
        v27 = objc_msgSend(v24, sel_currentRunLoop);
        objc_msgSend(v26, sel_removeFromRunLoop_forMode_, v27, *MEMORY[0x24BDBCB80]);

        v28 = *(void **)(v1 + v22);
      }
      else
      {
        v29 = v18;
        v28 = 0;
      }
      *(_QWORD *)(v1 + v22) = 0;

      v30 = v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_lastRenderTime;
      *(_QWORD *)v30 = 0;
      *(_BYTE *)(v30 + 8) = 1;
      v31 = *v17;
      *v17 = 0;

    }
    goto LABEL_20;
  }
  v21 = v6 * 6.28318531 + -1.57079633;
LABEL_20:
  v32 = OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button), sel_frame);
  v33 = CGRectGetWidth(v39) * 0.5;
  objc_msgSend(*(id *)(v1 + v32), sel_frame);
  v34 = CGRectGetHeight(v40) * 0.5;
  v35 = v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style;
  v36 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style + 40);
  v37 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, v33, v34, (*(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_style) - v36) * 0.5, -1.57079633, v21);
  objc_msgSend(v37, sel_setLineWidth_, v36);
  objc_msgSend(v37, sel_setLineCapStyle_, 1);
  v38 = objc_msgSend(*(id *)(v1 + v32), sel_tintColor);
  objc_msgSend(v38, sel_setStroke);

  objc_msgSend(v37, sel_strokeWithBlendMode_alpha_, 0, v6 * *(double *)(v35 + 48));
}

id sub_23AA30F44(char a1, char a2, void (*a3)(void), uint64_t a4)
{
  char *v4;
  char *v5;
  id result;
  double v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  double v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v5 = v4;
  result = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel], sel_alpha);
  if ((a1 & 1) != 0)
  {
    if (v11 != 1.0)
    {
LABEL_3:
      if ((a2 & 1) != 0)
      {
        v12 = (void *)objc_opt_self();
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = v5;
        *(_BYTE *)(v13 + 24) = a1 & 1;
        v27 = sub_23AA31A38;
        v28 = v13;
        v14 = MEMORY[0x24BDAC760];
        v23 = MEMORY[0x24BDAC760];
        v24 = 1107296256;
        v25 = sub_23A9C4DBC;
        v26 = &unk_250BC6468;
        v15 = _Block_copy(&v23);
        v16 = v5;
        swift_release();
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = a3;
        *(_QWORD *)(v17 + 24) = a4;
        v27 = sub_23AA31A70;
        v28 = v17;
        v23 = v14;
        v24 = 1107296256;
        v25 = sub_23A9A366C;
        v26 = &unk_250BC64B8;
        v18 = _Block_copy(&v23);
        sub_23A971FB8((uint64_t)a3);
        swift_release();
        objc_msgSend(v12, sel_animateWithDuration_animations_completion_, v15, v18, 0.5);
        _Block_release(v18);
        _Block_release(v15);
      }
      else
      {
        v19 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
        v20 = 0.0;
        if ((a1 & 1) != 0)
          v20 = 1.0;
        objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel], sel_setAlpha_, v20);
        v21 = *(void **)&v5[v19];
        v22 = *(id *)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel];
        objc_msgSend(v21, sel_alpha);
        objc_msgSend(v22, sel_setAlpha_);

        if (a3)
          a3();
      }
      return objc_msgSend(v5, sel_accessibilityShowViewHandler);
    }
  }
  else if (v11 != 0.0)
  {
    goto LABEL_3;
  }
  if (a3)
    return (id)((uint64_t (*)(id))a3)(result);
  return result;
}

void sub_23AA31168(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  void *v7;
  id v8;

  v3 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  v4 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel);
  v5 = 0.0;
  if ((a2 & 1) != 0)
    v5 = 1.0;
  objc_msgSend(v4, sel_setAlpha_, v5);
  v6 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel);
  v7 = *(void **)(a1 + v3);
  v8 = v6;
  objc_msgSend(v7, sel_alpha);
  objc_msgSend(v8, sel_setAlpha_);

}

uint64_t sub_23AA311FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for FMFindingViewState();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_23A9EA28C(v8, (uint64_t)v5);
  sub_23AA2CAD0(0, 2u, 2, 2, 2, v7);
  sub_23A9EA2D0((uint64_t)v5);
  sub_23AA12BC8((unsigned __int16 *)v7);
  return sub_23A9EA2D0((uint64_t)v7);
}

void sub_23AA312EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel);
  if (a3)
  {
    v4 = v3;
    v5 = sub_23AA32FB4();
  }
  else
  {
    v6 = v3;
    v5 = 0;
  }
  v7 = (id)v5;
  objc_msgSend(v3, sel_setText_);

}

void sub_23AA3136C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  sub_23AA31384(a2, a3, a4, a5, a6);
}

void sub_23AA31384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  double v36;
  void *v37;
  void *v38;
  _QWORD *v39;
  void *v40;
  char *v41;
  id v42;
  uint64_t v43;
  char v44;
  id v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _QWORD aBlock[6];

  v6 = v5;
  v49 = a1;
  v50 = a3;
  v10 = type metadata accessor for FMFindingViewState();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v48 - v14;
  v16 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state];
  swift_beginAccess();
  v17 = sub_23AA2B1B0();
  v51 = v10;
  if (v17 != 4)
  {
    v18 = (char *)&loc_23AA31480 + dword_23AA31984[sub_23AA2B1B0()];
    __asm { BR              X10 }
  }
  v19 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  v20 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel], sel_text);
  v52 = a5;
  if (!v20)
  {
    v27 = v50;
    if (!a2)
      goto LABEL_21;
    goto LABEL_12;
  }
  v21 = v20;
  v22 = sub_23AA32FD8();
  v24 = v23;

  if (!a2)
  {
    swift_bridgeObjectRelease();
    v31 = *(id *)&v6[v19];
    objc_msgSend(v31, sel_setText_, 0);

    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v6;
    v33 = v6;
    sub_23AA30F44(0, 1, (void (*)(void))sub_23AA319BC, v32);
    swift_release();
    if (a4)
    {
      v27 = v50;
      v34 = (void *)sub_23AA32FB4();
    }
    else
    {
      v34 = 0;
      v27 = v50;
    }
    objc_msgSend(v33, sel_accessibilityDidUpdateWithTopLabelMessage_instruction_, v34, 0);

    goto LABEL_21;
  }
  if (v22 == v49 && a2 == v24)
  {
    swift_bridgeObjectRelease();
    v27 = v50;
    goto LABEL_21;
  }
  v26 = sub_23AA33728();
  swift_bridgeObjectRelease();
  v27 = v50;
  if ((v26 & 1) == 0)
  {
LABEL_12:
    v28 = *(id *)&v6[v19];
    swift_bridgeObjectRetain();
    v29 = (void *)sub_23AA32FB4();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setText_, v29);

    sub_23AA30F44(1, 1, 0, 0);
    sub_23A9EA28C(v16, (uint64_t)v13);
    sub_23AA2CAD0(1u, 2u, 2, 2, 2, v15);
    sub_23A9EA2D0((uint64_t)v13);
    sub_23AA12BC8((unsigned __int16 *)v15);
    if (a4)
      v30 = (void *)sub_23AA32FB4();
    else
      v30 = 0;
    v35 = (void *)sub_23AA32FB4();
    objc_msgSend(v6, sel_accessibilityDidUpdateWithTopLabelMessage_instruction_, v30, v35);

    sub_23A9EA2D0((uint64_t)v15);
  }
LABEL_21:
  if (a4)
    v36 = 1.0;
  else
    v36 = 0.1;
  v37 = (void *)objc_opt_self();
  v38 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel];
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v6;
  v39[3] = v27;
  v39[4] = a4;
  aBlock[4] = sub_23AA319F0;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A9C4DBC;
  aBlock[3] = &unk_250BC6418;
  v40 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v41 = v6;
  v42 = v38;
  swift_release();
  objc_msgSend(v37, sel_transitionWithView_duration_options_animations_completion_, v42, 5242880, v40, 0, v36);
  _Block_release(v40);

  sub_23A9AF3B4((*(_DWORD *)(v16 + *(int *)(v51 + 32) + 96) & 0xFC000000) != 0x4000000);
  if (sub_23AA073B8(v52) == 0xD000000000000016 && v43 == 0x800000023AA3B200)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = sub_23AA33728();
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
    {
      v46 = (char *)*(id *)&v41[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton];
      v47 = objc_msgSend(v46, sel_layer);
      objc_msgSend(v47, sel_removeAllAnimations);

      v45 = objc_msgSend(*(id *)&v46[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button], sel_layer);
      objc_msgSend(v45, sel_removeAllAnimations);

      goto LABEL_30;
    }
  }
  v45 = *(id *)&v41[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton];
  sub_23AA2FF80();
LABEL_30:

}

uint64_t sub_23AA31998()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AA319BC()
{
  uint64_t v0;

  return sub_23AA311FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23AA319C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23AA319F0()
{
  uint64_t *v0;

  sub_23AA312EC(v0[2], v0[3], v0[4]);
}

uint64_t sub_23AA319FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23AA31A0C()
{
  return swift_release();
}

uint64_t sub_23AA31A14()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23AA31A38()
{
  uint64_t v0;

  sub_23AA31168(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23AA31A44()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AA31A70()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

char *FMFindingDebuggableViewController.__allocating_init(mockSession:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return FMFindingDebuggableViewController.init(mockSession:)(a1);
}

char *FMFindingDebuggableViewController.init(mockSession:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewController] = 0;
  v3 = OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewContainer;
  v4 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);

  v6 = swift_retain();
  v7 = (void *)FMFindingViewController.init(session:)(v6);
  objc_allocWithZone((Class)type metadata accessor for FMFindingDebugViewController());
  v8 = v7;
  swift_retain();
  v9 = (char *)v8;
  v10 = sub_23A9EB92C(v9, a1);
  v11 = OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewController;
  v12 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewController];
  *(_QWORD *)&v9[OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewController] = v10;

  v13 = *(_QWORD *)&v9[v11];
  if (v13)
  {
    *(_QWORD *)(v13 + OBJC_IVAR____TtC11FMFindingUI28FMFindingDebugViewController_delegate + 8) = &off_250BC64E8;
    swift_unknownObjectWeakAssign();
  }

  swift_release();
  return v9;
}

void sub_23AA31C8C()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for FMFindingDebuggableViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_23AA31F54();
}

uint64_t type metadata accessor for FMFindingDebuggableViewController()
{
  uint64_t result;

  result = qword_2569D9050;
  if (!qword_2569D9050)
    return swift_getSingletonMetadata();
  return result;
}

id sub_23AA31D58(char a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for FMFindingDebuggableViewController();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1 & 1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewContainer], sel_setHidden_, 0);
}

id sub_23AA31E34(id result)
{
  uint64_t v1;

  if (result == (id)1)
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewContainer), sel_setHidden_, 0);
  return result;
}

void sub_23AA31E84(unsigned __int16 *a1, __int16 *a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  _BYTE v7[40];

  if (!sub_23AA2D880((unsigned __int16 *)a2, a1))
  {
    if ((*a2 & 0x8100) == 0x100)
    {
      sub_23A9DCDC8(1, (uint64_t)a2);
      sub_23A9DD814();
      sub_23A9DC168();
      sub_23A9DA850((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      sub_23A9DA4FC((uint64_t)a1, a2);
    }
  }
  v5 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewController);
  if (v5)
  {
    v6 = v5;
    sub_23A9D48F0((uint64_t)v7);
    sub_23A9EDD58((uint64_t)v7);

  }
}

void sub_23AA31F54()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewController];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = objc_msgSend(v0, sel_view);
    if (v4)
    {
      v5 = v4;
      v6 = OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewContainer;
      objc_msgSend(v4, sel_addSubview_, *(_QWORD *)&v2[OBJC_IVAR____TtC11FMFindingUI33FMFindingDebuggableViewController_debugViewContainer]);

      objc_msgSend(v2, sel_addChildViewController_, v3);
      objc_msgSend(*(id *)&v2[v6], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v7 = objc_msgSend(v3, sel_view);
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

        v9 = objc_msgSend(v3, sel_view);
        if (v9)
        {
          v10 = v9;
          objc_msgSend(v9, sel_setPreservesSuperviewLayoutMargins_, 1);

          v11 = *(id *)&v2[v6];
          v12 = objc_msgSend(v3, sel_view);
          if (v12)
          {
            v13 = v12;
            objc_msgSend(v11, sel_addSubview_, v12);

            objc_msgSend(v3, sel_didMoveToParentViewController_, v2);
            sub_23A964084(&qword_2569D6080);
            v14 = swift_allocObject();
            *(_OWORD *)(v14 + 16) = xmmword_23AA35F80;
            v15 = objc_msgSend(*(id *)&v2[v6], sel_topAnchor);
            v16 = objc_msgSend(v3, sel_view);
            if (v16)
            {
              v17 = v16;
              v18 = objc_msgSend(v16, sel_topAnchor);

              v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
              *(_QWORD *)(v14 + 32) = v19;
              v20 = objc_msgSend(*(id *)&v2[v6], sel_bottomAnchor);
              v21 = objc_msgSend(v3, sel_view);
              if (v21)
              {
                v22 = v21;
                v23 = objc_msgSend(v21, sel_bottomAnchor);

                v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);
                *(_QWORD *)(v14 + 40) = v24;
                v25 = objc_msgSend(*(id *)&v2[v6], sel_leadingAnchor);
                v26 = objc_msgSend(v3, sel_view);
                if (v26)
                {
                  v27 = v26;
                  v28 = objc_msgSend(v26, sel_leadingAnchor);

                  v29 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v28);
                  *(_QWORD *)(v14 + 48) = v29;
                  v30 = objc_msgSend(*(id *)&v2[v6], sel_trailingAnchor);
                  v31 = objc_msgSend(v3, sel_view);
                  if (v31)
                  {
                    v32 = v31;
                    v33 = (void *)objc_opt_self();
                    v34 = objc_msgSend(v32, sel_trailingAnchor);

                    v35 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v34);
                    *(_QWORD *)(v14 + 56) = v35;
                    sub_23AA330C8();
                    sub_23A964144();
                    v36 = (void *)sub_23AA330A4();
                    swift_bridgeObjectRelease();
                    objc_msgSend(v33, sel_activateConstraints_, v36);

                    v37 = swift_allocObject();
                    *(_OWORD *)(v37 + 16) = xmmword_23AA36F20;
                    v38 = objc_msgSend(*(id *)&v2[v6], sel_bottomAnchor);
                    v39 = objc_msgSend(v2, sel_view);
                    if (v39)
                    {
                      v40 = v39;
                      v41 = objc_msgSend(v39, sel_bottomAnchor);

                      v42 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v41);
                      *(_QWORD *)(v37 + 32) = v42;
                      v43 = objc_msgSend(*(id *)&v2[v6], sel_leadingAnchor);
                      v44 = objc_msgSend(v2, sel_view);
                      if (v44)
                      {
                        v45 = v44;
                        v46 = objc_msgSend(v44, sel_leadingAnchor);

                        v47 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v46);
                        *(_QWORD *)(v37 + 40) = v47;
                        v48 = objc_msgSend(*(id *)&v2[v6], sel_trailingAnchor);
                        v49 = objc_msgSend(v2, sel_view);
                        if (v49)
                        {
                          v50 = v49;
                          v51 = objc_msgSend(v49, sel_trailingAnchor);

                          v52 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v51);
                          *(_QWORD *)(v37 + 48) = v52;
                          sub_23AA330C8();
                          v53 = (id)sub_23AA330A4();
                          swift_bridgeObjectRelease();
                          objc_msgSend(v33, sel_activateConstraints_, v53);

                          return;
                        }
                        goto LABEL_25;
                      }
LABEL_24:
                      __break(1u);
LABEL_25:
                      __break(1u);
                      return;
                    }
LABEL_23:
                    __break(1u);
                    goto LABEL_24;
                  }
LABEL_22:
                  __break(1u);
                  goto LABEL_23;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void FMFindingDebuggableViewController.__allocating_init(session:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFindingDebuggableViewController.init(session:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23AA325BC()
{
  uint64_t v0;

}

id FMFindingDebuggableViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingDebuggableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23AA32654()
{
  return type metadata accessor for FMFindingDebuggableViewController();
}

uint64_t sub_23AA3265C()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMFindingDebuggableViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFindingDebuggableViewController.__allocating_init(mockSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1544))();
}

uint64_t sub_23AA326BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  __int128 v8[6];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration);
  v4 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  v5 = type metadata accessor for FMFindingViewState();
  sub_23A963B5C((__int128 *)(v4 + *(int *)(v5 + 32)), (uint64_t)v8);
  swift_bridgeObjectRetain();
  sub_23A963ED4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  swift_bridgeObjectRetain();
  sub_23A963ED4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963BDC);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23A97FB8C(a1, v8, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_23A963ED4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
  swift_bridgeObjectRelease();
  sub_23A963ED4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23A963F38);
  return sub_23A9D4794(v3);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPatternFragmentNodeTravelingStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AA32814 + 4 * byte_23AA3AB25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AA32848 + 4 * byte_23AA3AB20[v4]))();
}

uint64_t sub_23AA32848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA32850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA32858);
  return result;
}

uint64_t sub_23AA32864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA3286CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AA32870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA32878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPatternFragmentNodeTravelingStyle()
{
  return &type metadata for FMPFSKPatternFragmentNodeTravelingStyle;
}

void *initializeWithCopy for FMPFSKPatternFragmentNodeStyle(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x121uLL);
}

uint64_t getEnumTagSinglePayload for FMPFSKPatternFragmentNodeStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 289))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMPFSKPatternFragmentNodeStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_BYTE *)(result + 288) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 289) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPatternFragmentNodeStyle()
{
  return &type metadata for FMPFSKPatternFragmentNodeStyle;
}

uint64_t sub_23AA32948(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23AA151C4(*a1, *a2);
}

uint64_t sub_23AA32954()
{
  sub_23AA337D0();
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23AA329F0()
{
  sub_23AA33014();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA32A68()
{
  sub_23AA337D0();
  sub_23AA33014();
  swift_bridgeObjectRelease();
  return sub_23AA33800();
}

uint64_t sub_23AA32B00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AA32BE0();
  *a1 = result;
  return result;
}

void sub_23AA32B2C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEF637241646E4165;
  v4 = 0xE900000000000065;
  v5 = 0x7672754364617571;
  if (v2 != 1)
  {
    v5 = 0x7261656E696CLL;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7672754364617571;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_23AA32B9C()
{
  unint64_t result;

  result = qword_2569D9060;
  if (!qword_2569D9060)
  {
    result = MEMORY[0x23B85DA58](&unk_23AA3AC08, &type metadata for FMPFSKPatternFragmentNodeTravelingStyle);
    atomic_store(result, (unint64_t *)&qword_2569D9060);
  }
  return result;
}

uint64_t sub_23AA32BE0()
{
  unint64_t v0;

  v0 = sub_23AA33608();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_23AA32C48()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23AA32C54()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23AA32C60()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23AA32C6C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23AA32C78()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23AA32C84()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23AA32C90()
{
  return MEMORY[0x24BDCB488]();
}

uint64_t sub_23AA32C9C()
{
  return MEMORY[0x24BDCB668]();
}

uint64_t sub_23AA32CA8()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23AA32CB4()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_23AA32CC0()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23AA32CCC()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_23AA32CD8()
{
  return MEMORY[0x24BDCD258]();
}

uint64_t sub_23AA32CE4()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23AA32CF0()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23AA32CFC()
{
  return MEMORY[0x24BDCD5A8]();
}

uint64_t sub_23AA32D08()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_23AA32D14()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23AA32D20()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_23AA32D2C()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23AA32D38()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_23AA32D44()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23AA32D50()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23AA32D5C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23AA32D68()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_23AA32D74()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_23AA32D80()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23AA32D8C()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23AA32D98()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_23AA32DA4()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23AA32DB0()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23AA32DBC()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23AA32DC8()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23AA32DD4()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23AA32DE0()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23AA32DEC()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23AA32DF8()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23AA32E04()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23AA32E10()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23AA32E1C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23AA32E28()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23AA32E34()
{
  return MEMORY[0x24BDCF760]();
}

uint64_t sub_23AA32E40()
{
  return MEMORY[0x24BDDFD88]();
}

uint64_t sub_23AA32E4C()
{
  return MEMORY[0x24BDDFD90]();
}

uint64_t sub_23AA32E58()
{
  return MEMORY[0x24BDDFD98]();
}

uint64_t sub_23AA32E64()
{
  return MEMORY[0x24BDDFDA0]();
}

uint64_t sub_23AA32E70()
{
  return MEMORY[0x24BDDFDC8]();
}

uint64_t sub_23AA32E7C()
{
  return MEMORY[0x24BEE76E8]();
}

uint64_t sub_23AA32E88()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23AA32E94()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23AA32EA0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23AA32EAC()
{
  return MEMORY[0x24BEE5370]();
}

uint64_t sub_23AA32EB8()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_23AA32EC4()
{
  return MEMORY[0x24BEE5450]();
}

uint64_t sub_23AA32ED0()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23AA32EDC()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_23AA32EE8()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23AA32EF4()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_23AA32F00()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23AA32F0C()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23AA32F18()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23AA32F24()
{
  return MEMORY[0x24BEE55A8]();
}

uint64_t sub_23AA32F30()
{
  return MEMORY[0x24BEE55B0]();
}

uint64_t sub_23AA32F3C()
{
  return MEMORY[0x24BEE55D8]();
}

uint64_t sub_23AA32F48()
{
  return MEMORY[0x24BEE55E0]();
}

uint64_t sub_23AA32F54()
{
  return MEMORY[0x24BEE55F8]();
}

uint64_t sub_23AA32F60()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_23AA32F6C()
{
  return MEMORY[0x24BEE5638]();
}

uint64_t sub_23AA32F78()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23AA32F84()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23AA32F90()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23AA32F9C()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23AA32FA8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23AA32FB4()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23AA32FC0()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23AA32FCC()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23AA32FD8()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23AA32FE4()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23AA32FF0()
{
  return MEMORY[0x24BDCFB30]();
}

uint64_t sub_23AA32FFC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23AA33008()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23AA33014()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23AA33020()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_23AA3302C()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23AA33038()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23AA33044()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23AA33050()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_23AA3305C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23AA33068()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23AA33074()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_23AA33080()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23AA3308C()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_23AA33098()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23AA330A4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23AA330B0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23AA330BC()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23AA330C8()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23AA330D4()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23AA330E0()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23AA330EC()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23AA330F8()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_23AA33104()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23AA33110()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23AA3311C()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23AA33128()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_23AA33134()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_23AA33140()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23AA3314C()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23AA33158()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_23AA33164()
{
  return MEMORY[0x24BEE1488]();
}

uint64_t sub_23AA33170()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23AA3317C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23AA33188()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23AA33194()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23AA331A0()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23AA331AC()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23AA331B8()
{
  return MEMORY[0x24BDCFD30]();
}

uint64_t sub_23AA331C4()
{
  return MEMORY[0x24BDCFD38]();
}

uint64_t sub_23AA331D0()
{
  return MEMORY[0x24BDCFD40]();
}

uint64_t sub_23AA331DC()
{
  return MEMORY[0x24BEE1758]();
}

uint64_t sub_23AA331E8()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t sub_23AA331F4()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23AA33200()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23AA3320C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23AA33218()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23AA33224()
{
  return MEMORY[0x24BDDFDD0]();
}

uint64_t sub_23AA33230()
{
  return MEMORY[0x24BDDFDD8]();
}

uint64_t sub_23AA3323C()
{
  return MEMORY[0x24BDDFDE0]();
}

uint64_t sub_23AA33248()
{
  return MEMORY[0x24BDBD7E0]();
}

uint64_t sub_23AA33254()
{
  return MEMORY[0x24BEE5678]();
}

uint64_t sub_23AA33260()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23AA3326C()
{
  return MEMORY[0x24BEE56B0]();
}

uint64_t sub_23AA33278()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_23AA33284()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23AA33290()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_23AA3329C()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_23AA332A8()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23AA332B4()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23AA332C0()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_23AA332CC()
{
  return MEMORY[0x24BEE57C0]();
}

uint64_t sub_23AA332D8()
{
  return MEMORY[0x24BEE5828]();
}

uint64_t sub_23AA332E4()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_23AA332F0()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_23AA332FC()
{
  return MEMORY[0x24BEE58D8]();
}

uint64_t sub_23AA33308()
{
  return MEMORY[0x24BDDFDE8]();
}

uint64_t sub_23AA33314()
{
  return MEMORY[0x24BDD00A8]();
}

uint64_t sub_23AA33320()
{
  return MEMORY[0x24BEE5960]();
}

uint64_t sub_23AA3332C()
{
  return MEMORY[0x24BDBD840]();
}

uint64_t sub_23AA33338()
{
  return MEMORY[0x24BEE5320]();
}

uint64_t sub_23AA33344()
{
  return MEMORY[0x24BEE5328]();
}

uint64_t sub_23AA33350()
{
  return MEMORY[0x24BEBCFA0]();
}

uint64_t sub_23AA3335C()
{
  return MEMORY[0x24BEDF350]();
}

uint64_t sub_23AA33368()
{
  return MEMORY[0x24BEDF358]();
}

uint64_t sub_23AA33374()
{
  return MEMORY[0x24BEDF368]();
}

uint64_t sub_23AA33380()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_23AA3338C()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23AA33398()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_23AA333A4()
{
  return MEMORY[0x24BEBD030]();
}

uint64_t sub_23AA333B0()
{
  return MEMORY[0x24BDD0278]();
}

uint64_t sub_23AA333BC()
{
  return MEMORY[0x24BEE7978]();
}

uint64_t sub_23AA333C8()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_23AA333D4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23AA333E0()
{
  return MEMORY[0x24BEE1DB8]();
}

uint64_t sub_23AA333EC()
{
  return MEMORY[0x24BEE1E60]();
}

uint64_t sub_23AA333F8()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23AA33404()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23AA33410()
{
  return MEMORY[0x24BDD0570]();
}

uint64_t sub_23AA3341C()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_23AA33428()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_23AA33434()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23AA33440()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23AA3344C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23AA33458()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23AA33464()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23AA33470()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_23AA3347C()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23AA33488()
{
  return MEMORY[0x24BEE2318]();
}

uint64_t sub_23AA33494()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_23AA334A0()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_23AA334AC()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_23AA334B8()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23AA334C4()
{
  return MEMORY[0x24BEE2368]();
}

uint64_t sub_23AA334D0()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23AA334DC()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23AA334E8()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23AA334F4()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23AA33500()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23AA3350C()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23AA33518()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23AA33524()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23AA33530()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23AA3353C()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23AA33548()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23AA33554()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23AA33560()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23AA3356C()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23AA33578()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23AA33584()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23AA33590()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23AA3359C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23AA335A8()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23AA335B4()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_23AA335C0()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23AA335CC()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23AA335D8()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23AA335E4()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23AA335F0()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23AA335FC()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23AA33608()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23AA33614()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23AA33620()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23AA3362C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23AA33638()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23AA33644()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23AA33650()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23AA3365C()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_23AA33668()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23AA33674()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23AA33680()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23AA3368C()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23AA33698()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23AA336A4()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23AA336B0()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23AA336BC()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23AA336C8()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_23AA336D4()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23AA336E0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23AA336EC()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_23AA336F8()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23AA33704()
{
  return MEMORY[0x24BEE3550]();
}

uint64_t sub_23AA33710()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23AA3371C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23AA33728()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23AA33734()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_23AA33740()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23AA3374C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23AA33758()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23AA33764()
{
  return MEMORY[0x24BE31B08]();
}

uint64_t sub_23AA33770()
{
  return MEMORY[0x24BE31B10]();
}

uint64_t sub_23AA3377C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23AA33788()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23AA33794()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23AA337A0()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23AA337AC()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23AA337B8()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_23AA337C4()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23AA337D0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23AA337DC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23AA337E8()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23AA337F4()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23AA33800()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23AA3380C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23AA33818()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23AA33824()
{
  return MEMORY[0x24BEE49D0]();
}

uint64_t sub_23AA33830()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23AA3383C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23AA33848()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x24BE1A1B0]();
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x24BDE55D8](retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x24BDE55F8](retstr, t, sx, sy, sz);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x24BDBD8D8](retstr, angle);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x24BDBEE80]();
}

CGPathRef CGPathCreateWithEllipseInRect(CGRect rect, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x24BDBEEA0](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x24BDBEFC0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x24BDC0450](time1, time2);
}

CVReturn CVMetalTextureCacheCreate(CFAllocatorRef allocator, CFDictionaryRef cacheAttributes, id metalDevice, CFDictionaryRef textureAttributes, CVMetalTextureCacheRef *cacheOut)
{
  return MEMORY[0x24BDC51F8](allocator, cacheAttributes, metalDevice, textureAttributes, cacheOut);
}

CVReturn CVMetalTextureCacheCreateTextureFromImage(CFAllocatorRef allocator, CVMetalTextureCacheRef textureCache, CVImageBufferRef sourceImage, CFDictionaryRef textureAttributes, MTLPixelFormat pixelFormat, size_t width, size_t height, size_t planeIndex, CVMetalTextureRef *textureOut)
{
  return MEMORY[0x24BDC5200](allocator, textureCache, sourceImage, textureAttributes, pixelFormat, width, height, planeIndex);
}

void CVMetalTextureCacheFlush(CVMetalTextureCacheRef textureCache, CVOptionFlags options)
{
  MEMORY[0x24BDC5208](textureCache, options);
}

id CVMetalTextureGetTexture(CVMetalTextureRef image)
{
  return (id)MEMORY[0x24BDC5210](image);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52B0](pixelBuffer);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52D0](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52E8](pixelBuffer);
}

CVReturn CVPixelBufferPoolCreate(CFAllocatorRef allocator, CFDictionaryRef poolAttributes, CFDictionaryRef pixelBufferAttributes, CVPixelBufferPoolRef *poolOut)
{
  return MEMORY[0x24BDC5318](allocator, poolAttributes, pixelBufferAttributes, poolOut);
}

CVReturn CVPixelBufferPoolCreatePixelBuffer(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5320](allocator, pixelBufferPool, pixelBufferOut);
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x24BED8470]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x24BED8490]();
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x24BDDD1E0]();
}

uint64_t PRArmsReachThresholdEnter()
{
  return MEMORY[0x24BE7BA70]();
}

uint64_t PRArmsReachThresholdExit()
{
  return MEMORY[0x24BE7BA78]();
}

uint64_t PRItemFoundThresholdEnter()
{
  return MEMORY[0x24BE7BA80]();
}

uint64_t PRVerticalThresholdEnter()
{
  return MEMORY[0x24BE7BA88]();
}

uint64_t PRVerticalThresholdExit()
{
  return MEMORY[0x24BE7BA90]();
}

SCNMatrix4 *__cdecl SCNMatrix4MakeRotation(SCNMatrix4 *__return_ptr retstr, float angle, float x, float y, float z)
{
  return (SCNMatrix4 *)MEMORY[0x24BDE82D8](retstr, angle, x, y, z);
}

SCNMatrix4 *__cdecl SCNMatrix4Mult(SCNMatrix4 *__return_ptr retstr, SCNMatrix4 *a, SCNMatrix4 *b)
{
  return (SCNMatrix4 *)MEMORY[0x24BDE82E0](retstr, a, b);
}

uint64_t SFAdjustmentFiltersForAssetTypeAndURL()
{
  return MEMORY[0x24BE90508]();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return MEMORY[0x24BEBDE48]();
}

OSStatus VTPixelTransferSessionCreate(CFAllocatorRef allocator, VTPixelTransferSessionRef *pixelTransferSessionOut)
{
  return MEMORY[0x24BDF9168](allocator, pixelTransferSessionOut);
}

OSStatus VTPixelTransferSessionTransferImage(VTPixelTransferSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return MEMORY[0x24BDF9178](session, sourceBuffer, destinationBuffer);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

__double2 __sincos_stret(double a1)
{
  double v1;
  double v2;
  __double2 result;

  MEMORY[0x24BDAC890](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincosf_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC898](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

long double atan2(long double __y, long double __x)
{
  long double result;

  MEMORY[0x24BDAD220](__y, __x);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t calculateBearingAngleHorizontalDistanceAndVerticalDistance()
{
  return MEMORY[0x24BE7BA98]();
}

long double cos(long double __x)
{
  long double result;

  MEMORY[0x24BDADBE0](__x);
  return result;
}

long double cosh(long double __x)
{
  long double result;

  MEMORY[0x24BDADBF0](__x);
  return result;
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x24BDAE270](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

long double hypot(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE838](__x, __y);
  return result;
}

float log10f(float a1)
{
  float result;

  MEMORY[0x24BDAEAB8](a1);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t platformSupportsProximity()
{
  return MEMORY[0x24BE7BAA0]();
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAF688](__x, __y);
  return result;
}

long double remainder(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAFB28](__x, __y);
  return result;
}

long double sin(long double __x)
{
  long double result;

  MEMORY[0x24BDAFE18](__x);
  return result;
}

long double sinh(long double __x)
{
  long double result;

  MEMORY[0x24BDAFE28](__x);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x24BDB0138](__x);
  return result;
}

uint64_t vfx_script_clock_delta_time()
{
  return MEMORY[0x24BEBFB60]();
}

uint64_t vfx_script_get_arguments_buffer()
{
  return MEMORY[0x24BEBFBA8]();
}

