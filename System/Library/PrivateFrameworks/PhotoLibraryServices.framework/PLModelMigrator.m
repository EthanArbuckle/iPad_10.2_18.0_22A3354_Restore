@implementation PLModelMigrator

+ (int)currentModelVersion
{
  return +[PLModelMigration currentModelVersion](PLModelMigration, "currentModelVersion");
}

+ (BOOL)shouldPromptUserForLibrarySchemaMismatch
{
  return MEMORY[0x19AEC04BC](a1, a2) && (MEMORY[0x19AEC04C8]() & 1) != 0;
}

- (NSDictionary)options
{
  return (NSDictionary *)objc_getProperty(self, a2, 136, 1);
}

uint64_t __55__PLModelMigrator_loadFileSystemAssetsNotifyCompleted___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)loadFileSystemAssetsNotifyCompleted:(id)a3
{
  id v4;
  NSObject *fileSystemLoadQueue;
  NSObject *v6;
  OS_dispatch_queue **p_fileSystemLoadQueue;
  id v8;
  _QWORD block[4];
  id v10;

  v4 = a3;
  p_fileSystemLoadQueue = &self->_fileSystemLoadQueue;
  fileSystemLoadQueue = self->_fileSystemLoadQueue;
  v6 = p_fileSystemLoadQueue[1];
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __55__PLModelMigrator_loadFileSystemAssetsNotifyCompleted___block_invoke;
  block[3] = &unk_1E3676CD8;
  v10 = v4;
  v8 = v4;
  dispatch_group_notify(v6, fileSystemLoadQueue, block);

}

- (BOOL)sceneStepRequiredForPreviousStoreVersion:(unint64_t)a3
{
  return a3 >> 2 < 0xCD1;
}

- (BOOL)markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStoreAndClearSceneprints:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  NSObject *v28;
  const char *v29;
  NSObject *v30;
  os_log_type_t v31;
  NSObject *v32;
  NSObject *v33;
  const __CFString *v34;
  _QWORD v36[4];
  NSObject *v37;
  id v38;
  id v39;
  uint8_t buf[4];
  uint64_t v41;
  const __CFString *v42;
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  v6 = *MEMORY[0x1E0C97C38];
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStoreAndClearSceneprints:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97AB0];
  +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "batchUpdateRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("distanceIdentity != nil"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v42 = CFSTR("distanceIdentity");
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v43, &v42, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPropertiesToUpdate:", v13);

  objc_msgSend(v10, "setResultType:", 0);
  v39 = 0;
  objc_msgSend(v7, "executeRequest:error:", v10, &v39);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v39;
  v16 = v14 != 0;
  if (!v14)
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v41 = (uint64_t)v15;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Batch update request failed, setting distance identities to nil, error: %@", buf, 0xCu);
    }

  }
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v5);
  v18 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStoreAndClearSceneprints:]", v6);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (void *)MEMORY[0x1E0C97B48];
  +[PLSceneprint entityName](PLSceneprint, "entityName");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "fetchRequestWithEntityName:", v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v22, "setFetchBatchSize:", 100);
  v38 = 0;
  objc_msgSend(v19, "executeFetchRequest:error:", v22, &v38);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v38;
  if (v23)
  {
    v25 = objc_msgSend(v23, "count");
    v36[0] = MEMORY[0x1E0C809B0];
    v36[1] = 3221225472;
    v36[2] = __118__PLModelMigrator_AssetAnalysis__markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStoreAndClearSceneprints___block_invoke;
    v36[3] = &unk_1E3660F08;
    v37 = v19;
    -[NSObject enumerateWithIncrementalSaveUsingObjects:withBlock:](v37, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v23, v36);
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    PLMigrationGetLog();
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = v27;
    if (v26)
    {
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v41 = (uint64_t)v26;
        v29 = "Failed to delete sceneprint with error: %@";
        v30 = v28;
        v31 = OS_LOG_TYPE_ERROR;
LABEL_14:
        _os_log_impl(&dword_199541000, v30, v31, v29, buf, 0xCu);
      }
    }
    else if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v41 = v25;
      v29 = "Deleted %lu sceneprints";
      v30 = v28;
      v31 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }

    v32 = v37;
    goto LABEL_16;
  }
  PLMigrationGetLog();
  v32 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v41 = (uint64_t)v24;
    _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_ERROR, "Failed to fetch Sceneprints with error: %@", buf, 0xCu);
  }
  v16 = 0;
  v26 = v24;
LABEL_16:

  objc_autoreleasePoolPop(v18);
  PLMigrationGetLog();
  v33 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
  {
    v34 = CFSTR("NO");
    if (v16)
      v34 = CFSTR("YES");
    *(_DWORD *)buf = 138412290;
    v41 = (uint64_t)v34;
    _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_DEFAULT, "Performed scene analysis reset, success: %@", buf, 0xCu);
  }

  return v16;
}

- (BOOL)resetManualOrderForNonFavoritePeopleInManagedObjectContext:(id)a3
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  NSObject *v28;
  NSObject *v29;
  const char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint32_t v33;
  NSObject *v34;
  void *v36;
  void *context;
  _QWORD v38[5];
  id v39;
  id v40;
  _QWORD v41[3];
  uint8_t buf[4];
  const char *v43;
  __int16 v44;
  id v45;
  _QWORD v46[4];

  v46[2] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d AND (%K == nil OR %K == %@)"), CFSTR("type"), 1, CFSTR("fullName"), CFSTR("fullName"), &stru_1E36789C0);
  v4 = objc_claimAutoreleasedReturnValue();
  +[PLPerson fetchRequest](PLPerson, "fetchRequest");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = (void *)v4;
  objc_msgSend(v5, "setPredicate:", v4);
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("faceCount"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v46[0] = v6;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("personUUID"), 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v46[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "setSortDescriptors:", v8);
  v40 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v5, &v40);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v40;
  if (!v9)
  {
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v43 = "-[PLModelMigrator(AssetAnalysis) resetManualOrderForNonFavoritePeopleInManagedObjectContext:]";
      v44 = 2112;
      v45 = v10;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "%s failed to fetch unnamed persons with error %@", buf, 0x16u);
    }
    v17 = 0;
    v27 = 0;
    v12 = v5;
    v16 = v8;
    v19 = v3;
    goto LABEL_25;
  }
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d AND %K != nil AND %K != %@"), CFSTR("type"), 1, CFSTR("fullName"), CFSTR("fullName"), &stru_1E36789C0);
  v11 = objc_claimAutoreleasedReturnValue();
  +[PLPerson fetchRequest](PLPerson, "fetchRequest");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v12, "setPredicate:", v11);
  v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3928]), "initWithKey:ascending:selector:", CFSTR("fullName"), 1, sel_localizedCaseInsensitiveCompare_);
  v41[0] = v13;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("faceCount"), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v41[1] = v14;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("personUUID"), 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v41[2] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 3);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v12, "setSortDescriptors:", v16);
  v39 = v10;
  objc_msgSend(v3, "executeFetchRequest:error:", v12, &v39);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v39;

  v19 = v3;
  if (!v17)
  {
    PLMigrationGetLog();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v43 = "-[PLModelMigrator(AssetAnalysis) resetManualOrderForNonFavoritePeopleInManagedObjectContext:]";
      v44 = 2112;
      v45 = v18;
      _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_ERROR, "%s failed to fetch named persons with error %@", buf, 0x16u);
    }

    v17 = 0;
    v27 = 0;
    v10 = v18;
    goto LABEL_25;
  }

  if (!objc_msgSend(v9, "count") && !objc_msgSend(v17, "count"))
  {
    v27 = 1;
    goto LABEL_26;
  }
  v20 = v3;
  v21 = 4294966271;
  v22 = objc_msgSend(v9, "count");
  v23 = objc_msgSend(v17, "count") + v22;
  if (v23)
    v21 = 0xFFFFFBFF / v23;
  if (v21 <= 1)
    v24 = 1;
  else
    v24 = v21;
  v25 = 1024;
  do
  {
    v26 = v25;
    v25 >>= 1;
  }
  while (v26 > v24);
  objc_msgSend(v17, "arrayByAddingObjectsFromArray:", v9);
  v11 = objc_claimAutoreleasedReturnValue();
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = __93__PLModelMigrator_AssetAnalysis__resetManualOrderForNonFavoritePeopleInManagedObjectContext___block_invoke;
  v38[3] = &__block_descriptor_40_e25_v32__0__PLPerson_8Q16_B24l;
  v38[4] = v26;
  v19 = v20;
  objc_msgSend(v20, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v38);
  v10 = (id)objc_claimAutoreleasedReturnValue();

  v27 = v10 == 0;
  PLMigrationGetLog();
  v28 = objc_claimAutoreleasedReturnValue();
  v29 = v28;
  if (v10)
  {
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v43 = "-[PLModelMigrator(AssetAnalysis) resetManualOrderForNonFavoritePeopleInManagedObjectContext:]";
      v44 = 2112;
      v45 = v10;
      v30 = "%s failed to save with error %@";
      v31 = v29;
      v32 = OS_LOG_TYPE_ERROR;
      v33 = 22;
LABEL_23:
      _os_log_impl(&dword_199541000, v31, v32, v30, buf, v33);
    }
  }
  else if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v43 = (const char *)v23;
    v30 = "Sorted %lu non-favorite persons";
    v31 = v29;
    v32 = OS_LOG_TYPE_DEFAULT;
    v33 = 12;
    goto LABEL_23;
  }

LABEL_25:
  v18 = v10;
LABEL_26:

  objc_autoreleasePoolPop(context);
  return v27;
}

- (BOOL)resetManualOrderForNonFavoritePeopleInStore:(id)a3
{
  PLModelMigrator *v3;
  void *v4;

  v3 = self;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", a3, "-[PLModelMigrator(AssetAnalysis) resetManualOrderForNonFavoritePeopleInStore:]", *MEMORY[0x1E0C97C38]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = -[PLModelMigrator resetManualOrderForNonFavoritePeopleInManagedObjectContext:](v3, "resetManualOrderForNonFavoritePeopleInManagedObjectContext:", v4);

  return (char)v3;
}

- (BOOL)faceQualityResetRequiredForPreviousStoreVersion:(unint64_t)a3
{
  return a3 < 0x2B46;
}

- (BOOL)resetFaceQualityInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  const __CFString *v12;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) resetFaceQualityInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("qualityMeasure"), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = CFSTR("qualityMeasure");
  v13[0] = &unk_1E375D5C0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, &v12, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_opt_class();
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v9) = objc_msgSend(v9, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v10, v7, v8, v6, 0);

  objc_autoreleasePoolPop(v5);
  return (char)v9;
}

- (BOOL)_markAllProcessedAnalysisStatesDirtyForWorkerType:(signed __int16)a3 withStartingWorkerFlags:(int)a4 inStore:(id)a5
{
  uint64_t v5;
  int v6;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[2];
  _QWORD v17[3];

  v5 = *(_QWORD *)&a4;
  v6 = a3;
  v17[2] = *MEMORY[0x1E0C80C00];
  v8 = a5;
  v9 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v8, "-[PLModelMigrator(AssetAnalysis) _markAllProcessedAnalysisStatesDirtyForWorkerType:withStartingWorkerFlags:inStore:]", *MEMORY[0x1E0C97C38]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("workerType == %ld AND analysisState == %ld"), v6, 20);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = CFSTR("analysisState");
  v16[1] = CFSTR("workerFlags");
  v17[0] = &unk_1E375D5D8;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v5);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = objc_msgSend((id)objc_opt_class(), "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v14, v11, v13, v10, 0);

  objc_autoreleasePoolPop(v9);
  return (char)self;
}

- (BOOL)deleteAllAssetAnalysisStatesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  id v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) deleteAllAssetAnalysisStatesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc(MEMORY[0x1E0C97B48]);
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithEntityName:", v8);

  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v9);
  v17 = 0;
  v11 = (id)objc_msgSend(v6, "executeRequest:error:", v10, &v17);
  v12 = v17;
  PLMigrationGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (v12)
  {
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v12, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v19 = v12;
      v20 = 2112;
      v21 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "deleteAllAssetAnalysisStatesInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Deleted all assets states.", buf, 2u);
  }

  objc_autoreleasePoolPop(v5);
  return v12 == 0;
}

- (BOOL)deleteAnalysisStatesInStore:(id)a3 forWorkerType:(signed __int16)a4
{
  int v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v4 = a4;
  v6 = a3;
  v7 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v6, "-[PLModelMigrator(AssetAnalysis) deleteAnalysisStatesInStore:forWorkerType:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("workerType"), v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_opt_class();
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v10) = objc_msgSend(v10, "executeBatchDeleteWithEntityName:predicate:managedObjectContext:error:", v11, v9, v8, 0);

  objc_autoreleasePoolPop(v7);
  return (char)v10;
}

- (BOOL)fixupUnknownAnalysisStatesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  id v18;
  uint8_t buf[4];
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) fixupUnknownAnalysisStatesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc(MEMORY[0x1E0C97B48]);
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithEntityName:", v8);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("analysisState = %d"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v9);
  v18 = 0;
  v12 = (id)objc_msgSend(v6, "executeRequest:error:", v11, &v18);
  v13 = v18;
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v13)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v20 = v13;
      v21 = 2112;
      v22 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "fixupUnknownAnalysisStatesInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Deleted all unknown assets states.", buf, 2u);
  }

  objc_autoreleasePoolPop(v5);
  return v13 == 0;
}

- (BOOL)fixupStatesWithUnreachableAssetUUIDsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  BOOL v13;

  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) fixupStatesWithUnreachableAssetUUIDsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset != nil && assetUUID != asset.uuid"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v11, 1, &__block_literal_global_3830);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12 == 0;

  objc_autoreleasePoolPop(v5);
  return v13;
}

- (BOOL)touchAnalysisStateSortTokensInStoreInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  BOOL v12;

  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) touchAnalysisStateSortTokensInStoreInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v10, 1, &__block_literal_global_75);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11 == 0;

  objc_autoreleasePoolPop(v5);
  return v12;
}

- (BOOL)clearVisionWorkerCache
{
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  const char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint32_t v14;
  id v16;
  uint8_t buf[4];
  NSObject *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_DEFAULT, "Clearing vision worker cache files...", buf, 2u);
  }

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "privateCacheDirectoryWithSubType:", 5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "fileExistsAtPath:", v6))
  {
    v16 = 0;
    v7 = objc_msgSend(v4, "removeItemAtPath:error:", v6, &v16);
    v8 = v16;
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if ((v7 & 1) != 0)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        v11 = "Cleared vision worker cache files.";
        v12 = v10;
        v13 = OS_LOG_TYPE_DEFAULT;
        v14 = 2;
LABEL_12:
        _os_log_impl(&dword_199541000, v12, v13, v11, buf, v14);
      }
    }
    else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v8;
      v11 = "Failed to remove vision worker cache files: %@";
      v12 = v10;
      v13 = OS_LOG_TYPE_ERROR;
      v14 = 12;
      goto LABEL_12;
    }

    goto LABEL_14;
  }
  PLMigrationGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "No vision worker cache files found to clear.", buf, 2u);
  }
  v7 = 1;
LABEL_14:

  return v7;
}

- (BOOL)resetRejectedFacesOnAllPersonsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  BOOL v15;
  uint64_t v16;
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) resetRejectedFacesOnAllPersonsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("rejectedFaces.@count > 0"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setPredicate:", v7);
  v18 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v10, &v18);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v18;
  if (v11
    && (objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, &__block_literal_global_79),
        v13 = objc_claimAutoreleasedReturnValue(),
        v12,
        (v12 = v13) == 0))
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v16 = objc_msgSend(v11, "count");
      *(_DWORD *)buf = 134217984;
      v20 = v16;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Reset rejected faces on %lu persons", buf, 0xCu);
    }
    v15 = 1;
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = (uint64_t)v12;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Failed to reset rejected faces with error %@", buf, 0xCu);
    }

    v15 = 0;
  }

  objc_autoreleasePoolPop(v5);
  return v15;
}

- (BOOL)markAllDirtyFaceAnalysisStatesWithFaceDetectionWorkerFlagsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) markAllDirtyFaceAnalysisStatesWithFaceDetectionWorkerFlagsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("workerType == %d AND analysisState != %d AND analysisState != %d"), 4, 20, 10);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = objc_msgSend((id)objc_opt_class(), "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v8, v7, &unk_1E3764418, v6, 0);

  objc_autoreleasePoolPop(v5);
  return (char)self;
}

- (BOOL)markUserConfirmedFacesAndCorrespondingFaceAnalysisStatesDirtyInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  id v27;
  id v28;
  id v29;

  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) markUserConfirmedFacesAndCorrespondingFaceAnalysisStatesDirtyInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("nameSource == %d"), 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_opt_class();
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v8) = objc_msgSend(v8, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v9, v7, &unk_1E3764440, v6, 0);

  if ((_DWORD)v8)
  {
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(SUBQUERY(asset.detectedFaces, $f, $f.nameSource == %d).@count != 0) AND workerType == %d"), 1, 4);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)MEMORY[0x1E0C97B48];
    +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "fetchRequestWithEntityName:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "setResultType:", 1);
    objc_msgSend(v13, "setPredicate:", v10);
    v29 = 0;
    objc_msgSend(v6, "executeFetchRequest:error:", v13, &v29);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v29;
    v16 = v15;
    if (v14)
    {
      v28 = v15;
      objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@ AND analysisState != %d"), v14, 20);
      v27 = v4;
      v17 = v10;
      v18 = v5;
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = (void *)objc_opt_class();
      +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v20) = objc_msgSend(v20, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v21, v19, &unk_1E3764468, v6, 0);

      v5 = v18;
      v10 = v17;
      v4 = v27;
      if ((_DWORD)v20)
      {
        objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@ AND analysisState = %d"), v14, 20);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = (void *)objc_opt_class();
        +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = objc_msgSend(v23, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v24, v22, &unk_1E3764490, v6, 0);

      }
      else
      {
        v25 = 0;
      }
      v16 = v28;
    }
    else
    {
      v25 = 0;
    }

  }
  else
  {
    v25 = 0;
  }

  objc_autoreleasePoolPop(v5);
  return v25;
}

- (BOOL)resetAnalysisStateForVideosWithMoc:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  BOOL v14;
  uint8_t buf[8];
  uint64_t v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v18[0] = CFSTR("mediaAnalysisAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v18, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v7);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K != 0"), CFSTR("kind"), 1, CFSTR("videoKeyFrameValue"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v8);

  objc_msgSend(v6, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "setResultType:", 1);
  v17 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v17);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9)
    goto LABEL_6;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset IN %@ AND analysisState = %d"), v9, 20);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_opt_class();
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v11) = objc_msgSend(v11, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v12, v10, &unk_1E37644B8, v3, 0);

  if ((_DWORD)v11)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Reset analysis state for video assets with non-zero bestKeyFrame values", buf, 2u);
    }
    v14 = 1;
  }
  else
  {
LABEL_6:
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to reset analysis state for video assets with non-zero bestKeyFrame values", buf, 2u);
    }
    v14 = 0;
  }

  return v14;
}

- (BOOL)reconsiderAllowedForAnalysisOnAssetsMarkedNotAllowedInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint32_t v19;
  uint8_t buf[4];
  void *v22;
  _QWORD v23[3];

  v23[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator(AssetAnalysis) reconsiderAllowedForAnalysisOnAssetsMarkedNotAllowedInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  v23[0] = CFSTR("additionalAttributes");
  v23[1] = CFSTR("mediaAnalysisAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v10);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == NO"), CFSTR("additionalAttributes.allowedForAnalysis"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v11);

  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, &__block_literal_global_129);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "reset");
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v13)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v13;
      v16 = "Failed to reconsider allowed for analysis for assets marked as not allowed, error: %@";
      v17 = v15;
      v18 = OS_LOG_TYPE_ERROR;
      v19 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v17, v18, v16, buf, v19);
    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    v16 = "Reconsidered allowed for analysis for assets marked as not allowed.";
    v17 = v15;
    v18 = OS_LOG_TYPE_DEFAULT;
    v19 = 2;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
  return v13 == 0;
}

void __94__PLModelMigrator_AssetAnalysis__reconsiderAllowedForAnalysisOnAssetsMarkedNotAllowedInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  id v4;

  v2 = a2;
  v3 = objc_msgSend(v2, "calculateAllowedForAnalysis");
  objc_msgSend(v2, "additionalAttributes");
  v4 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "setAllowedForAnalysis:", v3);
}

void __72__PLModelMigrator_AssetAnalysis__resetRejectedFacesOnAllPersonsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  objc_msgSend(v2, "mutableRejectedFaces");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeAllObjects");

  objc_msgSend(MEMORY[0x1E0C99E60], "set");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setRejectedFacesNeedingFaceCrops:", v4);

}

void __77__PLModelMigrator_AssetAnalysis__touchAnalysisStateSortTokensInStoreInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  objc_msgSend(v2, "sortToken");
  objc_msgSend(v2, "setSortToken:");

}

void __78__PLModelMigrator_AssetAnalysis__fixupStatesWithUnreachableAssetUUIDsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;

  v4 = a2;
  objc_msgSend(v4, "asset");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "uuid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    objc_msgSend(v4, "setAssetUUID:", v3);

}

uint64_t __93__PLModelMigrator_AssetAnalysis__resetManualOrderForNonFavoritePeopleInManagedObjectContext___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  if ((unint64_t)(*(_QWORD *)(a1 + 32) * a3) >= 0xFFFFFFFE)
    v3 = 4294967294;
  else
    v3 = *(_QWORD *)(a1 + 32) * a3;
  return objc_msgSend(a2, "setManualOrder:", v3);
}

uint64_t __118__PLModelMigrator_AssetAnalysis__markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStoreAndClearSceneprints___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteObject:", a2);
}

+ (BOOL)graphPersonResetRequiredForPreviousStoreVersion:(unint64_t)a3
{
  return a3 < 0x3BC5;
}

+ (BOOL)performFaceAnalysisResetWithResetLevel:(int64_t)a3 pathManager:(id)a4 context:(id)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  BOOL v12;
  id v13;
  void *v14;
  void *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  void *v19;
  BOOL v20;
  id v21;
  _BOOL4 v22;
  NSObject *v23;
  NSObject *v24;
  NSObject *v25;
  const __CFString *v26;
  id v28;
  id v29;
  uint8_t buf[4];
  int64_t v31;
  __int16 v32;
  const __CFString *v33;
  const __CFString *v34;
  void *v35;
  const __CFString *v36;
  _QWORD v37[2];

  v37[1] = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  if (a3 < 1)
  {
    v22 = 1;
    goto LABEL_22;
  }
  v36 = CFSTR("faceAdjustmentVersion");
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v37[0] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v37, &v36, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = 0;
  v12 = +[PLModelMigrator executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:](PLModelMigrator, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v11, 0, v10, v8, &v29);
  v13 = v29;

  if (!v12)
  {
    PLBackendGetLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v31 = (int64_t)v13;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "Failed to batch reset faceAdjustmentVersion: %@", buf, 0xCu);
    }

    v22 = 0;
    goto LABEL_21;
  }
  if ((unint64_t)a3 >= 2)
  {
    v14 = (void *)MEMORY[0x19AEC1554]();
    +[PLDetectedFaceGroup entityName](PLDetectedFaceGroup, "entityName");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = +[PLModelMigrator executeBatchDeleteWithEntityName:predicate:managedObjectContext:error:](PLModelMigrator, "executeBatchDeleteWithEntityName:predicate:managedObjectContext:error:", v15, 0, v8, 0);

    if (!v16)
    {
      PLBackendGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v31 = 0;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Failed to batch delete face groups %@", buf, 0xCu);
      }

    }
    v34 = CFSTR("state");
    v35 = &unk_1E375D650;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v16)
    {
      +[PLFaceCrop entityName](PLFaceCrop, "entityName");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v28 = 0;
      v20 = +[PLModelMigrator executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:](PLModelMigrator, "executeBatchUpdateWithEntityName:predicate:propertiesToUpdate:managedObjectContext:error:", v19, 0, v18, v8, &v28);
      v21 = v28;

      if (v20)
      {
        v22 = 1;
LABEL_20:

        objc_autoreleasePoolPop(v14);
        goto LABEL_21;
      }
    }
    else
    {
      v21 = 0;
    }
    PLBackendGetLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v31 = (int64_t)v21;
      _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "Failed to batch set face crops to dirty: %@", buf, 0xCu);
    }

    v22 = 0;
    goto LABEL_20;
  }
  v22 = 1;
LABEL_21:

LABEL_22:
  PLBackendGetLog();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    v26 = CFSTR("NO");
    if (v22)
      v26 = CFSTR("YES");
    *(_DWORD *)buf = 134218242;
    v31 = a3;
    v32 = 2112;
    v33 = v26;
    _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_INFO, "Performed face analysis reset with level: %lu, success: %@", buf, 0x16u);
  }

  return v22;
}

- (PLModelMigrator)initWithPathManager:(id)a3
{
  id v5;
  PLModelMigrator *v6;
  double v7;
  void *v8;
  uint64_t v9;
  OS_dispatch_queue *fileSystemLoadQueue;
  dispatch_group_t v11;
  OS_dispatch_group *fileSystemLoadGroup;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  PLLazyObject *lazyCoreAnalysticsEventManager;
  id v18;
  id v19;
  uint64_t v20;
  PLLazyObject *lazyDeviceRestoreMigrationSupport;
  id v22;
  id v23;
  uint64_t v24;
  PLLazyObject *lazyDeviceRestoreMigrationPostProcessingSupport;
  id v26;
  id v27;
  uint64_t v28;
  PLLazyObject *lazyMigrationLogger;
  uint64_t v30;
  NSProgress *progress;
  id v32;
  id v33;
  uint64_t v34;
  PLLazyObject *lazyGraphCache;
  _QWORD v37[4];
  id v38;
  _QWORD v39[4];
  id v40;
  _QWORD v41[4];
  id v42;
  _QWORD v43[4];
  id v44;
  _QWORD v45[4];
  id v46;
  id location;
  objc_super v48;

  v5 = a3;
  v48.receiver = self;
  v48.super_class = (Class)PLModelMigrator;
  v6 = -[PLModelMigrator init](&v48, sel_init);
  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
    v6->_startTime = v7;
    objc_storeStrong((id *)&v6->_pathManager, a3);
    v6->_recordMigrationMetadataLock._os_unfair_lock_opaque = 0;
    *(_QWORD *)&v6->_storeMetadataLock._os_unfair_lock_opaque = 0;
    dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    pl_dispatch_queue_create_with_fallback_qos();
    v9 = objc_claimAutoreleasedReturnValue();
    fileSystemLoadQueue = v6->_fileSystemLoadQueue;
    v6->_fileSystemLoadQueue = (OS_dispatch_queue *)v9;

    v11 = dispatch_group_create();
    fileSystemLoadGroup = v6->_fileSystemLoadGroup;
    v6->_fileSystemLoadGroup = (OS_dispatch_group *)v11;

    v13 = objc_initWeak(&location, v6);
    v14 = objc_alloc(MEMORY[0x1E0D73248]);
    v15 = MEMORY[0x1E0C809B0];
    v45[0] = MEMORY[0x1E0C809B0];
    v45[1] = 3221225472;
    v45[2] = __39__PLModelMigrator_initWithPathManager___block_invoke;
    v45[3] = &unk_1E36759D8;
    objc_copyWeak(&v46, &location);
    v16 = objc_msgSend(v14, "initWithBlock:", v45);
    objc_destroyWeak(&v46);
    objc_destroyWeak(&location);
    lazyCoreAnalysticsEventManager = v6->_lazyCoreAnalysticsEventManager;
    v6->_lazyCoreAnalysticsEventManager = (PLLazyObject *)v16;

    v18 = objc_initWeak(&location, v6);
    v19 = objc_alloc(MEMORY[0x1E0D73248]);
    v43[0] = v15;
    v43[1] = 3221225472;
    v43[2] = __39__PLModelMigrator_initWithPathManager___block_invoke_2;
    v43[3] = &unk_1E36759D8;
    objc_copyWeak(&v44, &location);
    v20 = objc_msgSend(v19, "initWithBlock:", v43);
    objc_destroyWeak(&v44);
    objc_destroyWeak(&location);
    lazyDeviceRestoreMigrationSupport = v6->_lazyDeviceRestoreMigrationSupport;
    v6->_lazyDeviceRestoreMigrationSupport = (PLLazyObject *)v20;

    v22 = objc_initWeak(&location, v6);
    v23 = objc_alloc(MEMORY[0x1E0D73248]);
    v41[0] = v15;
    v41[1] = 3221225472;
    v41[2] = __39__PLModelMigrator_initWithPathManager___block_invoke_3;
    v41[3] = &unk_1E36759D8;
    objc_copyWeak(&v42, &location);
    v24 = objc_msgSend(v23, "initWithBlock:", v41);
    objc_destroyWeak(&v42);
    objc_destroyWeak(&location);
    lazyDeviceRestoreMigrationPostProcessingSupport = v6->_lazyDeviceRestoreMigrationPostProcessingSupport;
    v6->_lazyDeviceRestoreMigrationPostProcessingSupport = (PLLazyObject *)v24;

    v26 = objc_initWeak(&location, v6);
    v27 = objc_alloc(MEMORY[0x1E0D73248]);
    v39[0] = v15;
    v39[1] = 3221225472;
    v39[2] = __39__PLModelMigrator_initWithPathManager___block_invoke_4;
    v39[3] = &unk_1E36759D8;
    objc_copyWeak(&v40, &location);
    v28 = objc_msgSend(v27, "initWithRetriableBlock:", v39);
    objc_destroyWeak(&v40);
    objc_destroyWeak(&location);
    lazyMigrationLogger = v6->_lazyMigrationLogger;
    v6->_lazyMigrationLogger = (PLLazyObject *)v28;

    objc_msgSend(MEMORY[0x1E0CB38A8], "discreteProgressWithTotalUnitCount:", 1);
    v30 = objc_claimAutoreleasedReturnValue();
    progress = v6->_progress;
    v6->_progress = (NSProgress *)v30;

    v32 = objc_initWeak(&location, v6);
    v33 = objc_alloc(MEMORY[0x1E0D73248]);
    v37[0] = v15;
    v37[1] = 3221225472;
    v37[2] = __39__PLModelMigrator_initWithPathManager___block_invoke_5;
    v37[3] = &unk_1E36759D8;
    objc_copyWeak(&v38, &location);
    v34 = objc_msgSend(v33, "initWithBlock:", v37);
    objc_destroyWeak(&v38);
    objc_destroyWeak(&location);
    lazyGraphCache = v6->_lazyGraphCache;
    v6->_lazyGraphCache = (PLLazyObject *)v34;

  }
  return v6;
}

- (PLCoreAnalyticsEventManager)analyticsEventManager
{
  return (PLCoreAnalyticsEventManager *)-[PLLazyObject objectValue](self->_lazyCoreAnalysticsEventManager, "objectValue");
}

- (id)_migrationThumbnailManagerWithStore:(id)a3
{
  id v4;
  PLModelMigrator *v5;
  PLThumbnailManager *thumbnailManager;
  PLThumbnailManager *v7;
  PLThumbnailManager *v8;
  PLThumbnailManager *v9;

  v4 = a3;
  v5 = self;
  objc_sync_enter(v5);
  thumbnailManager = v5->_thumbnailManager;
  if (!thumbnailManager)
  {
    v7 = -[PLThumbnailManager initWithPhotoLibraryPathManager:storeFromMigration:]([PLThumbnailManager alloc], "initWithPhotoLibraryPathManager:storeFromMigration:", v5->_pathManager, v4);
    v8 = v5->_thumbnailManager;
    v5->_thumbnailManager = v7;

    thumbnailManager = v5->_thumbnailManager;
  }
  v9 = thumbnailManager;
  objc_sync_exit(v5);

  return v9;
}

- (PLDeviceRestoreMigrationSupport)deviceRestoreMigrationSupport
{
  return (PLDeviceRestoreMigrationSupport *)-[PLLazyObject objectValue](self->_lazyDeviceRestoreMigrationSupport, "objectValue");
}

- (id)newDeviceRestoreMigrationSupport
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  PLDeviceRestoreMigrationSupport *v8;

  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isDeviceRestoreSupported");

  if (!v4)
    return 0;
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "libraryURL");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLLibraryServicesManager libraryServicesManagerForLibraryURL:](PLLibraryServicesManager, "libraryServicesManagerForLibraryURL:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = -[PLDeviceRestoreMigrationSupport initWithLibraryServicesManager:]([PLDeviceRestoreMigrationSupport alloc], "initWithLibraryServicesManager:", v7);
  return v8;
}

- (PLDeviceRestoreMigrationPostProcessingSupport)postProcessingToken
{
  return (PLDeviceRestoreMigrationPostProcessingSupport *)-[PLLazyObject objectValue](self->_lazyDeviceRestoreMigrationPostProcessingSupport, "objectValue");
}

- (id)migrationLogger
{
  return (id)-[PLLazyObject objectValue](self->_lazyMigrationLogger, "objectValue");
}

- (void)migrationLoggerClose
{
  -[PLLazyObject resetObjectWithHandler:](self->_lazyMigrationLogger, "resetObjectWithHandler:", &__block_literal_global_20404);
}

- (PLGraphCache)graphCache
{
  return (PLGraphCache *)-[PLLazyObject objectValue](self->_lazyGraphCache, "objectValue");
}

- (id)newShortLivedLibraryWithName:(const char *)a3
{
  PLPhotoLibraryOptions *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = objc_alloc_init(PLPhotoLibraryOptions);
  -[PLPhotoLibraryOptions setRequiredState:](v5, "setRequiredState:", 6);
  -[PLPhotoLibraryOptions setRefreshesAfterSave:](v5, "setRefreshesAfterSave:", 0);
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "libraryURL");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = 0;
  v8 = +[PLPhotoLibrary newPhotoLibraryWithName:loadedFromURL:options:error:](PLPhotoLibrary, "newPhotoLibraryWithName:loadedFromURL:options:error:", a3, v7, v5, &v12);
  v9 = v12;
  if (!v8)
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v14 = v7;
      v15 = 2112;
      v16 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "failed to load photo library with url %@, error: %@", buf, 0x16u);
    }

  }
  return v8;
}

- (id)newShortLivedLibraryForRebuildWithName:(const char *)a3
{
  PLPhotoLibraryOptions *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = objc_alloc_init(PLPhotoLibraryOptions);
  -[PLPhotoLibraryOptions setRequiredState:](v5, "setRequiredState:", 6);
  -[PLPhotoLibraryOptions setRefreshesAfterSave:](v5, "setRefreshesAfterSave:", 0);
  -[PLPhotoLibraryOptions setAutomaticallyPinToFirstFetch:](v5, "setAutomaticallyPinToFirstFetch:", 0);
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "libraryURL");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = 0;
  v8 = +[PLPhotoLibrary newPhotoLibraryWithName:loadedFromURL:options:error:](PLPhotoLibrary, "newPhotoLibraryWithName:loadedFromURL:options:error:", a3, v7, v5, &v12);
  v9 = v12;
  if (!v8)
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v14 = v7;
      v15 = 2112;
      v16 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "failed to load photo library with url %@, error: %@", buf, 0x16u);
    }

  }
  return v8;
}

- (BOOL)isCloudPhotoLibraryEnabled
{
  void *v2;
  void *v3;
  char v4;

  -[PLModelMigrator pathManager](self, "pathManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "libraryURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = PLIsCloudPhotoLibraryEnabledForPhotoLibraryURL(v3);

  return v4;
}

- (void)_validateCurrentModelVersionFailedWithNoVersionFromServer
{
  NSObject *v2;
  NSObject *v3;
  void *v4;
  void (*v5)(const __CFString *, uint64_t);
  _DWORD v6[2];
  __int16 v7;
  const __CFString *v8;

  objc_opt_class();
  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    v6[0] = 67109378;
    v6[1] = objc_msgSend((id)objc_opt_class(), "currentModelVersion");
    v7 = 2112;
    v8 = CFSTR("Your Photos installation appears to be broken, reinstall root and reboot");
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "Cannot open or create database with model version %d, assetsd failed to validate current model version. This is most likely because assetsd is misconfigured, missing or cannot run.  %@", (uint8_t *)v6, 0x12u);
  }

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v6[0]) = 0;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "Triggering stackshot report to diagnose assetsd state", (uint8_t *)v6, 2u);
  }

  v4 = dlopen("/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport", 1);
  v5 = (void (*)(const __CFString *, uint64_t))dlsym(v4, "WriteStackshotReport");
  if (v5)
    v5(CFSTR("_validateCurrentModelVersionFailedWithNoVersionFromServer"), 3131746989);
  __break(1u);
}

- (void)_validateCurrentModelVersionFailedWithMismatchedVersion:(int64_t)a3
{
  NSObject *v4;
  _DWORD v5[2];
  __int16 v6;
  int64_t v7;
  __int16 v8;
  const __CFString *v9;

  objc_opt_class();
  PLMigrationGetLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v5[0] = 67109634;
    v5[1] = objc_msgSend((id)objc_opt_class(), "currentModelVersion");
    v6 = 2048;
    v7 = a3;
    v8 = 2112;
    v9 = CFSTR("Your Photos installation appears to be broken, reinstall root and reboot");
    _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_ERROR, "Cannot open or create database with model version %d, assetsd is using model version %lld. %@", (uint8_t *)v5, 0x1Cu);
  }

  __break(1u);
}

- (void)_validateCurrentModelVersionAttempt:(int64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  _DWORD v10[2];
  __int16 v11;
  int v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0D73280], "systemLibraryURL");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLPhotoLibraryBundleController sharedAssetsdClientForPhotoLibraryURL:](PLPhotoLibraryBundleController, "sharedAssetsdClientForPhotoLibraryURL:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "libraryClient");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "getCurrentModelVersion");

    if (a3 <= 9 && v8 == -1)
    {
      PLMigrationGetLog();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10[0] = 67109376;
        v10[1] = a3 + 1;
        v11 = 1024;
        v12 = 10;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Error getting current model version. Will retry (%d/%d).", (uint8_t *)v10, 0xEu);
      }

      sleep(1u);
      -[PLModelMigrator _validateCurrentModelVersionAttempt:](self, "_validateCurrentModelVersionAttempt:", a3 + 1);
    }
    else if (v8 == -1)
    {
      -[PLModelMigrator _validateCurrentModelVersionFailedWithNoVersionFromServer](self, "_validateCurrentModelVersionFailedWithNoVersionFromServer");
    }
    else if (v8 != +[PLModelMigrator currentModelVersion](PLModelMigrator, "currentModelVersion"))
    {
      -[PLModelMigrator _validateCurrentModelVersionFailedWithMismatchedVersion:](self, "_validateCurrentModelVersionFailedWithMismatchedVersion:", v8);
    }

  }
}

- (void)validateCurrentModelVersion
{
  -[PLModelMigrator _validateCurrentModelVersionAttempt:](self, "_validateCurrentModelVersionAttempt:", 0);
}

- (unint64_t)_assetCountForStore:(id)a3
{
  void *v4;
  unint64_t v5;

  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", a3, "-[PLModelMigrator _assetCountForStore:]", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[PLModelMigrator _assetCountForContext:](self, "_assetCountForContext:", v4);

  return v5;
}

- (unint64_t)_assetCountForLibrary:(id)a3
{
  void *v4;
  unint64_t v5;

  objc_msgSend(a3, "managedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[PLModelMigrator _assetCountForContext:](self, "_assetCountForContext:", v4);

  return v5;
}

- (unint64_t)_assetCountForContext:(id)a3
{
  id v3;
  id v4;
  unint64_t v5;
  _QWORD v7[4];
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a3;
  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v13 = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __41__PLModelMigrator__assetCountForContext___block_invoke;
  v7[3] = &unk_1E3677C68;
  v9 = &v10;
  v4 = v3;
  v8 = v4;
  objc_msgSend(v4, "performBlockAndWait:", v7);
  v5 = v11[3];

  _Block_object_dispose(&v10, 8);
  return v5;
}

- (BOOL)postProcessThumbnailsOnlyIfVersionMismatchOrMissing:(BOOL *)a3 coordinator:(id)a4
{
  id v6;
  void *v7;
  _BOOL4 v8;
  void *v9;
  _BOOL8 v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;

  v6 = a4;
  -[PLModelMigrator pathManager](self, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = +[PLThumbnailManagerCore hasThumbnailConfigMismatchWithPathManager:comparedToConfigPhase:](PLThumbnailManager, "hasThumbnailConfigMismatchWithPathManager:comparedToConfigPhase:", v7, 1);

  -[PLModelMigrator pathManager](self, "pathManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = +[PLThumbnailManagerCore isMissingThumbnailTablesWithPathManager:](PLThumbnailManager, "isMissingThumbnailTablesWithPathManager:", v9);

  if (PLIsAssetsdProxyService() || !v8 && !v10)
  {
    if (a3)
      *a3 = 0;
    v15 = 1;
  }
  else
  {
    if (a3)
      *a3 = 1;
    objc_msgSend(v6, "persistentStores");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "firstObject");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v12, "-[PLModelMigrator postProcessThumbnailsOnlyIfVersionMismatchOrMissing:coordinator:]", *MEMORY[0x1E0C97C38]);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLModelMigrator _migrationThumbnailManagerWithStore:](self, "_migrationThumbnailManagerWithStore:", v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "resetThumbnailsForced:isMissingTables:inContext:", 0, v10, v13);

  }
  return v15;
}

- (BOOL)_fixIncorrectThumbnailTablesInStore:(id)a3 deferHintChanges:(BOOL)a4
{
  uint64_t v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v4 = a4;
  v6 = a3;
  -[PLModelMigrator pathManager](self, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLThumbnailManagerCore removeThumbnailTablesUnsupportedOnly:withPathManager:](PLThumbnailManager, "removeThumbnailTablesUnsupportedOnly:withPathManager:", 1, v7);

  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v6, "-[PLModelMigrator _fixIncorrectThumbnailTablesInStore:deferHintChanges:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_opt_class();
  -[PLModelMigrator _migrationThumbnailManagerWithStore:](self, "_migrationThumbnailManagerWithStore:", v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  LOBYTE(v4) = objc_msgSend(v9, "resetThumbnailIndexesAndInitiateThumbnailRebuildRequestIfSuccessfulForForThumbnailManager:deferHintChanges:inContext:", v10, v4, v8);
  return v4;
}

- (id)managedObjectContextForMigrationWithName:(const char *)a3 persistentStoreCoordinator:(id)a4 concurrencyType:(unint64_t)a5
{
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v17;
  _QWORD v18[4];
  id v19;
  PLModelMigrator *v20;

  v9 = a4;
  v10 = *MEMORY[0x1E0C97C38];
  if (a5 != 1 && v10 != a5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 605, CFSTR("unexpected concurrency type for migration context"));

  }
  pl_dispatch_once();
  v11 = (id)managedObjectContextForMigrationWithName_persistentStoreCoordinator_concurrencyType__pl_once_object_20;
  v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97B88]), "initWithConcurrencyType:", a5);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a3);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setName:", v13);

  objc_msgSend(v12, "setPersistentStoreCoordinator:", v9);
  objc_msgSend(v12, "setMergePolicy:", v11);
  if (v10 == a5)
  {
    -[PLModelMigrator pathManager](self, "pathManager");
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "userInfo");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setObject:forKeyedSubscript:", v14, CFSTR("com.apple.photos.PLModelMigratorPathManagerKey"));

  }
  else
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __103__PLModelMigrator_managedObjectContextForMigrationWithName_persistentStoreCoordinator_concurrencyType___block_invoke_2;
    v18[3] = &unk_1E3677C18;
    v19 = v12;
    v20 = self;
    objc_msgSend(v19, "performBlockAndWait:", v18);
    v14 = v19;
  }

  return v12;
}

- (id)managedObjectContextForMigrationInStore:(id)a3 name:(const char *)a4 concurrencyType:(unint64_t)a5
{
  void *v8;
  void *v9;

  objc_msgSend(a3, "persistentStoreCoordinator");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator managedObjectContextForMigrationWithName:persistentStoreCoordinator:concurrencyType:](self, "managedObjectContextForMigrationWithName:persistentStoreCoordinator:concurrencyType:", a4, v8, a5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (BOOL)_verifyCloudAssetsLocalAvailability:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  NSObject *v17;
  char v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v23;
  void *v24;
  const char *aSelector;
  void *v26;
  void *context;
  void *v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  id v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 634, CFSTR("%@ can be called only from assetsd."), v24);

  }
  aSelector = a2;
  context = (void *)MEMORY[0x19AEC1554]();
  v28 = v5;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _verifyCloudAssetsLocalAvailability:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudResource"));
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "executeFetchRequest:error:");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
  if (v9)
  {
    v10 = v9;
    v11 = 0;
    v12 = 0;
    v13 = *(_QWORD *)v31;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v31 != v13)
          objc_enumerationMutation(v8);
        v15 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
        objc_msgSend(v15, "filePath");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "setIsLocallyAvailable:", objc_msgSend(v7, "fileExistsAtPath:isDirectory:", v16, 0));

        v11 += objc_msgSend(v15, "isLocallyAvailable");
      }
      v12 += v10;
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
    }
    while (v10);
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    v35 = v11;
    v36 = 2048;
    v37 = v12;
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "%llu out of %llu resources are available locally", buf, 0x16u);
  }

  if (objc_msgSend(v6, "hasChanges"))
  {
    v29 = 0;
    v18 = objc_msgSend(v6, "save:", &v29);
    v19 = v29;
    if ((v18 & 1) == 0)
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(aSelector);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v35 = v21;
        v36 = 2112;
        v37 = v19;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "%@ failed: %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v18 = 1;
  }
  objc_msgSend(v6, "reset");

  objc_autoreleasePoolPop(context);
  return v18;
}

- (BOOL)_disableICloudPhoto
{
  void *v4;
  void *v5;
  void *v6;
  void *v8;
  void *v9;

  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 671, CFSTR("%@ can be called only from assetsd."), v9);

  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryURL");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLLibraryServicesManager libraryServicesManagerForLibraryURL:](PLLibraryServicesManager, "libraryServicesManagerForLibraryURL:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setICloudPhotosEnabledInternal:", 0);
  return 1;
}

- (BOOL)_forceSoftResetSync
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v10;
  void *v11;

  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 682, CFSTR("%@ can be called only from assetsd."), v11);

  }
  +[PLPhotoLibraryBundleController sharedBundleController](PLPhotoLibraryBundleController, "sharedBundleController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "libraryURL");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "openBundleAtLibraryURL:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "indicatorFileCoordinator");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "forceSoftResetSync");

  return 1;
}

- (BOOL)_removeEvents:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  char v20;
  id v21;
  NSObject *v22;
  void *v24;
  void *v25;
  const char *aSelector;
  char *aSelectora;
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  id v33;
  uint8_t buf[4];
  char *v35;
  __int16 v36;
  id v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 694, CFSTR("%@ can be called only from assetsd."), v25);

  }
  aSelector = a2;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _removeEvents:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "predicateWithFormat:", CFSTR("kind == %@"), v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "setPredicate:", v11);
  v33 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v8, &v33);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v33;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v14 = v12;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v29, v38, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v30;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v30 != v17)
          objc_enumerationMutation(v14);
        objc_msgSend(*(id *)(*((_QWORD *)&v29 + 1) + 8 * i), "delete");
      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v29, v38, 16);
    }
    while (v16);
  }

  if (objc_msgSend(v7, "hasChanges"))
  {
    v19 = v6;
    v28 = 0;
    v20 = objc_msgSend(v7, "save:", &v28);
    v21 = v28;
    if ((v20 & 1) == 0)
    {
      PLMigrationGetLog();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(aSelector);
        aSelectora = (char *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v35 = aSelectora;
        v36 = 2112;
        v37 = v21;
        _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "%@ failed: %@", buf, 0x16u);

      }
    }

    v6 = v19;
  }
  else
  {
    v20 = 1;
  }
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v6);
  return v20;
}

- (BOOL)debug_resetThumbnailsAndInitiateRebuildRequestInStore:(id)a3
{
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;

  v4 = *MEMORY[0x1E0C97C38];
  v5 = a3;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator debug_resetThumbnailsAndInitiateRebuildRequestInStore:]", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator _migrationThumbnailManagerWithStore:](self, "_migrationThumbnailManagerWithStore:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  LOBYTE(v5) = objc_msgSend(v7, "resetThumbnailsForced:isMissingTables:inContext:", 1, 0, v6);
  return (char)v5;
}

- (int64_t)checkForceRebuildIndicatorFile
{
  void *v3;
  int v4;

  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "sqliteErrorIndicatorFileExists");

  return v4 && !self->_didCreateSqliteErrorFileForLightweightMigration;
}

- (int64_t)migrateOrCreateDatabaseIfNecessaryWithPersistentContainer:(id)a3 migrationPolicy:(unsigned int)a4 error:(id *)a5
{
  void *v6;
  id v8;
  void *v9;
  _BOOL4 v10;
  NSObject *v11;
  _BOOL4 v12;
  id v13;
  int v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  void *v28;
  PLGlobalValues *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  int v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  PLGlobalValues *v39;
  id *v40;
  id *v41;
  id v42;
  id v43;
  uint8_t buf[4];
  void *v45;
  __int16 v46;
  void *v47;
  const __CFString *v48;
  _QWORD v49[2];

  v6 = *(void **)&a4;
  v49[1] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = (void *)MEMORY[0x19AEC1554]();
  v10 = -[PLModelMigrator shouldCreateDatabase](self, "shouldCreateDatabase");
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    v40 = a5;
    v13 = v8;
    v14 = (int)v6;
    v6 = v9;
    if (v12)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Attempting create new database", buf, 2u);
    }

    v43 = 0;
    v15 = -[PLModelMigrator createNewDatabaseWithMigrationType:forceRebuildReason:coordinator:error:](self, "createNewDatabaseWithMigrationType:forceRebuildReason:coordinator:error:", 3, 0, 0, &v43);
    v16 = v43;
    -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
    v17 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v15 != 4);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = *MEMORY[0x1E0D73780];
    objc_msgSend(v17, "setPayloadValue:forKey:onEventWithName:", v18, *MEMORY[0x1E0D73798], *MEMORY[0x1E0D73780]);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", +[PLModelMigrator currentModelVersion](PLModelMigrator, "currentModelVersion"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "stringValue");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setPayloadValue:forKey:onEventWithName:", v21, *MEMORY[0x1E0D73790], v19);

    objc_msgSend(v17, "setPayloadValue:forKey:onEventWithName:", v16, *MEMORY[0x1E0D73788], v19);
    v22 = v16;
    v9 = v6;
    LODWORD(v6) = v14;
    v8 = v13;
    a5 = v40;
LABEL_5:

    goto LABEL_11;
  }
  if (v12)
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Attempting open existing database", buf, 2u);
  }

  v42 = 0;
  v15 = objc_msgSend(v8, "configureSharedPersistentStoreCoordinatorAndMigrateOrRebuildIfNecessaryWithModelMigrator:migrationPolicy:error:", self, v6, &v42);
  v17 = v42;
  if (v15 != 4)
  {
    -[PLModelMigrator options](self, "options");
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v23)
    {
      objc_msgSend(v8, "sharedPersistentStoreCoordinator");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLModelMigrator managedObjectContextForMigrationWithName:persistentStoreCoordinator:concurrencyType:](self, "managedObjectContextForMigrationWithName:persistentStoreCoordinator:concurrencyType:", "migrateOrCreateDatabaseIfNecessaryWithPersistentContainer", v28, 1);
      v16 = (id)objc_claimAutoreleasedReturnValue();

      v29 = -[PLGlobalValues initWithManagedObjectContext:]([PLGlobalValues alloc], "initWithManagedObjectContext:", v16);
      v30 = -[PLGlobalValues libraryCreateOptions](v29, "libraryCreateOptions");
      if (v30)
      {
        v31 = v30;
        v39 = v29;
        v41 = a5;
        v32 = v8;
        v33 = (int)v6;
        v6 = v9;
        -[PLModelMigrator options](self, "options");
        v34 = (void *)objc_claimAutoreleasedReturnValue();

        if (v34)
        {
          -[PLModelMigrator options](self, "options");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          v36 = (void *)objc_msgSend(v35, "mutableCopy");

          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v31);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "setObject:forKeyedSubscript:", v37, CFSTR("PLPhotoLibraryCreateOptions"));

          -[PLModelMigrator setOptions:](self, "setOptions:", v36);
        }
        else
        {
          v48 = CFSTR("PLPhotoLibraryCreateOptions");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v31);
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          v49[0] = v36;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v49, &v48, 1);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLModelMigrator setOptions:](self, "setOptions:", v38);

        }
        v9 = v6;
        LODWORD(v6) = v33;
        v8 = v32;
        v29 = v39;
        a5 = v41;
      }

      v22 = v17;
      goto LABEL_5;
    }
  }
  v22 = v17;
LABEL_11:

  -[NSProgress setCompletedUnitCount:](self->_progress, "setCompletedUnitCount:", -[NSProgress totalUnitCount](self->_progress, "totalUnitCount"));
  PLMigrationGetLog();
  v24 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    PLStringFromMigrationPolicyOptions((int)v6);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    PLStringFromMigrationType(v15, 0);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v45 = v25;
    v46 = 2114;
    v47 = v26;
    _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "migrateOrCreateDatabaseIfNecessary policy:%{public}@ result: %{public}@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v9);
  if (a5)
    *a5 = objc_retainAutorelease(v22);

  return v15;
}

- (BOOL)shouldCreateDatabase
{
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  char v12;
  NSObject *v13;
  const char *v14;
  uint8_t *v15;
  void *v17;
  __int16 v18;
  __int16 v19;

  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 816, CFSTR("Only Assetsd should be checking if _shouldCreateDatabase!"));

  }
  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "photosDatabasePath");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v4, "fileExistsAtPath:", v6);

  if (!v7)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v18 = 0;
      v14 = "Should create database: database is missing";
      v15 = (uint8_t *)&v18;
      goto LABEL_11;
    }
LABEL_12:

    return 1;
  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isDeviceRestoreSupported");

  if (v9)
  {
    -[PLModelMigrator postProcessingToken](self, "postProcessingToken");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v10, "needsToPrepareForBackgroundRestore") & 1) != 0)
    {
      -[PLModelMigrator postProcessingToken](self, "postProcessingToken");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "isBackgroundRestorePostProcessingInProgressTokenValid");

      if ((v12 & 1) == 0)
      {
        PLMigrationGetLog();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          v19 = 0;
          v14 = "Should create database: post processing token is invalid (too many failed attempts to restore with the e"
                "xisting database)";
          v15 = (uint8_t *)&v19;
LABEL_11:
          _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_INFO, v14, v15, 2u);
          goto LABEL_12;
        }
        goto LABEL_12;
      }
    }
    else
    {

    }
  }
  return 0;
}

- (BOOL)_createPhotoDataDirectoryIfNecessary:(BOOL *)a3 error:(id *)a4
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  NSObject *v23;
  char v24;
  BOOL v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  BOOL *v30;
  id *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint8_t buf[4];
  id v39;
  __int16 v40;
  id v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v7 = objc_alloc_init(MEMORY[0x1E0CB3620]);
  -[PLModelMigrator pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "photosDatabasePath");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "stringByDeletingLastPathComponent");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v7, "fileExistsAtPath:isDirectory:", v10, 0);
  if ((v11 & 1) == 0)
  {
    PLMigrationGetLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_DEFAULT, "Creating missing directory for database", buf, 2u);
    }

    v37 = 0;
    v24 = objc_msgSend(v7, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v10, 1, 0, &v37);
    v13 = v37;
    if ((v24 & 1) != 0)
      goto LABEL_8;
    PLMigrationGetLog();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v39 = v10;
      v40 = 2112;
      v41 = v13;
      _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "Unable to create database directory at %@: %@", buf, 0x16u);
    }

    if (a4)
      *a4 = objc_retainAutorelease(v13);
LABEL_20:

    v25 = 0;
    goto LABEL_26;
  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v12 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v12, "photoDirectoryWithType:", 6);
  v13 = (id)objc_claimAutoreleasedReturnValue();

  v36 = 0;
  LOBYTE(v12) = objc_msgSend(v7, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v13, 1, 0, &v36);
  v14 = v36;
  if ((v12 & 1) == 0)
  {
    PLMigrationGetLog();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v39 = v13;
      v40 = 2112;
      v41 = v14;
      _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "Unable to create private cache subdirectory at %@: %@", buf, 0x16u);
    }

    if (a4)
      *a4 = objc_retainAutorelease(v14);

    goto LABEL_20;
  }
  v32 = v7;
  v33 = v10;
  v34 = v9;
  v30 = a3;
  v31 = a4;
  v15 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  objc_msgSend(v15, "setDateFormat:", CFSTR("yyyyMMdd-HHmmssZZZZZ"));
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "stringFromDate:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(CFSTR("CreateDatabase_"), "stringByAppendingString:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "stringByAppendingPathComponent:", v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D50], "data");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = v14;
  v21 = objc_msgSend(v20, "writeToFile:options:error:", v19, 0, &v35);
  v22 = v35;

  if ((v21 & 1) != 0)
  {

    a3 = v30;
    v10 = v33;
    v9 = v34;
    v7 = v32;
LABEL_8:

    if (a3)
      *a3 = v11 ^ 1;
    v25 = 1;
    goto LABEL_26;
  }
  PLMigrationGetLog();
  v28 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543618;
    v39 = v18;
    v40 = 2112;
    v41 = v13;
    _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_ERROR, "Unable to write file %{public}@ to cacheDir %@", buf, 0x16u);
  }

  if (v31)
    *v31 = objc_retainAutorelease(v22);

  v25 = 0;
  v10 = v33;
  v9 = v34;
  v7 = v32;
LABEL_26:

  return v25;
}

- (int64_t)promptUserIfNeededForRebuildReason:(id)a3 migrationError:(id)a4
{
  id v6;
  __CFString *v7;
  NSObject *v8;
  uint64_t v9;
  __CFString *v10;
  int64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  __CFString *v16;
  void *v17;
  PLRebuildUserNotification *v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  NSObject *v24;
  uint8_t buf[4];
  __CFString *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = (__CFString *)a4;
  if (objc_msgSend((id)objc_opt_class(), "shouldPromptUserForLibrarySchemaMismatch")
    && objc_msgSend((id)objc_opt_class(), "shouldPromptUserForRebuildWithLibraryPathManager:", self->_pathManager))
  {
    if (v6)
    {
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v9 = objc_msgSend(v6, "integerValue");
        if ((unint64_t)(v9 - 1) > 0x14)
          v10 = CFSTR("PLRebuildReasonUnknown");
        else
          v10 = off_1E3671260[v9 - 1];
        v16 = v10;
        *(_DWORD *)buf = 138543362;
        v27 = v16;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Skipping rebuild prompt due to force rebuild: %{public}@", buf, 0xCu);

      }
LABEL_14:
      v11 = 0;
LABEL_36:

      goto LABEL_37;
    }
    if ((PLIsErrorEqualToCode() & 1) == 0 && (PLIsErrorEqualToCode() & 1) == 0)
    {
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v27 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Skipping rebuild prompt due to non-prompting migration error: %@", buf, 0xCu);
      }
      goto LABEL_14;
    }
    v12 = (void *)MEMORY[0x1E0CB3940];
    -[__CFString userInfo](v7, "userInfo");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "objectForKeyedSubscript:", *MEMORY[0x1E0CB2938]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)v14;
    if (v14)
    {
      objc_msgSend(v12, "stringWithFormat:", CFSTR("Photos cannot proceed with the library in its current state.\n\n%@\n\nSelect \"Rebuild\" to allow rebuild of the photo library database (possible data loss) or \"Not now\" to stop now and leave it as-is"), v14);
      v8 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      -[__CFString debugDescription](v7, "debugDescription");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "stringWithFormat:", CFSTR("Photos cannot proceed with the library in its current state.\n\n%@\n\nSelect \"Rebuild\" to allow rebuild of the photo library database (possible data loss) or \"Not now\" to stop now and leave it as-is"), v17);
      v8 = objc_claimAutoreleasedReturnValue();

    }
    v18 = -[PLRebuildUserNotification initWithMessage:]([PLRebuildUserNotification alloc], "initWithMessage:", v8);
    v19 = -[PLRebuildUserNotification showAlertAndWaitForResponse](v18, "showAlertAndWaitForResponse");
    if (v19 != 2)
    {
      v11 = v19;
      if (v19 == 1)
      {
        PLMigrationGetLog();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "prompted user for rebuild: user responded with Rebuild, allowing rebuild", buf, 2u);
        }

        v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.mobileslideshow"));
        objc_msgSend(v22, "setBool:forKey:", 0, CFSTR("com.apple.Photos.PreventRebuild"));
        PLMigrationGetLog();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_DEFAULT, "user prompt updated prevent rebuild: NO", buf, 2u);
        }
        v11 = 1;
        goto LABEL_34;
      }
      if (v19)
      {
LABEL_35:

        goto LABEL_36;
      }
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "User prompt timed out. Assuming user does not want rebuild, changing response to Not Now.", buf, 2u);
      }

    }
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "prompted user for rebuild: user responded with Not Now, preventing rebuild", buf, 2u);
    }

    v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.mobileslideshow"));
    objc_msgSend(v22, "setBool:forKey:", 1, CFSTR("com.apple.Photos.PreventRebuild"));
    PLMigrationGetLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v11 = 2;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_DEFAULT, "user prompt: updated prevent rebuild: YES", buf, 2u);
    }
    else
    {
      v11 = 2;
    }
LABEL_34:

    goto LABEL_35;
  }
  v11 = 0;
LABEL_37:

  return v11;
}

- (int64_t)createNewDatabaseWithMigrationType:(int64_t)a3 forceRebuildReason:(id)a4 coordinator:(id)a5 error:(id *)a6
{
  id v11;
  id v12;
  void *v13;
  void *v14;
  int v15;
  NSObject *v16;
  BOOL v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  BOOL v21;
  id v22;
  void *v23;
  int64_t v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  void *v28;
  char v29;
  NSObject *v30;
  void *v31;
  int v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  NSObject *v36;
  void *v37;
  _BOOL4 v38;
  void *v39;
  NSObject *v40;
  NSObject *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *v51;
  char v52;
  NSObject *v53;
  char v54;
  void *v55;
  NSObject *v56;
  void *v57;
  char v58;
  NSObject *v59;
  char v60;
  NSObject *v61;
  void *v62;
  void *v63;
  char v64;
  NSObject *v65;
  NSObject *v66;
  void *v67;
  NSObject *v68;
  NSObject *v69;
  void *v70;
  NSObject *v71;
  NSObject *v72;
  void *v73;
  NSObject *v74;
  NSObject *v75;
  void *v76;
  void *v77;
  NSObject *v78;
  NSObject *v79;
  void *v80;
  NSObject *v81;
  BOOL v82;
  NSObject *v83;
  NSObject *v84;
  NSObject *v85;
  NSObject *v86;
  char v87;
  NSObject *v88;
  NSObject *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  int v97;
  NSObject *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  NSObject *v112;
  int v114;
  id v115;
  void *v116;
  void *v117;
  NSObject *v118;
  NSObject *v119;
  void *v121;
  void *v122;
  void *v123;
  NSObject *v124;
  void *context;
  id v126;
  void *v127;
  SEL v128;
  id v129;
  id *v130;
  int v131;
  id v132;
  NSObject *v133;
  id v134;
  id v135;
  _QWORD v136[4];
  NSObject *v137;
  PLModelMigrator *v138;
  SEL v139;
  NSObject *v140;
  NSObject *v141;
  NSObject *v142;
  NSObject *v143;
  NSObject *v144;
  NSObject *v145;
  NSObject *v146;
  id v147;
  id v148;
  id v149;
  char v150;
  id v151;
  uint8_t buf[4];
  NSObject *v153;
  __int16 v154;
  void *v155;
  uint64_t v156;

  v156 = *MEMORY[0x1E0C80C00];
  v11 = a4;
  v12 = a5;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v122 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v121, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 955, CFSTR("%@ can only be called from assetsd"), v122);

  }
  if ((a3 | 2) != 3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 956, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("requestedType == PLMigrationTypeCreated || requestedType == PLMigrationTypeRebuild"));

  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "isSystemPhotoLibraryPathManager");
  if (a3 == 4)
  {
    v16 = 0;
    goto LABEL_20;
  }
  v128 = a2;
  v131 = v15;
  v130 = a6;
  v16 = 0;
  if (+[PLRebuildJournalManager isEnabledWithPathManager:error:](PLRebuildJournalManager, "isEnabledWithPathManager:error:", v14, 0))
  {
    v151 = 0;
    v17 = +[PLRebuildJournalManager existingJournalsCompatibleForRebuild:error:](PLRebuildJournalManager, "existingJournalsCompatibleForRebuild:error:", v14, &v151);
    v16 = v151;
    if (!v17)
    {
      PLMigrationGetLog();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v153 = v16;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_ERROR, "Existing journals are incompatible for rebuild \"%@\", buf, 0xCu);
      }

      v15 = v131;
LABEL_20:
      v150 = 0;
      v24 = 4;
      v26 = v16;
      if (v16)
        goto LABEL_21;
LABEL_137:
      if (a3 == 3 && v24 == 3)
        v114 = v15;
      else
        v114 = 0;
      if (v114 == 1)
      {
        v115 = v12;
        v116 = (void *)MEMORY[0x1E0D73280];
        objc_msgSend(v14, "libraryURL");
        v117 = (void *)objc_claimAutoreleasedReturnValue();
        v132 = 0;
        LOBYTE(v116) = objc_msgSend(v116, "setSystemLibraryURL:options:error:", v117, 0, &v132);
        v118 = v132;

        if ((v116 & 1) == 0)
        {
          PLMigrationGetLog();
          v119 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            v153 = v118;
            _os_log_impl(&dword_199541000, v119, OS_LOG_TYPE_ERROR, "Error setting SPL URL after creation: %@", buf, 0xCu);
          }

        }
        v16 = 0;
        v24 = 3;
        v12 = v115;
      }
      else
      {
        v16 = 0;
      }
      goto LABEL_150;
    }
  }
  v129 = v12;
  v150 = 0;
  PLMigrationGetLog();
  v18 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    PLStringFromMigrationType(a3, 1);
    v19 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "libraryURL");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v153 = v19;
    v154 = 2112;
    v155 = v20;
    _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "Started %{public}@ of %@", buf, 0x16u);

  }
  v149 = 0;
  v21 = -[PLModelMigrator _createPhotoDataDirectoryIfNecessary:error:](self, "_createPhotoDataDirectoryIfNecessary:error:", &v150, &v149);
  v22 = v149;
  v23 = v22;
  if (v21)
  {

    context = (void *)MEMORY[0x19AEC1554]();
    v126 = v11;
    if (v150)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v127 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = a3;
    }
    else
    {
      objc_msgSend(v14, "photosDatabasePath");
      v27 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = objc_msgSend(v28, "fileExistsAtPath:", v27);

      if ((v29 & 1) != 0)
      {
        objc_msgSend(v14, "libraryURL");
        v30 = objc_claimAutoreleasedReturnValue();
        if (v30)
        {
          objc_msgSend(v14, "capabilities");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v32 = objc_msgSend(v31, "isCentralizedCacheDeleteCapable");

          if (v32)
          {
            PLMigrationGetLog();
            v33 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v153 = v30;
              _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_DEFAULT, "Clearing purgeable flags before rebuild for photo library at %@", buf, 0xCu);
            }

            if (!+[PLCacheDeleteSupport clearPurgeableFlagsForAllResourcesInPhotoLibraryURL:](PLCacheDeleteSupport, "clearPurgeableFlagsForAllResourcesInPhotoLibraryURL:", v30))
            {
              PLMigrationGetLog();
              v34 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412290;
                v153 = v30;
                _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_ERROR, "Failed to clear purgeable flags for photo library %@", buf, 0xCu);
              }

            }
          }
        }
        PLMigrationGetLog();
        v35 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_DEFAULT, "Trying to persist path->uuid mapping", buf, 2u);
        }

        -[PLModelMigrator generatePathToAssetUUIDRecoveryMapping](self, "generatePathToAssetUUIDRecoveryMapping");
        v127 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLManagedObjectContext removePhotosDatabaseWithPathManager:](PLManagedObjectContext, "removePhotosDatabaseWithPathManager:", v14);
        v24 = 1;
      }
      else
      {
        PLMigrationGetLog();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v27;
          _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_ERROR, "No store file to move aside at \"%@\", buf, 0xCu);
        }
        v127 = 0;
        v24 = a3;
      }

    }
    PLMigrationGetLog();
    v36 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_DEFAULT, "Removing derivatives", buf, 2u);
    }

    if (+[PLRebuildJournalManager isEnabledWithPathManager:error:](PLRebuildJournalManager, "isEnabledWithPathManager:error:", v14, 0))
    {
      -[PLModelMigrator pathManager](self, "pathManager");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v38 = +[PLRebuildJournalManager assetJournalExists:error:](PLRebuildJournalManager, "assetJournalExists:error:", v37, 0);

      if (v38)
      {
        objc_msgSend(v14, "photoDirectoryCreationMaskResetWithType:", 11);
        v148 = 0;
        objc_msgSend(v14, "photoDirectoryWithType:createIfNeeded:error:", 11, 1, &v148);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v40 = v148;

        v11 = v126;
        if (!v39)
        {
          PLMigrationGetLog();
          v41 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            v153 = v40;
            _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, "Error obtaining path for thumbs directory: %@", buf, 0xCu);
          }

        }
        v124 = v40;
        -[PLModelMigrator pathManager](self, "pathManager");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLThumbnailManagerCore removeThumbnailTablesUnsupportedOnly:withPathManager:](PLThumbnailManager, "removeThumbnailTablesUnsupportedOnly:withPathManager:", 0, v42);

        -[PLModelMigrator pathManager](self, "pathManager");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLThumbnailManagerCore thumbnailConfigurationDictWithPathManager:](PLThumbnailManager, "thumbnailConfigurationDictWithPathManager:", v43);
        v44 = objc_claimAutoreleasedReturnValue();

        v45 = (void *)v44;
        -[PLModelMigrator pathManager](self, "pathManager");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        v47 = 1;
        +[PLThumbnailManagerCore stampThumbnailConfiguration:toFile:withPathManager:](PLThumbnailManager, "stampThumbnailConfiguration:toFile:withPathManager:", v45, 1, v46);
        goto LABEL_88;
      }
    }
    -[PLModelMigrator pathManager](self, "pathManager");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLThumbnailManagerCore removeThumbnailTablesUnsupportedOnly:withPathManager:](PLThumbnailManager, "removeThumbnailTablesUnsupportedOnly:withPathManager:", 0, v48);

    v147 = 0;
    objc_msgSend(v14, "photoDirectoryWithType:createIfNeeded:error:", 12, 0, &v147);
    v49 = objc_claimAutoreleasedReturnValue();
    v50 = v147;
    if (v49)
    {
      objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
      v51 = objc_claimAutoreleasedReturnValue();
      v146 = v50;
      v52 = -[NSObject removeItemAtPath:error:](v51, "removeItemAtPath:error:", v49, &v146);
      v53 = v146;

      if ((v52 & 1) == 0)
      {
        v54 = PLIsErrorFileNotFound();

        if ((v54 & 1) != 0)
          goto LABEL_58;
        PLMigrationGetLog();
        v51 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v53;
          _os_log_impl(&dword_199541000, v51, OS_LOG_TYPE_ERROR, "Error removing master thumbs directory: %@", buf, 0xCu);
        }
      }
    }
    else
    {
      PLMigrationGetLog();
      v51 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v153 = v50;
        _os_log_impl(&dword_199541000, v51, OS_LOG_TYPE_ERROR, "Error obtaining path for master thumbs directory: %@", buf, 0xCu);
      }
      v53 = v50;
    }

LABEL_58:
    v123 = (void *)v49;
    if (!objc_msgSend(v14, "isDCIM"))
    {
LABEL_71:
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v62 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "photoDirectoryWithType:", 10);
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      v143 = v53;
      v64 = objc_msgSend(v62, "removeItemAtPath:error:", v63, &v143);
      v65 = v143;

      if ((v64 & 1) == 0)
      {
        PLMigrationGetLog();
        v66 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v65;
          _os_log_impl(&dword_199541000, v66, OS_LOG_TYPE_ERROR, "Error removing derivatives directory: %@", buf, 0xCu);
        }

      }
      objc_msgSend(v14, "photoDirectoryCreationMaskResetWithType:", 10);
      objc_msgSend(v14, "photoDirectoryCreationMaskResetWithType:", 11);
      objc_msgSend(v14, "photoDirectoryCreationMaskResetWithType:", 12);
      v142 = v65;
      objc_msgSend(v14, "photoDirectoryWithType:createIfNeeded:error:", 10, 1, &v142);
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      v68 = v142;

      v11 = v126;
      if (!v67)
      {
        PLMigrationGetLog();
        v69 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v68;
          _os_log_impl(&dword_199541000, v69, OS_LOG_TYPE_ERROR, "Error obtaining path for derivatives directory: %@", buf, 0xCu);
        }

      }
      v141 = v68;
      objc_msgSend(v14, "photoDirectoryWithType:createIfNeeded:error:", 11, 1, &v141);
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      v71 = v141;

      if (!v70)
      {
        PLMigrationGetLog();
        v72 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v71;
          _os_log_impl(&dword_199541000, v72, OS_LOG_TYPE_ERROR, "Error obtaining path for thumbs directory: %@", buf, 0xCu);
        }

      }
      v140 = v71;
      objc_msgSend(v14, "photoDirectoryWithType:createIfNeeded:error:", 12, 1, &v140);
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      v74 = v140;

      if (!v73)
      {
        PLMigrationGetLog();
        v75 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v74;
          _os_log_impl(&dword_199541000, v75, OS_LOG_TYPE_ERROR, "Error obtaining path for master thumbs directory: %@", buf, 0xCu);
        }

      }
      v124 = v74;
      -[PLModelMigrator pathManager](self, "pathManager");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLThumbnailManagerCore thumbnailConfigurationDictWithPathManager:](PLThumbnailManager, "thumbnailConfigurationDictWithPathManager:", v76);
      v46 = (void *)objc_claimAutoreleasedReturnValue();

      -[PLModelMigrator pathManager](self, "pathManager");
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLThumbnailManagerCore stampThumbnailConfiguration:toFile:withPathManager:](PLThumbnailManager, "stampThumbnailConfiguration:toFile:withPathManager:", v46, 1, v77);

      v47 = 0;
      v45 = v123;
LABEL_88:

      objc_msgSend(v14, "removePartialVideoDirectory");
      objc_msgSend(v14, "removeComputeDirectory");
      PLMigrationGetLog();
      v78 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v78, OS_LOG_TYPE_DEFAULT, "Creating database", buf, 2u);
      }

      -[PLModelMigrator _repairMetadataAndSingletonsForMigrationType:forceRebuildReason:journalRebuildRequired:](self, "_repairMetadataAndSingletonsForMigrationType:forceRebuildReason:journalRebuildRequired:", a3, v11, v47);
      -[PLModelMigrator archiveAssetUUIDForPathPlist:](self, "archiveAssetUUIDForPathPlist:", v127);
      if (v131)
      {
        PLMigrationGetLog();
        v79 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v79, OS_LOG_TYPE_DEFAULT, "Telling mstreamd to forget everything", buf, 2u);
        }

        +[PLPhotoSharingHelper forgetSharingPersonID:](PLPhotoSharingHelper, "forgetSharingPersonID:", 0);
        +[PLNotificationManager sharedManager](PLNotificationManager, "sharedManager");
        v80 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v80, "discardAllNotifications");

        if ((objc_msgSend(v14, "isUBF") & 1) == 0)
        {
          PLMigrationGetLog();
          v81 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_199541000, v81, OS_LOG_TYPE_DEFAULT, "Removing photo cloud sharing data directory", buf, 2u);
          }

          v135 = 0;
          v82 = +[PLPhotoSharingHelper removeCloudSharingDirectories:](PLPhotoSharingHelper, "removeCloudSharingDirectories:", &v135);
          v83 = v135;
          if (!v82)
          {
            PLMigrationGetLog();
            v84 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v153 = v83;
              _os_log_impl(&dword_199541000, v84, OS_LOG_TYPE_DEFAULT, "Failed to remove photo cloud sharing data directory: %@", buf, 0xCu);
            }

          }
          goto LABEL_103;
        }
      }
      else if (!objc_msgSend(v14, "isUBF"))
      {
LABEL_103:
        PLMigrationGetLog();
        v86 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v86, OS_LOG_TYPE_DEFAULT, "Removing syndication data directory", buf, 2u);
        }

        v134 = 0;
        v87 = PLRemoveSyndicationDirectories(v14, &v134);
        v85 = v134;
        if ((v87 & 1) == 0)
        {
          PLMigrationGetLog();
          v88 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v88, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v153 = v85;
            _os_log_impl(&dword_199541000, v88, OS_LOG_TYPE_DEFAULT, "Failed to remove syndication data directory: %@", buf, 0xCu);
          }

        }
LABEL_109:

        if (PLPlatformSearchSupported())
        {
          PLMigrationGetLog();
          v89 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v89, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_199541000, v89, OS_LOG_TYPE_INFO, "Dropping any prior search index", buf, 2u);
          }

          -[PLModelMigrator pathManager](self, "pathManager");
          v90 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v90, "libraryURL");
          v91 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLLibraryServicesManager libraryServicesManagerForLibraryURL:](PLLibraryServicesManager, "libraryServicesManagerForLibraryURL:", v91);
          v92 = (void *)objc_claimAutoreleasedReturnValue();

          if (_os_feature_enabled_impl())
          {
            objc_msgSend(v92, "searchIndexingEngine");
            v93 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("new database (force rebuild reason: %@)"), v11);
            v94 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v93, "dropSearchIndexWithSourceName:completion:", v94, 0);

          }
          else
          {
            objc_msgSend(v92, "searchIndexManager");
            v93 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v93, "resetSearchIndexWithReason:dropCompletion:", 6, 0);
          }

        }
        -[PLModelMigrator applyDataProtectionToAllPhotosFilesOnce](self, "applyDataProtectionToAllPhotosFilesOnce");
        if ((objc_msgSend(v14, "isDCIM") & v131) == 1
          && -[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled"))
        {
          -[PLModelMigrator deviceRestoreMigrationSupport](self, "deviceRestoreMigrationSupport");
          v95 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v95, "isRestoreFromBackup") & 1) != 0)
          {
            -[PLModelMigrator postProcessingToken](self, "postProcessingToken");
            v96 = (void *)objc_claimAutoreleasedReturnValue();
            v97 = objc_msgSend(v96, "isModelMigrationRestorePostProcessingComplete");

            if (!v97)
              goto LABEL_125;
          }
          else
          {

          }
          PLMigrationGetLog();
          v98 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_199541000, v98, OS_LOG_TYPE_DEFAULT, "Generating album metadata from iTunes lastsynced plist", buf, 2u);
          }

          -[PLModelMigrator _generateAlbumMetadataFromLastiTunesSyncedPlist](self, "_generateAlbumMetadataFromLastiTunesSyncedPlist");
        }
LABEL_125:
        v99 = objc_msgSend(v11, "integerValue");
        if (v99 >= 1)
        {
          v100 = v99;
          -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
          v101 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v100);
          v102 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v102, "stringValue");
          v103 = (void *)objc_claimAutoreleasedReturnValue();
          v104 = *MEMORY[0x1E0D73800];
          objc_msgSend(v101, "setPayloadValue:forKey:onEventWithName:", v103, *MEMORY[0x1E0D73830], *MEMORY[0x1E0D73800]);

          -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
          v105 = (void *)objc_claimAutoreleasedReturnValue();
          PLRebuildReasonToShortString(v100);
          v106 = (void *)objc_claimAutoreleasedReturnValue();
          v107 = v104;
          v11 = v126;
          objc_msgSend(v105, "setPayloadValue:forKey:onEventWithName:", v106, *MEMORY[0x1E0D73828], v107);

        }
        -[PLModelMigrator pathManager](self, "pathManager");
        v108 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLModelMigrationAction_CPLPrompting shouldRepromptUserIfNeededWithPathManager:](PLModelMigrationAction_CPLPrompting, "shouldRepromptUserIfNeededWithPathManager:", v108);

        objc_autoreleasePoolPop(context);
        if (v24 == 1)
        {
          if (objc_msgSend(v14, "isDCIM"))
          {
            v109 = (void *)MEMORY[0x1E0C99E98];
            objc_msgSend(v14, "photoDirectoryWithType:", 2);
            v110 = (void *)objc_claimAutoreleasedReturnValue();
            v24 = 1;
            objc_msgSend(v109, "fileURLWithPath:isDirectory:", v110, 1);
            v111 = (void *)objc_claimAutoreleasedReturnValue();

            v133 = v16;
            LOBYTE(v109) = objc_msgSend(MEMORY[0x1E0D73288], "setTimeMachineExclusionAttribute:url:error:", 0, v111, &v133);
            v26 = v133;

            if ((v109 & 1) == 0)
            {
              PLMigrationGetLog();
              v112 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v112, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412290;
                v153 = v26;
                _os_log_impl(&dword_199541000, v112, OS_LOG_TYPE_ERROR, "Failed to remove the exclusion attribute on PhotoData dir during rebuild: %@", buf, 0xCu);
              }

              v24 = 4;
            }
            a6 = v130;

            v12 = v129;
LABEL_136:
            v15 = v131;
            if (v26)
            {
LABEL_21:
              if (a6)
              {
                v16 = objc_retainAutorelease(v26);
                *a6 = v16;
              }
              else
              {
                v16 = v26;
              }
              goto LABEL_150;
            }
            goto LABEL_137;
          }
          v24 = 1;
        }
        v26 = v16;
        v12 = v129;
        a6 = v130;
        goto LABEL_136;
      }
      v136[0] = MEMORY[0x1E0C809B0];
      v136[1] = 3221225472;
      v136[2] = __91__PLModelMigrator_createNewDatabaseWithMigrationType_forceRebuildReason_coordinator_error___block_invoke;
      v136[3] = &unk_1E3664C08;
      v138 = self;
      v139 = v128;
      v137 = v14;
      -[NSObject enumerateBundleScopesWithBlock:](v137, "enumerateBundleScopesWithBlock:", v136);
      v85 = v137;
      goto LABEL_109;
    }
    v145 = v53;
    objc_msgSend(v14, "photoDirectoryWithType:createIfNeeded:error:", 30, 0, &v145);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v56 = v145;

    if (!v55)
    {
      PLMigrationGetLog();
      v59 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v153 = v56;
        _os_log_impl(&dword_199541000, v59, OS_LOG_TYPE_ERROR, "Error obtaining path for local video key frames directory: %@", buf, 0xCu);
      }

      v53 = v56;
      goto LABEL_70;
    }
    objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    v144 = v56;
    v58 = objc_msgSend(v57, "removeItemAtPath:error:", v55, &v144);
    v53 = v144;

    if ((v58 & 1) != 0)
    {

    }
    else
    {
      v60 = PLIsErrorFileNotFound();

      if ((v60 & 1) == 0)
      {
        PLMigrationGetLog();
        v61 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v153 = v53;
          _os_log_impl(&dword_199541000, v61, OS_LOG_TYPE_ERROR, "Error removing local video key frames directory: %@", buf, 0xCu);
        }

        goto LABEL_70;
      }
    }
    objc_msgSend(v14, "photoDirectoryCreationMaskResetWithType:", 30);
LABEL_70:

    goto LABEL_71;
  }
  if (a6)
    *a6 = objc_retainAutorelease(v22);

  v24 = 4;
  v12 = v129;
LABEL_150:

  return v24;
}

- (signed)_migrationHistoryOriginFromLatestDataMigration
{
  void *v3;
  void *v4;
  int v5;
  signed __int16 v6;

  -[PLModelMigrator deviceRestoreMigrationSupport](self, "deviceRestoreMigrationSupport");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v4, "isDeviceRestoreSupported"))
  {

LABEL_14:
    if (objc_msgSend(v3, "isEraseWithoutRestore"))
      v6 = 9;
    else
      v6 = 8;
    goto LABEL_17;
  }
  v5 = objc_msgSend(v3, "isRestoreFromBackup");

  if (!v5)
    goto LABEL_14;
  if (objc_msgSend(v3, "isRestoreFromBackupSourceCloud"))
    v6 = 2;
  else
    v6 = 0;
  if (objc_msgSend(v3, "isRestoreFromBackupSourceMegaBackup"))
    v6 = 7;
  if (objc_msgSend(v3, "isRestoreFromBackupSourceiTunes"))
    v6 = 1;
  if (objc_msgSend(v3, "isRestoreFromBackupSourceDeviceToDevice"))
    v6 = 3;
LABEL_17:

  return v6;
}

- (void)_recordCurrentVersionMetadataIfNeededForDataMigrationInPersistentStore:(id)a3
{
  BOOL v4;
  id v5;

  v5 = a3;
  os_unfair_lock_lock(&self->_recordMigrationMetadataLock);
  v4 = -[PLModelMigrator didRecordCurrentMigrationMetadata](self, "didRecordCurrentMigrationMetadata");
  os_unfair_lock_unlock(&self->_recordMigrationMetadataLock);
  if (!v4)
    -[PLModelMigrator _recordCurrentVersionMetadataInPersistentStore:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:](self, "_recordCurrentVersionMetadataInPersistentStore:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:", v5, 0, 0, 0, 0, 0);

}

- (BOOL)_recordCurrentVersionMetadataInPersistentStore:(id)a3 migrationType:(int64_t)a4 forceRebuildReason:(id)a5 sourceModelVersion:(id)a6 updateLegacyMigrationState:(BOOL)a7 journalRebuildRequred:(BOOL)a8
{
  os_unfair_lock_s *p_recordMigrationMetadataLock;
  id v12;
  signed __int16 v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  NSObject *v23;
  const char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint32_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  char v35;
  void *v36;
  void *v37;
  _BOOL8 v38;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  void *v47;
  _BOOL4 v48;
  os_unfair_lock_s *lock;
  id v50;
  uint8_t buf[4];
  id v52;
  const __CFString *v53;
  _QWORD v54[3];

  v48 = a7;
  v54[1] = *MEMORY[0x1E0C80C00];
  p_recordMigrationMetadataLock = &self->_recordMigrationMetadataLock;
  v44 = a6;
  v43 = a5;
  v12 = a3;
  lock = p_recordMigrationMetadataLock;
  os_unfair_lock_lock(p_recordMigrationMetadataLock);
  v13 = -[PLModelMigrator _migrationHistoryOriginFromLatestDataMigration](self, "_migrationHistoryOriginFromLatestDataMigration");
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v12, "-[PLModelMigrator _recordCurrentVersionMetadataInPersistentStore:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:]", 1);
  v47 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator options](self, "options");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("PLPhotoLibraryCreateOptions"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v42 = v15;
  if (v15)
  {
    v16 = (void *)MEMORY[0x1E0D73158];
    -[PLModelMigrator pathManager](self, "pathManager");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "libraryURL");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "appPrivateDataForLibraryURL:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    v53 = CFSTR("PLPhotoLibraryCreateOptions");
    v54[0] = v15;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v54, &v53, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = 0;
    LODWORD(v18) = objc_msgSend(v19, "setValue:forKey:error:", v20, CFSTR("PLModelMigrator.CreateOptions"), &v50);
    v21 = v50;

    PLMigrationGetLog();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = v22;
    if ((_DWORD)v18)
    {
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v24 = "persisted library create options to appPrivateData";
        v25 = v23;
        v26 = OS_LOG_TYPE_INFO;
        v27 = 2;
LABEL_8:
        _os_log_impl(&dword_199541000, v25, v26, v24, buf, v27);
      }
    }
    else if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v52 = v21;
      v24 = "failed to persist library create options to appPrivateData. Error: %@";
      v25 = v23;
      v26 = OS_LOG_TYPE_ERROR;
      v27 = 12;
      goto LABEL_8;
    }

    v28 = objc_msgSend(v15, "unsignedIntegerValue");
    goto LABEL_10;
  }
  v28 = 0;
LABEL_10:
  v29 = (void *)MGCopyAnswer();
  v30 = (void *)MGCopyAnswer();
  -[PLModelMigrator pathManager](self, "pathManager");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  CPLStatusFromPathManager(v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator pathManager](self, "pathManager");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "libraryURL");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = PLIsCloudPhotoLibraryEnabledForPhotoLibraryURL(v34);

  -[PLModelMigrator pathManager](self, "pathManager");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "initialSyncDate");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v41) = v35;
  WORD1(v40) = v13;
  LOBYTE(v40) = a8;
  v38 = +[PLMigrationHistory recordCurrentMigrationStateInManagedObjectContext:withPathManager:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:origin:libraryCreateOptions:hardwareModel:deviceUniqueID:cplEnabled:initialSyncDate:](PLMigrationHistory, "recordCurrentMigrationStateInManagedObjectContext:withPathManager:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:origin:libraryCreateOptions:hardwareModel:deviceUniqueID:cplEnabled:initialSyncDate:", v47, v36, a4, v43, v44, v48, v40, v28, v29, v30, v41, v37);

  -[PLModelMigrator setDidRecordCurrentMigrationMetadata:](self, "setDidRecordCurrentMigrationMetadata:", v38);
  os_unfair_lock_unlock(lock);

  return v38;
}

- (void)loadFileSystemAssetsNotifyEnter
{
  dispatch_group_enter((dispatch_group_t)self->_fileSystemLoadGroup);
}

- (void)loadFileSystemAssetsNotifyLeave
{
  dispatch_group_leave((dispatch_group_t)self->_fileSystemLoadGroup);
}

- (void)loadFileSystemDataIntoDatabaseIfNeededWithReason:(id)a3 completionHandler:(id)a4
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *fileSystemLoadQueue;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  _QWORD block[4];
  id v18;
  PLModelMigrator *v19;
  id v20;
  id v21;
  id v22;

  v7 = a3;
  v8 = a4;
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 1313, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("reason != nil"));

  }
  objc_msgSend(MEMORY[0x1E0CB38A8], "progressWithTotalUnitCount:", 100);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D73348], "transaction:", "-[PLModelMigrator loadFileSystemDataIntoDatabaseIfNeededWithReason:completionHandler:]");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  fileSystemLoadQueue = self->_fileSystemLoadQueue;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __86__PLModelMigrator_loadFileSystemDataIntoDatabaseIfNeededWithReason_completionHandler___block_invoke;
  block[3] = &unk_1E3676240;
  v18 = v7;
  v19 = self;
  v21 = v10;
  v22 = v8;
  v20 = v9;
  v12 = v10;
  v13 = v8;
  v14 = v9;
  v15 = v7;
  dispatch_async(fileSystemLoadQueue, block);

}

- (void)loadFacesFileSystemDataIntoDatabase
{
  void *v3;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLModelMigrator _loadFacesFileSystemDataIntoDatabase](self, "_loadFacesFileSystemDataIntoDatabase");
  objc_autoreleasePoolPop(v3);
}

- (void)migratePersonContactInfo
{
  void *v3;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLModelMigrator _migratePersonContactInfo](self, "_migratePersonContactInfo");
  objc_autoreleasePoolPop(v3);
}

- (void)importAfterCrash:(id)a3 dictionariesByPhotoStreamID:(id)a4 completionBlock:(id)a5
{
  id v8;
  id v9;
  void *v10;
  id v11;

  v11 = a3;
  v8 = a4;
  v9 = a5;
  v10 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator _importAfterCrash:dictionariesByPhotoStreamID:completionBlock:](self, "_importAfterCrash:dictionariesByPhotoStreamID:completionBlock:", v11, v8, v9);
  objc_autoreleasePoolPop(v10);

}

- (int64_t)legacyMigrationState
{
  os_unfair_lock_s *p_storeMetadataLock;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  int64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  id v19;
  id v20;

  p_storeMetadataLock = &self->_storeMetadataLock;
  os_unfair_lock_lock(&self->_storeMetadataLock);
  v4 = (void *)objc_opt_class();
  v5 = *MEMORY[0x1E0D742E0];
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  objc_msgSend(v4, "_readNumberWithKey:fromMetadataWithMOC:pathManager:error:", v5, 0, v6, &v20);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v20;
  v9 = objc_msgSend(v7, "integerValue");

  os_unfair_lock_unlock(p_storeMetadataLock);
  if (v9)
  {
    if (!v8)
      goto LABEL_12;
  }
  else
  {
    os_unfair_lock_lock(p_storeMetadataLock);
    v10 = (void *)objc_opt_class();
    -[PLModelMigrator pathManager](self, "pathManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = v8;
    objc_msgSend(v10, "_readNumberWithKey:fromMetadataWithMOC:pathManager:error:", CFSTR("PLModelVersion"), 0, v11, &v19);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v19;

    os_unfair_lock_unlock(p_storeMetadataLock);
    v9 = 4 * (v12 == 0);

    v8 = v13;
    if (!v13)
      goto LABEL_12;
  }
  objc_msgSend(v8, "userInfo");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "objectForKeyedSubscript:", *MEMORY[0x1E0C979C8]);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    v16 = objc_msgSend(v15, "intValue");
    if (v16 == 26 || v16 == 11)
      v9 = 3;
  }

LABEL_12:
  return v9;
}

- (BOOL)updateCompletedMigrationStateWithError:(id *)a3
{
  os_unfair_lock_s *p_storeMetadataLock;
  void *v6;
  uint64_t v7;
  void *v8;

  p_storeMetadataLock = &self->_storeMetadataLock;
  os_unfair_lock_lock(&self->_storeMetadataLock);
  v6 = (void *)objc_opt_class();
  v7 = *MEMORY[0x1E0D742E0];
  -[PLModelMigrator pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(a3) = objc_msgSend(v6, "_writeNumber:forKey:pathManager:error:", &unk_1E375E280, v7, v8, a3);

  os_unfair_lock_unlock(p_storeMetadataLock);
  return (char)a3;
}

- (BOOL)isPhotoLibraryDatabaseReadyForOpen:(id *)a3
{
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  BOOL v13;
  uint64_t v15;
  void *v16;

  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 1454, CFSTR("Only Assetsd should be checking if isPhotoLibraryDatabaseReadyForOpen!"));

  }
  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "photosDatabasePath");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "fileExistsAtPath:", v8);

  if (!v9)
    return 0;
  os_unfair_lock_lock(&self->_storeMetadataLock);
  v10 = (void *)objc_opt_class();
  -[PLModelMigrator pathManager](self, "pathManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_readNumberWithKey:fromMetadataWithMOC:pathManager:error:", CFSTR("PLModelVersion"), 0, v11, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  os_unfair_lock_unlock(&self->_storeMetadataLock);
  if (!-[PLModelMigrator checkForceRebuildIndicatorFile](self, "checkForceRebuildIndicatorFile"))
  {
    v15 = objc_msgSend(v12, "integerValue");
    v13 = v15 == (int)objc_msgSend((id)objc_opt_class(), "currentModelVersion");
    if (!a3)
      goto LABEL_7;
    goto LABEL_6;
  }
  v13 = 0;
  if (a3)
LABEL_6:
    *a3 = objc_retainAutorelease(v12);
LABEL_7:

  return v13;
}

- (id)archivedAssetUUIDForURL:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  PLModelMigrator *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  NSObject *v19;
  id v20;
  void *v21;
  void *v22;
  char v23;
  uint64_t v24;
  void *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v36;
  id v37;
  id v38;
  uint8_t buf[4];
  id v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "path");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "photoDirectoryWithType:", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "hasPrefix:", CFSTR("/private")))
  {
    objc_msgSend(v5, "substringFromIndex:", objc_msgSend(CFSTR("/private"), "length"));
    v8 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v8;
  }
  if (objc_msgSend(v5, "hasPrefix:", v7))
  {
    objc_msgSend(v5, "substringFromIndex:", objc_msgSend(v7, "length") + (objc_msgSend(v7, "hasSuffix:", CFSTR("/")) ^ 1));
    v9 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v9;
  }
  v10 = self;
  objc_sync_enter(v10);
  v11 = (void *)archivedAssetUUIDForPathDictionary;
  if (!archivedAssetUUIDForPathDictionary)
  {
    objc_msgSend(v6, "assetUUIDRecoveryMappingPath");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D80]), "initWithContentsOfFile:", v34);
    v13 = (void *)archivedAssetUUIDForPathDictionary;
    archivedAssetUUIDForPathDictionary = v12;

    v37 = 0;
    v38 = 0;
    objc_msgSend(v6, "photosDatabasePath");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedObjectContext getPersistentStoreURL:options:forDatabasePath:](PLManagedObjectContext, "getPersistentStoreURL:options:forDatabasePath:", &v38, &v37, v14);
    v32 = v38;
    v33 = v37;

    v15 = *MEMORY[0x1E0C979E8];
    v36 = 0;
    objc_msgSend(MEMORY[0x1E0C97C00], "metadataForPersistentStoreOfType:URL:options:error:", v15, v32, v33, &v36);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v36;
    v18 = 0;
    v31 = v17;
    if (v16 && !v17)
    {
      objc_msgSend(v16, "valueForKey:", *MEMORY[0x1E0C97A08], 0);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
    }
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(a2);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend((id)archivedAssetUUIDForPathDictionary, "objectForKey:", CFSTR("storeUUID"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v40 = v20;
      v41 = 2112;
      v42 = v18;
      v43 = 2112;
      v44 = v21;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "%@ -- store %@ vs. plist %@", buf, 0x20u);

    }
    objc_msgSend((id)archivedAssetUUIDForPathDictionary, "objectForKey:", CFSTR("storeUUID"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v18, "isEqualToString:", v22);

    if ((v23 & 1) == 0)
    {
      v24 = objc_opt_new();
      v25 = (void *)archivedAssetUUIDForPathDictionary;
      archivedAssetUUIDForPathDictionary = v24;

    }
    v11 = (void *)archivedAssetUUIDForPathDictionary;
  }
  objc_msgSend(v11, "objectForKey:", v5, v31);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_sync_exit(v10);

  PLMigrationGetLog();
  v27 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
  {
    NSStringFromSelector(a2);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "path");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v40 = v28;
    v41 = 2112;
    v42 = v29;
    v43 = 2112;
    v44 = v5;
    v45 = 2112;
    v46 = v26;
    _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_DEBUG, "%@ %@[%@] -> %@", buf, 0x2Au);

  }
  return v26;
}

- (void)archiveAssetUUIDForPathPlist:(id)a3
{
  id v5;
  NSObject *v6;
  PLModelMigrator *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  int v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  id v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Archiving asset path to uuid mappings", buf, 2u);
  }

  v7 = self;
  objc_sync_enter(v7);
  v8 = (void *)archivedAssetUUIDForPathDictionary;
  archivedAssetUUIDForPathDictionary = 0;

  -[PLModelMigrator pathManager](v7, "pathManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = 0;
  v32 = 0;
  objc_msgSend(v9, "photosDatabasePath");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedObjectContext getPersistentStoreURL:options:forDatabasePath:](PLManagedObjectContext, "getPersistentStoreURL:options:forDatabasePath:", &v32, &v31, v10);
  v27 = v9;
  v28 = v32;
  v11 = v31;

  v12 = *MEMORY[0x1E0C979E8];
  v30 = 0;
  objc_msgSend(MEMORY[0x1E0C97C00], "metadataForPersistentStoreOfType:URL:options:error:", v12, v28, v11, &v30);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v30;
  v15 = v14;
  v16 = 0;
  if (v13 && !v14)
  {
    objc_msgSend(v13, "valueForKey:", *MEMORY[0x1E0C97A08]);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v17 = objc_msgSend(v5, "count");
  if (v16)
    objc_msgSend(v5, "setObject:forKey:", v16, CFSTR("storeUUID"));
  if (v5)
  {
    v25 = v17;
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v5, 100, 0, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLModelMigrator pathManager](v7, "pathManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "assetUUIDRecoveryMappingPath");
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    if (v18)
    {
      v29 = 0;
      v20 = objc_msgSend(v18, "writeToFile:options:error:", v26, 1073741825, &v29);
      v21 = v29;
      if (v20)
      {
        PLMigrationGetLog();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          NSStringFromSelector(a2);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v34 = v23;
          v35 = 2048;
          v36 = v25;
          v37 = 2114;
          v38 = v16;
          _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "%{public}@ -- saved %ld asset mappings for store %{public}@", buf, 0x20u);

        }
LABEL_16:

        goto LABEL_17;
      }
    }
    else
    {
      v21 = 0;
    }
    PLMigrationGetLog();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      v34 = v24;
      v35 = 2048;
      v36 = v25;
      v37 = 2114;
      v38 = v16;
      v39 = 2114;
      v40 = v21;
      _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "%{public}@ -- failed to save %ld asset mappings for store %{public}@: %{public}@", buf, 0x2Au);

    }
    goto LABEL_16;
  }
LABEL_17:

  objc_sync_exit(v7);
}

- (id)generatePathToAssetUUIDRecoveryMapping
{
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v9;
  void *v10;
  uint8_t buf[16];

  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 1559, CFSTR("%@ only valid in assetsd!"), v10);

  }
  PLMigrationGetLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEBUG, "Creating path to uuid mappings for UUID recovery", buf, 2u);
  }

  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "photosDatabasePath");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend((id)objc_opt_class(), "extractPathToAssetUUIDRecoveryMappingFromDatabasePath:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)_iTunesPhotosLastSyncMetadata
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isDCIM");

  if (v4)
  {
    v5 = (void *)MEMORY[0x1E0C99D80];
    -[PLModelMigrator pathManager](self, "pathManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "iTunesPhotosLastSyncMetadataFilePath");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "dictionaryWithContentsOfFile:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!objc_msgSend(v8, "count"))
    {
      v9 = (void *)MEMORY[0x1E0C99D80];
      -[PLModelMigrator pathManager](self, "pathManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "iTunesPhotosSyncMetadataFilePath");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "dictionaryWithContentsOfFile:", v11);
      v12 = objc_claimAutoreleasedReturnValue();

      v8 = (void *)v12;
    }
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

- (void)_generateAlbumMetadataFromLastiTunesSyncedPlist
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  char v23;
  id v24;
  NSObject *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  int v31;
  void *v32;
  uint64_t v33;
  PLPersistedAlbumMetadata *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  PLModelMigrator *v52;
  void *v53;
  void *v54;
  char v55;
  void *v56;
  void *v57;
  void *v58;
  char v59;
  id obj;
  uint64_t v61;
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  unsigned __int8 v67;
  uint8_t buf[4];
  void *v69;
  __int16 v70;
  id v71;
  _BYTE v72[128];
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isDCIM"))
  {
    v4 = (void *)MEMORY[0x19AEC1554]();
    v52 = self;
    -[PLModelMigrator _iTunesPhotosLastSyncMetadata](self, "_iTunesPhotosLastSyncMetadata");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKey:", CFSTR("updates"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v67 = 0;
    objc_msgSend(v3, "iTunesSyncedAssetsDirectory");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "count"))
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v8, "fileExistsAtPath:isDirectory:", v7, &v67))
        goto LABEL_43;
      v9 = v67;

      if (v9)
      {
        v47 = v7;
        v49 = v5;
        v50 = v4;
        objc_msgSend(v3, "iTunesSyncedFaceDataDirectory");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = (void *)MEMORY[0x1E0C99E98];
        v51 = v3;
        objc_msgSend(v3, "persistedAlbumDataDirectoryCreateIfNeeded:error:", 1, 0);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "fileURLWithPath:isDirectory:", v11, 1);
        v58 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v59 = objc_msgSend(v12, "fileExistsAtPath:", v8);

        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v13 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        v63 = 0u;
        v64 = 0u;
        v65 = 0u;
        v66 = 0u;
        v48 = v6;
        v14 = v6;
        v15 = (void *)v13;
        obj = v14;
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v63, v72, 16);
        v57 = (void *)v13;
        if (!v16)
          goto LABEL_36;
        v17 = v16;
        v55 = 0;
        v61 = *(_QWORD *)v64;
        v56 = v8;
        while (1)
        {
          v18 = 0;
          do
          {
            if (*(_QWORD *)v64 != v61)
              objc_enumerationMutation(obj);
            v19 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * v18);
            objc_msgSend(v19, "objectForKey:", CFSTR("itemType"));
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v20, "isEqual:", CFSTR("Asset")))
            {
              objc_msgSend(v19, "objectForKey:", CFSTR("faces"));
              v21 = objc_claimAutoreleasedReturnValue();
              v22 = v21;
              if ((v59 & 1) == 0 && -[NSObject count](v21, "count"))
              {
                if ((v55 & 1) == 0)
                {
                  v62 = 0;
                  v23 = objc_msgSend(MEMORY[0x1E0D73208], "createDirectoryAtPath:error:", v8, &v62);
                  v24 = v62;
                  if ((v23 & 1) == 0)
                  {
                    PLMigrationGetLog();
                    v25 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)buf = 138412546;
                      v69 = v8;
                      v70 = 2112;
                      v71 = v24;
                      _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_ERROR, "Unable to create directory: %@, reason: %@", buf, 0x16u);
                    }

                  }
                }
                objc_msgSend(v19, "objectForKey:", CFSTR("uuid"));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v8, "stringByAppendingPathComponent:", v26);
                v27 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v27, "stringByAppendingPathExtension:", CFSTR("plist"));
                v28 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v22, 100, 0, 0);
                v29 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v29, "writeToFile:options:error:", v28, 1073741825, 0);

                v55 = 1;
              }
              goto LABEL_29;
            }
            if ((objc_msgSend(v20, "isEqual:", CFSTR("Album")) & 1) == 0
              && !objc_msgSend(v20, "isEqual:", CFSTR("Event")))
            {
              PLMigrationGetLog();
              v22 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412290;
                v69 = v19;
                _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "*** Found unknown element: %@", buf, 0xCu);
              }
              goto LABEL_29;
            }
            if (objc_msgSend(v20, "isEqual:", CFSTR("Album")))
            {
              objc_msgSend(v19, "objectForKey:", CFSTR("subclass"));
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              v31 = objc_msgSend(v30, "unsignedIntValue");

              if (v31 == 3)
              {
                objc_msgSend(v19, "objectForKey:", CFSTR("uuid"));
                v32 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v54, "addObject:", v32);
                v33 = 15;
                goto LABEL_28;
              }
              if (v31 != 4)
              {
                if (v31 == 5)
                  goto LABEL_30;
                objc_msgSend(v19, "objectForKey:", CFSTR("uuid"));
                v32 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v53, "addObject:", v32);
                v33 = 1550;
                goto LABEL_28;
              }
            }
            objc_msgSend(v19, "objectForKey:", CFSTR("uuid"));
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "addObject:", v32);
            v33 = 1551;
LABEL_28:

            v34 = [PLPersistedAlbumMetadata alloc];
            objc_msgSend(v19, "objectForKey:", CFSTR("albumName"));
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "objectForKey:", CFSTR("uuid"));
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "objectForKey:", CFSTR("cloudGUID"));
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v33);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "objectForKey:", CFSTR("assetUUIDs"));
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            v22 = -[PLPersistedAlbumMetadata initWithTitle:uuid:cloudGUID:kind:assetUUIDs:persistedAlbumDataDirectory:](v34, "initWithTitle:uuid:cloudGUID:kind:assetUUIDs:persistedAlbumDataDirectory:", v35, v36, v37, v38, v39, v58);

            -[NSObject setAllowsOverwrite:](v22, "setAllowsOverwrite:", 0);
            -[NSObject persistAlbumData](v22, "persistAlbumData");
            v8 = v56;
            v15 = v57;
LABEL_29:

LABEL_30:
            ++v18;
          }
          while (v17 != v18);
          v40 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v72, 16);
          v17 = v40;
          if (!v40)
          {
LABEL_36:

            if (objc_msgSend(v53, "count"))
            {
              -[PLModelMigrator pathManager](v52, "pathManager");
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              +[PLManagedAlbumList persistAlbumListUUIDs:type:pathManager:allowsOverwrite:](PLManagedAlbumList, "persistAlbumListUUIDs:type:pathManager:allowsOverwrite:", v53, 0, v41, 0);

            }
            v42 = objc_msgSend(v15, "count");
            v5 = v49;
            v4 = v50;
            v43 = v15;
            v7 = v47;
            v6 = v48;
            if (v42)
            {
              -[PLModelMigrator pathManager](v52, "pathManager");
              v44 = (void *)objc_claimAutoreleasedReturnValue();
              +[PLManagedAlbumList persistAlbumListUUIDs:type:pathManager:allowsOverwrite:](PLManagedAlbumList, "persistAlbumListUUIDs:type:pathManager:allowsOverwrite:", v43, 1, v44, 0);

            }
            v45 = v54;
            if (objc_msgSend(v54, "count"))
            {
              -[PLModelMigrator pathManager](v52, "pathManager");
              v46 = (void *)objc_claimAutoreleasedReturnValue();
              +[PLManagedAlbumList persistAlbumListUUIDs:type:pathManager:allowsOverwrite:](PLManagedAlbumList, "persistAlbumListUUIDs:type:pathManager:allowsOverwrite:", v54, 2, v46, 0);

              v45 = v54;
            }

            v3 = v51;
LABEL_43:

            break;
          }
        }
      }
    }

    objc_autoreleasePoolPop(v4);
  }

}

- (id)_eventNameFromDate:(id)a3
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;

  v3 = (objc_class *)MEMORY[0x1E0CB3578];
  v4 = a3;
  v5 = objc_alloc_init(v3);
  objc_msgSend(v5, "setDateStyle:", 2);
  objc_msgSend(v5, "stringFromDate:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (BOOL)_isFilesystemImportConfigurationDisabled
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  _BOOL4 v12;
  BOOL v13;
  BOOL v14;
  const char *v15;
  int v17;
  void *v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc(MEMORY[0x1E0C99E98]);
  -[PLModelMigrator pathManager](self, "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "cplDataDirectoryCreateIfNeeded:", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v3, "initFileURLWithPath:isDirectory:", v5, 1);

  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D11358]), "initWithClientLibraryBaseURL:", v6);
  objc_msgSend(v7, "valueForKey:", CFSTR("feature.version.filesystemimport"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, "integerValue");
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    v13 = v10 <= 0;
    v14 = v10 > 0;
    if (v13)
    {
      if (v12)
      {
        v17 = 138543618;
        v18 = v9;
        v19 = 2048;
        v20 = 0;
        v15 = "ModelMigrator: Asset recovery filesystem import allowed via configuration version: %{public}@, build version: %ld";
        goto LABEL_8;
      }
    }
    else if (v12)
    {
      v17 = 138543618;
      v18 = v9;
      v19 = 2048;
      v20 = 0;
      v15 = "ModelMigrator: Asset recovery filesystem import prevented via configuration version: %{public}@, build version: %ld";
LABEL_8:
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v17, 0x16u);
    }

    goto LABEL_10;
  }
  v14 = 0;
LABEL_10:

  return v14;
}

- (BOOL)_isFileSystemImportRequiredForLibrary:(id)a3
{
  void *v4;
  uint64_t v5;
  BOOL v6;

  objc_msgSend(a3, "globalValues");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "importFilesystemAssetsState");
  v6 = v5 != 1;
  if (v5 == -1
    && objc_msgSend(v4, "isRebuildComplete")
    && -[PLModelMigrator _isFilesystemImportConfigurationDisabled](self, "_isFilesystemImportConfigurationDisabled"))
  {
    objc_msgSend(v4, "setImportFilesystemAssetsState:", 1);
    v6 = 0;
  }

  return v6;
}

- (void)_loadFileSystemDataIntoDatabaseIfNeededWithReason:(id)a3 progress:(id)a4 requestBackgroundMigrationRegistration:(BOOL *)a5
{
  __CFString *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  BOOL *v15;
  id v16;
  __CFString *v17;
  void *v18;
  void *v19;
  int v20;
  NSObject *v21;
  void *v22;
  _BOOL4 v23;
  NSObject *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  void *v31;
  int v32;
  const __CFString *v33;
  int v34;
  _QWORD v35[5];
  id v36;
  id v37;
  __CFString *v38;
  id v39;
  id v40;
  BOOL *v41;
  uint8_t buf[4];
  const __CFString *v43;
  __int16 v44;
  const __CFString *v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v8 = (__CFString *)a3;
  v9 = a4;
  v10 = -[PLModelMigrator newShortLivedLibraryForRebuildWithName:](self, "newShortLivedLibraryForRebuildWithName:", "-[PLModelMigrator _loadFileSystemDataIntoDatabaseIfNeededWithReason:progress:requestBackgroundMigrationRegistration:]");
  objc_msgSend(v10, "globalValues");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v12, "isDeviceRestoreSupported"))
    goto LABEL_7;
  -[PLModelMigrator deviceRestoreMigrationSupport](self, "deviceRestoreMigrationSupport");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v13, "isRestoreFromBackupSourceCloud") & 1) == 0)
  {

LABEL_7:
    goto LABEL_8;
  }
  -[PLModelMigrator postProcessingToken](self, "postProcessingToken");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v14, "isModelMigrationRestorePostProcessingComplete") & 1) == 0)
  {

LABEL_21:
    PLMigrationGetLog();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      -[PLModelMigrator postProcessingToken](self, "postProcessingToken");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = objc_msgSend(v31, "needsToPrepareForBackgroundRestore");
      v33 = CFSTR("NO");
      if (v32)
        v33 = CFSTR("YES");
      *(_DWORD *)buf = 138543618;
      v43 = v8;
      v44 = 2114;
      v45 = v33;
      _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_DEFAULT, "Ignoring request to load file system data during OTA restore [%{public}@] needs to prepare for background restore is %{public}@", buf, 0x16u);

    }
    objc_msgSend(v9, "setCompletedUnitCount:", objc_msgSend(v9, "totalUnitCount"));
    goto LABEL_26;
  }
  -[PLModelMigrator deviceRestoreMigrationSupport](self, "deviceRestoreMigrationSupport");
  v15 = a5;
  v16 = v9;
  v17 = v8;
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v18, "isOTARestoreInProgress");

  v8 = v17;
  v9 = v16;
  a5 = v15;

  if (v34)
    goto LABEL_21;
LABEL_8:
  v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.mobileslideshow"));
  v20 = objc_msgSend(v19, "BOOLForKey:", CFSTR("com.apple.Photos.SuppressFileSystemImport"));

  if (v20)
  {
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v43 = CFSTR("com.apple.Photos.SuppressFileSystemImport");
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "Ignoring request to load file system data - %@ user default is enabled", buf, 0xCu);
    }

    if ((objc_msgSend(v11, "didImportFileSystemAssets") & 1) == 0)
      objc_msgSend(v11, "setImportFilesystemAssetsState:", 1);
    -[PLModelMigrator pathManager](self, "pathManager");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = +[PLRebuildJournalManager isEnabledWithPathManager:error:](PLRebuildJournalManager, "isEnabledWithPathManager:error:", v22, 0);

    if (v23)
    {
      PLMigrationGetLog();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v43 = CFSTR("com.apple.Photos.SuppressFileSystemImport");
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "Unsupported configuration! Journals and %@ user default are both enabled", buf, 0xCu);
      }

    }
  }
  else
  {
    -[PLModelMigrator pathManager](self, "pathManager");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = 0;
    if (+[PLRebuildJournalManager isEnabledWithPathManager:error:](PLRebuildJournalManager, "isEnabledWithPathManager:error:", v25, 0))
    {
      objc_msgSend(v10, "libraryServicesManager");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "rebuildJournalManager");
      v26 = (void *)objc_claimAutoreleasedReturnValue();

    }
    v35[0] = MEMORY[0x1E0C809B0];
    v35[1] = 3221225472;
    v35[2] = __117__PLModelMigrator__loadFileSystemDataIntoDatabaseIfNeededWithReason_progress_requestBackgroundMigrationRegistration___block_invoke;
    v35[3] = &unk_1E3664C38;
    v35[4] = self;
    v36 = v10;
    v37 = v11;
    v38 = v8;
    v39 = v26;
    v28 = v9;
    v40 = v28;
    v41 = a5;
    v29 = v26;
    objc_msgSend(v36, "performTransactionAndWait:", v35);
    objc_msgSend(v28, "setCompletedUnitCount:", objc_msgSend(v28, "totalUnitCount"));

  }
LABEL_26:

}

- (BOOL)isLoadingFacesFromFileSystem
{
  char v2;

  pthread_mutex_lock(&sLoadingFacesFromFileSystemLock);
  v2 = sLoadingFacesFromFileSystem;
  pthread_mutex_unlock(&sLoadingFacesFromFileSystemLock);
  return v2;
}

- (void)setLoadingFacesFromFileSystem:(BOOL)a3
{
  pthread_mutex_lock(&sLoadingFacesFromFileSystemLock);
  sLoadingFacesFromFileSystem = a3;
  pthread_mutex_unlock(&sLoadingFacesFromFileSystemLock);
}

- (void)_loadFacesFileSystemDataIntoDatabase
{
  void *v3;
  id v4;
  id v5;
  id v6;
  _QWORD v7[5];
  id v8;
  _QWORD v9[4];
  id v10;

  objc_msgSend(MEMORY[0x1E0D73348], "transaction:", "-[PLModelMigrator _loadFacesFileSystemDataIntoDatabase]");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[PLModelMigrator newShortLivedLibraryWithName:](self, "newShortLivedLibraryWithName:", "-[PLModelMigrator _loadFacesFileSystemDataIntoDatabase]");
  -[PLModelMigrator setLoadingFacesFromFileSystem:](self, "setLoadingFacesFromFileSystem:", 1);
  v8 = v3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __55__PLModelMigrator__loadFacesFileSystemDataIntoDatabase__block_invoke;
  v9[3] = &unk_1E3677AA0;
  v10 = v4;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __55__PLModelMigrator__loadFacesFileSystemDataIntoDatabase__block_invoke_208;
  v7[3] = &unk_1E3677C18;
  v7[4] = self;
  v5 = v3;
  v6 = v4;
  objc_msgSend(v6, "performTransaction:completionHandler:", v9, v7);

}

- (void)_migratePersonContactInfo
{
  id v2;

  v2 = -[PLModelMigrator newShortLivedLibraryWithName:](self, "newShortLivedLibraryWithName:", "-[PLModelMigrator _migratePersonContactInfo]");
  +[PLPersonContactInfoMigrator migratePersonContactInfoInPhotoLibrary:](PLPersonContactInfoMigrator, "migratePersonContactInfoInPhotoLibrary:", v2);

}

- (void)handleGreenChanges:(id)a3
{
  id v4;
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v4 = a3;
  v5 = -[PLModelMigrator newShortLivedLibraryWithName:](self, "newShortLivedLibraryWithName:", "-[PLModelMigrator handleGreenChanges:]");
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __38__PLModelMigrator_handleGreenChanges___block_invoke;
  v8[3] = &unk_1E3677C18;
  v9 = v5;
  v10 = v4;
  v6 = v4;
  v7 = v5;
  objc_msgSend(v7, "performTransactionAndWait:", v8);

}

- (void)cleanupModelForDataMigrationForRestoreType:(int64_t)a3
{
  NSObject *v5;
  __CFString *v6;
  __CFString *v7;
  char *v8;
  NSObject *v9;
  void *v10;
  char *v11;
  char *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  PLGreenController *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  char *v24;
  uint8_t buf[4];
  const char *v26;
  __int16 v27;
  const char *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if ((unint64_t)(a3 - 1) > 2)
      v6 = CFSTR("none");
    else
      v6 = off_1E3671CA0[a3 - 1];
    v7 = v6;
    qos_class_self();
    PLStringFromQoSClass();
    v8 = (char *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v26 = (const char *)v7;
    v27 = 2114;
    v28 = v8;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "Clean up model after data migration for restore type %{public}@ at QoS: %{public}@", buf, 0x16u);

  }
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Data migrator plugin is requesting library migration, updating in-flight device restore migration state", buf, 2u);
  }

  -[PLModelMigrator deviceRestoreMigrationSupport](self, "deviceRestoreMigrationSupport");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setDataMigratorPluginHasRequestedLibraryMigration:", 1);

  v11 = -[PLModelMigrator newShortLivedLibraryWithName:](self, "newShortLivedLibraryWithName:", "-[PLModelMigrator cleanupModelForDataMigrationForRestoreType:]");
  v12 = v11;
  if (v11)
  {
    objc_msgSend(v11, "managedObjectContext");
    v13 = objc_claimAutoreleasedReturnValue();
    -[NSObject persistentStoreCoordinator](v13, "persistentStoreCoordinator");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "persistentStores");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "firstObject");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = v17;
    if (v16)
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "Photo library loaded successfully", buf, 2u);
      }

      -[PLModelMigrator _recordCurrentVersionMetadataIfNeededForDataMigrationInPersistentStore:](self, "_recordCurrentVersionMetadataIfNeededForDataMigrationInPersistentStore:", v16);
    }
    else
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v26 = v12;
        v27 = 2082;
        v28 = "-[PLModelMigrator cleanupModelForDataMigrationForRestoreType:]";
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Failed to access persistent store on photo library %@ for %{public}s", buf, 0x16u);
      }

    }
  }
  else
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446210;
      v26 = "-[PLModelMigrator cleanupModelForDataMigrationForRestoreType:]";
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to load photo library for %{public}s", buf, 0xCu);
    }
  }

  v19 = objc_alloc_init(PLGreenController);
  if (a3)
  {
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v26 = (const char *)a3;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Resetting fileID with restore %ld", buf, 0xCu);
    }

    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = __62__PLModelMigrator_cleanupModelForDataMigrationForRestoreType___block_invoke;
    v23[3] = &unk_1E3677AA0;
    v24 = v12;
    objc_msgSend(v24, "performTransactionAndWait:", v23);
    -[PLModelMigrator handleGreenChanges:](self, "handleGreenChanges:", v19);

  }
  if (-[PLGreenController isGreenStateValid](v19, "isGreenStateValid"))
  {
    -[PLGreenController currentGreenValues](v19, "currentGreenValues");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "globalValues");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "setGreenValues:", v21);

  }
  objc_msgSend(v12, "dataMigratorSupportCleanupModelForDataMigrationPurgeMissingSynced");
  -[PLModelMigrator _repairPotentialModelCorruptionInLibrary:](self, "_repairPotentialModelCorruptionInLibrary:", v12);

}

- (void)removeUnpairedTimelapsePreviewsInContext:(id)a3 fromDuplicatedUUIDs:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  void *v27;
  double v28;
  double v29;
  NSObject *v30;
  _BOOL4 v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  NSObject *v36;
  void *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  NSObject *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  NSObject *v49;
  _QWORD v50[4];
  NSObject *v51;
  id v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  id v57;
  uint8_t buf[4];
  const char *v59;
  __int16 v60;
  void *v61;
  __int16 v62;
  void *v63;
  _BYTE v64[128];
  _QWORD v65[2];
  _QWORD v66[5];

  v66[2] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K in %@"), CFSTR("uuid"), v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d AND %K = %d"), CFSTR("kind"), 1, CFSTR("kindSubtype"), 102);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)MEMORY[0x1E0CB3528];
  v66[0] = v10;
  v66[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v66, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "andPredicateWithSubpredicates:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v14);

  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("uuid"), 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v65[0] = v15;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("duration"), 1);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v65[1] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v65, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setSortDescriptors:", v17);

  v57 = 0;
  objc_msgSend(v5, "executeFetchRequest:error:", v9, &v57);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = v57;
  v20 = v19;
  if (v18)
  {
    v42 = v19;
    v44 = v11;
    v45 = v10;
    v46 = v9;
    v47 = v6;
    v48 = v5;
    v21 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v49 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v53 = 0u;
    v54 = 0u;
    v55 = 0u;
    v56 = 0u;
    v43 = v18;
    v22 = v18;
    v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v53, v64, 16);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)v54;
      do
      {
        for (i = 0; i != v24; ++i)
        {
          if (*(_QWORD *)v54 != v25)
            objc_enumerationMutation(v22);
          v27 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * i);
          objc_msgSend(v27, "duration");
          v29 = v28;
          PLMigrationGetLog();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
          if (v29 == 0.0)
          {
            if (v31)
            {
              objc_msgSend(v27, "uuid");
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "mainFileURL");
              v33 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v33, "path");
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 136446722;
              v59 = "-[PLModelMigrator removeUnpairedTimelapsePreviewsInContext:fromDuplicatedUUIDs:]";
              v60 = 2114;
              v61 = v32;
              v62 = 2112;
              v63 = v34;
              _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_DEFAULT, "%{public}s found zero-duration, unpaired, timelapse preview %{public}@ missing video path %@", buf, 0x20u);

            }
            objc_msgSend(v27, "uuid");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = v21;
          }
          else
          {
            if (v31)
            {
              objc_msgSend(v27, "uuid");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "mainFileURL");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "path");
              v39 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 136446722;
              v59 = "-[PLModelMigrator removeUnpairedTimelapsePreviewsInContext:fromDuplicatedUUIDs:]";
              v60 = 2114;
              v61 = v37;
              v62 = 2112;
              v63 = v39;
              _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_DEFAULT, "%{public}s found unpaired timelapse video %{public}@ with valid path %@", buf, 0x20u);

            }
            objc_msgSend(v27, "uuid");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = v49;
          }
          -[NSObject setObject:forKeyedSubscript:](v36, "setObject:forKeyedSubscript:", v27, v35);

        }
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v53, v64, 16);
      }
      while (v24);
    }

    v50[0] = MEMORY[0x1E0C809B0];
    v50[1] = 3221225472;
    v50[2] = __80__PLModelMigrator_removeUnpairedTimelapsePreviewsInContext_fromDuplicatedUUIDs___block_invoke;
    v50[3] = &unk_1E3664C60;
    v51 = v21;
    v6 = v47;
    v52 = v47;
    v40 = v21;
    v41 = v49;
    -[NSObject enumerateKeysAndObjectsUsingBlock:](v49, "enumerateKeysAndObjectsUsingBlock:", v50);

    v5 = v48;
    v10 = v45;
    v9 = v46;
    v18 = v43;
    v11 = v44;
    v20 = v42;
  }
  else
  {
    PLMigrationGetLog();
    v41 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446466;
      v59 = "-[PLModelMigrator removeUnpairedTimelapsePreviewsInContext:fromDuplicatedUUIDs:]";
      v60 = 2112;
      v61 = v20;
      _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, "%{public}s failed to fetch unpaired timelapse %@", buf, 0x16u);
    }
  }

}

- (void)_repairPotentialModelCorruptionInLibrary:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  PLModelMigrator *v9;
  uint8_t buf[4];
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (v4)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __60__PLModelMigrator__repairPotentialModelCorruptionInLibrary___block_invoke;
    v7[3] = &unk_1E3677C18;
    v8 = v4;
    v9 = self;
    objc_msgSend(v8, "performTransactionAndWait:", v7);

  }
  else
  {
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446210;
      v11 = "-[PLModelMigrator _repairPotentialModelCorruptionInLibrary:]";
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "%{public}s can't access photoLibrary: <rdar://problem/39763084>", buf, 0xCu);
    }

  }
}

- (void)dontImportFileSystemDataIntoDatabaseWithPhotoLibrary:(id)a3
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a3;
  v8 = v4;
  if (v4)
    v5 = v4;
  else
    v5 = -[PLModelMigrator newShortLivedLibraryWithName:](self, "newShortLivedLibraryWithName:", "-[PLModelMigrator dontImportFileSystemDataIntoDatabaseWithPhotoLibrary:]");
  v6 = v5;
  objc_msgSend(v5, "globalValues");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "dontImportFileSystemDataIntoDatabase");

}

- (void)_addUBFBundleScopedOrderedAssetsToImport:(id)a3 onDiskURLsToSkip:(id)a4
{
  id v6;
  id v7;
  PLPhotoLibraryPathManager *pathManager;
  id v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id v13;

  v6 = a3;
  v7 = a4;
  pathManager = self->_pathManager;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __77__PLModelMigrator__addUBFBundleScopedOrderedAssetsToImport_onDiskURLsToSkip___block_invoke;
  v11[3] = &unk_1E3664CD0;
  v11[4] = self;
  v12 = v7;
  v13 = v6;
  v9 = v6;
  v10 = v7;
  -[PLPhotoLibraryPathManager enumerateBundleScopesWithBlock:](pathManager, "enumerateBundleScopesWithBlock:", v11);

}

- (void)_repairInProgressDCIMLockedAssetTransfersInOrderedAssetsToImport:(id)a3 baseDirectory:(id)a4 photoDataLockedAssetsURL:(id)a5 photoDataCPLAssetsURL:(id)a6 photoStreamsBaseURL:(id)a7
{
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  id v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  unint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  NSObject *v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  PLFileSystemImportAsset *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  NSObject *v59;
  void *v60;
  void *v61;
  NSObject *v62;
  void *v63;
  void *v64;
  PLLockedResourceTransferRecovery *v65;
  __int128 v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  uint64_t v75;
  id obj;
  uint64_t v77;
  void *v78;
  void *v79;
  NSObject *v80;
  id v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint8_t buf[4];
  void *v95;
  __int16 v96;
  void *v97;
  _BYTE v98[128];
  _BYTE v99[128];
  _BYTE v100[128];
  uint64_t v101;

  v101 = *MEMORY[0x1E0C80C00];
  v11 = a3;
  v68 = a4;
  v12 = a5;
  v69 = a6;
  v67 = a7;
  v13 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v90 = 0u;
  v91 = 0u;
  v92 = 0u;
  v93 = 0u;
  v14 = v11;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v90, v100, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v91;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v91 != v17)
          objc_enumerationMutation(v14);
        v19 = *(void **)(*((_QWORD *)&v90 + 1) + 8 * i);
        if (objc_msgSend(v19, "isInterruptedLockedResourceTransfer"))
          objc_msgSend(v13, "addObject:", v19);
      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v90, v100, 16);
    }
    while (v16);
  }

  v20 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v86 = 0u;
  v87 = 0u;
  v88 = 0u;
  v89 = 0u;
  obj = v13;
  v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v86, v99, 16);
  if (v21)
  {
    v23 = v21;
    v24 = *(_QWORD *)v87;
    *(_QWORD *)&v22 = 138412546;
    v66 = v22;
    v72 = v14;
    v73 = v12;
    v70 = *(_QWORD *)v87;
    v71 = v20;
    do
    {
      v25 = 0;
      v75 = v23;
      do
      {
        if (*(_QWORD *)v87 != v24)
          objc_enumerationMutation(obj);
        v26 = *(void **)(*((_QWORD *)&v86 + 1) + 8 * v25);
        if ((objc_msgSend(v20, "containsObject:", v26, v66) & 1) == 0)
        {
          v79 = v26;
          objc_msgSend(v26, "lockedResourceTransferMarkerFileURL");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "URLByDeletingLastPathComponent");
          v28 = (void *)objc_claimAutoreleasedReturnValue();

          PLMigrationGetLog();
          v29 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v28, "path");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v95 = v30;
            _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_DEFAULT, "[lockedResourceTransfer] found in progress locked asset transfer files in directory: '%@'", buf, 0xCu);

          }
          if (v28)
          {
            v31 = 0x1E0D73000uLL;
            v32 = (void *)MEMORY[0x1E0D73208];
            objc_msgSend(v28, "path");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "path");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v32) = objc_msgSend(v32, "filePath:hasPrefix:", v33, v34);

            -[PLModelMigrator pathManager](self, "pathManager");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "path");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            v77 = v25;
            v78 = v28;
            if ((_DWORD)v32)
            {
              objc_msgSend(v35, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v36, 27, 0);
              v37 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v68, "URLByAppendingPathComponent:", v37);
              v38 = (id)objc_claimAutoreleasedReturnValue();
              v39 = v38;
            }
            else
            {
              objc_msgSend(v35, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v36, 31, 0);
              v37 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v12, "URLByAppendingPathComponent:", v37);
              v39 = objc_claimAutoreleasedReturnValue();
              v38 = v28;
            }
            v80 = v38;

            v84 = 0u;
            v85 = 0u;
            v82 = 0u;
            v83 = 0u;
            v81 = v14;
            v41 = objc_msgSend(v81, "countByEnumeratingWithState:objects:count:", &v82, v98, 16);
            if (v41)
            {
              v42 = v41;
              v43 = *(_QWORD *)v83;
LABEL_26:
              v44 = 0;
              while (1)
              {
                if (*(_QWORD *)v83 != v43)
                  objc_enumerationMutation(v81);
                v45 = *(void **)(*((_QWORD *)&v82 + 1) + 8 * v44);
                v46 = *(void **)(v31 + 520);
                objc_msgSend(v45, "urls");
                v47 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v47, "anyObject");
                v48 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v48, "path");
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                -[NSObject path](v39, "path");
                v50 = (void *)objc_claimAutoreleasedReturnValue();
                LOBYTE(v46) = objc_msgSend(v46, "filePath:hasPrefix:", v49, v50);

                if ((v46 & 1) != 0)
                  break;
                ++v44;
                v31 = 0x1E0D73000;
                if (v42 == v44)
                {
                  v42 = objc_msgSend(v81, "countByEnumeratingWithState:objects:count:", &v82, v98, 16);
                  if (v42)
                    goto LABEL_26;
                  goto LABEL_32;
                }
              }
              v51 = v45;

              v24 = v70;
              v20 = v71;
              v31 = 0x1E0D73000uLL;
              v40 = v39;
              if (v51)
                goto LABEL_42;
            }
            else
            {
LABEL_32:

              v24 = v70;
              v20 = v71;
              v40 = v39;
            }
            v52 = *(void **)(v31 + 520);
            -[NSObject path](v80, "path");
            v53 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v69, "path");
            v54 = (void *)objc_claimAutoreleasedReturnValue();
            LOBYTE(v52) = objc_msgSend(v52, "filePath:hasPrefix:", v53, v54);

            if ((v52 & 1) != 0)
            {
              v55 = 0;
            }
            else
            {
              v56 = *(void **)(v31 + 520);
              -[NSObject path](v80, "path");
              v57 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v67, "path");
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v56) = objc_msgSend(v56, "filePath:hasPrefix:", v57, v58);

              if ((_DWORD)v56)
                v55 = 2;
              else
                v55 = 7;
            }
            v51 = -[PLFileSystemImportAsset initWithDestinationAlbum:assetKind:]([PLFileSystemImportAsset alloc], "initWithDestinationAlbum:assetKind:", 0, v55);
            objc_msgSend(v81, "addObject:", v51);
            PLMigrationGetLog();
            v59 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
            {
              -[NSObject path](v40, "path");
              v60 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v78, "path");
              v61 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = v66;
              v95 = v60;
              v96 = 2112;
              v97 = v61;
              _os_log_impl(&dword_199541000, v59, OS_LOG_TYPE_DEFAULT, "[lockedResourceTransfer] did not find existing destination import asset containing files located in '%@' for transfer asset located in '%@', creating new destination asset", buf, 0x16u);

            }
LABEL_42:
            v23 = v75;
            v25 = v77;
            if (-[PLFileSystemImportAsset isInterruptedLockedResourceTransfer](v51, "isInterruptedLockedResourceTransfer"))
            {
              PLMigrationGetLog();
              v62 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
              {
                -[PLFileSystemImportAsset lockedResourceTransferMarkerFileURL](v51, "lockedResourceTransferMarkerFileURL");
                v63 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v63, "path");
                v64 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v95 = v64;
                _os_log_impl(&dword_199541000, v62, OS_LOG_TYPE_DEFAULT, "[lockedResourceTransfer] destination import asset also has marker file: '%@'", buf, 0xCu);

              }
              objc_msgSend(v20, "addObject:", v51);
            }
            v65 = -[PLLockedResourceTransferRecovery initWithTransferImportAsset:destinationDirectoryURL:]([PLLockedResourceTransferRecovery alloc], "initWithTransferImportAsset:destinationDirectoryURL:", v79, v40);
            -[PLFileSystemImportAsset setLockedResourceTransferRecovery:](v51, "setLockedResourceTransferRecovery:", v65);

            v14 = v72;
            v12 = v73;
            v28 = v78;
          }
          else
          {
            PLMigrationGetLog();
            v40 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_ERROR, "[lockedResourceTransfer] locked resource transfer asset is missing marker file URL", buf, 2u);
            }
          }

        }
        ++v25;
      }
      while (v25 != v23);
      v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v86, v99, 16);
    }
    while (v23);
  }

  objc_msgSend(obj, "removeObjectsInArray:", v20);
  objc_msgSend(v14, "removeObjectsInArray:", obj);

}

- (void)_repairInProgressLockedAssetTransfersInOrderedAssetsToImport:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  PLFileSystemImportAsset *v29;
  NSObject *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  void *v34;
  PLLockedResourceTransferRecovery *v35;
  void *v36;
  PLLockedResourceTransferRecovery *v37;
  NSObject *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id obj;
  void *v52;
  void *v53;
  uint64_t j;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _QWORD v63[5];
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t);
  id v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint8_t buf[4];
  void *v75;
  __int16 v76;
  void *v77;
  _BYTE v78[128];
  _BYTE v79[128];
  _BYTE v80[128];
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v47 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v70 = 0u;
  v71 = 0u;
  v72 = 0u;
  v73 = 0u;
  obj = v4;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v70, v80, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v71;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v71 != v6)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v70 + 1) + 8 * i);
        if (objc_msgSend(v8, "isInterruptedLockedResourceTransfer"))
          objc_msgSend(v47, "addObject:", v8);
      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v70, v80, 16);
    }
    while (v5);
  }

  v64 = 0;
  v65 = &v64;
  v66 = 0x3032000000;
  v67 = __Block_byref_object_copy__19565;
  v68 = __Block_byref_object_dispose__19566;
  v69 = 0;
  -[PLModelMigrator pathManager](self, "pathManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v63[0] = MEMORY[0x1E0C809B0];
  v63[1] = 3221225472;
  v63[2] = __80__PLModelMigrator__repairInProgressLockedAssetTransfersInOrderedAssetsToImport___block_invoke;
  v63[3] = &unk_1E3666F28;
  v63[4] = &v64;
  objc_msgSend(v9, "enumerateBundleScopesWithBlock:", v63);

  if (v65[5])
  {
    -[PLModelMigrator pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "photoDirectoryWithType:", 4);
    v44 = objc_claimAutoreleasedReturnValue();

    v50 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v61 = 0u;
    v62 = 0u;
    v59 = 0u;
    v60 = 0u;
    v45 = v47;
    v49 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v59, v79, 16);
    if (v49)
    {
      v48 = *(_QWORD *)v60;
      *(_QWORD *)&v11 = 138412546;
      v43 = v11;
      do
      {
        for (j = 0; j != v49; ++j)
        {
          if (*(_QWORD *)v60 != v48)
            objc_enumerationMutation(v45);
          v12 = *(void **)(*((_QWORD *)&v59 + 1) + 8 * j);
          if ((objc_msgSend(v50, "containsObject:", v12, v43) & 1) == 0)
          {
            v46 = v12;
            objc_msgSend(v12, "lockedResourceTransferMarkerFileURL");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "URLByDeletingLastPathComponent");
            v53 = (void *)objc_claimAutoreleasedReturnValue();

            if (v53)
            {
              objc_msgSend(v53, "lastPathComponent");
              v52 = (void *)objc_claimAutoreleasedReturnValue();
              PLMigrationGetLog();
              v14 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(v53, "path");
                v15 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v75 = v15;
                _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "[lockedResourceTransfer] found in progress locked asset transfer files in directory: '%@'", buf, 0xCu);

              }
              v16 = (void *)MEMORY[0x1E0D73208];
              objc_msgSend(v53, "path");
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              LOBYTE(v16) = objc_msgSend(v16, "filePath:hasPrefix:", v17, v65[5]);

              v18 = (void *)v44;
              if ((v16 & 1) == 0)
                v18 = (void *)v65[5];
              objc_msgSend(v18, "stringByAppendingPathComponent:", v52);
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              v57 = 0u;
              v58 = 0u;
              v55 = 0u;
              v56 = 0u;
              v20 = obj;
              v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v55, v78, 16);
              if (v21)
              {
                v22 = *(_QWORD *)v56;
LABEL_24:
                v23 = 0;
                while (1)
                {
                  if (*(_QWORD *)v56 != v22)
                    objc_enumerationMutation(v20);
                  v24 = *(void **)(*((_QWORD *)&v55 + 1) + 8 * v23);
                  v25 = (void *)MEMORY[0x1E0D73208];
                  objc_msgSend(v24, "urls");
                  v26 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v26, "anyObject");
                  v27 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v27, "path");
                  v28 = (void *)objc_claimAutoreleasedReturnValue();
                  LOBYTE(v25) = objc_msgSend(v25, "filePath:hasPrefix:", v28, v19);

                  if ((v25 & 1) != 0)
                    break;
                  if (v21 == ++v23)
                  {
                    v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v55, v78, 16);
                    if (v21)
                      goto LABEL_24;
                    goto LABEL_30;
                  }
                }
                v29 = v24;

                if (v29)
                  goto LABEL_35;
              }
              else
              {
LABEL_30:

              }
              v29 = -[PLFileSystemImportAsset initWithDestinationAlbum:assetKind:]([PLFileSystemImportAsset alloc], "initWithDestinationAlbum:assetKind:", 0, 0);
              objc_msgSend(v20, "addObject:", v29);
              PLMigrationGetLog();
              v30 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(v53, "path");
                v31 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = v43;
                v75 = v19;
                v76 = 2112;
                v77 = v31;
                _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_DEFAULT, "[lockedResourceTransfer] did not find existing destination import asset containing files located in '%@' for transfer asset located in '%@', creating new destination asset", buf, 0x16u);

              }
LABEL_35:
              if (-[PLFileSystemImportAsset isInterruptedLockedResourceTransfer](v29, "isInterruptedLockedResourceTransfer"))
              {
                PLMigrationGetLog();
                v32 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
                {
                  -[PLFileSystemImportAsset lockedResourceTransferMarkerFileURL](v29, "lockedResourceTransferMarkerFileURL");
                  v33 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v33, "path");
                  v34 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412290;
                  v75 = v34;
                  _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEFAULT, "[lockedResourceTransfer] destination import asset also has marker file: '%@'", buf, 0xCu);

                }
                objc_msgSend(v50, "addObject:", v29);
              }
              v35 = [PLLockedResourceTransferRecovery alloc];
              objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v19, 1);
              v36 = (void *)objc_claimAutoreleasedReturnValue();
              v37 = -[PLLockedResourceTransferRecovery initWithTransferImportAsset:destinationDirectoryURL:](v35, "initWithTransferImportAsset:destinationDirectoryURL:", v46, v36);
              -[PLFileSystemImportAsset setLockedResourceTransferRecovery:](v29, "setLockedResourceTransferRecovery:", v37);

            }
            else
            {
              PLMigrationGetLog();
              v38 = objc_claimAutoreleasedReturnValue();
              v52 = v38;
              if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_199541000, v38, OS_LOG_TYPE_ERROR, "[lockedResourceTransfer] locked resource transfer asset is missing marker file URL", buf, 2u);
              }
            }

          }
        }
        v49 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v59, v79, 16);
      }
      while (v49);
    }

    objc_msgSend(v45, "removeObjectsInArray:", v50);
    objc_msgSend(obj, "removeObjectsInArray:", v45);

    v39 = v44;
  }
  else
  {
    PLMigrationGetLog();
    v39 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
    {
      -[PLModelMigrator pathManager](self, "pathManager");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "libraryURL");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "path");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v75 = v42;
      _os_log_impl(&dword_199541000, v39, OS_LOG_TYPE_ERROR, "[lockedResourceTransfer] unable to access locked bundle scope for library at path: '%@'", buf, 0xCu);

    }
  }

  _Block_object_dispose(&v64, 8);
}

- (id)_orderedAssetsToImportInLibrary:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v4 = (void *)MEMORY[0x1E0C99DE8];
  v5 = a3;
  objc_msgSend(v4, "array");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v8 = objc_alloc_init(MEMORY[0x1E0CB3620]);
  -[PLModelMigrator setFileManager:](self, "setFileManager:", v8);
  -[PLModelMigrator _addUBFBundleScopedOrderedAssetsToImport:onDiskURLsToSkip:](self, "_addUBFBundleScopedOrderedAssetsToImport:onDiskURLsToSkip:", v6, v7);
  objc_msgSend(v5, "filesystemImportProgressAlbum");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "globalValues");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  LODWORD(v5) = objc_msgSend(v10, "isRebuildComplete");
  if ((_DWORD)v5)
    v11 = 8;
  else
    v11 = 24;
  objc_msgSend(v9, "setPendingItemsType:", v11);
  objc_msgSend(v9, "setPendingItemsCount:", objc_msgSend(v6, "count"));
  -[PLModelMigrator _repairInProgressLockedAssetTransfersInOrderedAssetsToImport:](self, "_repairInProgressLockedAssetTransfersInOrderedAssetsToImport:", v6);
  objc_msgSend(v6, "sortUsingComparator:", &__block_literal_global_266);

  return v6;
}

- (id)_orderedAssetsToImportInLibrary:(id)a3 cameraRollOnly:(BOOL)a4
{
  _BOOL8 v4;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  PLModelMigrator *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t j;
  PLModelMigrator *v36;
  void *v37;
  void *v38;
  int v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[128];
  _BYTE v65[128];
  uint64_t v66;

  v4 = a4;
  v66 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  if ((-[PLPhotoLibraryPathManager isDCIM](self->_pathManager, "isDCIM") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 2430, CFSTR("Expected DCIM library"));

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v63 = objc_msgSend(v8, "count");
  v10 = objc_alloc_init(MEMORY[0x1E0CB3620]);
  -[PLModelMigrator setFileManager:](self, "setFileManager:", v10);
  v11 = (void *)MEMORY[0x1E0C99E98];
  -[PLPhotoLibraryPathManager photoDirectoryWithType:](self->_pathManager, "photoDirectoryWithType:", 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "fileURLWithPath:isDirectory:", v12, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "URLByAppendingPathComponent:", CFSTR("PhotoData"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "URLByAppendingPathComponent:", CFSTR("CPLAssets"));
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "URLByAppendingPathComponent:", *MEMORY[0x1E0D74480]);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v52 = v14;
  objc_msgSend(v14, "URLByAppendingPathComponent:", CFSTR("Locked"));
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v49 = v13;
  objc_msgSend(v13, "URLByAppendingPathComponent:", *MEMORY[0x1E0D73DB8]);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLRebuildableDirectory rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:](PLRebuildableDirectory, "rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:", v16, 0, 0, v7, self->_startTime);
  v17 = objc_claimAutoreleasedReturnValue();
  if (v17)
    objc_msgSend(v15, "addObject:", v17);
  v48 = (void *)v17;
  v54 = v7;
  v18 = self;
  if (!v4)
  {
    objc_msgSend(v52, "URLByAppendingPathComponent:", CFSTR("Sync"));
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLRebuildableDirectory rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:](PLRebuildableDirectory, "rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:", self->_startTime);
    v19 = objc_claimAutoreleasedReturnValue();
    if (v19)
      objc_msgSend(v15, "addObject:", v19);
    v44 = (void *)v19;
    v46 = v16;
    +[PLRebuildableDirectory rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:](PLRebuildableDirectory, "rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:", v51, 1, 0, v7, self->_startTime);
    v20 = objc_claimAutoreleasedReturnValue();
    if (v20)
      objc_msgSend(v15, "addObject:", v20);
    v61 = 0u;
    v62 = 0u;
    v59 = 0u;
    v60 = 0u;
    v47 = v10;
    objc_msgSend(v10, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v50, 0, 0, &__block_literal_global_277, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v59, v65, 16);
    if (v22)
    {
      v23 = v22;
      v24 = *(_QWORD *)v60;
      do
      {
        for (i = 0; i != v23; ++i)
        {
          if (*(_QWORD *)v60 != v24)
            objc_enumerationMutation(v21);
          +[PLRebuildableDirectory rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:](PLRebuildableDirectory, "rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:", *(_QWORD *)(*((_QWORD *)&v59 + 1) + 8 * i), 0, 1, v54, v18->_startTime);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (v26)
            objc_msgSend(v15, "addObject:", v26);

        }
        v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v59, v65, 16);
      }
      while (v23);
    }

    objc_msgSend(v53, "URLByAppendingPathComponent:", CFSTR("CPLAssets"));
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLRebuildableDirectory rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:](PLRebuildableDirectory, "rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:", v27, 1, 0, v54, v18->_startTime);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    if (v28)
      objc_msgSend(v15, "addObject:", v28);
    objc_msgSend(v53, "URLByAppendingPathComponent:", CFSTR("DCIM"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLRebuildableDirectory rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:](PLRebuildableDirectory, "rebuildableDirectoryWithURL:isCPLAssets:isPhotoStream:photoLibrary:startTime:", v29, 0, 0, v54, v18->_startTime);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    if (v30)
      objc_msgSend(v15, "addObject:", v30);

    v16 = v46;
    v10 = v47;
  }
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v31 = v15;
  v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v55, v64, 16);
  if (v32)
  {
    v33 = v32;
    v34 = *(_QWORD *)v56;
    do
    {
      for (j = 0; j != v33; ++j)
      {
        if (*(_QWORD *)v56 != v34)
          objc_enumerationMutation(v31);
        objc_msgSend(*(id *)(*((_QWORD *)&v55 + 1) + 8 * j), "gatherAssetsToImport:pendingAssetsCount:onDiskURLsToSkip:cameraRollOnly:", v8, &v63, v9, v4);
      }
      v33 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v55, v64, 16);
    }
    while (v33);
  }

  v36 = v18;
  -[PLModelMigrator _addUBFBundleScopedOrderedAssetsToImport:onDiskURLsToSkip:](v18, "_addUBFBundleScopedOrderedAssetsToImport:onDiskURLsToSkip:", v8, v9);
  if (!v4)
  {
    objc_msgSend(v54, "filesystemImportProgressAlbum");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v54, "globalValues");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = objc_msgSend(v38, "isRebuildComplete");

    if (v39)
      v40 = 8;
    else
      v40 = 24;
    objc_msgSend(v37, "setPendingItemsType:", v40);
    objc_msgSend(v37, "setPendingItemsCount:", v63);

  }
  -[PLModelMigrator _repairInProgressDCIMLockedAssetTransfersInOrderedAssetsToImport:baseDirectory:photoDataLockedAssetsURL:photoDataCPLAssetsURL:photoStreamsBaseURL:](v36, "_repairInProgressDCIMLockedAssetTransfersInOrderedAssetsToImport:baseDirectory:photoDataLockedAssetsURL:photoDataCPLAssetsURL:photoStreamsBaseURL:", v8, v49, v53, v51, v50);
  objc_msgSend(v8, "sortUsingComparator:", &__block_literal_global_281);

  return v8;
}

- (void)_rebuildAssetsFromJournal:(id)a3 inLibrary:(id)a4 progress:(id)a5 progressFraction:(id)a6
{
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  double v14;
  NSObject *v15;
  double v16;
  _opaque_pthread_t *v17;
  int sched_priority;
  int v19;
  _opaque_pthread_t *v20;
  void *v21;
  uint64_t v22;
  float v23;
  void *v24;
  void *v25;
  NSObject *v26;
  double v27;
  _opaque_pthread_t *v28;
  int v29;
  sched_param v30;
  uint8_t buf[4];
  double v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = a6;
  objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
  v14 = v13;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
    v16 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
    *(_DWORD *)buf = 138412290;
    v32 = v16;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Asset journal rebuild started: %@", buf, 0xCu);

  }
  v30 = 0;
  v29 = 0;
  v17 = pthread_self();
  pthread_getschedparam(v17, &v29, &v30);
  sched_priority = v30.sched_priority;
  if (v30.sched_priority >= 0)
    v19 = v30.sched_priority;
  else
    v19 = v30.sched_priority + 1;
  v30.sched_priority = v19 >> 1;
  v20 = pthread_self();
  pthread_setschedparam(v20, v29, &v30);
  v21 = (void *)MEMORY[0x1E0CB38A8];
  v22 = objc_msgSend(v11, "totalUnitCount");
  objc_msgSend(v12, "progressFractionForType:", 0);
  objc_msgSend(v21, "progressWithTotalUnitCount:parent:pendingUnitCount:", 100, v11, llroundf(v23 * (float)v22));
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "managedObjectContext");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "recreateAssetsInManagedObjectContext:options:progress:", v25, 0, v24);

  PLMigrationGetLog();
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
    *(_DWORD *)buf = 134217984;
    v32 = v27 - v14;
    _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Asset journal rebuild finished, duration: %1.1fs", buf, 0xCu);
  }

  v30.sched_priority = sched_priority;
  v28 = pthread_self();
  pthread_setschedparam(v28, v29, &v30);

}

- (void)_importAllDCIMAssetsInLibrary:(id)a3 progress:(id)a4 progressFraction:(id)a5 rebuildComplete:(BOOL)a6
{
  _BOOL4 v6;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  float v16;
  double v17;
  double v18;
  NSObject *v19;
  double v20;
  void *v21;
  _opaque_pthread_t *v22;
  _opaque_pthread_t *v23;
  pid_t v24;
  float v25;
  float v26;
  void *v27;
  float v28;
  void *v29;
  _BOOL8 v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  _BOOL4 v36;
  void *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  double v41;
  NSObject *v42;
  _opaque_pthread_t *v43;
  uint64_t v44;
  int v45;
  void *context;
  void *v47;
  void *v48;
  int v49;
  sched_param v50;
  uint8_t buf[4];
  double v52;
  uint64_t v53;

  v6 = a6;
  v53 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  objc_msgSend(v10, "libraryServicesManager");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "wellKnownPhotoLibraryIdentifier");

  if (v14 == 3)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_importAllDCIMAssetsInLibrary is unsupported for the syndication photo library", buf, 2u);
    }

    objc_msgSend(v12, "progressFractionForType:", 2);
    objc_msgSend(v11, "setCompletedUnitCount:", (uint64_t)(float)(v16 * (float)objc_msgSend(v11, "totalUnitCount")));
  }
  else
  {
    context = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
    v18 = v17;
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v20 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
      *(_DWORD *)buf = 138412290;
      v52 = v20;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "Beginning file system import %@", buf, 0xCu);

    }
    -[PLModelMigrator pathManager](self, "pathManager");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v21, "isUBF") & 1) != 0)
      -[PLModelMigrator _orderedAssetsToImportInLibrary:](self, "_orderedAssetsToImportInLibrary:", v10);
    else
      -[PLModelMigrator _orderedAssetsToImportInLibrary:cameraRollOnly:](self, "_orderedAssetsToImportInLibrary:cameraRollOnly:", v10, 0);
    v48 = (void *)objc_claimAutoreleasedReturnValue();

    v50 = 0;
    v49 = 0;
    v22 = pthread_self();
    pthread_getschedparam(v22, &v49, &v50);
    HIDWORD(v44) = v50.sched_priority;
    v50.sched_priority /= 2;
    v23 = pthread_self();
    pthread_setschedparam(v23, v49, &v50);
    v24 = getpid();
    objc_msgSend(v48, "count");
    proc_set_cpumon_params();
    LODWORD(v44) = v24;
    objc_msgSend(v12, "progressFractionForType:", 2, v44);
    v26 = v25;
    objc_msgSend(MEMORY[0x1E0CB38A8], "progressWithTotalUnitCount:parent:pendingUnitCount:", 100, v11, (uint64_t)(float)(v25 * (float)objc_msgSend(v11, "totalUnitCount")));
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (v26 == 1.0)
      v28 = 0.75;
    else
      v28 = 0.05;
    objc_msgSend(MEMORY[0x1E0CB38A8], "progressWithTotalUnitCount:parent:pendingUnitCount:", 100, v27, llroundf(v28 * (float)objc_msgSend(v11, "totalUnitCount")));
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_msgSend(v10, "globalValues");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = objc_msgSend(v29, "importFilesystemAssetsState") == -1;

    }
    else
    {
      v30 = 0;
    }
    -[PLModelMigrator _importFileSystemImportAssets:intoLibrary:type:progress:](self, "_importFileSystemImportAssets:intoLibrary:type:progress:", v48, v10, v30, v47);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v31, "count"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "setPayloadValue:forKey:onEventWithName:", v33, *MEMORY[0x1E0D73818], *MEMORY[0x1E0D73800]);

    if (objc_msgSend(v12, "isLegacyRecoveryEnabled"))
      -[PLModelMigrator filesystemImportResultsUpdateKeywordWithImportedAssets:](self, "filesystemImportResultsUpdateKeywordWithImportedAssets:", v31);
    if (!v6)
    {
      objc_msgSend(MEMORY[0x1E0CB38A8], "progressWithTotalUnitCount:parent:pendingUnitCount:", 100, v27, llround((1.0 - v28) * (double)objc_msgSend(v11, "totalUnitCount")));
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLModelMigrator pathManager](self, "pathManager");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = +[PLRebuildJournalManager isEnabledWithPathManager:error:](PLRebuildJournalManager, "isEnabledWithPathManager:error:", v35, 0);

      if (v36)
      {
        objc_msgSend(v10, "libraryServicesManager");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v37, "rebuildJournalManager");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "managedObjectContext");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v38, "recreateNonAssetsInManagedObjectContext:progress:", v39, v34);

      }
      else
      {
        objc_msgSend(v10, "recreateAlbumsAndPersonsFromMetadata");
        objc_msgSend(v34, "setCompletedUnitCount:", objc_msgSend(v34, "totalUnitCount"));
      }

    }
    PLMigrationGetLog();
    v40 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
      *(_DWORD *)buf = 134217984;
      v52 = v41 - v18;
      _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_DEFAULT, "Migration took %1.1fs", buf, 0xCu);
    }

    objc_msgSend(v10, "cleanupAfterImportAllDCIMAssets");
    PLMigrationGetLog();
    v42 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v42, OS_LOG_TYPE_DEFAULT, "Finished file system import", buf, 2u);
    }

    proc_set_cpumon_defaults();
    v50.sched_priority = v45;
    v43 = pthread_self();
    pthread_setschedparam(v43, v49, &v50);

    objc_autoreleasePoolPop(context);
  }

}

- (void)_importAfterCrash:(id)a3 dictionariesByPhotoStreamID:(id)a4 completionBlock:(id)a5
{
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  os_signpost_id_t v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;
  NSObject *v26;
  id v27;
  os_signpost_id_t v28;
  _QWORD v29[4];
  id v30;
  PLModelMigrator *v31;
  id v32;
  id v33;
  uint8_t buf[4];
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a5;
  objc_msgSend(MEMORY[0x1E0D73348], "transaction:", "-[PLModelMigrator _importAfterCrash:dictionariesByPhotoStreamID:completionBlock:]");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[PLModelMigrator newShortLivedLibraryWithName:](self, "newShortLivedLibraryWithName:", "-[PLModelMigrator _importAfterCrash:dictionariesByPhotoStreamID:completionBlock:]");
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_signpost_id_generate(v12);
  v14 = v12;
  v15 = v14;
  if (v13 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v14))
  {
    *(_DWORD *)buf = 134217984;
    v35 = objc_msgSend(v7, "count");
    _os_signpost_emit_with_name_impl(&dword_199541000, v15, OS_SIGNPOST_INTERVAL_BEGIN, v13, "ImportAfterCrash", "fileURLs count: %lu", buf, 0xCu);
  }

  v16 = MEMORY[0x1E0C809B0];
  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __81__PLModelMigrator__importAfterCrash_dictionariesByPhotoStreamID_completionBlock___block_invoke;
  v29[3] = &unk_1E3677998;
  v30 = v7;
  v31 = self;
  v32 = v10;
  v33 = v11;
  v23[0] = v16;
  v23[1] = 3221225472;
  v23[2] = __81__PLModelMigrator__importAfterCrash_dictionariesByPhotoStreamID_completionBlock___block_invoke_3;
  v23[3] = &unk_1E3674F58;
  v24 = v33;
  v25 = v9;
  v26 = v15;
  v27 = v8;
  v28 = v13;
  v17 = v15;
  v18 = v9;
  v19 = v33;
  v20 = v8;
  v21 = v10;
  v22 = v7;
  objc_msgSend(v21, "performTransaction:completionHandler:", v29, v23);

}

- (id)_dateWithiTunesTimeInterval:(double)a3
{
  return (id)objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", a3 - *MEMORY[0x1E0C9ADE8]);
}

- (id)_newSyncedPropertiesByAssetUUIDs:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  _BOOL4 v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  uint64_t v37;

  v3 = a3;
  v37 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLModelMigrator _iTunesPhotosLastSyncMetadata](self, "_iTunesPhotosLastSyncMetadata");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", CFSTR("updates"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = v7;
  if (!objc_msgSend(v7, "count"))
    goto LABEL_14;
  v26 = v3;
  v27 = v6;
  v28 = v5;
  v30 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(v7, "count"));
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v8 = v7;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v33;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v33 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * i);
        objc_msgSend(v13, "objectForKey:", CFSTR("itemType"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v14, "isEqual:", CFSTR("Asset")))
        {
          objc_msgSend(v13, "objectForKey:", CFSTR("uuid"));
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (v15)
            objc_msgSend(v30, "setObject:forKey:", v13, v15);

        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
    }
    while (v10);
  }

  v16 = v30;
  v17 = v16;
  v6 = v27;
  v5 = v28;
  v7 = v29;
  v3 = v26;
  if (!v16)
  {
LABEL_14:
    v17 = (void *)objc_opt_new();
    v16 = 0;
  }
  if (v6 && objc_msgSend(v6, "count") && v3)
  {
    -[PLModelMigrator pathManager](self, "pathManager");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "syncInfoPath");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v20, "fileExistsAtPath:", v19))
    {
      v31 = 0;
      objc_msgSend(v20, "removeItemAtPath:error:", v19, &v31);

    }
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKey:", CFSTR("iTunesUserAgent"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (v22)
      objc_msgSend(v21, "setObject:forKey:", v22, CFSTR("userAgent"));
    objc_msgSend(v6, "objectForKey:", CFSTR("libraryKind"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    if (v23)
      objc_msgSend(v21, "setObject:forKey:", v23, CFSTR("libraryKind"));
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v21, 100, 0, 0);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "writeToFile:options:error:", v19, 1073741825, 0);

    v7 = v29;
  }

  objc_autoreleasePoolPop(v5);
  return v17;
}

- (void)_applySyncedProperties:(id)a3 toAsset:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  double latitude;
  double longitude;
  void *v16;
  void *v17;
  double v18;
  CLLocationDegrees v19;
  CLLocationDegrees v20;
  CLLocationCoordinate2D v21;
  void *v22;
  id v23;

  v23 = a3;
  v6 = a4;
  if (objc_msgSend(v23, "count"))
  {
    objc_msgSend(v23, "objectForKey:", CFSTR("exposureDate"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7
      || (objc_msgSend(v23, "objectForKey:", CFSTR("modificationDate")),
          (v7 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      objc_msgSend(v7, "doubleValue");
      -[PLModelMigrator _dateWithiTunesTimeInterval:](self, "_dateWithiTunesTimeInterval:");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setDateCreated:", v8);
      objc_msgSend(v6, "dateCreated");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "timeIntervalSinceReferenceDate");
      objc_msgSend(v6, "setSortToken:");

    }
    objc_msgSend(v23, "objectForKey:", CFSTR("modificationDate"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      objc_msgSend(v10, "doubleValue");
      -[PLModelMigrator _dateWithiTunesTimeInterval:](self, "_dateWithiTunesTimeInterval:");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setModificationDate:", v12);

    }
    objc_msgSend(v23, "objectForKey:", CFSTR("originalFileName"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
      objc_msgSend(v6, "setOriginalFilename:", v13);
    latitude = *MEMORY[0x1E0C9E500];
    longitude = *(double *)(MEMORY[0x1E0C9E500] + 8);
    objc_msgSend(v23, "objectForKey:", CFSTR("latitude"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "objectForKey:", CFSTR("longitude"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (v17 && v16)
    {
      objc_msgSend(v16, "doubleValue");
      v19 = v18;
      objc_msgSend(v17, "doubleValue");
      v21 = CLLocationCoordinate2DMake(v19, v20);
      latitude = v21.latitude;
      longitude = v21.longitude;
    }
    if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", latitude, longitude))
    {
      v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C9E3B8]), "initWithLatitude:longitude:", latitude, longitude);
      objc_msgSend(v6, "setLocation:", v22);

    }
    else
    {
      objc_msgSend(v6, "setLocation:", 0);
    }

  }
}

- (id)_syncedPropertiesForAssetUUID:(id)a3
{
  id v4;
  NSDictionary *syncedPropertiesByUUID;
  NSDictionary *v6;
  NSDictionary *v7;
  void *v8;

  v4 = a3;
  syncedPropertiesByUUID = self->_syncedPropertiesByUUID;
  if (!syncedPropertiesByUUID)
  {
    v6 = -[PLModelMigrator _newSyncedPropertiesByAssetUUIDs:](self, "_newSyncedPropertiesByAssetUUIDs:", 0);
    v7 = self->_syncedPropertiesByUUID;
    self->_syncedPropertiesByUUID = v6;

    syncedPropertiesByUUID = self->_syncedPropertiesByUUID;
  }
  -[NSDictionary objectForKey:](syncedPropertiesByUUID, "objectForKey:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (void)_prepareForImportDeleteCorruptAssetsWithImporter:(id)a3 context:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  unint64_t v29;
  char v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  int v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  NSObject *v49;
  NSObject *v50;
  char v51;
  id v52;
  NSObject *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  NSObject *v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t i;
  char v68;
  NSObject *v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  uint64_t v75;
  void *v76;
  NSObject *v77;
  void *v78;
  void *v79;
  id obj;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  id v91;
  id v92;
  id v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  id v98;
  uint8_t v99[128];
  uint8_t buf[4];
  _BYTE v101[14];
  _BYTE v102[128];
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  objc_msgSend(v6, "photoLibrary");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "libraryServicesManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "wellKnownPhotoLibraryIdentifier");

  v81 = v6;
  if (v9 == 3)
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "_prepareForImportDeleteCorruptAssetsWithImporter is unsupported for the syndication photo library", buf, 2u);
    }

    v11 = v6;
    goto LABEL_73;
  }
  v12 = (void *)MEMORY[0x19AEC1554]();
  v13 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "fetchRequestWithEntityName:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v15, "setResultType:", 2);
  v16 = objc_alloc_init(MEMORY[0x1E0C97B30]);
  objc_msgSend(v16, "setName:", CFSTR("objectID"));
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setExpression:", v17);

  objc_msgSend(v16, "setExpressionResultType:", 2000);
  v73 = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:", v16, CFSTR("uuid"), CFSTR("directory"), CFSTR("filename"), CFSTR("savedAssetType"), 0);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "setPropertiesToFetch:", v18);

  v98 = 0;
  v74 = v15;
  objc_msgSend(v6, "executeFetchRequest:error:", v15, &v98);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v98;
  v21 = v20;
  if (!v19)
  {
    v11 = v6;
    PLMigrationGetLog();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)v101 = v21;
      _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_ERROR, "Unable to fetch asset UUIDs and paths during migration. (%@)", buf, 0xCu);
    }
    v49 = v48;
    goto LABEL_72;
  }
  v79 = v20;
  v71 = v12;
  v72 = v5;
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v19, "count"));
  v77 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", objc_msgSend(v19, "count"));
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", objc_msgSend(v19, "count"));
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v94 = 0u;
  v95 = 0u;
  v96 = 0u;
  v97 = 0u;
  v70 = v19;
  obj = v19;
  v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v94, v102, 16);
  v82 = v22;
  if (!v23)
    goto LABEL_40;
  v24 = 1;
  v83 = *(_QWORD *)v95;
  while (2)
  {
    v84 = v23;
    v85 = v24;
    v25 = 0;
    v75 = v24 + v23;
    v26 = -v24;
    do
    {
      if (*(_QWORD *)v95 != v83)
        objc_enumerationMutation(obj);
      v27 = *(void **)(*((_QWORD *)&v94 + 1) + 8 * v25);
      v28 = (void *)MEMORY[0x19AEC1554]();
      v29 = (v24 + v25) / 0x64uLL;
      if (v26 == -100 * v29 && objc_msgSend(v81, "hasChanges"))
      {
        v93 = v79;
        v30 = objc_msgSend(v81, "save:", &v93);
        v31 = v93;

        if ((v30 & 1) == 0)
        {
          PLMigrationGetLog();
          v50 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109378;
            *(_DWORD *)v101 = v29;
            *(_WORD *)&v101[4] = 2112;
            *(_QWORD *)&v101[6] = v31;
            _os_log_impl(&dword_199541000, v50, OS_LOG_TYPE_ERROR, "Unable to save moc while cleaning database [batch %d]. (%@)", buf, 0x12u);
          }

          objc_autoreleasePoolPop(v28);
          v79 = v31;
          goto LABEL_40;
        }
        v79 = v31;
      }
      objc_msgSend(v27, "objectForKey:", CFSTR("objectID"));
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "objectForKey:", CFSTR("uuid"));
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "objectForKey:", CFSTR("directory"));
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "objectForKey:", CFSTR("filename"));
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "stringByAppendingPathComponent:", v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "uppercaseString");
      v37 = (void *)objc_claimAutoreleasedReturnValue();

      if (!objc_msgSend(v37, "length"))
      {
        objc_msgSend(MEMORY[0x1E0D73310], "maskForCanDeleteEmptyPathForCorruptAssetsDuringFilesystemImport");
        objc_msgSend(v27, "objectForKey:", CFSTR("savedAssetType"));
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v42, "intValue");
        v43 = PLValidatedSavedAssetTypeApplies();

        v22 = v82;
        v38 = v84;
        if (!v43)
          goto LABEL_31;
LABEL_23:
        objc_msgSend(v22, "addObject:", v32);
        goto LABEL_31;
      }
      v22 = v82;
      v38 = v84;
      if (!v33)
      {
        objc_msgSend(v81, "existingObjectWithID:error:", v32, 0);
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        v45 = v44;
        if (v44 && (objc_msgSend(v44, "isDeleted") & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v45, "setUuid:", v46);

          objc_msgSend(v45, "persistMetadataToFilesystem");
        }

        goto LABEL_28;
      }
      objc_msgSend(v78, "objectForKey:", v37);
      v39 = (void *)objc_claimAutoreleasedReturnValue();

      if (v39)
        goto LABEL_23;
      if (!-[NSObject containsObject:](v77, "containsObject:", v33))
        goto LABEL_30;
      objc_msgSend(v81, "existingObjectWithID:error:", v32, 0);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      v41 = v40;
      if (!v40 || objc_msgSend(v40, "isDeleted"))
      {

LABEL_28:
        v33 = 0;
        goto LABEL_31;
      }
      objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
      v47 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(v41, "setUuid:", v47);
      objc_msgSend(v41, "persistMetadataToFilesystem");

      v33 = (void *)v47;
      if (v47)
      {
LABEL_30:
        objc_msgSend(v78, "setObject:forKey:", v33, v37);
        -[NSObject addObject:](v77, "addObject:", v33);
        objc_msgSend(v76, "setObject:forKey:", v32, v33);
      }
LABEL_31:

      objc_autoreleasePoolPop(v28);
      ++v25;
      --v26;
      v24 = v85;
    }
    while (v38 != v25);
    v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v94, v102, 16);
    v24 = v75;
    if (v23)
      continue;
    break;
  }
LABEL_40:

  v11 = v81;
  if (objc_msgSend(v81, "hasChanges"))
  {
    v92 = v79;
    v51 = objc_msgSend(v81, "save:", &v92);
    v52 = v92;

    v12 = v71;
    v5 = v72;
    if ((v51 & 1) == 0)
    {
      PLMigrationGetLog();
      v53 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v101 = v52;
        _os_log_impl(&dword_199541000, v53, OS_LOG_TYPE_ERROR, "Unable to save moc while cleaning database [pre-delete]. (%@)", buf, 0xCu);
      }

    }
  }
  else
  {
    v52 = v79;
    v12 = v71;
    v5 = v72;
  }
  v49 = v77;
  objc_msgSend(v5, "setExistingUUIDs:", v77);
  objc_msgSend(v5, "setExistingUUIDsByUppercasePath:", v78);
  objc_msgSend(v5, "setExistingOIDsByUUID:", v76);
  if (objc_msgSend(v22, "count"))
  {
    v54 = (void *)MEMORY[0x19AEC1554]();
    v55 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "fetchRequestWithEntityName:", v56);
    v57 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@"), v22);
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "setPredicate:", v58);

    v91 = v52;
    objc_msgSend(v81, "executeFetchRequest:error:", v57, &v91);
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    v60 = v91;

    if (v59)
    {
      if (objc_msgSend(v59, "count"))
      {
        PLMigrationGetLog();
        v61 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        {
          v62 = objc_msgSend(v59, "count");
          *(_DWORD *)buf = 134217984;
          *(_QWORD *)v101 = v62;
          _os_log_impl(&dword_199541000, v61, OS_LOG_TYPE_ERROR, "Removing %lu corrupt assets from the database", buf, 0xCu);
        }

        v89 = 0u;
        v90 = 0u;
        v87 = 0u;
        v88 = 0u;
        v63 = v59;
        v64 = -[NSObject countByEnumeratingWithState:objects:count:](v63, "countByEnumeratingWithState:objects:count:", &v87, v99, 16);
        if (v64)
        {
          v65 = v64;
          v66 = *(_QWORD *)v88;
          do
          {
            for (i = 0; i != v65; ++i)
            {
              if (*(_QWORD *)v88 != v66)
                objc_enumerationMutation(v63);
              objc_msgSend(*(id *)(*((_QWORD *)&v87 + 1) + 8 * i), "deleteFromDatabaseOnly");
            }
            v65 = -[NSObject countByEnumeratingWithState:objects:count:](v63, "countByEnumeratingWithState:objects:count:", &v87, v99, 16);
          }
          while (v65);
          v22 = v82;
        }
        goto LABEL_62;
      }
    }
    else
    {
      PLMigrationGetLog();
      v63 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v101 = v60;
        _os_log_impl(&dword_199541000, v63, OS_LOG_TYPE_ERROR, "Unable to fetch assets to delete. (%@)", buf, 0xCu);
      }
LABEL_62:

    }
    objc_autoreleasePoolPop(v54);
    v11 = v81;
    v49 = v77;
  }
  else
  {
    v60 = v52;
  }
  if (objc_msgSend(v11, "hasChanges"))
  {
    v86 = v60;
    v68 = objc_msgSend(v11, "save:", &v86);
    v21 = v86;

    if ((v68 & 1) == 0)
    {
      PLMigrationGetLog();
      v69 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v101 = v21;
        _os_log_impl(&dword_199541000, v69, OS_LOG_TYPE_ERROR, "Unable to save moc while cleaning database [delete]. (%@)", buf, 0xCu);
      }

    }
    v49 = v77;
  }
  else
  {
    v21 = v60;
  }

  v19 = v70;
LABEL_72:

  objc_autoreleasePoolPop(v12);
LABEL_73:

}

- (id)_importFileSystemImportAssets:(id)a3 intoLibrary:(id)a4 type:(unsigned __int8)a5 progress:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v21[4];
  id v22;
  PLModelMigrator *v23;
  id v24;
  id v25;
  id v26;
  unsigned __int8 v27;
  uint8_t buf[16];

  v10 = a3;
  v11 = a4;
  v12 = a6;
  objc_msgSend(v11, "libraryServicesManager");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "wellKnownPhotoLibraryIdentifier");

  if (v14 == 3)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_importFileSystemImportAssets is unsupported for the syndication photo library", buf, 2u);
    }

    objc_msgSend(v12, "setCompletedUnitCount:", objc_msgSend(v12, "totalUnitCount"));
    v16 = (id)MEMORY[0x1E0C9AA60];
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v11, "libraryServicesManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __75__PLModelMigrator__importFileSystemImportAssets_intoLibrary_type_progress___block_invoke;
    v21[3] = &unk_1E3664DB8;
    v22 = v11;
    v23 = self;
    v24 = v10;
    v25 = v12;
    v27 = a5;
    v16 = v17;
    v26 = v16;
    objc_msgSend(v19, "performFileSystemAssetImporterWorkWithLibrary:block:", v22, v21);

    objc_autoreleasePoolPop(v18);
  }

  return v16;
}

- (void)_updateImportedSavedAssetTypeForFileSystemImportedAsset:(id)a3 type:(unsigned __int8)a4 importAssetKind:(int)a5 isCPLAssetsDirectory:(BOOL)a6 destinationAlbum:(id)a7
{
  _BOOL4 v8;
  int v10;
  id v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;

  v8 = a6;
  v10 = a4;
  v18 = a3;
  v11 = a7;
  if (!v11
    || (objc_msgSend(MEMORY[0x1E0D73310], "maskForPhotoStreamAsset"),
        objc_msgSend(v18, "savedAssetType"),
        (PLValidatedSavedAssetTypeApplies() & 1) == 0))
  {
    objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForFileSystemImportSavedAssetTypeUpdate");
    objc_msgSend(v18, "savedAssetType");
    if (PLValidatedSavedAssetTypeApplies())
    {
      if (v10 == 1)
        v12 = objc_msgSend(v18, "isInTrash") ^ 1;
      else
        v12 = 0;
      v13 = 0;
      if (a5 > 7)
        goto LABEL_19;
      if (((1 << a5) & 0x8D) != 0)
      {
        v14 = (void *)MEMORY[0x1E0D73310];
        if (!v12)
        {
          if (v8)
            v15 = objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForAssetsInCPLAssetsDirectory", 0);
          else
            v15 = objc_msgSend(MEMORY[0x1E0D73310], "defaultSavedAssetTypeForUnknownFilesystemImportAssets", 0);
          goto LABEL_18;
        }
      }
      else
      {
        v16 = v18;
        if (a5 != 1)
        {
          if (a5 == 4)
          {
            v17 = objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForFinderSyncedAsset", 0);
            v16 = v18;
            v13 = v17;
          }
          goto LABEL_20;
        }
        v14 = (void *)MEMORY[0x1E0D73310];
        if (!v12)
        {
          v15 = objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForImportedByCameraConnectionKit", 0);
          goto LABEL_18;
        }
      }
      v15 = objc_msgSend(v14, "savedAssetTypeForRecoveredAsset", 0);
LABEL_18:
      v13 = v15;
LABEL_19:
      v16 = v18;
LABEL_20:
      objc_msgSend(v16, "setSavedAssetType:", v13);
    }
  }

}

- (int64_t)attemptLightweightMigrationFromVersion:(id)a3 onStore:(id)a4 withMetadata:(id)a5 orStoreURL:(id)a6 options:(id)a7 coordinator:(id)a8 migrationPolicy:(unsigned int)a9 error:(id *)a10
{
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  int64_t v27;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  _QWORD v34[5];
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;

  v17 = a3;
  v18 = a4;
  v19 = a5;
  v32 = a6;
  v33 = a7;
  v20 = a8;
  if (v17)
  {
    if (v19)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 3173, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("previousStoreVersion"), v32, v33);

    if (v19)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 3174, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("storeMetadata"));

LABEL_3:
  if (!v20)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 3175, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("coordinator"));

  }
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 0;
  v34[0] = 0;
  v34[1] = v34;
  v34[2] = 0x3032000000;
  v34[3] = __Block_byref_object_copy__19565;
  v34[4] = __Block_byref_object_dispose__19566;
  v21 = v18;
  v35 = v21;
  v22 = v20;
  v23 = v32;
  v24 = v17;
  v25 = v33;
  v26 = v19;
  PLRunWithUnfairLock();
  if (*((_BYTE *)v37 + 24))
    v27 = 2;
  else
    v27 = 4;

  _Block_object_dispose(v34, 8);
  _Block_object_dispose(&v36, 8);

  return v27;
}

- (void)_setIsPostProcessingLightWeightMigration:(BOOL)a3
{
  self->_isPostProcessingLightWeightMigration = a3;
}

- (BOOL)validateModelEntityNames:(id *)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  +[PLManagedObjectContext managedObjectModel](PLManagedObjectContext, "managedObjectModel");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "entitiesByName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "allKeys");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  PLXPCStoreAllowedEntityNames();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  PLXPCStoreDeniedEntityNames();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v10 = v6;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v20 != v13)
          objc_enumerationMutation(v10);
        v15 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * i);
        if ((objc_msgSend(v7, "containsObject:", v15, (_QWORD)v19) & 1) == 0
          && (objc_msgSend(v8, "containsObject:", v15) & 1) == 0)
        {
          objc_msgSend(v9, "addObject:", v15);
        }
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v12);
  }

  v16 = objc_msgSend(v9, "count");
  v17 = v16;
  if (a3 && v16)
    *a3 = objc_retainAutorelease(v9);

  return v17 == 0;
}

- (BOOL)postProcessMigratedStore:(id)a3 migrationUUID:(id)a4 fromVersion:(int)a5 progress:(id)a6 progressUnitCount:(unint64_t)a7
{
  int v12;
  NSObject *v13;
  int v14;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  _DWORD *v23;
  void *v24;
  unsigned int v25;
  int v26;
  int v27;
  BOOL v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BOOL4 v34;
  void *v35;
  unsigned int v36;
  void *v37;
  int v38;
  int v39;
  unsigned int v40;
  __int16 v41;
  unsigned int v42;
  BOOL v43;
  unsigned int v45;
  uint64_t v46;
  _BOOL8 v47;
  _BOOL8 v48;
  __int16 v49;
  __int16 v50;
  _BOOL8 v51;
  void *v52;
  int v53;
  void *v54;
  void *v55;
  int v56;
  __int16 v57;
  __int16 v58;
  BOOL v59;
  uint64_t v60;
  __int16 v61;
  unsigned int v62;
  BOOL v63;
  uint64_t v64;
  _BOOL8 v65;
  __int16 v66;
  __int16 v67;
  uint64_t v68;
  __int16 v69;
  _BOOL8 v70;
  BOOL v71;
  _BOOL8 v72;
  BOOL v73;
  uint64_t v74;
  __int16 v75;
  __int16 v76;
  __int16 v77;
  __int16 v78;
  __int16 v79;
  char v80;
  _BOOL8 v81;
  __int16 v82;
  unsigned int v83;
  __int16 v84;
  __int16 v85;
  _BOOL8 v86;
  _BOOL8 v87;
  _BOOL8 v89;
  _BOOL8 v91;
  _BOOL8 v92;
  _BOOL8 v93;
  _BOOL8 v94;
  _BOOL8 v96;
  _BOOL8 v97;
  _BOOL8 v98;
  __int16 v100;
  _BOOL8 v101;
  _BOOL8 v102;
  _BOOL8 v103;
  _BOOL8 v104;
  _BOOL8 v105;
  _BOOL8 v106;
  _BOOL8 v107;
  _BOOL8 v108;
  __int16 v109;
  char v110;
  __int16 v111;
  __int16 v112;
  unsigned int v113;
  unsigned int v114;
  BOOL v115;
  uint64_t v116;
  __int16 v117;
  BOOL v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  __int16 v122;
  BOOL v124;
  uint64_t v125;
  __int16 v126;
  BOOL v127;
  uint64_t v128;
  __int16 v129;
  __int16 v130;
  _BOOL8 v131;
  BOOL v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  __int16 v136;
  BOOL v137;
  uint64_t v138;
  __int16 v139;
  __int16 v140;
  unsigned int v141;
  __int16 v142;
  uint64_t v143;
  __int16 v144;
  _BOOL8 v145;
  __int16 v146;
  unsigned int v147;
  BOOL v148;
  uint64_t v149;
  BOOL v150;
  uint64_t v151;
  BOOL v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  BOOL v158;
  uint64_t v159;
  BOOL v160;
  uint64_t v161;
  __int16 v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  uint64_t v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  int64_t v173;
  unint64_t v174;
  __int16 v175;
  BOOL v176;
  uint64_t v177;
  BOOL v178;
  uint64_t v179;
  unsigned int v180;
  BOOL v181;
  uint64_t v182;
  BOOL v183;
  uint64_t v184;
  BOOL v185;
  uint64_t v186;
  BOOL v187;
  uint64_t v188;
  BOOL v189;
  uint64_t v190;
  BOOL v191;
  uint64_t v192;
  BOOL v193;
  uint64_t v194;
  BOOL v195;
  uint64_t v196;
  unsigned __int16 v197;
  BOOL v199;
  BOOL v200;
  uint64_t v201;
  unsigned __int16 v202;
  PLModelMigrationActionProcessor *v203;
  void *v204;
  void *v205;
  void *v206;
  PLModelMigrationActionProcessor *v207;
  void *v208;
  void *v209;
  double v210;
  double v211;
  uint64_t v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  id v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  id v259;
  id v260;
  id v261;
  _BOOL8 v262;
  id v263;
  id v264;
  id v265;
  id v266;
  id v267;
  id v268;
  id v269;
  id v270;
  id v271;
  id v272;
  id v273;
  id v274;
  id v275;
  id v276;
  id v277;
  id v278;
  id v279;
  id v280;
  id v281;
  id v282;
  id v283;
  id v284;
  id v285;
  id v286;
  id v287;
  id v288;
  id v289;
  id v290;
  id v291;
  id v292;
  id v293;
  id v294;
  id v295;
  id v296;
  id v297;
  id v298;
  id v299;
  id v300;
  id v301;
  id v302;
  id v303;
  id v304;
  id v305;
  id v306;
  id v307;
  id v308;
  id v309;
  id v310;
  id v311;
  id v312;
  id v313;
  id v314;
  id v315;
  id v316;
  id v317;
  id v318;
  id v319;
  id v320;
  id v321;
  id v322;
  id v323;
  id v324;
  id v325;
  id v326;
  id v327;
  id v328;
  uint64_t v329;
  uint64_t v330;
  id v331;
  id v332;
  id v333;
  id v334;
  id v335;
  id v336;
  id v337;
  id v338;
  id v339;
  id v340;
  id v341;
  id v342;
  id v343;
  id v344;
  id v345;
  id v346;
  id v347;
  id v348;
  id v349;
  id v350;
  id v351;
  id v352;
  id v353;
  id v354;
  id v355;
  id v356;
  id v357;
  id v358;
  id v359;
  id v360;
  id v361;
  id v362;
  id v363;
  id v364;
  id v365;
  id v366;
  id v367;
  id v368;
  id v369;
  id v370;
  id v371;
  id v372;
  id v373;
  id v374;
  id v375;
  _BOOL8 v376;
  id v377;
  id v378;
  id v379;
  id v380;
  id v381;
  id v382;
  id v383;
  id v384;
  id v385;
  id v386;
  id v387;
  id v388;
  id v389;
  id v390;
  id v391;
  id v392;
  id v393;
  id v394;
  id v395;
  id v396;
  id v397;
  id v398;
  id v399;
  id v400;
  id v401;
  id v402;
  id v403;
  id v404;
  id v405;
  id v406;
  id v407;
  id v408;
  id v409;
  id v410;
  id v411;
  void *v412;
  void *v413;
  void *v414;
  void *v415;
  void *v416;
  uint64_t v417;
  void *v418;
  NSObject *v419;
  _BOOL4 v420;
  NSObject *v421;
  _DWORD *v422;
  void *v423;
  void *v424;
  _DWORD *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  void *v429;
  NSObject *v430;
  _BOOL4 v431;
  NSObject *v432;
  BOOL v433;
  void *v435;
  void *v436;
  void *v437;
  void *v438;
  uint64_t v439;
  int v440;
  uint64_t v441;
  unsigned int v442;
  uint64_t v443;
  int64_t v444;
  uint64_t v445;
  unsigned int v446;
  uint64_t v447;
  unsigned int v448;
  BOOL v449;
  uint64_t v450;
  _BOOL8 v451;
  _BOOL8 v452;
  id v453;
  uint64_t v454;
  _BOOL8 v455;
  uint64_t v456;
  _BOOL8 v457;
  unsigned int v458;
  BOOL v459;
  _BOOL8 v460;
  _BOOL8 v461;
  _BOOL8 v462;
  BOOL v463;
  _BOOL8 v464;
  _BOOL4 v465;
  _BOOL4 v466;
  char v467;
  _BOOL8 v468;
  _BOOL8 v469;
  _BOOL8 v470;
  _BOOL8 v471;
  _BOOL8 v472;
  _BOOL8 v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  _BOOL8 v477;
  uint64_t v478;
  _BOOL8 v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  _BOOL8 v483;
  uint64_t v484;
  _BOOL8 v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  int v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  __int16 v504;
  uint64_t v505;
  int v506;
  void *v507;
  void *context;
  id v509;
  unsigned int v510;
  unsigned int v511;
  _BOOL8 v512;
  _BOOL8 v513;
  _BOOL8 v514;
  _BOOL8 v515;
  _BOOL8 v516;
  _BOOL8 v517;
  _BOOL8 v518;
  _BOOL8 v519;
  _BOOL8 v520;
  _BOOL8 v521;
  char v522;
  unsigned int v523;
  uint64_t v524;
  id v525;
  _QWORD v526[5];
  id v527;
  _QWORD v528[5];
  id v529;
  _QWORD v530[5];
  id v531;
  _QWORD v532[5];
  id v533;
  char v534;
  _QWORD v535[5];
  id v536;
  _QWORD v537[5];
  id v538;
  _QWORD v539[5];
  id v540;
  _QWORD v541[5];
  _QWORD v542[5];
  id v543;
  _QWORD v544[5];
  id v545;
  _QWORD v546[5];
  id v547;
  _QWORD v548[5];
  id v549;
  _QWORD v550[5];
  id v551;
  _QWORD v552[5];
  id v553;
  _QWORD v554[5];
  id v555;
  _QWORD v556[5];
  id v557;
  _QWORD v558[5];
  id v559;
  _QWORD v560[5];
  id v561;
  char v562;
  _QWORD v563[5];
  id v564;
  _QWORD v565[5];
  id v566;
  _QWORD v567[5];
  id v568;
  _QWORD v569[5];
  id v570;
  _QWORD v571[5];
  id v572;
  _QWORD v573[5];
  id v574;
  _QWORD v575[5];
  id v576;
  _QWORD v577[5];
  id v578;
  _QWORD v579[5];
  id v580;
  _QWORD v581[5];
  id v582;
  _QWORD v583[5];
  id v584;
  _QWORD v585[5];
  id v586;
  _QWORD v587[5];
  id v588;
  _QWORD v589[5];
  id v590;
  _QWORD v591[5];
  id v592;
  _QWORD v593[5];
  _QWORD v594[5];
  id v595;
  _QWORD v596[5];
  id v597;
  _QWORD v598[5];
  id v599;
  _QWORD v600[5];
  id v601;
  _QWORD v602[5];
  _QWORD v603[5];
  id v604;
  _QWORD v605[5];
  id v606;
  _QWORD v607[5];
  id v608;
  _QWORD v609[5];
  id v610;
  _QWORD v611[5];
  id v612;
  _QWORD v613[5];
  id v614;
  _QWORD v615[5];
  id v616;
  _QWORD v617[5];
  _QWORD v618[5];
  _QWORD v619[5];
  id v620;
  _QWORD v621[5];
  id v622;
  _QWORD v623[5];
  id v624;
  _QWORD v625[5];
  id v626;
  _QWORD v627[5];
  id v628;
  _QWORD v629[5];
  id v630;
  char v631;
  _QWORD v632[5];
  id v633;
  _QWORD v634[5];
  _QWORD v635[5];
  id v636;
  _QWORD v637[5];
  id v638;
  _QWORD v639[5];
  id v640;
  _QWORD v641[5];
  id v642;
  _QWORD v643[5];
  id v644;
  char v645;
  _QWORD v646[5];
  id v647;
  _QWORD v648[5];
  id v649;
  _QWORD v650[5];
  id v651;
  _QWORD v652[5];
  id v653;
  _QWORD v654[5];
  _QWORD v655[5];
  id v656;
  _QWORD v657[5];
  _QWORD v658[5];
  id v659;
  _QWORD v660[5];
  id v661;
  _QWORD v662[5];
  id v663;
  _QWORD v664[5];
  id v665;
  _QWORD v666[5];
  id v667;
  _QWORD v668[5];
  id v669;
  _QWORD v670[5];
  id v671;
  _QWORD v672[5];
  id v673;
  char v674;
  _QWORD v675[5];
  id v676;
  _QWORD v677[5];
  id v678;
  _QWORD v679[5];
  id v680;
  _QWORD v681[5];
  id v682;
  _QWORD v683[5];
  id v684;
  _QWORD v685[5];
  id v686;
  _QWORD v687[5];
  id v688;
  _QWORD v689[5];
  id v690;
  _QWORD v691[5];
  id v692;
  _QWORD v693[5];
  id v694;
  _QWORD v695[4];
  id v696;
  PLModelMigrator *v697;
  _QWORD v698[5];
  id v699;
  _QWORD v700[4];
  id v701;
  PLModelMigrator *v702;
  _QWORD v703[5];
  id v704;
  _QWORD v705[5];
  id v706;
  _QWORD v707[5];
  _QWORD v708[5];
  id v709;
  _QWORD v710[5];
  id v711;
  _QWORD v712[5];
  id v713;
  _QWORD v714[5];
  id v715;
  _QWORD v716[5];
  id v717;
  _QWORD v718[5];
  id v719;
  _QWORD v720[5];
  id v721;
  _QWORD v722[5];
  _QWORD v723[5];
  id v724;
  _QWORD v725[5];
  _QWORD v726[5];
  id v727;
  _QWORD v728[5];
  id v729;
  _QWORD v730[5];
  id v731;
  _QWORD v732[5];
  id v733;
  _QWORD v734[5];
  id v735;
  char v736;
  _QWORD v737[5];
  id v738;
  _QWORD v739[5];
  id v740;
  _QWORD v741[5];
  id v742;
  int v743;
  char v744;
  _QWORD v745[5];
  id v746;
  _QWORD v747[5];
  id v748;
  _QWORD v749[5];
  id v750;
  _QWORD v751[5];
  id v752;
  _QWORD v753[5];
  id v754;
  _QWORD v755[5];
  id v756;
  _QWORD v757[5];
  id v758;
  _QWORD v759[5];
  id v760;
  _QWORD v761[5];
  id v762;
  _QWORD v763[5];
  id v764;
  _QWORD v765[5];
  id v766;
  _QWORD v767[5];
  id v768;
  _QWORD v769[5];
  id v770;
  _QWORD v771[5];
  id v772;
  _QWORD v773[5];
  _QWORD v774[5];
  id v775;
  _QWORD v776[5];
  id v777;
  _QWORD v778[5];
  id v779;
  _QWORD v780[5];
  _QWORD v781[5];
  id v782;
  _QWORD v783[5];
  id v784;
  char v785;
  _QWORD v786[5];
  id v787;
  _QWORD v788[5];
  id v789;
  char v790;
  _QWORD v791[5];
  id v792;
  _QWORD v793[5];
  id v794;
  _QWORD v795[5];
  id v796;
  _QWORD v797[5];
  id v798;
  _QWORD v799[5];
  id v800;
  _QWORD v801[5];
  id v802;
  _QWORD v803[5];
  id v804;
  _QWORD v805[5];
  id v806;
  _QWORD v807[5];
  id v808;
  _QWORD v809[5];
  id v810;
  _QWORD v811[5];
  _QWORD v812[5];
  id v813;
  _QWORD v814[5];
  id v815;
  _QWORD v816[5];
  id v817;
  _QWORD v818[5];
  id v819;
  _QWORD v820[5];
  id v821;
  _QWORD v822[5];
  id v823;
  _QWORD v824[5];
  id v825;
  _QWORD v826[5];
  id v827;
  _QWORD v828[5];
  id v829;
  _QWORD v830[5];
  id v831;
  _QWORD v832[5];
  id v833;
  _QWORD v834[5];
  id v835;
  _QWORD v836[5];
  id v837;
  _QWORD v838[5];
  id v839;
  _QWORD v840[5];
  id v841;
  _QWORD v842[5];
  id v843;
  _QWORD v844[5];
  id v845;
  _QWORD v846[5];
  _QWORD v847[5];
  _QWORD v848[5];
  id v849;
  _QWORD v850[5];
  id v851;
  _QWORD v852[5];
  id v853;
  _QWORD v854[5];
  id v855;
  _QWORD v856[5];
  id v857;
  _QWORD v858[5];
  id v859;
  _QWORD v860[5];
  id v861;
  _QWORD v862[5];
  id v863;
  _QWORD v864[5];
  id v865;
  _QWORD v866[5];
  id v867;
  _QWORD v868[5];
  id v869;
  char v870;
  _QWORD v871[5];
  id v872;
  _QWORD v873[5];
  id v874;
  _QWORD v875[5];
  id v876;
  BOOL v877;
  BOOL v878;
  _QWORD v879[5];
  id v880;
  _QWORD v881[5];
  id v882;
  _QWORD v883[5];
  id v884;
  _QWORD v885[5];
  id v886;
  _QWORD v887[5];
  id v888;
  _QWORD v889[5];
  _QWORD v890[5];
  id v891;
  char v892;
  _QWORD v893[5];
  id v894;
  _QWORD v895[5];
  id v896;
  _QWORD v897[5];
  id v898;
  _QWORD v899[5];
  id v900;
  _QWORD v901[5];
  _QWORD v902[5];
  id v903;
  _QWORD v904[5];
  id v905;
  int64_t v906;
  char v907;
  _QWORD v908[5];
  id v909;
  char v910;
  _QWORD v911[5];
  id v912;
  char v913;
  _QWORD v914[5];
  id v915;
  _QWORD v916[5];
  id v917;
  _QWORD v918[5];
  id v919;
  _QWORD v920[5];
  id v921;
  _QWORD v922[5];
  id v923;
  char v924;
  _QWORD v925[5];
  id v926;
  char v927;
  _QWORD v928[5];
  id v929;
  _QWORD v930[5];
  id v931;
  char v932;
  _QWORD v933[5];
  id v934;
  char v935;
  _QWORD v936[5];
  id v937;
  char v938;
  _QWORD v939[5];
  id v940;
  char v941;
  _QWORD v942[5];
  id v943;
  _QWORD v944[5];
  id v945;
  _QWORD v946[5];
  id v947;
  _QWORD v948[5];
  id v949;
  _QWORD v950[5];
  id v951;
  BOOL v952;
  _QWORD v953[5];
  id v954;
  BOOL v955;
  _QWORD v956[5];
  id v957;
  _QWORD v958[5];
  id v959;
  _QWORD v960[5];
  id v961;
  char v962;
  int v963;
  int v964;
  __int16 v965;
  int v966;
  _DWORD v967[8];
  __int128 v968;
  __int128 v969;
  __int128 v970;
  __int128 v971;
  __int128 v972;
  __int128 v973;
  __int128 v974;
  __int128 v975;
  __int128 v976;
  __int128 v977;
  __int128 v978;
  __int128 v979;
  __int128 v980;
  __int128 v981;
  __int128 v982;
  __int128 v983;
  __int128 v984;
  __int128 v985;
  __int128 v986;
  __int128 v987;
  __int128 v988;
  __int128 v989;
  __int128 v990;
  __int128 v991;
  __int128 v992;
  __int128 v993;
  __int128 v994;
  __int128 v995;
  __int128 v996;
  __int128 v997;
  uint64_t v998;

  v998 = *MEMORY[0x1E0C80C00];
  v453 = a3;
  v525 = a4;
  v509 = a6;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v435 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v436 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v435, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 3273, CFSTR("%@ only valid in assetsd!"), v436);

  }
  v12 = postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount__postProcessMigratedStoreGuard;
  if (postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount__postProcessMigratedStoreGuard >= 1)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      v14 = postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount__postProcessMigratedStoreGuard;
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v967[0] = 67109634;
      v967[1] = v14;
      LOWORD(v967[2]) = 2112;
      *(_QWORD *)((char *)&v967[2] + 2) = 0;
      HIWORD(v967[4]) = 2112;
      *(_QWORD *)&v967[5] = v15;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Violating post processing guard (%d), postProcessMigratedStore:fromVersion: should never run simultaneously:\n\n----------------------PREVIOUS STACK %@\n\n-------------------CURRENT STACK %@", (uint8_t *)v967, 0x1Cu);

    }
    v12 = postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount__postProcessMigratedStoreGuard;
  }
  postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount__postProcessMigratedStoreGuard = v12 + 1;
  -[PLModelMigrator _setIsPostProcessingLightWeightMigration:](self, "_setIsPostProcessingLightWeightMigration:", 1);
  v16 = +[PLModelMigrator currentModelVersion](PLModelMigrator, "currentModelVersion");
  if (v16 <= a5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v437 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v437, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 3287, CFSTR("Previous store version must be less than current version"));

  }
  if (a5 <= 6005)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v438 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v438, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 3288, CFSTR("Previous store version is unsupported"));

  }
  v17 = MEMORY[0x19AEC1554]();
  -[PLModelMigrator migrationLogger](self, "migrationLogger");
  v18 = objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    v19 = (void *)v18;
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_INFO);

    if (v21)
    {
      v996 = 0u;
      v997 = 0u;
      v994 = 0u;
      v995 = 0u;
      v992 = 0u;
      v993 = 0u;
      v990 = 0u;
      v991 = 0u;
      v988 = 0u;
      v989 = 0u;
      v986 = 0u;
      v987 = 0u;
      v984 = 0u;
      v985 = 0u;
      v982 = 0u;
      v983 = 0u;
      v980 = 0u;
      v981 = 0u;
      v978 = 0u;
      v979 = 0u;
      v976 = 0u;
      v977 = 0u;
      v974 = 0u;
      v975 = 0u;
      v972 = 0u;
      v973 = 0u;
      v970 = 0u;
      v971 = 0u;
      v968 = 0u;
      v969 = 0u;
      memset(v967, 0, sizeof(v967));
      PLMigrationGetLog();
      v22 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v22, OS_LOG_TYPE_INFO);
      v963 = 67109376;
      v964 = a5;
      v965 = 1024;
      v966 = v16;
      LODWORD(v439) = 14;
      v23 = (_DWORD *)_os_log_send_and_compose_impl();

      -[PLModelMigrator migrationLogger](self, "migrationLogger", &v963, v439);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "logWithMessage:fromCodeLocation:type:", v23, "PLModelMigrator.m", 3301, 1);

      if (v23 != v967)
        free(v23);
    }
  }
  v440 = v16;
  v25 = a5 - 16040;
  v26 = _os_feature_enabled_impl();
  if (a5 < 17038)
    v27 = v26;
  else
    v27 = 0;
  v506 = PLPlatformMomentsSupported();
  v28 = v25 < 0x8D;
  if (v25 < 0x8D)
    v29 = 1;
  else
    v29 = v27;
  if (a5 < 13340)
    v30 = 1;
  else
    v30 = v29;
  v491 = v30;
  v31 = PLPlatformMomentsSupported() & v30;
  if (v31)
    v32 = 2;
  else
    v32 = 1;
  if (a5 == 6006)
    v33 = v32;
  else
    v33 = v31;
  v34 = -[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled");
  -[PLModelMigrator pathManager](self, "pathManager");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = objc_msgSend(v35, "isDeviceRestoreSupported");

  -[PLModelMigrator pathManager](self, "pathManager");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = objc_msgSend(v37, "isDeviceRestoreSupported");

  v39 = v33 + v38;
  context = (void *)v17;
  v449 = v28;
  v448 = v36;
  if (a5 < 12136 || (a5 - 13001) <= 0x103)
  {
    v40 = PLPlatformSearchSupported();
    v39 += PLPlatformSearchSupported();
    v441 = v40;
  }
  else
  {
    v441 = 0;
  }
  v41 = a5 < 8006;
  v42 = a5 - 9000;
  v43 = a5 >= 8023 && (a5 - 9306) >= 0x460;
  v523 = a5 - 11000;
  v45 = !v43 || (a5 - 11000) < 0x13;
  v511 = a5 - 9000;
  if (v42 < 0x2C)
    v46 = 1;
  else
    v46 = v45;
  v47 = v42 < 0x2C || a5 < 8062;
  v48 = a5 < 8044 && !v34;
  if (a5 < 8008)
    ++v41;
  if (a5 < 8011)
    ++v41;
  if (a5 < 8027)
    ++v41;
  if (a5 < 8029)
    ++v41;
  if (a5 < 8030)
    ++v41;
  if (a5 < 8061)
    ++v41;
  if (a5 < 8033)
    ++v41;
  if (a5 < 8045)
    ++v41;
  if (a5 < 8046)
    ++v41;
  if (a5 < 8052)
    ++v41;
  v49 = v41 + ((a5 < 8027) ^ (a5 < 8049));
  if ((a5 - 8047) < 4)
    ++v49;
  v451 = v47;
  v450 = v46;
  v457 = v48;
  v50 = v49 + v47 + v46 + v48 + v39;
  v51 = a5 < 8058 && v34;
  -[PLModelMigrator pathManager](self, "pathManager");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v53 = objc_msgSend(v52, "isDeviceRestoreSupported");

  if (v53)
  {
    -[PLModelMigrator deviceRestoreMigrationSupport](self, "deviceRestoreMigrationSupport");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v54, "isRestoreFromBackupSourceCloud"))
    {
      -[PLModelMigrator postProcessingToken](self, "postProcessingToken");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      v56 = objc_msgSend(v55, "isModelMigrationRestorePostProcessingComplete") ^ 1;

    }
    else
    {
      v56 = 0;
    }

  }
  else
  {
    v56 = 0;
  }
  v452 = v51;
  if (v51)
    v57 = 2;
  else
    v57 = 1;
  if (a5 >= 8058)
    v57 = 0;
  v58 = a5 < 8064;
  if (a5 < 8065)
    ++v58;
  v59 = a5 >= 8200 && (a5 - 8300) >= 3;
  v60 = !v59;
  v454 = v60;
  if (!v59)
    ++v58;
  v61 = v58 + v57;
  v62 = a5 & 0xFFFFFFFE;
  v63 = a5 < 8101 || v62 == 8200;
  v64 = v63;
  v445 = v64;
  v65 = v63 && v34;
  v455 = v65;
  if (v63)
    v66 = v34 + 1;
  else
    v66 = v34;
  if (!v63)
    v66 = 0;
  v67 = v61 + v66 + v50;
  v522 = v56;
  if (a5 < 8302)
    v68 = v56 ^ 1u;
  else
    v68 = 0;
  v69 = a5 < 8304;
  v70 = a5 < 9015 && v34;
  v71 = a5 < 9009 && v34;
  v459 = v71;
  v72 = a5 < 9051 && v34;
  if (a5 < 8312)
    ++v69;
  if (a5 < 9001)
    ++v69;
  if (a5 < 9004)
    ++v69;
  if (a5 < 9010)
    ++v69;
  if (a5 < 9011)
    ++v69;
  if (a5 < 9023)
    ++v69;
  if (a5 < 9031)
    ++v69;
  if (a5 < 9037)
    ++v69;
  if (a5 < 9041)
    ++v69;
  if (a5 < 9042)
    ++v69;
  if (a5 < 9046)
    ++v69;
  if (a5 < 9047)
    ++v69;
  if (a5 < 9048)
    ++v69;
  if (a5 < 9201)
    ++v69;
  if (a5 < 9204)
    ++v69;
  if (v511 < 0x22)
    ++v69;
  if (v511 < 0x28)
    ++v69;
  v73 = a5 < 8318 || v62 == 9000;
  v74 = v73;
  v456 = v74;
  v75 = v69 + ((a5 < 8029) ^ (a5 < 9038));
  if (v73)
    ++v75;
  v461 = v72;
  v460 = v70;
  v447 = v68;
  v76 = v70 + v72 + v67 + v68;
  if (a5 >= 9205)
    v77 = 0;
  else
    v77 = 3;
  v78 = v75 + v76 + v77;
  v465 = -[PLModelMigrator sceneStepRequiredForPreviousStoreVersion:](self, "sceneStepRequiredForPreviousStoreVersion:", a5);
  v79 = -[PLModelMigrator sceneStepRequiredForPreviousStoreVersion:](self, "sceneStepRequiredForPreviousStoreVersion:", a5);
  v80 = 0;
  v81 = a5 < 10067 && v34;
  if (a5 >= 10027)
    v82 = a5 < 9302;
  else
    v82 = (a5 < 9302) + 1;
  v83 = a5 - 10000;
  if (a5 < 10036)
    ++v82;
  if (a5 < 10041)
    ++v82;
  if (a5 < 10065)
    ++v82;
  if (a5 < 10070)
    ++v82;
  if (a5 < 10079)
    ++v82;
  if (a5 < 10088)
    ++v82;
  if (a5 < 10102)
    ++v82;
  if (a5 < 10106)
    ++v82;
  if (a5 < 10109)
    ++v82;
  if (a5 < 10112)
    ++v82;
  if (v83 < 0x25)
    ++v82;
  if ((a5 & 0xFFFFFFFC) == 0x2754)
    ++v82;
  if (v83 < 0x67)
    ++v82;
  v446 = a5 - 10000;
  if (v83 < 0x75)
    ++v82;
  v462 = v81;
  v84 = v82 + v81 + v79;
  v463 = a5 < 10118 && v34;
  if (v463)
    v85 = 2;
  else
    v85 = 0;
  v504 = v84 + v85 + v78;
  v458 = a5 & 0xFFFFFFFE;
  v86 = a5 < 10151 && v34;
  v513 = v86;
  v510 = a5 - 11001;
  v87 = (a5 - 11001) < 0x30 || a5 < 10203;
  v512 = v87;
  v89 = a5 < 10300 || (a5 - 10400) < 3;
  v516 = v89;
  v91 = a5 < 10427 || v523 < 0x17;
  v515 = v91;
  v92 = a5 < 11007 && v34;
  v518 = v92;
  v93 = a5 < 11011 && v34;
  v517 = v93;
  v94 = (a5 - 11014) < 7 && v34;
  v519 = v94;
  v96 = a5 < 10428 || v523 < 0x1B;
  v514 = v96;
  v97 = (a5 - 11004) < 0x1B && v34;
  v520 = v97;
  v98 = a5 == 11038 && v34;
  v521 = v98;
  if (a5 < 11043 && v34)
    v80 = objc_msgSend(MEMORY[0x1E0D11348], "serverSupportsVision");
  v467 = v80;
  v466 = -[PLModelMigrator faceQualityResetRequiredForPreviousStoreVersion:](self, "faceQualityResetRequiredForPreviousStoreVersion:", a5);
  v100 = -[PLModelMigrator faceQualityResetRequiredForPreviousStoreVersion:](self, "faceQualityResetRequiredForPreviousStoreVersion:", a5);
  v101 = (a5 - 11048) < 0x10 && v34;
  v102 = a5 < 11074 && v34;
  v103 = a5 < 11075 && v34;
  v104 = a5 < 11076 && v34;
  v105 = a5 < 11077 && v34;
  v106 = a5 < 11081 && v34;
  v107 = a5 < 11089 && v34;
  v108 = a5 < 13016 && v34;
  v109 = (a5 < 10150)
       + (a5 < 10123)
       + (a5 < 10203)
       + (a5 < 10204)
       + (a5 < 10206)
       + (a5 < 10207)
       + (a5 < 11000)
       + (a5 < 11001)
       + (a5 < 11022)
       + (a5 < 11024)
       + (a5 < 11025)
       + (a5 < 11043);
  if (a5 < 11047)
    ++v109;
  if (a5 < 11048)
    ++v109;
  if (a5 < 11049)
    ++v109;
  if (a5 < 11052)
    ++v109;
  if (a5 < 11060)
    ++v109;
  if (a5 < 11061)
    ++v109;
  v110 = !v34;
  if (a5 < 11063)
    ++v109;
  if (a5 < 11068)
    ++v109;
  if (a5 < 11069)
    ++v109;
  if (a5 < 11070)
    ++v109;
  if (a5 < 11079)
    ++v109;
  if (a5 < 11080)
    ++v109;
  if (a5 < 11200)
    ++v109;
  if (a5 < 11203)
    ++v109;
  if (a5 < 12000)
  {
    ++v109;
    v110 = 1;
  }
  if (a5 < 12035)
    ++v109;
  if (a5 < 13027)
    ++v109;
  if (a5 < 13036)
    ++v109;
  if (a5 < 13050)
    ++v109;
  if (a5 < 12036)
    ++v109;
  v111 = v109 + (v62 == 10124) + ((a5 - 11022) < 4) + ((a5 - 10425) < 0x25B);
  if (v510 < 0x40)
    ++v111;
  if ((a5 - 10075) >= 0x3F1)
    v112 = v111;
  else
    v112 = v111 + 1;
  v113 = a5 - 12000;
  if ((a5 - 11079) < 0xC)
    ++v112;
  v114 = a5 - 13000;
  v115 = v113 >= 0x42 && v114 >= 0x1A;
  v116 = !v115;
  v474 = v116;
  v117 = v112 + v512 + v516 + v515 + v514;
  if (!v115)
    ++v117;
  v118 = v113 >= 0x40 && v114 >= 0x15;
  v119 = !v118;
  v475 = v119;
  if (!v118)
    ++v117;
  v120 = v113 >= 0x58 && v114 >= 0x38;
  v121 = !v120;
  v481 = v121;
  if (!v120)
    ++v117;
  v468 = v102;
  v469 = v103;
  v470 = v104;
  v471 = v105;
  v472 = v106;
  v473 = v107;
  v479 = v108;
  v464 = v101;
  v122 = v117
       + v513
       + v518
       + v517
       + v521
       + v102
       + v103
       + v104
       + v105
       + v106
       + v107
       + v108
       + v519
       + v520
       + v101
       + v504
       + v100;
  v124 = a5 >= 0x2F3E && a5 != 12097 && v114 >= 0x3E;
  v125 = !v124;
  if (v124)
    v126 = v122;
  else
    v126 = v122 + 1;
  v127 = (v110 & 1) == 0;
  if ((v110 & 1) != 0)
    v128 = 0;
  else
    v128 = v125;
  v478 = v128;
  if (v127)
    v129 = v126;
  else
    v129 = v122;
  v130 = a5 < 13089;
  v131 = a5 < 13180 && v34;
  if (a5 < 13099)
    ++v130;
  if (a5 < 13103)
    ++v130;
  if (a5 < 13106)
    ++v130;
  if (a5 < 13117)
    ++v130;
  if (a5 < 13119)
    ++v130;
  if (a5 < 13137)
    ++v130;
  if (a5 < 13152)
    ++v130;
  if (a5 < 13187)
    ++v130;
  v132 = v113 >= 0x77 && v114 >= 0x46;
  v133 = !v132;
  v476 = v133;
  if (!v132)
    ++v130;
  v134 = v113 >= 0x7D && v114 >= 0x52;
  v135 = !v134;
  v480 = v135;
  if (!v134)
    ++v130;
  v136 = v130 + v131 + v129;
  v137 = v113 >= 0x12C && v114 >= 0xBC;
  v138 = !v137;
  if (v137)
    v139 = v136;
  else
    v139 = v136 + 1;
  if (!v34)
    v138 = 0;
  v482 = v138;
  if (v34)
    v140 = v139;
  else
    v140 = v136;
  v141 = PLPlatformExtendedAttributesSupported();
  v142 = PLPlatformExtendedAttributesSupported();
  if (v114 < 0xFA)
    v143 = v141;
  else
    v143 = 0;
  if (v114 < 0xFA)
    v144 = v142;
  else
    v144 = 0;
  v145 = (a5 - 13355) < 0x9D && v34;
  if (a5 >= 13193)
    v146 = a5 < 13191;
  else
    v146 = (a5 < 13191) + 1;
  if (a5 < 13195)
    ++v146;
  if (a5 < 13196)
    ++v146;
  if (a5 < 13200)
    ++v146;
  if (a5 < 13307)
    ++v146;
  if (a5 < 13222)
    ++v146;
  if (a5 < 13242)
    ++v146;
  if (a5 < 13301)
    ++v146;
  if (a5 < 13304)
    ++v146;
  if (a5 < 13309)
    ++v146;
  if (a5 < 13323)
    ++v146;
  if (a5 < 13260)
    ++v146;
  if (a5 < 13351)
    ++v146;
  if (a5 < 13533)
    ++v146;
  if (a5 < 14005)
    ++v146;
  if (a5 < 14009)
    ++v146;
  if (a5 < 18083)
    ++v146;
  if (a5 < 14016)
    ++v146;
  if (a5 < 14021)
    ++v146;
  if (a5 < 14025)
    ++v146;
  if (a5 < 14027)
    ++v146;
  if (a5 < 14032)
    ++v146;
  if (a5 == 14037)
    ++v146;
  if (a5 < 14039)
    ++v146;
  if (v114 < 0xE3)
    ++v146;
  if (v114 < 0x12F)
    ++v146;
  if (v114 < 0x1F8)
    ++v146;
  if (v114 < 0x213)
    ++v146;
  if (v114 < 0x1FB)
    ++v146;
  if ((a5 - 13513) < 3)
    ++v146;
  v147 = a5 - 15000;
  v148 = (a5 - 14021) >= 0x13 && v147 >= 3;
  v149 = !v148;
  if (!v148)
    ++v146;
  v150 = a5 < 14043 || a5 >> 3 == 1875;
  v151 = v150;
  if (v150)
    ++v146;
  v152 = a5 >= 14044 && v147 >= 9;
  v153 = !v152;
  if (!v152)
    ++v146;
  v154 = a5 >= 14045 && v147 >= 0xA;
  v155 = !v154;
  if (!v154)
    ++v146;
  v156 = (a5 - 14040) >= 6 && (a5 - 15003) >= 8;
  v157 = !v156;
  if (!v156)
    ++v146;
  v158 = a5 >= 14047 && v147 >= 0xD;
  v159 = !v158;
  if (!v158)
    ++v146;
  v160 = a5 >= 14051 && v147 >= 0x10;
  v161 = !v160;
  if (!v160)
    ++v146;
  v162 = v146 + v145 + v140 + v144;
  v501 = v161;
  v499 = v159;
  v497 = v157;
  v495 = v155;
  v493 = v153;
  v490 = v151;
  v488 = v149;
  v486 = v145;
  v484 = v143;
  v483 = v131;
  if ((a5 - 14001) < 0x3A || v147 <= 0x15)
  {
    -[PLModelMigrator options](self, "options");
    v163 = (void *)objc_claimAutoreleasedReturnValue();
    if (v163)
    {
      v164 = (void *)MEMORY[0x1E0D73280];
      -[PLModelMigrator pathManager](self, "pathManager");
      v165 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v165, "libraryURL");
      v166 = (void *)objc_claimAutoreleasedReturnValue();
      v442 = objc_msgSend(v164, "isSystemPhotoLibraryURL:", v166) ^ 1;

    }
    else
    {
      v442 = 0;
    }

    -[PLModelMigrator options](self, "options");
    v167 = objc_claimAutoreleasedReturnValue();
    if (v167)
    {
      v168 = (void *)v167;
      v169 = (void *)MEMORY[0x1E0D73280];
      -[PLModelMigrator pathManager](self, "pathManager");
      v170 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v170, "libraryURL");
      v171 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v169) = objc_msgSend(v169, "isSystemPhotoLibraryURL:", v171) ^ 1;

      v162 += (__int16)v169;
    }
  }
  else
  {
    v442 = 0;
  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  v173 = +[PLThumbnailManagerCore requiredThumbnailResetTypeWithPathManager:comparedToConfigPhase:](PLThumbnailManager, "requiredThumbnailResetTypeWithPathManager:comparedToConfigPhase:", v172, 1);

  v174 = v173 - 1;
  if (a5 >= 15059)
    v175 = 1;
  else
    v175 = 2;
  v176 = a5 >= 14060 && v147 >= 0x17;
  v177 = !v176;
  v487 = v177;
  if (!v176)
    ++v175;
  v178 = a5 >= 14087 && v147 >= 0x1E;
  v179 = !v178;
  v489 = v179;
  v180 = a5 - 14000;
  if (!v178)
    ++v175;
  v181 = v180 >= 0x59 && v147 >= 0x20;
  v182 = !v181;
  v492 = v182;
  if (!v181)
    ++v175;
  v183 = a5 >= 14093 && v147 >= 0x24;
  v184 = !v183;
  v494 = v184;
  if (!v183)
    ++v175;
  v185 = a5 >= 14101 && v147 >= 0x26;
  v186 = !v185;
  v496 = v186;
  if (!v185)
    ++v175;
  v187 = a5 >= 14102 && v147 >= 0x27;
  v188 = !v187;
  v498 = v188;
  if (!v187)
    ++v175;
  v189 = a5 >= 14103 && v147 >= 0x28;
  v190 = !v189;
  v500 = v190;
  if (!v189)
    ++v175;
  v191 = v180 >= 0x6A && v147 >= 0x29;
  v192 = !v191;
  v502 = v192;
  if (!v191)
    ++v175;
  v193 = a5 >= 14204 && v147 >= 0x32;
  v194 = !v193;
  v503 = v194;
  if (!v193)
    ++v175;
  v195 = a5 >= 14205 && v147 >= 0x34;
  v196 = !v195;
  v505 = v196;
  if (!v195)
    ++v175;
  v197 = v175 + v162;
  if (v174 < 2)
    ++v197;
  v199 = a5 < 14201 || v147 < 0x2D || v458 == 10124;
  v444 = v173;
  v200 = v199 || v173 == 2;
  v201 = v200;
  v524 = v201;
  if (v200)
    v202 = v197 + 1;
  else
    v202 = v197;
  v203 = [PLModelMigrationActionProcessor alloc];
  -[PLModelMigrator pathManager](self, "pathManager");
  v204 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
  v205 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator migrationLogger](self, "migrationLogger");
  v206 = (void *)objc_claimAutoreleasedReturnValue();
  v207 = -[PLModelMigrationActionProcessor initWithUUID:pathManager:migrationActionType:analyticsEventManager:logger:progressUnitCount:](v203, "initWithUUID:pathManager:migrationActionType:analyticsEventManager:logger:progressUnitCount:", v525, v204, 1, v205, v206, v202);

  -[PLModelMigrationActionProcessor progress](v207, "progress");
  v208 = (void *)objc_claimAutoreleasedReturnValue();

  if (v208)
  {
    -[PLModelMigrationActionProcessor progress](v207, "progress");
    v209 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v509, "addChild:withPendingUnitCount:", v209, a7);

  }
  v443 = v506 & v491;
  -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
  v507 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v507, "startRecordingTimedEventToken");
  v211 = v210;
  if (-[PLModelMigrator _shouldTriggerLightweightMigrationFailureForInternalTesting](self, "_shouldTriggerLightweightMigrationFailureForInternalTesting"))
  {
    -[PLModelMigrationActionProcessor setSuccess:](v207, "setSuccess:", 0);
  }
  v477 = v114 < 0x12F;
  v212 = MEMORY[0x1E0C809B0];
  v960[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke;
  v960[0] = MEMORY[0x1E0C809B0];
  v960[1] = 3221225472;
  v960[3] = &unk_1E3664E08;
  v960[4] = self;
  v213 = v453;
  v961 = v213;
  v962 = v522;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Delete iCloud restore synced/shared content"), v448, v960);
  v958[0] = v212;
  v958[1] = 3221225472;
  v958[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_342;
  v958[3] = &unk_1E36731D8;
  v958[4] = self;
  v214 = v213;
  v959 = v214;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Post processing from 6006"), a5 == 6006, v958);
  v956[0] = v212;
  v956[1] = 3221225472;
  v956[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2;
  v956[3] = &unk_1E36731D8;
  v956[4] = self;
  v215 = v214;
  v957 = v215;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Updating panorama subtypes"), v445, v956);
  v953[0] = v212;
  v953[1] = 3221225472;
  v953[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3;
  v953[3] = &unk_1E3664E08;
  v953[4] = self;
  v216 = v215;
  v954 = v216;
  v955 = v449;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Rebuilding all moments after lightweight migration."), v443, v953);
  v950[0] = v212;
  v950[1] = 3221225472;
  v950[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_353;
  v950[3] = &unk_1E3664E08;
  v950[4] = self;
  v217 = v216;
  v951 = v217;
  v952 = a5 < 13340;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Adding UUIDs to AlbumLists and MomentLists"), a5 < 8006, v950);
  v948[0] = v212;
  v948[1] = 3221225472;
  v948[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_356;
  v948[3] = &unk_1E36731D8;
  v948[4] = self;
  v218 = v217;
  v949 = v218;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Generating location hashes for assets"), a5 < 8008, v948);
  v946[0] = v212;
  v946[1] = 3221225472;
  v946[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_359;
  v946[3] = &unk_1E36731D8;
  v946[4] = self;
  v219 = v218;
  v947 = v219;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrating location data for assets"), v447, v946);
  v944[0] = v212;
  v944[1] = 3221225472;
  v944[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4;
  v944[3] = &unk_1E36731D8;
  v944[4] = self;
  v220 = v219;
  v945 = v220;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Setting up root folder"), a5 < 8011, v944);
  v942[0] = v212;
  v942[1] = 3221225472;
  v942[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5;
  v942[3] = &unk_1E36731D8;
  v942[4] = self;
  v221 = v220;
  v943 = v221;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Forcing album metadata to disk"), v450, v942);
  v939[0] = v212;
  v939[1] = 3221225472;
  v939[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6;
  v939[3] = &unk_1E3664E08;
  v941 = v522;
  v939[4] = self;
  v222 = v221;
  v940 = v222;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrating SLM files"), a5 < 8027, v939);
  v936[0] = v212;
  v936[1] = 3221225472;
  v936[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_370;
  v936[3] = &unk_1E3664E08;
  v938 = v522;
  v936[4] = self;
  v223 = v222;
  v937 = v223;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Persisting place annotation data"), a5 < 9201, v936);
  v933[0] = v212;
  v933[1] = 3221225472;
  v933[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_374;
  v933[3] = &unk_1E3664E08;
  v935 = v522;
  v933[4] = self;
  v224 = v223;
  v934 = v224;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing up asset persistence"), v451, v933);
  v930[0] = v212;
  v930[1] = 3221225472;
  v930[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_378;
  v930[3] = &unk_1E3664E08;
  v932 = v522;
  v930[4] = self;
  v225 = v224;
  v931 = v225;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Generating addedDate for assets"), a5 < 8029, v930);
  v928[0] = v212;
  v928[1] = 3221225472;
  v928[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_382;
  v928[3] = &unk_1E36731D8;
  v928[4] = self;
  v226 = v225;
  v929 = v226;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populating adjustmentsState"), a5 < 8030, v928);
  v925[0] = v212;
  v925[1] = 3221225472;
  v925[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_385;
  v925[3] = &unk_1E3664E08;
  v927 = v522;
  v925[4] = self;
  v227 = v226;
  v926 = v227;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing video dimensions"), a5 < 8033, v925);
  v922[0] = v212;
  v922[1] = 3221225472;
  v922[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_389;
  v922[3] = &unk_1E3664E08;
  v924 = v522;
  v922[4] = self;
  v228 = v227;
  v923 = v228;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing orientations previously corrupted by adjustment migration"), (a5 - 8047) < 4, v922);
  v920[0] = v212;
  v920[1] = 3221225472;
  v920[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_393;
  v920[3] = &unk_1E36731D8;
  v920[4] = self;
  v229 = v228;
  v921 = v229;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing album order in Albums list."), a5 < 8052, v920);
  v918[0] = v212;
  v918[1] = 3221225472;
  v918[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_396;
  v918[3] = &unk_1E36731D8;
  v918[4] = self;
  v230 = v229;
  v919 = v230;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing orientation of images in Shared Photo Streams"), a5 < 8058, v918);
  v916[0] = v212;
  v916[1] = 3221225472;
  v916[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_399;
  v916[3] = &unk_1E36731D8;
  v916[4] = self;
  v231 = v230;
  v917 = v231;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing broken burst picks"), a5 < 8045, v916);
  v914[0] = v212;
  v914[1] = 3221225472;
  v914[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_402;
  v914[3] = &unk_1E36731D8;
  v914[4] = self;
  v232 = v231;
  v915 = v232;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing cloud resources."), v452, v914);
  v911[0] = v212;
  v911[1] = 3221225472;
  v911[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_405;
  v911[3] = &unk_1E3664E08;
  v911[4] = self;
  v233 = v232;
  v912 = v233;
  v913 = v524;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing incorrect thumbnail tables"), v458 == 10124, v911);
  v908[0] = v212;
  v908[1] = 3221225472;
  v908[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_408;
  v908[3] = &unk_1E3664E08;
  v910 = v522;
  v908[4] = self;
  v234 = v233;
  v909 = v234;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing HEIF assets with incorrect metadata"), a5 < 11068, v908);
  v904[0] = v212;
  v904[1] = 3221225472;
  v904[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_412;
  v904[3] = &unk_1E3664E30;
  v904[4] = self;
  v235 = v234;
  v905 = v235;
  v906 = v444;
  v907 = v524;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting all thumbs and thumb index data, and request a thumbnail rebuild"), v174 < 2, v904);
  v902[0] = v212;
  v902[1] = 3221225472;
  v902[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_415;
  v902[3] = &unk_1E36731D8;
  v902[4] = self;
  v236 = v235;
  v903 = v236;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Verifying cloud assets local availability"), a5 < 8061, v902);
  v901[0] = v212;
  v901[1] = 3221225472;
  v901[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_418;
  v901[3] = &unk_1E3670EA0;
  v901[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Disabling iCloudPhoto, writing a disable file marker"), v457, v901);
  v899[0] = v212;
  v899[1] = 3221225472;
  v899[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_421;
  v899[3] = &unk_1E36731D8;
  v899[4] = self;
  v237 = v236;
  v900 = v237;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing events from database"), a5 < 8046, v899);
  v897[0] = v212;
  v897[1] = 3221225472;
  v897[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_424;
  v897[3] = &unk_1E36731D8;
  v897[4] = self;
  v238 = v237;
  v898 = v238;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrating slo-mo adjustments files that used NSKeyedArchiver to use NSPropertyListSerialization format"), (a5 < 8027) ^ (a5 < 8049), v897);
  v895[0] = v212;
  v895[1] = 3221225472;
  v895[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_427;
  v895[3] = &unk_1E36731D8;
  v895[4] = self;
  v239 = v238;
  v896 = v239;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixinf multiple master relationships"), a5 < 8064, v895);
  v893[0] = v212;
  v893[1] = 3221225472;
  v893[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_434;
  v893[3] = &unk_1E36731D8;
  v893[4] = self;
  v240 = v239;
  v894 = v240;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repersist duplicated originals"), a5 < 8065, v893);
  v890[0] = v212;
  v890[1] = 3221225472;
  v890[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_437;
  v890[3] = &unk_1E3664E08;
  v892 = v522;
  v890[4] = self;
  v241 = v240;
  v891 = v241;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populate face regions"), v454, v890);
  v889[0] = v212;
  v889[1] = 3221225472;
  v889[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_441;
  v889[3] = &unk_1E3670EA0;
  v889[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Force a reset sync after lightweight migration post processing completes"), v455, v889);
  v887[0] = v212;
  v887[1] = 3221225472;
  v887[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_444;
  v887[3] = &unk_1E36731D8;
  v887[4] = self;
  v242 = v241;
  v888 = v242;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting orderKey for albums"), a5 < 8304, v887);
  v885[0] = v212;
  v885[1] = 3221225472;
  v885[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_447;
  v885[3] = &unk_1E36731D8;
  v885[4] = self;
  v243 = v242;
  v886 = v243;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing duplicate assets"), a5 < 8312, v885);
  v883[0] = v212;
  v883[1] = 3221225472;
  v883[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_450;
  v883[3] = &unk_1E36731D8;
  v883[4] = self;
  v244 = v243;
  v884 = v244;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing visible single burst assets"), a5 < 9001, v883);
  v881[0] = v212;
  v881[1] = 3221225472;
  v881[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_453;
  v881[3] = &unk_1E36731D8;
  v881[4] = self;
  v245 = v244;
  v882 = v245;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing video JPG Path"), v456, v881);
  v879[0] = v212;
  v879[1] = 3221225472;
  v879[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_456;
  v879[3] = &unk_1E36731D8;
  v879[4] = self;
  v246 = v245;
  v880 = v246;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing sort ascending for album and folder"), a5 < 9004, v879);
  v875[0] = v212;
  v875[1] = 3221225472;
  v875[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7;
  v875[3] = &unk_1E3664E58;
  v877 = v460;
  v875[4] = self;
  v878 = v459;
  v247 = v246;
  v876 = v247;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Caching date created and itemIdentifier on resources"), v460, v875);
  v873[0] = v212;
  v873[1] = 3221225472;
  v873[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_463;
  v873[3] = &unk_1E36731D8;
  v873[4] = self;
  v248 = v247;
  v874 = v248;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Recovering single burst photos."), a5 < 9010, v873);
  v871[0] = v212;
  v871[1] = 3221225472;
  v871[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_466;
  v871[3] = &unk_1E36731D8;
  v871[4] = self;
  v249 = v248;
  v872 = v249;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populating adjustmentTimestamp on assets."), a5 < 9011, v871);
  v868[0] = v212;
  v868[1] = 3221225472;
  v868[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_469;
  v868[3] = &unk_1E3664E08;
  v870 = v522;
  v868[4] = self;
  v250 = v249;
  v869 = v250;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing incorrect added date."), (a5 < 8029) ^ (a5 < 9038), v868);
  v866[0] = v212;
  v866[1] = 3221225472;
  v866[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_473;
  v866[3] = &unk_1E36731D8;
  v866[4] = self;
  v251 = v250;
  v867 = v251;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Adding Camera capture device."), a5 < 9037, v866);
  v864[0] = v212;
  v864[1] = 3221225472;
  v864[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_476;
  v864[3] = &unk_1E36731D8;
  v864[4] = self;
  v252 = v251;
  v865 = v252;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Tagging screenshots."), a5 < 9023, v864);
  v862[0] = v212;
  v862[1] = 3221225472;
  v862[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_479;
  v862[3] = &unk_1E36731D8;
  v862[4] = self;
  v253 = v252;
  v863 = v253;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix up shared videos without thumbnails."), a5 < 9031, v862);
  v860[0] = v212;
  v860[1] = 3221225472;
  v860[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_482;
  v860[3] = &unk_1E36731D8;
  v860[4] = self;
  v254 = v253;
  v861 = v254;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Mark previously edited Irises as evaluated."), v511 < 0x22, v860);
  v858[0] = v212;
  v858[1] = 3221225472;
  v858[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_485;
  v858[3] = &unk_1E36731D8;
  v858[4] = self;
  v255 = v254;
  v859 = v255;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixup video orphans."), v511 < 0x28, v858);
  v856[0] = v212;
  v856[1] = 3221225472;
  v856[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_488;
  v856[3] = &unk_1E36731D8;
  v856[4] = self;
  v256 = v255;
  v857 = v256;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Adding cloud kindSubtype and Burst flags."), a5 < 9041, v856);
  v854[0] = v212;
  v854[1] = 3221225472;
  v854[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_491;
  v854[3] = &unk_1E36731D8;
  v854[4] = self;
  v257 = v256;
  v855 = v257;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixup itemIdentifier on videocmpl resources"), a5 < 9042, v854);
  v852[0] = v212;
  v852[1] = 3221225472;
  v852[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8;
  v852[3] = &unk_1E36731D8;
  v852[4] = self;
  v258 = v257;
  v853 = v258;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixup local path for videocmpl derivatives"), v461, v852);
  v850[0] = v212;
  v850[1] = 3221225472;
  v850[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9;
  v850[3] = &unk_1E36731D8;
  v850[4] = self;
  v259 = v258;
  v851 = v259;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixup empty local path for video resources"), a5 < 9048, v850);
  v848[0] = v212;
  v848[1] = 3221225472;
  v848[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10;
  v848[3] = &unk_1E36731D8;
  v848[4] = self;
  v260 = v259;
  v849 = v260;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Persist videoCompl properties"), a5 < 9046, v848);
  v847[0] = v212;
  v847[1] = 3221225472;
  v847[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11;
  v847[3] = &unk_1E3670EA0;
  v847[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Clean out invalid asset <--> album mapping records."), a5 < 9047, v847);
  v846[0] = v212;
  v846[1] = 3221225472;
  v846[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12;
  v846[3] = &unk_1E3670EA0;
  v846[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Applying data protection to DCIM (B->C)"), a5 < 9204, v846);
  v844[0] = v212;
  v844[1] = 3221225472;
  v844[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13;
  v844[3] = &unk_1E36731D8;
  v844[4] = self;
  v261 = v260;
  v845 = v261;
  v262 = a5 < 9205;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting failed assets"), v262, v844);
  v842[0] = v212;
  v842[1] = 3221225472;
  v842[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14;
  v842[3] = &unk_1E36731D8;
  v842[4] = self;
  v263 = v261;
  v843 = v263;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting failed cloud masters"), v262, v842);
  v840[0] = v212;
  v840[1] = 3221225472;
  v840[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15;
  v840[3] = &unk_1E36731D8;
  v840[4] = self;
  v264 = v263;
  v841 = v264;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting upload attempts"), v262, v840);
  v838[0] = v212;
  v838[1] = 3221225472;
  v838[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_16;
  v838[3] = &unk_1E36731D8;
  v838[4] = self;
  v265 = v264;
  v839 = v265;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix cloudMaster cloudLocalState"), a5 < 9302, v838);
  v836[0] = v212;
  v836[1] = 3221225472;
  v836[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_17;
  v836[3] = &unk_1E36731D8;
  v836[4] = self;
  v266 = v265;
  v837 = v266;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populating representative assets"), a5 < 10027, v836);
  v834[0] = v212;
  v834[1] = 3221225472;
  v834[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_18;
  v834[3] = &unk_1E36731D8;
  v834[4] = self;
  v267 = v266;
  v835 = v267;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Clearing all analysis states"), v446 < 0x25, v834);
  v832[0] = v212;
  v832[1] = 3221225472;
  v832[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_19;
  v832[3] = &unk_1E36731D8;
  v832[4] = self;
  v268 = v267;
  v833 = v268;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing up unknown analysis states"), a5 < 10070, v832);
  v830[0] = v212;
  v830[1] = 3221225472;
  v830[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_20;
  v830[3] = &unk_1E36731D8;
  v830[4] = self;
  v269 = v268;
  v831 = v269;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing up mismatched analysis state uuids"), (a5 & 0xFFFFFFFC) == 10068, v830);
  v828[0] = v212;
  v828[1] = 3221225472;
  v828[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_21;
  v828[3] = &unk_1E36731D8;
  v828[4] = self;
  v270 = v269;
  v829 = v270;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Touching analysis state sort tokens"), a5 < 10079, v828);
  v826[0] = v212;
  v826[1] = 3221225472;
  v826[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_22;
  v826[3] = &unk_1E36731D8;
  v826[4] = self;
  v271 = v270;
  v827 = v271;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populating latitude and longitude in assets"), a5 < 10036, v826);
  v824[0] = v212;
  v824[1] = 3221225472;
  v824[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_23;
  v824[3] = &unk_1E36731D8;
  v824[4] = self;
  v272 = v271;
  v825 = v272;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Forcing file system persistence for memories"), a5 < 10041, v824);
  v822[0] = v212;
  v822[1] = 3221225472;
  v822[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_24;
  v822[3] = &unk_1E36731D8;
  v822[4] = self;
  v273 = v272;
  v823 = v273;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Forcing file system persistence for persons"), v512, v822);
  v820[0] = v212;
  v820[1] = 3221225472;
  v820[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_25;
  v820[3] = &unk_1E36731D8;
  v820[4] = self;
  v274 = v273;
  v821 = v274;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing old file system persistence for persons"), a5 < 10203, v820);
  v818[0] = v212;
  v818[1] = 3221225472;
  v818[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_26;
  v818[3] = &unk_1E36731D8;
  v818[4] = self;
  v275 = v274;
  v819 = v275;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populating asset's filename with nil originalFilename"), a5 < 11052, v818);
  v816[0] = v212;
  v816[1] = 3221225472;
  v816[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_534;
  v816[3] = &unk_1E36731D8;
  v816[4] = self;
  v276 = v275;
  v817 = v276;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Flattening unknown custom rendered values (0 or 1) to 0"), a5 < 10065, v816);
  v814[0] = v212;
  v814[1] = 3221225472;
  v814[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_537;
  v814[3] = &unk_1E36731D8;
  v814[4] = self;
  v277 = v276;
  v815 = v277;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing custom rendered values"), v462, v814);
  v812[0] = v212;
  v812[1] = 3221225472;
  v812[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_540;
  v812[3] = &unk_1E36731D8;
  v812[4] = self;
  v278 = v277;
  v813 = v278;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting all memories"), a5 < 10088, v812);
  v811[0] = v212;
  v811[1] = 3221225472;
  v811[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_543;
  v811[3] = &unk_1E3670EA0;
  v811[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Applying data protection to DCIM (D->C)"), v446 < 0x67, v811);
  v809[0] = v212;
  v809[1] = 3221225472;
  v809[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_546;
  v809[3] = &unk_1E36731D8;
  v809[4] = self;
  v279 = v278;
  v810 = v279;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing faceAlgorithmVersion"), a5 < 10106, v809);
  v807[0] = v212;
  v807[1] = 3221225472;
  v807[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_549;
  v807[3] = &unk_1E36731D8;
  v807[4] = self;
  v280 = v279;
  v808 = v280;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing zero duration photo iris"), v446 < 0x75, v807);
  v805[0] = v212;
  v805[1] = 3221225472;
  v805[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_552;
  v805[3] = &unk_1E36731D8;
  v805[4] = self;
  v281 = v280;
  v806 = v281;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing CameraRoll"), a5 < 10112, v805);
  v803[0] = v212;
  v803[1] = 3221225472;
  v803[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_555;
  v803[3] = &unk_1E36731D8;
  v803[4] = self;
  v282 = v281;
  v804 = v282;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing lastPrefetchDate"), v463, v803);
  v801[0] = v212;
  v801[1] = 3221225472;
  v801[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_558;
  v801[3] = &unk_1E36731D8;
  v801[4] = self;
  v283 = v282;
  v802 = v283;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing locallyAvailableFlag for thumbnails"), v463, v801);
  v799[0] = v212;
  v799[1] = 3221225472;
  v799[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_561;
  v799[3] = &unk_1E36731D8;
  v799[4] = self;
  v284 = v283;
  v800 = v284;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Updating key asset in memory"), a5 < 11000, v799);
  v797[0] = v212;
  v797[1] = 3221225472;
  v797[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_564;
  v797[3] = &unk_1E36731D8;
  v797[4] = self;
  v285 = v284;
  v798 = v285;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Delete orphaned unverified people"), a5 < 10123, v797);
  v795[0] = v212;
  v795[1] = 3221225472;
  v795[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_567;
  v795[3] = &unk_1E36731D8;
  v795[4] = self;
  v286 = v285;
  v796 = v286;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing memories with duplicate assetLists"), a5 < 10150, v795);
  v793[0] = v212;
  v793[1] = 3221225472;
  v793[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_570;
  v793[3] = &unk_1E36731D8;
  v793[4] = self;
  v287 = v286;
  v794 = v287;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing untracked cloud resource image derivatives"), v513, v793);
  v791[0] = v212;
  v791[1] = 3221225472;
  v791[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14_573;
  v791[3] = &unk_1E36731D8;
  v791[4] = self;
  v288 = v287;
  v792 = v288;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Rebuilding thumbnails for wide gamut captures"), a5 < 10206, v791);
  v788[0] = v212;
  v788[1] = 3221225472;
  v788[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15_576;
  v788[3] = &unk_1E3664E08;
  v790 = v522;
  v788[4] = self;
  v289 = v288;
  v789 = v289;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Persist iris visibility state to disk."), v515, v788);
  v786[0] = v212;
  v786[1] = 3221225472;
  v786[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_580;
  v786[3] = &unk_1E36731D8;
  v786[4] = self;
  v290 = v289;
  v787 = v290;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Remove invalid albums and folders."), v514, v786);
  v783[0] = v212;
  v783[1] = 3221225472;
  v783[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_583;
  v783[3] = &unk_1E3664E08;
  v785 = v522;
  v783[4] = self;
  v291 = v290;
  v784 = v291;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Set playback style for all animated GIFs."), a5 < 11061, v783);
  v781[0] = v212;
  v781[1] = 3221225472;
  v781[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_587;
  v781[3] = &unk_1E36731D8;
  v781[4] = self;
  v292 = v291;
  v782 = v292;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing movie asset attributes"), v464, v781);
  v780[0] = v212;
  v780[1] = 3221225472;
  v780[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_590;
  v780[3] = &unk_1E3670EA0;
  v780[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Dropping search index after lightweight migration"), v441, v780);
  v778[0] = v212;
  v778[1] = 3221225472;
  v778[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_593;
  v778[3] = &unk_1E36731D8;
  v778[4] = self;
  v293 = v292;
  v779 = v293;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Reset scene analysis for algorithm bump"), v465, v778);
  v776[0] = v212;
  v776[1] = 3221225472;
  v776[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_596;
  v776[3] = &unk_1E36731D8;
  v776[4] = self;
  v294 = v293;
  v777 = v294;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix name source const"), a5 < 10102, v776);
  v774[0] = v212;
  v774[1] = 3221225472;
  v774[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_599;
  v774[3] = &unk_1E36731D8;
  v774[4] = self;
  v295 = v294;
  v775 = v295;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Refresh trigger values"), a5 < 10109, v774);
  v773[0] = v212;
  v773[1] = 3221225472;
  v773[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_602;
  v773[3] = &unk_1E3670EA0;
  v773[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Clear vision worker"), a5 < 10204, v773);
  v771[0] = v212;
  v771[1] = 3221225472;
  v771[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_605;
  v771[3] = &unk_1E36731D8;
  v771[4] = self;
  v296 = v295;
  v772 = v296;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix rejected key face"), a5 < 10207, v771);
  v769[0] = v212;
  v769[1] = 3221225472;
  v769[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_608;
  v769[3] = &unk_1E36731D8;
  v769[4] = self;
  v297 = v296;
  v770 = v297;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix merged people that should be verified"), v516, v769);
  v767[0] = v212;
  v767[1] = 3221225472;
  v767[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_611;
  v767[3] = &unk_1E36731D8;
  v767[4] = self;
  v298 = v297;
  v768 = v298;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Prompt unknown assets"), a5 < 13027, v767);
  v765[0] = v212;
  v765[1] = 3221225472;
  v765[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_614;
  v765[3] = &unk_1E36731D8;
  v765[4] = self;
  v299 = v298;
  v766 = v299;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix zero trash date"), a5 < 11001, v765);
  v763[0] = v212;
  v763[1] = 3221225472;
  v763[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_617;
  v763[3] = &unk_1E36731D8;
  v763[4] = self;
  v300 = v299;
  v764 = v300;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix master cloudLocalState enum"), v517, v763);
  v761[0] = v212;
  v761[1] = 3221225472;
  v761[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_620;
  v761[3] = &unk_1E36731D8;
  v761[4] = self;
  v301 = v300;
  v762 = v301;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populate cloud resource local state"), v518, v761);
  v759[0] = v212;
  v759[1] = 3221225472;
  v759[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_623;
  v759[3] = &unk_1E36731D8;
  v759[4] = self;
  v302 = v301;
  v760 = v302;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix cropped unadjusted assets issue"), v519, v759);
  v757[0] = v212;
  v757[1] = 3221225472;
  v757[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14_626;
  v757[3] = &unk_1E36731D8;
  v757[4] = self;
  v303 = v302;
  v758 = v303;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populating user keyFacePickSource on Person"), a5 < 11022, v757);
  v755[0] = v212;
  v755[1] = 3221225472;
  v755[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15_629;
  v755[3] = &unk_1E36731D8;
  v755[4] = self;
  v304 = v303;
  v756 = v304;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Converting nameSource from BOOL to int on DeferredRebuildFace"), a5 < 11024, v755);
  v753[0] = v212;
  v753[1] = 3221225472;
  v753[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_16_632;
  v753[3] = &unk_1E36731D8;
  v753[4] = self;
  v305 = v304;
  v754 = v305;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing duplicated cloud asset guid from the database"), a5 < 11025, v753);
  v751[0] = v212;
  v751[1] = 3221225472;
  v751[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_17_633;
  v751[3] = &unk_1E36731D8;
  v751[4] = self;
  v306 = v305;
  v752 = v306;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing duplicated cloud asset guid from the database"), (a5 - 11022) < 4, v751);
  v749[0] = v212;
  v749[1] = 3221225472;
  v749[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_18_636;
  v749[3] = &unk_1E36731D8;
  v749[4] = self;
  v307 = v306;
  v750 = v307;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing whitelist owner for pending invitations"), (a5 - 10425) < 0x25B, v749);
  v747[0] = v212;
  v747[1] = 3221225472;
  v747[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_19_639;
  v747[3] = &unk_1E36731D8;
  v747[4] = self;
  v308 = v307;
  v748 = v308;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repush memories with new features"), v520, v747);
  v745[0] = v212;
  v745[1] = 3221225472;
  v745[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_20_642;
  v745[3] = &unk_1E36731D8;
  v745[4] = self;
  v309 = v308;
  v746 = v309;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Retry quarantined assets and fix resource relation"), v521, v745);
  v741[0] = v212;
  v741[1] = 3221225472;
  v741[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_21_645;
  v741[3] = &unk_1E3664E80;
  v743 = a5;
  v741[4] = self;
  v310 = v309;
  v742 = v310;
  v744 = v467;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Preparing library for faces sync"), a5 < 11043, v741);
  v739[0] = v212;
  v739[1] = 3221225472;
  v739[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_654;
  v739[3] = &unk_1E36731D8;
  v739[4] = self;
  v311 = v310;
  v740 = v311;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populate faces with cloudNameSource"), a5 < 11047, v739);
  v737[0] = v212;
  v737[1] = 3221225472;
  v737[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_657;
  v737[3] = &unk_1E36731D8;
  v737[4] = self;
  v312 = v311;
  v738 = v312;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Update playback styles and variations"), a5 < 11048, v737);
  v734[0] = v212;
  v734[1] = 3221225472;
  v734[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_660;
  v734[3] = &unk_1E3664E08;
  v736 = v522;
  v734[4] = self;
  v313 = v312;
  v735 = v313;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Identifying variations and new depth adjustments"), a5 < 11070, v734);
  v732[0] = v212;
  v732[1] = 3221225472;
  v732[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_664;
  v732[3] = &unk_1E36731D8;
  v732[4] = self;
  v314 = v313;
  v733 = v314;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Populate persons with cloudVerifiedType"), a5 < 11049, v732);
  v730[0] = v212;
  v730[1] = 3221225472;
  v730[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_667;
  v730[3] = &unk_1E36731D8;
  v730[4] = self;
  v315 = v314;
  v731 = v315;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting face quality"), v466, v730);
  v728[0] = v212;
  v728[1] = 3221225472;
  v728[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_670;
  v728[3] = &unk_1E36731D8;
  v728[4] = self;
  v316 = v315;
  v729 = v316;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing untracked person metadata"), a5 < 11060, v728);
  v726[0] = v212;
  v726[1] = 3221225472;
  v726[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_673;
  v726[3] = &unk_1E36731D8;
  v726[4] = self;
  v317 = v316;
  v727 = v317;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting manual order on non-favorite persons"), a5 < 11063, v726);
  v725[0] = v212;
  v725[1] = 3221225472;
  v725[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_676;
  v725[3] = &unk_1E3670EA0;
  v725[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing 'AutoloopCache' folder if it still exists"), v510 < 0x40, v725);
  v723[0] = v212;
  v723[1] = 3221225472;
  v723[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_679;
  v723[3] = &unk_1E36731D8;
  v723[4] = self;
  v318 = v317;
  v724 = v318;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing asset master relationship"), a5 < 11069, v723);
  v722[0] = v212;
  v722[1] = 3221225472;
  v722[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_682;
  v722[3] = &unk_1E3670EA0;
  v722[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Going to send optimize setting feedback"), v468, v722);
  v720[0] = v212;
  v720[1] = 3221225472;
  v720[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_686;
  v720[3] = &unk_1E36731D8;
  v720[4] = self;
  v319 = v318;
  v721 = v319;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing nil cloudMasterGUID"), v469, v720);
  v718[0] = v212;
  v718[1] = 3221225472;
  v718[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_689;
  v718[3] = &unk_1E36731D8;
  v718[4] = self;
  v320 = v319;
  v719 = v320;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repush persons with merge target"), v470, v718);
  v716[0] = v212;
  v716[1] = 3221225472;
  v716[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_692;
  v716[3] = &unk_1E36731D8;
  v716[4] = self;
  v321 = v320;
  v717 = v321;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Persist storeUUID to mobileCPL.plist"), v471, v716);
  v714[0] = v212;
  v714[1] = 3221225472;
  v714[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_695;
  v714[3] = &unk_1E36731D8;
  v714[4] = self;
  v322 = v321;
  v715 = v322;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Puring cloud shared resources"), a5 < 11079, v714);
  v712[0] = v212;
  v712[1] = 3221225472;
  v712[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_702;
  v712[3] = &unk_1E36731D8;
  v712[4] = self;
  v323 = v322;
  v713 = v323;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting persons without UUID"), a5 < 11080, v712);
  v710[0] = v212;
  v710[1] = 3221225472;
  v710[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_705;
  v710[3] = &unk_1E36731D8;
  v710[4] = self;
  v324 = v323;
  v711 = v324;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Unquarantined quarantined items"), v472, v710);
  v708[0] = v212;
  v708[1] = 3221225472;
  v708[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_708;
  v708[3] = &unk_1E36731D8;
  v708[4] = self;
  v325 = v324;
  v709 = v325;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix UTI for slow-mo videos"), (a5 - 10075) < 0x3F1, v708);
  v707[0] = v212;
  v707[1] = 3221225472;
  v707[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_711;
  v707[3] = &unk_1E3670EA0;
  v707[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix initialsync_marker"), v473, v707);
  v705[0] = v212;
  v705[1] = 3221225472;
  v705[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_714;
  v705[3] = &unk_1E36731D8;
  v705[4] = self;
  v326 = v325;
  v706 = v326;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Moving cloud shared derivatives"), (a5 - 11079) < 0xC, v705);
  v703[0] = v212;
  v703[1] = 3221225472;
  v703[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_717;
  v703[3] = &unk_1E36731D8;
  v703[4] = self;
  v327 = v326;
  v704 = v327;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing duplicated root folder/orphaned albums"), a5 < 11203, v703);
  v700[0] = v212;
  v700[1] = 3221225472;
  v700[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_720;
  v700[3] = &unk_1E36731D8;
  v328 = v327;
  v701 = v328;
  v702 = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Reconsidering saved asset type"), a5 < 12035, v700);
  v329 = *MEMORY[0x1E0D737A8];
  v330 = *MEMORY[0x1E0D737D0];
  v698[0] = v212;
  v698[1] = 3221225472;
  v698[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_723;
  v698[3] = &unk_1E36731D8;
  v698[4] = self;
  v331 = v328;
  v699 = v331;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:recordTimedCoreAnalyticsEvent:coreAnalyticsEventKey:block:](v207, "performActionWithName:ifRequired:recordTimedCoreAnalyticsEvent:coreAnalyticsEventKey:block:", CFSTR("Resetting and populating internal resources"), a5 < 13106, v329, v330, v698);
  v695[0] = v212;
  v695[1] = 3221225472;
  v695[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_728;
  v695[3] = &unk_1E36731D8;
  v332 = v331;
  v696 = v332;
  v697 = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting legacy cloud resources"), a5 < 13119, v695);
  v693[0] = v212;
  v693[1] = 3221225472;
  v693[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_731;
  v693[3] = &unk_1E36731D8;
  v693[4] = self;
  v333 = v332;
  v694 = v333;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting dummy worker analysis states"), a5 < 11200, v693);
  v691[0] = v212;
  v691[1] = 3221225472;
  v691[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_734;
  v691[3] = &unk_1E36731D8;
  v691[4] = self;
  v334 = v333;
  v692 = v334;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Cleaning up wallpaper remnants"), a5 < 12000, v691);
  v689[0] = v212;
  v689[1] = 3221225472;
  v689[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_737;
  v689[3] = &unk_1E36731D8;
  v689[4] = self;
  v335 = v334;
  v690 = v335;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting persistent history"), v474, v689);
  v687[0] = v212;
  v687[1] = 3221225472;
  v687[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_740;
  v687[3] = &unk_1E36731D8;
  v687[4] = self;
  v336 = v335;
  v688 = v336;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Remove invalidAdjustmentResourceData"), v479, v687);
  v685[0] = v212;
  v685[1] = 3221225472;
  v685[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_743;
  v685[3] = &unk_1E36731D8;
  v685[4] = self;
  v337 = v336;
  v686 = v337;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Creating importSession albums"), v475, v685);
  v683[0] = v212;
  v683[1] = 3221225472;
  v683[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_747;
  v683[3] = &unk_1E36731D8;
  v683[4] = self;
  v338 = v337;
  v684 = v338;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Remove invalid importSession albums"), a5 < 13036, v683);
  v681[0] = v212;
  v681[1] = 3221225472;
  v681[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_750;
  v681[3] = &unk_1E36731D8;
  v681[4] = self;
  v339 = v338;
  v682 = v339;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix zero dimensions for local raw images"), a5 < 13050, v681);
  v679[0] = v212;
  v679[1] = 3221225472;
  v679[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_753;
  v679[3] = &unk_1E36731D8;
  v679[4] = self;
  v340 = v339;
  v680 = v340;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Remove scenes that are below the previous threshold"), a5 < 12036, v679);
  v677[0] = v212;
  v677[1] = 3221225472;
  v677[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_756;
  v677[3] = &unk_1E36731D8;
  v677[4] = self;
  v341 = v340;
  v678 = v341;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Revalidating import session dates"), v481, v677);
  v675[0] = v212;
  v675[1] = 3221225472;
  v675[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_759;
  v675[3] = &unk_1E36731D8;
  v675[4] = self;
  v342 = v341;
  v676 = v342;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Set importedBy in PLCloudMaster"), v478, v675);
  v672[0] = v212;
  v672[1] = 3221225472;
  v672[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_762;
  v672[3] = &unk_1E3664E08;
  v674 = v522;
  v672[4] = self;
  v343 = v342;
  v673 = v343;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Delete video thumbs with preferred keyframe"), v476, v672);
  v670[0] = v212;
  v670[1] = 3221225472;
  v670[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_766;
  v670[3] = &unk_1E36731D8;
  v670[4] = self;
  v344 = v343;
  v671 = v344;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Reset Analysis state for videos"), v480, v670);
  v668[0] = v212;
  v668[1] = 3221225472;
  v668[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_769;
  v668[3] = &unk_1E36731D8;
  v668[4] = self;
  v345 = v344;
  v669 = v345;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix CMM assets in DCIM folder with wrong saved asset type"), a5 < 13089, v668);
  v666[0] = v212;
  v666[1] = 3221225472;
  v666[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_772;
  v666[3] = &unk_1E36731D8;
  v666[4] = self;
  v346 = v345;
  v667 = v346;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Add UUIDs to existing keywords"), a5 < 13099, v666);
  v664[0] = v212;
  v664[1] = 3221225472;
  v664[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_775;
  v664[3] = &unk_1E36731D8;
  v664[4] = self;
  v347 = v346;
  v665 = v347;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Update start and end dates for suggestions missing them"), a5 < 13103, v664);
  v662[0] = v212;
  v662[1] = 3221225472;
  v662[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_778;
  v662[3] = &unk_1E36731D8;
  v662[4] = self;
  v348 = v347;
  v663 = v348;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting all orphaned ExtendedAttributes"), a5 < 13117, v662);
  v660[0] = v212;
  v660[1] = 3221225472;
  v660[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_781;
  v660[3] = &unk_1E36731D8;
  v660[4] = self;
  v349 = v348;
  v661 = v349;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Deleting extraneous adjusted full size resource rows"), a5 < 13137, v660);
  v658[0] = v212;
  v658[1] = 3221225472;
  v658[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_784;
  v658[3] = &unk_1E36731D8;
  v658[4] = self;
  v350 = v349;
  v659 = v350;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Updating missing FileSystemVolume.uuid values"), a5 < 13152, v658);
  v657[0] = v212;
  v657[1] = 3221225472;
  v657[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_787;
  v657[3] = &unk_1E3670EA0;
  v657[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Updating CPL marker files"), v483, v657);
  v655[0] = v212;
  v655[1] = 3221225472;
  v655[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_790;
  v655[3] = &unk_1E36731D8;
  v655[4] = self;
  v351 = v350;
  v656 = v351;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Updating album start/end dates"), a5 < 13187, v655);
  v654[0] = v212;
  v654[1] = 3221225472;
  v654[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_793;
  v654[3] = &unk_1E3670EA0;
  v654[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Going to repush videos"), v482, v654);
  v652[0] = v212;
  v652[1] = 3221225472;
  v652[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_796;
  v652[3] = &unk_1E36731D8;
  v652[4] = self;
  v352 = v351;
  v653 = v352;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing kindSubtype for live photos with LoopingVideo playbackStyle"), a5 < 13191, v652);
  v650[0] = v212;
  v650[1] = 3221225472;
  v650[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_799;
  v650[3] = &unk_1E36731D8;
  v650[4] = self;
  v353 = v352;
  v651 = v353;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing white balance values"), a5 < 13193, v650);
  v648[0] = v212;
  v648[1] = 3221225472;
  v648[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_802;
  v648[3] = &unk_1E36731D8;
  v648[4] = self;
  v354 = v353;
  v649 = v354;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing unneeded analysis state table entries"), a5 < 13195, v648);
  v646[0] = v212;
  v646[1] = 3221225472;
  v646[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14_805;
  v646[3] = &unk_1E36731D8;
  v646[4] = self;
  v355 = v354;
  v647 = v355;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing UTI for RD Migration"), a5 < 13196, v646);
  v643[0] = v212;
  v643[1] = 3221225472;
  v643[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15_808;
  v643[3] = &unk_1E3664E08;
  v643[4] = self;
  v356 = v355;
  v644 = v356;
  v645 = v524;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Regenerating all Shared Streams resources data store key data"), v114 < 0xE3, v643);
  v641[0] = v212;
  v641[1] = 3221225472;
  v641[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_16_811;
  v641[3] = &unk_1E36731D8;
  v641[4] = self;
  v357 = v356;
  v642 = v357;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing location values"), a5 < 13200, v641);
  v639[0] = v212;
  v639[1] = 3221225472;
  v639[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_17_814;
  v639[3] = &unk_1E36731D8;
  v639[4] = self;
  v358 = v357;
  v640 = v358;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Invalidating reverse geocoding data"), a5 < 13307, v639);
  v637[0] = v212;
  v637[1] = 3221225472;
  v637[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_18_817;
  v637[3] = &unk_1E36731D8;
  v637[4] = self;
  v359 = v358;
  v638 = v359;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing has location query on Smart Album"), a5 < 13222, v637);
  v635[0] = v212;
  v635[1] = 3221225472;
  v635[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_19_820;
  v635[3] = &unk_1E36731D8;
  v635[4] = self;
  v360 = v359;
  v636 = v360;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing XMP resource UTIs"), 0, v635);
  v634[0] = v212;
  v634[1] = 3221225472;
  v634[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_20_823;
  v634[3] = &unk_1E3670EA0;
  v634[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrate purgeable resources"), a5 < 13260, v634);
  v632[0] = v212;
  v632[1] = 3221225472;
  v632[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_21_826;
  v632[3] = &unk_1E36731D8;
  v632[4] = self;
  v361 = v360;
  v633 = v361;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Renumbering localAvailability/localAvailabilityTargets"), a5 < 13242, v632);
  v629[0] = v212;
  v629[1] = 3221225472;
  v629[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_22_829;
  v629[3] = &unk_1E3664E08;
  v629[4] = self;
  v362 = v361;
  v630 = v362;
  v631 = v524;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrating existing 1k resources from version specific to current"), 0, v629);
  v627[0] = v212;
  v627[1] = 3221225472;
  v627[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_23_832;
  v627[3] = &unk_1E36731D8;
  v627[4] = self;
  v363 = v362;
  v628 = v363;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Requesting availability of 1k for relevant assets"), 0, v627);
  v625[0] = v212;
  v625[1] = 3221225472;
  v625[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_24_835;
  v625[3] = &unk_1E36731D8;
  v625[4] = self;
  v364 = v363;
  v626 = v364;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Reconstructing PLExtendedAttributes for images"), v484, v625);
  v623[0] = v212;
  v623[1] = 3221225472;
  v623[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_25_838;
  v623[3] = &unk_1E36731D8;
  v623[4] = self;
  v365 = v364;
  v624 = v365;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Moving 1k resources out of masters dir"), a5 < 13301, v623);
  v621[0] = v212;
  v621[1] = 3221225472;
  v621[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_26_841;
  v621[3] = &unk_1E36731D8;
  v621[4] = self;
  v366 = v365;
  v622 = v366;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Remap PLResourceTypeUnknown..."), v477, v621);
  v619[0] = v212;
  v619[1] = 3221225472;
  v619[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_27;
  v619[3] = &unk_1E36731D8;
  v619[4] = self;
  v367 = v366;
  v620 = v367;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Rebuild ReferenceKeys..."), v477, v619);
  v618[0] = v212;
  v618[1] = 3221225472;
  v618[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_28;
  v618[3] = &unk_1E3670EA0;
  v618[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Relocate CPL marker files"), a5 < 13304, v618);
  v617[0] = v212;
  v617[1] = 3221225472;
  v617[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_29;
  v617[3] = &unk_1E3670EA0;
  v617[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Cleanup legacy files"), a5 < 13309, v617);
  v615[0] = v212;
  v615[1] = 3221225472;
  v615[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_30;
  v615[3] = &unk_1E36731D8;
  v615[4] = self;
  v368 = v367;
  v616 = v368;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Relocate original UBF files"), a5 < 13323, v615);
  v613[0] = v212;
  v613[1] = 3221225472;
  v613[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_31;
  v613[3] = &unk_1E36731D8;
  v613[4] = self;
  v369 = v368;
  v614 = v369;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("verifying and fixing local availability for resources with broken fileIDs..."), a5 < 13351, v613);
  v611[0] = v212;
  v611[1] = 3221225472;
  v611[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_32;
  v611[3] = &unk_1E36731D8;
  v611[4] = self;
  v370 = v369;
  v612 = v370;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Recalculating shared stream paths..."), 0, v611);
  v609[0] = v212;
  v609[1] = 3221225472;
  v609[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_33;
  v609[3] = &unk_1E36731D8;
  v609[4] = self;
  v371 = v370;
  v610 = v371;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing shared stream video resources..."), v114 < 0x1F8, v609);
  v607[0] = v212;
  v607[1] = 3221225472;
  v607[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_34;
  v607[3] = &unk_1E36731D8;
  v607[4] = self;
  v372 = v371;
  v608 = v372;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing CPL resources that are uploaded not remotely available..."), v114 < 0x213, v607);
  v605[0] = v212;
  v605[1] = 3221225472;
  v605[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_35;
  v605[3] = &unk_1E36731D8;
  v605[4] = self;
  v373 = v372;
  v606 = v373;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing CPL resources that are uploaded not remotely available..."), v114 < 0x1FB, v605);
  v603[0] = v212;
  v603[1] = 3221225472;
  v603[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_36;
  v603[3] = &unk_1E36731D8;
  v603[4] = self;
  v374 = v373;
  v604 = v374;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing adjustedFingerPrint values..."), 0, v603);
  v602[0] = v212;
  v602[1] = 3221225472;
  v602[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_37;
  v602[3] = &unk_1E3670EA0;
  v602[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Going to repush master with missing media metadata"), v486, v602);
  v600[0] = v212;
  v600[1] = 3221225472;
  v600[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_38;
  v600[3] = &unk_1E36731D8;
  v600[4] = self;
  v375 = v374;
  v601 = v375;
  v376 = a5 < 13533;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Scavenging for snowplowGroupUUIDs..."), v376, v600);
  v598[0] = v212;
  v598[1] = 3221225472;
  v598[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_39;
  v598[3] = &unk_1E36731D8;
  v598[4] = self;
  v377 = v375;
  v599 = v377;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix invalid post migration filesystem imported assets"), (a5 - 13513) < 3, v598);
  v596[0] = v212;
  v596[1] = 3221225472;
  v596[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_40;
  v596[3] = &unk_1E36731D8;
  v596[4] = self;
  v378 = v377;
  v597 = v378;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Running CTM pairing..."), v376, v596);
  v594[0] = v212;
  v594[1] = 3221225472;
  v594[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_41;
  v594[3] = &unk_1E36731D8;
  v594[4] = self;
  v379 = v378;
  v595 = v379;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing orphaned project extensions..."), 0, v594);
  v593[0] = v212;
  v593[1] = 3221225472;
  v593[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_42;
  v593[3] = &unk_1E3670EA0;
  v593[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing table thumb fragmentation..."), 0, v593);
  v591[0] = v212;
  v591[1] = 3221225472;
  v591[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_43;
  v591[3] = &unk_1E36731D8;
  v591[4] = self;
  v380 = v379;
  v592 = v380;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Marking all user smart albums not pushed..."), 0, v591);
  v589[0] = v212;
  v589[1] = 3221225472;
  v589[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_44;
  v589[3] = &unk_1E36731D8;
  v589[4] = self;
  v381 = v380;
  v590 = v381;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing Legacy Migration with Duplicate Versions and missing Cloud Resources..."), 0, v589);
  v587[0] = v212;
  v587[1] = 3221225472;
  v587[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_45;
  v587[3] = &unk_1E36731D8;
  v587[4] = self;
  v382 = v381;
  v588 = v382;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrating candidate bits to deferred processing candidate bits..."), a5 < 14005, v587);
  v585[0] = v212;
  v585[1] = 3221225472;
  v585[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_46;
  v585[3] = &unk_1E36731D8;
  v585[4] = self;
  v383 = v382;
  v586 = v383;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Moving GPS horizontal accuracy to new attribute..."), a5 < 14009, v585);
  v583[0] = v212;
  v583[1] = 3221225472;
  v583[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_47;
  v583[3] = &unk_1E36731D8;
  v583[4] = self;
  v384 = v383;
  v584 = v384;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Reconsidering allowed for analysis on assets marked as not allowed..."), a5 < 18083, v583);
  v581[0] = v212;
  v581[1] = 3221225472;
  v581[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_48;
  v581[3] = &unk_1E36731D8;
  v581[4] = self;
  v385 = v384;
  v582 = v385;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Migrating metadata and migration history..."), a5 < 14016, v581);
  v579[0] = v212;
  v579[1] = 3221225472;
  v579[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_49;
  v579[3] = &unk_1E36731D8;
  v579[4] = self;
  v386 = v385;
  v580 = v386;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing reframe videos without SOC available bit..."), a5 < 14021, v579);
  v577[0] = v212;
  v577[1] = 3221225472;
  v577[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_50;
  v577[3] = &unk_1E36731D8;
  v577[4] = self;
  v387 = v386;
  v578 = v387;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fixing avalancheUUID for cloud shared assets..."), a5 < 14025, v577);
  v575[0] = v212;
  v575[1] = 3221225472;
  v575[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_51;
  v575[3] = &unk_1E36731D8;
  v575[4] = self;
  v388 = v387;
  v576 = v388;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Regenerating month highlight titles..."), a5 < 14027, v575);
  v573[0] = v212;
  v573[1] = 3221225472;
  v573[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_52;
  v573[3] = &unk_1E36731D8;
  v573[4] = self;
  v389 = v388;
  v574 = v389;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Copying asset description to accessibility description..."), a5 < 14032, v573);
  v571[0] = v212;
  v571[1] = 3221225472;
  v571[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_53;
  v571[3] = &unk_1E36731D8;
  v571[4] = self;
  v390 = v389;
  v572 = v390;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing all local video key frame resources to revert 14037..."), a5 == 14037, v571);
  v569[0] = v212;
  v569[1] = 3221225472;
  v569[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_54;
  v569[3] = &unk_1E36731D8;
  v569[4] = self;
  v391 = v390;
  v570 = v391;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing resource model manual constraint..."), a5 < 14039, v569);
  v567[0] = v212;
  v567[1] = 3221225472;
  v567[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_55;
  v567[3] = &unk_1E36731D8;
  v567[4] = self;
  v392 = v391;
  v568 = v392;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing CTM original videos with SOC available bit set..."), v488, v567);
  v565[0] = v212;
  v565[1] = 3221225472;
  v565[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_56;
  v565[3] = &unk_1E36731D8;
  v565[4] = self;
  v393 = v392;
  v566 = v393;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Persisting resource type on alternate image resources..."), v490, v565);
  v563[0] = v212;
  v563[1] = 3221225472;
  v563[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_57;
  v563[3] = &unk_1E36731D8;
  v563[4] = self;
  v394 = v393;
  v564 = v394;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Adding RAW packed badge attributes..."), v493, v563);
  v560[0] = v212;
  v560[1] = 3221225472;
  v560[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_58;
  v560[3] = &unk_1E3664E08;
  v560[4] = self;
  v395 = v394;
  v561 = v395;
  v562 = v524;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Adding local video key frame resource..."), v495, v560);
  v558[0] = v212;
  v558[1] = 3221225472;
  v558[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_59;
  v558[3] = &unk_1E36731D8;
  v558[4] = self;
  v396 = v395;
  v559 = v396;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing CTM original videos without adjustments..."), v497, v558);
  v556[0] = v212;
  v556[1] = 3221225472;
  v556[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_60;
  v556[3] = &unk_1E36731D8;
  v556[4] = self;
  v397 = v396;
  v557 = v397;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Refactoring video large recipes..."), v499, v556);
  v554[0] = v212;
  v554[1] = 3221225472;
  v554[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_61;
  v554[3] = &unk_1E36731D8;
  v554[4] = self;
  v398 = v397;
  v555 = v398;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Removing duplicated cloud shared comments"), v501, v554);
  v552[0] = v212;
  v552[1] = 3221225472;
  v552[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_62;
  v552[3] = &unk_1E36731D8;
  v552[4] = self;
  v399 = v398;
  v553 = v399;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Fix wallpaper albums"), v442, v552);
  v550[0] = v212;
  v550[1] = 3221225472;
  v550[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_918;
  v550[3] = &unk_1E36731D8;
  v550[4] = self;
  v400 = v399;
  v551 = v400;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Invalidating assets with hdrGain==0"), v487, v550);
  v548[0] = v212;
  v548[1] = 3221225472;
  v548[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_921;
  v548[3] = &unk_1E36731D8;
  v548[4] = self;
  v401 = v400;
  v549 = v401;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting RepairAdjustmentFailure to Adjustment and clearing cloudRecoveryState"), v489, v548);
  v546[0] = v212;
  v546[1] = 3221225472;
  v546[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_924;
  v546[3] = &unk_1E36731D8;
  v546[4] = self;
  v402 = v401;
  v547 = v402;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting asset location shifting and rev geo"), v492, v546);
  v544[0] = v212;
  v544[1] = 3221225472;
  v544[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_927;
  v544[3] = &unk_1E36731D8;
  v544[4] = self;
  v403 = v402;
  v545 = v403;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Updating mogul subytpe on original slomos"), v494, v544);
  v542[0] = v212;
  v542[1] = 3221225472;
  v542[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_930;
  v542[3] = &unk_1E36731D8;
  v542[4] = self;
  v404 = v403;
  v543 = v404;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Converting asset depth states to depth type"), v496, v542);
  v541[0] = v212;
  v541[1] = 3221225472;
  v541[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_933;
  v541[3] = &unk_1E3670EA0;
  v541[4] = self;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Converting implicit keepOriginalsEnabled setting to explicit"), v498, v541);
  v539[0] = v212;
  v539[1] = 3221225472;
  v539[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_936;
  v539[3] = &unk_1E36731D8;
  v539[4] = self;
  v405 = v404;
  v540 = v405;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Un-quarantining previously quarantined assets"), v500, v539);
  v537[0] = v212;
  v537[1] = 3221225472;
  v537[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_939;
  v537[3] = &unk_1E36731D8;
  v537[4] = self;
  v406 = v405;
  v538 = v406;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting limited-library filter data"), v502, v537);
  v535[0] = v212;
  v535[1] = 3221225472;
  v535[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_942;
  v535[3] = &unk_1E36731D8;
  v535[4] = self;
  v407 = v406;
  v536 = v407;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Delete empty folder with the project root cloudGUID that has the wrong folder kind"), v503, v535);
  v532[0] = v212;
  v532[1] = 3221225472;
  v532[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_945;
  v532[3] = &unk_1E3664E08;
  v532[4] = self;
  v408 = v407;
  v533 = v408;
  v534 = v524;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Delete key frame video resources for non-video assets"), v505, v532);
  v530[0] = v212;
  v530[1] = 3221225472;
  v530[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_948;
  v530[3] = &unk_1E36731D8;
  v530[4] = self;
  v409 = v408;
  v531 = v409;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Discard unused custom rendered values"), a5 < 15059, v530);
  v528[0] = v212;
  v528[1] = 3221225472;
  v528[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_951;
  v528[3] = &unk_1E36731D8;
  v528[4] = self;
  v410 = v409;
  v529 = v410;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Resetting image request hints"), v524, v528);
  v526[0] = v212;
  v526[1] = 3221225472;
  v526[2] = __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_954;
  v526[3] = &unk_1E36731D8;
  v526[4] = self;
  v411 = v410;
  v527 = v411;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v207, "performActionWithName:ifRequired:block:", CFSTR("Repairing duplicate singleton fetching albums"), 1, v526);
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v412 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v413 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v413, "privateCacheDirectoryWithSubType:", 10);
  v414 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v412, "removeItemAtPath:error:", v414, 0);

  -[PLModelMigrator applyDataProtectionToAllPhotosFilesOnce](self, "applyDataProtectionToAllPhotosFilesOnce");
  objc_msgSend(v507, "stopRecordingTimedEventWithToken:forKey:onEventWithName:", *MEMORY[0x1E0D737C8], v329, v211);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", -[PLModelMigrator _assetCountForStore:](self, "_assetCountForStore:", v411));
  v415 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v415, "stringValue");
  v416 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v507, "setPayloadValue:forKey:onEventWithName:", v416, *MEMORY[0x1E0D737F8], v329);

  if (-[PLModelMigrationActionProcessor isSuccess](v207, "isSuccess"))
  {
    -[PLModelMigrator migrationLogger](self, "migrationLogger");
    v417 = objc_claimAutoreleasedReturnValue();
    if (!v417)
      goto LABEL_659;
    v418 = (void *)v417;
    PLMigrationGetLog();
    v419 = objc_claimAutoreleasedReturnValue();
    v420 = os_log_type_enabled(v419, OS_LOG_TYPE_DEFAULT);

    if (!v420)
      goto LABEL_659;
    v996 = 0u;
    v997 = 0u;
    v994 = 0u;
    v995 = 0u;
    v992 = 0u;
    v993 = 0u;
    v990 = 0u;
    v991 = 0u;
    v988 = 0u;
    v989 = 0u;
    v986 = 0u;
    v987 = 0u;
    v984 = 0u;
    v985 = 0u;
    v982 = 0u;
    v983 = 0u;
    v980 = 0u;
    v981 = 0u;
    v978 = 0u;
    v979 = 0u;
    v976 = 0u;
    v977 = 0u;
    v974 = 0u;
    v975 = 0u;
    v972 = 0u;
    v973 = 0u;
    v970 = 0u;
    v971 = 0u;
    v968 = 0u;
    v969 = 0u;
    memset(v967, 0, sizeof(v967));
    PLMigrationGetLog();
    v421 = objc_claimAutoreleasedReturnValue();
    os_log_type_enabled(v421, OS_LOG_TYPE_DEFAULT);
    v963 = 67109376;
    v964 = a5;
    v965 = 1024;
    v966 = v440;
    LODWORD(v439) = 14;
    v422 = (_DWORD *)_os_log_send_and_compose_impl();

    -[PLModelMigrator migrationLogger](self, "migrationLogger", &v963, v439);
    v423 = (void *)objc_claimAutoreleasedReturnValue();
    v424 = v423;
    v425 = v422;
    v426 = 4739;
    v427 = 0;
  }
  else
  {
    -[PLModelMigrationActionProcessor setSuccess:](v207, "setSuccess:", 0);
    -[PLModelMigrator migrationLogger](self, "migrationLogger");
    v428 = objc_claimAutoreleasedReturnValue();
    if (!v428)
      goto LABEL_659;
    v429 = (void *)v428;
    PLMigrationGetLog();
    v430 = objc_claimAutoreleasedReturnValue();
    v431 = os_log_type_enabled(v430, OS_LOG_TYPE_ERROR);

    if (!v431)
      goto LABEL_659;
    v996 = 0u;
    v997 = 0u;
    v994 = 0u;
    v995 = 0u;
    v992 = 0u;
    v993 = 0u;
    v990 = 0u;
    v991 = 0u;
    v988 = 0u;
    v989 = 0u;
    v986 = 0u;
    v987 = 0u;
    v984 = 0u;
    v985 = 0u;
    v982 = 0u;
    v983 = 0u;
    v980 = 0u;
    v981 = 0u;
    v978 = 0u;
    v979 = 0u;
    v976 = 0u;
    v977 = 0u;
    v974 = 0u;
    v975 = 0u;
    v972 = 0u;
    v973 = 0u;
    v970 = 0u;
    v971 = 0u;
    v968 = 0u;
    v969 = 0u;
    memset(v967, 0, sizeof(v967));
    PLMigrationGetLog();
    v432 = objc_claimAutoreleasedReturnValue();
    os_log_type_enabled(v432, OS_LOG_TYPE_ERROR);
    v963 = 67109376;
    v964 = a5;
    v965 = 1024;
    v966 = v440;
    LODWORD(v439) = 14;
    v422 = (_DWORD *)_os_log_send_and_compose_impl();

    -[PLModelMigrator migrationLogger](self, "migrationLogger", &v963, v439);
    v423 = (void *)objc_claimAutoreleasedReturnValue();
    v424 = v423;
    v425 = v422;
    v426 = 4742;
    v427 = 16;
  }
  objc_msgSend(v423, "logWithMessage:fromCodeLocation:type:", v425, "PLModelMigrator.m", v426, v427);

  if (v422 != v967)
    free(v422);
LABEL_659:

  objc_autoreleasePoolPop(context);
  --postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount__postProcessMigratedStoreGuard;
  -[PLModelMigrator _setIsPostProcessingLightWeightMigration:](self, "_setIsPostProcessingLightWeightMigration:", 0);
  v433 = -[PLModelMigrationActionProcessor isSuccess](v207, "isSuccess");

  return v433;
}

- (BOOL)_shouldTriggerLightweightMigrationFailureForInternalTesting
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  BOOL v16;
  int v17;
  void *v18;
  int v19;
  _BOOL4 v20;
  const char *v21;
  BOOL result;
  id v23;
  id v24;
  uint8_t buf[4];
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  if (!MEMORY[0x19AEC04BC](self, a2))
    return 0;
  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "photoDirectoryWithType:", 33);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByAppendingPathComponent:", CFSTR("lightweightfail"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "photoDirectoryWithType:", 33);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringByAppendingPathComponent:", CFSTR("lightweightcrash"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v7) = objc_msgSend(v9, "fileExistsAtPath:", v5);

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if ((_DWORD)v7)
  {
    v24 = 0;
    v12 = objc_msgSend(v10, "removeItemAtPath:error:", v5, &v24);
    v13 = v24;

    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);
    if (v12)
    {
      if (v15)
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "[INTERNAL ONLY] Found lightweightfail indicator file, forcing lightweight migration to fail (assetsd will rebuild w/o crashing)", buf, 2u);
      }
      v16 = 1;
      goto LABEL_16;
    }
    if (v15)
    {
      *(_DWORD *)buf = 138412290;
      v26 = v13;
      v21 = "[INTERNAL ONLY] Unable to remove lightweightfail indicator file - ignoring! %@";
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  v17 = objc_msgSend(v10, "fileExistsAtPath:", v8);

  if (!v17)
  {
    v16 = 0;
    goto LABEL_18;
  }
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0;
  v19 = objc_msgSend(v18, "removeItemAtPath:error:", v8, &v23);
  v13 = v23;

  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);
  if (!v19)
  {
    if (v20)
    {
      *(_DWORD *)buf = 138412290;
      v26 = v13;
      v21 = "[INTERNAL ONLY] Unable to remove lightweightcrash indicator file - ignoring! %@";
LABEL_14:
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, v21, buf, 0xCu);
    }
LABEL_15:
    v16 = 0;
LABEL_16:

LABEL_18:
    return v16;
  }
  if (v20)
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "[INTERNAL ONLY] Found lightweightcrash indicator file, forcing lightweight migration to crash (assetsd will rebuild after restarting)", buf, 2u);
  }

  qword_1EE36DAE0 = (uint64_t)"[INTERNAL ONLY] Found lightweightcrash indicator file, forcing lightweight migration to cra"
                             "sh (assetsd will rebuild after restarting)";
  __break(1u);
  return result;
}

- (void)postProcessFixesAfterOTARestoreForCompleteAsset:(id)a3 fixAddedDate:(BOOL)a4 isMegaBackup:(BOOL)a5
{
  _BOOL4 v6;
  id v9;
  int v10;
  void *v11;
  void *v12;
  NSObject *v13;
  __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  int v24;
  int v25;
  NSObject *v26;
  const __CFString *v27;
  void *v28;
  int v29;
  NSObject *v30;
  _BOOL4 v31;
  __CFString *v32;
  void *v33;
  int v34;
  const char *v35;
  NSObject *v36;
  uint32_t v37;
  void *v38;
  __CFString *v39;
  BOOL v40;
  id v41;
  NSObject *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  _QWORD v48[4];
  __CFString *v49;
  uint8_t buf[4];
  const __CFString *v51;
  __int16 v52;
  id v53;
  __int16 v54;
  void *v55;
  __int16 v56;
  void *v57;
  __int16 v58;
  int v59;
  uint64_t v60;

  v6 = a4;
  v60 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  if ((PLIsAssetsd() & 1) != 0)
  {
    if (a5)
    {
LABEL_3:
      v10 = 1;
      goto LABEL_6;
    }
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 4781, CFSTR("%@ only valid in assetsd!"), v12);

    if (a5)
      goto LABEL_3;
  }
  v10 = objc_msgSend(v9, "hasAllThumbs");
LABEL_6:
  PLMigrationGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    NSStringFromSelector(a2);
    v14 = (__CFString *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "filename");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "uuid");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectID");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413314;
    v51 = v14;
    v52 = 2112;
    v53 = v15;
    v54 = 2112;
    v55 = v16;
    v56 = 2112;
    v57 = v17;
    v58 = 1024;
    v59 = v10 ^ 1;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "%@ for %@ %@ (%@), shouldGenerateThumbnails: %d", buf, 0x30u);

  }
  v18 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(v9, "addedDate");
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  if (v19)
  {
    if (v6)
      -[PLModelMigrator fixPossiblyIncorrectAddedDateForAsset:](self, "fixPossiblyIncorrectAddedDateForAsset:", v9);
  }
  else
  {
    objc_msgSend(v9, "dateCreated");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setAddedDate:", v20);

  }
  if ((objc_msgSend(v9, "hasAdjustments") & 1) != 0)
    objc_msgSend(v9, "adjustmentTimestamp");
  else
    objc_msgSend(v9, "dateCreated");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator _dateForVariations](self, "_dateForVariations");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "compare:", v21);

  if (objc_msgSend(v9, "isVideo"))
  {
    -[PLModelMigrator _fixVideoDimensionsForAsset:](self, "_fixVideoDimensionsForAsset:", v9);
    if (objc_msgSend(v9, "kindSubtype") == 101)
    {
      objc_msgSend(MEMORY[0x1E0D73310], "maskForMigrateLegacyVideoAdjustmentsExclusions");
      objc_msgSend(v9, "savedAssetType");
      if ((PLValidatedSavedAssetTypeApplies() & 1) == 0)
      {
        v24 = -[PLModelMigrator _migrateLegacySlomoAdjustmentsForAsset:](self, "_migrateLegacySlomoAdjustmentsForAsset:", v9);
        if (v24)
        {
          v25 = v24;
          PLMigrationGetLog();
          v26 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
          {
            v27 = CFSTR("to default");
            if (v25 == 1)
              v27 = CFSTR("from SLM");
            *(_DWORD *)buf = 138412290;
            v51 = v27;
            _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Migrated slomo adjustment %@", buf, 0xCu);
          }

        }
      }
    }
    if (v23 == -1)
      -[PLModelMigrator _identifyVariationsAndDepthAdjustmentsForAsset:](self, "_identifyVariationsAndDepthAdjustmentsForAsset:", v9);
    goto LABEL_40;
  }
  if (!objc_msgSend(v9, "isPhoto"))
  {
    if (!objc_msgSend(v9, "isUnknown"))
      goto LABEL_40;
    v29 = objc_msgSend(v9, "promoteFromUnknownKind");
    PLMigrationGetLog();
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
    if (v29)
    {
      if (v31)
      {
        objc_msgSend(v9, "filename");
        v32 = (__CFString *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "uuid");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v34 = objc_msgSend(v9, "kind");
        *(_DWORD *)buf = 138412802;
        v51 = v32;
        v52 = 2112;
        v53 = v33;
        v54 = 1024;
        LODWORD(v55) = v34;
        v35 = "Promoted unkown asset %@ %@ to type %d";
        v36 = v30;
        v37 = 28;
LABEL_38:
        _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_DEFAULT, v35, buf, v37);

      }
    }
    else if (v31)
    {
      objc_msgSend(v9, "filename");
      v32 = (__CFString *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "uuid");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v51 = v32;
      v52 = 2112;
      v53 = v33;
      v35 = "Failed to promote unknown asset %@ %@";
      v36 = v30;
      v37 = 22;
      goto LABEL_38;
    }

    goto LABEL_40;
  }
  objc_msgSend(v9, "updateKindSubtypeIfScreenshot");
  objc_msgSend(v9, "metadataFromMediaPropertiesOrOriginalResource");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setCameraCaptureDeviceFromMetadata:", v28);
  -[PLModelMigrator _populateFaceRegionsForAsset:](self, "_populateFaceRegionsForAsset:", v9);
  objc_msgSend(v9, "updatePlaybackVariationAndStyleFromOriginalMetadata:", v28);
  -[PLModelMigrator _fixIncorrectHeifMetadataForAsset:](self, "_fixIncorrectHeifMetadataForAsset:", v9);
  if (v23 == -1 && ((objc_msgSend(v9, "hasAdjustments") & 1) != 0 || objc_msgSend(v9, "isPhotoIris")))
    -[PLModelMigrator _identifyVariationsAndDepthAdjustmentsForAsset:](self, "_identifyVariationsAndDepthAdjustmentsForAsset:", v9);

LABEL_40:
  objc_msgSend(v9, "migrateLocationDataIfNeededAfterOTARestore:", 1);
  objc_msgSend(v9, "persistMetadataToFilesystem");
  if ((v10 & 1) == 0)
  {
    objc_msgSend(v9, "persistedResourcesMatching:", &__block_literal_global_967);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    v48[0] = MEMORY[0x1E0C809B0];
    v48[1] = 3221225472;
    v48[2] = __93__PLModelMigrator_postProcessFixesAfterOTARestoreForCompleteAsset_fixAddedDate_isMegaBackup___block_invoke_2;
    v48[3] = &unk_1E3667D70;
    v39 = (__CFString *)v9;
    v49 = v39;
    objc_msgSend(v38, "enumerateObjectsUsingBlock:", v48);
    -[__CFString generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:forceSRGBConversion:](v39, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:forceSRGBConversion:", 0, 0, 0, 0, 0);
    v47 = 0;
    v40 = +[PLResourceInstaller installInternalResourcesForExistingAsset:assumeNoExistingResources:referencedResourceURLs:error:](PLResourceInstaller, "installInternalResourcesForExistingAsset:assumeNoExistingResources:referencedResourceURLs:error:", v39, 0, 0, &v47);
    v41 = v47;
    if (!v40)
    {
      PLMigrationGetLog();
      v42 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v51 = v39;
        v52 = 2112;
        v53 = v41;
        _os_log_impl(&dword_199541000, v42, OS_LOG_TYPE_ERROR, "Failed to install resources after OTA restore of asset: %@, reason: %@", buf, 0x16u);
      }

    }
    -[__CFString setDeferredProcessingNeeded:](v39, "setDeferredProcessingNeeded:", -[__CFString expectedDeferredProcessingNeededOnAssetCreation](v39, "expectedDeferredProcessingNeededOnAssetCreation"));
    if (-[__CFString deferredProcessingNeeded](v39, "deferredProcessingNeeded"))
    {
      -[__CFString photoLibrary](v39, "photoLibrary");
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "libraryServicesManager");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "backgroundJobService");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      -[__CFString photoLibrary](v39, "photoLibrary");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v45, "signalBackgroundProcessingNeededOnLibrary:", v46);

    }
  }

  objc_autoreleasePoolPop(v18);
}

- (BOOL)processWelterweightMigrationStageOnStore:(id)a3 migrationUUID:(id)a4 fromVersion:(int)a5 toVersion:(int)a6 migrationContext:(id)a7 progress:(id)a8 progressUnitCount:(unint64_t)a9
{
  uint64_t v11;
  uint64_t v12;
  id v16;
  uint64_t v17;
  BOOL v18;
  __int16 v19;
  __int16 v20;
  _BOOL8 v22;
  __int16 v23;
  unsigned __int16 v24;
  uint64_t v25;
  unsigned __int16 v26;
  PLModelMigrationActionProcessor *v27;
  void *v28;
  void *v29;
  void *v30;
  PLModelMigrationActionProcessor *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  NSObject *v50;
  _BOOL4 v51;
  NSObject *v52;
  __int128 *v53;
  void *v54;
  void *v55;
  __int128 *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  _BOOL4 v62;
  NSObject *v63;
  BOOL v64;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  int v72;
  id v73;
  uint64_t v74;
  void *context;
  id v76;
  id v77;
  _QWORD v78[5];
  id v79;
  _QWORD v80[5];
  id v81;
  _QWORD v82[5];
  id v83;
  _QWORD v84[5];
  id v85;
  _QWORD v86[5];
  id v87;
  _QWORD v88[5];
  id v89;
  _QWORD v90[5];
  id v91;
  _QWORD v92[5];
  id v93;
  _QWORD v94[5];
  id v95;
  _QWORD v96[5];
  id v97;
  _QWORD v98[5];
  id v99;
  _QWORD v100[5];
  id v101;
  int v102;
  int v103;
  __int16 v104;
  int v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;

  v11 = *(_QWORD *)&a6;
  v12 = *(_QWORD *)&a5;
  v138 = *MEMORY[0x1E0C80C00];
  v73 = a3;
  v16 = a4;
  v76 = a7;
  v77 = a8;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 4867, CFSTR("%@ only valid in assetsd!"), v67);

  }
  v17 = +[PLModelMigrator currentModelVersion](PLModelMigrator, "currentModelVersion");
  if ((int)v17 <= (int)v12)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v68, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 4871, CFSTR("Previous store version %d must be less than current version %d"), v12, v17);

  }
  if ((int)v17 <= (int)v11)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v69, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 4872, CFSTR("target version %d must be less than the current version %d"), v11, v17);

  }
  if ((int)v12 <= 6005)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v70, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 4873, CFSTR("Previous store version is unsupported"));

  }
  v18 = (_DWORD)v11 == 8012 || (_DWORD)v11 == 8000;
  v19 = v18;
  if (v18)
    v20 = 2;
  else
    v20 = 1;
  if ((int)v12 < 8318 || v12 >> 1 == 4500)
  {
    v19 = v20;
    v22 = (_DWORD)v11 == 9021;
  }
  else
  {
    v22 = 0;
  }
  v23 = (_DWORD)v11 == 9049;
  if ((_DWORD)v11 == 9300)
    ++v23;
  if ((_DWORD)v11 == 10113)
    ++v23;
  if ((_DWORD)v11 == 10123)
    ++v23;
  if ((_DWORD)v11 == 10405)
    ++v23;
  if ((_DWORD)v11 == 10407)
    ++v23;
  if ((_DWORD)v11 == 12329)
    ++v23;
  v24 = v23 + v22 + v19;
  if ((_DWORD)v11 == 14206 || (v25 = 0, (int)v12 >= 15000) && (_DWORD)v11 == 15054)
  {
    ++v24;
    v25 = 1;
  }
  v74 = v25;
  v72 = v12;
  if ((_DWORD)v11 == 15062)
    v26 = v24 + 1;
  else
    v26 = v24;
  v27 = [PLModelMigrationActionProcessor alloc];
  -[PLModelMigrator pathManager](self, "pathManager");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator analyticsEventManager](self, "analyticsEventManager");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator migrationLogger](self, "migrationLogger");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = -[PLModelMigrationActionProcessor initWithUUID:pathManager:migrationActionType:analyticsEventManager:logger:progressUnitCount:](v27, "initWithUUID:pathManager:migrationActionType:analyticsEventManager:logger:progressUnitCount:", v16, v28, 4, v29, v30, v26);

  -[PLModelMigrationActionProcessor progress](v31, "progress");
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  if (v32)
  {
    -[PLModelMigrationActionProcessor progress](v31, "progress");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v77, "addChild:withPendingUnitCount:", v33, a9);

  }
  context = (void *)MEMORY[0x19AEC1554]();
  v34 = MEMORY[0x1E0C809B0];
  v100[0] = MEMORY[0x1E0C809B0];
  v100[1] = 3221225472;
  v100[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke;
  v100[3] = &unk_1E36731D8;
  v100[4] = self;
  v35 = v73;
  v101 = v35;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Populating duration and HDR type on assets"), (_DWORD)v11 == 8000, v100);
  v98[0] = v34;
  v98[1] = 3221225472;
  v98[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_2;
  v98[3] = &unk_1E36731D8;
  v98[4] = self;
  v36 = v35;
  v99 = v36;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating transformable UUIDs to strings"), (_DWORD)v11 == 8012, v98);
  v96[0] = v34;
  v96[1] = 3221225472;
  v96[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_3;
  v96[3] = &unk_1E36731D8;
  v96[4] = self;
  v37 = v36;
  v97 = v37;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Populate synced orderKeys for albums and folders"), v22, v96);
  v94[0] = v34;
  v94[1] = 3221225472;
  v94[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_4;
  v94[3] = &unk_1E36731D8;
  v94[4] = self;
  v38 = v37;
  v95 = v38;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Populating videoCpVisibilityState and videoCpDurationValue on assets"), (_DWORD)v11 == 9049, v94);
  v92[0] = v34;
  v92[1] = 3221225472;
  v92[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_5;
  v92[3] = &unk_1E36731D8;
  v92[4] = self;
  v39 = v38;
  v93 = v39;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating PLCloudResource relationships"), (_DWORD)v11 == 9300, v92);
  v90[0] = v34;
  v90[1] = 3221225472;
  v90[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_6;
  v90[3] = &unk_1E36731D8;
  v90[4] = self;
  v40 = v39;
  v91 = v40;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating originalColorSpace"), (_DWORD)v11 == 10113, v90);
  v88[0] = v34;
  v88[1] = 3221225472;
  v88[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_7;
  v88[3] = &unk_1E36731D8;
  v88[4] = self;
  v41 = v40;
  v89 = v41;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating keywords"), (_DWORD)v11 == 10123, v88);
  v86[0] = v34;
  v86[1] = 3221225472;
  v86[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_8;
  v86[3] = &unk_1E36731D8;
  v86[4] = self;
  v42 = v41;
  v87 = v42;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating rejectedFacesGroup"), (_DWORD)v11 == 10405, v86);
  v84[0] = v34;
  v84[1] = 3221225472;
  v84[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_9;
  v84[3] = &unk_1E36731D8;
  v84[4] = self;
  v43 = v42;
  v85 = v43;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating detecedFacesGroup"), (_DWORD)v11 == 10407, v84);
  v82[0] = v34;
  v82[1] = 3221225472;
  v82[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_10;
  v82[3] = &unk_1E36731D8;
  v82[4] = self;
  v44 = v43;
  v83 = v44;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Emptying resources tables"), (_DWORD)v11 == 12329, v82);
  v80[0] = v34;
  v80[1] = 3221225472;
  v80[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_11;
  v80[3] = &unk_1E36731D8;
  v80[4] = self;
  v45 = v44;
  v81 = v45;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating video key frame values from MediaAnalysisTable to Asset table"), v74, v80);
  v78[0] = v34;
  v78[1] = 3221225472;
  v78[2] = __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_12;
  v78[3] = &unk_1E36731D8;
  v78[4] = self;
  v46 = v45;
  v79 = v46;
  -[PLModelMigrationActionProcessor performActionWithName:ifRequired:block:](v31, "performActionWithName:ifRequired:block:", CFSTR("Migrating UTI and Codec from relationship to table integrated values"), (_DWORD)v11 == 15062, v78);
  if (-[PLModelMigrationActionProcessor isSuccess](v31, "isSuccess"))
  {
    -[PLModelMigrator migrationLogger](self, "migrationLogger");
    v47 = objc_claimAutoreleasedReturnValue();
    v48 = v16;
    if (!v47)
      goto LABEL_54;
    v49 = (void *)v47;
    PLMigrationGetLog();
    v50 = objc_claimAutoreleasedReturnValue();
    v51 = os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT);

    if (!v51)
      goto LABEL_54;
    v137 = 0u;
    v136 = 0u;
    v135 = 0u;
    v134 = 0u;
    v133 = 0u;
    v132 = 0u;
    v131 = 0u;
    v130 = 0u;
    v129 = 0u;
    v128 = 0u;
    v127 = 0u;
    v126 = 0u;
    v124 = 0u;
    v125 = 0u;
    v122 = 0u;
    v123 = 0u;
    v120 = 0u;
    v121 = 0u;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    v114 = 0u;
    v115 = 0u;
    v112 = 0u;
    v113 = 0u;
    v110 = 0u;
    v111 = 0u;
    v108 = 0u;
    v109 = 0u;
    v106 = 0u;
    v107 = 0u;
    PLMigrationGetLog();
    v52 = objc_claimAutoreleasedReturnValue();
    os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT);
    v102 = 67109376;
    v103 = v72;
    v104 = 1024;
    v105 = v11;
    LODWORD(v71) = 14;
    v53 = (__int128 *)_os_log_send_and_compose_impl();

    -[PLModelMigrator migrationLogger](self, "migrationLogger", &v102, v71);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v55 = v54;
    v56 = v53;
    v57 = 4982;
    v58 = 0;
  }
  else
  {
    -[PLModelMigrationActionProcessor setSuccess:](v31, "setSuccess:", 0);
    -[PLModelMigrator migrationLogger](self, "migrationLogger");
    v59 = objc_claimAutoreleasedReturnValue();
    v48 = v16;
    if (!v59)
      goto LABEL_54;
    v60 = (void *)v59;
    PLMigrationGetLog();
    v61 = objc_claimAutoreleasedReturnValue();
    v62 = os_log_type_enabled(v61, OS_LOG_TYPE_ERROR);

    if (!v62)
      goto LABEL_54;
    v137 = 0u;
    v136 = 0u;
    v135 = 0u;
    v134 = 0u;
    v133 = 0u;
    v132 = 0u;
    v131 = 0u;
    v130 = 0u;
    v129 = 0u;
    v128 = 0u;
    v127 = 0u;
    v126 = 0u;
    v124 = 0u;
    v125 = 0u;
    v122 = 0u;
    v123 = 0u;
    v120 = 0u;
    v121 = 0u;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    v114 = 0u;
    v115 = 0u;
    v112 = 0u;
    v113 = 0u;
    v110 = 0u;
    v111 = 0u;
    v108 = 0u;
    v109 = 0u;
    v106 = 0u;
    v107 = 0u;
    PLMigrationGetLog();
    v63 = objc_claimAutoreleasedReturnValue();
    os_log_type_enabled(v63, OS_LOG_TYPE_ERROR);
    v102 = 67109376;
    v103 = v72;
    v104 = 1024;
    v105 = v11;
    LODWORD(v71) = 14;
    v53 = (__int128 *)_os_log_send_and_compose_impl();

    -[PLModelMigrator migrationLogger](self, "migrationLogger", &v102, v71);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v55 = v54;
    v56 = v53;
    v57 = 4985;
    v58 = 16;
  }
  objc_msgSend(v54, "logWithMessage:fromCodeLocation:type:", v56, "PLModelMigrator.m", v57, v58);

  if (v53 != &v106)
    free(v53);
LABEL_54:

  objc_autoreleasePoolPop(context);
  v64 = -[PLModelMigrationActionProcessor isSuccess](v31, "isSuccess");

  return v64;
}

- (BOOL)isPostProcessingLightweightMigration
{
  return self->_isPostProcessingLightWeightMigration;
}

- (BOOL)_migrateTransformableUUIDsToStringsInStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  SEL v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;

  v5 = a3;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 1;
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _migrateTransformableUUIDsToStringsInStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __62__PLModelMigrator__migrateTransformableUUIDsToStringsInStore___block_invoke;
  v11[3] = &unk_1E3664EC8;
  v9 = v8;
  v12 = v9;
  v13 = &v15;
  v14 = a2;
  objc_msgSend(&unk_1E3764508, "enumerateKeysAndObjectsUsingBlock:", v11);
  objc_msgSend(v9, "reset");

  objc_autoreleasePoolPop(v7);
  LOBYTE(v7) = *((_BYTE *)v16 + 24);
  _Block_object_dispose(&v15, 8);

  return (char)v7;
}

- (BOOL)_populateDurationAndHDRTypeFromAdditionalAssetAttributesInStagedStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  float v20;
  int v21;
  id v22;
  void *v23;
  NSObject *v24;
  BOOL v25;
  NSObject *v26;
  void *v27;
  void *v28;
  const char *aSelector;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id obj;
  int v36;
  id v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint8_t buf[4];
  _BYTE v43[10];
  void *v44;
  __int16 v45;
  void *v46;
  _BYTE v47[128];
  _QWORD v48[3];

  aSelector = a2;
  v48[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v32 = (void *)MEMORY[0x19AEC1554](v5);
  v33 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateDurationAndHDRTypeFromAdditionalAssetAttributesInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("AdditionalAssetAttributes"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("((duration != NULL) AND (duration > 0.0)) OR ((highDynamicRangeType != NULL) && (highDynamicRangeType != 0))"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  objc_msgSend(v7, "setPropertiesToFetch:", &unk_1E3763620);
  v48[0] = CFSTR("asset");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v48, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setRelationshipKeyPathsForPrefetching:", v9);

  v34 = v6;
  v31 = v7;
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
  if (v10)
  {
    v11 = v10;
    v12 = 0;
    v36 = 0;
    v13 = *(_QWORD *)v39;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v39 != v13)
          objc_enumerationMutation(obj);
        v15 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * v14);
        v16 = (void *)MEMORY[0x19AEC1554](v10);
        objc_msgSend(v15, "valueForKey:", CFSTR("duration"), aSelector);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "valueForKey:", CFSTR("highDynamicRangeType"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "valueForKey:", CFSTR("asset"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "floatValue");
        if (v20 > 0.0)
        {
          objc_msgSend(v19, "setValue:forKey:", v17, CFSTR("duration"));
          ++v36;
        }
        if (objc_msgSend(v18, "integerValue"))
        {
          objc_msgSend(v19, "setValue:forKey:", v18, CFSTR("highDynamicRangeType"));
          ++v12;
        }

        objc_autoreleasePoolPop(v16);
        ++v14;
      }
      while (v11 != v14);
      v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
      v11 = v10;
    }
    while (v10);
  }
  else
  {
    v12 = 0;
    v36 = 0;
  }

  if (!objc_msgSend(v34, "hasChanges"))
    goto LABEL_17;
  v37 = 0;
  v21 = objc_msgSend(v34, "save:", &v37);
  v22 = v37;
  v23 = v22;
  if (v21)
  {

LABEL_17:
    objc_msgSend(v34, "reset", aSelector);
    if (v36 > 0 || v12 >= 1)
    {
      PLMigrationGetLog();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)v43 = v36;
        *(_WORD *)&v43[4] = 1024;
        *(_DWORD *)&v43[6] = v12;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "Populated duration on %d and HDR type on %d assets", buf, 0xEu);
      }

    }
    v25 = 1;
    goto LABEL_26;
  }
  PLMigrationGetLog();
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(aSelector);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "userInfo");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    *(_QWORD *)v43 = v27;
    *(_WORD *)&v43[8] = 2112;
    v44 = v23;
    v45 = 2112;
    v46 = v28;
    _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

  }
  objc_msgSend(v34, "reset");
  v25 = 0;
LABEL_26:

  objc_autoreleasePoolPop(v32);
  return v25;
}

- (BOOL)_fixupBrokenBurstPicksInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  int v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *context;
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  id v36;
  __int16 v37;
  void *v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupBrokenBurstPicksInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("avalanchePickType != %d && avalancheUUID = NULL"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v11 = (id)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v29, v39, 16);
  if (v12)
  {
    v13 = v12;
    v14 = 0;
    v15 = *(_QWORD *)v30;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v30 != v15)
          objc_enumerationMutation(v11);
        v17 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
        v18 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v17, "setAvalanchePickType:", 0);
        objc_msgSend(v17, "setVisibilityState:", 0);
        objc_autoreleasePoolPop(v18);
      }
      v14 += v13;
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v29, v39, 16);
    }
    while (v13);
  }
  else
  {
    v14 = 0;
  }

  if (!objc_msgSend(v6, "hasChanges"))
  {
    LOBYTE(v19) = 1;
LABEL_18:
    if (v14 >= 1)
    {
      PLMigrationGetLog();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v34) = v14;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "Fixed up %d broken burst assets", buf, 8u);
      }

    }
    goto LABEL_22;
  }
  v28 = 0;
  v19 = objc_msgSend(v6, "save:", &v28);
  v20 = v28;
  if ((v19 & 1) == 0)
  {
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "userInfo");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v34 = v22;
      v35 = 2112;
      v36 = v20;
      v37 = 2112;
      v38 = v23;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

    }
  }

  if (v19)
    goto LABEL_18;
LABEL_22:

  objc_autoreleasePoolPop(context);
  return v19;
}

- (BOOL)skipDataProtectionForFilePath:(id)a3
{
  id v4;
  void *v5;
  char v6;
  BOOL v7;

  v4 = a3;
  if ((objc_msgSend(v4, "hasSuffix:", CFSTR(".sqlite")) & 1) != 0
    || (objc_msgSend(v4, "hasSuffix:", CFSTR("-wal")) & 1) != 0
    || (objc_msgSend(v4, "hasSuffix:", CFSTR("-shm")) & 1) != 0
    || (objc_msgSend(v4, "hasSuffix:", CFSTR("-journal")) & 1) != 0)
  {
    goto LABEL_7;
  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "isDCIM"))
  {

    goto LABEL_10;
  }
  v6 = objc_msgSend(v4, "hasSuffix:", *MEMORY[0x1E0D73530]);

  if ((v6 & 1) == 0)
  {
LABEL_10:
    v7 = 0;
    goto LABEL_8;
  }
LABEL_7:
  v7 = 1;
LABEL_8:

  return v7;
}

- (void)applyDataProtectionToPhotosPaths:(id)a3 fromKeyClass:(int)a4 toKeyClass:(int)a5
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  id v15;
  double v16;
  int inited;
  int v18;
  void *v19;
  int v20;
  NSObject *v21;
  void *v22;
  char *v23;
  __int128 v24;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  void *v32;
  __int16 v33;
  id v34;
  __int16 v35;
  int v36;
  __int16 v37;
  char *v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v8 = v6;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v27, v39, 16);
  if (v9)
  {
    v11 = v9;
    v12 = *(_QWORD *)v28;
    *(_QWORD *)&v10 = 138413058;
    v24 = v10;
    v26 = v8;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v28 != v12)
          objc_enumerationMutation(v8);
        v14 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        if (!-[PLModelMigrator skipDataProtectionForFilePath:](self, "skipDataProtectionForFilePath:", v14, v24))
        {
          if (objc_msgSend(v7, "fileExistsAtPath:isDirectory:", v14, 0))
          {
            v15 = objc_retainAutorelease(v14);
            objc_msgSend(v15, "fileSystemRepresentation");
            inited = aks_migrate_path_delayInitStub(v16);
            if (inited)
            {
              v18 = inited;
              v19 = v7;
              v20 = *__error();
              PLMigrationGetLog();
              v21 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
              {
                NSStringFromSelector(a2);
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                v23 = strerror(v20);
                *(_DWORD *)buf = v24;
                v32 = v22;
                v33 = 2112;
                v34 = v15;
                v35 = 1024;
                v36 = v18;
                v37 = 2080;
                v38 = v23;
                _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "%@ failed to migrate data protection for path: %@ %d %s", buf, 0x26u);

              }
              v7 = v19;
              v8 = v26;
            }
          }
        }
      }
      v11 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v27, v39, 16);
    }
    while (v11);
  }

}

- (void)applyDataProtectionToAllPhotosFilesOnce
{
  PLModelMigrator *v2;
  void *v3;
  char v4;
  NSObject *v5;
  unint64_t v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t i;
  void *v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t j;
  void *v36;
  char v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t k;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  NSObject *v51;
  double v52;
  void *v53;
  void *context;
  void *v55;
  void *v56;
  PLModelMigrator *v57;
  id obj;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint8_t buf[4];
  double v72;
  _BYTE v73[128];
  _BYTE v74[128];
  _BYTE v75[128];
  _QWORD v76[5];

  v2 = self;
  v76[3] = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isDataProtectionComplete");

  if ((v4 & 1) != 0)
    return;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "Applying Photos data protection", buf, 2u);
  }

  v6 = 0x1E0C99000uLL;
  objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
  v8 = v7;
  -[PLModelMigrator pathManager](v2, "pathManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v9, "isDCIM"))
  {
    objc_msgSend(v9, "photoDirectoryWithType:", 4);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v76[0] = v10;
    objc_msgSend(v9, "iTunesPhotosDirectory");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v76[1] = v11;
    objc_msgSend(v9, "photoDirectoryWithType:", 14);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v76[2] = v12;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v76, 3);
    v55 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    context = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v9, "photoDirectoryWithType:", 33);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "contentsOfDirectoryAtPath:error:", v13, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v16 = v15;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v67, v75, 16);
    if (v17)
    {
      v18 = v17;
      obj = v16;
      v53 = v9;
      v19 = 0;
      v20 = *(_QWORD *)v68;
      v21 = v56;
      do
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_QWORD *)v68 != v20)
            objc_enumerationMutation(obj);
          v23 = *(void **)(*((_QWORD *)&v67 + 1) + 8 * i);
          v24 = objc_msgSend(v23, "isEqualToString:", CFSTR("Caches"), v53);
          objc_msgSend(v13, "stringByAppendingPathComponent:", v23);
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = (void *)v25;
          if ((v24 & 1) != 0)
          {
            v27 = v19;
            v19 = (void *)v25;
          }
          else
          {
            if (!-[PLModelMigrator skipDataProtectionForFilePath:](v2, "skipDataProtectionForFilePath:", v25))
              objc_msgSend(v56, "addObject:", v26);
            v27 = v26;
          }

        }
        v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v75, 16);
      }
      while (v18);
      v16 = obj;

      if (!v19)
      {
        v9 = v53;
        v6 = 0x1E0C99000;
LABEL_46:

        objc_autoreleasePoolPop(context);
        objc_msgSend(v55, "arrayByAddingObjectsFromArray:", v21);
        v48 = v21;
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLModelMigrator applyDataProtectionToPhotosPaths:fromKeyClass:toKeyClass:](v2, "applyDataProtectionToPhotosPaths:fromKeyClass:toKeyClass:", v49, 4, 3);

        goto LABEL_47;
      }
      v57 = v2;
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "contentsOfDirectoryAtPath:error:", v19, 0);
      v29 = (void *)objc_claimAutoreleasedReturnValue();

      v65 = 0u;
      v66 = 0u;
      v63 = 0u;
      v64 = 0u;
      v30 = v29;
      v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v63, v74, 16);
      if (v31)
      {
        v32 = v31;
        v33 = 0;
        v34 = *(_QWORD *)v64;
        do
        {
          for (j = 0; j != v32; ++j)
          {
            if (*(_QWORD *)v64 != v34)
              objc_enumerationMutation(v30);
            v36 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * j);
            v37 = objc_msgSend(v36, "isEqualToString:", CFSTR("search"));
            objc_msgSend(v19, "stringByAppendingPathComponent:", v36);
            v38 = objc_claimAutoreleasedReturnValue();
            v39 = (void *)v38;
            if ((v37 & 1) != 0)
            {
              v40 = v33;
              v33 = (void *)v38;
            }
            else
            {
              if (!-[PLModelMigrator skipDataProtectionForFilePath:](v57, "skipDataProtectionForFilePath:", v38))
                objc_msgSend(v56, "addObject:", v39);
              v40 = v39;
            }

          }
          v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v63, v74, 16);
        }
        while (v32);

        if (!v33)
        {
          v9 = v53;
          v6 = 0x1E0C99000;
          v21 = v56;
          v2 = v57;
          v16 = obj;
          goto LABEL_46;
        }
        objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "contentsOfDirectoryAtPath:error:", v33, 0);
        v42 = (void *)objc_claimAutoreleasedReturnValue();

        v61 = 0u;
        v62 = 0u;
        v59 = 0u;
        v60 = 0u;
        v30 = v42;
        v43 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v59, v73, 16);
        v9 = v53;
        v6 = 0x1E0C99000;
        if (v43)
        {
          v44 = v43;
          v45 = *(_QWORD *)v60;
          do
          {
            for (k = 0; k != v44; ++k)
            {
              if (*(_QWORD *)v60 != v45)
                objc_enumerationMutation(v30);
              objc_msgSend(v33, "stringByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v59 + 1) + 8 * k));
              v47 = (void *)objc_claimAutoreleasedReturnValue();
              if (!-[PLModelMigrator skipDataProtectionForFilePath:](v57, "skipDataProtectionForFilePath:", v47))
                objc_msgSend(v56, "addObject:", v47);

            }
            v44 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v59, v73, 16);
          }
          while (v44);
        }

        v21 = v56;
      }
      else
      {
        v33 = v30;
        v9 = v53;
        v6 = 0x1E0C99000uLL;
      }

      v2 = v57;
      v16 = obj;
    }
    else
    {
      v19 = 0;
      v33 = v16;
      v21 = v56;
    }

    goto LABEL_46;
  }
LABEL_47:
  -[PLModelMigrator pathManager](v2, "pathManager");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "setDataProtectionComplete:", 1);

  PLMigrationGetLog();
  v51 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(*(id *)(v6 + 3432), "timeIntervalSinceReferenceDate");
    *(_DWORD *)buf = 134217984;
    v72 = v52 - v8;
    _os_log_impl(&dword_199541000, v51, OS_LOG_TYPE_DEFAULT, "Data protection completed in %1.1fs", buf, 0xCu);
  }

}

- (BOOL)_postProcessFromVersion6006Store:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  int v9;
  NSObject *v10;
  NSObject *v11;
  BOOL v12;
  uint8_t v14[16];
  uint8_t v15[16];
  uint8_t v16[16];
  uint8_t v17[16];
  uint8_t buf[16];

  v4 = a3;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "Rebuild photo cloud sharing metadata", buf, 2u);
  }

  if (!-[PLModelMigrator _initiateLightweightReimportOfAllPhotoCloudSharingMetadataInStore:](self, "_initiateLightweightReimportOfAllPhotoCloudSharingMetadataInStore:", v4))goto LABEL_17;
  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Fixing imported CCK events list.", v17, 2u);
  }

  if (!-[PLModelMigrator _fixupImportedEventsInStore:](self, "_fixupImportedEventsInStore:", v4))
    goto LABEL_17;
  PLMigrationGetLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEFAULT, "Fixing CCK asset types", v16, 2u);
  }

  if (!-[PLModelMigrator _fixupImportedAssetsInStore:](self, "_fixupImportedAssetsInStore:", v4))
    goto LABEL_17;
  -[PLModelMigrator pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isDCIM");

  if (!v9)
    goto LABEL_14;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Fixing sync'd asset attributes", v15, 2u);
  }

  if (-[PLModelMigrator _fixupSyncedAssetAttributesInStore:](self, "_fixupSyncedAssetAttributesInStore:", v4))
  {
LABEL_14:
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Moving My Photo Stream to Albums list.", v14, 2u);
    }

    v12 = -[PLModelMigrator _moveMyPhotoStreamToAlbumsListInStore:](self, "_moveMyPhotoStreamToAlbumsListInStore:", v4);
  }
  else
  {
LABEL_17:
    v12 = 0;
  }

  return v12;
}

- (BOOL)_populateLightweightReimportDirectoryWithPhotoCloudSharingAssetsInManagedObjectContext:(id)a3 error:(id *)a4
{
  void *v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  BOOL v12;
  void *v13;
  char v14;
  NSObject *v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  NSObject *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  void *v37;
  NSObject *v38;
  void *v39;
  NSObject *v40;
  char v41;
  id v42;
  NSObject *v43;
  void *v44;
  NSObject *v45;
  os_log_type_t v46;
  const char *v47;
  uint64_t v48;
  BOOL v49;
  char v50;
  id v51;
  void *v52;
  NSObject *v53;
  char v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  void *v61;
  char v62;
  NSObject *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  NSObject *v68;
  void *v69;
  void *v70;
  NSObject *v71;
  void *v72;
  id v73;
  void *v74;
  NSObject *v75;
  NSObject *v76;
  const char *v77;
  NSObject *v78;
  uint32_t v79;
  NSObject *v81;
  void *v82;
  NSObject *v83;
  void *v84;
  void *v85;
  NSObject *v86;
  id v87;
  void *v88;
  uint64_t v89;
  NSObject *v90;
  void *v91;
  int v92;
  uint64_t v93;
  NSObject *v94;
  uint64_t v95;
  NSObject *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  int v106;
  int v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  id obj;
  NSObject *v115;
  id v116;
  id v117;
  id v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  id v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  id v128;
  char v129;
  uint8_t buf[4];
  _BYTE v131[18];
  __int16 v132;
  void *v133;
  __int16 v134;
  void *v135;
  __int16 v136;
  void *v137;
  _BYTE v138[128];
  _BYTE v139[128];
  uint64_t v140;

  v140 = *MEMORY[0x1E0C80C00];
  v87 = a3;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "photoDirectoryWithType:", 22);
  v88 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator pathManager](self, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "privateCacheDirectoryWithSubType:", 3);
  v91 = (void *)objc_claimAutoreleasedReturnValue();

  PLMigrationGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    *(_QWORD *)v131 = v91;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Moving all photo cloud sharing asset data into lightweight reimport cache directory %@", buf, 0xCu);
  }

  if ((objc_msgSend(v108, "fileExistsAtPath:", v88) & 1) != 0)
  {
    +[PLGenericAlbum albumsWithKind:inManagedObjectContext:](PLGenericAlbum, "albumsWithKind:inManagedObjectContext:", 1505, v87);
    v9 = objc_claimAutoreleasedReturnValue();
    if (!-[NSObject count](v9, "count"))
    {
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "No photo cloud sharing albums found, nothing to move", buf, 2u);
      }
      goto LABEL_107;
    }
    v129 = 0;
    v90 = v9;
    if (objc_msgSend(v108, "fileExistsAtPath:isDirectory:", v91, &v129) && v129)
    {
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Found existing lightweight reimport cloud sharing data cache directory, merging asset data", buf, 2u);
      }

      v11 = 0;
    }
    else
    {
      v128 = 0;
      v14 = objc_msgSend(v108, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v91, 1, 0, &v128);
      v11 = v128;
      if ((v14 & 1) == 0)
      {
        PLMigrationGetLog();
        v81 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
        {
          -[NSObject localizedDescription](v11, "localizedDescription");
          v82 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject userInfo](v11, "userInfo");
          v83 = v11;
          v84 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v84, "description");
          v85 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          *(_QWORD *)v131 = v91;
          *(_WORD *)&v131[8] = 2112;
          *(_QWORD *)&v131[10] = v82;
          v132 = 2112;
          v133 = v85;
          _os_log_impl(&dword_199541000, v81, OS_LOG_TYPE_ERROR, "Unable to create photo cloud sharing lightweight reimport cache directory %@: %@ %@", buf, 0x20u);

          v11 = v83;
          v9 = v90;

        }
        if (a4)
        {
          v11 = objc_retainAutorelease(v11);
          v12 = 0;
          *a4 = v11;
          goto LABEL_108;
        }
LABEL_118:
        v12 = 0;
        goto LABEL_108;
      }
    }
    v126 = 0u;
    v127 = 0u;
    v124 = 0u;
    v125 = 0u;
    v15 = v9;
    v97 = -[NSObject countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v124, v139, 16);
    if (v97)
    {
      v107 = 0;
      v106 = 0;
      v95 = *(_QWORD *)v125;
      v89 = *MEMORY[0x1E0D74310];
      v96 = v15;
      do
      {
        for (i = 0; i != v97; i = v25 + 1)
        {
          if (*(_QWORD *)v125 != v95)
            objc_enumerationMutation(v15);
          v101 = i;
          v17 = *(void **)(*((_QWORD *)&v124 + 1) + 8 * i);
          objc_msgSend(v17, "assets");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = (void *)objc_msgSend(v18, "copy");

          v102 = v19;
          if (objc_msgSend(v19, "count"))
          {
            objc_msgSend(v17, "cloudPersonID");
            v20 = objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "cloudGUID");
            v98 = (void *)objc_claimAutoreleasedReturnValue();
            +[PLCloudSharedAlbum lightweightReimportDirectoryNameWithGUID:cloudPersonID:](PLCloudSharedAlbum, "lightweightReimportDirectoryNameWithGUID:cloudPersonID:");
            v100 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v91, "stringByAppendingPathComponent:");
            v21 = objc_claimAutoreleasedReturnValue();
            v22 = objc_msgSend(v108, "fileExistsAtPath:isDirectory:", v21, &v129);
            if (v129)
              v23 = v22;
            else
              v23 = 0;
            v110 = (void *)v21;
            v92 = v23;
            v99 = (void *)v20;
            if ((v23 & 1) != 0)
            {
              PLMigrationGetLog();
              v24 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                *(_QWORD *)v131 = v100;
                _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "Found existing lightweight reimport cloud sharing data cache directory for album '%@', merging asset data", buf, 0xCu);
              }

LABEL_31:
              v94 = v11;
              v93 = MEMORY[0x19AEC1554]();
              objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
              v109 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
              v111 = (void *)objc_claimAutoreleasedReturnValue();
              v119 = 0u;
              v120 = 0u;
              v121 = 0u;
              v122 = 0u;
              obj = v102;
              v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v119, v138, 16);
              v28 = v108;
              if (!v27)
                goto LABEL_75;
              v29 = v27;
              v30 = *(_QWORD *)v120;
              v112 = *(_QWORD *)v120;
              while (2)
              {
                v31 = 0;
                v113 = v29;
LABEL_34:
                if (*(_QWORD *)v120 != v30)
                  objc_enumerationMutation(obj);
                v32 = *(void **)(*((_QWORD *)&v119 + 1) + 8 * v31);
                v33 = objc_msgSend(v32, "cloudPlaceholderKind");
                objc_msgSend(v32, "cloudAssetGUID");
                v34 = (void *)objc_claimAutoreleasedReturnValue();
                if (v33 > 7)
                  goto LABEL_56;
                if (((1 << v33) & 0x98) != 0)
                {
                  objc_msgSend(v32, "filename");
                  v35 = objc_claimAutoreleasedReturnValue();
                  if (v35)
                  {
                    objc_msgSend(v111, "objectForKey:", v35);
                    v36 = objc_claimAutoreleasedReturnValue();
                    if (v36)
                    {
                      v37 = (void *)v36;
                      objc_msgSend(v109, "removeObjectForKey:", v36);
                      +[PLManagedAsset lightweightReimportFileNameWithGUID:type:](PLManagedAsset, "lightweightReimportFileNameWithGUID:type:", v37, 0);
                      v38 = objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v110, "stringByAppendingPathComponent:", v38);
                      v39 = (void *)objc_claimAutoreleasedReturnValue();
                      PLMigrationGetLog();
                      v40 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
                      {
                        *(_DWORD *)buf = 138412802;
                        *(_QWORD *)v131 = v38;
                        *(_WORD *)&v131[8] = 2112;
                        *(_QWORD *)&v131[10] = v34;
                        v132 = 2112;
                        v133 = v37;
                        _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_DEBUG, "Found two assets pointing to the same file %@ on disk, ommiting %@ and %@ from the reimport cache", buf, 0x20u);
                      }

                      v118 = 0;
                      v41 = objc_msgSend(v28, "removeItemAtPath:error:", v39, &v118);
                      v42 = v118;
                      if ((v41 & 1) == 0)
                      {
                        PLMigrationGetLog();
                        v43 = objc_claimAutoreleasedReturnValue();
                        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
                        {
                          objc_msgSend(v42, "localizedDescription");
                          v103 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v42, "userInfo");
                          v104 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v104, "description");
                          v44 = (void *)objc_claimAutoreleasedReturnValue();
                          *(_DWORD *)buf = 138413314;
                          *(_QWORD *)v131 = v34;
                          *(_WORD *)&v131[8] = 2112;
                          *(_QWORD *)&v131[10] = v37;
                          v132 = 2112;
                          v133 = v39;
                          v134 = 2112;
                          v135 = v103;
                          v136 = 2112;
                          v137 = v44;
                          _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_ERROR, "Unable to remove shared asset data with references from %@ and %@ at path %@, %@ %@", buf, 0x34u);

                          v28 = v108;
                        }
                        goto LABEL_70;
                      }
                      goto LABEL_71;
                    }
                  }
                  objc_msgSend(v32, "pathForOriginalFile");
                  v48 = objc_claimAutoreleasedReturnValue();
                  v37 = (void *)v48;
                  if (v35)
                    v49 = v48 == 0;
                  else
                    v49 = 1;
                  if (v49)
                  {
                    PLMigrationGetLog();
                    v38 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_DWORD *)buf = 138412802;
                      *(_QWORD *)v131 = v34;
                      *(_WORD *)&v131[8] = 2112;
                      *(_QWORD *)&v131[10] = v35;
                      v132 = 2112;
                      v133 = v37;
                      _os_log_impl(&dword_199541000, v38, OS_LOG_TYPE_DEFAULT, "Skipping asset %@ with missing filename or path (%@, %@)", buf, 0x20u);
                    }
                    v42 = 0;
                  }
                  else
                  {
                    objc_msgSend(v111, "setObject:forKey:", v34, v35);
                    +[PLManagedAsset lightweightReimportFileNameWithGUID:type:](PLManagedAsset, "lightweightReimportFileNameWithGUID:type:", v34, 0);
                    v38 = objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v110, "stringByAppendingPathComponent:", v38);
                    v39 = (void *)objc_claimAutoreleasedReturnValue();
                    v117 = 0;
                    v50 = objc_msgSend(v28, "linkItemAtPath:toPath:error:", v37, v39, &v117);
                    v51 = v117;
                    v42 = v51;
                    if ((v50 & 1) != 0)
                      goto LABEL_61;
                    if (objc_msgSend(v51, "code") != 516)
                      goto LABEL_67;
                    PLMigrationGetLog();
                    v53 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_DWORD *)buf = 138412290;
                      *(_QWORD *)v131 = v34;
                      _os_log_impl(&dword_199541000, v53, OS_LOG_TYPE_DEFAULT, "Attempting to replace existing cached image for %@", buf, 0xCu);
                    }

                    if (objc_msgSend(v108, "removeItemAtPath:error:", v37, 0)
                      && (v116 = v42,
                          v54 = objc_msgSend(v108, "linkItemAtPath:toPath:error:", v37, v39, &v116),
                          v55 = v116,
                          v42,
                          v42 = v55,
                          (v54 & 1) != 0))
                    {
LABEL_61:
                      ++v107;
                      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
                      v43 = objc_claimAutoreleasedReturnValue();
                      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v33);
                      v52 = (void *)objc_claimAutoreleasedReturnValue();
                      -[NSObject setObject:forKey:](v43, "setObject:forKey:", v52, CFSTR("cloudPlaceholderKind"));

                      objc_msgSend(v109, "setObject:forKey:", v43, v34);
                    }
                    else
                    {
LABEL_67:
                      ++v106;
                      PLMigrationGetLog();
                      v43 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
                      {
                        objc_msgSend(v42, "localizedDescription");
                        v56 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v42, "userInfo");
                        v105 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v105, "description");
                        v57 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138413314;
                        *(_QWORD *)v131 = v34;
                        *(_WORD *)&v131[8] = 2112;
                        *(_QWORD *)&v131[10] = v37;
                        v132 = 2112;
                        v133 = v39;
                        v134 = 2112;
                        v135 = v56;
                        v136 = 2112;
                        v137 = v57;
                        _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_ERROR, "Unable to link shared asset data for %@ from %@ to %@, %@ %@", buf, 0x34u);

                      }
                    }
                    v28 = v108;
LABEL_70:

LABEL_71:
                  }

                  v30 = v112;
                  v29 = v113;
LABEL_73:

                  if (v29 == ++v31)
                  {
                    v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v119, v138, 16);
                    if (!v29)
                    {
LABEL_75:

                      v58 = v109;
                      if (objc_msgSend(v109, "count"))
                      {
                        objc_msgSend(v110, "stringByAppendingPathComponent:", v89);
                        v59 = (void *)objc_claimAutoreleasedReturnValue();
                        v9 = v90;
                        v11 = v94;
                        if (v92)
                        {
                          objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithContentsOfFile:", v59);
                          v60 = (void *)objc_claimAutoreleasedReturnValue();
                          v61 = v60;
                          if (v60 && objc_msgSend(v60, "count"))
                          {
                            objc_msgSend(v61, "addEntriesFromDictionary:", v109);
                            v58 = v61;

                            v115 = v94;
                            v62 = objc_msgSend(v108, "removeItemAtPath:error:", v59, &v115);
                            v11 = v115;

                            if ((v62 & 1) == 0)
                            {
                              PLMigrationGetLog();
                              v63 = objc_claimAutoreleasedReturnValue();
                              if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
                              {
                                -[NSObject localizedDescription](v11, "localizedDescription");
                                v64 = (void *)objc_claimAutoreleasedReturnValue();
                                -[NSObject userInfo](v11, "userInfo");
                                v65 = (void *)objc_claimAutoreleasedReturnValue();
                                objc_msgSend(v65, "description");
                                v66 = (void *)objc_claimAutoreleasedReturnValue();
                                *(_DWORD *)buf = 138412802;
                                *(_QWORD *)v131 = v59;
                                *(_WORD *)&v131[8] = 2112;
                                *(_QWORD *)&v131[10] = v64;
                                v132 = 2112;
                                v133 = v66;
                                _os_log_impl(&dword_199541000, v63, OS_LOG_TYPE_ERROR, "Unable to remove previous cached album info dictionary from %@, %@ %@", buf, 0x20u);

                              }
                            }
                            v9 = v90;
                          }
                          else
                          {
                            v58 = v109;
                          }

                        }
                        v73 = v58;
                        objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v58, 100, 0, 0);
                        v74 = (void *)objc_claimAutoreleasedReturnValue();
                        if ((objc_msgSend(v74, "writeToFile:options:error:", v59, 1073741825, 0) & 1) == 0)
                        {
                          PLMigrationGetLog();
                          v75 = objc_claimAutoreleasedReturnValue();
                          if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR))
                          {
                            *(_DWORD *)buf = 138412290;
                            *(_QWORD *)v131 = v59;
                            _os_log_impl(&dword_199541000, v75, OS_LOG_TYPE_ERROR, "Failed to write cached album info dictionary %@", buf, 0xCu);
                          }

                        }
                        v67 = (void *)v93;
                        v58 = v73;
                      }
                      else
                      {
                        v9 = v90;
                        v67 = (void *)v93;
                        v11 = v94;
                      }

                      objc_autoreleasePoolPop(v67);
                      goto LABEL_96;
                    }
                    continue;
                  }
                  goto LABEL_34;
                }
                break;
              }
              if (((1 << v33) & 5) != 0)
              {
                PLMigrationGetLog();
                v35 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG))
                {
                  *(_DWORD *)buf = 138412546;
                  *(_QWORD *)v131 = v34;
                  *(_WORD *)&v131[8] = 1024;
                  *(_DWORD *)&v131[10] = v33;
                  v45 = v35;
                  v46 = OS_LOG_TYPE_DEBUG;
                  v47 = "Skipping cloud shared asset %@ with placeholder kind: %d";
                  goto LABEL_58;
                }
              }
              else
              {
LABEL_56:
                PLMigrationGetLog();
                v35 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 67109378;
                  *(_DWORD *)v131 = v33;
                  *(_WORD *)&v131[4] = 2112;
                  *(_QWORD *)&v131[6] = v34;
                  v45 = v35;
                  v46 = OS_LOG_TYPE_ERROR;
                  v47 = "Invalid cloud shared asset placeholder kind: %d for shared asset %@";
LABEL_58:
                  _os_log_impl(&dword_199541000, v45, v46, v47, buf, 0x12u);
                }
              }
              v42 = 0;
              goto LABEL_73;
            }

            v123 = 0;
            v26 = objc_msgSend(v108, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v21, 1, 0, &v123);
            v11 = v123;
            if ((v26 & 1) != 0)
              goto LABEL_31;
            PLMigrationGetLog();
            v68 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
            {
              -[NSObject localizedDescription](v11, "localizedDescription");
              v69 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSObject userInfo](v11, "userInfo");
              v70 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v70, "description");
              v71 = v11;
              v72 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412802;
              *(_QWORD *)v131 = v110;
              *(_WORD *)&v131[8] = 2112;
              *(_QWORD *)&v131[10] = v69;
              v132 = 2112;
              v133 = v72;
              _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_ERROR, "Unable to create photo cloud sharing lightweight reimport cache directory '%@' for album: %@ %@", buf, 0x20u);

              v11 = v71;
            }

LABEL_96:
            v15 = v96;
            v25 = v101;

          }
          else
          {
            v15 = v96;
            v25 = v101;
          }

        }
        v97 = -[NSObject countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v124, v139, 16);
      }
      while (v97);

      if (v107 >= 1)
      {
        PLMigrationGetLog();
        v76 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67109376;
          *(_DWORD *)v131 = v107;
          *(_WORD *)&v131[4] = 1024;
          *(_DWORD *)&v131[6] = v106;
          v77 = "Successfully cached %d shared asset image files to lightweight reimport cloud sharing data cache (%d failed)";
          v78 = v76;
          v79 = 14;
LABEL_105:
          _os_log_impl(&dword_199541000, v78, OS_LOG_TYPE_DEFAULT, v77, buf, v79);
          goto LABEL_106;
        }
        goto LABEL_106;
      }
      if (v106 >= 1)
      {
        PLMigrationGetLog();
        v86 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)v131 = v106;
          _os_log_impl(&dword_199541000, v86, OS_LOG_TYPE_ERROR, "Failed to cache any shared asset image files to lightweight reimport cloud sharing data cache (%d failed)", buf, 8u);
        }

        goto LABEL_118;
      }
    }
    else
    {

    }
    PLMigrationGetLog();
    v76 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v77 = "No shared asset image files found, none cached to lightweight reimport cloud sharing data cache";
      v78 = v76;
      v79 = 2;
      goto LABEL_105;
    }
LABEL_106:

LABEL_107:
    v12 = 1;
LABEL_108:
    v13 = v108;

    goto LABEL_109;
  }
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "No cloud sharing data directory found, no photo shared asset data to migrate", buf, 2u);
  }
  v12 = 1;
  v13 = v108;
LABEL_109:

  return v12;
}

- (BOOL)_initiateLightweightReimportOfAllPhotoCloudSharingMetadataInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  BOOL v10;
  id v11;
  NSObject *v12;
  void *v13;
  _BOOL4 v14;
  id v15;
  void *v16;
  BOOL v17;
  id v18;
  void *v19;
  NSObject *v20;
  NSObject *v21;
  BOOL v22;
  void *v23;
  void *v24;
  void *v25;
  id v27;
  id v28;
  id v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0D73280];
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "libraryURL");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v5) = objc_msgSend(v5, "isSystemPhotoLibraryURL:", v7);

  if ((_DWORD)v5)
  {
    v8 = (void *)MEMORY[0x19AEC1554]();
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _initiateLightweightReimportOfAllPhotoCloudSharingMetadataInStore:]", *MEMORY[0x1E0C97C38]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = 0;
    v10 = -[PLModelMigrator _populateLightweightReimportDirectoryWithPhotoCloudSharingAssetsInManagedObjectContext:error:](self, "_populateLightweightReimportDirectoryWithPhotoCloudSharingAssetsInManagedObjectContext:error:", v9, &v29);
    v11 = v29;
    if (!v10)
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v11, "userInfo");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v31 = v11;
        v32 = 2112;
        v33 = v13;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Unable to populate the photo cloud sharing lightweight reimport cache %@ %@", buf, 0x16u);

      }
    }
    v28 = 0;
    v14 = -[PLModelMigrator _deletePhotoCloudSharingMetadataInManagedObjectContext:error:](self, "_deletePhotoCloudSharingMetadataInManagedObjectContext:error:", v9, &v28);
    v15 = v28;
    v16 = v15;
    if (v14)
    {
      v27 = 0;
      v17 = +[PLPhotoSharingHelper removeCloudSharingDirectories:](PLPhotoSharingHelper, "removeCloudSharingDirectories:", &v27);
      v18 = v27;
      v19 = v18;
      if (v17)
      {

        PLMigrationGetLog();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Telling mstreamd to forget everything to initiate lightweight reimport of photo cloud sharing metadata ", buf, 2u);
        }

        +[PLPhotoSharingHelper forgetSharingPersonID:](PLPhotoSharingHelper, "forgetSharingPersonID:", 0);
        +[PLNotificationManager sharedManager](PLNotificationManager, "sharedManager");
        v21 = objc_claimAutoreleasedReturnValue();
        -[NSObject discardAllNotifications](v21, "discardAllNotifications");
        v22 = 1;
LABEL_17:

        objc_autoreleasePoolPop(v8);
        goto LABEL_18;
      }

    }
    else
    {
      v19 = v15;
    }
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v19, "localizedDescription");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "userInfo");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "description");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v31 = v23;
      v32 = 2112;
      v33 = v25;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "Failed to initiate lightweight reimport of photo cloud sharing metadata %@ %@", buf, 0x16u);

    }
    v22 = 0;
    v16 = v19;
    goto LABEL_17;
  }
  v22 = 1;
LABEL_18:

  return v22;
}

- (BOOL)_updateKindSubtypeForPanoramaPhotosNeedsReset:(BOOL)a3 inStore:(id)a4
{
  _BOOL4 v4;
  id v7;
  void *v8;
  id v9;
  const char *v10;
  sqlite3 *v11;
  sqlite3 *v12;
  id v13;
  int v14;
  int v15;
  int v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  BOOL v23;
  int v24;
  NSObject *v25;
  void *v27;
  void *v28;
  char *errmsg;
  uint8_t buf[4];
  int v31;
  __int16 v32;
  char *v33;
  uint64_t v34;

  v4 = a3;
  v34 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 5509, CFSTR("%@ can only be called from assetsd"), v28);

  }
  objc_msgSend(v7, "URL");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "path");
  v9 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v10 = (const char *)objc_msgSend(v9, "fileSystemRepresentation");

  v11 = PLOpenSQLTransactionWithDBPath(v10);
  if (!v11)
    goto LABEL_17;
  v12 = v11;
  errmsg = 0;
  if (!v4)
  {
LABEL_10:
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("SET ZKINDSUBTYPE=%d, ZCLOUDLOCALSTATE=%d"), 1, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(((cast(ZWIDTH as real) / cast(ZHEIGHT as real)) > %f) OR (cast(ZHEIGHT as real) / cast(ZWIDTH as real)) > %f) "), 0x4000000000000000, 0x4000000000000000);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(ZHEIGHT > %d AND ZHEIGHT < %d AND ZWIDTH > %d and ZWIDTH < %d)"), 800, 30000, 800, 30000);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("UPDATE ZASSET %@ WHERE %@ AND %@"), v18, v19, v20);
    v21 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v15 = sqlite3_exec(v12, (const char *)objc_msgSend(v21, "UTF8String"), 0, 0, &errmsg);

    if (v15)
      goto LABEL_11;
    v24 = sqlite3_changes(v12);
    PLMigrationGetLog();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      v31 = v24;
      _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEFAULT, "Updated %d panorama photos with subtypes", buf, 8u);
    }

    PLCommitSQLTransactionAndCloseDB(v12);
LABEL_17:
    v23 = 1;
    goto LABEL_18;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("UPDATE ZASSET SET ZKINDSUBTYPE=%d WHERE ZKINDSUBTYPE=%d"), 0, 1);
  v13 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v14 = sqlite3_exec(v12, (const char *)objc_msgSend(v13, "UTF8String"), 0, 0, &errmsg);
  if (!v14)
  {
    v16 = sqlite3_changes(v12);
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      v31 = v16;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Reset %d panorama photo subtypes", buf, 8u);
    }

    goto LABEL_10;
  }
  v15 = v14;

LABEL_11:
  PLMigrationGetLog();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109378;
    v31 = v15;
    v32 = 2080;
    v33 = errmsg;
    _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Failed to update panorama subtypes, %d %s", buf, 0x12u);
  }

  PLRollbackSQLTransactionAndCloseDB(v12);
  v23 = 0;
LABEL_18:

  return v23;
}

- (BOOL)_fixupImportedEventsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t i;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  void *context;
  void *v26;
  void *v27;
  id v28;
  uint8_t buf[4];
  id v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  v26 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupImportedEventsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbumList importListInManagedObjectContext:](PLManagedAlbumList, "importListInManagedObjectContext:", v6);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbumList eventListInManagedObjectContext:](PLManagedAlbumList, "eventListInManagedObjectContext:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "albums");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E40], "orderedSetWithOrderedSet:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "count");
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    for (i = 0; i != v10; ++i)
    {
      v14 = (void *)MEMORY[0x19AEC1554]();
      objc_msgSend(v9, "objectAtIndex:", i);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v15, "kindValue") == 12)
      {
        objc_msgSend(v11, "addObject:", v15);
        objc_msgSend(v12, "addIndex:", i);
      }

      objc_autoreleasePoolPop(v14);
    }
  }
  v16 = objc_msgSend(v11, "count");
  if (v16)
  {
    objc_msgSend(v27, "albums");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", 0, v16);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "insertObjects:atIndexes:", v11, v18);
    objc_msgSend(v8, "removeObjectsAtIndexes:", v12);

  }
  if (objc_msgSend(v6, "hasChanges"))
  {
    v28 = 0;
    v19 = objc_msgSend(v6, "save:", &v28);
    v20 = v28;
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = v21;
    if ((v19 & 1) != 0)
    {
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v30) = v16;
        _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "Moved %d import events into import list", buf, 8u);
      }
    }
    else if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v20, "userInfo");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v30 = v20;
      v31 = 2112;
      v32 = v23;
      _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "_fixupImportedEventsInStore failed: %@ %@", buf, 0x16u);

    }
  }
  else
  {
    v19 = 1;
  }

  objc_autoreleasePoolPop(context);
  return v19;
}

- (BOOL)_fixupImportedAssetsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t k;
  char v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  BOOL v31;
  void *v32;
  NSObject *v33;
  void *v34;
  id v36;
  void *v37;
  uint64_t v38;
  NSObject *obj;
  uint64_t v40;
  void *v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint8_t buf[4];
  void *v56;
  __int16 v57;
  void *v58;
  _BYTE v59[128];
  _BYTE v60[128];
  _BYTE v61[128];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v38 = MEMORY[0x19AEC1554](v5);
  v36 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupImportedAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLGenericAlbum albumWithKind:inManagedObjectContext:](PLGenericAlbum, "albumWithKind:inManagedObjectContext:", 1604);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v37 = v6;
  objc_msgSend(v6, "assets");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
  if (v9)
  {
    v10 = v9;
    v11 = 0;
    v12 = *(_QWORD *)v52;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v52 != v12)
          objc_enumerationMutation(v8);
        v14 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * i);
        if (!objc_msgSend(v14, "savedAssetType"))
        {
          if (!v11)
          {
            objc_msgSend(MEMORY[0x1E0C99DE8], "array");
            v11 = objc_claimAutoreleasedReturnValue();
            objc_msgSend(v7, "addObject:", v11);
          }
          -[NSObject addObject:](v11, "addObject:", v14);
          if ((unint64_t)-[NSObject count](v11, "count") >= 0x64)
          {

            v11 = 0;
          }
        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
    }
    while (v10);
  }
  else
  {
    v11 = 0;
  }

  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v15 = v7;
  v16 = -[NSObject countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v47, v60, 16);
  if (v16)
  {
    v17 = v16;
    v18 = 0;
    obj = v15;
    v40 = *(_QWORD *)v48;
    while (2)
    {
      for (j = 0; j != v17; ++j)
      {
        if (*(_QWORD *)v48 != v40)
          objc_enumerationMutation(obj);
        v20 = *(id *)(*((_QWORD *)&v47 + 1) + 8 * j);

        v21 = (void *)MEMORY[0x19AEC1554]();
        v43 = 0u;
        v44 = 0u;
        v45 = 0u;
        v46 = 0u;
        v11 = v20;
        v22 = -[NSObject countByEnumeratingWithState:objects:count:](v11, "countByEnumeratingWithState:objects:count:", &v43, v59, 16);
        if (v22)
        {
          v23 = v22;
          v24 = *(_QWORD *)v44;
          do
          {
            for (k = 0; k != v23; ++k)
            {
              if (*(_QWORD *)v44 != v24)
                objc_enumerationMutation(v11);
              objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * k), "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForImportedByCameraConnectionKit"));
            }
            v18 += v23;
            v23 = -[NSObject countByEnumeratingWithState:objects:count:](v11, "countByEnumeratingWithState:objects:count:", &v43, v59, 16);
          }
          while (v23);
        }

        v42 = 0;
        v26 = objc_msgSend(v41, "save:", &v42);
        v27 = v42;
        v28 = v27;
        if ((v26 & 1) == 0)
        {
          PLMigrationGetLog();
          v33 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v28, "userInfo");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412546;
            v56 = v28;
            v57 = 2112;
            v58 = v34;
            _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "_fixupImportedAssetsInStore failed: %@ %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v21);
          v15 = obj;

          v31 = 0;
          goto LABEL_38;
        }

        objc_autoreleasePoolPop(v21);
      }
      v15 = obj;
      v17 = -[NSObject countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v47, v60, 16);
      if (v17)
        continue;
      break;
    }

    if (!v18)
    {
      v31 = 1;
      v32 = v36;
      v30 = v37;
      v29 = (void *)v38;
      goto LABEL_40;
    }
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    v30 = v37;
    v29 = (void *)v38;
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v56) = v18;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Fixed asset save type on %d CCK assets", buf, 8u);
    }
    v31 = 1;
    v32 = v36;
  }
  else
  {

    v31 = 1;
    v11 = v15;
LABEL_38:
    v32 = v36;
    v30 = v37;
    v29 = (void *)v38;
  }

LABEL_40:
  objc_autoreleasePoolPop(v29);

  return v31;
}

- (BOOL)_fixupAlbumOrderInAlbumListInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  NSObject *v23;
  void *v24;
  void *context;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint8_t buf[4];
  id v33;
  __int16 v34;
  void *v35;
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupAlbumOrderInAlbumListInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbumList albumListInManagedObjectContext:](PLManagedAlbumList, "albumListInManagedObjectContext:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "albums");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v8, "copy");

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v11 = v9;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v36, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v29;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v29 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
        v17 = (void *)MEMORY[0x19AEC1554]();
        if (objc_msgSend(v16, "kindValue") == 2)
          objc_msgSend(v10, "addObject:", v16);
        else
          objc_msgSend(v7, "insertIntoOrderedAlbumsAtIndexByPriorityForAlbum:", v16);
        objc_autoreleasePoolPop(v17);
      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v36, 16);
    }
    while (v13);
  }

  objc_msgSend(v7, "albums");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "removeObjectsInArray:", v10);

  objc_msgSend(v7, "albums");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "addObjectsFromArray:", v10);

  +[PLGenericAlbum albumWithKind:inManagedObjectContext:](PLManagedFolder, "albumWithKind:inManagedObjectContext:", 3999, v6);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbumList pushChangesFromAlbumContainer:toAlbumContainer:](PLManagedAlbumList, "pushChangesFromAlbumContainer:toAlbumContainer:", v7, v20);
  if (objc_msgSend(v6, "hasChanges"))
  {
    v27 = 0;
    v21 = objc_msgSend(v6, "save:", &v27);
    v22 = v27;
    if ((v21 & 1) == 0)
    {
      PLMigrationGetLog();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v22, "userInfo");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v33 = v22;
        v34 = 2112;
        v35 = v24;
        _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "_fixupAlbumOrderInAlbumListInStore failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v21 = 1;
  }

  objc_autoreleasePoolPop(context);
  return v21;
}

- (BOOL)_resetAlbumToFolderOrderKeyForAlbums:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  char v20;
  id v21;
  NSObject *v22;
  void *v23;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  void *v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _resetAlbumToFolderOrderKeyForAlbums:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 4000);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "predicateWithFormat:", CFSTR("kind == %@ OR kind == %@"), v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v12);

  objc_msgSend(v7, "executeFetchRequest:error:", v8, 0);
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v13 = (id)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v27 != v16)
          objc_enumerationMutation(v13);
        v18 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        v19 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v18, "setCloudLocalState:", 0);
        objc_autoreleasePoolPop(v19);
      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
    }
    while (v15);
  }

  if (objc_msgSend(v7, "hasChanges"))
  {
    v25 = 0;
    v20 = objc_msgSend(v7, "save:", &v25);
    v21 = v25;
    if ((v20 & 1) == 0)
    {
      PLMigrationGetLog();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v21, "userInfo");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v31 = v21;
        v32 = 2112;
        v33 = v23;
        _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "_resetAlbumToFolderOrderKeyForAlbums failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v20 = 1;
  }

  objc_autoreleasePoolPop(v6);
  return v20;
}

- (BOOL)_populateAlbumAndFolderOrderKeysInStagedStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  PLRelationshipOrderKeyManager *v11;
  PLRelationshipOrderKeyManager *v12;
  char v13;
  NSObject *v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  BOOL v18;
  void *v19;
  void *v20;
  PLRelationshipOrderKeyManager *v21;
  id v22;
  PLRelationshipOrderKeyManager *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  void *v29;
  char v30;
  NSObject *v31;
  NSObject *v32;
  void *v33;
  void *v34;
  void *j;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t k;
  void *v46;
  void *v47;
  void *v48;
  int v49;
  NSObject *v50;
  char v51;
  NSObject *v52;
  NSObject *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t m;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  int v68;
  NSObject *v69;
  char v70;
  NSObject *v71;
  NSObject *v72;
  NSObject *v73;
  void *v74;
  void *v75;
  NSObject *v76;
  void *v77;
  void *v78;
  NSObject *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  NSObject *v84;
  void *v85;
  void *v86;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  NSObject *v92;
  void *v93;
  void *v94;
  void *v95;
  NSObject *v96;
  uint64_t v97;
  id obj;
  id obja;
  void *v101;
  uint64_t v102;
  id v103;
  void *context;
  void *v105;
  void *v106;
  NSObject *v107;
  void *v108;
  id v109;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  char v116;
  void *v117;
  uint64_t v118;
  void *v119;
  void *v120;
  id v121;
  id v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  id v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  id v132;
  id v133;
  id v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  id v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  id v144;
  id v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  _QWORD v150[4];
  id v151;
  id v152;
  id v153;
  id v154;
  _QWORD v155[4];
  id v156;
  id v157;
  id location;
  _BYTE v159[128];
  void *v160;
  _BYTE v161[128];
  _BYTE v162[128];
  void *v163;
  _BYTE v164[128];
  uint8_t v165[128];
  uint8_t buf[4];
  id v167;
  __int16 v168;
  NSObject *v169;
  __int16 v170;
  uint64_t v171;
  uint64_t v172;

  v172 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  v108 = v4;
  v118 = *MEMORY[0x1E0C97C38];
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateAlbumAndFolderOrderKeysInStagedStore:]");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("Album"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbum albumSupportsAssetOrderKeysPredicate](PLManagedAlbum, "albumSupportsAssetOrderKeysPredicate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763638);
  objc_msgSend(v7, "executeFetchRequest:error:", v8, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v10, "count"))
    goto LABEL_10;
  objc_initWeak(&location, self);
  v11 = [PLRelationshipOrderKeyManager alloc];
  v155[0] = MEMORY[0x1E0C809B0];
  v155[1] = 3221225472;
  v155[2] = __65__PLModelMigrator__populateAlbumAndFolderOrderKeysInStagedStore___block_invoke;
  v155[3] = &unk_1E3664EF0;
  objc_copyWeak(&v157, &location);
  v156 = v108;
  v12 = -[PLRelationshipOrderKeyManager initWithGenerateContextBlock:](v11, "initWithGenerateContextBlock:", v155);
  -[PLRelationshipOrderKeyManager migration_updateLegacyOrderValuesForAssetsInAlbums:managedObjectContext:](v12, "migration_updateLegacyOrderValuesForAssetsInAlbums:managedObjectContext:", v10, v7);
  if (!objc_msgSend(v7, "hasChanges"))
  {

    objc_destroyWeak(&v157);
    objc_destroyWeak(&location);
LABEL_10:

    objc_autoreleasePoolPop(v6);
    goto LABEL_11;
  }
  v154 = 0;
  v13 = objc_msgSend(v7, "save:", &v154);
  v14 = v154;
  if ((v13 & 1) == 0)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      v116 = v13;
      NSStringFromSelector(a2);
      v16 = (id)objc_claimAutoreleasedReturnValue();
      -[NSObject userInfo](v14, "userInfo");
      v17 = objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v167 = v16;
      v168 = 2112;
      v169 = v14;
      v170 = 2112;
      v114 = (void *)v17;
      v171 = v17;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%@ failed to update order values for album assets: %@ %@", buf, 0x20u);
      v111 = v16;

      v13 = v116;
    }

  }
  objc_destroyWeak(&v157);
  objc_destroyWeak(&location);

  objc_autoreleasePoolPop(v6);
  if ((v13 & 1) == 0)
  {
    v18 = 0;
    goto LABEL_76;
  }
LABEL_11:
  v101 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v108, "-[PLModelMigrator _populateAlbumAndFolderOrderKeysInStagedStore:]", v118);
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind == %d OR kind == %d"), 4000, 3999);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "setPredicate:", v19);

  v153 = 0;
  objc_msgSend(v117, "executeFetchRequest:error:", v115, &v153);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v107 = v153;
  if (!v20)
  {
    PLMigrationGetLog();
    v73 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v73, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject userInfo](v107, "userInfo");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v167 = v74;
      v168 = 2112;
      v169 = v107;
      v170 = 2112;
      v171 = (uint64_t)v75;
      _os_log_impl(&dword_199541000, v73, OS_LOG_TYPE_ERROR, "%@ failed to fetch folder: %@ %@", buf, 0x20u);

    }
    goto LABEL_74;
  }
  objc_initWeak((id *)buf, self);
  v21 = [PLRelationshipOrderKeyManager alloc];
  v150[0] = MEMORY[0x1E0C809B0];
  v150[1] = 3221225472;
  v150[2] = __65__PLModelMigrator__populateAlbumAndFolderOrderKeysInStagedStore___block_invoke_1081;
  v150[3] = &unk_1E3664EF0;
  objc_copyWeak(&v152, (id *)buf);
  v22 = v108;
  v151 = v22;
  v23 = -[PLRelationshipOrderKeyManager initWithGenerateContextBlock:](v21, "initWithGenerateContextBlock:", v150);
  v148 = 0u;
  v149 = 0u;
  v146 = 0u;
  v147 = 0u;
  v24 = v20;
  v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v146, v165, 16);
  if (v25)
  {
    v26 = *(_QWORD *)v147;
    do
    {
      for (i = 0; i != v25; ++i)
      {
        if (*(_QWORD *)v147 != v26)
          objc_enumerationMutation(v24);
        v28 = *(_QWORD *)(*((_QWORD *)&v146 + 1) + 8 * i);
        v29 = (void *)MEMORY[0x19AEC1554]();
        -[PLRelationshipOrderKeyManager migration_updateLegacyChildCollectionOrderKeysInFolder:](v23, "migration_updateLegacyChildCollectionOrderKeysInFolder:", v28);
        objc_autoreleasePoolPop(v29);
      }
      v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v146, v165, 16);
    }
    while (v25);
  }

  objc_destroyWeak(&v152);
  objc_destroyWeak((id *)buf);
  if (objc_msgSend(v117, "hasChanges"))
  {
    v145 = 0;
    v30 = objc_msgSend(v117, "save:", &v145);
    v31 = v145;
    v32 = v31;
    if ((v30 & 1) == 0)
    {
      PLMigrationGetLog();
      v79 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(a2);
        v80 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v32, "userInfo");
        v81 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v167 = v80;
        v168 = 2112;
        v169 = v32;
        v170 = 2112;
        v171 = (uint64_t)v81;
        _os_log_impl(&dword_199541000, v79, OS_LOG_TYPE_ERROR, "%@ failed to fixup child order keys: %@ %@", buf, 0x20u);

      }
      goto LABEL_74;
    }

  }
  objc_autoreleasePoolPop(context);

  objc_autoreleasePoolPop(v101);
  v101 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v22, "-[PLModelMigrator _populateAlbumAndFolderOrderKeysInStagedStore:]", v118);
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "setIncludesPropertyValues:", 0);
  objc_msgSend(v115, "setResultType:", 1);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind == %@ OR kind == %@"), &unk_1E375E298, &unk_1E375E2B0);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "setPredicate:", v33);

  v144 = 0;
  objc_msgSend(v117, "executeFetchRequest:error:", v115, &v144);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v107 = v144;
  if (!v34)
  {
    PLMigrationGetLog();
    v76 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject userInfo](v107, "userInfo");
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v167 = v77;
      v168 = 2112;
      v169 = v107;
      v170 = 2112;
      v171 = (uint64_t)v78;
      _os_log_impl(&dword_199541000, v76, OS_LOG_TYPE_ERROR, "%@ failed to fetch folders: %@ %@", buf, 0x20u);

    }
    objc_msgSend(v117, "reset");
LABEL_74:
    v18 = 0;
    goto LABEL_75;
  }
  v142 = 0u;
  v143 = 0u;
  v140 = 0u;
  v141 = 0u;
  obj = v34;
  v105 = (void *)objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v140, v164, 16);
  if (!v105)
    goto LABEL_39;
  v102 = *(_QWORD *)v141;
  while (2)
  {
    for (j = 0; j != v105; j = (char *)j + 1)
    {
      if (*(_QWORD *)v141 != v102)
        objc_enumerationMutation(obj);
      v36 = *(_QWORD *)(*((_QWORD *)&v140 + 1) + 8 * (_QWORD)j);
      v112 = (void *)MEMORY[0x19AEC1554]();
      objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
      v119 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v119, "setPropertiesToFetch:", &unk_1E3763650);
      objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("parentFolder = %@"), v36);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v119, "setPredicate:", v37);

      objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("albumToFolderOrderKey"), 1);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v163 = v38;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v163, 1);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v119, "setSortDescriptors:", v39);

      v139 = 0;
      objc_msgSend(v117, "executeFetchRequest:error:", v119, &v139);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      v109 = v139;
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 2 * objc_msgSend(v40, "count"));
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v137 = 0u;
      v138 = 0u;
      v135 = 0u;
      v136 = 0u;
      v42 = v40;
      v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v135, v162, 16);
      if (v43)
      {
        v44 = *(_QWORD *)v136;
        do
        {
          for (k = 0; k != v43; ++k)
          {
            if (*(_QWORD *)v136 != v44)
              objc_enumerationMutation(v42);
            v46 = *(void **)(*((_QWORD *)&v135 + 1) + 8 * k);
            objc_msgSend(v46, "objectID");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v41, "addObject:", v47);

            objc_msgSend(v46, "valueForKey:", CFSTR("albumToFolderOrderKey"));
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v41, "addObject:", v48);

          }
          v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v135, v162, 16);
        }
        while (v43);
      }

      v134 = 0;
      v49 = objc_msgSend(v117, "_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:onObjectWithID:error:", v41, CFSTR("childCollections"), v36, &v134);
      v50 = v134;
      if (!v49)
      {
        PLMigrationGetLog();
        v53 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
        {
          NSStringFromSelector(a2);
          v82 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject userInfo](v50, "userInfo");
          v83 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v167 = v82;
          v168 = 2112;
          v169 = v50;
          v170 = 2112;
          v171 = (uint64_t)v83;
          _os_log_impl(&dword_199541000, v53, OS_LOG_TYPE_ERROR, "%@ failed to update location values in childCollections: %@ %@", buf, 0x20u);

        }
        goto LABEL_73;
      }
      v133 = 0;
      v51 = objc_msgSend(v117, "save:", &v133);
      v52 = v133;
      v53 = v52;
      if ((v51 & 1) == 0)
      {
        PLMigrationGetLog();
        v84 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
        {
          NSStringFromSelector(a2);
          v85 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject userInfo](v53, "userInfo");
          v86 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v167 = v85;
          v168 = 2112;
          v169 = v53;
          v170 = 2112;
          v171 = (uint64_t)v86;
          _os_log_impl(&dword_199541000, v84, OS_LOG_TYPE_ERROR, "%@ failed to save updated location values in childCollections: %@ %@", buf, 0x20u);

        }
LABEL_73:

        objc_autoreleasePoolPop(v112);
        objc_msgSend(v117, "reset");

        goto LABEL_74;
      }

      objc_autoreleasePoolPop(v112);
    }
    v105 = (void *)objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v140, v164, 16);
    if (v105)
      continue;
    break;
  }
LABEL_39:

  objc_msgSend(v117, "reset");
  objc_autoreleasePoolPop(context);
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "setIncludesPropertyValues:", 0);
  objc_msgSend(v115, "setResultType:", 1);
  +[PLManagedAlbum albumSupportsAssetOrderKeysPredicate](PLManagedAlbum, "albumSupportsAssetOrderKeysPredicate");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "setPredicate:", v54);

  v132 = 0;
  objc_msgSend(v117, "executeFetchRequest:error:", v115, &v132);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v107 = v132;
  if (v95)
  {
    v130 = 0u;
    v131 = 0u;
    v128 = 0u;
    v129 = 0u;
    v96 = v95;
    obja = (id)-[NSObject countByEnumeratingWithState:objects:count:](v96, "countByEnumeratingWithState:objects:count:", &v128, v161, 16);
    if (!obja)
    {
      v18 = 1;
      goto LABEL_87;
    }
    v97 = *(_QWORD *)v129;
LABEL_42:
    v110 = 0;
    while (1)
    {
      if (*(_QWORD *)v129 != v97)
        objc_enumerationMutation(v96);
      v113 = *(void **)(*((_QWORD *)&v128 + 1) + 8 * v110);
      v106 = (void *)MEMORY[0x19AEC1554]();
      objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("AssetToAlbumOrder"));
      v120 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("album = %@"), v113);
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v120, "setPredicate:", v55);

      objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("orderValue"), 1);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      v160 = v56;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v160, 1);
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v120, "setSortDescriptors:", v57);

      v127 = 0;
      objc_msgSend(v117, "executeFetchRequest:error:", v120, &v127);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      v103 = v127;
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 2 * objc_msgSend(v58, "count"));
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      v125 = 0u;
      v126 = 0u;
      v123 = 0u;
      v124 = 0u;
      v60 = v58;
      v61 = objc_msgSend(v60, "countByEnumeratingWithState:objects:count:", &v123, v159, 16);
      if (v61)
      {
        v62 = *(_QWORD *)v124;
        do
        {
          for (m = 0; m != v61; ++m)
          {
            if (*(_QWORD *)v124 != v62)
              objc_enumerationMutation(v60);
            v64 = *(void **)(*((_QWORD *)&v123 + 1) + 8 * m);
            objc_msgSend(v64, "objectIDsForRelationshipNamed:", CFSTR("asset"));
            v65 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v65, "firstObject");
            v66 = (void *)objc_claimAutoreleasedReturnValue();

            if (v66)
            {
              objc_msgSend(v59, "addObject:", v66);
              objc_msgSend(v64, "valueForKey:", CFSTR("orderValue"));
              v67 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v59, "addObject:", v67);

            }
          }
          v61 = objc_msgSend(v60, "countByEnumeratingWithState:objects:count:", &v123, v159, 16);
        }
        while (v61);
      }

      v122 = 0;
      v68 = objc_msgSend(v117, "_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:onObjectWithID:error:", v59, CFSTR("assets"), v113, &v122);
      v69 = v122;
      if (!v68)
        break;
      v121 = 0;
      v70 = objc_msgSend(v117, "save:", &v121);
      v71 = v121;
      v72 = v71;
      if ((v70 & 1) == 0)
      {
        PLMigrationGetLog();
        v92 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR))
        {
          NSStringFromSelector(a2);
          v93 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject userInfo](v72, "userInfo");
          v94 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v167 = v93;
          v168 = 2112;
          v169 = v72;
          v170 = 2112;
          v171 = (uint64_t)v94;
          _os_log_impl(&dword_199541000, v92, OS_LOG_TYPE_ERROR, "%@ failed to save updated location values in assets: %@ %@", buf, 0x20u);

        }
LABEL_85:

        objc_autoreleasePoolPop(v106);
        goto LABEL_86;
      }

      objc_autoreleasePoolPop(v106);
      if ((id)++v110 == obja)
      {
        obja = (id)-[NSObject countByEnumeratingWithState:objects:count:](v96, "countByEnumeratingWithState:objects:count:", &v128, v161, 16);
        v18 = 1;
        if (obja)
          goto LABEL_42;
        goto LABEL_87;
      }
    }
    PLMigrationGetLog();
    v72 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject userInfo](v69, "userInfo");
      v91 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v167 = v90;
      v168 = 2112;
      v169 = v69;
      v170 = 2112;
      v171 = (uint64_t)v91;
      _os_log_impl(&dword_199541000, v72, OS_LOG_TYPE_ERROR, "%@ failed to update location values in assets: %@ %@", buf, 0x20u);

    }
    goto LABEL_85;
  }
  PLMigrationGetLog();
  v96 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v88 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject userInfo](v107, "userInfo");
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v167 = v88;
    v168 = 2112;
    v169 = v107;
    v170 = 2112;
    v171 = (uint64_t)v89;
    _os_log_impl(&dword_199541000, v96, OS_LOG_TYPE_ERROR, "%@ failed to fetch albums: %@ %@", buf, 0x20u);

  }
LABEL_86:
  v18 = 0;
LABEL_87:

LABEL_75:
  objc_autoreleasePoolPop(context);

  objc_autoreleasePoolPop(v101);
LABEL_76:

  return v18;
}

- (BOOL)_populateVideoCpFieldsInStagedStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  _QWORD v18[4];
  __CFString *v19;
  __CFString *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t buf[4];
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _populateVideoCpFieldsInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("AdditionalAssetAttributes"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("videoCpVisibilityState != 0 OR videoCpDurationValue != 0"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763668);
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v9, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __55__PLModelMigrator__populateVideoCpFieldsInStagedStore___block_invoke;
  v18[3] = &unk_1E3664F18;
  v19 = CFSTR("videoCpDurationValue");
  v20 = CFSTR("videoCpVisibilityState");
  v21 = &v22;
  objc_msgSend(v8, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v11, 1, v18);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v27 = v14;
      v28 = 2112;
      v29 = v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%@ failed to update videoCp fields assets: %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(a2);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = v23[3];
      *(_DWORD *)buf = 138412546;
      v27 = v15;
      v28 = 1024;
      LODWORD(v29) = v16;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "%@ updated videpCp fields on %d assets", buf, 0x12u);

    }
  }

  _Block_object_dispose(&v22, 8);
  objc_autoreleasePoolPop(v7);

  return v12 == 0;
}

- (void)_populateFaceRegionsForAsset:(id)a3
{
  id v3;
  void *v4;
  const __CFData *v5;
  NSObject *v6;
  void *v7;
  CGImageSource *v8;
  CGImageMetadataRef v9;
  CGImageMetadataRef v10;
  int v11;
  void *v12;
  __int16 v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(v3, "mainFileURL");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (const __CFData *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithContentsOfURL:options:error:", v4, 1, 0);
  }
  else
  {
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v3, "uuid");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138412546;
      v12 = v7;
      v13 = 1024;
      v14 = objc_msgSend(v3, "savedAssetType");
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Found asset %@ of type %hd with nil mainFileURL, skipping", (uint8_t *)&v11, 0x12u);

    }
    v5 = 0;
  }
  if (-[__CFData length](v5, "length"))
  {
    v8 = CGImageSourceCreateWithData(v5, 0);
    v9 = CGImageSourceCopyMetadataAtIndex(v8, 0, 0);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v3, "setFaceRegionsFromImageMetadata:", v9);
      CFRelease(v10);
    }
    CFRelease(v8);
  }

}

- (BOOL)_populateFaceRegionsInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  BOOL v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v22;
  id v24;
  _QWORD v25[5];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  id v29;
  __int16 v30;
  void *v31;
  _QWORD v32[3];

  v32[2] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _populateFaceRegionsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("kind"), 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v32[0] = v12;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForPopulateFaceRegionsExclusions"), 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v32[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v32, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v15);

  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763680);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v27 = objc_msgSend(v16, "count");
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Found %lu assets to populate face regions.", buf, 0xCu);
  }

  v24 = 0;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __47__PLModelMigrator__populateFaceRegionsInStore___block_invoke;
  v25[3] = &unk_1E3664F40;
  v25[4] = self;
  v18 = -[PLModelMigrator _performChangesOnBatchFetchedObjects:inMOC:batchSize:objectHandler:error:](self, "_performChangesOnBatchFetchedObjects:inMOC:batchSize:objectHandler:error:", v16, v7, 100, v25, &v24);
  v19 = v24;
  if (!v18)
  {
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "userInfo");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v27 = (uint64_t)v21;
      v28 = 2112;
      v29 = v19;
      v30 = 2112;
      v31 = v22;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

    }
  }

  objc_autoreleasePoolPop(v6);
  return v18;
}

- (BOOL)_fixupSharedStreamOrientationsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  char v21;
  id v22;
  NSObject *v23;
  void *v24;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  id v32;
  __int16 v33;
  void *v34;
  _BYTE v35[128];
  _QWORD v36[3];

  v36[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupSharedStreamOrientationsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 1"), CFSTR("additionalAttributes.originalOrientation"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v36[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v36, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v15);

  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763698);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v18; ++i)
      {
        if (*(_QWORD *)v28 != v19)
          objc_enumerationMutation(v16);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * i), "setOriginalOrientation:", 1);
      }
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
    }
    while (v18);
  }
  if (objc_msgSend(v7, "hasChanges"))
  {
    v26 = 0;
    v21 = objc_msgSend(v7, "save:", &v26);
    v22 = v26;
    if ((v21 & 1) == 0)
    {
      PLMigrationGetLog();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v22, "userInfo");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v32 = v22;
        v33 = 2112;
        v34 = v24;
        _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "_fixupSharedStreamOrientationsInStore failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v21 = 1;
  }

  objc_autoreleasePoolPop(v6);
  return v21;
}

- (BOOL)_fixupCloudResourcesInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  NSObject *v20;
  void *v21;
  _QWORD v23[4];
  id v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  void *v28;
  _QWORD v29[3];

  v29[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupCloudResourcesInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCameraAsset"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("cloudAssetGUID"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v29[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v29, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v15);

  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", &unk_1E37636B0);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __47__PLModelMigrator__fixupCloudResourcesInStore___block_invoke;
  v23[3] = &unk_1E36740E0;
  v24 = v17;
  v18 = v17;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v16, v23);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (v19)
  {
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v19, "userInfo");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v26 = v19;
      v27 = 2112;
      v28 = v21;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "_fixupCloudResourcesInStore failed: %@ %@", buf, 0x16u);

    }
  }

  objc_autoreleasePoolPop(v6);
  return v19 == 0;
}

- (BOOL)_cleanupInvalidAlbumsAndFoldersInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _cleanupInvalidAlbumsAndFoldersInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLGenericAlbum removeInvalidAlbumsAndFoldersInManagedObjectContext:](PLGenericAlbum, "removeInvalidAlbumsAndFoldersInManagedObjectContext:", v7);

  objc_autoreleasePoolPop(v6);
  return 1;
}

- (BOOL)_fixupSyncedAssetAttributesInStore:(id)a3
{
  id v4;
  char v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  void *v17;
  id v19;
  _QWORD v20[4];
  id v21;
  PLModelMigrator *v22;
  uint8_t buf[4];
  id v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = 1;
  v6 = -[PLModelMigrator _newSyncedPropertiesByAssetUUIDs:](self, "_newSyncedPropertiesByAssetUUIDs:", 1);
  if (objc_msgSend(v6, "count"))
  {
    v7 = pl_dispatch_once();
    v8 = (void *)MEMORY[0x19AEC1554](v7);
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupSyncedAssetAttributesInStore:]", *MEMORY[0x1E0C97C38]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "fetchRequestWithEntityName:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v5 = 1;
    objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForFinderSyncedAsset"), 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "setPredicate:", v13);

    objc_msgSend(v12, "setPropertiesToFetch:", &unk_1E37636C8);
    objc_msgSend(v12, "setRelationshipKeyPathsForPrefetching:", &unk_1E37636E0);
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 3221225472;
    v20[2] = __54__PLModelMigrator__fixupSyncedAssetAttributesInStore___block_invoke;
    v20[3] = &unk_1E3677A78;
    v21 = v6;
    v22 = self;
    v14 = (id)objc_msgSend(v9, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v12, 0, v20);
    if (objc_msgSend(v9, "hasChanges"))
    {
      v19 = 0;
      v5 = objc_msgSend(v9, "save:", &v19);
      v15 = v19;
      if ((v5 & 1) == 0)
      {
        PLMigrationGetLog();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v15, "userInfo");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v24 = v15;
          v25 = 2112;
          v26 = v17;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "_fixupSyncedAssetAttributesInStore failed: %@ %@", buf, 0x16u);

        }
      }

    }
    objc_autoreleasePoolPop(v8);
  }

  return v5;
}

- (BOOL)rebuildTargetedMomentsInStore:(id)a3 targetedAssetOIDs:(id)a4
{
  return -[PLModelMigrator _rebuildMomentsInStore:deleteExistingMoments:targetedAssetOIDs:](self, "_rebuildMomentsInStore:deleteExistingMoments:targetedAssetOIDs:", a3, 0, a4);
}

- (BOOL)rebuildAllMomentsInStore:(id)a3 deleteExistingMoments:(BOOL)a4
{
  return -[PLModelMigrator _rebuildMomentsInStore:deleteExistingMoments:targetedAssetOIDs:](self, "_rebuildMomentsInStore:deleteExistingMoments:targetedAssetOIDs:", a3, a4, 0);
}

- (BOOL)_rebuildMomentsInStore:(id)a3 deleteExistingMoments:(BOOL)a4 targetedAssetOIDs:(id)a5
{
  _BOOL8 v6;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;

  v6 = a4;
  v8 = a3;
  v9 = a5;
  if (PLPlatformMomentsSupported())
  {
    v10 = (void *)MEMORY[0x19AEC1554]();
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v8, "-[PLModelMigrator _rebuildMomentsInStore:deleteExistingMoments:targetedAssetOIDs:]", *MEMORY[0x1E0C97C38]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_opt_class();
    -[PLModelMigrator pathManager](self, "pathManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v12, "rebuildMomentsInContext:pathManager:deleteExistingMoments:targetedAssetOIDs:", v11, v13, v6, v9);

    objc_autoreleasePoolPop(v10);
  }
  else
  {
    v14 = 1;
  }

  return v14;
}

- (BOOL)_regenerateMonthHighlightTitlesWithStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  PLMomentGenerationDataManager *v7;
  void *v8;
  PLMomentGenerationDataManager *v9;
  void *v10;
  char v11;
  id v12;
  NSObject *v13;
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _regenerateMonthHighlightTitlesWithStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = [PLMomentGenerationDataManager alloc];
  -[PLModelMigrator pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[PLMomentGenerationDataManager initWithManagedObjectContext:pathManagerForLightweightMigration:](v7, "initWithManagedObjectContext:pathManagerForLightweightMigration:", v6, v8);

  objc_autoreleasePoolPop(v5);
  -[PLMomentGenerationDataManager generator](v9, "generator");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  v11 = objc_msgSend(v10, "regenerateMonthHighlightTitlesWithManager:error:", v9, &v15);
  v12 = v15;

  if ((v11 & 1) == 0)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v17 = v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Unable to regenerate month highlight titles, %@", buf, 0xCu);
    }

  }
  return v11;
}

- (BOOL)_addUUIDsToCollectionLists:(id)a3 skipMomentLists:(BOOL)a4
{
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t j;
  void *v26;
  void *v27;
  void *v28;
  char v29;
  id v30;
  NSObject *v31;
  void *v32;
  void *v34;
  void *v35;
  void *context;
  void *v38;
  void *v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint8_t buf[4];
  id v50;
  __int16 v51;
  void *v52;
  _BYTE v53[128];
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 6180, CFSTR("%@ can only be called from assetsd"), v35);

  }
  v7 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v7);
  v38 = v6;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v6, "-[PLModelMigrator _addUUIDsToCollectionLists:skipMomentLists:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("AlbumList"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("uuid == nil"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v39 = v8;
  objc_msgSend(v8, "executeFetchRequest:error:", v9, 0);
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v11 = (id)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v45, v54, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v46;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v46 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * i);
        v17 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "setValue:forKey:", v18, CFSTR("uuid"));

        objc_autoreleasePoolPop(v17);
      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v45, v54, 16);
    }
    while (v13);
  }

  if (!a4)
  {
    objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("MomentList"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("uuid == nil"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "setPredicate:", v20);

    objc_msgSend(v39, "executeFetchRequest:error:", v19, 0);
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v21 = (id)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v41, v53, 16);
    if (v22)
    {
      v23 = v22;
      v24 = *(_QWORD *)v42;
      do
      {
        for (j = 0; j != v23; ++j)
        {
          if (*(_QWORD *)v42 != v24)
            objc_enumerationMutation(v21);
          v26 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * j);
          v27 = (void *)MEMORY[0x19AEC1554]();
          objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "setValue:forKey:", v28, CFSTR("uuid"));

          objc_autoreleasePoolPop(v27);
        }
        v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v41, v53, 16);
      }
      while (v23);
    }

  }
  if (objc_msgSend(v39, "hasChanges"))
  {
    v40 = 0;
    v29 = objc_msgSend(v39, "save:", &v40);
    v30 = v40;
    if ((v29 & 1) == 0)
    {
      PLMigrationGetLog();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v30, "userInfo");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v50 = v30;
        v51 = 2112;
        v52 = v32;
        _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "_addUUIDsToCollectionLists:skipMomentLists: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v29 = 1;
  }

  objc_autoreleasePoolPop(context);
  return v29;
}

- (BOOL)_addLocationHashesToAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  NSObject *v14;
  void *v15;
  id v17;
  void *v18;
  uint8_t buf[4];
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _addLocationHashesToAssets:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("locationData != nil"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", &unk_1E37636F8);
  v18 = 0;
  v11 = (id)objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, &v18, &__block_literal_global_1145);
  if (objc_msgSend(v6, "hasChanges"))
  {
    v17 = 0;
    v12 = objc_msgSend(v6, "save:", &v17);
    v13 = v17;
    if ((v12 & 1) != 0)
    {
      PLMomentsGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v20 = v18;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Successfully generated location hashes for %lu assets.", buf, 0xCu);
      }
    }
    else
    {
      PLMigrationGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v13, "userInfo");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v20 = v13;
        v21 = 2112;
        v22 = v15;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_addLocationHashesToAssets failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v12 = 1;
  }

  objc_autoreleasePoolPop(v5);
  return v12;
}

- (BOOL)_migrateAssetLocationData:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  char v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  void *v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _migrateAssetLocationData:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("locationData != nil"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v11 = (id)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v26 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        v17 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v16, "migrateLocationDataIfNeededAfterOTARestore:", 0);
        objc_autoreleasePoolPop(v17);
      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
    }
    while (v13);
  }

  if (objc_msgSend(v6, "hasChanges"))
  {
    v24 = 0;
    v18 = objc_msgSend(v6, "save:", &v24);
    v19 = v24;
    if ((v18 & 1) != 0)
    {
      PLMomentsGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21 = objc_msgSend(v11, "count");
        *(_DWORD *)buf = 134217984;
        v30 = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Successfully migrated location data for %lu assets.", buf, 0xCu);
      }
    }
    else
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v19, "userInfo");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v30 = (uint64_t)v19;
        v31 = 2112;
        v32 = v22;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "_migrateAssetLocationData failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v18 = 1;
  }

  objc_autoreleasePoolPop(v5);
  return v18;
}

- (BOOL)_removeInvalidAdjustmentResourceDataInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  char v16;
  id v17;
  NSObject *v18;
  void *v19;
  id v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  void *v25;
  _QWORD v26[3];

  v26[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _removeInvalidAdjustmentResourceDataInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v26[0] = v11;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("SUBQUERY(resources, $r, $r.type == %d).@count > 1"), 13);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v26[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v14);

  v15 = (id)objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, 0, &__block_literal_global_1148);
  if (objc_msgSend(v6, "hasChanges"))
  {
    v21 = 0;
    v16 = objc_msgSend(v6, "save:", &v21);
    v17 = v21;
    if ((v16 & 1) == 0)
    {
      PLMigrationGetLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v17, "userInfo");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v23 = v17;
        v24 = 2112;
        v25 = v19;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "_removeInvalidAdjustmentResourceDataInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v16 = 1;
  }

  objc_autoreleasePoolPop(v5);
  return v16;
}

- (BOOL)_fixDuplicatedRootFolderAndOrphanedAlbumsInStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  void *v26;
  unint64_t v27;
  NSObject *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  NSObject *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  char v40;
  const char *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  NSObject *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  NSObject *v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const char *aSelector;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  PLModelMigrator *v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  _QWORD v77[5];
  id v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  id v87;
  uint8_t buf[4];
  uint64_t v89;
  __int16 v90;
  id v91;
  __int16 v92;
  uint64_t v93;
  _BYTE v94[128];
  _BYTE v95[128];
  uint64_t v96;

  v96 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  v72 = self;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _fixDuplicatedRootFolderAndOrphanedAlbumsInStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedFolder entityName](PLManagedFolder, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind = %d"), 3999);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);

  v87 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v11, &v87);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v87;
  if ((unint64_t)objc_msgSend(v13, "count") >= 2)
  {
    v74 = v14;
    v75 = v8;
    v71 = v11;
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16 = objc_msgSend(v13, "count");
      *(_DWORD *)buf = 134217984;
      v89 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Found %lu root folders, attempting repair", buf, 0xCu);
    }
    aSelector = a2;

    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v83 = 0u;
    v84 = 0u;
    v85 = 0u;
    v86 = 0u;
    v70 = v13;
    v18 = v13;
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v83, v95, 16);
    if (v19)
    {
      v20 = v19;
      v68 = v7;
      v69 = v5;
      v21 = 0;
      v22 = 0;
      v23 = *(_QWORD *)v84;
      do
      {
        for (i = 0; i != v20; ++i)
        {
          if (*(_QWORD *)v84 != v23)
            objc_enumerationMutation(v18);
          v25 = *(void **)(*((_QWORD *)&v83 + 1) + 8 * i);
          objc_msgSend(v25, "albums");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v27 = objc_msgSend(v26, "count");

          if (v27 > v21)
          {
            v28 = v25;

            v21 = v27;
            v22 = v28;
          }
        }
        v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v83, v95, 16);
      }
      while (v20);

      if (!v21)
      {
        v7 = v68;
        v5 = v69;
        goto LABEL_34;
      }
      -[NSObject albums](v22, "albums");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v79 = 0u;
      v80 = 0u;
      v81 = 0u;
      v82 = 0u;
      v30 = v18;
      v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v79, v94, 16);
      if (v31)
      {
        v32 = v31;
        v33 = *(_QWORD *)v80;
        do
        {
          for (j = 0; j != v32; ++j)
          {
            if (*(_QWORD *)v80 != v33)
              objc_enumerationMutation(v30);
            v35 = *(NSObject **)(*((_QWORD *)&v79 + 1) + 8 * j);
            if (v35 != v22)
            {
              objc_msgSend(*(id *)(*((_QWORD *)&v79 + 1) + 8 * j), "albums");
              v36 = (void *)objc_claimAutoreleasedReturnValue();
              v37 = objc_msgSend(v36, "count");

              if (v37)
              {
                -[NSObject albums](v35, "albums");
                v38 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v38, "array");
                v39 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v29, "addObjectsFromArray:", v39);

              }
              -[NSObject delete](v35, "delete");
              objc_msgSend(v17, "addObject:", v35);
            }
          }
          v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v79, v94, 16);
        }
        while (v32);
      }

      v7 = v68;
      v5 = v69;
    }
    else
    {
      v22 = 0;
      v29 = v18;
    }

LABEL_34:
    v43 = (void *)MEMORY[0x1E0C99E20];
    +[PLManagedAlbum validKindsForPersistence](PLManagedAlbum, "validKindsForPersistence");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "setWithArray:", v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    +[PLManagedFolder validKindsForPersistence](PLManagedFolder, "validKindsForPersistence");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "addObjectsFromArray:", v46);

    objc_msgSend(v45, "removeObject:", &unk_1E375E2B0);
    objc_msgSend(v45, "addObject:", &unk_1E375E2C8);
    if (objc_msgSend(v45, "count"))
    {
      v47 = (void *)MEMORY[0x1E0C97B48];
      +[PLGenericAlbum entityName](PLGenericAlbum, "entityName");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v47, "fetchRequestWithEntityName:", v48);
      v49 = (void *)objc_claimAutoreleasedReturnValue();

      v50 = (void *)MEMORY[0x1E0CB3880];
      objc_msgSend(v45, "allObjects");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v50, "predicateWithFormat:", CFSTR("%K IN %@ AND %K = NULL"), CFSTR("kind"), v51, CFSTR("parentFolder"), aSelector);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v49, "setPredicate:", v52);

      v78 = v74;
      objc_msgSend(v75, "executeFetchRequest:error:", v49, &v78);
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      v54 = v78;

      if (objc_msgSend(v53, "count"))
      {
        PLMigrationGetLog();
        v55 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          v56 = objc_msgSend(v53, "count");
          *(_DWORD *)buf = 134217984;
          v89 = v56;
          _os_log_impl(&dword_199541000, v55, OS_LOG_TYPE_DEFAULT, "Found %lu orpaned albums/folders, adding to root folder", buf, 0xCu);
        }

        -[NSObject albums](v22, "albums");
        v57 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v57, "addObjectsFromArray:", v53);

      }
      v74 = v54;
    }
    if (objc_msgSend(v75, "hasChanges"))
    {
      +[PLManagedAlbumList albumListInManagedObjectContext:](PLManagedAlbumList, "albumListInManagedObjectContext:", v75);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLManagedAlbumList pushChangesFromAlbumContainer:toAlbumContainer:](PLManagedAlbumList, "pushChangesFromAlbumContainer:toAlbumContainer:", v22, v58);
      -[PLModelMigrator pathManager](v72, "pathManager");
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject persistMetadataToFileSystemWithPathManager:](v22, "persistMetadataToFileSystemWithPathManager:", v59);

      v77[0] = MEMORY[0x1E0C809B0];
      v77[1] = 3221225472;
      v77[2] = __68__PLModelMigrator__fixDuplicatedRootFolderAndOrphanedAlbumsInStore___block_invoke;
      v77[3] = &unk_1E36775E8;
      v77[4] = v72;
      objc_msgSend(v17, "enumerateObjectsUsingBlock:", v77);
      v76 = 0;
      v40 = objc_msgSend(v75, "save:", &v76);
      v60 = v76;
      PLMigrationGetLog();
      v61 = objc_claimAutoreleasedReturnValue();
      v62 = v61;
      if ((v40 & 1) != 0)
      {
        if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
        {
          v63 = objc_msgSend(v17, "count");
          *(_DWORD *)buf = 134217984;
          v89 = v63;
          _os_log_impl(&dword_199541000, v62, OS_LOG_TYPE_DEFAULT, "Deleted %lu duplicated root folders, attempting repair", buf, 0xCu);
        }
      }
      else if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(aSelector);
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "userInfo");
        v64 = objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v89 = (uint64_t)v73;
        v90 = 2112;
        v91 = v60;
        v92 = 2112;
        v93 = v64;
        v65 = (void *)v64;
        _os_log_impl(&dword_199541000, v62, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      v40 = 1;
    }

    v14 = v74;
    v8 = v75;
    v13 = v70;
    v11 = v71;
LABEL_49:

    goto LABEL_50;
  }
  if (!v13)
  {
    v41 = a2;
    PLMigrationGetLog();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v89 = (uint64_t)v42;
      v90 = 2114;
      v91 = v14;
      _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "%{public}@: failed: %{public}@", buf, 0x16u);

    }
    v40 = 1;
    goto LABEL_49;
  }
  v40 = 1;
LABEL_50:

  objc_autoreleasePoolPop(v7);
  return v40;
}

- (BOOL)_setupRootFolderInStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v16;
  void *v17;
  id v18;
  uint8_t buf[4];
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 6429, CFSTR("%@ can only be called from assetsd"), v17);

  }
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _setupRootFolderInStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbumList albumListInManagedObjectContext:](PLManagedAlbumList, "albumListInManagedObjectContext:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLGenericAlbum albumWithKind:inManagedObjectContext:](PLManagedFolder, "albumWithKind:inManagedObjectContext:", 3999, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAlbumList pushChangesFromAlbumContainer:toAlbumContainer:](PLManagedAlbumList, "pushChangesFromAlbumContainer:toAlbumContainer:", v9, v10);
  if (objc_msgSend(v8, "hasChanges"))
  {
    v18 = 0;
    v11 = objc_msgSend(v8, "save:", &v18);
    v12 = v18;
    if ((v11 & 1) == 0)
    {
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v12, "userInfo");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v20 = v12;
        v21 = 2112;
        v22 = v14;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "_setupRootFolderInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v11 = 1;
  }

  objc_autoreleasePoolPop(v7);
  return v11;
}

- (BOOL)_forceAlbumMetadataToDiskInStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  id v35;
  uint8_t buf[4];
  id v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 6459, CFSTR("%@ can only be called from assetsd"), v26);

  }
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _forceAlbumMetadataToDiskInStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v9, &v35);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v35;
  if (v10)
  {
    if (objc_msgSend(v10, "count"))
    {
      v27 = v11;
      v28 = v8;
      v29 = v7;
      v30 = v5;
      v33 = 0u;
      v34 = 0u;
      v31 = 0u;
      v32 = 0u;
      v12 = v10;
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v38, 16);
      if (v13)
      {
        v14 = v13;
        v15 = 0;
        v16 = *(_QWORD *)v32;
        do
        {
          for (i = 0; i != v14; ++i)
          {
            if (*(_QWORD *)v32 != v16)
              objc_enumerationMutation(v12);
            v18 = *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * i);
            v19 = (void *)MEMORY[0x19AEC1554]();
            v15 += -[PLModelMigrator _persistMetadataToFileSystemForAlbum:](self, "_persistMetadataToFileSystemForAlbum:", v18);
            objc_autoreleasePoolPop(v19);
          }
          v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v38, 16);
        }
        while (v14);
      }
      else
      {
        v15 = 0;
      }

      v7 = v29;
      v5 = v30;
      v11 = v27;
      v8 = v28;
    }
    else
    {
      v15 = 0;
    }
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v37 = v15;
      v21 = "Persisted %lu albums and folders.";
      v22 = v20;
      v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_20;
    }
  }
  else
  {
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v37 = v11;
      v21 = "Ignoring _forceAlbumMetadataToDiskInStore: fetch failure: %@";
      v22 = v20;
      v23 = OS_LOG_TYPE_ERROR;
LABEL_20:
      _os_log_impl(&dword_199541000, v22, v23, v21, buf, 0xCu);
    }
  }

  objc_autoreleasePoolPop(v7);
  return 1;
}

- (BOOL)_persistMetadataToFileSystemForAlbum:(id)a3
{
  id v4;
  void *v5;
  BOOL v6;

  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v4, "isValidForPersistence"))
        goto LABEL_4;
LABEL_7:
      v6 = 0;
      goto LABEL_8;
    }
  }
  if ((objc_msgSend(v4, "isValidForPersistence") & 1) == 0)
    goto LABEL_7;
LABEL_4:
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "persistMetadataToFileSystemWithPathManager:", v5);

  v6 = 1;
LABEL_8:

  return v6;
}

- (BOOL)_fixCorruptedOrientationsInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  BOOL v14;
  id v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v20;
  id v21;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _fixCorruptedOrientationsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(additionalAttributes.unmanagedAdjustment != nil) AND (complete != 0)"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "setFetchBatchSize:", 100);
  objc_msgSend(v11, "setPredicate:", v8);
  objc_msgSend(v11, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763710);
  objc_msgSend(v7, "executeFetchRequest:error:", v11, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v23 = objc_msgSend(v12, "count");
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Found %lu assets with managed adjustments to check orientation.", buf, 0xCu);
  }

  v21 = 0;
  v14 = -[PLModelMigrator _performChangesOnBatchFetchedObjects:inMOC:batchSize:objectHandler:error:](self, "_performChangesOnBatchFetchedObjects:inMOC:batchSize:objectHandler:error:", v12, v7, 100, &__block_literal_global_1161, &v21);
  v15 = v21;
  if (!v14)
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "userInfo");
      v20 = v6;
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v23 = (uint64_t)v17;
      v24 = 2112;
      v25 = v15;
      v26 = 2112;
      v27 = v18;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

      v6 = v20;
    }

  }
  objc_autoreleasePoolPop(v6);

  return v14;
}

- (BOOL)_performChangesOnBatchFetchedObjects:(id)a3 inMOC:(id)a4 batchSize:(unint64_t)a5 objectHandler:(id)a6 error:(id *)a7
{
  id v11;
  id v12;
  void (**v13)(id, void *, unint64_t);
  id v14;
  void (**v15)(_QWORD);
  unint64_t v16;
  void *v17;
  void *v18;
  int v19;
  BOOL v20;
  _QWORD v22[4];
  id v23;
  uint64_t *v24;
  id *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;

  v11 = a3;
  v12 = a4;
  v13 = (void (**)(id, void *, unint64_t))a6;
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 1;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __92__PLModelMigrator__performChangesOnBatchFetchedObjects_inMOC_batchSize_objectHandler_error___block_invoke;
  v22[3] = &unk_1E3675800;
  v14 = v12;
  v23 = v14;
  v24 = &v26;
  v25 = a7;
  v15 = (void (**)(_QWORD))MEMORY[0x19AEC174C](v22);
  v16 = 0;
  do
  {
    if (v16 >= objc_msgSend(v11, "count"))
      break;
    v17 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v11, "objectAtIndexedSubscript:", v16);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v13[2](v13, v18, v16);
    if (a5 && !((v16 + 1) % a5))
    {
      v15[2](v15);
      objc_msgSend(v14, "reset");
    }
    v19 = *((unsigned __int8 *)v27 + 24);

    objc_autoreleasePoolPop(v17);
    ++v16;
  }
  while (v19);
  if (*((_BYTE *)v27 + 24))
  {
    v15[2](v15);
    v20 = *((_BYTE *)v27 + 24) != 0;
  }
  else
  {
    v20 = 0;
  }

  _Block_object_dispose(&v26, 8);
  return v20;
}

- (int)_migrateLegacySlomoAdjustmentsForAsset:(id)a3
{
  id v3;
  int v4;

  v3 = a3;
  if ((objc_msgSend(v3, "migrateLegacyVideoAdjustments") & 1) != 0)
  {
    v4 = 1;
  }
  else if (objc_msgSend(v3, "setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:", 0))
  {
    v4 = 2;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (BOOL)_migrateLegacySlomoAdjustmentsInStore:(id)a3 fromLegacySLMFormat:(BOOL)a4
{
  id v5;
  uint64_t v6;
  PLModelMigrator *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  void *v26;
  int v27;
  int v28;
  void *v29;
  void *v30;
  char v31;
  NSObject *v32;
  _BOOL4 v33;
  void *v34;
  NSObject *v35;
  const char *v36;
  NSObject *v37;
  _BOOL4 v38;
  const char *v39;
  char v40;
  id v41;
  NSObject *v42;
  void *v43;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *context;
  void *v51;
  _BOOL4 v52;
  char *v53;
  char *v54;
  id obj;
  uint64_t v56;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint8_t buf[4];
  id v63;
  __int16 v64;
  void *v65;
  __int16 v66;
  uint64_t v67;
  _BYTE v68[128];
  _QWORD v69[2];
  _QWORD v70[4];

  v52 = a4;
  v70[2] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v6);
  v7 = self;
  v51 = v5;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _migrateLegacySlomoAdjustmentsInStore:fromLegacySLMFormat:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("complete != 0"));
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kindSubtype"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v70[0] = v14;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForMigrateLegacyVideoAdjustmentsExclusions"), 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v70[1] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v70, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "andPredicateWithSubpredicates:", v16);
  v17 = objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0CB3528];
  v46 = (void *)v17;
  v47 = (void *)v12;
  v69[0] = v17;
  v69[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v69, 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "andPredicateWithSubpredicates:", v19);
  v20 = objc_claimAutoreleasedReturnValue();

  v45 = (void *)v20;
  objc_msgSend(v11, "setPredicate:", v20);
  objc_msgSend(v11, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763728);
  v48 = v11;
  v49 = v8;
  objc_msgSend(v8, "executeFetchRequest:error:", v11, 0);
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v68, 16);
  if (!v21)
  {
    v56 = 0;
    v53 = 0;
    v54 = 0;
    goto LABEL_28;
  }
  v22 = v21;
  v56 = 0;
  v53 = 0;
  v54 = 0;
  v23 = *(_QWORD *)v59;
  do
  {
    for (i = 0; i != v22; ++i)
    {
      if (*(_QWORD *)v59 != v23)
        objc_enumerationMutation(obj);
      v25 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * i);
      v26 = (void *)MEMORY[0x19AEC1554]();
      v27 = -[PLModelMigrator _migrateLegacySlomoAdjustmentsForAsset:](v7, "_migrateLegacySlomoAdjustmentsForAsset:", v25);
      if (!v27)
      {
        ++v56;
        goto LABEL_24;
      }
      v28 = v27;
      objc_msgSend(v25, "pathForAdjustmentFile");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = objc_msgSend(v30, "fileExistsAtPath:", v29);

      if ((v31 & 1) != 0)
      {
        if (v28 == 2)
        {
          ++v54;
        }
        else if (v28 == 1)
        {
          ++v53;
        }
        goto LABEL_23;
      }
      PLMigrationGetLog();
      v32 = objc_claimAutoreleasedReturnValue();
      v33 = os_log_type_enabled(v32, OS_LOG_TYPE_ERROR);
      if (v28 == 1)
      {
        if (v52)
        {
          if (v33)
          {
            objc_msgSend(v25, "pathForLegacySlalomRegionsArchive");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412546;
            v63 = v34;
            v64 = 2112;
            v65 = v29;
            _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_ERROR, "_migrateLegacySlomoAdjustmentsInStore failed to migrate %@ to %@", buf, 0x16u);

          }
          goto LABEL_22;
        }
        if (v33)
        {
          *(_DWORD *)buf = 138412290;
          v63 = v29;
          v35 = v32;
          v36 = "_migrateLegacySlomoAdjustmentsInStore failed to migrate %@ to updated format";
          goto LABEL_21;
        }
      }
      else if (v33)
      {
        *(_DWORD *)buf = 138412290;
        v63 = v29;
        v35 = v32;
        v36 = "_migrateLegacySlomoAdjustmentsInStore failed to create default adjustments at %@";
LABEL_21:
        _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_ERROR, v36, buf, 0xCu);
      }
LABEL_22:

LABEL_23:
LABEL_24:
      objc_autoreleasePoolPop(v26);
    }
    v22 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v68, 16);
  }
  while (v22);
LABEL_28:

  PLMigrationGetLog();
  v37 = objc_claimAutoreleasedReturnValue();
  v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);
  if (v52)
  {
    if (v38)
    {
      *(_DWORD *)buf = 134218496;
      v63 = v53;
      v64 = 2048;
      v65 = v54;
      v66 = 2048;
      v67 = v56;
      v39 = "Slo-mo assets: migrated %ld SLM files, created defaults for %ld files, and did nothing for %ld";
      goto LABEL_33;
    }
  }
  else if (v38)
  {
    *(_DWORD *)buf = 134218496;
    v63 = v53;
    v64 = 2048;
    v65 = v54;
    v66 = 2048;
    v67 = v56;
    v39 = "Slo-mo assets: migrated %ld adjustments files, created defaults for %ld files, and did nothing for %ld";
LABEL_33:
    _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_DEFAULT, v39, buf, 0x20u);
  }

  if (objc_msgSend(v49, "hasChanges"))
  {
    v57 = 0;
    v40 = objc_msgSend(v49, "save:", &v57);
    v41 = v57;
    if ((v40 & 1) == 0)
    {
      PLMigrationGetLog();
      v42 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v41, "userInfo");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v63 = v41;
        v64 = 2112;
        v65 = v43;
        _os_log_impl(&dword_199541000, v42, OS_LOG_TYPE_ERROR, "_migrateLegacySlomoAdjustmentsInStore failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v40 = 1;
  }

  objc_autoreleasePoolPop(context);
  return v40;
}

- (BOOL)_fixAdjustedAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  NSObject *v16;
  void *v17;
  BOOL v18;
  id v20;
  _QWORD v21[4];
  id v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint8_t buf[4];
  id v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v24 = 0;
  v25 = &v24;
  v26 = 0x2020000000;
  v27 = 1;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixAdjustedAssets:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __38__PLModelMigrator__fixAdjustedAssets___block_invoke;
  v21[3] = &unk_1E366FD70;
  v12 = v11;
  v22 = v12;
  v23 = &v24;
  v13 = (id)objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, 0, v21);
  if (*((_BYTE *)v25 + 24) && objc_msgSend(v6, "hasChanges"))
  {
    v20 = 0;
    v14 = objc_msgSend(v6, "save:", &v20);
    v15 = v20;
    *((_BYTE *)v25 + 24) = v14;
    if ((v14 & 1) == 0)
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v15, "userInfo");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v29 = v15;
        v30 = 2112;
        v31 = v17;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "_fixAdjustedAssets: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  objc_autoreleasePoolPop(v5);
  v18 = *((_BYTE *)v25 + 24) != 0;
  _Block_object_dispose(&v24, 8);

  return v18;
}

- (BOOL)_fixVisibleBurstAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  id v26;
  NSObject *v27;
  void *v28;
  NSObject *v29;
  void *v31;
  void *context;
  void *v33;
  id obj;
  int v35;
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint8_t buf[4];
  id v42;
  __int16 v43;
  void *v44;
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v33 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixVisibleBurstAsset:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "fetchRequestWithEntityName:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("avalancheUUID != NULL AND visibilityState = %d AND trashedState = %d"), 0, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  v10 = v5;
  v31 = v8;
  objc_msgSend(v5, "executeFetchRequest:error:", v8, 0);
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v45, 16);
  if (v11)
  {
    v12 = v11;
    v35 = 0;
    v13 = *(_QWORD *)v38;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v38 != v13)
          objc_enumerationMutation(obj);
        v15 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
        v16 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v15, "avalancheUUID");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_msgSend(v15, "avalanchePickType");
        if ((v18 & 8) == 0)
        {
          v19 = v18;
          v20 = (void *)MEMORY[0x1E0C97B48];
          +[PLManagedAsset entityName](PLManagedAsset, "entityName");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "fetchRequestWithEntityName:", v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v22, "setFetchBatchSize:", 100);
          objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("avalancheUUID == %@ AND trashedState != %d"), v17, 0);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "setPredicate:", v23);

          objc_msgSend(v10, "executeFetchRequest:error:", v22, 0);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v24, "count"))
          {
            objc_msgSend(v15, "setAvalanchePickType:", v19 & 4 | 8u);
            objc_msgSend(v15, "setCloudLocalState:", 0);
            ++v35;
            if (objc_msgSend(v15, "complete"))
              objc_msgSend(v15, "persistMetadataToFilesystem");
          }

        }
        objc_autoreleasePoolPop(v16);
      }
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v45, 16);
    }
    while (v12);
  }
  else
  {
    v35 = 0;
  }

  if (objc_msgSend(v10, "hasChanges"))
  {
    v36 = 0;
    v25 = objc_msgSend(v10, "save:", &v36);
    v26 = v36;
    if ((v25 & 1) == 0)
    {
      PLMigrationGetLog();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v26, "userInfo");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v42 = v26;
        v43 = 2112;
        v44 = v28;
        _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "_fixVisibleBurstAsset: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v25 = 1;
  }
  PLMigrationGetLog();
  v29 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v42) = v35;
    _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_DEFAULT, "_fixVisibleBurstAsset: fixed %d burst assets", buf, 8u);
  }

  objc_autoreleasePoolPop(context);
  return v25;
}

- (BOOL)_fixDuplicatedAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  id v32;
  BOOL v33;
  NSObject *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *context;
  void *v45;
  PLModelMigrator *v46;
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint8_t buf[4];
  id v57;
  __int16 v58;
  void *v59;
  _BYTE v60[128];
  _BYTE v61[128];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v42 = (void *)MEMORY[0x19AEC1554]();
  v46 = self;
  v43 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixDuplicatedAssets:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("assets.@count > 1"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v41 = v6;
  objc_msgSend(v5, "executeFetchRequest:error:", v6, 0);
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v8 = (id)objc_claimAutoreleasedReturnValue();
  v38 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v52, v61, 16);
  if (v38)
  {
    v9 = *(_QWORD *)v53;
    v40 = v8;
    v37 = *(_QWORD *)v53;
    v45 = v5;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v53 != v9)
          objc_enumerationMutation(v8);
        v39 = v10;
        v11 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * v10);
        context = (void *)MEMORY[0x19AEC1554]();
        v48 = 0u;
        v49 = 0u;
        v50 = 0u;
        v51 = 0u;
        objc_msgSend(v11, "assets");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v48, v60, 16);
        if (v13)
        {
          v14 = v13;
          v15 = *(_QWORD *)v49;
          while (2)
          {
            for (i = 0; i != v14; ++i)
            {
              if (*(_QWORD *)v49 != v15)
                objc_enumerationMutation(v12);
              v17 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * i);
              objc_msgSend(v17, "uuid");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              +[PLCloudResource cloudResourceForResourceType:forAssetUuid:forCloudMaster:](PLCloudResource, "cloudResourceForResourceType:forAssetUuid:forCloudMaster:", 1, v18, v11);
              v19 = (void *)objc_claimAutoreleasedReturnValue();

              if (v19
                || (objc_msgSend(v17, "cloudAssetGUID"),
                    v20 = (void *)objc_claimAutoreleasedReturnValue(),
                    v20,
                    !v20))
              {

              }
              else
              {
                if (objc_msgSend(v17, "isCloudPhotoLibraryAsset"))
                {
                  objc_msgSend(v17, "cloudAssetGUID");
                  v21 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v17, "photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:", v21);
                  v22 = (void *)objc_claimAutoreleasedReturnValue();

                  -[PLModelMigrator pathManager](v46, "pathManager");
                  v23 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v23, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v22, 31, 0);
                  v24 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v17, "setDirectory:", v24);

                  objc_msgSend(v17, "uniformTypeIdentifier");
                  v25 = (void *)objc_claimAutoreleasedReturnValue();
                  +[PLManagedAsset preferredFileExtensionForType:](PLManagedAsset, "preferredFileExtensionForType:", v25);
                  v26 = (void *)objc_claimAutoreleasedReturnValue();

                  v27 = (void *)MEMORY[0x1E0CB3940];
                  objc_msgSend(v17, "cloudAssetGUID");
                  v28 = v12;
                  v29 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v27, "stringWithFormat:", CFSTR("%@.%@"), v29, v26);
                  v30 = (void *)objc_claimAutoreleasedReturnValue();

                  v12 = v28;
                  objc_msgSend(v17, "setFilename:", v30);

                  v5 = v45;
                }
                if (!+[PLCloudResource legacyCreateNewResourcesIn:inManagedObjectContext:forAsset:](PLCloudResource, "legacyCreateNewResourcesIn:inManagedObjectContext:forAsset:", v11, v5, v17))
                {

                  objc_autoreleasePoolPop(context);
                  v33 = 0;
                  v8 = v40;
                  v32 = v40;
                  goto LABEL_25;
                }
              }
            }
            v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v48, v60, 16);
            if (v14)
              continue;
            break;
          }
        }

        objc_autoreleasePoolPop(context);
        v10 = v39 + 1;
        v8 = v40;
        v9 = v37;
      }
      while (v39 + 1 != v38);
      v38 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v52, v61, 16);
    }
    while (v38);
  }

  if (objc_msgSend(v5, "hasChanges"))
  {
    v47 = 0;
    v31 = objc_msgSend(v5, "save:", &v47);
    v32 = v47;
    if ((v31 & 1) != 0)
    {
      v33 = 1;
    }
    else
    {
      PLMigrationGetLog();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v32, "userInfo");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v57 = v32;
        v58 = 2112;
        v59 = v36;
        _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_ERROR, "_fixDuplicatedAssets: failed: %@ %@", buf, 0x16u);

      }
      v33 = 0;
    }
LABEL_25:

  }
  else
  {
    v33 = 1;
  }

  objc_autoreleasePoolPop(v42);
  return v33;
}

- (BOOL)_fixNonDuplicatedAssets:(id)a3 adjusted:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  char v49;
  id v50;
  NSObject *v51;
  void *v52;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *context;
  id obj;
  id v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint8_t buf[4];
  id v67;
  __int16 v68;
  void *v69;
  _BYTE v70[128];
  _QWORD v71[4];

  v4 = a4;
  v71[2] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v6, "-[PLModelMigrator _fixNonDuplicatedAssets:adjusted:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(SUBQUERY(assets, $att, $att.adjustmentsState != %d).@count != 0)"), 0);
  v9 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(SUBQUERY(assets, $att, $att.adjustmentsState == %d).@count == 0)"), 0);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("assets.@count == 1"));
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)v12;
  v55 = (void *)v10;
  v56 = (void *)v9;
  if (v4)
    v14 = v9;
  else
    v14 = v10;
  v71[0] = v12;
  v71[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v71, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v15);
  v16 = objc_claimAutoreleasedReturnValue();

  v54 = (void *)v16;
  objc_msgSend(v8, "setPredicate:", v16);
  v57 = v8;
  v58 = v7;
  objc_msgSend(v7, "executeFetchRequest:error:", v8, 0);
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v65 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v62, v70, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v63;
    do
    {
      for (i = 0; i != v18; ++i)
      {
        if (*(_QWORD *)v63 != v19)
          objc_enumerationMutation(obj);
        v21 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * i);
        v22 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v21, "assets");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "anyObject");
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 5, v21);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "firstObject");
        v26 = (void *)objc_claimAutoreleasedReturnValue();

        if (v26)
        {
          objc_msgSend(v24, "uuid");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "setAssetUuid:", v27);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 4, v21);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "firstObject");
        v29 = (void *)objc_claimAutoreleasedReturnValue();

        if (v29)
        {
          objc_msgSend(v24, "uuid");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "setAssetUuid:", v30);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 3, v21);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "firstObject");
        v32 = (void *)objc_claimAutoreleasedReturnValue();

        if (v32)
        {
          objc_msgSend(v24, "uuid");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v32, "setAssetUuid:", v33);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 2, v21);
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "firstObject");
        v35 = (void *)objc_claimAutoreleasedReturnValue();

        if (v35)
        {
          objc_msgSend(v24, "uuid");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "setAssetUuid:", v36);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 7, v21);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v37, "firstObject");
        v38 = (void *)objc_claimAutoreleasedReturnValue();

        if (v38)
        {
          objc_msgSend(v24, "uuid");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "setAssetUuid:", v39);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 6, v21);
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "firstObject");
        v41 = (void *)objc_claimAutoreleasedReturnValue();

        if (v41)
        {
          objc_msgSend(v24, "uuid");
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v41, "setAssetUuid:", v42);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 1, v21);
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "firstObject");
        v44 = (void *)objc_claimAutoreleasedReturnValue();

        if (v44)
        {
          objc_msgSend(v24, "uuid");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "setAssetUuid:", v45);

        }
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 17, v21);
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v46, "firstObject");
        v47 = (void *)objc_claimAutoreleasedReturnValue();

        if (v47)
        {
          objc_msgSend(v24, "uuid");
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v47, "setAssetUuid:", v48);

        }
        objc_autoreleasePoolPop(v22);
      }
      v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v62, v70, 16);
    }
    while (v18);
  }

  if (objc_msgSend(v58, "hasChanges"))
  {
    v61 = 0;
    v49 = objc_msgSend(v58, "save:", &v61);
    v50 = v61;
    if ((v49 & 1) == 0)
    {
      PLMigrationGetLog();
      v51 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v50, "userInfo");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v67 = v50;
        v68 = 2112;
        v69 = v52;
        _os_log_impl(&dword_199541000, v51, OS_LOG_TYPE_ERROR, "_fixNonAdjustedNonDuplicatedAssets: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v49 = 1;
  }

  objc_autoreleasePoolPop(context);
  return v49;
}

- (void)_removeFileAt:(id)a3 forResource:(id)a4
{
  id v5;
  id v6;
  NSObject *v7;
  int v8;
  NSObject *v9;
  NSObject *v10;
  const char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  id v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  if (v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = -[NSObject removeItemAtPath:error:](v7, "removeItemAtPath:error:", v5, 0);
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if (v8)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v14 = 138412546;
        v15 = v6;
        v16 = 2112;
        v17 = v5;
        v11 = "_fixVideoJPGPath: resource %@ removing file at: %@";
        v12 = v10;
        v13 = OS_LOG_TYPE_DEFAULT;
LABEL_9:
        _os_log_impl(&dword_199541000, v12, v13, v11, (uint8_t *)&v14, 0x16u);
      }
    }
    else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      v14 = 138412546;
      v15 = v6;
      v16 = 2112;
      v17 = v5;
      v11 = "_fixVideoJPGPath: resource %@, can't delete resource from %@";
      v12 = v10;
      v13 = OS_LOG_TYPE_ERROR;
      goto LABEL_9;
    }

    goto LABEL_11;
  }
  PLMigrationGetLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v14 = 138412290;
    v15 = v6;
    _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "_fixVideoJPGPath: resource %@, can't delete resource from nil path", (uint8_t *)&v14, 0xCu);
  }
LABEL_11:

}

- (BOOL)_validateOrDeleteFileAtPath:(id)a3 forCloudResource:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  int v10;
  id v11;
  void *v12;
  uint64_t v13;
  BOOL v14;
  NSObject *v15;
  id v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "fileExistsAtPath:", v6))
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v6, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0;
    v10 = objc_msgSend(v9, "getResourceValue:forKey:error:", &v17, *MEMORY[0x1E0C99998], 0);
    v11 = v17;
    v12 = v11;
    if (v10)
    {
      v13 = objc_msgSend(v11, "integerValue");
      if (v13 == objc_msgSend(v7, "fileSize"))
      {
        v14 = 1;
LABEL_10:

        goto LABEL_11;
      }
    }
    else
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v19 = v7;
        v20 = 2112;
        v21 = v6;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_fixVideoJPGPath: resource %@ can't get the fileSize for file at path %@", buf, 0x16u);
      }

    }
    -[PLModelMigrator _removeFileAt:forResource:](self, "_removeFileAt:forResource:", v6, v7);
    v14 = 0;
    goto LABEL_10;
  }
  v14 = 0;
LABEL_11:

  return v14;
}

- (void)_fixPathForResource:(id)a3 withPath:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  int v11;
  id v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if (v7)
  {
    objc_msgSend(v6, "filePath");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      if ((-[NSObject isEqualToString:](v8, "isEqualToString:", v7) & 1) != 0)
      {
LABEL_13:
        objc_msgSend(v6, "setIsLocallyAvailable:", -[PLModelMigrator _validateOrDeleteFileAtPath:forCloudResource:](self, "_validateOrDeleteFileAtPath:forCloudResource:", v7, v6));
        goto LABEL_14;
      }
      objc_msgSend(v6, "setFilePath:", v7);
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v10 = objc_claimAutoreleasedReturnValue();
      if (-[NSObject fileExistsAtPath:](v10, "fileExistsAtPath:", v9))
      {
        if (!-[PLModelMigrator _validateOrDeleteFileAtPath:forCloudResource:](self, "_validateOrDeleteFileAtPath:forCloudResource:", v7, v6))-[NSObject moveItemAtPath:toPath:error:](v10, "moveItemAtPath:toPath:error:", v9, v7, 0);
        -[NSObject removeItemAtPath:error:](v10, "removeItemAtPath:error:", v9, 0);
      }
    }
    else
    {
      objc_msgSend(v6, "setFilePath:", v7);
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        v11 = 138412546;
        v12 = v6;
        v13 = 2112;
        v14 = v7;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "_fixVideoJPGPath: resource %@, found nil resourcePath, setting to corrected path %@", (uint8_t *)&v11, 0x16u);
      }
    }

    goto LABEL_13;
  }
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    v11 = 138412290;
    v12 = v6;
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "_fixVideoJPGPath: can't correct cloudResource %@ path to nil", (uint8_t *)&v11, 0xCu);
  }
LABEL_14:

}

- (BOOL)_fixVideoJPGPath:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t j;
  void *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  void *v32;
  void *v33;
  char v34;
  id v35;
  NSObject *v36;
  void *v37;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id obj;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *context;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _BYTE v70[128];
  uint8_t v71[128];
  uint8_t buf[4];
  id v73;
  __int16 v74;
  void *v75;
  _BYTE v76[128];
  _BYTE v77[128];
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v41 = (void *)MEMORY[0x19AEC1554]();
  v42 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixVideoJPGPath:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setFetchBatchSize:", 100);
  v39 = v6;
  v40 = v5;
  objc_msgSend(v5, "executeFetchRequest:error:", v6, 0);
  v66 = 0u;
  v67 = 0u;
  v68 = 0u;
  v69 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v46 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v66, v77, 16);
  if (v46)
  {
    v45 = *(_QWORD *)v67;
    v44 = *MEMORY[0x1E0CEC568];
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v67 != v45)
          objc_enumerationMutation(obj);
        v48 = v7;
        v8 = *(void **)(*((_QWORD *)&v66 + 1) + 8 * v7);
        context = (void *)MEMORY[0x19AEC1554]();
        v9 = (void *)MEMORY[0x1E0D752F0];
        objc_msgSend(v8, "uniformTypeIdentifier");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "typeWithIdentifier:", v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "conformsToType:", v44);

        if (v12)
        {
          v64 = 0u;
          v65 = 0u;
          v62 = 0u;
          v63 = 0u;
          objc_msgSend(v8, "assets");
          v49 = (id)objc_claimAutoreleasedReturnValue();
          v51 = objc_msgSend(v49, "countByEnumeratingWithState:objects:count:", &v62, v76, 16);
          if (v51)
          {
            v50 = *(_QWORD *)v63;
            while (2)
            {
              v13 = 0;
              do
              {
                if (*(_QWORD *)v63 != v50)
                  objc_enumerationMutation(v49);
                v14 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * v13);
                if (objc_msgSend(v14, "kind") != 1)
                {
                  PLMigrationGetLog();
                  v31 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
                  {
                    objc_msgSend(v14, "uuid");
                    v32 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v8, "scopedIdentifier");
                    v33 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138412546;
                    v73 = v32;
                    v74 = 2112;
                    v75 = v33;
                    _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "_fixVideoJPGPath: asset %@ kind is showing that this is not a video while the master %@ uti thinks it is.", buf, 0x16u);

                  }
                  goto LABEL_38;
                }
                v52 = v13;
                v60 = 0u;
                v61 = 0u;
                v58 = 0u;
                v59 = 0u;
                v15 = objc_msgSend(&unk_1E3763740, "countByEnumeratingWithState:objects:count:", &v58, v71, 16);
                if (v15)
                {
                  v16 = v15;
                  v17 = *(_QWORD *)v59;
                  do
                  {
                    for (i = 0; i != v16; ++i)
                    {
                      if (*(_QWORD *)v59 != v17)
                        objc_enumerationMutation(&unk_1E3763740);
                      v19 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * i);
                      v20 = objc_msgSend(v19, "unsignedIntegerValue");
                      objc_msgSend(v14, "uuid");
                      v21 = (void *)objc_claimAutoreleasedReturnValue();
                      +[PLCloudResource cloudResourceForResourceType:forAssetUuid:forCloudMaster:](PLCloudResource, "cloudResourceForResourceType:forAssetUuid:forCloudMaster:", v20, v21, v8);
                      v22 = (void *)objc_claimAutoreleasedReturnValue();

                      if (v22)
                      {
                        objc_msgSend(v14, "pathForCPLResourceType:adjusted:", objc_msgSend(v19, "unsignedIntegerValue"), 0);
                        v23 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PLModelMigrator _fixPathForResource:withPath:](self, "_fixPathForResource:withPath:", v22, v23);

                      }
                    }
                    v16 = objc_msgSend(&unk_1E3763740, "countByEnumeratingWithState:objects:count:", &v58, v71, 16);
                  }
                  while (v16);
                }
                if (objc_msgSend(v14, "hasAdjustments"))
                {
                  v56 = 0u;
                  v57 = 0u;
                  v54 = 0u;
                  v55 = 0u;
                  v24 = objc_msgSend(&unk_1E3763740, "countByEnumeratingWithState:objects:count:", &v54, v70, 16);
                  if (v24)
                  {
                    v25 = v24;
                    v26 = *(_QWORD *)v55;
                    do
                    {
                      for (j = 0; j != v25; ++j)
                      {
                        if (*(_QWORD *)v55 != v26)
                          objc_enumerationMutation(&unk_1E3763740);
                        v28 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * j);
                        +[PLCloudResource legacyCloudResourceForResourceType:forAsset:](PLCloudResource, "legacyCloudResourceForResourceType:forAsset:", objc_msgSend(v28, "unsignedIntegerValue"), v14);
                        v29 = (void *)objc_claimAutoreleasedReturnValue();
                        if (v29)
                        {
                          objc_msgSend(v14, "pathForCPLResourceType:adjusted:", objc_msgSend(v28, "unsignedIntegerValue"), 1);
                          v30 = (void *)objc_claimAutoreleasedReturnValue();
                          -[PLModelMigrator _fixPathForResource:withPath:](self, "_fixPathForResource:withPath:", v29, v30);

                        }
                      }
                      v25 = objc_msgSend(&unk_1E3763740, "countByEnumeratingWithState:objects:count:", &v54, v70, 16);
                    }
                    while (v25);
                  }
                }
                +[PLCloudResource repairCloudPlaceholderKindForVideoAsset:](PLCloudResource, "repairCloudPlaceholderKindForVideoAsset:", v14);
                v13 = v52 + 1;
              }
              while (v52 + 1 != v51);
              v51 = objc_msgSend(v49, "countByEnumeratingWithState:objects:count:", &v62, v76, 16);
              if (v51)
                continue;
              break;
            }
          }
LABEL_38:

        }
        objc_autoreleasePoolPop(context);
        v7 = v48 + 1;
      }
      while (v48 + 1 != v46);
      v46 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v66, v77, 16);
    }
    while (v46);
  }

  if (objc_msgSend(v40, "hasChanges"))
  {
    v53 = 0;
    v34 = objc_msgSend(v40, "save:", &v53);
    v35 = v53;
    if ((v34 & 1) == 0)
    {
      PLMigrationGetLog();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v35, "userInfo");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v73 = v35;
        v74 = 2112;
        v75 = v37;
        _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "_fixVideoJPGPath: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v34 = 1;
  }

  objc_autoreleasePoolPop(v41);
  return v34;
}

- (BOOL)_resetFailedAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  void *v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _resetFailedAssets:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d"), 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  v25[0] = v10;
  +[PLManagedAsset predicateForSupportedAssetTypesForUpload](PLManagedAsset, "predicateForSupportedAssetTypesForUpload");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v14);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v15, &__block_literal_global_1194);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (v16)
  {
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v16, "userInfo");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v22 = (uint64_t)v16;
      v23 = 2112;
      v24 = v19;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "_resetFailedAssets: failed: %@ %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v22 = objc_msgSend(v15, "count");
    _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "Reset %lu failed assets", buf, 0xCu);
  }

  objc_autoreleasePoolPop(v5);
  return v16 == 0;
}

- (BOOL)_resetFailedCloudMasters:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _resetFailedCloudMasters:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d"), 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, &__block_literal_global_1196);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v10, "userInfo");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v16 = (uint64_t)v10;
      v17 = 2112;
      v18 = v13;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "_resetFailedCloudMasters failed: %@ %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v16 = objc_msgSend(v9, "count");
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Reset %lu failed masters", buf, 0xCu);
  }

  objc_autoreleasePoolPop(v5);
  return v10 == 0;
}

- (BOOL)_resetUploadAttempts:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  int v21;
  uint64_t v22;
  __int16 v23;
  void *v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _resetUploadAttempts:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("additionalAttributes.uploadAttempts > 0"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  v25[0] = v10;
  +[PLManagedAsset predicateForSupportedAssetTypesForUpload](PLManagedAsset, "predicateForSupportedAssetTypesForUpload");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763758);
  objc_msgSend(v9, "setPredicate:", v14);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v15, &__block_literal_global_1201);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (v16)
  {
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v16, "userInfo");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 138412546;
      v22 = (uint64_t)v16;
      v23 = 2112;
      v24 = v19;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "_resetUploadAttempts: failed: %@ %@", (uint8_t *)&v21, 0x16u);

    }
  }
  else if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    v21 = 134217984;
    v22 = objc_msgSend(v15, "count");
    _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "Reset %lu upload attempts", (uint8_t *)&v21, 0xCu);
  }

  objc_autoreleasePoolPop(v5);
  return v16 == 0;
}

- (BOOL)_fixCloudMasterCloudLocalState:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixCloudMasterCloudLocalState:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d"), 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, &__block_literal_global_1202);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v10, "userInfo");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v16 = (uint64_t)v10;
      v17 = 2112;
      v18 = v13;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "_fixCloudMasterCloudLocalState: failed: %@ %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v16 = objc_msgSend(v9, "count");
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Fix %lu cloudMaster cloudLocalState", buf, 0xCu);
  }

  objc_autoreleasePoolPop(v5);
  return v10 == 0;
}

- (BOOL)_populateRepresentativeAssets:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  int v16;
  void *v17;
  __int16 v18;
  void *v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateRepresentativeAssets:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("Memory"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("representativeAssets.@count = 0 && curatedAssets.@count > 0"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  v20[0] = CFSTR("curatedAssets");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", v10);

  objc_msgSend(v8, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "executeFetchRequest:error:", v8, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, &__block_literal_global_1210);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v12, "userInfo");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = 138412546;
      v17 = v12;
      v18 = 2112;
      v19 = v14;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "_fixupCloudResourcesInStore failed: %@ %@", (uint8_t *)&v16, 0x16u);

    }
  }

  objc_autoreleasePoolPop(v6);
  return v12 == 0;
}

- (BOOL)_populateLatLongInAsset:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  int v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateLatLongInAsset:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("locationData != NULL"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, &__block_literal_global_1215);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 138412546;
      v18 = v13;
      v19 = 2112;
      v20 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_populateLatLongInAsset failed: %@ %@", (uint8_t *)&v17, 0x16u);

    }
  }

  objc_autoreleasePoolPop(v6);
  return v13 == 0;
}

- (BOOL)_persistMemoriesInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[5];
  _QWORD v14[4];

  v14[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _persistMemoriesInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("Memory"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("pendingState"), 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  v14[0] = CFSTR("curatedAssets");
  v14[1] = CFSTR("representativeAssets");
  v14[2] = CFSTR("movieCuratedAssets");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", v10);

  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __43__PLModelMigrator__persistMemoriesInStore___block_invoke;
  v13[3] = &unk_1E36650C8;
  v13[4] = self;
  v11 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v8, 0, v13);
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v6);
  return 1;
}

- (BOOL)_persistPersonsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[5];

  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _persistPersonsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLPerson fetchRequest](PLPerson, "fetchRequest");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("verifiedType"), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __42__PLModelMigrator__persistPersonsInStore___block_invoke;
  v12[3] = &unk_1E366FED0;
  v12[4] = self;
  v10 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v8, 0, v12);

  objc_autoreleasePoolPop(v6);
  return 1;
}

- (BOOL)_removeOldPersonMetadataInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  v6 = (void *)MEMORY[0x1E0C99E98];
  -[PLModelMigrator pathManager](self, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "privateDirectoryWithSubType:createIfNeeded:error:", 4, 1, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "fileURLWithPath:isDirectory:", v8, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  LOBYTE(v7) = +[PLPhotoLibrary removeFaceMetadataAtURL:includingPeople:](PLPhotoLibrary, "removeFaceMetadataAtURL:includingPeople:", v9, 1);
  objc_autoreleasePoolPop(v5);

  return (char)v7;
}

- (BOOL)_populateNilOriginalFilenameOnMaster:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  BOOL v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  int v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (-[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled"))
  {
    v5 = pl_dispatch_once();
    v6 = (void *)MEMORY[0x19AEC1554](v5);
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateNilOriginalFilenameOnMaster:]", *MEMORY[0x1E0C97C38]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("originalFilename == nil"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setPredicate:", v9);
    objc_msgSend(v8, "setFetchBatchSize:", 100);
    objc_msgSend(v7, "executeFetchRequest:error:", v8, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v10, &__block_literal_global_1232);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11 == 0;
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v11)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v11, "userInfo");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = 138412546;
        v18 = (uint64_t)v11;
        v19 = 2112;
        v20 = v15;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_populateNilOriginalFilenameOnMaster: failed: %@ %@", (uint8_t *)&v17, 0x16u);

      }
    }
    else if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 134217984;
      v18 = objc_msgSend(v10, "count");
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Fix %lu cloudMaster nil original filename", (uint8_t *)&v17, 0xCu);
    }

    objc_autoreleasePoolPop(v6);
  }
  else
  {
    v12 = 1;
  }

  return v12;
}

- (BOOL)_populateNilOriginalFilename:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  int v16;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateNilOriginalFilename:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 0;
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763770);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("additionalAttributes.originalFilename == nil"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __48__PLModelMigrator__populateNilOriginalFilename___block_invoke;
  v18[3] = &unk_1E3665110;
  v18[4] = &v19;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, v18);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v24 = v13;
      v25 = 2112;
      v26 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_populateNilOriginalFilename: failed: %@ %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v16 = *((_DWORD *)v20 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v24) = v16;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Fixed %d originalFilenames", buf, 8u);
    }
  }

  _Block_object_dispose(&v19, 8);
  objc_autoreleasePoolPop(v6);

  return v13 == 0;
}

- (BOOL)_flattenUnknownCustomRenderedValues:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  id v19;
  uint8_t buf[4];
  id v21;
  const __CFString *v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _flattenUnknownCustomRenderedValues:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "batchUpdateRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("hdrType"), &unk_1E375E328);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v22 = CFSTR("hdrType");
  v23[0] = &unk_1E375E340;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, &v22, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPropertiesToUpdate:", v12);

  objc_msgSend(v10, "setResultType:", 2);
  v19 = 0;
  objc_msgSend(v7, "executeRequest:error:", v10, &v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v13)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v13, "result");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v21 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Flattened assets successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v21 = v14;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Batch update request failed, flattening custom rendered values from 1 to 0, error: %@", buf, 0xCu);
  }

  objc_msgSend(v7, "reset");
  objc_autoreleasePoolPop(v6);

  return v13 != 0;
}

- (id)_dateForFirstCRVSPhoto
{
  void *v2;
  id v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0C99D78]);
  objc_msgSend(v3, "setYear:", 2016);
  objc_msgSend(v3, "setMonth:", 5);
  objc_msgSend(v3, "setDay:", 1);
  objc_msgSend(v2, "dateFromComponents:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (BOOL)_fixCustomRenderedValues:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  const char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint32_t v21;
  int v22;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint8_t buf[4];
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixCustomRenderedValues:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3880];
  -[PLModelMigrator _dateForFirstCRVSPhoto](self, "_dateForFirstCRVSPhoto");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "predicateWithFormat:", CFSTR("dateCreated >= %@ AND %K == %@ AND uniformTypeIdentifier == %@"), v12, CFSTR("hdrType"), &unk_1E375E340, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v14);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v25 = 0;
  v26 = &v25;
  v27 = 0x2020000000;
  v28 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __44__PLModelMigrator__fixCustomRenderedValues___block_invoke;
  v24[3] = &unk_1E3665110;
  v24[4] = &v25;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v15, v24);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (v16)
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v16;
      v18 = "Failed to fix custom rendered value: %@";
      v19 = v17;
      v20 = OS_LOG_TYPE_ERROR;
      v21 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v19, v20, v18, buf, v21);
    }
  }
  else
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v22 = *((_DWORD *)v26 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v30) = v22;
      v18 = "Fixed %d custom rendered value";
      v19 = v17;
      v20 = OS_LOG_TYPE_DEFAULT;
      v21 = 8;
      goto LABEL_6;
    }
  }

  objc_msgSend(v7, "reset");
  _Block_object_dispose(&v25, 8);

  objc_autoreleasePoolPop(v6);
  return v16 == 0;
}

- (BOOL)_deleteAllMemoriesInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  BOOL v10;
  id v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  int v15;
  id v16;
  uint64_t v17;
  id v18;
  int v19;
  NSObject *v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  void *context;
  _QWORD v26[4];
  id v27;
  uint64_t *v28;
  id v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int v34;
  id location;
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  NSObject *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _deleteAllMemoriesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("Memory"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 100);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_initWeak(&location, v8);

  v31 = 0;
  v32 = &v31;
  v33 = 0x2020000000;
  v34 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled");
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __45__PLModelMigrator__deleteAllMemoriesInStore___block_invoke;
  v26[3] = &unk_1E3665138;
  v30 = v10;
  objc_copyWeak(&v29, &location);
  v11 = v6;
  v27 = v11;
  v28 = &v31;
  objc_msgSend(v11, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, v26);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v37 = (uint64_t)v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to delete memories: %@", buf, 0xCu);
    }
    goto LABEL_14;
  }
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = *((_DWORD *)v32 + 6);
    *(_DWORD *)buf = 67109120;
    LODWORD(v37) = v15;
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Deleted %d memories", buf, 8u);
  }

  v16 = objc_loadWeakRetained(&location);
  v17 = objc_msgSend(v16, "count");

  if (v17)
  {
    -[PLPhotoLibraryPathManager deletedMemoryUUIDsFilePath](self->_pathManager, "deletedMemoryUUIDsFilePath");
    v13 = objc_claimAutoreleasedReturnValue();
    v18 = objc_loadWeakRetained(&location);
    v19 = objc_msgSend(v18, "writeToFile:atomically:", v13, 1);

    if (v19)
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218242;
        v37 = v17;
        v38 = 2112;
        v39 = v13;
        v21 = "Persisted %lu deletedMemoryUUIDs to %@";
        v22 = v20;
        v23 = OS_LOG_TYPE_DEFAULT;
LABEL_12:
        _os_log_impl(&dword_199541000, v22, v23, v21, buf, 0x16u);
      }
    }
    else
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218242;
        v37 = v17;
        v38 = 2112;
        v39 = v13;
        v21 = "Failed to persist %lu deletedMemoryUUIDs to %@";
        v22 = v20;
        v23 = OS_LOG_TYPE_ERROR;
        goto LABEL_12;
      }
    }

LABEL_14:
  }
  objc_msgSend(v11, "reset");

  objc_destroyWeak(&v29);
  _Block_object_dispose(&v31, 8);
  objc_destroyWeak(&location);

  objc_autoreleasePoolPop(context);
  return v12 == 0;
}

- (BOOL)_applyDataProtectionToDCIMFromClassBToClassC
{
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "photoDirectoryWithType:", 4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v7[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator applyDataProtectionToPhotosPaths:fromKeyClass:toKeyClass:](self, "applyDataProtectionToPhotosPaths:fromKeyClass:toKeyClass:", v5, 2, 3);

  return 1;
}

- (BOOL)_removeCameraRollInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint32_t v19;
  _QWORD v21[4];
  id v22;
  id v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _removeCameraRollInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind = %d"), 1000);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  v23 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v8, &v23);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v23;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __44__PLModelMigrator__removeCameraRollInStore___block_invoke;
  v21[3] = &unk_1E3665160;
  v22 = v7;
  v12 = v7;
  objc_msgSend(v12, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v10, v21);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v13)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v13;
      v16 = "Failed to delete camera roll: %@";
      v17 = v15;
      v18 = OS_LOG_TYPE_ERROR;
      v19 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v17, v18, v16, buf, v19);
    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    v16 = "Deleted camera roll";
    v17 = v15;
    v18 = OS_LOG_TYPE_DEFAULT;
    v19 = 2;
    goto LABEL_6;
  }

  objc_msgSend(v12, "reset");
  objc_autoreleasePoolPop(v6);

  return v13 == 0;
}

- (BOOL)_fixLastPrefetchDateInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  id v20;
  uint8_t buf[4];
  id v22;
  const __CFString *v23;
  _QWORD v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixLastPrefetchDateInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97AB0];
  +[PLCloudResource entityName](PLCloudResource, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "batchUpdateRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("lastPrefetchDate == %@"), CFSTR("<null>"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v23 = CFSTR("lastPrefetchDate");
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", 0.0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, &v23, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPropertiesToUpdate:", v13);

  objc_msgSend(v10, "setResultType:", 2);
  v20 = 0;
  objc_msgSend(v7, "executeRequest:error:", v10, &v20);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v20;
  PLMigrationGetLog();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = v16;
  if (v14)
  {
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v14, "result");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v22 = v18;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Fixing lastPrefetchDate successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v22 = v15;
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Batch update request failed fixing lastPrefetchDate, error: %@", buf, 0xCu);
  }

  objc_msgSend(v7, "reset");
  objc_autoreleasePoolPop(v6);

  return v14 != 0;
}

- (BOOL)_fixLocallyAvailableFlagForThumbnailsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  NSObject *v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint32_t v28;
  int v29;
  void *v31;
  void *context;
  void *v33;
  void *v34;
  void *v35;
  _QWORD v36[4];
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int v42;
  uint8_t buf[4];
  void *v44;
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[4];

  v47[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  v31 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixLocallyAvailableFlagForThumbnailsInStore:]", *MEMORY[0x1E0C97C38]);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0C97B48];
  +[PLCloudResource entityName](PLCloudResource, "entityName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "fetchRequestWithEntityName:", v7);
  v35 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("type == %d AND isLocallyAvailable == YES"), 5);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("SUBQUERY(cloudMaster.assets, $asset, $asset.adjustmentsState = %d AND $asset.thumbnailIndex = -1).@count != 0"), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v47[0] = v9;
  v10 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForUnadjustedAssetsWithKeyPathToAsset:", CFSTR("asset"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v46[0] = v11;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset.thumbnailIndex = -1"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v46[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v47[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v47, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "orPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = (void *)MEMORY[0x1E0CB3528];
  v45[0] = v33;
  v45[1] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v45, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "andPredicateWithSubpredicates:", v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v35, "setFetchBatchSize:", 100);
  objc_msgSend(v35, "setPredicate:", v19);
  objc_msgSend(v34, "executeFetchRequest:error:", v35, 0);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = 0;
  v40 = &v39;
  v41 = 0x2020000000;
  v42 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = __64__PLModelMigrator__fixLocallyAvailableFlagForThumbnailsInStore___block_invoke;
  v36[3] = &unk_1E3665188;
  v22 = v21;
  v37 = v22;
  v38 = &v39;
  objc_msgSend(v34, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v20, v36);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if (v23)
  {
    PLMigrationGetLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v44 = v23;
      v25 = "Batch update request failed fixing locallyAvailableFlagForThumbnails, error: %@";
      v26 = v24;
      v27 = OS_LOG_TYPE_ERROR;
      v28 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v26, v27, v25, buf, v28);
    }
  }
  else
  {
    PLMigrationGetLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      v29 = *((_DWORD *)v40 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v44) = v29;
      v25 = "Fixed %d locallyAvailableFlagForThumbnails";
      v26 = v24;
      v27 = OS_LOG_TYPE_DEFAULT;
      v28 = 8;
      goto LABEL_6;
    }
  }

  objc_msgSend(v34, "reset");
  _Block_object_dispose(&v39, 8);

  objc_autoreleasePoolPop(context);
  return v23 == 0;
}

- (BOOL)_updateKeyAssetInMemory:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  BOOL v16;
  NSObject *v17;
  void *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(id *, void *);
  void *v24;
  PLModelMigrator *v25;
  id v26;
  uint64_t *v27;
  uint64_t *v28;
  id v29;
  id location;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t buf[4];
  void *v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _updateKeyAssetInMemory:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("Memory"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("keyAsset = nil"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);

  objc_msgSend(v8, "setFetchBatchSize:", 100);
  v35 = 0;
  v36 = &v35;
  v37 = 0x2020000000;
  v38 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x2020000000;
  v34 = 0;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_initWeak(&location, v10);

  objc_msgSend(v7, "executeFetchRequest:error:", v8, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = MEMORY[0x1E0C809B0];
  v22 = 3221225472;
  v23 = __43__PLModelMigrator__updateKeyAssetInMemory___block_invoke;
  v24 = &unk_1E36651B0;
  v27 = &v35;
  v25 = self;
  objc_copyWeak(&v29, &location);
  v12 = v7;
  v26 = v12;
  v28 = &v31;
  objc_msgSend(v12, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, &v21);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo", v21, v22, v23, v24, v25);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v40 = v13;
      v41 = 2112;
      v42 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_updateKeyAssetInMemory failed: %@ %@", buf, 0x16u);

    }
    v16 = 0;
  }
  else
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = (void *)v36[3];
      v19 = (void *)v32[3];
      *(_DWORD *)buf = 134218240;
      v40 = v18;
      v41 = 2048;
      v42 = v19;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "_updateKeyAssetInMemory fixed %ld deleted %ld", buf, 0x16u);
    }

    v14 = objc_loadWeakRetained(&location);
    v16 = -[PLModelMigrator _processDeletesForUUIDs:](self, "_processDeletesForUUIDs:", v14, v21, v22, v23, v24, v25);
  }

  objc_msgSend(v12, "reset");
  objc_destroyWeak(&v29);

  objc_destroyWeak(&location);
  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v35, 8);

  objc_autoreleasePoolPop(v6);
  return v16;
}

- (BOOL)_fixMemoriesWithAssetLists:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  _BOOL4 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t i;
  void *v54;
  void *v55;
  NSObject *v56;
  void *v57;
  char v58;
  id v59;
  NSObject *v60;
  NSObject *v61;
  BOOL v62;
  void *v63;
  void *v65;
  void *context;
  void *v67;
  id v68;
  id v69;
  id obj;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  id v84;
  id v85;
  void *v86;
  void *v87;
  void *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  char *v92;
  void *v93;
  id v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint8_t buf[4];
  char *v112;
  __int16 v113;
  void *v114;
  _BYTE v115[128];
  _BYTE v116[128];
  _BYTE v117[128];
  _BYTE v118[128];
  uint64_t v119;

  v119 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  v67 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixMemoriesWithAssetLists:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("Memory"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("representativeAssets.@count > 500"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  objc_msgSend(v7, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = v7;
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  v107 = 0u;
  v108 = 0u;
  v109 = 0u;
  v110 = 0u;
  obj = v10;
  v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v107, v118, 16);
  v93 = v9;
  if (v11)
  {
    v12 = v11;
    v73 = *(_QWORD *)v108;
    do
    {
      v13 = 0;
      v68 = (id)v12;
      do
      {
        if (*(_QWORD *)v108 != v73)
          objc_enumerationMutation(obj);
        v78 = v13;
        v14 = *(void **)(*((_QWORD *)&v107 + 1) + 8 * v13);
        objc_msgSend(v14, "valueForKeyPath:", CFSTR("curatedAssets.objectID"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "valueForKeyPath:", CFSTR("movieCuratedAssets.objectID"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "valueForKeyPath:", CFSTR("representativeAssets.objectID"));
        v88 = v15;
        v86 = v16;
        v84 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("curated%lu+movie%lu+rep%lu"), objc_msgSend(v15, "count"), objc_msgSend(v16, "count"), objc_msgSend(v84, "count"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v77, "objectForKey:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        if (v18)
        {
          v19 = v18;
          objc_msgSend(v18, "allKeys");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = objc_msgSend(v20, "count");

          if (v21)
          {
            v71 = v17;
            v22 = 0;
            v75 = 0;
            v80 = v19;
            v82 = v14;
            do
            {
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("variant%d"), v22);
              v91 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v19, "objectForKey:");
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v23)
              {
                objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v14);
                v23 = (void *)objc_claimAutoreleasedReturnValue();
              }
              objc_msgSend(v23, "firstObject");
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v24, "valueForKeyPath:", CFSTR("curatedAssets.objectID"));
              v25 = objc_claimAutoreleasedReturnValue();
              objc_msgSend(v24, "valueForKeyPath:", CFSTR("movieCuratedAssets.objectID"));
              v26 = objc_claimAutoreleasedReturnValue();
              objc_msgSend(v24, "valueForKeyPath:", CFSTR("representativeAssets.objectID"));
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              v90 = (void *)v25;
              objc_msgSend(MEMORY[0x1E0C99E20], "setWithSet:", v25);
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v28, "minusSet:", v88);
              v29 = (void *)v26;
              objc_msgSend(MEMORY[0x1E0C99E20], "setWithSet:", v26);
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v30, "minusSet:", v86);
              objc_msgSend(MEMORY[0x1E0C99E20], "setWithSet:", v27);
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "minusSet:", v84);
              if (!objc_msgSend(v28, "count") && !objc_msgSend(v30, "count") && !objc_msgSend(v31, "count"))
              {
                objc_msgSend(v23, "addObject:", v82);
                v75 = 1;
              }

              ++v22;
              v19 = v80;
              objc_msgSend(v80, "allKeys");
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              v33 = objc_msgSend(v32, "count");

              v14 = v82;
            }
            while (v33 > v22);
            v9 = v93;
            v12 = (uint64_t)v68;
            v17 = v71;
            if ((v75 & 1) != 0)
            {
              v34 = v78;
              goto LABEL_21;
            }
          }
          v35 = (void *)MEMORY[0x1E0CB3940];
          objc_msgSend(v19, "allKeys");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "stringWithFormat:", CFSTR("variant%lu"), objc_msgSend(v36, "count"));
          v37 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v14);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "setObject:forKey:", v38, v37);

        }
        else
        {
          objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v77, "setObject:forKey:", v19, v17);
          objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v14);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "setObject:forKey:", v37, CFSTR("variant0"));
        }
        v34 = v78;

LABEL_21:
        v13 = v34 + 1;
      }
      while (v13 != v12);
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v107, v118, 16);
    }
    while (v12);
  }

  v39 = -[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled");
  v103 = 0u;
  v104 = 0u;
  v105 = 0u;
  v106 = 0u;
  objc_msgSend(v77, "allKeys");
  v69 = (id)objc_claimAutoreleasedReturnValue();
  v74 = objc_msgSend(v69, "countByEnumeratingWithState:objects:count:", &v103, v117, 16);
  v40 = 0;
  if (v74)
  {
    v72 = *(_QWORD *)v104;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v104 != v72)
        {
          v42 = v41;
          objc_enumerationMutation(v69);
          v41 = v42;
        }
        v76 = v41;
        objc_msgSend(v77, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v103 + 1) + 8 * v41));
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        v99 = 0u;
        v100 = 0u;
        v101 = 0u;
        v102 = 0u;
        objc_msgSend(v43, "allKeys");
        v85 = (id)objc_claimAutoreleasedReturnValue();
        v44 = objc_msgSend(v85, "countByEnumeratingWithState:objects:count:", &v99, v116, 16);
        if (v44)
        {
          v45 = v44;
          v46 = *(_QWORD *)v100;
          v79 = *(_QWORD *)v100;
          v81 = v43;
          do
          {
            v47 = 0;
            v83 = v45;
            do
            {
              if (*(_QWORD *)v100 != v46)
                objc_enumerationMutation(v85);
              objc_msgSend(v43, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v99 + 1) + 8 * v47));
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              if ((unint64_t)objc_msgSend(v48, "count") >= 2)
              {
                v87 = v48;
                v89 = v47;
                v97 = 0u;
                v98 = 0u;
                v95 = 0u;
                v96 = 0u;
                v49 = v48;
                v50 = objc_msgSend(v49, "countByEnumeratingWithState:objects:count:", &v95, v115, 16);
                if (v50)
                {
                  v51 = v50;
                  v52 = *(_QWORD *)v96;
                  do
                  {
                    v92 = v40;
                    for (i = 0; i != v51; ++i)
                    {
                      if (*(_QWORD *)v96 != v52)
                        objc_enumerationMutation(v49);
                      v54 = *(void **)(*((_QWORD *)&v95 + 1) + 8 * i);
                      if (v39
                        && objc_msgSend(*(id *)(*((_QWORD *)&v95 + 1) + 8 * i), "cloudLocalState") == 1)
                      {
                        objc_msgSend(v54, "uuid");
                        v55 = (void *)objc_claimAutoreleasedReturnValue();
                        if (v55)
                        {
                          objc_msgSend(v9, "addObject:", v55);
                        }
                        else
                        {
                          PLMigrationGetLog();
                          v56 = objc_claimAutoreleasedReturnValue();
                          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
                          {
                            *(_DWORD *)buf = 138412290;
                            v112 = (char *)v54;
                            _os_log_impl(&dword_199541000, v56, OS_LOG_TYPE_ERROR, "Memory %@ missing uuid", buf, 0xCu);
                          }

                          v9 = v93;
                        }

                      }
                      -[PLModelMigrator pathManager](self, "pathManager");
                      v57 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v54, "removePersistedFileSystemDataWithPathManager:", v57);

                      objc_msgSend(v6, "deleteObject:", v54);
                    }
                    v40 = &v92[v51];
                    v51 = objc_msgSend(v49, "countByEnumeratingWithState:objects:count:", &v95, v115, 16);
                  }
                  while (v51);
                }

                v46 = v79;
                v43 = v81;
                v45 = v83;
                v48 = v87;
                v47 = v89;
              }

              ++v47;
            }
            while (v47 != v45);
            v45 = objc_msgSend(v85, "countByEnumeratingWithState:objects:count:", &v99, v116, 16);
          }
          while (v45);
        }

        v41 = v76 + 1;
      }
      while (v76 + 1 != v74);
      v74 = objc_msgSend(v69, "countByEnumeratingWithState:objects:count:", &v103, v117, 16);
    }
    while (v74);
  }

  v94 = 0;
  v58 = objc_msgSend(v6, "save:", &v94);
  v59 = v94;
  PLMigrationGetLog();
  v60 = objc_claimAutoreleasedReturnValue();
  v61 = v60;
  if ((v58 & 1) != 0)
  {
    if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v112 = v40;
      _os_log_impl(&dword_199541000, v61, OS_LOG_TYPE_DEFAULT, "_fixMemoriesWithAssetLists deleted %ld", buf, 0xCu);
    }

    v62 = -[PLModelMigrator _processDeletesForUUIDs:](self, "_processDeletesForUUIDs:", v9);
  }
  else
  {
    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v59, "userInfo");
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v112 = (char *)v59;
      v113 = 2112;
      v114 = v63;
      _os_log_impl(&dword_199541000, v61, OS_LOG_TYPE_ERROR, "_fixMemoriesWithAssetLists failed: %@ %@", buf, 0x16u);

    }
    v62 = 0;
  }
  objc_msgSend(v6, "reset");

  objc_autoreleasePoolPop(context);
  return v62;
}

- (BOOL)_processDeletesForUUIDs:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  NSObject *v12;
  NSObject *v13;
  const char *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_msgSend(v4, "count");
  if (v5)
  {
    v6 = v5;
    -[PLPhotoLibraryPathManager deletedMemoryUUIDsFilePath](self->_pathManager, "deletedMemoryUUIDsFilePath");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "fileExistsAtPath:", v7);

    if (v9)
    {
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithContentsOfFile:", v7);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v10, "count"))
        objc_msgSend(v4, "addObjectsFromArray:", v10);

    }
    v11 = objc_msgSend(v4, "writeToFile:atomically:", v7, 1);
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (v11)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v18 = 134218242;
        v19 = v6;
        v20 = 2112;
        v21 = v7;
        v14 = "Persisted %lu deletedMemoryUUIDs to %@";
        v15 = v13;
        v16 = OS_LOG_TYPE_DEFAULT;
LABEL_12:
        _os_log_impl(&dword_199541000, v15, v16, v14, (uint8_t *)&v18, 0x16u);
      }
    }
    else if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v18 = 134218242;
      v19 = v6;
      v20 = 2112;
      v21 = v7;
      v14 = "Failed to persist %lu deletedMemoryUUIDs to %@";
      v15 = v13;
      v16 = OS_LOG_TYPE_ERROR;
      goto LABEL_12;
    }

    goto LABEL_14;
  }
  LOBYTE(v11) = 1;
LABEL_14:

  return v11;
}

- (BOOL)_deleteOrphanedUnverifiedPeople:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  id v19;
  uint8_t buf[4];
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _deleteOrphanedUnverifiedPeople:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("verifiedType == %d AND faceCount == 0 AND associatedFaceGroup == nil"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v10);
  objc_msgSend(v12, "setResultType:", 2);
  v19 = 0;
  objc_msgSend(v7, "executeRequest:error:", v12, &v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v13)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v13, "result");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v21 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "_deleteOrphanedUnverifiedPeople deleted %@ orphaned people", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v21 = v14;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "_deleteOrphanedUnverifiedPeople failed: %@", buf, 0xCu);
  }

  objc_msgSend(v7, "reset");
  objc_autoreleasePoolPop(v6);

  return v13 != 0;
}

- (void)_handleCreateOptionsUsingContext:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  id v11;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLModelMigrator options](self, "options");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("DefaultAlbumUUID"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("DefaultAlbumTitle"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      PLMigrationGetLog();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        if (v8)
          v10 = v8;
        else
          v10 = v7;
        v12 = 138412290;
        v13 = v10;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "creating album %@ from migration options", (uint8_t *)&v12, 0xCu);
      }

      v11 = +[PLGenericAlbum insertAlbumWithKind:title:uuid:inManagedObjectContext:](PLManagedAlbum, "insertAlbumWithKind:title:uuid:inManagedObjectContext:", 2, v8, v7, v4);
    }

  }
}

- (BOOL)_fixAlbumAndFolderSortAscending:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  char v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *context;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  void *v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixAlbumAndFolderSortAscending:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("GenericAlbum"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("customSortAscending == NO"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);
  objc_msgSend(v6, "setFetchBatchSize:", 100);
  objc_msgSend(v5, "executeFetchRequest:error:", v6, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v24 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        objc_msgSend(v13, "setCustomSortAscending:", 1);
        objc_msgSend(v13, "setCloudLocalState:", 0);
        -[PLModelMigrator _persistMetadataToFileSystemForAlbum:](self, "_persistMetadataToFileSystemForAlbum:", v13);
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
    }
    while (v10);
  }
  if (objc_msgSend(v5, "hasChanges"))
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = objc_msgSend(v8, "count");
      *(_DWORD *)buf = 134217984;
      v28 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Fixed sort ascending on %lu album", buf, 0xCu);
    }

    v22 = 0;
    v16 = objc_msgSend(v5, "save:", &v22);
    v17 = v22;
    if ((v16 & 1) == 0)
    {
      PLMigrationGetLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v17, "userInfo");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v28 = (uint64_t)v17;
        v29 = 2112;
        v30 = v19;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "_fixAlbumAndFolderSortAscending: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v16 = 1;
  }

  objc_autoreleasePoolPop(context);
  return v16;
}

- (BOOL)_fixFaceAlgorithmVersion:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  id v18;
  uint8_t buf[4];
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixFaceAlgorithmVersion:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97AB0];
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "batchUpdateRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("faceAlgorithmVersion == 0"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setPropertiesToUpdate:", &unk_1E3764530);
  objc_msgSend(v10, "setResultType:", 2);
  v18 = 0;
  objc_msgSend(v7, "executeRequest:error:", v10, &v18);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v18;
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v12)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v12, "result");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v20 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Fixing faceAlgorithmVersion successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v20 = v13;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Batch update request failed, setting faceAlgorithmVersion from 0 to 2, error: %@", buf, 0xCu);
  }

  objc_msgSend(v7, "reset");
  objc_autoreleasePoolPop(v6);

  return v12 != 0;
}

- (BOOL)_fixKeywordsInStagedStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t j;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  NSObject *v41;
  void *v42;
  void *v43;
  id v44;
  NSObject *v45;
  NSObject *v46;
  const char *v47;
  NSObject *v48;
  os_log_type_t v49;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *context;
  void *v56;
  id v57;
  id obj;
  char v59;
  void *v60;
  void *v61;
  id v62;
  _QWORD v63[4];
  id v64;
  id v65;
  id v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint8_t v75[128];
  uint8_t buf[4];
  id v77;
  _BYTE v78[128];
  uint64_t v79;
  _QWORD v80[5];

  v80[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v56 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixKeywordsInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedObject entityInManagedObjectContext:](PLManagedKeyword, "entityInManagedObjectContext:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  objc_msgSend(v6, "name");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionWithFormat:", CFSTR("count:(title)"));
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = objc_alloc_init(MEMORY[0x1E0C97B30]);
  objc_msgSend(v11, "setName:", CFSTR("count"));
  v53 = (void *)v10;
  objc_msgSend(v11, "setExpression:", v10);
  objc_msgSend(v11, "setExpressionResultType:", 300);
  v61 = v6;
  objc_msgSend(v6, "propertiesByName");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", CFSTR("title"));
  v13 = objc_claimAutoreleasedReturnValue();

  v80[0] = v13;
  v80[1] = v11;
  v52 = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v80, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToFetch:", v14);

  v51 = (void *)v13;
  v79 = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v79, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToGroupBy:", v15);

  objc_msgSend(v9, "setResultType:", 2);
  v54 = v9;
  objc_msgSend(v5, "executeFetchRequest:error:", v9, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = 0u;
  v72 = 0u;
  v73 = 0u;
  v74 = 0u;
  obj = v16;
  v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v78, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v72;
    do
    {
      for (i = 0; i != v19; ++i)
      {
        if (*(_QWORD *)v72 != v20)
          objc_enumerationMutation(obj);
        v22 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * i);
        objc_msgSend(v22, "objectForKey:", CFSTR("count"));
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = objc_msgSend(v23, "integerValue");

        if (v24 >= 2)
        {
          objc_msgSend(v22, "objectForKey:", CFSTR("title"));
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          PLMigrationGetLog();
          v26 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v77 = v25;
            _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Found dupeKeyword: %@", buf, 0xCu);
          }

          objc_msgSend(v17, "addObject:", v25);
        }
      }
      v19 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v78, 16);
    }
    while (v19);
  }

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = 0u;
  v68 = 0u;
  v69 = 0u;
  v70 = 0u;
  v57 = v17;
  v27 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v67, v75, 16);
  if (v27)
  {
    v28 = v27;
    v29 = *(_QWORD *)v68;
    v59 = 1;
    do
    {
      for (j = 0; j != v28; ++j)
      {
        if (*(_QWORD *)v68 != v29)
          objc_enumerationMutation(v57);
        v31 = *(_QWORD *)(*((_QWORD *)&v67 + 1) + 8 * j);
        v32 = (void *)MEMORY[0x1E0C97B48];
        objc_msgSend(v61, "name");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v32, "fetchRequestWithEntityName:", v33);
        v34 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("title == %@"), v31);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "setPredicate:", v35);

        objc_msgSend(v34, "setFetchBatchSize:", 100);
        v66 = 0;
        objc_msgSend(v5, "executeFetchRequest:error:", v34, &v66);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        v37 = v66;
        v38 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97B80]), "initWithEntity:insertIntoManagedObjectContext:", v61, v5);
        objc_msgSend(v38, "setValue:forKey:", v31, CFSTR("title"));
        v63[0] = MEMORY[0x1E0C809B0];
        v63[1] = 3221225472;
        v63[2] = __45__PLModelMigrator__fixKeywordsInStagedStore___block_invoke;
        v63[3] = &unk_1E36651D8;
        v39 = v38;
        v64 = v39;
        v65 = v60;
        objc_msgSend(v5, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v36, v63);
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        if (v40)
        {
          PLMigrationGetLog();
          v41 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            v77 = v37;
            _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, "Uniquing Keywords failed - error: %@", buf, 0xCu);
          }

          v59 = 0;
        }
        else
        {
          objc_msgSend(v5, "reset");
        }

      }
      v28 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v67, v75, 16);
    }
    while (v28);
  }
  else
  {
    v59 = 1;
  }

  if (objc_msgSend(v60, "count"))
  {
    v42 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithObjectIDs:", v60);
    v62 = 0;
    objc_msgSend(v5, "executeRequest:error:", v42, &v62);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = v62;
    PLMigrationGetLog();
    v45 = objc_claimAutoreleasedReturnValue();
    v46 = v45;
    if (v44)
    {
      if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v77 = v44;
        v47 = "Error deleting keywords: %@";
        v48 = v46;
        v49 = OS_LOG_TYPE_ERROR;
LABEL_32:
        _os_log_impl(&dword_199541000, v48, v49, v47, buf, 0xCu);
      }
    }
    else if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v77 = v43;
      v47 = "Deleted keywords: %@";
      v48 = v46;
      v49 = OS_LOG_TYPE_DEBUG;
      goto LABEL_32;
    }

  }
  objc_autoreleasePoolPop(context);

  return v59 & 1;
}

- (BOOL)_repersistDuplicatedAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _UNKNOWN **v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  int v43;
  void *v44;
  uint64_t j;
  void *v46;
  void *v47;
  void *v48;
  int v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  void *v68;
  char v69;
  id v70;
  NSObject *v71;
  void *v72;
  char v73;
  id v74;
  NSObject *v75;
  void *v76;
  void *v77;
  void *v79;
  void *v80;
  void *v81;
  id obj;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  PLModelMigrator *v87;
  void *v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *context;
  void *contexta;
  char *v106;
  id v107;
  char v108;
  uint64_t v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  id v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint8_t buf[4];
  id v132;
  __int16 v133;
  void *v134;
  _BYTE v135[128];
  _BYTE v136[128];
  _BYTE v137[128];
  _BYTE v138[128];
  uint64_t v139;

  v139 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v80 = (void *)MEMORY[0x19AEC1554]();
  v87 = self;
  v81 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _repersistDuplicatedAssets:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("assets.@count > 1"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  v79 = v7;
  objc_msgSend(v5, "executeFetchRequest:error:", v7, 0);
  v127 = 0u;
  v128 = 0u;
  v129 = 0u;
  v130 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v84 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v127, v138, 16);
  if (v84)
  {
    v83 = *(_QWORD *)v128;
    v9 = &off_1E3659000;
    v88 = v5;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v128 != v83)
          objc_enumerationMutation(obj);
        v86 = v10;
        v11 = *(void **)(*((_QWORD *)&v127 + 1) + 8 * v10);
        v85 = (void *)MEMORY[0x19AEC1554]();
        v89 = v11;
        +[PLCloudResource cloudResourcesForResourceType:forCloudMaster:](PLCloudResource, "cloudResourcesForResourceType:forCloudMaster:", 1, v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99E20], "set");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99E20], "set");
        v110 = (void *)objc_claimAutoreleasedReturnValue();
        v123 = 0u;
        v124 = 0u;
        v125 = 0u;
        v126 = 0u;
        v91 = v12;
        v90 = v13;
        v93 = objc_msgSend(v91, "countByEnumeratingWithState:objects:count:", &v123, v137, 16);
        if (v93)
        {
          v14 = 0;
          v92 = *(_QWORD *)v124;
          do
          {
            v15 = 0;
            do
            {
              v108 = v14;
              if (*(_QWORD *)v124 != v92)
                objc_enumerationMutation(v91);
              v106 = v15;
              v16 = *(void **)(*((_QWORD *)&v123 + 1) + 8 * (_QWORD)v15);
              v17 = MEMORY[0x19AEC1554]();
              objc_msgSend(v16, "filePath");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = objc_msgSend(v13, "containsObject:", v18);

              objc_msgSend(v16, "filePath");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              if (v19)
                v21 = v110;
              else
                v21 = v13;
              objc_msgSend(v21, "addObject:", v20);

              v22 = v9[476];
              objc_msgSend(v16, "assetUuid");
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v22, "assetWithUUID:inManagedObjectContext:", v23, v5);
              v24 = (void *)objc_claimAutoreleasedReturnValue();

              v25 = (void *)MEMORY[0x1E0C97B48];
              objc_msgSend(v9[476], "entityName");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v25, "fetchRequestWithEntityName:", v26);
              v27 = (void *)objc_claimAutoreleasedReturnValue();

              v28 = (void *)MEMORY[0x1E0CB3880];
              v102 = v24;
              objc_msgSend(v24, "cloudAssetGUID");
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v28, "predicateWithFormat:", CFSTR("cloudAssetGUID == %@"), v29);
              v30 = objc_claimAutoreleasedReturnValue();

              v98 = (void *)v30;
              objc_msgSend(v27, "setPredicate:", v30);
              v122 = 0;
              objc_msgSend(v5, "executeFetchRequest:error:", v27, &v122);
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              v32 = v122;
              v94 = objc_msgSend(v31, "count");
              context = (void *)v17;
              v100 = v27;
              v95 = v32;
              v96 = v31;
              if ((unint64_t)objc_msgSend(v31, "count") < 2)
              {
                if ((v108 & 1) != 0)
                  goto LABEL_26;
              }
              else
              {
                v121 = 0u;
                v119 = 0u;
                v120 = 0u;
                v118 = 0u;
                v33 = v31;
                v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v118, v136, 16);
                if (v34)
                {
                  v35 = v34;
                  v36 = 0;
                  v37 = *(_QWORD *)v119;
                  do
                  {
                    for (i = 0; i != v35; ++i)
                    {
                      if (*(_QWORD *)v119 != v37)
                        objc_enumerationMutation(v33);
                      v39 = *(void **)(*((_QWORD *)&v118 + 1) + 8 * i);
                      objc_msgSend(v39, "pathForOriginalFile");
                      v40 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v39, "setCloudAssetGUID:", 0);
                      objc_msgSend(v39, "setCloudLocalState:", 0);
                      if ((objc_msgSend(v6, "fileExistsAtPath:isDirectory:", v40, 0) & 1) == 0)
                      {
                        +[PLAssetTransactionReason transactionReason:](PLAssetTransactionReason, "transactionReason:", CFSTR("[_repersistDuplicatedAssets]The original file is not on disk, deleting asset."));
                        v41 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v39, "deleteWithReason:", v41);
                        ++v36;

                      }
                    }
                    v35 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v118, v136, 16);
                  }
                  while (v35);
                }
                else
                {
                  v36 = 0;
                }

                v5 = v88;
                v9 = &off_1E3659000;
                v13 = v90;
                if (v108 & 1 | (v36 != v94))
                {
LABEL_26:
                  objc_msgSend(v89, "setCloudLocalState:", 0);
                  v14 = 1;
                  goto LABEL_30;
                }
              }
              v14 = 0;
LABEL_30:
              objc_msgSend(v102, "pathForOriginalFile");
              v42 = (void *)objc_claimAutoreleasedReturnValue();
              v43 = objc_msgSend(v6, "fileExistsAtPath:isDirectory:", v42, 0);

              if (v43)
                objc_msgSend(v102, "persistMetadataToFilesystem");

              objc_autoreleasePoolPop(context);
              v15 = v106 + 1;
            }
            while (v106 + 1 != (char *)v93);
            v93 = objc_msgSend(v91, "countByEnumeratingWithState:objects:count:", &v123, v137, 16);
          }
          while (v93);
        }

        v116 = 0u;
        v117 = 0u;
        v114 = 0u;
        v115 = 0u;
        v107 = v91;
        v109 = objc_msgSend(v107, "countByEnumeratingWithState:objects:count:", &v114, v135, 16);
        if (v109)
        {
          v44 = *(void **)v115;
          contexta = *(void **)v115;
          do
          {
            for (j = 0; j != v109; ++j)
            {
              if (*(void **)v115 != v44)
                objc_enumerationMutation(v107);
              v46 = *(void **)(*((_QWORD *)&v114 + 1) + 8 * j);
              v47 = (void *)MEMORY[0x19AEC1554]();
              objc_msgSend(v46, "filePath");
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              v49 = objc_msgSend(v110, "containsObject:", v48);

              if (v49)
              {
                v50 = v9[476];
                objc_msgSend(v46, "assetUuid");
                v51 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v50, "assetWithUUID:inManagedObjectContext:", v51, v5);
                v52 = (void *)objc_claimAutoreleasedReturnValue();

                if (v52)
                {
                  objc_msgSend(v52, "cloudAssetGUID");
                  v53 = (void *)objc_claimAutoreleasedReturnValue();

                  if (!v53)
                  {
                    objc_msgSend(v52, "pathForOriginalFile");
                    v103 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v52, "uuid");
                    v54 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v52, "photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:", v54);
                    v55 = (void *)objc_claimAutoreleasedReturnValue();

                    -[PLModelMigrator pathManager](v87, "pathManager");
                    v56 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v56, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v55, 31, 0);
                    v57 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v52, "setDirectory:", v57);

                    v58 = v9[476];
                    objc_msgSend(v52, "uniformTypeIdentifier");
                    v59 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v58, "preferredFileExtensionForType:", v59);
                    v60 = objc_claimAutoreleasedReturnValue();

                    v61 = (void *)MEMORY[0x1E0CB3940];
                    objc_msgSend(v52, "uuid");
                    v62 = (void *)objc_claimAutoreleasedReturnValue();
                    v101 = (void *)v60;
                    objc_msgSend(v61, "stringWithFormat:", CFSTR("%@.%@"), v62, v60);
                    v63 = objc_claimAutoreleasedReturnValue();

                    v99 = (void *)v63;
                    objc_msgSend(v52, "setFilename:", v63);
                    objc_msgSend(v52, "pathForOriginalFile");
                    v64 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v64, "stringByDeletingLastPathComponent");
                    v65 = objc_claimAutoreleasedReturnValue();

                    v113 = 0;
                    v97 = (void *)v65;
                    LOBYTE(v65) = objc_msgSend(v6, "createDirectoryIfNeededAtPath:error:", v65, &v113);
                    v66 = v113;
                    if ((v65 & 1) == 0)
                    {
                      PLMigrationGetLog();
                      v67 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
                      {
                        objc_msgSend(v66, "userInfo");
                        v68 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138412546;
                        v132 = v66;
                        v133 = 2112;
                        v134 = v68;
                        _os_log_impl(&dword_199541000, v67, OS_LOG_TYPE_ERROR, "_repersistDuplicatedAssets: failed to create directory: %@ %@", buf, 0x16u);

                      }
                    }
                    v112 = v66;
                    v69 = objc_msgSend(v6, "copyItemAtPath:toPath:error:", v103, v64, &v112);
                    v70 = v112;

                    if ((v69 & 1) == 0)
                    {
                      PLMigrationGetLog();
                      v71 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR))
                      {
                        objc_msgSend(v70, "userInfo");
                        v72 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138412546;
                        v132 = v70;
                        v133 = 2112;
                        v134 = v72;
                        _os_log_impl(&dword_199541000, v71, OS_LOG_TYPE_ERROR, "_repersistDuplicatedAssets: failed to copy originalFile: %@ %@", buf, 0x16u);

                      }
                    }

                    v9 = &off_1E3659000;
                  }
                }

                v44 = contexta;
              }
              objc_autoreleasePoolPop(v47);
            }
            v109 = objc_msgSend(v107, "countByEnumeratingWithState:objects:count:", &v114, v135, 16);
          }
          while (v109);
        }

        objc_autoreleasePoolPop(v85);
        v10 = v86 + 1;
      }
      while (v86 + 1 != v84);
      v84 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v127, v138, 16);
    }
    while (v84);
  }

  if (objc_msgSend(v5, "hasChanges"))
  {
    v111 = 0;
    v73 = objc_msgSend(v5, "save:", &v111);
    v74 = v111;
    if ((v73 & 1) == 0)
    {
      PLMigrationGetLog();
      v75 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v74, "userInfo");
        v76 = v5;
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v132 = v74;
        v133 = 2112;
        v134 = v77;
        _os_log_impl(&dword_199541000, v75, OS_LOG_TYPE_ERROR, "_repersistDuplicatedAssets: failed: %@ %@", buf, 0x16u);

        v5 = v76;
      }

    }
  }
  else
  {
    v73 = 1;
  }

  objc_autoreleasePoolPop(v80);
  return v73;
}

- (BOOL)_generateAddedDateForAssetsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  char v18;
  id v19;
  NSObject *v20;
  void *v21;
  id v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  void *v27;
  _QWORD v28[4];

  v28[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _generateAddedDateForAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForGenerateAddedDateExclusions"), 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 0"), CFSTR("complete"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v28[1] = v13;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == nil"), CFSTR("addedDate"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v28[2] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 3);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v16);

  v17 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, 0, &__block_literal_global_1320);
  if (objc_msgSend(v7, "hasChanges"))
  {
    v23 = 0;
    v18 = objc_msgSend(v7, "save:", &v23);
    v19 = v23;
    if ((v18 & 1) == 0)
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v19, "userInfo");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v25 = v19;
        v26 = 2112;
        v27 = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "_generateAddedDateForAssetsInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v18 = 1;
  }

  objc_autoreleasePoolPop(v6);
  return v18;
}

- (BOOL)_isReasonableCreationDate:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  BOOL v8;

  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", 0.0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "timeIntervalSinceDate:", v4);
  if (v6 >= 0.0)
  {
    v8 = 0;
  }
  else
  {
    objc_msgSend(v5, "timeIntervalSinceDate:", v3);
    v8 = v7 < 0.0;
  }

  return v8;
}

- (BOOL)fixPossiblyIncorrectAddedDateForAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  void *v9;
  id v10;
  BOOL v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;

  v4 = a3;
  objc_msgSend(v4, "dateCreated");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addedDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "timeIntervalSinceDate:", v5);
    if (v8 <= 60.0)
    {
      v11 = 0;
      v10 = 0;
      goto LABEL_28;
    }
    objc_msgSend(v4, "cameraMake");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v9, "isEqualToString:", CFSTR("Apple"))
      && -[PLModelMigrator _isReasonableCreationDate:](self, "_isReasonableCreationDate:", v5))
    {
      v10 = v5;
    }
    else
    {
      objc_msgSend(v4, "pathForOriginalFile");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 0;
      if (objc_msgSend(v13, "fileExistsAtPath:isDirectory:", v12, 0))
      {
        v24 = 0;
        objc_msgSend(v13, "attributesOfItemAtPath:error:", v12, &v24);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = v14;
        if (v14)
        {
          objc_msgSend(v14, "fileCreationDate");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = v16;
          if (!v16)
            goto LABEL_22;
          objc_msgSend(v16, "timeIntervalSinceDate:", v5);
          if (v18 < 0.0)
            v18 = -v18;
          if (v18 < 60.0)
            goto LABEL_20;
          objc_msgSend(v4, "modificationDate");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "timeIntervalSinceDate:", v19);
          v21 = v20;

          v22 = -v21;
          if (v21 >= 0.0)
            v22 = v21;
          if (v22 < 60.0)
LABEL_20:
            v10 = v17;
          else
LABEL_22:
            v10 = 0;

        }
        else
        {
          v10 = 0;
        }

      }
    }

    if (!v10)
      goto LABEL_27;
  }
  else
  {
    v10 = v5;
    if (!v10)
    {
LABEL_27:
      v11 = 0;
      goto LABEL_28;
    }
  }
  objc_msgSend(v4, "setAddedDate:", v10);
  objc_msgSend(v4, "persistMetadataToFilesystem");
  if (objc_msgSend(v4, "cloudLocalState"))
    objc_msgSend(v4, "setCloudLocalState:", 0);
  v11 = 1;
LABEL_28:

  return v11;
}

- (BOOL)_fixIncorrectAddedDateForAssetsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  int v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixIncorrectAddedDateForAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForFixIncorrectAddedDateExclusions"), 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 0"), CFSTR("complete"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v15);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __58__PLModelMigrator__fixIncorrectAddedDateForAssetsInStore___block_invoke;
  v22[3] = &unk_1E366FD70;
  v22[4] = self;
  v22[5] = &v23;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v16, v22);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (v17)
  {
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v17, "userInfo");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v28 = v17;
      v29 = 2112;
      v30 = v19;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "_fixIncorrectAddedDateForAssetsInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v20 = *((_DWORD *)v24 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v28) = v20;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "Fixed %d incorrect added date", buf, 8u);
    }
  }

  _Block_object_dispose(&v23, 8);
  objc_autoreleasePoolPop(v6);

  return v17 == 0;
}

- (BOOL)_addCameraCaptureDeviceForAssetsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  int v17;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _addCameraCaptureDeviceForAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "predicateWithFormat:", CFSTR("uniformTypeIdentifier == %@ AND complete != 0 AND width <= 1280 AND height <= 1280"), v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v12);

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __59__PLModelMigrator__addCameraCaptureDeviceForAssetsInStore___block_invoke;
  v19[3] = &unk_1E3665110;
  v19[4] = &v20;
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v13, v19);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v14, "userInfo");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v14;
      v26 = 2112;
      v27 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_addCameraCaptureDeviceForAssetsInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *((_DWORD *)v21 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v25) = v17;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Added camera capture device to %d assets", buf, 8u);
    }
  }

  _Block_object_dispose(&v20, 8);
  objc_autoreleasePoolPop(v5);

  return v14 == 0;
}

- (BOOL)_tagScreenshotsForAssetsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  int v23;
  void *v25;
  void *context;
  _QWORD v27[5];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  void *v35;
  _QWORD v36[7];

  v36[5] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v25 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _tagScreenshotsForAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  v6 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "fetchRequestWithEntityName:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kind"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = v10;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kindSubtype"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v36[1] = v11;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForTagScreenshotsExclusions"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v36[2] = v12;
  v13 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC580], "identifier");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("uniformTypeIdentifier"), v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v36[3] = v15;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 0"), CFSTR("complete"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v36[4] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v36, 5);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "andPredicateWithSubpredicates:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v18);

  objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", &unk_1E3763788);
  objc_msgSend(v8, "setFetchBatchSize:", 100);
  objc_msgSend(v5, "executeFetchRequest:error:", v8, 0);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 3221225472;
  v27[2] = __51__PLModelMigrator__tagScreenshotsForAssetsInStore___block_invoke;
  v27[3] = &unk_1E3665110;
  v27[4] = &v28;
  objc_msgSend(v5, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v19, v27);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if (v20)
  {
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v20, "userInfo");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v33 = v20;
      v34 = 2112;
      v35 = v22;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "_tagScreenshotsForAssetsInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      v23 = *((_DWORD *)v29 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v33) = v23;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "Tagged %d screenshots", buf, 8u);
    }
  }

  _Block_object_dispose(&v28, 8);
  objc_autoreleasePoolPop(context);

  return v20 == 0;
}

- (BOOL)_addCloudKindSubtypeAndBurstFlagsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];
  _QWORD v21[4];
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t buf[4];
  _BYTE v27[24];
  __int16 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _addCloudKindSubtypeAndBurstFlagsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset predicateForSupportedAssetTypesForUpload](PLManagedAsset, "predicateForSupportedAssetTypesForUpload");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  v21[0] = 0;
  v21[1] = v21;
  v21[2] = 0x2020000000;
  v21[3] = 0;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __60__PLModelMigrator__addCloudKindSubtypeAndBurstFlagsInStore___block_invoke;
  v20[3] = &unk_1E3665220;
  v20[4] = &v22;
  v20[5] = v21;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v12, 1, v20);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v27 = v13;
      *(_WORD *)&v27[8] = 2112;
      *(_QWORD *)&v27[10] = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_addCloudKindSubtypeAndBurstFlagsInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v17 = objc_msgSend(v12, "count");
    v18 = v23[3];
    *(_DWORD *)buf = 67109888;
    *(_DWORD *)v27 = v13 == 0;
    *(_WORD *)&v27[4] = 2048;
    *(_QWORD *)&v27[6] = v17;
    *(_WORD *)&v27[14] = 2048;
    *(_QWORD *)&v27[16] = v18;
    v28 = 2048;
    v29 = v18;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "_addCloudKindSubtypeAndBurstFlagsInStore: finished %d with %lu assets (%lu cloudKindSubType %lu cloudBurstFlag)", buf, 0x26u);
  }

  _Block_object_dispose(v21, 8);
  _Block_object_dispose(&v22, 8);

  objc_autoreleasePoolPop(v6);
  return v13 == 0;
}

- (BOOL)_fixupSharedVideosWithoutThumbnailsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  id v24;
  uint64_t v25;
  uint8_t buf[4];
  _BYTE v27[18];
  _QWORD v28[4];

  v28[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupSharedVideosWithoutThumbnailsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  v12 = 1;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = v13;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("kindSubtype"), 100);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v28[1] = v14;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == -1"), CFSTR("thumbnailIndex"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v28[2] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 3);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v17);

  v25 = 0;
  v18 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, &v25, &__block_literal_global_1331);
  if (objc_msgSend(v7, "hasChanges"))
  {
    v24 = 0;
    v12 = objc_msgSend(v7, "save:", &v24);
    v19 = v24;
    if ((v12 & 1) == 0)
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v19, "userInfo");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v27 = v19;
        *(_WORD *)&v27[8] = 2112;
        *(_QWORD *)&v27[10] = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "_fixupSharedVideosWithoutThumbnailsInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  PLMigrationGetLog();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v27 = v12;
    *(_WORD *)&v27[4] = 2048;
    *(_QWORD *)&v27[6] = v25;
    _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "_fixupSharedVideosWithoutThumbnailsInStore: finished %d with %lu assets", buf, 0x12u);
  }

  objc_autoreleasePoolPop(v6);
  return v12;
}

- (BOOL)_fixCloudSharedVideosInStore:(id)a3
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  int v22;
  id v23;
  NSObject *v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *context;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v38;
  _QWORD v39[4];
  id v40;
  PLModelMigrator *v41;
  id v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t buf[4];
  _BYTE v60[24];
  __int16 v61;
  uint64_t v62;
  __int16 v63;
  uint64_t v64;
  _QWORD v65[2];
  _QWORD v66[6];

  v66[3] = *MEMORY[0x1E0C80C00];
  v35 = a3;
  v3 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v3);
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator pathManager](self, "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "photoDirectoryWithType:", 12);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v35, "-[PLModelMigrator _fixCloudSharedVideosInStore:]", *MEMORY[0x1E0C97C38]);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v6);
  v36 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v66[0] = v8;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("kind"), 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v66[1] = v9;
  v10 = (void *)MEMORY[0x1E0CB3528];
  v11 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("uniformTypeIdentifier"), v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v65[0] = v13;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K BEGINSWITH %@"), CFSTR("directory"), CFSTR("/var/mobile/Media"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v65[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v65, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "orPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v66[2] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v66, 3);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "andPredicateWithSubpredicates:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v36, "setPredicate:", v18);
  v58 = 0;
  v54 = 0;
  v55 = &v54;
  v56 = 0x2020000000;
  v57 = 0;
  v50 = 0;
  v51 = &v50;
  v52 = 0x2020000000;
  v53 = 0;
  v46 = 0;
  v47 = &v46;
  v48 = 0x2020000000;
  v49 = 0;
  v39[0] = MEMORY[0x1E0C809B0];
  v39[1] = 3221225472;
  v39[2] = __48__PLModelMigrator__fixCloudSharedVideosInStore___block_invoke;
  v39[3] = &unk_1E3665268;
  v19 = v32;
  v40 = v19;
  v41 = self;
  v43 = &v54;
  v44 = &v50;
  v45 = &v46;
  v20 = v33;
  v42 = v20;
  v21 = (id)objc_msgSend(v34, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v36, &v58, v39);
  if (objc_msgSend(v34, "hasChanges"))
  {
    v38 = 0;
    v22 = objc_msgSend(v34, "save:", &v38);
    v23 = v38;
    if ((v22 & 1) == 0)
    {
      PLMigrationGetLog();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v23, "userInfo");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v60 = v23;
        *(_WORD *)&v60[8] = 2112;
        *(_QWORD *)&v60[10] = v25;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "_fixCloudSharedVideosInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v22 = 1;
  }
  PLMigrationGetLog();
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    v27 = v55[3];
    v28 = v51[3];
    v29 = v47[3];
    *(_DWORD *)buf = 67110144;
    *(_DWORD *)v60 = v22;
    *(_WORD *)&v60[4] = 2048;
    *(_QWORD *)&v60[6] = v58;
    *(_WORD *)&v60[14] = 2048;
    *(_QWORD *)&v60[16] = v27;
    v61 = 2048;
    v62 = v28;
    v63 = 2048;
    v64 = v29;
    _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "_fixCloudSharedVideosInStore: finished %d with %lu assets, fixed %lu UTI, %lu directory, %lu filename", buf, 0x30u);
  }

  _Block_object_dispose(&v46, 8);
  _Block_object_dispose(&v50, 8);
  _Block_object_dispose(&v54, 8);

  objc_autoreleasePoolPop(context);
  return v22;
}

- (BOOL)_fixCloudSharedGIFsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  void *context;
  id v26;
  uint64_t v27;
  uint8_t buf[4];
  _BYTE v29[18];
  _QWORD v30[4];

  v30[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixCloudSharedGIFsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3528];
  v11 = 1;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = v12;
  v13 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC4F8], "identifier");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("uniformTypeIdentifier"), v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v30[1] = v15;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K ENDSWITH[c] %@"), CFSTR("filename"), CFSTR("JPG"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v30[2] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 3);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v18);
  v27 = 0;
  v19 = (id)objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, &v27, &__block_literal_global_1343);
  if (objc_msgSend(v6, "hasChanges"))
  {
    v26 = 0;
    v11 = objc_msgSend(v6, "save:", &v26);
    v20 = v26;
    if ((v11 & 1) == 0)
    {
      PLMigrationGetLog();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v20, "userInfo");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v29 = v20;
        *(_WORD *)&v29[8] = 2112;
        *(_QWORD *)&v29[10] = v22;
        _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "_fixCloudSharedGIFsInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  PLMigrationGetLog();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v29 = v11;
    *(_WORD *)&v29[4] = 2048;
    *(_QWORD *)&v29[6] = v27;
    _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_DEFAULT, "_fixCloudSharedGIFsInStore: finished %d with %lu assets", buf, 0x12u);
  }

  objc_autoreleasePoolPop(context);
  return v11;
}

- (BOOL)_fixOriginalPropertiesForCloudSharedAssetsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  int v17;
  id v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  _QWORD v27[7];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t buf[4];
  _BYTE v42[24];
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  uint64_t v46;
  _QWORD v47[5];

  v47[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixOriginalPropertiesForCloudSharedAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", &unk_1E37637A0);
  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v47[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == 0 OR %K == 0 OR %K == nil"), CFSTR("additionalAttributes.originalWidth"), CFSTR("additionalAttributes.originalHeight"), CFSTR("additionalAttributes.originalFilename"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v47[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v47, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setPredicate:", v15);
  v39 = 0;
  v40 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v32 = 0;
  v33 = &v32;
  v34 = 0x2020000000;
  v35 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 3221225472;
  v27[2] = __69__PLModelMigrator__fixOriginalPropertiesForCloudSharedAssetsInStore___block_invoke;
  v27[3] = &unk_1E36652B0;
  v27[4] = &v36;
  v27[5] = &v32;
  v27[6] = &v28;
  v16 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, &v40, v27);
  if (objc_msgSend(v7, "hasChanges"))
  {
    v26 = 0;
    v17 = objc_msgSend(v7, "save:", &v26);
    v18 = v26;
    if ((v17 & 1) == 0)
    {
      PLMigrationGetLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v18, "userInfo");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v42 = v18;
        *(_WORD *)&v42[8] = 2112;
        *(_QWORD *)&v42[10] = v20;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "_fixOriginalPropertiesForCloudSharedAssetsInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v17 = 1;
  }
  PLMigrationGetLog();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    v22 = v37[3];
    v23 = v33[3];
    v24 = v29[3];
    *(_DWORD *)buf = 67110144;
    *(_DWORD *)v42 = v17;
    *(_WORD *)&v42[4] = 2048;
    *(_QWORD *)&v42[6] = v40;
    *(_WORD *)&v42[14] = 2048;
    *(_QWORD *)&v42[16] = v22;
    v43 = 2048;
    v44 = v23;
    v45 = 2048;
    v46 = v24;
    _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "_fixOriginalPropertiesForCloudSharedAssetsInStore: finished %d with %lu assets, fixed %lu original filename, %lu original width, %lu original height", buf, 0x30u);
  }

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&v32, 8);
  _Block_object_dispose(&v36, 8);

  objc_autoreleasePoolPop(v6);
  return v17;
}

- (BOOL)_purgeCloudSharedResourcesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  NSObject *v19;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _purgeCloudSharedResourcesInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %d"), CFSTR("cloudPlaceholderKind"), 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setPredicate:", v15);
  objc_msgSend(v10, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __53__PLModelMigrator__purgeCloudSharedResourcesInStore___block_invoke;
  v21[3] = &unk_1E36740E0;
  v22 = v6;
  v17 = v6;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v16, v21);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v18;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "_purgeCloudSharedResourcesInStore failed: %@", buf, 0xCu);
    }

  }
  objc_autoreleasePoolPop(v5);

  return v18 == 0;
}

- (BOOL)_moveCloudSharedDerivativesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  NSObject *v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  _QWORD v24[4];
  id v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  uint64_t v39;
  _QWORD v40[4];

  v40[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _moveCloudSharedDerivativesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v40[0] = v11;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %d"), CFSTR("cloudPlaceholderKind"), 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v40[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v40, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v14);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = 0;
  v33 = &v32;
  v34 = 0x2020000000;
  v35 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __54__PLModelMigrator__moveCloudSharedDerivativesInStore___block_invoke;
  v24[3] = &unk_1E3665890;
  v17 = v16;
  v25 = v17;
  v26 = &v32;
  v27 = &v28;
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v15, v24);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v37 = v18;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "_moveCloudSharedDerivativesInStore failed: %@", buf, 0xCu);
    }

  }
  PLMigrationGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    v21 = (void *)v33[3];
    v22 = v29[3];
    *(_DWORD *)buf = 134218240;
    v37 = v21;
    v38 = 2048;
    v39 = v22;
    _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "_moveCloudSharedDerivativesInStore: moved %lu failed %lu cloud shared asset derivatives", buf, 0x16u);
  }

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&v32, 8);

  objc_autoreleasePoolPop(v5);
  return v18 == 0;
}

- (BOOL)_saveChangesToPhotoIrisInStore:(id)a3 matchingPredicate:(id)a4 countChanged:(unint64_t *)a5 error:(id *)a6 changeBlock:(id)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  BOOL v23;
  void *v24;
  id v25;
  void *v26;
  unint64_t *v27;
  id *v28;
  id v29;
  uint64_t v30;
  char v31;
  void *v33;
  id v34;
  id v35;
  void *v36;
  _QWORD v37[4];
  id v38;
  id v39;
  id v40;
  _QWORD v41[3];

  v41[2] = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a7;
  if (!v14)
  {
    v23 = 1;
    goto LABEL_15;
  }
  v15 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v12, "-[PLModelMigrator _saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:]", *MEMORY[0x1E0C97C38]);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "fetchRequestWithEntityName:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kindSubtype = %d"), 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = v13;
  v33 = v19;
  if (v13)
  {
    v20 = (void *)MEMORY[0x1E0CB3528];
    v41[0] = v19;
    v41[1] = v13;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 2);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "andPredicateWithSubpredicates:", v21);
    v22 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v22 = v19;
  }
  objc_msgSend(v18, "setPredicate:", v22);
  objc_msgSend(v18, "setRelationshipKeyPathsForPrefetching:", &unk_1E37637B8);
  objc_msgSend(v18, "setFetchBatchSize:", 100);
  v40 = 0;
  objc_msgSend(v36, "executeFetchRequest:error:", v18, &v40);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v40;
  v34 = v14;
  if (!v24)
  {
    v23 = 0;
    if (!a5)
      goto LABEL_9;
    goto LABEL_8;
  }
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __99__PLModelMigrator__saveChangesToPhotoIrisInStore_matchingPredicate_countChanged_error_changeBlock___block_invoke;
  v37[3] = &unk_1E36652D8;
  v39 = v14;
  v38 = v36;
  objc_msgSend(v38, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v24, 1, v37);
  v26 = v15;
  v27 = a5;
  v28 = a6;
  v29 = v12;
  v30 = objc_claimAutoreleasedReturnValue();

  v23 = v30 == 0;
  v25 = (id)v30;
  v12 = v29;
  a6 = v28;
  a5 = v27;
  v15 = v26;
  if (a5)
LABEL_8:
    *a5 = objc_msgSend(v24, "count");
LABEL_9:

  objc_autoreleasePoolPop(v15);
  if (a6)
    v31 = v23;
  else
    v31 = 1;
  v14 = v34;
  if ((v31 & 1) == 0)
    *a6 = objc_retainAutorelease(v25);

  v13 = v35;
LABEL_15:

  return v23;
}

- (BOOL)_markOldPhotoIrisEditsEvaluatedInStore:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  _BOOL4 v7;
  id v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  id v13;
  uint64_t v14;
  uint8_t buf[4];
  _BYTE v16[18];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v14 = 0;
  v4 = (void *)MEMORY[0x1E0CB3880];
  v5 = a3;
  objc_msgSend(v4, "predicateWithFormat:", CFSTR("videoCpVisibilityState = %d AND additionalAttributes.unmanagedAdjustment != nil"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  v7 = -[PLModelMigrator _saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:](self, "_saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:", v5, v6, &v14, &v13, &__block_literal_global_1367);

  v8 = v13;
  if (!v7)
  {
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v8, "userInfo");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v16 = v8;
      *(_WORD *)&v16[8] = 2112;
      *(_QWORD *)&v16[10] = v10;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "_markOldPhotoIrisEditsEvaluatedInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v16 = v7;
    *(_WORD *)&v16[4] = 2048;
    *(_QWORD *)&v16[6] = v14;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "_markOldPhotoIrisEditsEvaluatedInStore: finished %d with %lu assets", buf, 0x12u);
  }

  return v7;
}

- (BOOL)_persistPhotoIrisVisibilityStateToDiskInStore:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  _BOOL4 v7;
  id v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  id v13;
  uint64_t v14;
  uint8_t buf[4];
  _BYTE v16[18];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v14 = 0;
  v4 = (void *)MEMORY[0x1E0CB3880];
  v5 = a3;
  objc_msgSend(v4, "predicateWithFormat:", CFSTR("videoCpVisibilityState != %d"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  v7 = -[PLModelMigrator _saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:](self, "_saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:", v5, v6, &v14, &v13, &__block_literal_global_1370);

  v8 = v13;
  if (!v7)
  {
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v8, "userInfo");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v16 = v8;
      *(_WORD *)&v16[8] = 2112;
      *(_QWORD *)&v16[10] = v10;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "_persistPhotoIrisVisibilityStateToDiskInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v16 = v7;
    *(_WORD *)&v16[4] = 2048;
    *(_QWORD *)&v16[6] = v14;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "_persistPhotoIrisVisibilityStateToDiskInStore: finished %d with %lu assets", buf, 0x12u);
  }

  return v7;
}

- (BOOL)_fixWhitelistOwnerForPendingInvitationsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  id v18;
  uint8_t buf[4];
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixWhitelistOwnerForPendingInvitationsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_alloc(MEMORY[0x1E0C97AB0]);
  +[PLCloudSharedAlbum entityName](PLCloudSharedAlbum, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithEntityName:", v9);

  objc_msgSend(v10, "setResultType:", 2);
  objc_msgSend(v10, "setPropertiesToUpdate:", &unk_1E3764558);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudRelationshipState == %d AND cloudOwnerIsWhitelisted == YES"), 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);
  v18 = 0;
  objc_msgSend(v7, "executeRequest:error:", v10, &v18);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v18;
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v12)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v12, "result");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v20 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Reset cloudOwnerIsWhitelisted to NO for %@ pending shared album invitations.", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v20 = v13;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Failed to reset cloudOwnerIsWhitelisted for pending shared album invitations: %@", buf, 0xCu);
  }

  objc_msgSend(v7, "reset");
  objc_autoreleasePoolPop(v6);

  return v12 != 0;
}

- (BOOL)_repushMemoriesWithNewFeaturesInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  BOOL v14;
  NSObject *v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  void *v20;
  void *context;
  _QWORD v23[5];
  id v24;
  uint8_t v25[4];
  const char *v26;
  __int16 v27;
  void *v28;
  _BYTE buf[24];
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _repushMemoriesWithNewFeaturesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLMemory entityName](PLMemory, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState != %d AND (blacklistedFeature != nil OR extendedCuratedAssets.@count > 0)"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  v24 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v24);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v24;
  if (v11)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    v30 = 0;
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = __57__PLModelMigrator__repushMemoriesWithNewFeaturesInStore___block_invoke;
    v23[3] = &unk_1E3665360;
    v23[4] = buf;
    objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v23);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13 == 0;
    if (v13)
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v25 = 136315394;
        v26 = "-[PLModelMigrator _repushMemoriesWithNewFeaturesInStore:]";
        v27 = 2112;
        v28 = v13;
        v16 = "%s save failed with error: %@";
        v17 = v15;
        v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
        _os_log_impl(&dword_199541000, v17, v18, v16, v25, 0x16u);
      }
    }
    else
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v20 = *(void **)(*(_QWORD *)&buf[8] + 24);
        *(_DWORD *)v25 = 136315394;
        v26 = "-[PLModelMigrator _repushMemoriesWithNewFeaturesInStore:]";
        v27 = 2048;
        v28 = v20;
        v16 = "%s for %lu memories.";
        v17 = v15;
        v18 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_10;
      }
    }

    _Block_object_dispose(buf, 8);
    goto LABEL_12;
  }
  PLMigrationGetLog();
  v19 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315394;
    *(_QWORD *)&buf[4] = "-[PLModelMigrator _repushMemoriesWithNewFeaturesInStore:]";
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v12;
    _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "%s fetch failed with error: %@", buf, 0x16u);
  }

  v14 = 0;
LABEL_12:

  objc_autoreleasePoolPop(context);
  return v14;
}

- (BOOL)_fixZeroDurationPhotoIrisWithLocalResourcesInStore:(id)a3 assumeAdjustedIrisIsVisible:(BOOL)a4
{
  void *v6;
  id v7;
  void *v8;
  _BOOL4 v9;
  id v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  _QWORD v15[4];
  BOOL v16;
  id v17;
  uint64_t v18;
  uint8_t buf[4];
  _BYTE v20[18];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v18 = 0;
  v6 = (void *)MEMORY[0x1E0CB3880];
  v7 = a3;
  objc_msgSend(v6, "predicateWithFormat:", CFSTR("videoCpDurationValue == 0"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = 0;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __98__PLModelMigrator__fixZeroDurationPhotoIrisWithLocalResourcesInStore_assumeAdjustedIrisIsVisible___block_invoke;
  v15[3] = &__block_descriptor_33_e51_v24__0__PLManagedAsset_8__NSManagedObjectContext_16l;
  v16 = a4;
  v9 = -[PLModelMigrator _saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:](self, "_saveChangesToPhotoIrisInStore:matchingPredicate:countChanged:error:changeBlock:", v7, v8, &v18, &v17, v15);

  v10 = v17;
  if (!v9)
  {
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v10, "userInfo");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v20 = v10;
      *(_WORD *)&v20[8] = 2112;
      *(_QWORD *)&v20[10] = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "_fixZeroDurationPhotoIrisInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v20 = v9;
    *(_WORD *)&v20[4] = 2048;
    *(_QWORD *)&v20[6] = v18;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "_fixZeroDurationPhotoIrisInStore: finished %d with %lu assets", buf, 0x12u);
  }

  return v9;
}

- (BOOL)_markPhotoIrisVideoOrphansInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t buf[4];
  _BYTE v24[18];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _markPhotoIrisVideoOrphansInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind = %d and kindSubtype = %d AND complete != 0 AND duration != nil AND duration > 0 AND duration < %f"), 1, 0, 0x4010000000000000);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 0;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __53__PLModelMigrator__markPhotoIrisVideoOrphansInStore___block_invoke;
  v18[3] = &unk_1E3665110;
  v18[4] = &v19;
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v11, 1, v18);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v12, "userInfo");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v24 = v12;
      *(_WORD *)&v24[8] = 2112;
      *(_QWORD *)&v24[10] = v14;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "_markPhotoIrisVideoOrphansInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v16 = v20[3];
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v24 = v12 == 0;
    *(_WORD *)&v24[4] = 2048;
    *(_QWORD *)&v24[6] = v16;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "_markPhotoIrisVideoOrphansInStore: finished %d with %lu assets", buf, 0x12u);
  }

  _Block_object_dispose(&v19, 8);
  objc_autoreleasePoolPop(v5);

  return v12 == 0;
}

- (BOOL)_fixItemIdentifierForVideoCmplInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  _QWORD v19[4];
  id v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t buf[4];
  _BYTE v27[18];
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixItemIdentifierForVideoCmplInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudResource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(type = %d OR type = %d) AND itemIdentifier != cloudMaster.cloudMasterGUID"), 6, 7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  v28[0] = CFSTR("cloudMaster");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setRelationshipKeyPathsForPrefetching:", v9);

  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __57__PLModelMigrator__fixItemIdentifierForVideoCmplInStore___block_invoke;
  v19[3] = &unk_1E3665188;
  v12 = v11;
  v20 = v12;
  v21 = &v22;
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v10, 1, v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v27 = v13;
      *(_WORD *)&v27[8] = 2112;
      *(_QWORD *)&v27[10] = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_fixItemIdentifierForVideoCmplInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v17 = v23[3];
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v27 = v13 == 0;
    *(_WORD *)&v27[4] = 2048;
    *(_QWORD *)&v27[6] = v17;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "_fixItemIdentifierForVideoCmplInStore: finished %d with %lu assets", buf, 0x12u);
  }

  _Block_object_dispose(&v22, 8);
  objc_autoreleasePoolPop(v5);

  return v13 == 0;
}

- (BOOL)_fixLocalPathForVideoCmplDerivativesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *context;
  _QWORD v22[4];
  id v23;
  id v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t buf[4];
  _BYTE v36[24];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixLocalPathForVideoCmplDerivativesInStore:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudResource"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "predicateWithFormat:", CFSTR("(type = %d OR type = %d) AND cloudMaster != nil AND filePath LIKE %@ AND uniformTypeIdentifier == %@"), 6, 7, CFSTR("*.MP4"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setPredicate:", v9);
  objc_msgSend(v6, "setFetchBatchSize:", 100);
  objc_msgSend(v5, "executeFetchRequest:error:", v6, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = 0;
  v32 = &v31;
  v33 = 0x2020000000;
  v34 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x2020000000;
  v30 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __63__PLModelMigrator__fixLocalPathForVideoCmplDerivativesInStore___block_invoke;
  v22[3] = &unk_1E36653A8;
  v12 = v11;
  v23 = v12;
  v13 = v5;
  v24 = v13;
  v25 = &v27;
  v26 = &v31;
  objc_msgSend(v13, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v10, 1, v22);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v14, "userInfo");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v36 = v14;
      *(_WORD *)&v36[8] = 2112;
      *(_QWORD *)&v36[10] = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_fixLocalPathForVideoCmplDerivativesInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    v18 = v32[3];
    v19 = v28[3];
    *(_DWORD *)buf = 67109632;
    *(_DWORD *)v36 = v14 == 0;
    *(_WORD *)&v36[4] = 2048;
    *(_QWORD *)&v36[6] = v18;
    *(_WORD *)&v36[14] = 2048;
    *(_QWORD *)&v36[16] = v19;
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "_fixLocalPathForVideoCmplDerivativesInStore: finished %d with %lu resources, moved %lu files", buf, 0x1Cu);
  }

  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v31, 8);

  objc_autoreleasePoolPop(context);
  return v14 == 0;
}

- (BOOL)_fixEmptyVideoResourcePathsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t buf[4];
  _BYTE v31[24];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixEmptyVideoResourcePathsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudResource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(type = %d OR type = %d OR type = %d) AND cloudMaster != nil AND filePath = nil"), 18, 6, 7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __54__PLModelMigrator__fixEmptyVideoResourcePathsInStore___block_invoke;
  v18[3] = &unk_1E36653D0;
  v10 = v6;
  v19 = v10;
  v20 = &v26;
  v21 = &v22;
  objc_msgSend(v10, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v9, 1, v18);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v11, "userInfo");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v31 = v11;
      *(_WORD *)&v31[8] = 2112;
      *(_QWORD *)&v31[10] = v13;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "_fixEmptyVideoResourcePathsInStore: failed: %@ %@", buf, 0x16u);

    }
  }
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = v27[3];
    v16 = v23[3];
    *(_DWORD *)buf = 67109632;
    *(_DWORD *)v31 = v11 == 0;
    *(_WORD *)&v31[4] = 2048;
    *(_QWORD *)&v31[6] = v15;
    *(_WORD *)&v31[14] = 2048;
    *(_QWORD *)&v31[16] = v16;
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "_fixEmptyVideoResourcePathsInStore: finished %d fixed %lu resources, skipped %lu resources", buf, 0x1Cu);
  }

  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&v26, 8);

  objc_autoreleasePoolPop(v5);
  return v11 == 0;
}

- (BOOL)_populateAdjustmentsStateForAssetsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  int v13;
  id v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  id v19;
  uint64_t v20;
  uint8_t buf[4];
  _BYTE v22[18];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateAdjustmentsStateForAssetsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("additionalAttributes.editorBundleID != NULL"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v20 = 0;
  v12 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, &v20, &__block_literal_global_1398);
  if (objc_msgSend(v7, "hasChanges"))
  {
    v19 = 0;
    v13 = objc_msgSend(v7, "save:", &v19);
    v14 = v19;
    if ((v13 & 1) == 0)
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v14, "userInfo");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v22 = v14;
        *(_WORD *)&v22[8] = 2112;
        *(_QWORD *)&v22[10] = v16;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_populateHasAdjustmentsForAssetsInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v13 = 1;
  }
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v22 = v13;
    *(_WORD *)&v22[4] = 2048;
    *(_QWORD *)&v22[6] = v20;
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "_populateHasAdjustmentsForAssetsInStore: finished %d with %lu assets", buf, 0x12u);
  }

  objc_autoreleasePoolPop(v6);
  return v13;
}

- (BOOL)_fixVideoDimensionsForAsset:(id)a3
{
  id v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  int v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;

  v3 = a3;
  if (!objc_msgSend(v3, "height") || !objc_msgSend(v3, "width"))
  {
    objc_msgSend(v3, "fileURLForFullsizeRenderVideo");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6
      && (objc_msgSend(v6, "path"),
          v7 = (void *)objc_claimAutoreleasedReturnValue(),
          v8 = objc_msgSend(v5, "fileExistsAtPath:", v7),
          v7,
          (v8 & 1) != 0))
    {
      v9 = v6;
    }
    else
    {
      objc_msgSend(v3, "mainFileURL");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v9)
      {
        v4 = 0;
        goto LABEL_14;
      }
      objc_msgSend(v9, "path");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v5, "fileExistsAtPath:", v10);

      if (!v11)
      {
        v4 = 0;
        goto LABEL_13;
      }
      v6 = v9;
    }
    +[PLManagedAsset dimensionsForVideoAtURL:](PLManagedAsset, "dimensionsForVideoAtURL:", v6);
    v13 = v12;
    objc_msgSend(v3, "setHeight:", (uint64_t)v14);
    objc_msgSend(v3, "setWidth:", (uint64_t)v13);
    v4 = 1;
LABEL_13:

    goto LABEL_14;
  }
  v4 = 0;
  v5 = 0;
LABEL_14:
  if (!objc_msgSend(v3, "originalHeight") || !objc_msgSend(v3, "originalWidth"))
  {
    if (!v5)
      v5 = (void *)objc_opt_new();
    objc_msgSend(v3, "mainFileURL");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v5, "fileExistsAtPath:", v16);

    if (v17)
    {
      objc_msgSend(v3, "mainFileURL");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLManagedAsset dimensionsForVideoAtURL:](PLManagedAsset, "dimensionsForVideoAtURL:", v18);
      v20 = v19;
      v22 = v21;

      objc_msgSend(v3, "setOriginalHeight:", (uint64_t)v22);
      objc_msgSend(v3, "setOriginalWidth:", (uint64_t)v20);
      v4 = 1;
    }
  }

  return v4;
}

- (BOOL)_fixVideoDimensionsInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  int v14;
  id v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  int v19;
  id v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint8_t buf[4];
  _BYTE v28[10];
  void *v29;
  _QWORD v30[2];

  v30[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixVideoDimensionsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind == %d AND complete != 0"), 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v30[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", v12);

  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __46__PLModelMigrator__fixVideoDimensionsInStore___block_invoke;
  v22[3] = &unk_1E366FD70;
  v22[4] = self;
  v22[5] = &v23;
  v13 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, 0, v22);
  if (objc_msgSend(v7, "hasChanges"))
  {
    v21 = 0;
    v14 = objc_msgSend(v7, "save:", &v21);
    v15 = v21;
    if ((v14 & 1) == 0)
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v15, "userInfo");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v28 = v15;
        *(_WORD *)&v28[8] = 2112;
        v29 = v17;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "_fixVideoDimensionsInStore: failed: %@ %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v14 = 1;
  }
  PLMigrationGetLog();
  v18 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    v19 = *((_DWORD *)v24 + 6);
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v28 = v14;
    *(_WORD *)&v28[4] = 1024;
    *(_DWORD *)&v28[6] = v19;
    _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "_fixVideoDimensionsInStore: finished %d with %d assets", buf, 0xEu);
  }

  objc_msgSend(v7, "reset");
  _Block_object_dispose(&v23, 8);

  objc_autoreleasePoolPop(v6);
  return v14;
}

- (BOOL)_persistPlaceAnnotationData:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _persistPlaceAnnotationData:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("additionalAttributes.placeAnnotationData != nil"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v15[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v15, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", v12);

  v13 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, 0, &__block_literal_global_1403);
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v6);
  return 1;
}

- (BOOL)_persistVideoComplPropertiesInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  void *context;
  _QWORD v25[4];
  id v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t buf[4];
  int v33;
  __int16 v34;
  uint64_t v35;
  const __CFString *v36;
  _QWORD v37[6];

  v37[4] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _persistVideoComplPropertiesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudPhotoLibraryAsset"), 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v37[0] = v11;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kindSubtype"), 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v37[1] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 0"), CFSTR("videoCpDurationValue"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v37[2] = v13;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 0"), CFSTR("complete"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v37[3] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v37, 4);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v16);

  v36 = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v36, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v17);

  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __55__PLModelMigrator__persistVideoComplPropertiesInStore___block_invoke;
  v25[3] = &unk_1E366FD70;
  v19 = v18;
  v26 = v19;
  v27 = &v28;
  v20 = (id)objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, 0, v25);
  objc_msgSend(v6, "reset");
  PLMigrationGetLog();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    v22 = v29[3];
    *(_DWORD *)buf = 67109376;
    v33 = 1;
    v34 = 2048;
    v35 = v22;
    _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "_persistVideoComplPropertiesInStore: finished %d with %ld assets", buf, 0x12u);
  }

  _Block_object_dispose(&v28, 8);
  objc_autoreleasePoolPop(context);

  return 1;
}

- (BOOL)_fixupAssetPersistence:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  const __CFString *v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupAssetPersistence:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForFixupAssetPersistenceExclusions"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != 0"), CFSTR("complete"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v20[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v15);

  v19 = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v19, 1);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", v16);

  v17 = (id)objc_msgSend(v7, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, 0, &__block_literal_global_1405);
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v6);
  return 1;
}

- (BOOL)_moveMyPhotoStreamToAlbumsListInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  char v16;
  id v17;
  char v18;
  NSObject *v19;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint8_t buf[4];
  id v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 9220, CFSTR("%@ can only be called from assetsd"), v22);

  }
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _moveMyPhotoStreamToAlbumsListInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLGenericAlbum albumWithKind:inManagedObjectContext:](PLManagedAlbum, "albumWithKind:inManagedObjectContext:", 1500, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    +[PLManagedAlbumList allStreamedAlbumsListInManagedObjectContext:](PLManagedAlbumList, "allStreamedAlbumsListInManagedObjectContext:", v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAlbumList albumListInManagedObjectContext:](PLManagedAlbumList, "albumListInManagedObjectContext:", v7);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "albums");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "indexOfObject:", v8);
    if (v12 != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v11, "removeObjectAtIndex:", v12);
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Removed My Photo Stream album from streams list", buf, 2u);
      }

    }
    objc_msgSend(v10, "albums");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v14, "indexOfObject:", v8) == 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v10, "insertIntoOrderedAlbumsAtIndexByPriorityForAlbum:", v8);
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Added My Photo Stream album to albums list", buf, 2u);
      }

    }
    if (objc_msgSend(v7, "hasChanges"))
    {
      v24 = v6;
      v25 = 0;
      v16 = objc_msgSend(v7, "save:", &v25);
      v17 = v25;
      v18 = v16 ^ 1;
      if ((v16 & 1) == 0)
      {
        PLMigrationGetLog();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v17, "userInfo");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v27 = v17;
          v28 = 2112;
          v29 = v23;
          _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Failed to move My Photo Stream to albums list %@ %@", buf, 0x16u);

        }
      }

      v6 = v24;
    }
    else
    {
      v18 = 0;
    }

  }
  else
  {
    v18 = 0;
  }

  objc_autoreleasePoolPop(v6);
  return v18 ^ 1;
}

- (BOOL)_performMigrationCacheDateCreatedOnResources:(BOOL)a3 cacheItemIdentifierOnResources:(BOOL)a4 store:(id)a5
{
  _BOOL4 v5;
  id v9;
  void *v10;
  BOOL v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v23;
  _QWORD v24[4];
  BOOL v25;
  BOOL v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  _QWORD v31[3];

  v5 = a4;
  v31[2] = *MEMORY[0x1E0C80C00];
  v9 = a5;
  v10 = v9;
  if (a3 || v5)
  {
    if (!v9)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 9268, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("store != nil"));

    }
    v12 = (void *)MEMORY[0x19AEC1554]();
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v10, "-[PLModelMigrator _performMigrationCacheDateCreatedOnResources:cacheItemIdentifierOnResources:store:]", *MEMORY[0x1E0C97C38]);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "fetchRequestWithEntityName:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v31[0] = CFSTR("master");
    v31[1] = CFSTR("resources");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 2);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setRelationshipKeyPathsForPrefetching:", v17);

    objc_msgSend(v16, "setFetchBatchSize:", 100);
    objc_msgSend(v13, "executeFetchRequest:error:", v16, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = MEMORY[0x1E0C809B0];
    v24[1] = 3221225472;
    v24[2] = __101__PLModelMigrator__performMigrationCacheDateCreatedOnResources_cacheItemIdentifierOnResources_store___block_invoke;
    v24[3] = &__block_descriptor_34_e31_v32__0__PLManagedAsset_8Q16_B24l;
    v25 = a3;
    v26 = v5;
    objc_msgSend(v13, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v18, v24);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v19 == 0;
    if (v19)
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v19, "userInfo");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v28 = v19;
        v29 = 2112;
        v30 = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "_performMigrationWithMarkThumbnailsAsAltAvailable:cacheDateCreatedOnResources:cacheItemIdentifierOnResources:store: failed: %@ %@", buf, 0x16u);

      }
    }

    objc_autoreleasePoolPop(v12);
  }
  else
  {
    v11 = 1;
  }

  return v11;
}

- (BOOL)_migrateOriginalColorSpaceInStagedStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  char *v16;
  void *v17;
  id v19;
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  id v23;
  __int16 v24;
  void *v25;
  const __CFString *v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _migrateOriginalColorSpaceInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "batchUpdateRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v26 = CFSTR("originalColorSpace");
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("additionalAttributes.originalColorSpace"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToUpdate:", v11);

  objc_msgSend(v9, "setResultType:", 2);
  v19 = 0;
  objc_msgSend(v6, "executeRequest:error:", v9, &v19);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v19;
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v12)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v12, "result");
      v16 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v21 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Updated %@ assets", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v13, "userInfo");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v21 = "-[PLModelMigrator _migrateOriginalColorSpaceInStagedStore:]";
    v22 = 2112;
    v23 = v13;
    v24 = 2112;
    v25 = v17;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v5);

  return v12 != 0;
}

- (BOOL)_migrateRejectedFacesGroupInStagedStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *context;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  id v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t buf[4];
  const char *v39;
  __int16 v40;
  _BYTE v41[10];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _migrateRejectedFacesGroupInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "setRelationshipKeyPathsForPrefetching:", &unk_1E37637D0);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("rejectedFacesGroup != nil"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);

  v34 = 0;
  v35 = &v34;
  v36 = 0x2020000000;
  v37 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v11, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = MEMORY[0x1E0C809B0];
  v24 = 3221225472;
  v25 = __59__PLModelMigrator__migrateRejectedFacesGroupInStagedStore___block_invoke;
  v26 = &unk_1E3665458;
  v28 = &v34;
  v14 = v8;
  v27 = v14;
  v29 = &v30;
  objc_msgSend(v14, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v13, 1, &v23);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (v15)
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v15, "userInfo", context, v23, v24, v25, v26);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v39 = "-[PLModelMigrator _migrateRejectedFacesGroupInStagedStore:]";
      v40 = 2112;
      *(_QWORD *)v41 = v15;
      *(_WORD *)&v41[8] = 2112;
      v42 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%s: failed to migrate rejected faces group: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(a2);
      v18 = (char *)objc_claimAutoreleasedReturnValue();
      v19 = v35[3];
      v20 = v31[3];
      *(_DWORD *)buf = 138412802;
      v39 = v18;
      v40 = 1024;
      *(_DWORD *)v41 = v19;
      *(_WORD *)&v41[4] = 1024;
      *(_DWORD *)&v41[6] = v20;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "%@ migrated %d persons with rejectedFacesGroup, deleted %d rejectedFacesGroup", buf, 0x18u);

    }
  }

  objc_msgSend(v14, "reset");
  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);

  objc_autoreleasePoolPop(v7);
  objc_autoreleasePoolPop(context);

  return v15 == 0;
}

- (BOOL)_migrateDetectedFacesGroupInStagedStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *context;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  id v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t buf[4];
  const char *v39;
  __int16 v40;
  _BYTE v41[10];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _migrateDetectedFacesGroupInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("faceGroups.@count > 0"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);

  v34 = 0;
  v35 = &v34;
  v36 = 0x2020000000;
  v37 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v11, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = MEMORY[0x1E0C809B0];
  v24 = 3221225472;
  v25 = __59__PLModelMigrator__migrateDetectedFacesGroupInStagedStore___block_invoke;
  v26 = &unk_1E3665458;
  v28 = &v34;
  v14 = v8;
  v27 = v14;
  v29 = &v30;
  objc_msgSend(v14, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v13, 1, &v23);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (v15)
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v15, "userInfo", context, v23, v24, v25, v26);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v39 = "-[PLModelMigrator _migrateDetectedFacesGroupInStagedStore:]";
      v40 = 2112;
      *(_QWORD *)v41 = v15;
      *(_WORD *)&v41[8] = 2112;
      v42 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%s: failed to migrate detected faces group: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(a2);
      v18 = (char *)objc_claimAutoreleasedReturnValue();
      v19 = v35[3];
      v20 = v31[3];
      *(_DWORD *)buf = 138412802;
      v39 = v18;
      v40 = 1024;
      *(_DWORD *)v41 = v19;
      *(_WORD *)&v41[4] = 1024;
      *(_DWORD *)&v41[6] = v20;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "%@ migrated %d persons with detectedFacesGroups, deleted %d rejectedFacesGroup", buf, 0x18u);

    }
  }

  objc_msgSend(v14, "reset");
  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);

  objc_autoreleasePoolPop(v7);
  objc_autoreleasePoolPop(context);

  return v15 == 0;
}

- (BOOL)_removeInvalidImportSessionAlbums:(id)a3
{
  _QWORD v4[6];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __53__PLModelMigrator__removeInvalidImportSessionAlbums___block_invoke;
  v4[3] = &unk_1E36654D0;
  v4[4] = self;
  v4[5] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _removeInvalidImportSessionAlbums:]", a3, v4);
}

- (BOOL)_createImportSessionAlbums:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  NSObject *v19;
  id v20;
  void *v21;
  void *v22;
  _QWORD v24[4];
  id v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD v28[5];
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t buf[4];
  id v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  void *v39;
  void *v40;
  _QWORD v41[4];

  v41[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _createImportSessionAlbums:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("additionalAttributes.importSessionID != NULL"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);

  v41[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setRelationshipKeyPathsForPrefetching:", v13);

  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("additionalAttributes.importSessionID"), 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v40, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setSortDescriptors:", v15);

  objc_msgSend(v11, "setFetchBatchSize:", 100);
  objc_msgSend(v8, "executeFetchRequest:error:", v11, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3032000000;
  v28[3] = __Block_byref_object_copy__19565;
  v28[4] = __Block_byref_object_dispose__19566;
  v29 = 0;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __46__PLModelMigrator__createImportSessionAlbums___block_invoke;
  v24[3] = &unk_1E3665890;
  v26 = v28;
  v17 = v8;
  v25 = v17;
  v27 = &v30;
  objc_msgSend(v17, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v16, v24);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "userInfo");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v35 = v20;
      v36 = 2112;
      v37 = v18;
      v38 = 2112;
      v39 = v21;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      v22 = (void *)v31[3];
      *(_DWORD *)buf = 134217984;
      v35 = v22;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "Added %lu assets to importSessionAlbums", buf, 0xCu);
    }
  }

  objc_msgSend(v17, "reset");
  _Block_object_dispose(v28, 8);

  _Block_object_dispose(&v30, 8);
  objc_autoreleasePoolPop(v7);

  return v18 == 0;
}

- (BOOL)_persistImportSessionAlbumType:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  _QWORD v12[6];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t buf[4];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _persistImportSessionAlbumType:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("ImportSession"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 0;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __50__PLModelMigrator__persistImportSessionAlbumType___block_invoke;
  v12[3] = &unk_1E36654A8;
  v12[4] = self;
  v12[5] = &v13;
  v8 = (id)objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v7, 0, v12);
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = v14[3];
    *(_DWORD *)buf = 134217984;
    v18 = v10;
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Persisted %lu import session albums.", buf, 0xCu);
  }

  _Block_object_dispose(&v13, 8);
  objc_autoreleasePoolPop(v5);

  return 1;
}

- (BOOL)_setImportedByInPLCloudMaster:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  BOOL v7;
  NSObject *v8;
  uint64_t v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t buf[4];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("CloudMaster"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setFetchBatchSize:", 100);
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v19 = 0;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _setImportedByInPLCloudMaster:]");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __49__PLModelMigrator__setImportedByInPLCloudMaster___block_invoke;
  v15[3] = &unk_1E36654F8;
  v15[4] = &v16;
  v7 = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v6, v5, v4, v15);

  if (v7)
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = v17[3];
      *(_DWORD *)buf = 134217984;
      v21 = v9;
      v10 = "setImportedBy for %lu masters";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v11, v12, v10, buf, v13);
    }
  }
  else
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      v10 = "_setImportedByInPLCloudMaster failed.";
      v11 = v8;
      v12 = OS_LOG_TYPE_ERROR;
      v13 = 2;
      goto LABEL_6;
    }
  }

  _Block_object_dispose(&v16, 8);
  return v7;
}

- (BOOL)_revalidateImportSessionDates:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  BOOL v7;
  NSObject *v8;
  uint64_t v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t buf[4];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("ImportSession"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setFetchBatchSize:", 100);
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v19 = 0;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _revalidateImportSessionDates:]");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __49__PLModelMigrator__revalidateImportSessionDates___block_invoke;
  v15[3] = &unk_1E36654F8;
  v15[4] = &v16;
  v7 = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v6, v5, v4, v15);

  if (v7)
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = v17[3];
      *(_DWORD *)buf = 134217984;
      v21 = v9;
      v10 = "Revalidate %lu import session albums.";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v11, v12, v10, buf, v13);
    }
  }
  else
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      v10 = "_revalidateImportSessionDates failed.";
      v11 = v8;
      v12 = OS_LOG_TYPE_ERROR;
      v13 = 2;
      goto LABEL_6;
    }
  }

  _Block_object_dispose(&v16, 8);
  return v7;
}

- (BOOL)_migrateCloudResourcesRelationshipsInStagedStore:(id)a3
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  void *v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _migrateCloudResourcesRelationshipsInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("AdditionalAssetAttributes"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudMaster != nil OR cloudResources.@count > 0"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v28[0] = CFSTR("asset");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v11);

  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v9, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __68__PLModelMigrator__migrateCloudResourcesRelationshipsInStagedStore___block_invoke;
  v19[3] = &unk_1E3665520;
  v19[4] = &v20;
  objc_msgSend(v8, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v12, 1, v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v15;
      v26 = 2112;
      v27 = v13;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "%@ failed to migrate cloudResources fields: %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(a2);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v21[3];
      *(_DWORD *)buf = 138412546;
      v25 = v16;
      v26 = 1024;
      LODWORD(v27) = v17;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "%@ migrated cloudResources fields on %d assets", buf, 0x12u);

    }
  }

  _Block_object_dispose(&v20, 8);
  objc_autoreleasePoolPop(v7);

  return v13 == 0;
}

- (BOOL)_populateAdjustmentTimestampsOnAssets:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v16[4];
  id v17;
  id v18;
  uint64_t *v19;
  SEL v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v21 = 0;
  v22 = &v21;
  v23 = 0x2020000000;
  v24 = 1;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _populateAdjustmentTimestampsOnAssets:]", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("additionalAttributes.unmanagedAdjustment.adjustmentTimestamp != nil"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  v25[0] = CFSTR("additionalAttributes.unmanagedAdjustment.adjustmentTimestamp");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", v12);

  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __57__PLModelMigrator__populateAdjustmentTimestampsOnAssets___block_invoke;
  v16[3] = &unk_1E3674DF8;
  v13 = v7;
  v17 = v13;
  v14 = v10;
  v18 = v14;
  v19 = &v21;
  v20 = a2;
  objc_msgSend(v13, "performBlockAndWait:", v16);

  objc_autoreleasePoolPop(v6);
  LOBYTE(v6) = *((_BYTE *)v22 + 24) != 0;
  _Block_object_dispose(&v21, 8);

  return (char)v6;
}

- (BOOL)_populateUserKeyFacePickSourceForPersonInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  BOOL v18;
  _QWORD v20[4];
  id v21;
  id v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 1;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _populateUserKeyFacePickSourceForPersonInStore:]", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("keyFace.nameSource == %d AND verifiedType == %d"), 1, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = __Block_byref_object_copy__19565;
  v34 = __Block_byref_object_dispose__19566;
  v35 = 0;
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 0;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __66__PLModelMigrator__populateUserKeyFacePickSourceForPersonInStore___block_invoke;
  v20[3] = &unk_1E3668AC8;
  v12 = v7;
  v21 = v12;
  v13 = v10;
  v22 = v13;
  v23 = &v30;
  v24 = &v36;
  v25 = &v26;
  objc_msgSend(v12, "performBlockAndWait:", v20);
  if (*((_BYTE *)v37 + 24))
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = (void *)v27[3];
      *(_DWORD *)buf = 134217984;
      v41 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Populated user keyFacePickSource on %lu assets", buf, 0xCu);
    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v31[5];
      *(_DWORD *)buf = 138412546;
      v41 = v16;
      v42 = 2112;
      v43 = v17;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "%@ failed with error: %@", buf, 0x16u);

    }
  }

  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&v30, 8);

  objc_autoreleasePoolPop(v6);
  v18 = *((_BYTE *)v37 + 24) != 0;
  _Block_object_dispose(&v36, 8);

  return v18;
}

- (BOOL)_convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  BOOL v17;
  _QWORD v19[4];
  id v20;
  id v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  uint8_t buf[4];
  void *v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v35 = 0;
  v36 = &v35;
  v37 = 0x2020000000;
  v38 = 1;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore:]", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLDeferredRebuildFace entityName](PLDeferredRebuildFace, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__19565;
  v33 = __Block_byref_object_dispose__19566;
  v34 = 0;
  v25 = 0;
  v26 = &v25;
  v27 = 0x2020000000;
  v28 = 0;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __80__PLModelMigrator__convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore___block_invoke;
  v19[3] = &unk_1E3668AC8;
  v11 = v7;
  v20 = v11;
  v12 = v10;
  v21 = v12;
  v22 = &v29;
  v23 = &v35;
  v24 = &v25;
  objc_msgSend(v11, "performBlockAndWait:", v19);
  if (*((_BYTE *)v36 + 24))
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = (void *)v26[3];
      *(_DWORD *)buf = 134217984;
      v40 = v14;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Fixed %lu deferred rebuild faces", buf, 0xCu);
    }
  }
  else
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = v30[5];
      *(_DWORD *)buf = 138412546;
      v40 = v15;
      v41 = 2112;
      v42 = v16;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%@ failed with error: %@", buf, 0x16u);

    }
  }

  _Block_object_dispose(&v25, 8);
  _Block_object_dispose(&v29, 8);

  objc_autoreleasePoolPop(v6);
  v17 = *((_BYTE *)v36 + 24) != 0;
  _Block_object_dispose(&v35, 8);

  return v17;
}

- (BOOL)_removingDuplicatedCloudAssetGuid:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v19[4];
  id v20;
  id v21;
  PLModelMigrator *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];

  v28[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v24 = 0;
  v25 = &v24;
  v26 = 0x2020000000;
  v27 = 1;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _removingDuplicatedCloudAssetGuid:]", 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPropertiesToGroupBy:", &unk_1E37637E8);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("count(SELF) > 1"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setHavingPredicate:", v10);

  objc_msgSend(v9, "setResultType:", 2);
  objc_msgSend(v9, "setPropertiesToFetch:", &unk_1E3763800);
  v11 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateForSupportedAssetTypesForUpload](PLManagedAsset, "predicateForSupportedAssetTypesForUpload");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudAssetGUID != nil && complete == 1"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v28[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v15);
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __53__PLModelMigrator__removingDuplicatedCloudAssetGuid___block_invoke;
  v19[3] = &unk_1E3676EC8;
  v16 = v6;
  v20 = v16;
  v17 = v9;
  v21 = v17;
  v22 = self;
  v23 = &v24;
  objc_msgSend(v16, "performBlockAndWait:", v19);

  objc_autoreleasePoolPop(v5);
  LOBYTE(v5) = *((_BYTE *)v25 + 24) != 0;
  _Block_object_dispose(&v24, 8);

  return (char)v5;
}

- (BOOL)_fixInitialSyncMarker
{
  void *v2;
  void *v3;
  void *v4;
  int v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  const char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint32_t v12;
  id v14;
  uint8_t buf[4];
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator pathManager](self, "pathManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CPLStatusFromPathManager(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "initialSyncDate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v14 = 0;
    v5 = objc_msgSend(v3, "writeInitialSyncMarker:", &v14);
    v6 = v14;
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v5)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        v9 = "Rewriting initial sync marker";
        v10 = v8;
        v11 = OS_LOG_TYPE_DEFAULT;
        v12 = 2;
LABEL_7:
        _os_log_impl(&dword_199541000, v10, v11, v9, buf, v12);
      }
    }
    else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v16 = v6;
      v9 = "Fail to write initial sync marker, error: %@";
      v10 = v8;
      v11 = OS_LOG_TYPE_ERROR;
      v12 = 12;
      goto LABEL_7;
    }

  }
  return 1;
}

- (BOOL)_removeAutoloopWorkerStatesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  id v18;
  uint8_t buf[4];
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _removeAutoloopWorkerStatesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("workerType = %d"), 5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v9);
  objc_msgSend(v11, "setResultType:", 2);
  v18 = 0;
  objc_msgSend(v6, "executeRequest:error:", v11, &v18);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v18;
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v12)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v12, "result");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v20 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "_removeAutoloopWorkerStatesInStore deleted %@ autoloop analysis states.", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v20 = v13;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_removeAutoloopWorkerStatesInStore failed: %@", buf, 0xCu);
  }

  objc_msgSend(v6, "reset");
  objc_autoreleasePoolPop(v5);

  return v12 != 0;
}

- (BOOL)_setPlaybackStyleForAnimatedGIFsInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v17[4];
  id v18;
  id v19;
  uint64_t *v20;
  SEL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;

  v5 = a3;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 1;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _setPlaybackStyleForAnimatedGIFsInStore:]", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC4F8], "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "predicateWithFormat:", CFSTR("kind == %d AND uniformTypeIdentifier == %@ AND playbackStyle != %d"), 0, v12, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v13);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __59__PLModelMigrator__setPlaybackStyleForAnimatedGIFsInStore___block_invoke;
  v17[3] = &unk_1E3674DF8;
  v14 = v7;
  v18 = v14;
  v15 = v10;
  v19 = v15;
  v20 = &v22;
  v21 = a2;
  objc_msgSend(v14, "performBlockAndWait:", v17);

  objc_autoreleasePoolPop(v6);
  LOBYTE(v6) = *((_BYTE *)v23 + 24);
  _Block_object_dispose(&v22, 8);

  return (char)v6;
}

- (BOOL)_fixMovieAttributesInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v15[4];
  id v16;
  id v17;
  uint64_t *v18;
  SEL v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;

  v5 = a3;
  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 1;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _fixMovieAttributesInStore:]", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d AND %K = %d"), CFSTR("kind"), 1, CFSTR("kindSubtype"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);
  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __46__PLModelMigrator__fixMovieAttributesInStore___block_invoke;
  v15[3] = &unk_1E3674DF8;
  v12 = v7;
  v16 = v12;
  v13 = v10;
  v17 = v13;
  v18 = &v20;
  v19 = a2;
  objc_msgSend(v12, "performBlockAndWait:", v15);

  objc_autoreleasePoolPop(v6);
  LOBYTE(v6) = *((_BYTE *)v21 + 24);
  _Block_object_dispose(&v20, 8);

  return (char)v6;
}

- (BOOL)_updatePlaybackWithBatchUpdateRequest:(id)a3 targetDescription:(id)a4 inContext:(id)a5
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  id v16;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  v9 = a3;
  objc_msgSend(v9, "setResultType:", 2);
  v16 = 0;
  objc_msgSend(v8, "executeRequest:error:", v9, &v16);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = v16;
  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v10)
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v10, "result");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v18 = v7;
      v19 = 2112;
      v20 = v14;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Updating %@ playback successful with result %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412546;
    v18 = v7;
    v19 = 2112;
    v20 = v11;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Batch update request failed, updating %@ playback, error: %@", buf, 0x16u);
  }

  return v10 != 0;
}

- (BOOL)_updatePlaybackStylesAndVariationsInStore:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  _BOOL4 v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  BOOL v46;
  NSObject *v47;
  NSObject *v48;
  void *v49;
  void *v51;
  void *v52;
  id v53;
  uint8_t buf[4];
  id v55;
  const __CFString *v56;
  void *v57;
  const __CFString *v58;
  void *v59;
  const __CFString *v60;
  void *v61;
  _QWORD v62[2];
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[4];

  v68[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  v6 = pl_dispatch_once();
  v7 = (void *)MEMORY[0x19AEC1554](v6);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _updatePlaybackStylesAndVariationsInStore:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "batchUpdateRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("playbackStyle"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);

  v67[0] = CFSTR("playbackVariation");
  v67[1] = CFSTR("playbackStyle");
  v68[0] = &unk_1E375E370;
  v68[1] = &unk_1E375E388;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v68, v67, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPropertiesToUpdate:", v13);

  LODWORD(v13) = -[PLModelMigrator _updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:](self, "_updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:", v11, CFSTR("autoloop"), v8);
  if (!(_DWORD)v13)
    goto LABEL_9;
  v14 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "batchUpdateRequestWithEntityName:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("playbackStyle"), 3);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setPredicate:", v17);

  v65[0] = CFSTR("playbackVariation");
  v65[1] = CFSTR("playbackStyle");
  v66[0] = &unk_1E375E3A0;
  v66[1] = &unk_1E375E3A0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v66, v65, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setPropertiesToUpdate:", v18);

  LODWORD(v18) = -[PLModelMigrator _updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:](self, "_updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:", v16, CFSTR("longexposure"), v8);
  if (!(_DWORD)v18)
    goto LABEL_9;
  v19 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "batchUpdateRequestWithEntityName:", v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("playbackStyle"), 4);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "setPredicate:", v22);

  v63[0] = CFSTR("playbackVariation");
  v63[1] = CFSTR("playbackStyle");
  v64[0] = &unk_1E375E3B8;
  v64[1] = &unk_1E375E388;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v64, v63, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "setPropertiesToUpdate:", v23);

  LODWORD(v23) = -[PLModelMigrator _updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:](self, "_updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:", v21, CFSTR("pingpong"), v8);
  if ((_DWORD)v23)
  {
    v51 = v5;
    v52 = v7;
    v24 = (void *)MEMORY[0x1E0C97AB0];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "batchUpdateRequestWithEntityName:", v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    +[PLManagedAsset videoComplementVisibilityStatePlayablePredicate](PLManagedAsset, "videoComplementVisibilityStatePlayablePredicate");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d AND %K = 0"), CFSTR("kindSubtype"), 2, CFSTR("playbackStyle"));
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = (void *)MEMORY[0x1E0CB3528];
    v62[0] = v28;
    v62[1] = v27;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v62, 2);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "andPredicateWithSubpredicates:", v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v26, "setPredicate:", v31);
    v60 = CFSTR("playbackStyle");
    v61 = &unk_1E375E3A0;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v61, &v60, 1);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "setPropertiesToUpdate:", v32);

    LODWORD(v32) = -[PLModelMigrator _updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:](self, "_updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:", v26, CFSTR("live photo"), v8);
    if (!(_DWORD)v32)
      goto LABEL_11;
    v33 = (void *)MEMORY[0x1E0C97AB0];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "batchUpdateRequestWithEntityName:", v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d and %K = 0"), CFSTR("kind"), 0, CFSTR("playbackStyle"));
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "setPredicate:", v36);

    v58 = CFSTR("playbackStyle");
    v59 = &unk_1E375E370;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v59, &v58, 1);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "setPropertiesToUpdate:", v37);

    v38 = -[PLModelMigrator _updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:](self, "_updatePlaybackWithBatchUpdateRequest:targetDescription:inContext:", v35, CFSTR("image"), v8);
    if (v38)
    {
      v39 = (void *)MEMORY[0x1E0C97AB0];
      +[PLManagedAsset entityName](PLManagedAsset, "entityName");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "batchUpdateRequestWithEntityName:", v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K == %d or %K == %d) and (%K = 0)"), CFSTR("kind"), 1, CFSTR("kind"), 2, CFSTR("playbackVariation"));
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "setPredicate:", v42);

      v56 = CFSTR("playbackStyle");
      v57 = &unk_1E375E3D0;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v57, &v56, 1);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "setPropertiesToUpdate:", v43);

      objc_msgSend(v41, "setResultType:", 2);
      v53 = 0;
      objc_msgSend(v8, "executeRequest:error:", v41, &v53);
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      v45 = v53;
      v46 = v44 != 0;
      PLMigrationGetLog();
      v47 = objc_claimAutoreleasedReturnValue();
      v48 = v47;
      v7 = v52;
      if (v44)
      {
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v44, "result");
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v55 = v49;
          _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_DEFAULT, "updating autoloop playback successful with result %@", buf, 0xCu);

          v7 = v52;
        }
      }
      else if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v55 = v45;
        _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_ERROR, "Batch update request failed, updating autoloop playback, error: %@", buf, 0xCu);
      }

      v5 = v51;
    }
    else
    {
LABEL_11:
      v46 = 0;
      v5 = v51;
      v7 = v52;
    }
  }
  else
  {
LABEL_9:
    v46 = 0;
  }
  objc_msgSend(v8, "reset");

  objc_autoreleasePoolPop(v7);
  objc_autoreleasePoolPop(v5);

  return v46;
}

- (BOOL)_runMigrationStepWithPrettyFunction:(const char *)a3 store:(id)a4 migrationHandler:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v15[4];
  id v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;

  v8 = a4;
  v9 = a5;
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 1;
  v10 = (void *)MEMORY[0x19AEC1554]();
  pl_dispatch_once();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v8, a3, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __78__PLModelMigrator__runMigrationStepWithPrettyFunction_store_migrationHandler___block_invoke;
  v15[3] = &unk_1E3676F20;
  v18 = &v19;
  v12 = v9;
  v17 = v12;
  v13 = v11;
  v16 = v13;
  objc_msgSend(v13, "performBlockAndWait:", v15);

  objc_autoreleasePoolPop(v10);
  LOBYTE(v10) = *((_BYTE *)v20 + 24);
  _Block_object_dispose(&v19, 8);

  return (char)v10;
}

- (BOOL)_runMigrationStepWithName:(id)a3 fetchRequest:(id)a4 store:(id)a5 migrationHandler:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char v23;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;
  PLModelMigrator *v29;
  id v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  v33 = 0;
  v34 = &v33;
  v35 = 0x2020000000;
  v36 = 1;
  v14 = pl_dispatch_once();
  v15 = (void *)MEMORY[0x19AEC1554](v14);
  v16 = objc_retainAutorelease(v10);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v12, objc_msgSend(v16, "UTF8String"), 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v11, "fetchBatchSize");
  if (!v18)
  {
    v18 = 100;
    objc_msgSend(v11, "setFetchBatchSize:", 100);
  }
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __81__PLModelMigrator__runMigrationStepWithName_fetchRequest_store_migrationHandler___block_invoke;
  v25[3] = &unk_1E366D5F8;
  v19 = v17;
  v26 = v19;
  v20 = v11;
  v27 = v20;
  v21 = v16;
  v28 = v21;
  v29 = self;
  v31 = &v33;
  v32 = v18;
  v22 = v13;
  v30 = v22;
  objc_msgSend(v19, "performBlockAndWait:", v25);

  objc_autoreleasePoolPop(v15);
  v23 = *((_BYTE *)v34 + 24);
  _Block_object_dispose(&v33, 8);

  return v23;
}

- (id)_dateForVariations
{
  void *v2;
  id v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0C99D48], "calendarWithIdentifier:", *MEMORY[0x1E0C996C8]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0C99D78]);
  objc_msgSend(v3, "setYear:", 2017);
  objc_msgSend(v3, "setMonth:", 6);
  objc_msgSend(v3, "setDay:", 5);
  objc_msgSend(v2, "dateFromComponents:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (BOOL)_identifyVariationsAndDepthAdjustmentsForAsset:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  int v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  const char *v29;
  int v31;
  void *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if (!objc_msgSend(v3, "hasAdjustments"))
  {
    if (objc_msgSend(v3, "isVideo"))
    {
      objc_msgSend(v3, "avAssetProxyForOriginalAllowReadFromFile:", 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (v4)
      {
        v18 = objc_msgSend(v3, "updatePlaybackVariationAndLoopingStyleFromAVAsset:", v4);
LABEL_15:
        v13 = v18;
LABEL_30:

        goto LABEL_31;
      }
      PLMigrationGetLog();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v3, "uuid");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "pathToOriginalVideoFile");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = 138412546;
        v32 = v27;
        v33 = 2112;
        v34 = v28;
        v29 = "Failed to create avAsset from video asset %@, %@";
LABEL_27:
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, v29, (uint8_t *)&v31, 0x16u);

      }
    }
    else
    {
      if (!objc_msgSend(v3, "isPhotoIris"))
        goto LABEL_20;
      objc_msgSend(v3, "metadataFromMediaPropertiesOrOriginalResource");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (v4)
      {
        v18 = objc_msgSend(v3, "updatePlaybackVariationAndStyleFromOriginalMetadata:", v4);
        goto LABEL_15;
      }
      PLMigrationGetLog();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v3, "uuid");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "mainFileURL");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = 138412546;
        v32 = v27;
        v33 = 2112;
        v34 = v28;
        v29 = "Failed to get image properties from live photo asset %@, %@";
        goto LABEL_27;
      }
    }

    goto LABEL_29;
  }
  if ((objc_msgSend(v3, "isPhotoIris") & 1) != 0 || objc_msgSend(v3, "isVideo"))
  {
    objc_msgSend(v3, "pathForFullsizeRenderVideoFile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "fileExistsAtPath:", v4);

    if (v6)
    {
      v7 = (void *)MEMORY[0x1E0C8AF90];
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v4);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "assetWithURL:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (v9)
      {
        objc_msgSend(v3, "additionalAttributes");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "unmanagedAdjustment");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "adjustmentRenderTypes");

        v13 = objc_msgSend(v3, "updatePlaybackVariationAndLoopingStyleFromAVAsset:", v9);
        v14 = objc_msgSend(v3, "updateAdjustmentRenderTypes:withPlaybackVariation:", v12, objc_msgSend(v3, "playbackVariation"));
        goto LABEL_7;
      }
      goto LABEL_23;
    }
    goto LABEL_29;
  }
  if (objc_msgSend(v3, "isPhoto"))
  {
    objc_msgSend(v3, "pathForFullsizeRenderImageFile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "fileExistsAtPath:", v4);

    if (v20)
    {
      v21 = objc_alloc(MEMORY[0x1E0D75140]);
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v4, 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_alloc_init(MEMORY[0x1E0D752E8]);
      v9 = (void *)objc_msgSend(v21, "initWithMediaURL:options:timeZoneLookup:shouldCache:", v22, 12, v23, 0);

      if (v9)
      {
        objc_msgSend(v3, "additionalAttributes");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "unmanagedAdjustment");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v25, "adjustmentRenderTypes");

        LODWORD(v24) = objc_msgSend(v3, "depthType");
        objc_msgSend(v3, "setDepthTypeFromMetadata:", v9);
        v13 = objc_msgSend(v3, "depthType") != (_DWORD)v24;
        v14 = objc_msgSend(v3, "updateAdjustmentRenderTypes:withDepthType:", v12, objc_msgSend(v3, "depthType"));
LABEL_7:
        if ((_DWORD)v14 != (_DWORD)v12)
        {
          v15 = v14;
          objc_msgSend(v3, "additionalAttributes");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "unmanagedAdjustment");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "setAdjustmentRenderTypes:", v15);

          v13 = 1;
        }
        goto LABEL_24;
      }
LABEL_23:
      v13 = 0;
LABEL_24:

      goto LABEL_30;
    }
LABEL_29:
    v13 = 0;
    goto LABEL_30;
  }
LABEL_20:
  v13 = 0;
LABEL_31:

  return v13;
}

- (id)_fetchRequestToIdentifyBakedInVariationsCandidatesIncludingLongExposure:(BOOL)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v18[5];

  v18[4] = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    objc_msgSend(&unk_1E3763818, "arrayByAddingObject:", &unk_1E375E3A0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = &unk_1E3763818;
  }
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("playbackVariation"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0CB3880];
  -[PLModelMigrator _dateForVariations](self, "_dateForVariations");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "predicateWithFormat:", CFSTR("%K >= %@"), CFSTR("dateCreated"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K in %@"), CFSTR("playbackStyle"), v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForUnadjustedAssetsWithKeyPathToAsset:", 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  v18[0] = v8;
  v18[1] = v9;
  v18[2] = v5;
  v18[3] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v18, 4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "fetchRequestWithEntityName:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v16, "setPredicate:", v13);
  return v16;
}

- (id)_fetchRequestToIdentifyAdjustedDepthAndVariationsCandidates
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[5];

  v16[4] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("playbackVariation"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)MEMORY[0x1E0CB3880];
  -[PLModelMigrator _dateForVariations](self, "_dateForVariations");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "predicateWithFormat:", CFSTR("%K >= %@"), CFSTR("adjustmentTimestamp"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K in %@"), CFSTR("playbackStyle"), &unk_1E3763830);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0CB3528];
  v16[0] = v6;
  v16[1] = v7;
  v16[2] = v3;
  v16[3] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "andPredicateWithSubpredicates:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "fetchRequestWithEntityName:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "setPredicate:", v11);
  return v14;
}

- (BOOL)_identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure:(BOOL)a3 inStore:(id)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _BOOL4 v10;
  BOOL v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[5];
  _QWORD v17[5];
  _QWORD v18[2];

  v4 = a3;
  v18[1] = *MEMORY[0x1E0C80C00];
  v6 = a4;
  -[PLModelMigrator _fetchRequestToIdentifyBakedInVariationsCandidatesIncludingLongExposure:](self, "_fetchRequestToIdentifyBakedInVariationsCandidatesIncludingLongExposure:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s (BakedInVariations)"), "-[PLModelMigrator _identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure:inStore:]");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = MEMORY[0x1E0C809B0];
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __94__PLModelMigrator__identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure_inStore___block_invoke;
  v17[3] = &unk_1E3665618;
  v17[4] = self;
  v10 = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v8, v7, v6, v17);

  if (v10)
  {
    if (-[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled"))
    {
      v11 = 1;
    }
    else
    {
      -[PLModelMigrator _fetchRequestToIdentifyAdjustedDepthAndVariationsCandidates](self, "_fetchRequestToIdentifyAdjustedDepthAndVariationsCandidates");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v18[0] = CFSTR("additionalAttributes.unmanagedAdjustment");
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v18, 1);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setRelationshipKeyPathsForPrefetching:", v13);

      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s (adjustments_iCPLOff)"), "-[PLModelMigrator _identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure:inStore:]");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v16[0] = v9;
      v16[1] = 3221225472;
      v16[2] = __94__PLModelMigrator__identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure_inStore___block_invoke_2;
      v16[3] = &unk_1E3665618;
      v16[4] = self;
      v11 = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v14, v12, v6, v16);

    }
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

- (BOOL)_nukeWallpaperRemnantsInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  char v22;
  _BOOL4 v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  void *v28;
  const char *v29;
  const char *v30;
  void *v31;
  void *v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  uint8_t v39[128];
  uint8_t buf[4];
  NSObject *v41;
  __int16 v42;
  NSObject *v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _nukeWallpaperRemnantsInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "metadata");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v8, "mutableCopy");

  objc_msgSend(v9, "removeObjectForKey:", CFSTR("PLWallpaperFileHash"));
  objc_msgSend(v7, "persistentStoreCoordinator");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setMetadata:forPersistentStore:", v9, v5);

  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("AlbumList"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("identifier = %d"), 6);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:");
  objc_msgSend(v11, "setFetchBatchSize:", 100);
  v38 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v11, &v38);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v38;
  v32 = v12;
  if (!v13)
  {
    if (objc_msgSend(v12, "count"))
    {
      v28 = v6;
      v29 = a2;
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      v16 = v12;
      v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
      if (v17)
      {
        v18 = v17;
        v19 = *(_QWORD *)v35;
        do
        {
          for (i = 0; i != v18; ++i)
          {
            if (*(_QWORD *)v35 != v19)
              objc_enumerationMutation(v16);
            v21 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
            if (objc_msgSend(v21, "albumListType") == 6)
              objc_msgSend(v7, "deleteObject:", v21);
          }
          v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
        }
        while (v18);
      }

      v6 = v28;
      a2 = v29;
    }
    v33 = 0;
    v22 = objc_msgSend(v7, "save:", &v33);
    v14 = v33;
    if ((v22 & 1) != 0)
    {
      v23 = 1;
      goto LABEL_21;
    }
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v30 = a2;
      v24 = objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v41 = v24;
      v42 = 2112;
      v43 = v14;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%@: failed to save: %@", buf, 0x16u);

      a2 = v30;
    }
    goto LABEL_19;
  }
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v15 = objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v41 = v15;
    v42 = 2112;
    v43 = v13;
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "%@: failed to fetch wallpaper album list: %@", buf, 0x16u);
LABEL_19:

  }
  v23 = 0;
LABEL_21:

  PLMigrationGetLog();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    NSStringFromSelector(a2);
    v26 = objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v41 = v26;
    v42 = 1024;
    LODWORD(v43) = v23;
    _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEFAULT, "%@: finished %d", buf, 0x12u);

  }
  objc_autoreleasePoolPop(v6);

  return v23;
}

- (BOOL)_deletePersistentHistoryInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __51__PLModelMigrator__deletePersistentHistoryInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _deletePersistentHistoryInStore:]", a3, v4);
}

- (BOOL)_addUUIDsToExistingKeywordsInStore:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  const char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint32_t v15;
  uint8_t buf[4];
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", a3, "-[PLModelMigrator _addUUIDsToExistingKeywordsInStore:]", *MEMORY[0x1E0C97C38]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedKeyword entityName](PLManagedKeyword, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == nil"), CFSTR("uuid"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v3, "executeFetchRequest:error:", v6, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, &__block_literal_global_1531);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v9;
      v12 = "Failed to add uuids to keywords, error: %@";
      v13 = v11;
      v14 = OS_LOG_TYPE_ERROR;
      v15 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v13, v14, v12, buf, v15);
    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    v12 = "Added uuids to existing keywords";
    v13 = v11;
    v14 = OS_LOG_TYPE_DEFAULT;
    v15 = 2;
    goto LABEL_6;
  }

  objc_msgSend(v3, "reset");
  return v9 == 0;
}

- (BOOL)_updateSuggestionStartAndEndDatesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __60__PLModelMigrator__updateSuggestionStartAndEndDatesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _updateSuggestionStartAndEndDatesInStore:]", a3, v4);
}

- (BOOL)_deleteOrphanedExtendedAttributes:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _deleteOrphanedExtendedAttributes:]", a3, &__block_literal_global_1538);
}

- (BOOL)_batchOfflineDeleteFromDatabaseOnlyAssets:(id)a3 inManagedObjectContext:(id)a4 error:(id *)a5
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  NSObject *v15;
  void *v16;
  unint64_t v17;
  void *v18;
  unint64_t v19;
  char v20;
  NSObject *v21;
  NSObject *v22;
  id *v24;
  NSObject *v25;
  void *v26;
  void *v27;
  BOOL v28;
  NSObject *v29;
  id v30[3];
  uint8_t buf[4];
  NSObject *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if (objc_msgSend(v7, "count"))
  {
    v24 = a5;
    v9 = objc_alloc_init(MEMORY[0x1E0C97B48]);
    +[PLManagedObject entityInManagedObjectContext:](PLManagedAsset, "entityInManagedObjectContext:", v8);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setEntity:", v27);
    objc_msgSend(v9, "setReturnsObjectsAsFaults:", 0);
    objc_msgSend(v9, "setFetchBatchSize:", 100);
    objc_msgSend(v27, "relationshipsByName");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "allKeys");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v11);

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@"), v7);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setPredicate:", v12);

    v30[0] = 0;
    objc_msgSend(v8, "executeFetchRequest:error:", v9, v30);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = v30[0];
    v28 = v26 != 0;
    if (v26)
    {
      v13 = objc_msgSend(v26, "count");
      v14 = 0;
      v15 = 0;
      do
      {
        if (v14 >= v13)
          break;
        v16 = (void *)MEMORY[0x19AEC1554]();
        v17 = 0;
        do
        {
          objc_msgSend(v7, "objectAtIndex:", v14 + v17);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "deleteFromDatabaseOnly");

          v19 = v14 + v17 + 1;
          if (v17 > 0x62)
            break;
          ++v17;
        }
        while (v19 < v13);
        v29 = v15;
        v20 = objc_msgSend(v8, "save:", &v29);
        v21 = v29;

        v15 = v21;
        if ((v20 & 1) == 0)
        {
          PLMigrationGetLog();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            v32 = v15;
            _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Save failed. Rolling back changes. (%@)", buf, 0xCu);
          }

          objc_msgSend(v8, "rollback");
        }
        objc_autoreleasePoolPop(v16);
        v14 = v19;
      }
      while ((v20 & 1) != 0);
      if (v24)
      {
        v15 = objc_retainAutorelease(v15);
        *v24 = v15;
      }
    }
    else
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v25;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "could not batch fault in to-be-deleted assets: %@", buf, 0xCu);
      }
    }

  }
  else
  {
    v28 = 1;
  }

  return v28;
}

- (BOOL)_deleteCloudSharedAndSynced:(BOOL)a3 assetReferencesInStore:(id)a4
{
  _BOOL4 v4;
  id v7;
  void *v8;
  void *v9;
  BOOL v10;
  id v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  char v20;
  id v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  BOOL v25;
  NSObject *v26;
  NSObject *v27;
  const char *v28;
  NSObject *v29;
  os_log_type_t v30;
  void *v32;
  void *v33;
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  id v40;
  uint8_t v41[128];
  uint8_t buf[4];
  uint64_t v43;
  uint64_t v44;

  v4 = a3;
  v44 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 10467, CFSTR("%@ can only be called from assetsd"), v33);

  }
  v8 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v7, "-[PLModelMigrator _deleteCloudSharedAndSynced:assetReferencesInStore:]", *MEMORY[0x1E0C97C38]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = 0;
  v10 = -[PLModelMigrator _deletePhotoCloudSharingMetadataInManagedObjectContext:error:](self, "_deletePhotoCloudSharingMetadataInManagedObjectContext:error:", v9, &v40);
  v11 = v40;
  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (!v10)
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v43 = (uint64_t)v11;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to delete photo cloud sharing data %@", buf, 0xCu);
    }
    v25 = 0;
    goto LABEL_31;
  }
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Deleted all iCloud shared albums, assets, and feed entries", buf, 2u);
  }

  if (v4)
  {
    +[PLGenericAlbum allSyncedAlbumsInManagedObjectContext:](PLManagedAlbum, "allSyncedAlbumsInManagedObjectContext:", v9);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "count");
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v13 = v14;
    v16 = -[NSObject countByEnumeratingWithState:objects:count:](v13, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v37;
      do
      {
        for (i = 0; i != v17; ++i)
        {
          if (*(_QWORD *)v37 != v18)
            objc_enumerationMutation(v13);
          objc_msgSend(*(id *)(*((_QWORD *)&v36 + 1) + 8 * i), "delete");
        }
        v17 = -[NSObject countByEnumeratingWithState:objects:count:](v13, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
      }
      while (v17);
    }

    v35 = v11;
    v20 = objc_msgSend(v9, "save:", &v35);
    v21 = v35;

    PLMigrationGetLog();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = v22;
    if ((v20 & 1) == 0)
    {
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v43 = (uint64_t)v21;
        _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "Failed to delete synced albums %@", buf, 0xCu);
      }

      v25 = 0;
      v11 = v21;
      goto LABEL_31;
    }
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v43 = v15;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_DEFAULT, "Deleted %ld iTunes synced albums", buf, 0xCu);
    }

    +[PLManagedAsset assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:](PLManagedAsset, "assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:", objc_msgSend(MEMORY[0x1E0D73310], "maskForFinderSyncedAsset"), v9);
    v13 = objc_claimAutoreleasedReturnValue();
    v24 = -[NSObject count](v13, "count");
    v34 = v21;
    v25 = -[PLModelMigrator _batchOfflineDeleteFromDatabaseOnlyAssets:inManagedObjectContext:error:](self, "_batchOfflineDeleteFromDatabaseOnlyAssets:inManagedObjectContext:error:", v13, v9, &v34);
    v11 = v34;

    PLMigrationGetLog();
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = v26;
    if (v25)
    {
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v43 = v24;
        v28 = "Deleted %ld iTunes synced assets";
        v29 = v27;
        v30 = OS_LOG_TYPE_DEFAULT;
LABEL_29:
        _os_log_impl(&dword_199541000, v29, v30, v28, buf, 0xCu);
      }
    }
    else if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v43 = (uint64_t)v11;
      v28 = "Failed to delete synced assets %@";
      v29 = v27;
      v30 = OS_LOG_TYPE_ERROR;
      goto LABEL_29;
    }

LABEL_31:
    goto LABEL_32;
  }
  v25 = 1;
LABEL_32:

  objc_autoreleasePoolPop(v8);
  return v25;
}

- (BOOL)_deletePhotoStreamAssetReferencesInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  char v15;
  id v16;
  NSObject *v17;
  BOOL v18;
  void *v20;
  void *v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t v27[128];
  uint8_t buf[4];
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromSelector(a2);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 10515, CFSTR("%@ can only be called from assetsd"), v21);

  }
  v6 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v5, "-[PLModelMigrator _deletePhotoStreamAssetReferencesInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:](PLManagedAsset, "assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:", objc_msgSend(MEMORY[0x1E0D73310], "maskForPhotoStreamAsset"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v8, "count"))
  {
    v16 = 0;
LABEL_18:
    v18 = 1;
    goto LABEL_19;
  }
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v29 = objc_msgSend(v8, "count");
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Deleting %lu my photo stream assets", buf, 0xCu);
  }

  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v10 = v8;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v24 != v13)
          objc_enumerationMutation(v10);
        objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * i), "deleteFromDatabaseOnly");
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v12);
  }

  v22 = 0;
  v15 = objc_msgSend(v7, "save:", &v22);
  v16 = v22;
  if ((v15 & 1) != 0)
    goto LABEL_18;
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v29 = (uint64_t)v16;
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Failed to remove old my photo stream assets %@", buf, 0xCu);
  }

  v18 = 0;
LABEL_19:
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v6);
  return v18;
}

- (BOOL)_deletePhotoCloudSharingMetadataInManagedObjectContext:(id)a3 error:(id *)a4
{
  id v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  BOOL v25;
  void *v27;
  _QWORD v28[4];
  id v29;
  uint8_t buf[4];
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 10542, CFSTR("_deleteAllLocalSharedAlbumsMetadataAndMoveTheAssetDataIntoACacheFolder only valid in assetsd!"));

  }
  PLMigrationGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Deleting all photo cloud sharing metadata from photo library database", buf, 2u);
  }

  +[PLGenericAlbum albumsWithKind:inManagedObjectContext:](PLGenericAlbum, "albumsWithKind:inManagedObjectContext:", 1505, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v9, "count"))
    goto LABEL_11;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = objc_msgSend(v9, "count");
    *(_DWORD *)buf = 134217984;
    v31 = v11;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Deleting %tu shared albums", buf, 0xCu);
  }

  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, &__block_literal_global_1547);
  v12 = objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = 0;
    if (!objc_msgSend(0, "count"))
    {
      v15 = 0;
      v16 = 0;
      goto LABEL_18;
    }
  }
  else
  {
LABEL_11:
    +[PLManagedAsset assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:](PLManagedAsset, "assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), v7);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v14, "count"))
      goto LABEL_17;
    v13 = 0;
  }
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    v18 = objc_msgSend(v14, "count");
    *(_DWORD *)buf = 134217984;
    v31 = v18;
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Deleting %tu shared assets", buf, 0xCu);
  }

  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v14, &__block_literal_global_1549);
  v19 = objc_claimAutoreleasedReturnValue();

  if (v19)
  {
    v16 = 0;
    v15 = 0;
    v13 = (void *)v19;
    goto LABEL_18;
  }
LABEL_17:
  +[PLCloudFeedEntry allEntriesInManagedObjectContext:](PLCloudFeedEntry, "allEntriesInManagedObjectContext:", v7);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  v15 = 1;
LABEL_18:
  if (objc_msgSend(v16, "count"))
  {
    PLMigrationGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      v21 = objc_msgSend(v16, "count");
      *(_DWORD *)buf = 134217984;
      v31 = v21;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Deleting %tu remaining cloud feed entries", buf, 0xCu);
    }

    v28[0] = MEMORY[0x1E0C809B0];
    v28[1] = 3221225472;
    v28[2] = __80__PLModelMigrator__deletePhotoCloudSharingMetadataInManagedObjectContext_error___block_invoke_1551;
    v28[3] = &unk_1E3665760;
    v29 = v7;
    objc_msgSend(v29, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v16, v28);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    v23 = v22;
    if (v22)
    {
      v24 = v23;
      goto LABEL_24;
    }
    v24 = 0;
LABEL_27:
    v25 = 1;
    goto LABEL_29;
  }
  v24 = v13;
  if ((v15 & 1) != 0)
    goto LABEL_27;
LABEL_24:
  if (a4)
  {
    v24 = objc_retainAutorelease(v24);
    v25 = 0;
    *a4 = v24;
  }
  else
  {
    v25 = 0;
  }
LABEL_29:

  return v25;
}

- (void)repairSingletonObjectsInDatabase
{
  -[PLModelMigrator _repairMetadataAndSingletonsForMigrationType:forceRebuildReason:journalRebuildRequired:](self, "_repairMetadataAndSingletonsForMigrationType:forceRebuildReason:journalRebuildRequired:", 0, 0, 0);
}

- (void)_failed_repairSingletonObjectsWithMissingLibraryDirectory
{
  NSObject *v2;
  uint8_t v3[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "Repair singleton objects in new database failed, missing library directory. Exiting", v3, 2u);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithInvalidFileTypeLibraryDirectory
{
  NSObject *v2;
  uint8_t v3[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "Repair singleton objects in new database failed, invalid file type library directory. Exiting", v3, 2u);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithMissingDatabaseFile
{
  NSObject *v2;
  uint8_t v3[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "Repair singleton objects in new database failed, cannot create database. Exiting", v3, 2u);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithInvalidDatabaseFile
{
  NSObject *v2;
  uint8_t v3[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "Repair singleton objects in new database failed, cannot open database. Exiting", v3, 2u);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithNoPersistentStores
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  char v10;
  NSObject *v11;
  uint8_t v12[15];
  char v13;

  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  -[PLModelMigrator pathManager](self, "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryURL");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "path");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v3, "fileExistsAtPath:isDirectory:", v6, &v13);

  if ((v7 & 1) != 0)
  {
    if (v13)
    {
      -[PLModelMigrator pathManager](self, "pathManager");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "photosDatabasePath");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v3, "fileExistsAtPath:isDirectory:", v9, 0);

      if ((v10 & 1) != 0)
        -[PLModelMigrator _failed_repairSingletonObjectsWithInvalidDatabaseFile](self, "_failed_repairSingletonObjectsWithInvalidDatabaseFile");
      else
        -[PLModelMigrator _failed_repairSingletonObjectsWithMissingDatabaseFile](self, "_failed_repairSingletonObjectsWithMissingDatabaseFile");
    }
    else
    {
      -[PLModelMigrator _failed_repairSingletonObjectsWithInvalidFileTypeLibraryDirectory](self, "_failed_repairSingletonObjectsWithInvalidFileTypeLibraryDirectory");
    }
  }
  else
  {
    -[PLModelMigrator _failed_repairSingletonObjectsWithMissingLibraryDirectory](self, "_failed_repairSingletonObjectsWithMissingLibraryDirectory");
  }
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsInNewDatabaseWithNoPersistentStores", v12, 2u);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsInNewDatabaseWithNoPersistentStores
{
  NSObject *v2;
  uint8_t v3[16];

  -[PLModelMigrator _failed_repairSingletonObjectsWithNoPersistentStores](self, "_failed_repairSingletonObjectsWithNoPersistentStores");
  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsInNewDatabaseWithNoPersistentStores", v3, 2u);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorLibraryRequiresMigration
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorLibraryTooNew
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorInvalidState
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorInvalidURL
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeOtherPhotosError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_CORRUPT
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_NOTADB
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_FULL
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_PERM
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_CANTOPEN
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_ERROR
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_LOCKED
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeSQLITE_MISUSE
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeOtherSQLiteError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreOpenError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreTimeoutError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreIncompatibleVersionHashError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreIncompatibleSchemaError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreTypeMismatchError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreInvalidTypeError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeNSCoreDataError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithErrorTypeOtherCoreDataError
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 138543362;
    v6 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "%{public}@", (uint8_t *)&v5, 0xCu);

  }
  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithError:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  int v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  int v14;
  NSObject *v15;
  int v16;
  id v17;

  v4 = a3;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v16 = 138412290;
    v17 = v4;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsWithError: %@", (uint8_t *)&v16, 0xCu);
  }

  objc_msgSend(v4, "domain");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isEqualToString:", *MEMORY[0x1E0D74498]);

  if (!v7)
  {
    objc_msgSend(v4, "domain");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "isEqualToString:", *MEMORY[0x1E0CB28A8]);

    if (!v10)
      goto LABEL_46;
    objc_msgSend(v4, "userInfo");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0C979C8]);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v12)
    {
      v14 = objc_msgSend(v12, "intValue");
      switch(v14)
      {
        case 1:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_ERROR](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_ERROR");
          break;
        case 2:
        case 4:
        case 5:
        case 7:
        case 8:
        case 9:
        case 10:
        case 12:
          goto LABEL_33;
        case 3:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_PERM](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_PERM");
          break;
        case 6:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_LOCKED](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_LOCKED");
          break;
        case 11:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_CORRUPT](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_CORRUPT");
          break;
        case 13:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_FULL](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_FULL");
          break;
        case 14:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_CANTOPEN](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_CANTOPEN");
          break;
        default:
          if (v14 == 21)
          {
            -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_MISUSE](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_MISUSE");
          }
          else if (v14 == 26)
          {
            -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeSQLITE_NOTADB](self, "_failed_repairSingletonObjectsWithErrorTypeSQLITE_NOTADB");
          }
          else
          {
LABEL_33:
            -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeOtherSQLiteError](self, "_failed_repairSingletonObjectsWithErrorTypeOtherSQLiteError");
          }
          break;
      }
      goto LABEL_45;
    }
    v13 = objc_msgSend(v4, "code");
    if (v13 <= 134059)
    {
      switch(v13)
      {
        case 134000:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreInvalidTypeError](self, "_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreInvalidTypeError");
          goto LABEL_45;
        case 134010:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreTypeMismatchError](self, "_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreTypeMismatchError");
          goto LABEL_45;
        case 134020:
          -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreIncompatibleSchemaError](self, "_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreIncompatibleSchemaError");
          goto LABEL_45;
      }
    }
    else if (v13 > 134089)
    {
      if (v13 == 134090)
      {
        -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreTimeoutError](self, "_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreTimeoutError");
        goto LABEL_45;
      }
      if (v13 == 134100)
      {
        -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreIncompatibleVersionHashError](self, "_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreIncompatibleVersionHashError");
        goto LABEL_45;
      }
    }
    else
    {
      if (v13 == 134060)
      {
        -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSCoreDataError](self, "_failed_repairSingletonObjectsWithErrorTypeNSCoreDataError");
        goto LABEL_45;
      }
      if (v13 == 134080)
      {
        -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreOpenError](self, "_failed_repairSingletonObjectsWithErrorTypeNSPersistentStoreOpenError");
LABEL_45:

        goto LABEL_46;
      }
    }
    -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeOtherCoreDataError](self, "_failed_repairSingletonObjectsWithErrorTypeOtherCoreDataError");
    goto LABEL_45;
  }
  v8 = objc_msgSend(v4, "code");
  if (v8 > 46101)
  {
    if (v8 == 46102)
    {
      -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypePLPhotosErrorInvalidURL](self, "_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorInvalidURL");
      goto LABEL_46;
    }
    if (v8 == 46502)
    {
      -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypePLPhotosErrorInvalidState](self, "_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorInvalidState");
      goto LABEL_46;
    }
  }
  else
  {
    if (v8 == 46006)
    {
      -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypePLPhotosErrorLibraryTooNew](self, "_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorLibraryTooNew");
      goto LABEL_46;
    }
    if (v8 == 46007)
    {
      -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypePLPhotosErrorLibraryRequiresMigration](self, "_failed_repairSingletonObjectsWithErrorTypePLPhotosErrorLibraryRequiresMigration");
      goto LABEL_46;
    }
  }
  -[PLModelMigrator _failed_repairSingletonObjectsWithErrorTypeOtherPhotosError](self, "_failed_repairSingletonObjectsWithErrorTypeOtherPhotosError");
LABEL_46:
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    v16 = 138412290;
    v17 = v4;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsWithError: %@", (uint8_t *)&v16, 0xCu);
  }

  __break(1u);
}

- (void)_failed_repairSingletonObjectsWithNilContextError:(id)a3
{
  id v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsWithNilContextError: %@", (uint8_t *)&v6, 0xCu);
  }

  -[PLModelMigrator _failed_repairSingletonObjectsWithError:](self, "_failed_repairSingletonObjectsWithError:", v4);
}

- (void)_failed_repairSingletonObjectsInNewDatabaseWithNilContextError:(id)a3
{
  id v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsInNewDatabaseWithNilContextError: %@", (uint8_t *)&v6, 0xCu);
  }

  -[PLModelMigrator _failed_repairSingletonObjectsWithError:](self, "_failed_repairSingletonObjectsWithError:", v4);
}

- (void)_failed_repairSingletonObjectsInNewDatabaseWithRepairError:(id)a3
{
  id v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsInNewDatabaseWithRepairError: %@", (uint8_t *)&v6, 0xCu);
  }

  -[PLModelMigrator _failed_repairSingletonObjectsWithError:](self, "_failed_repairSingletonObjectsWithError:", v4);
}

- (void)_failed_repairSingletonObjectsWithRepairError:(id)a3
{
  id v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "_failed_repairSingletonObjectsWithRepairError: %@", (uint8_t *)&v6, 0xCu);
  }

  -[PLModelMigrator _failed_repairSingletonObjectsWithError:](self, "_failed_repairSingletonObjectsWithError:", v4);
}

- (void)_failed_recordCurrentVersionMetadata
{
  NSObject *v2;
  uint8_t v3[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_ERROR, "Failed to save current metadata", v3, 2u);
  }

  __break(1u);
}

- (void)_repairMetadataAndSingletonsForMigrationType:(int64_t)a3 forceRebuildReason:(id)a4 journalRebuildRequired:(BOOL)a5
{
  id v7;
  void *v8;
  id v9;

  v7 = a4;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLModelMigrator.m"), 10782, CFSTR("-[PLModelMigrator addSingletonObjectsToDatabase] can only be called from assetsd"));

  }
  if (PLIsAssetsd())
  {
    pl_dispatch_once();
    v9 = v7;
    pl_dispatch_sync();

  }
}

- (BOOL)_recoverSingleBurstPhotos:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  NSObject *v28;
  char v29;
  NSObject *v30;
  BOOL v31;
  void *v32;
  NSObject *v33;
  void *v34;
  uint64_t v36;
  id v37;
  void *context;
  void *v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  id v45;
  _QWORD v46[4];
  id v47;
  uint8_t v48[128];
  uint8_t buf[4];
  uint64_t v50;
  __int16 v51;
  void *v52;
  _QWORD v53[5];

  v53[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v39 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _recoverSingleBurstPhotos:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc_init(MEMORY[0x1E0C97B30]);
  objc_msgSend(v6, "setName:", CFSTR("count"));
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionWithFormat:", CFSTR("count:(avalancheUUID)"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setExpression:", v7);

  objc_msgSend(v6, "setExpressionResultType:", 300);
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v53[0] = CFSTR("avalancheUUID");
  v53[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v53, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPropertiesToFetch:", v11);

  objc_msgSend(v10, "setPropertiesToGroupBy:", &unk_1E3763848);
  objc_msgSend(v10, "setResultType:", 2);
  v12 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v46[0] = MEMORY[0x1E0C809B0];
  v46[1] = 3221225472;
  v46[2] = __45__PLModelMigrator__recoverSingleBurstPhotos___block_invoke;
  v46[3] = &unk_1E3673250;
  v13 = v12;
  v47 = v13;
  objc_msgSend(v5, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v10, 0, v46);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "fetchRequestWithEntityName:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(v13, "allObjects");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "predicateWithFormat:", CFSTR("avalancheUUID IN %@"), v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setPredicate:", v20);

  v45 = v14;
  objc_msgSend(v5, "executeFetchRequest:error:", v17, &v45);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = v45;

  if (!v21)
  {
    PLMigrationGetLog();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v22, "userInfo");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v50 = (uint64_t)v22;
      v51 = 2112;
      v52 = v32;
      _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_ERROR, "_recoverSingleBurstPhotos: failed: %@ %@", buf, 0x16u);

    }
    goto LABEL_20;
  }
  v37 = v22;
  v36 = objc_msgSend(v21, "count");
  +[PLAvalanche disolveBurstForAssets:permanently:](PLAvalanche, "disolveBurstForAssets:permanently:", v21, 0);
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  v23 = v21;
  v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v41, v48, 16);
  if (v24)
  {
    v25 = v24;
    v26 = *(_QWORD *)v42;
    do
    {
      for (i = 0; i != v25; ++i)
      {
        if (*(_QWORD *)v42 != v26)
          objc_enumerationMutation(v23);
        objc_msgSend(*(id *)(*((_QWORD *)&v41 + 1) + 8 * i), "persistMetadataToFilesystem");
      }
      v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v41, v48, 16);
    }
    while (v25);
  }

  if (objc_msgSend(v5, "hasChanges"))
  {
    PLMigrationGetLog();
    v28 = objc_claimAutoreleasedReturnValue();
    v22 = v37;
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v50 = v36;
      _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_DEFAULT, "Recover %lu single burst photo", buf, 0xCu);
    }

    v40 = 0;
    v29 = objc_msgSend(v5, "save:", &v40);
    v30 = v40;
    if ((v29 & 1) != 0)
    {
      v31 = 1;
LABEL_21:

      goto LABEL_22;
    }
    PLMigrationGetLog();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      -[NSObject userInfo](v30, "userInfo");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v50 = (uint64_t)v30;
      v51 = 2112;
      v52 = v34;
      _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "_recoverSingleBurstPhotos: failed: %@ %@", buf, 0x16u);

    }
LABEL_20:
    v31 = 0;
    goto LABEL_21;
  }
  v31 = 1;
  v22 = v37;
LABEL_22:

  objc_autoreleasePoolPop(context);
  return v31;
}

- (BOOL)_setUserTypeOnKeyFace:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  BOOL v15;
  NSObject *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  const char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint32_t v27;
  int v28;
  void *context;
  _QWORD v31[5];
  _QWORD v32[5];
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  uint8_t v37[4];
  void *v38;
  __int128 buf;
  uint64_t v40;
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _setUserTypeOnKeyFace:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("nameSource = 1"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  v33 = 0;
  v34 = &v33;
  v35 = 0x2020000000;
  v36 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = MEMORY[0x1E0C809B0];
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = __41__PLModelMigrator__setUserTypeOnKeyFace___block_invoke;
  v32[3] = &unk_1E3673F78;
  v32[4] = &v33;
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v32);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v13)
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *((_DWORD *)v34 + 6);
      LODWORD(buf) = 67109120;
      DWORD1(buf) = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Reset %d faces' nameSource to type auto", (uint8_t *)&buf, 8u);
    }

    v18 = (void *)MEMORY[0x1E0C97B48];
    +[PLDetectedFace entityName](PLDetectedFace, "entityName");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "fetchRequestWithEntityName:", v19);
    v14 = objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("person.verifiedType = %d AND (faceGroupBeingKeyFace != nil OR personBeingKeyFace != nil)"), 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject setPredicate:](v14, "setPredicate:", v20);

    -[NSObject setFetchBatchSize:](v14, "setFetchBatchSize:", 100);
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v40 = 0x2020000000;
    v41 = 0;
    objc_msgSend(v6, "executeFetchRequest:error:", v14, 0);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v31[0] = v12;
    v31[1] = 3221225472;
    v31[2] = __41__PLModelMigrator__setUserTypeOnKeyFace___block_invoke_1573;
    v31[3] = &unk_1E3673F78;
    v31[4] = &buf;
    objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v21, v31);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v22 == 0;
    if (v22)
    {
      PLMigrationGetLog();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v37 = 138412290;
        v38 = v22;
        v24 = "Failed to marked faces: %@";
        v25 = v23;
        v26 = OS_LOG_TYPE_ERROR;
        v27 = 12;
LABEL_12:
        _os_log_impl(&dword_199541000, v25, v26, v24, v37, v27);
      }
    }
    else
    {
      PLMigrationGetLog();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        v28 = *(_DWORD *)(*((_QWORD *)&buf + 1) + 24);
        *(_DWORD *)v37 = 67109120;
        LODWORD(v38) = v28;
        v24 = "Marked %d faces' nameSource to type user";
        v25 = v23;
        v26 = OS_LOG_TYPE_DEFAULT;
        v27 = 8;
        goto LABEL_12;
      }
    }

    _Block_object_dispose(&buf, 8);
    goto LABEL_14;
  }
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    LODWORD(buf) = 138412290;
    *(_QWORD *)((char *)&buf + 4) = v13;
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Failed to reset faces: %@", (uint8_t *)&buf, 0xCu);
  }
  v15 = 0;
LABEL_14:

  objc_msgSend(v6, "reset");
  _Block_object_dispose(&v33, 8);

  objc_autoreleasePoolPop(context);
  return v15;
}

- (BOOL)_refreshTriggerValues:(id)a3
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  const char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint32_t v14;
  id v16;
  uint8_t buf[4];
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v4 = pl_dispatch_once();
  v5 = (void *)MEMORY[0x19AEC1554](v4);
  objc_msgSend(v3, "persistentStoreCoordinator");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0;
  v7 = objc_msgSend(v6, "_refreshTriggerValuesInStore:error:", v3, &v16);
  v8 = v16;
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if ((v7 & 1) != 0)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v11 = "Refreshed trigger values";
      v12 = v10;
      v13 = OS_LOG_TYPE_DEFAULT;
      v14 = 2;
LABEL_6:
      _os_log_impl(&dword_199541000, v12, v13, v11, buf, v14);
    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v18 = v8;
    v11 = "Failed to refresh trigger values: %@";
    v12 = v10;
    v13 = OS_LOG_TYPE_ERROR;
    v14 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
  return 1;
}

- (BOOL)_fixMergedPeopleThatShouldBeVerified:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  const char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint32_t v20;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixMergedPeopleThatShouldBeVerified:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("verifiedType = %d AND detectedFaces.@count > 1"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __56__PLModelMigrator__fixMergedPeopleThatShouldBeVerified___block_invoke;
  v22[3] = &unk_1E366FED0;
  v23 = v7;
  v13 = v7;
  objc_msgSend(v13, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, v22);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v14)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v14;
      v17 = "Failed to verified unverified person: %@";
      v18 = v16;
      v19 = OS_LOG_TYPE_ERROR;
      v20 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v18, v19, v17, buf, v20);
    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v25) = 0;
    v17 = "Verified %d unverified person";
    v18 = v16;
    v19 = OS_LOG_TYPE_DEFAULT;
    v20 = 8;
    goto LABEL_6;
  }

  objc_msgSend(v13, "reset");
  objc_autoreleasePoolPop(v6);

  return v14 == 0;
}

- (BOOL)_fixRejectedKeyFace:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  int v19;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint8_t buf[4];
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixRejectedKeyFace:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("verifiedType = %d AND rejectedFaces.@count == 0"), 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __39__PLModelMigrator__fixRejectedKeyFace___block_invoke;
  v21[3] = &unk_1E36657D0;
  v21[4] = &v22;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, v21);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v13;
      v15 = "Failed to fix faces: %@";
      v16 = v14;
      v17 = OS_LOG_TYPE_ERROR;
      v18 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v16, v17, v15, buf, v18);
    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v19 = *((_DWORD *)v23 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v27) = v19;
      v15 = "Fixed %d faces keyFace, setting them to nil";
      v16 = v14;
      v17 = OS_LOG_TYPE_DEFAULT;
      v18 = 8;
      goto LABEL_6;
    }
  }

  objc_msgSend(v7, "reset");
  _Block_object_dispose(&v22, 8);

  objc_autoreleasePoolPop(v6);
  return v13 == 0;
}

- (BOOL)_trimInvalidAlbumAssetsMappingRecords
{
  void *v2;
  id v3;
  const char *v4;
  sqlite3 *v5;
  sqlite3 *v6;
  id v7;
  int v8;
  BOOL v9;
  int v10;
  NSObject *v11;
  int v12;
  NSObject *v13;
  char *errmsg;
  uint8_t buf[4];
  int v17;
  __int16 v18;
  char *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator pathManager](self, "pathManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "photosDatabasePath");
  v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v4 = (const char *)objc_msgSend(v3, "fileSystemRepresentation");

  v5 = PLOpenSQLTransactionWithDBPath(v4);
  if (!v5)
    return 1;
  v6 = v5;
  errmsg = 0;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("DELETE FROM %@ WHERE ROWID IN(                                SELECT                                     MAP.ROWID                                 FROM                                     %@ AS MAP                                     LEFT OUTER JOIN ZGENERICASSET AS ASSET ON MAP.%@ = ASSET.Z_PK                                     LEFT OUTER JOIN ZGENERICALBUM AS ALBUM ON MAP.%@ = ALBUM.Z_PK                                     LEFT OUTER JOIN Z_PRIMARYKEY AS PK ON ALBUM.Z_ENT = PK.Z_ENT                                 WHERE                                     ASSET.ZUUID IS NULL OR                                     ALBUM.ZUUID IS NULL OR                                     PK.Z_NAME IN ('FetchingAlbum'))"), CFSTR("Z_15ASSETS"), CFSTR("Z_15ASSETS"), CFSTR("Z_22ASSETS"), CFSTR("Z_15ALBUMS"));
  v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v8 = sqlite3_exec(v6, (const char *)objc_msgSend(v7, "UTF8String"), 0, 0, &errmsg);
  v9 = v8 == 0;
  if (v8)
  {
    v10 = v8;
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109378;
      v17 = v10;
      v18 = 2080;
      v19 = errmsg;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Failed to clear invalid asset to album mapping records, %d %s", buf, 0x12u);
    }

    PLRollbackSQLTransactionAndCloseDB(v6);
  }
  else
  {
    v12 = sqlite3_changes(v6);
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      v17 = v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Cleared %d invalid asset to album mapping records.", buf, 8u);
    }

    PLCommitSQLTransactionAndCloseDB(v6);
  }

  return v9;
}

- (BOOL)_fixupCroppedUnadjustedAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  const char *v19;
  NSObject *v20;
  os_log_type_t v21;
  void *v22;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t buf[4];
  void *v30;
  _QWORD v31[4];

  v31[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixupCroppedUnadjustedAssets:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  v10 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kind"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v11;
  +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForUnadjustedAssetsWithKeyPathToAsset:", 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("orientation"), &unk_1E3763860);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v15);

  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0;
  v26 = &v25;
  v27 = 0x2020000000;
  v28 = 0;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __49__PLModelMigrator__fixupCroppedUnadjustedAssets___block_invoke;
  v24[3] = &unk_1E3665110;
  v24[4] = &v25;
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v16, v24);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (v17)
  {
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v17;
      v19 = "_fixupCroppedUnadjustedAssets failed: %@";
      v20 = v18;
      v21 = OS_LOG_TYPE_ERROR;
LABEL_6:
      _os_log_impl(&dword_199541000, v20, v21, v19, buf, 0xCu);
    }
  }
  else
  {
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v22 = (void *)v26[3];
      *(_DWORD *)buf = 134217984;
      v30 = v22;
      v19 = "Fixed %lu CroppedUnadjustedAssets";
      v20 = v18;
      v21 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_6;
    }
  }

  _Block_object_dispose(&v25, 8);
  objc_autoreleasePoolPop(v5);

  return v17 == 0;
}

- (BOOL)_removeUntrackedCloudResourceImageDerivativesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  const char *v13;
  NSObject *v14;
  os_log_type_t v15;
  void *v16;
  _QWORD v18[6];
  _QWORD v19[4];
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t buf[4];
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _removeUntrackedCloudResourceImageDerivativesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLCloudResource entityName](PLCloudResource, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("isLocallyAvailable == NO AND isAvailable == YES AND filePath != nil AND (type == %d OR type == %d)"), 4, 5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v24 = 0;
  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x2020000000;
  v19[3] = 0;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __72__PLModelMigrator__removeUntrackedCloudResourceImageDerivativesInStore___block_invoke;
  v18[3] = &unk_1E36657F8;
  v18[4] = &v20;
  v18[5] = v19;
  objc_msgSend(v6, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, &v24, v18);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v26 = v11;
      v13 = "Failed to remove untracked images with error %@";
      v14 = v12;
      v15 = OS_LOG_TYPE_ERROR;
LABEL_6:
      _os_log_impl(&dword_199541000, v14, v15, v13, buf, 0xCu);
    }
  }
  else
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v16 = (void *)v21[3];
      *(_DWORD *)buf = 134217984;
      v26 = v16;
      v13 = "Removed %lu untracked images.";
      v14 = v12;
      v15 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_6;
    }
  }

  _Block_object_dispose(v19, 8);
  _Block_object_dispose(&v20, 8);

  objc_autoreleasePoolPop(v5);
  return v11 == 0;
}

- (id)_dateForWideGamutCapture
{
  void *v2;
  id v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0C99D48], "calendarWithIdentifier:", *MEMORY[0x1E0C996C8]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0C99D78]);
  objc_msgSend(v3, "setYear:", 2016);
  objc_msgSend(v3, "setMonth:", 6);
  objc_msgSend(v3, "setDay:", 1);
  objc_msgSend(v2, "dateFromComponents:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (BOOL)_rebuildWideCaptureThumbsInStore:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  void *v25;
  BOOL v26;
  NSObject *v27;
  NSObject *v28;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  PLModelMigrator *v35;
  id v36;
  _QWORD v37[4];
  id v38;
  id v39;
  uint8_t buf[4];
  NSObject *v41;
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[4];

  v44[2] = *MEMORY[0x1E0C80C00];
  v36 = a3;
  v30 = (void *)MEMORY[0x19AEC1554]();
  v35 = self;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v36, "-[PLModelMigrator _rebuildWideCaptureThumbsInStore:]", *MEMORY[0x1E0C97C38]);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator _dateForWideGamutCapture](self, "_dateForWideGamutCapture");
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %@"), CFSTR("dateCreated"), v6);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v33;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), CFSTR("originalColorSpace"), CFSTR("Display P3"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v43[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v43, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v44[0] = v10;
  v11 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = v12;
  v31 = (void *)v6;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %@"), CFSTR("adjustmentTimestamp"), v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v42[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v42, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v44[1] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v44, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "orPredicateWithSubpredicates:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "setPredicate:", v17);

  objc_msgSend(v32, "setFetchBatchSize:", 100);
  -[PLModelMigrator _migrationThumbnailManagerWithStore:](v35, "_migrationThumbnailManagerWithStore:", v36);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = 0;
  objc_msgSend(v34, "executeFetchRequest:error:", v32, &v39);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v39;
  v21 = objc_msgSend(v19, "count");
  if (!v19 || v20)
  {
    PLMigrationGetLog();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v41 = v20;
      _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "Failed to fetch wide gamut capture assets with error %@", buf, 0xCu);
    }

    v24 = 0;
    v25 = v31;
  }
  else
  {
    v22 = v21;
    v37[0] = MEMORY[0x1E0C809B0];
    v37[1] = 3221225472;
    v37[2] = __52__PLModelMigrator__rebuildWideCaptureThumbsInStore___block_invoke;
    v37[3] = &unk_1E36740E0;
    v23 = v18;
    v38 = v23;
    objc_msgSend(v34, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v19, 1, v37);
    v24 = objc_claimAutoreleasedReturnValue();

    v25 = v31;
    if (!v24)
    {
      objc_msgSend(v23, "addRebuildThumbnailsRequest");
      PLMigrationGetLog();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v41 = v22;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "Deleted thumbnails for %lu wide gamut captures and marked for rebuild", buf, 0xCu);
      }
      v26 = 1;
      goto LABEL_13;
    }
  }
  PLMigrationGetLog();
  v28 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v41 = v24;
    _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_ERROR, "Failed to enumerate thumbnails for wide gamut captures with error %@", buf, 0xCu);
  }

  v26 = 0;
LABEL_13:

  objc_autoreleasePoolPop(v30);
  return v26;
}

- (BOOL)_tryToPromoteUnknownAssetsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  NSObject *v10;
  BOOL v11;
  void *v12;
  void *v13;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint8_t buf[4];
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (-[PLModelMigrator isCloudPhotoLibraryEnabled](self, "isCloudPhotoLibraryEnabled"))
  {
    v5 = (void *)MEMORY[0x19AEC1554]();
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _tryToPromoteUnknownAssetsInStore:]", *MEMORY[0x1E0C97C38]);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = 0;
    +[PLManagedAsset assetsToConsiderForTypePromotionInContext:withExtensions:error:](PLManagedAsset, "assetsToConsiderForTypePromotionInContext:withExtensions:error:", v6, &unk_1E3763878, &v20);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v20;
    v16 = 0;
    v17 = &v16;
    v18 = 0x2020000000;
    v19 = 0;
    if (v7)
    {
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __53__PLModelMigrator__tryToPromoteUnknownAssetsInStore___block_invoke;
      v15[3] = &unk_1E3665110;
      v15[4] = &v16;
      objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v7, 1, v15);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (v9)
      {
        PLMigrationGetLog();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v22 = v9;
          _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Failed to enumerate unknown assets for promotion with error %@", buf, 0xCu);
        }
        v11 = 0;
      }
      else
      {
        -[PLModelMigrator _migrationThumbnailManagerWithStore:](self, "_migrationThumbnailManagerWithStore:", v4);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "addRebuildThumbnailsRequest");

        PLMigrationGetLog();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          v13 = (void *)v17[3];
          *(_DWORD *)buf = 134217984;
          v22 = v13;
          _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Promoted %lu assets from asset type unknown.", buf, 0xCu);
        }
        v9 = 0;
        v11 = 1;
      }
    }
    else
    {
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v22 = v8;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Failed to fetch for unknown assets for promotion with error %@", buf, 0xCu);
      }
      v11 = 0;
      v9 = v8;
    }

    _Block_object_dispose(&v16, 8);
    objc_autoreleasePoolPop(v5);
  }
  else
  {
    v11 = 1;
  }

  return v11;
}

- (BOOL)_fixMasterCloudLocalStateEnum:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  id v19;
  uint8_t buf[4];
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  PLMigrationGetLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEFAULT, "Fixing cloudLocalState enum for master", buf, 2u);
  }

  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixMasterCloudLocalStateEnum:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_alloc(MEMORY[0x1E0C97AB0]);
  +[PLCloudMaster entityName](PLCloudMaster, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithEntityName:", v10);

  objc_msgSend(v11, "setResultType:", 2);
  objc_msgSend(v11, "setPropertiesToUpdate:", &unk_1E3764580);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);

  v19 = 0;
  objc_msgSend(v8, "executeRequest:error:", v11, &v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v14)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v21 = v14;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Failed to fix pushed masters: %@", buf, 0xCu);
    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v13, "result");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v21 = v17;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Fixed %@ pushed masters, setting them to CPLIsUploaded", buf, 0xCu);

  }
  objc_msgSend(v8, "reset");

  objc_autoreleasePoolPop(v6);
  return v14 == 0;
}

- (BOOL)_fixTrashedDate:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  _BOOL4 v9;
  void *v10;
  BOOL v11;

  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixTrashedDate:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[PLModelMigrator _fixZeroTrashedDateForEntityName:inManagedObjectContext:](self, "_fixZeroTrashedDateForEntityName:inManagedObjectContext:", v8, v7);

  if (v9)
  {
    +[PLGenericAlbum entityName](PLGenericAlbum, "entityName");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLModelMigrator _fixZeroTrashedDateForEntityName:inManagedObjectContext:](self, "_fixZeroTrashedDateForEntityName:inManagedObjectContext:", v10, v7);

  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v7, "reset");

  objc_autoreleasePoolPop(v6);
  return v11;
}

- (BOOL)_fixZeroTrashedDateForEntityName:(id)a3 inManagedObjectContext:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  BOOL v15;
  uint64_t v16;
  _QWORD v18[5];
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t buf[4];
  _BYTE v25[18];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", 0.0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "predicateWithFormat:", CFSTR("trashedDate == %@"), v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v10);

  objc_msgSend(v7, "setFetchBatchSize:", 100);
  v19 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v7, &v19);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v19;
  if (v11)
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __75__PLModelMigrator__fixZeroTrashedDateForEntityName_inManagedObjectContext___block_invoke;
    v18[3] = &unk_1E3665520;
    v18[4] = &v20;
    objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v18);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      PLMigrationGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v25 = v5;
        *(_WORD *)&v25[8] = 2112;
        *(_QWORD *)&v25[10] = v13;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Failed to zero trashed date (%@): %@", buf, 0x16u);
      }
      v15 = 0;
    }
    else
    {
      PLMigrationGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v16 = v21[3];
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)v25 = v16;
        *(_WORD *)&v25[4] = 2112;
        *(_QWORD *)&v25[6] = v5;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Fixed %d zero trashed date (%@), setting them to nil", buf, 0x12u);
      }
      v13 = 0;
      v15 = 1;
    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v25 = v5;
      *(_WORD *)&v25[8] = 2112;
      *(_QWORD *)&v25[10] = v12;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Can't fetch request _fixZeroTrashedDate (%@): %@", buf, 0x16u);
    }
    v15 = 0;
    v13 = v12;
  }

  _Block_object_dispose(&v20, 8);
  return v15;
}

- (BOOL)_populateCloudResourceLocalStateInStor:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  BOOL v17;
  void *v18;
  _QWORD v20[5];
  id v21;
  uint8_t buf[8];
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t v26[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateCloudResourceLocalStateInStor:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Populating cloudLocalState for cloudResources", buf, 2u);
  }

  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLCloudResource entityName](PLCloudResource, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudMaster.cloudLocalState == %d OR asset.cloudLocalState == %d"), 1, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v12);
  objc_msgSend(v11, "setFetchBatchSize:", 100);
  *(_QWORD *)buf = 0;
  v23 = buf;
  v24 = 0x2020000000;
  v25 = 0;
  v21 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v11, &v21);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v21;
  if (v13)
  {
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 3221225472;
    v20[2] = __58__PLModelMigrator__populateCloudResourceLocalStateInStor___block_invoke;
    v20[3] = &unk_1E3665820;
    v20[4] = buf;
    objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v13, v20);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v26 = 138412290;
        v27 = v15;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Failed to populate cloudLocalState for cloudResources: %@", v26, 0xCu);
      }
      v17 = 0;
    }
    else
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v18 = (void *)*((_QWORD *)v23 + 3);
        *(_DWORD *)v26 = 134217984;
        v27 = v18;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Populated cloudLocalState for %ld cloudResources", v26, 0xCu);
      }
      v15 = 0;
      v17 = 1;
    }
  }
  else
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v26 = 138412290;
      v27 = v14;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Can't fetch cloudResources: %@", v26, 0xCu);
    }
    v17 = 0;
    v15 = v14;
  }

  objc_msgSend(v7, "reset");
  _Block_object_dispose(buf, 8);

  objc_autoreleasePoolPop(v6);
  return v17;
}

- (BOOL)_fixRawWithZeroDimensions:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[5];
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = (void *)MEMORY[0x19AEC1554]();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND (%K == 0 OR %K == 0 OR %K == 0 OR %K == 0)"), CFSTR("kind"), 0, CFSTR("width"), CFSTR("height"), CFSTR("additionalAttributes.originalWidth"), CFSTR("additionalAttributes.originalHeight"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v15[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v15, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v11);

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _fixRawWithZeroDimensions:]");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __45__PLModelMigrator__fixRawWithZeroDimensions___block_invoke;
  v14[3] = &__block_descriptor_40_e28_B24__0__NSManagedObject_8Q16l;
  v14[4] = a2;
  -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v12, v9, v5, v14);

  objc_autoreleasePoolPop(v6);
  return 1;
}

- (BOOL)_fixIncorrectHeifMetadataInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  BOOL v14;
  NSObject *v15;
  NSObject *v16;
  const char *v17;
  NSObject *v18;
  os_log_type_t v19;
  NSObject *v20;
  _QWORD v22[5];
  id v23;
  uint8_t buf[4];
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixIncorrectHeifMetadataInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLModelMigrator _predicateForInconsistentHeifAssets](self, "_predicateForInconsistentHeifAssets");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  v23 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v23);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v23;
  if (v11)
  {
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __52__PLModelMigrator__fixIncorrectHeifMetadataInStore___block_invoke;
    v22[3] = &unk_1E36740E0;
    v22[4] = self;
    objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v22);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    v14 = v13 == 0;
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = v15;
    if (v13)
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v25 = v13;
        v17 = "Failed to fix incorrect metadata for HEIF assets: %@";
        v18 = v16;
        v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
        _os_log_impl(&dword_199541000, v18, v19, v17, buf, 0xCu);
      }
    }
    else if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v25 = 0;
      v17 = "Fixed incorrect metadata for %ld HEIF assets";
      v18 = v16;
      v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }

    goto LABEL_12;
  }
  PLMigrationGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v25 = v12;
    _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Can't fetch HEIF assets with incorrect metadata: %@", buf, 0xCu);
  }

  v14 = 0;
  v13 = v12;
LABEL_12:
  objc_msgSend(v6, "reset");

  objc_autoreleasePoolPop(v5);
  return v14;
}

- (void)_fixIncorrectHeifMetadataForAsset:(id)a3
{
  id v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  const char *v12;
  NSObject *v13;
  os_log_type_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  void *v26;
  int v27;
  NSObject *v28;
  NSObject *v29;
  void *v30;
  const char *v31;
  NSObject *v32;
  os_log_type_t v33;
  NSObject *v34;
  void *v35;
  void *v36;
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  NSObject *v41;
  void *v42;
  void *v43;
  const char *v44;
  void *v45;
  NSObject *v46;
  void *v47;
  void *v48;
  int v49;
  NSObject *v50;
  NSObject *v51;
  void *v52;
  int v53;
  const char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint32_t v57;
  id v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  uint8_t buf[4];
  void *v64;
  __int16 v65;
  uint64_t v66;
  __int16 v67;
  void *v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  -[PLModelMigrator _predicateForInconsistentHeifAssets](self, "_predicateForInconsistentHeifAssets");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v6, "evaluateWithObject:", v5))
  {
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(a2);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v64 = v8;
      v65 = 2112;
      v66 = (uint64_t)v5;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEFAULT, "%@: Attempting to fix incorrect HEIF metadata for asset: %@", buf, 0x16u);

    }
    if (objc_msgSend(v5, "width") && objc_msgSend(v5, "height"))
    {
LABEL_13:
      v59 = v6;
      objc_msgSend(v5, "additionalAttributes");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v61, "originalFilename");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "pathExtension");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "uppercaseString");
      v17 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(v5, "pathForOriginalFile");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "filename");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "stringByDeletingPathExtension");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "stringByAppendingPathExtension:", v17);
      v21 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(v18, "stringByDeletingPathExtension");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v60 = (void *)v17;
      objc_msgSend(v22, "stringByAppendingPathExtension:", v17);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = objc_msgSend(v24, "fileExistsAtPath:", v18);

      if (!v25)
      {
        v58 = 0;
        goto LABEL_22;
      }
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v62 = 0;
      v27 = objc_msgSend(v26, "moveItemAtPath:toPath:error:", v18, v23, &v62);
      v58 = v62;

      PLMigrationGetLog();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = v28;
      if (v27)
      {
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          NSStringFromSelector(a2);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v64 = v30;
          v65 = 2112;
          v66 = (uint64_t)v18;
          v67 = 2112;
          v68 = v23;
          v31 = "%@: Moved original resource from %@ to %@";
          v32 = v29;
          v33 = OS_LOG_TYPE_DEFAULT;
LABEL_20:
          _os_log_impl(&dword_199541000, v32, v33, v31, buf, 0x20u);

        }
      }
      else if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(a2);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v64 = v30;
        v65 = 2112;
        v66 = (uint64_t)v18;
        v67 = 2112;
        v68 = v23;
        v31 = "%@: Failed to move the original resource from %@ to %@";
        v32 = v29;
        v33 = OS_LOG_TYPE_ERROR;
        goto LABEL_20;
      }

LABEL_22:
      objc_msgSend(v5, "setFilename:", v21);
      PLMigrationGetLog();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        NSStringFromSelector(a2);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v64 = v35;
        v65 = 2112;
        v66 = v21;
        _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_DEFAULT, "%@: Changed asset filename to %@", buf, 0x16u);

      }
      v36 = (void *)v21;
      v37 = a2;

      objc_msgSend(v5, "master");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "uuid");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLCloudResource cloudResourceForResourceType:forAssetUuid:forCloudMaster:](PLCloudResource, "cloudResourceForResourceType:forAssetUuid:forCloudMaster:", 1, v39, v38);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      if (v40)
      {
        objc_msgSend(v40, "setFilePath:", v23);
        PLMigrationGetLog();
        v41 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
        {
          NSStringFromSelector(v37);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v64 = v42;
          v65 = 2112;
          v66 = (uint64_t)v23;
          _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_DEFAULT, "%@: Changed filepath of original resource to %@", buf, 0x16u);

        }
      }
      objc_msgSend(v5, "setUniformTypeIdentifierFromOriginalFile");
      if (v38)
      {
        objc_msgSend(v5, "uniformTypeIdentifier");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v38, "setUniformTypeIdentifier:", v43);

      }
      v44 = v37;
      if (v40)
      {
        objc_msgSend(v5, "uniformTypeIdentifier");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "setUniformTypeIdentifier:", v45);

      }
      PLMigrationGetLog();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
      {
        NSStringFromSelector(v37);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "uniformTypeIdentifier");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v64 = v47;
        v65 = 2112;
        v66 = (uint64_t)v48;
        _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_DEFAULT, "%@: Changed UTI to %@", buf, 0x16u);

        v44 = v37;
      }

      if (objc_msgSend(v5, "kind") != 3)
        goto LABEL_42;
      v49 = objc_msgSend(v5, "promoteFromUnknownKind");
      PLMigrationGetLog();
      v50 = objc_claimAutoreleasedReturnValue();
      v51 = v50;
      if (v49)
      {
        if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
        {
          NSStringFromSelector(v44);
          v52 = (void *)objc_claimAutoreleasedReturnValue();
          v53 = objc_msgSend(v5, "kind");
          *(_DWORD *)buf = 138412546;
          v64 = v52;
          v65 = 1024;
          LODWORD(v66) = v53;
          v54 = "%@: Promoted asset kind from Unknown to %d";
          v55 = v51;
          v56 = OS_LOG_TYPE_DEFAULT;
          v57 = 18;
LABEL_40:
          _os_log_impl(&dword_199541000, v55, v56, v54, buf, v57);

        }
      }
      else if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(v44);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v64 = v52;
        v54 = "%@: Failed to promote the asset kind from Unknown";
        v55 = v51;
        v56 = OS_LOG_TYPE_ERROR;
        v57 = 12;
        goto LABEL_40;
      }

LABEL_42:
      v6 = v59;
      goto LABEL_43;
    }
    objc_msgSend(v5, "imageProperties");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_msgSend(v5, "setOriginalSizeAndOrientationFromImageProperties:", v9);
      objc_msgSend(v5, "setSizeAndOrientationFromImageProperties:", v9);
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        NSStringFromSelector(a2);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v64 = v11;
        v12 = "%@: Fixed asset dimensions";
        v13 = v10;
        v14 = OS_LOG_TYPE_DEFAULT;
LABEL_11:
        _os_log_impl(&dword_199541000, v13, v14, v12, buf, 0xCu);

      }
    }
    else
    {
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(a2);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v64 = v11;
        v12 = "%@: Failed to read image properties to fix asset dimensions";
        v13 = v10;
        v14 = OS_LOG_TYPE_ERROR;
        goto LABEL_11;
      }
    }

    goto LABEL_13;
  }
LABEL_43:

}

- (id)_predicateForInconsistentHeifAssets
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[4];

  v9[3] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K ENDSWITH[c] '.jpg'"), CFSTR("filename"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == 'public.data' OR %K == nil OR %K == ''"), CFSTR("uniformTypeIdentifier"), CFSTR("uniformTypeIdentifier"), CFSTR("uniformTypeIdentifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K ENDSWITH[c] '.heic' OR %K ENDSWITH[c] '.heif'"), CFSTR("additionalAttributes.originalFilename"), CFSTR("additionalAttributes.originalFilename"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0CB3528];
  v9[0] = v3;
  v9[1] = v4;
  v9[2] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "andPredicateWithSubpredicates:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (BOOL)_repushAssetsMatchingPredicate:(id)a3 inStore:(id)a4 withMaster:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  _BOOL4 v19;
  void *v20;
  BOOL v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  const __CFString *v25;
  void *v27;
  __CFString *v28;
  void *v29;
  void *context;
  void *v31;
  id v32;
  _QWORD v33[6];
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint8_t buf[4];
  const char *v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  const __CFString *v45;
  _BYTE v46[24];
  id v47;
  uint64_t v48;

  v5 = a5;
  v48 = *MEMORY[0x1E0C80C00];
  v32 = a3;
  v8 = a4;
  v9 = pl_dispatch_once();
  context = (void *)MEMORY[0x19AEC1554](v9);
  v29 = v8;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v8, "-[PLModelMigrator _repushAssetsMatchingPredicate:inStore:withMaster:]", *MEMORY[0x1E0C97C38]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "fetchRequestWithEntityName:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d AND %K != %d"), CFSTR("cloudLocalState"), 0, CFSTR("cloudLocalState"), 4);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForSupportedAssetTypesForUpload](PLManagedAsset, "predicateForSupportedAssetTypesForUpload");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "addObject:", v31);
  objc_msgSend(v15, "addObject:", v14);
  if (v32)
    objc_msgSend(v15, "addObject:");
  objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setPredicate:", v16);

  objc_msgSend(v13, "setFetchBatchSize:", 100);
  v39 = 0;
  objc_msgSend(v10, "executeFetchRequest:error:", v13, &v39);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v39;
  if (v17)
  {
    *(_QWORD *)v46 = 0;
    *(_QWORD *)&v46[8] = v46;
    *(_QWORD *)&v46[16] = 0x2020000000;
    v47 = 0;
    v35 = 0;
    v36 = &v35;
    v37 = 0x2020000000;
    v38 = 0;
    v33[0] = MEMORY[0x1E0C809B0];
    v33[1] = 3221225472;
    v33[2] = __69__PLModelMigrator__repushAssetsMatchingPredicate_inStore_withMaster___block_invoke;
    v33[3] = &unk_1E3665868;
    v19 = v5;
    v34 = v5;
    v33[4] = &v35;
    v33[5] = v46;
    objc_msgSend(v10, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v17, v33);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v20 == 0;
    if (v20)
    {
      PLMigrationGetLog();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v41 = "-[PLModelMigrator _repushAssetsMatchingPredicate:inStore:withMaster:]";
        v42 = 2112;
        v43 = v20;
        _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "%s save failed with error: %@", buf, 0x16u);
      }
    }
    else
    {
      PLMigrationGetLog();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v24 = *(void **)(*(_QWORD *)&v46[8] + 24);
        if (v19)
        {
          v27 = *(void **)(*(_QWORD *)&v46[8] + 24);
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("and %lu masters "), v36[3]);
          v25 = (const __CFString *)objc_claimAutoreleasedReturnValue();
          v24 = v27;
        }
        else
        {
          v25 = &stru_1E36789C0;
        }
        v28 = (__CFString *)v25;
        *(_DWORD *)buf = 136315650;
        v41 = "-[PLModelMigrator _repushAssetsMatchingPredicate:inStore:withMaster:]";
        v42 = 2048;
        v43 = v24;
        v44 = 2112;
        v45 = v25;
        _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "%s marked %lu assets %@to be repushed", buf, 0x20u);
        if (v19)

      }
    }

    _Block_object_dispose(&v35, 8);
    _Block_object_dispose(v46, 8);
  }
  else
  {
    PLMigrationGetLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v46 = 136315650;
      *(_QWORD *)&v46[4] = "-[PLModelMigrator _repushAssetsMatchingPredicate:inStore:withMaster:]";
      *(_WORD *)&v46[12] = 2112;
      *(_QWORD *)&v46[14] = v32;
      *(_WORD *)&v46[22] = 2112;
      v47 = v18;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "%s fetch failed with predicate %@, error: %@", v46, 0x20u);
    }

    v21 = 0;
  }

  objc_autoreleasePoolPop(context);
  return v21;
}

- (BOOL)_repushAssetsWithAnyUserConfirmedFaceInStore:(id)a3
{
  void *v4;
  id v5;
  void *v6;

  v4 = (void *)MEMORY[0x1E0CB3880];
  v5 = a3;
  objc_msgSend(v4, "predicateWithFormat:", CFSTR("SUBQUERY(detectedFaces, $f, $f.nameSource == %d).@count != 0"), 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[PLModelMigrator _repushAssetsMatchingPredicate:inStore:withMaster:](self, "_repushAssetsMatchingPredicate:inStore:withMaster:", v6, v5, 0);

  return (char)self;
}

- (BOOL)_fixAssetMasterResources:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  BOOL v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  int v19;
  int v20;
  void *context;
  _QWORD v23[4];
  NSObject *v24;
  uint64_t *v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int v35;
  uint8_t buf[4];
  const char *v37;
  __int16 v38;
  _BYTE v39[10];
  id v40;
  _QWORD v41[4];

  v41[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v32 = 0;
  v33 = &v32;
  v34 = 0x2020000000;
  v35 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixAssetMasterResources:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "fetchRequestWithEntityName:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v41[0] = CFSTR("master");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", v9);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d"), 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v10);
  objc_msgSend(v8, "setFetchBatchSize:", 100);
  v27 = 0;
  objc_msgSend(v5, "executeFetchRequest:error:", v8, &v27);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v27;
  if (v11)
  {
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = __44__PLModelMigrator__fixAssetMasterResources___block_invoke;
    v23[3] = &unk_1E3665890;
    v25 = &v32;
    v26 = &v28;
    v24 = v5;
    -[NSObject enumerateWithIncrementalSaveUsingObjects:withBlock:](v24, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v23);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13 == 0;
    if (v13)
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v13, "userInfo");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v37 = (const char *)v13;
        v38 = 2112;
        *(_QWORD *)v39 = v16;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_fixAssetMasterResources failed: %@ %@", buf, 0x16u);

      }
    }
    else
    {
      PLMigrationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v18 = objc_msgSend(v11, "count");
        v19 = *((_DWORD *)v33 + 6);
        v20 = *((_DWORD *)v29 + 6);
        *(_DWORD *)buf = 134218496;
        v37 = (const char *)v18;
        v38 = 1024;
        *(_DWORD *)v39 = v19;
        *(_WORD *)&v39[4] = 1024;
        *(_DWORD *)&v39[6] = v20;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Fixed %lu assets (noMaster: %d, noOriginal: %d)", buf, 0x18u);
      }
    }

    v17 = v24;
  }
  else
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      v37 = "-[PLModelMigrator _fixAssetMasterResources:]";
      v38 = 2112;
      *(_QWORD *)v39 = v10;
      *(_WORD *)&v39[8] = 2112;
      v40 = v12;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "%s fetch failed with predicate %@, error: %@", buf, 0x20u);
    }
    v14 = 0;
  }

  objc_autoreleasePoolPop(context);
  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&v32, 8);

  return v14;
}

- (BOOL)_fixNilCloudMasterGUID:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  int v16;
  int v17;
  _QWORD v19[4];
  id v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int v30;
  uint8_t buf[4];
  _BYTE v32[10];
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v27 = 0;
  v28 = &v27;
  v29 = 0x2020000000;
  v30 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixNilCloudMasterGUID:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLCloudMaster entityName](PLCloudMaster, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudMasterGUID == nil OR cloudMasterGUID == ''"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __42__PLModelMigrator__fixNilCloudMasterGUID___block_invoke;
  v19[3] = &unk_1E36658B8;
  v21 = &v27;
  v12 = v6;
  v20 = v12;
  v22 = &v23;
  objc_msgSend(v12, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v11, v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v32 = v13;
      *(_WORD *)&v32[8] = 2112;
      v33 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "_fixNilCloudMasterGUID failed: %@ %@", buf, 0x16u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v16 = *((_DWORD *)v28 + 6);
      v17 = *((_DWORD *)v24 + 6);
      *(_DWORD *)buf = 67109376;
      *(_DWORD *)v32 = v16;
      *(_WORD *)&v32[4] = 1024;
      *(_DWORD *)&v32[6] = v17;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Fixed %d assets, deleted %d masters", buf, 0xEu);
    }
  }

  objc_autoreleasePoolPop(v5);
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  return v13 == 0;
}

- (BOOL)_persistStoreUUIDToMobileCPLPlist:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  int v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  v6 = (void *)MEMORY[0x1E0D73190];
  v7 = *MEMORY[0x1E0D734E8];
  -[PLModelMigrator pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "readCPLPlistObjectWithKey:pathManager:", v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v9)
  {
    objc_msgSend(v4, "metadata");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "objectForKey:", *MEMORY[0x1E0C97A08]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = (void *)MEMORY[0x1E0D73190];
    -[PLModelMigrator pathManager](self, "pathManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "saveCPLPlistObject:forKey:pathManager:", v11, v7, v13);

    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v16 = 138412290;
      v17 = v11;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Persist the storeUUID %@", (uint8_t *)&v16, 0xCu);
    }

  }
  objc_autoreleasePoolPop(v5);

  return 1;
}

- (BOOL)_repushPersonsWithMergeTargetInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  int v19;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint8_t buf[4];
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _repushPersonsWithMergeTargetInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("mergeTargetPerson != nil"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v11);

  objc_msgSend(v10, "setFetchBatchSize:", 100);
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v10, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __56__PLModelMigrator__repushPersonsWithMergeTargetInStore___block_invoke;
  v21[3] = &unk_1E36657D0;
  v21[4] = &v22;
  objc_msgSend(v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, v21);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v13;
      v15 = "Failed to fetch persons with merge target: %@";
      v16 = v14;
      v17 = OS_LOG_TYPE_ERROR;
      v18 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v16, v17, v15, buf, v18);
    }
  }
  else
  {
    PLMigrationGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v19 = *((_DWORD *)v23 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v27) = v19;
      v15 = "Will repush %d persons with merge target";
      v16 = v14;
      v17 = OS_LOG_TYPE_DEFAULT;
      v18 = 8;
      goto LABEL_6;
    }
  }

  objc_msgSend(v7, "reset");
  _Block_object_dispose(&v22, 8);

  objc_autoreleasePoolPop(v6);
  return v13 == 0;
}

- (BOOL)_deletePersonsMissingUUIDInStore:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = (void *)MEMORY[0x1E0C97B48];
  v5 = a3;
  +[PLPerson entityName](PLPerson, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("personUUID == nil OR personUUID == ''"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", CFSTR("deletePersonsMissingUUID"), v7, v5, &__block_literal_global_1657);
  return (char)self;
}

- (BOOL)_retryQuarantinedAssetsAndFixResourceRelation:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  int v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  _QWORD v22[3];

  v22[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _retryQuarantinedAssetsAndFixResourceRelation:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLCloudResource entityName](PLCloudResource, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v22[0] = CFSTR("cloudMaster");
  v22[1] = CFSTR("asset");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v22, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v10);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudMaster != nil && asset != nil"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v11);
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v9, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v12, &__block_literal_global_1660);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v13)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = 138412546;
      v19 = (uint64_t)v13;
      v20 = 2112;
      v21 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "_retryQuarantinedAssetsAndFixResourceRelation saveResource: failed: %@ %@", (uint8_t *)&v18, 0x16u);

    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v18 = 134217984;
    v19 = objc_msgSend(v12, "count");
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Fixed %lu resources", (uint8_t *)&v18, 0xCu);
  }

  objc_autoreleasePoolPop(v5);
  return v13 == 0;
}

- (BOOL)_unquarantinedQuarantinedItems:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  BOOL v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  _QWORD v19[9];

  v19[8] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _unquarantinedQuarantinedItems:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = objc_opt_class();
  v19[1] = objc_opt_class();
  v19[2] = objc_opt_class();
  v19[3] = objc_opt_class();
  v19[4] = objc_opt_class();
  v19[5] = objc_opt_class();
  v19[6] = objc_opt_class();
  v19[7] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 8);
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        if (!-[PLModelMigrator _unquarantineClass:inManagedObject:](self, "_unquarantineClass:inManagedObject:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * i), v6, (_QWORD)v14))
        {
          v12 = 0;
          goto LABEL_11;
        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v9)
        continue;
      break;
    }
  }
  v12 = 1;
LABEL_11:

  objc_autoreleasePoolPop(v5);
  return v12;
}

- (BOOL)_unquarantineClass:(Class)a3 inManagedObject:(id)a4
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C97B48];
  v6 = a4;
  -[objc_class entityName](a3, "entityName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d"), 4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setPredicate:", v9);
  objc_msgSend(v8, "setFetchBatchSize:", 100);
  objc_msgSend(v6, "executeFetchRequest:error:", v8, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v10, &__block_literal_global_1662);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v11)
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      -[objc_class entityName](a3, "entityName");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v19 = (uint64_t)v14;
      v20 = 2112;
      v21 = v11;
      v22 = 2112;
      v23 = v15;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "unquarantined %@ failed: %@ %@", buf, 0x20u);

LABEL_6:
    }
  }
  else if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    v16 = objc_msgSend(v10, "count");
    -[objc_class entityName](a3, "entityName");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134218242;
    v19 = v16;
    v20 = 2112;
    v21 = v14;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "unquarantined %lu %@", buf, 0x16u);
    goto LABEL_6;
  }

  return v11 == 0;
}

- (BOOL)_fixUTIforSlowMoInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  NSObject *v19;
  char *v20;
  void *v21;
  id v23;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  id v27;
  __int16 v28;
  void *v29;
  const __CFString *v30;
  _QWORD v31[2];

  v31[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixUTIforSlowMoInStore:]", *MEMORY[0x1E0C97C38]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_alloc(MEMORY[0x1E0C97AB0]);
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithEntityName:", v9);

  objc_msgSend(v10, "setResultType:", 2);
  v11 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "predicateWithFormat:", CFSTR("%K = %d AND %K = %@"), CFSTR("kindSubtype"), 101, CFSTR("uniformTypeIdentifier"), v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setPredicate:", v13);
  v30 = CFSTR("uniformTypeIdentifier");
  objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v14;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, &v30, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPropertiesToUpdate:", v15);

  v23 = 0;
  objc_msgSend(v7, "executeRequest:error:", v10, &v23);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v23;
  PLMigrationGetLog();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = v18;
  if (v16)
  {
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v16, "result");
      v20 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v25 = v20;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "Fixed UTI for %@ slow-mo videos", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v17, "userInfo");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v25 = "-[PLModelMigrator _fixUTIforSlowMoInStore:]";
    v26 = 2112;
    v27 = v17;
    v28 = 2112;
    v29 = v21;
    _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v6);

  return v16 != 0;
}

- (BOOL)_removeAutoloopCacheIfExists
{
  void *v2;
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;

  v2 = (void *)MEMORY[0x1E0C99E98];
  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "privateCacheDirectoryWithSubType:", 11);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 1;
  objc_msgSend(v2, "fileURLWithPath:isDirectory:", v4, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v7, "directoryExistsAtPath:", v8);

    if (v9)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v10, "removeItemAtURL:error:", v6, 0);

    }
    else
    {
      v5 = 1;
    }
  }

  return v5;
}

- (BOOL)_storeContainsFaceCrops:(id)a3 success:(BOOL *)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  BOOL v14;
  NSObject *v15;
  void *v16;
  void *v18;
  id v19;
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  id v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v6, "-[PLModelMigrator _storeContainsFaceCrops:success:]", *MEMORY[0x1E0C97C38]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0C97B48];
  +[PLFaceCrop entityName](PLFaceCrop, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "setFetchLimit:", 1);
  v19 = 0;
  v12 = objc_msgSend(v8, "countForFetchRequest:error:", v11, &v19);
  v13 = v19;
  v14 = v12 != 0x7FFFFFFFFFFFFFFFLL;
  if (v12 == 0x7FFFFFFFFFFFFFFFLL)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "userInfo");
      v18 = v7;
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v21 = "-[PLModelMigrator _storeContainsFaceCrops:success:]";
      v22 = 2112;
      v23 = v13;
      v24 = 2112;
      v25 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%s failed to count face crops in store: %@ %@", buf, 0x20u);

      v7 = v18;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Library contains at least 1 faceCrop, skipping some steps to prepare local model for faces sync", buf, 2u);
    }
LABEL_7:

    goto LABEL_8;
  }
  v14 = 0;
LABEL_8:

  objc_autoreleasePoolPop(v7);
  if (a4)
    *a4 = v12 != 0x7FFFFFFFFFFFFFFFLL;

  return v14;
}

- (BOOL)_markMigrationVerifiedTypePersonsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  BOOL v26;
  NSObject *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  char *v31;
  const char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint32_t v35;
  void *v36;
  void *v37;
  char *v38;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *context;
  id v48;
  id v49;
  uint8_t buf[4];
  const char *v51;
  __int16 v52;
  id v53;
  __int16 v54;
  char *v55;
  const __CFString *v56;
  void *v57;
  _QWORD v58[7];

  v58[5] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _markMigrationVerifiedTypePersonsInStore:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("verifiedType"), 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K.@count = 0"), CFSTR("detectedFaces"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = nil OR %K = %@"), CFSTR("fullName"), CFSTR("fullName"), &stru_1E36789C0);
  v8 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = nil"), CFSTR("contactMatchingDictionary"));
  v9 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("type"), 0);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  v58[0] = v6;
  v58[1] = v7;
  v45 = (void *)v9;
  v46 = (void *)v8;
  v58[2] = v8;
  v58[3] = v9;
  v44 = (void *)v10;
  v58[4] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v58, 5);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v12);
  v13 = objc_claimAutoreleasedReturnValue();

  v14 = (void *)MEMORY[0x1E0C97B48];
  +[PLPerson entityName](PLPerson, "entityName");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "fetchRequestWithEntityName:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v43 = (void *)v13;
  objc_msgSend(v16, "setPredicate:", v13);
  objc_msgSend(v16, "setResultType:", 1);
  v49 = 0;
  objc_msgSend(v5, "executeFetchRequest:error:", v16, &v49);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v49;
  if (v17)
  {
    v40 = v4;
    v19 = (void *)MEMORY[0x1E0C97AB0];
    +[PLPerson entityName](PLPerson, "entityName");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "batchUpdateRequestWithEntityName:", v20);
    v21 = objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@"), v17);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject setPredicate:](v21, "setPredicate:", v22);

    v56 = CFSTR("verifiedType");
    v57 = &unk_1E375E460;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v57, &v56, 1);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject setPropertiesToUpdate:](v21, "setPropertiesToUpdate:", v23);

    -[NSObject setResultType:](v21, "setResultType:", 2);
    v48 = v18;
    objc_msgSend(v5, "executeRequest:error:", v21, &v48);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = v48;

    v26 = v24 != 0;
    PLMigrationGetLog();
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = v27;
    if (v24)
    {
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v24, "result");
        v41 = v7;
        v29 = v6;
        v30 = v5;
        v31 = (char *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v51 = v31;
        v32 = "Mark migration verified type on %@ persons";
        v33 = v28;
        v34 = OS_LOG_TYPE_DEFAULT;
        v35 = 12;
LABEL_10:
        _os_log_impl(&dword_199541000, v33, v34, v32, buf, v35);

        v5 = v30;
        v6 = v29;
        v7 = v41;
      }
    }
    else if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v25, "userInfo");
      v41 = v7;
      v29 = v6;
      v30 = v5;
      v31 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v51 = "-[PLModelMigrator _markMigrationVerifiedTypePersonsInStore:]";
      v52 = 2112;
      v53 = v25;
      v54 = 2112;
      v55 = v31;
      v32 = "%s: failed to update: %@ %@";
      v33 = v28;
      v34 = OS_LOG_TYPE_ERROR;
      v35 = 32;
      goto LABEL_10;
    }

    v4 = v40;
    goto LABEL_12;
  }
  v42 = v7;
  v36 = v6;
  v37 = v5;
  PLMigrationGetLog();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v18, "userInfo");
    v38 = (char *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v51 = "-[PLModelMigrator _markMigrationVerifiedTypePersonsInStore:]";
    v52 = 2112;
    v53 = v18;
    v54 = 2112;
    v55 = v38;
    _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "%s: failed to fetch object IDs: %@ %@", buf, 0x20u);

  }
  v26 = 0;
  v25 = v18;
  v5 = v37;
  v6 = v36;
  v7 = v42;
LABEL_12:

  objc_autoreleasePoolPop(context);
  return v26;
}

- (BOOL)_populateCloudNameSourceOnFacesInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  char *v17;
  void *v18;
  id v20;
  uint8_t buf[4];
  const char *v22;
  __int16 v23;
  id v24;
  __int16 v25;
  void *v26;
  const __CFString *v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateCloudNameSourceOnFacesInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97AB0];
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "batchUpdateRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d AND %K != %d"), CFSTR("nameSource"), 0, CFSTR("nameSource"), 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v27 = CFSTR("cloudNameSource");
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("nameSource"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToUpdate:", v12);

  objc_msgSend(v9, "setResultType:", 2);
  v20 = 0;
  objc_msgSend(v6, "executeRequest:error:", v9, &v20);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v20;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v13)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v13, "result");
      v17 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v22 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Populated cloud name source for %@ faces", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v14, "userInfo");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v22 = "-[PLModelMigrator _populateCloudNameSourceOnFacesInStore:]";
    v23 = 2112;
    v24 = v14;
    v25 = 2112;
    v26 = v18;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v5);

  return v13 != 0;
}

- (BOOL)_populateCloudVerifiedTypeOnPersonsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  char *v17;
  void *v18;
  id v20;
  uint8_t buf[4];
  const char *v22;
  __int16 v23;
  id v24;
  __int16 v25;
  void *v26;
  const __CFString *v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _populateCloudVerifiedTypeOnPersonsInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97AB0];
  +[PLPerson entityName](PLPerson, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "batchUpdateRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d AND %K != %d"), CFSTR("verifiedType"), 0, CFSTR("verifiedType"), 0xFFFFFFFFLL);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v27 = CFSTR("cloudVerifiedType");
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("verifiedType"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToUpdate:", v12);

  objc_msgSend(v9, "setResultType:", 2);
  v20 = 0;
  objc_msgSend(v6, "executeRequest:error:", v9, &v20);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v20;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v13)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v13, "result");
      v17 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v22 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Populated cloud verified type for %@ persons", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v14, "userInfo");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v22 = "-[PLModelMigrator _populateCloudVerifiedTypeOnPersonsInStore:]";
    v23 = 2112;
    v24 = v14;
    v25 = 2112;
    v26 = v18;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v5);

  return v13 != 0;
}

- (BOOL)_removeUntrackedPersonMetadataInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t j;
  void *v30;
  void *v31;
  _BOOL4 v32;
  id v33;
  char v34;
  id v35;
  NSObject *v36;
  void *v37;
  NSObject *v38;
  void *v39;
  BOOL v40;
  void *v41;
  int v42;
  int v43;
  NSObject *v44;
  NSObject *v45;
  void *v46;
  char v47;
  NSObject *v48;
  void *v49;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  const char *v58;
  char v59;
  void *v60;
  id obj;
  unsigned __int8 v62;
  id v63;
  id v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  id v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  id v74;
  int buf;
  const char *v76;
  __int16 v77;
  id v78;
  __int16 v79;
  void *v80;
  _BYTE v81[128];
  _BYTE v82[128];
  _QWORD v83[4];

  v83[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _removeUntrackedPersonMetadataInStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLPerson fetchRequest](PLPerson, "fetchRequest");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLPerson predicateForPersistence](PLPerson, "predicateForPersistence");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  objc_msgSend(v7, "setFetchBatchSize:", 100);
  v83[0] = CFSTR("personUUID");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v83, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPropertiesToFetch:", v9);

  v74 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v7, &v74);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v74;
  if (v10)
  {
    v55 = v7;
    v56 = v6;
    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v70 = 0u;
    v71 = 0u;
    v72 = 0u;
    v73 = 0u;
    v54 = v10;
    v13 = v10;
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v70, v82, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v71;
      do
      {
        for (i = 0; i != v15; ++i)
        {
          if (*(_QWORD *)v71 != v16)
            objc_enumerationMutation(v13);
          objc_msgSend(*(id *)(*((_QWORD *)&v70 + 1) + 8 * i), "personUUID");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "addObject:", v18);

        }
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v70, v82, 16);
      }
      while (v15);
    }

    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (void *)MEMORY[0x1E0C99E98];
    -[PLModelMigrator pathManager](self, "pathManager");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "privateDirectoryWithSubType:createIfNeeded:error:", 5, 0, 0);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "fileURLWithPath:isDirectory:", v22, 1);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    v69 = v11;
    objc_msgSend(v19, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v23, 0, 1, &v69);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = v69;

    v60 = v19;
    v53 = v23;
    v57 = v24;
    if (v24)
    {
      v51 = v5;
      v52 = v4;
      v67 = 0u;
      v68 = 0u;
      v65 = 0u;
      v66 = 0u;
      obj = v24;
      v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v65, v81, 16);
      if (v26)
      {
        v27 = v26;
        v58 = 0;
        v28 = *(_QWORD *)v66;
        v59 = 1;
        do
        {
          for (j = 0; j != v27; ++j)
          {
            if (*(_QWORD *)v66 != v28)
              objc_enumerationMutation(obj);
            v30 = *(void **)(*((_QWORD *)&v65 + 1) + 8 * j);
            objc_msgSend(v30, "path");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            v64 = 0;
            v32 = +[PLPersistedPersonMetadata isValidPath:outPersonUUID:](PLPersistedPersonMetadata, "isValidPath:outPersonUUID:", v31, &v64);
            v33 = v64;

            if (v32 && (objc_msgSend(v12, "containsObject:", v33) & 1) == 0)
            {
              v63 = v25;
              v34 = objc_msgSend(v60, "removeItemAtURL:error:", v30, &v63);
              v35 = v63;

              if ((v34 & 1) != 0)
              {
                ++v58;
                v59 = 1;
              }
              else
              {
                PLMigrationGetLog();
                v36 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
                {
                  objc_msgSend(v35, "userInfo");
                  v37 = (void *)objc_claimAutoreleasedReturnValue();
                  buf = 136315650;
                  v76 = "-[PLModelMigrator _removeUntrackedPersonMetadataInStore:]";
                  v77 = 2112;
                  v78 = v35;
                  v79 = 2112;
                  v80 = v37;
                  _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "%s: failed to remove item: %@ %@", (uint8_t *)&buf, 0x20u);

                }
                v59 = 0;
              }
              v25 = v35;
            }

          }
          v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v65, v81, 16);
        }
        while (v27);
      }
      else
      {
        v58 = 0;
        v59 = 1;
      }

      PLMigrationGetLog();
      v48 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
      {
        buf = 134217984;
        v76 = v58;
        _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_DEFAULT, "Removed %lu untracked person metadata files", (uint8_t *)&buf, 0xCu);
      }

      v5 = v51;
      v4 = v52;
      v7 = v55;
      v6 = v56;
      v49 = v53;
      v10 = v54;
      v47 = v59;
    }
    else
    {
      v62 = 0;
      objc_msgSend(v23, "path");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = objc_msgSend(v19, "fileExistsAtPath:isDirectory:", v41, &v62);
      v43 = v62;

      PLMigrationGetLog();
      v44 = objc_claimAutoreleasedReturnValue();
      v45 = v44;
      if (v42 && v43)
      {
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v25, "userInfo");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          buf = 136315650;
          v76 = "-[PLModelMigrator _removeUntrackedPersonMetadataInStore:]";
          v77 = 2112;
          v78 = v25;
          v79 = 2112;
          v80 = v46;
          _os_log_impl(&dword_199541000, v45, OS_LOG_TYPE_ERROR, "%s: failed to return contents of directory: %@ %@", (uint8_t *)&buf, 0x20u);

        }
        v47 = 0;
      }
      else
      {
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
        {
          buf = 136315138;
          v76 = "-[PLModelMigrator _removeUntrackedPersonMetadataInStore:]";
          _os_log_impl(&dword_199541000, v45, OS_LOG_TYPE_DEFAULT, "%s: no faces metadata directory exists", (uint8_t *)&buf, 0xCu);
        }
        v47 = 1;
      }
      v7 = v55;
      v6 = v56;
      v49 = v53;
      v10 = v54;

    }
    v40 = v47 & 1;
    v11 = v25;
  }
  else
  {
    PLMigrationGetLog();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v11, "userInfo");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      buf = 136315650;
      v76 = "-[PLModelMigrator _removeUntrackedPersonMetadataInStore:]";
      v77 = 2112;
      v78 = v11;
      v79 = 2112;
      v80 = v39;
      _os_log_impl(&dword_199541000, v38, OS_LOG_TYPE_ERROR, "%s: failed to fetch persons: %@ %@", (uint8_t *)&buf, 0x20u);

    }
    v40 = 0;
  }

  objc_autoreleasePoolPop(v5);
  return v40;
}

- (BOOL)_ensureAllUserVerifiedPersonsHaveFaceCropsInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  +[PLPerson fetchRequest](PLPerson, "fetchRequest");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d AND %K.@count > 0 AND SUBQUERY(%K, $f, $f.%K = %d).@count = 0"), CFSTR("verifiedType"), 1, CFSTR("detectedFaces"), CFSTR("detectedFaces"), CFSTR("nameSource"), 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _ensureAllUserVerifiedPersonsHaveFaceCropsInStore:]");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v7, v5, v4, &__block_literal_global_1693);

  return (char)self;
}

- (BOOL)_filterSceneClassificationsInStore:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  id v16;
  BOOL v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  void *context;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  _QWORD v28[4];
  id v29;
  __int128 *v30;
  uint8_t buf[4];
  void *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v26 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _filterSceneClassificationsInStore:]");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("scene-thresholds"), &unk_1E375E478);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "URLForResource:withExtension:", v25, CFSTR("plist"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithContentsOfURL:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v26, "-[PLModelMigrator _filterSceneClassificationsInStore:]", *MEMORY[0x1E0C97C38]);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLSceneClassification entityName](PLSceneClassification, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("sceneIdentifier >= 0"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);
  if (v6)
  {
    *(_QWORD *)&v33 = 0;
    *((_QWORD *)&v33 + 1) = &v33;
    v34 = 0x2020000000;
    v35 = 0;
    v28[0] = MEMORY[0x1E0C809B0];
    v28[1] = 3221225472;
    v28[2] = __54__PLModelMigrator__filterSceneClassificationsInStore___block_invoke;
    v28[3] = &unk_1E3665980;
    v29 = v6;
    v30 = &v33;
    if (-[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v24, v9, v26, v28))
    {
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(*((_QWORD *)&v33 + 1) + 24));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v32 = v12;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Deleted %@ sceneclassifications", buf, 0xCu);

      }
    }
    else
    {
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Failed to delete sceneclassifications", buf, 2u);
      }
    }

    _Block_object_dispose(&v33, 8);
    v17 = 1;
  }
  else
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v33) = 138412290;
      *(_QWORD *)((char *)&v33 + 4) = v5;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Failed to located scene thresholds file: %@. Deleting everying", (uint8_t *)&v33, 0xCu);
    }

    v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v9);
    objc_msgSend(v14, "setResultType:", 2);
    v27 = 0;
    objc_msgSend(v23, "executeRequest:error:", v14, &v27);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = v27;
    v17 = v15 != 0;
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = v18;
    if (v15)
    {
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v15, "result");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(v33) = 138412290;
        *(_QWORD *)((char *)&v33 + 4) = v20;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "Deleted %@ sceneclassifications", (uint8_t *)&v33, 0xCu);

      }
    }
    else if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v33) = 138412290;
      *(_QWORD *)((char *)&v33 + 4) = v16;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Failed to delete sceneclassifications with error: %@", (uint8_t *)&v33, 0xCu);
    }

  }
  objc_autoreleasePoolPop(context);

  return v17;
}

- (BOOL)_deleteVideoThumbsMadeFromPreferredFrameInStore:(id)a3
{
  id v4;
  id v5;
  _QWORD v7[5];
  id v8;

  v4 = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __67__PLModelMigrator__deleteVideoThumbsMadeFromPreferredFrameInStore___block_invoke;
  v7[3] = &unk_1E36659A8;
  v7[4] = self;
  v8 = v4;
  v5 = v4;
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _deleteVideoThumbsMadeFromPreferredFrameInStore:]", v5, v7);

  return (char)self;
}

- (BOOL)_resetAnalysisStateForVideosInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __55__PLModelMigrator__resetAnalysisStateForVideosInStore___block_invoke;
  v4[3] = &unk_1E36659D0;
  v4[4] = self;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _resetAnalysisStateForVideosInStore:]", a3, v4);
}

- (BOOL)_fixImportedAssetsFromCMMSavedInDCIMWithWrongSavedAssetType:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  char *v26;
  BOOL v27;
  NSObject *v28;
  NSObject *v29;
  char *v30;
  void *v31;
  void *v33;
  void *context;
  void *v35;
  id v36;
  id v37;
  const __CFString *v38;
  void *v39;
  uint8_t buf[4];
  const char *v41;
  __int16 v42;
  id v43;
  __int16 v44;
  void *v45;
  _QWORD v46[4];

  v46[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v5 = *MEMORY[0x1E0C97C38];
  v35 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixImportedAssetsFromCMMSavedInDCIMWithWrongSavedAssetType:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("additionalAttributes.importedBy"), 7);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v46[0] = v11;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudPhotoLibraryAsset"), 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v46[1] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K CONTAINS %@"), CFSTR("directory"), CFSTR("DCIM"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v46[2] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v15);

  objc_msgSend(v9, "setResultType:", 1);
  v37 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v37);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v37;
  if (!v16)
  {
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v17, "userInfo");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v41 = "-[PLModelMigrator _fixImportedAssetsFromCMMSavedInDCIMWithWrongSavedAssetType:]";
      v42 = 2112;
      v43 = v17;
      v44 = 2112;
      v45 = v31;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "%s: failed to fetch object IDs: %@ %@", buf, 0x20u);

    }
    v27 = 0;
    goto LABEL_13;
  }
  if (objc_msgSend(v16, "count"))
  {
    v33 = v6;
    -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _fixImportedAssetsFromCMMSavedInDCIMWithWrongSavedAssetType:]", v5);
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = (void *)MEMORY[0x1E0C97AB0];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "batchUpdateRequestWithEntityName:", v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self in %@"), v16);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setPredicate:", v22);

    v38 = CFSTR("savedAssetType");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForCameraAsset"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = v23;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v39, &v38, 1);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setPropertiesToUpdate:", v24);

    objc_msgSend(v21, "setResultType:", 2);
    v36 = 0;
    -[NSObject executeRequest:error:](v18, "executeRequest:error:", v21, &v36);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = (char *)v36;
    v27 = v25 != 0;
    PLMigrationGetLog();
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = v28;
    if (v25)
    {
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v25, "result");
        v30 = (char *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v41 = v30;
        _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_DEFAULT, "Set savedAssetType to Camera for %@ imported CMM assets that are saved in DCIM folder with CloudPhotoLibrary savedAssetType", buf, 0xCu);

      }
    }
    else if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v41 = v26;
      _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "Failed to fix imported CMM assets that are saved in DCIM folder with CloudPhotoLibrary savedAssetType with error with error %@", buf, 0xCu);
    }

    v6 = v33;
LABEL_13:

    goto LABEL_14;
  }
  v27 = 1;
LABEL_14:

  objc_autoreleasePoolPop(context);
  return v27;
}

- (BOOL)_deleteExtraneousAdjustedFullSizeResourcesForSloMoAssetsWithStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  id v24;
  uint8_t buf[4];
  const char *v26;
  __int16 v27;
  id v28;
  _QWORD v29[5];

  v29[4] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _deleteExtraneousAdjustedFullSizeResourcesForSloMoAssetsWithStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset.%K == %d"), CFSTR("kindSubtype"), 101);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = v11;
  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", CFSTR("asset"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v29[1] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K <= %d"), CFSTR("localAvailability"), 0xFFFFFFFFLL);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v29[2] = v13;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("remoteAvailability"), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v29[3] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v29, 4);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "andPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v16);

  v17 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v9);
  objc_msgSend(v17, "setResultType:", 2);
  v24 = 0;
  objc_msgSend(v6, "executeRequest:error:", v17, &v24);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = v24;
  PLMigrationGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = v20;
  if (v18)
  {
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v18, "result");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315394;
      v26 = "-[PLModelMigrator _deleteExtraneousAdjustedFullSizeResourcesForSloMoAssetsWithStore:]";
      v27 = 2112;
      v28 = v22;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "%s deleted %@ resource rows.", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315394;
    v26 = "-[PLModelMigrator _deleteExtraneousAdjustedFullSizeResourcesForSloMoAssetsWithStore:]";
    v27 = 2112;
    v28 = v19;
    _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "%s failed: %@", buf, 0x16u);
  }

  objc_msgSend(v6, "reset");
  objc_autoreleasePoolPop(v5);

  return v18 != 0;
}

- (BOOL)_updateMissingFileSystemVolumeUuidInStore:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = (void *)MEMORY[0x1E0C97B48];
  v5 = a3;
  +[PLFileSystemVolume entityName](PLFileSystemVolume, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("uuid == nil"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _updateMissingFileSystemVolumeUuidInStore:]");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v9, v7, v5, &__block_literal_global_1722);

  return (char)self;
}

- (BOOL)_updateCPLMarkerFiles
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  const char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint32_t v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  const char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint32_t v25;
  void *v26;
  void *v27;
  void *v28;
  int v29;
  id v30;
  NSObject *v31;
  NSObject *v32;
  const char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint32_t v36;
  id v38;
  id v39;
  id v40;
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(CFSTR("/var/mobile/Media/PhotoData"), "stringByAppendingPathComponent:", CFSTR("pauseICloudPhotos"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v3, "fileExistsAtPath:", v4))
  {
    v8 = 0;
    goto LABEL_10;
  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pauseICloudPhotosFilePath");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v40 = 0;
  v7 = objc_msgSend(v3, "moveItemAtPath:toPath:error:", v4, v6, &v40);
  v8 = v40;
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v42 = v4;
      v43 = 2112;
      v44 = v6;
      v11 = "Migrated pause marker from %@ to %@";
      v12 = v10;
      v13 = OS_LOG_TYPE_DEFAULT;
      v14 = 22;
LABEL_8:
      _os_log_impl(&dword_199541000, v12, v13, v11, buf, v14);
    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412802;
    v42 = v4;
    v43 = 2112;
    v44 = v6;
    v45 = 2112;
    v46 = v8;
    v11 = "Failed to migrate pause marker from %@ to %@: %@";
    v12 = v10;
    v13 = OS_LOG_TYPE_ERROR;
    v14 = 32;
    goto LABEL_8;
  }

LABEL_10:
  objc_msgSend(CFSTR("/var/mobile/Media/PhotoData"), "stringByAppendingPathComponent:", CFSTR("enableICloudPhotos"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v3, "fileExistsAtPath:", v15))
  {
    v19 = v8;
    goto LABEL_19;
  }
  -[PLModelMigrator pathManager](self, "pathManager");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "enableICloudPhotosFilePath");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v39 = v8;
  v18 = objc_msgSend(v3, "moveItemAtPath:toPath:error:", v15, v17, &v39);
  v19 = v39;

  PLMigrationGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = v20;
  if (v18)
  {
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v42 = v15;
      v43 = 2112;
      v44 = v17;
      v22 = "Migrated enable marker from %@ to %@";
      v23 = v21;
      v24 = OS_LOG_TYPE_DEFAULT;
      v25 = 22;
LABEL_17:
      _os_log_impl(&dword_199541000, v23, v24, v22, buf, v25);
    }
  }
  else if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412802;
    v42 = v15;
    v43 = 2112;
    v44 = v17;
    v45 = 2112;
    v46 = v19;
    v22 = "Failed to migrate enable marker from %@ to %@: %@";
    v23 = v21;
    v24 = OS_LOG_TYPE_ERROR;
    v25 = 32;
    goto LABEL_17;
  }

LABEL_19:
  objc_msgSend(CFSTR("/var/mobile/Media/PhotoData"), "stringByAppendingPathComponent:", CFSTR("disableICloudPhotos"));
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "fileExistsAtPath:", v26))
  {
    -[PLModelMigrator pathManager](self, "pathManager");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "disableICloudPhotosFilePath");
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    v38 = v19;
    v29 = objc_msgSend(v3, "moveItemAtPath:toPath:error:", v26, v28, &v38);
    v30 = v38;

    PLMigrationGetLog();
    v31 = objc_claimAutoreleasedReturnValue();
    v32 = v31;
    if (v29)
    {
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v42 = v15;
        v43 = 2112;
        v44 = v28;
        v33 = "Migrated disable marker from %@ to %@";
        v34 = v32;
        v35 = OS_LOG_TYPE_DEFAULT;
        v36 = 22;
LABEL_26:
        _os_log_impl(&dword_199541000, v34, v35, v33, buf, v36);
      }
    }
    else if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412802;
      v42 = v26;
      v43 = 2112;
      v44 = v28;
      v45 = 2112;
      v46 = v30;
      v33 = "Failed to migrate disable marker from %@ to %@: %@";
      v34 = v32;
      v35 = OS_LOG_TYPE_ERROR;
      v36 = 32;
      goto LABEL_26;
    }

    goto LABEL_28;
  }
  v30 = v19;
LABEL_28:

  return 1;
}

- (BOOL)_updateAlbumDatesInStore:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v4 = a3;
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 1;
  v5 = pl_dispatch_once();
  v6 = (void *)MEMORY[0x19AEC1554](v5);
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _updateAlbumDatesInStore:]", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __44__PLModelMigrator__updateAlbumDatesInStore___block_invoke;
  v10[3] = &unk_1E3677C68;
  v8 = v7;
  v11 = v8;
  v12 = &v13;
  objc_msgSend(v8, "performBlockAndWait:", v10);

  objc_autoreleasePoolPop(v6);
  LOBYTE(v6) = *((_BYTE *)v14 + 24);
  _Block_object_dispose(&v13, 8);

  return (char)v6;
}

- (BOOL)_fixKindSubtypeForLoopingVideoLivePhotosInStore:(id)a3
{
  return 1;
}

- (BOOL)_fixWhiteBalanceValuesInStore:(id)a3
{
  return 1;
}

- (BOOL)_fixHasLocationSmartAlbum:(id)a3
{
  return 1;
}

- (BOOL)_reconstructImageExtendedAttributes:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[5];
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1E0C97B48];
  v5 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v13[0] = CFSTR("master");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setRelationshipKeyPathsForPrefetching:", v8);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind == %d AND extendedAttributes != nil AND extendedAttributes.iso == 0"), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v9);

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _reconstructImageExtendedAttributes:]");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __55__PLModelMigrator__reconstructImageExtendedAttributes___block_invoke;
  v12[3] = &unk_1E3665618;
  v12[4] = self;
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v10, v7, v5, v12);

  return (char)self;
}

- (BOOL)_removeUnneededAnalysisStateTableEntries:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  id v20;
  uint8_t buf[4];
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", a3, "-[PLModelMigrator _removeUnneededAnalysisStateTableEntries:]", *MEMORY[0x1E0C97C38]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_alloc(MEMORY[0x1E0C97B48]);
  +[PLAssetAnalysisState entityName](PLAssetAnalysisState, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithEntityName:", v5);

  v7 = (void *)MEMORY[0x1E0CB3880];
  +[PLAssetAnalysisState workerTypesPersistingAnalysisState](PLAssetAnalysisState, "workerTypesPersistingAnalysisState");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "predicateWithFormat:", CFSTR("NOT (workerType IN %@)"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setPredicate:", v9);
  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v6);
  v20 = 0;
  objc_msgSend(v3, "executeRequest:error:", v10, &v20);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v20;
  PLMigrationGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (v11)
  {
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v15 = "deleted unused analysis state table entries";
      v16 = v14;
      v17 = OS_LOG_TYPE_DEFAULT;
      v18 = 2;
LABEL_6:
      _os_log_impl(&dword_199541000, v16, v17, v15, buf, v18);
    }
  }
  else if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v22 = v12;
    v15 = "error deleting unused analysis state table entries: %@";
    v16 = v14;
    v17 = OS_LOG_TYPE_ERROR;
    v18 = 12;
    goto LABEL_6;
  }

  return v11 != 0;
}

- (BOOL)_fixSidecarUTIsAndDataStoreSubtype:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = (void *)MEMORY[0x1E0C97B48];
  v5 = a3;
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %d AND %K = %d"), CFSTR("localAvailability"), 1, CFSTR("resourceType"), 5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _fixSidecarUTIsAndDataStoreSubtype:]");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v9, v7, v5, &__block_literal_global_1739);

  return (char)self;
}

- (BOOL)_fixUTIForRDMigrationInStore:(id)a3
{
  return 1;
}

- (BOOL)_regenerateSharedStreamsDataStoreKeysDataInStore:(id)a3 deferHintChanges:(BOOL)a4
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[4];
  BOOL v15;
  _QWORD v16[3];

  v16[2] = *MEMORY[0x1E0C80C00];
  v6 = (void *)MEMORY[0x1E0C97B48];
  v7 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setFetchBatchSize:", 100);
  objc_msgSend(v9, "setPredicate:", v10);
  v16[0] = CFSTR("albums");
  v16[1] = CFSTR("modernResources");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v11);

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _regenerateSharedStreamsDataStoreKeysDataInStore:deferHintChanges:]");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __85__PLModelMigrator__regenerateSharedStreamsDataStoreKeysDataInStore_deferHintChanges___block_invoke;
  v14[3] = &__block_descriptor_33_e28_B24__0__NSManagedObject_8Q16l;
  v15 = a4;
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v12, v9, v7, v14);

  return (char)self;
}

- (BOOL)_fixLocationValuesInStore:(id)a3
{
  return 1;
}

- (BOOL)_invalidateReverseGeocodingDataInStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v4 = a3;
  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v15 = 1;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _invalidateReverseGeocodingDataInStore:]", 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __58__PLModelMigrator__invalidateReverseGeocodingDataInStore___block_invoke;
  v9[3] = &unk_1E3677C68;
  v7 = v6;
  v10 = v7;
  v11 = &v12;
  objc_msgSend(v7, "performBlockAndWait:", v9);

  objc_autoreleasePoolPop(v5);
  LOBYTE(v5) = *((_BYTE *)v13 + 24);
  _Block_object_dispose(&v12, 8);

  return (char)v5;
}

- (BOOL)_emptyResourceTablesInStagedStore:(id)a3
{
  BOOL v3;
  NSObject *v4;
  uint8_t v6[16];

  v3 = +[PLResourceInstaller resetInternalResourcesInStore:resetUTIs:resetCodecs:resetMasters:migrator:](PLResourceInstaller, "resetInternalResourcesInStore:resetUTIs:resetCodecs:resetMasters:migrator:", a3, 1, 1, 0, self);
  if (!v3)
  {
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_ERROR, "Failed to empty resource tables.", v6, 2u);
    }

  }
  return v3;
}

- (BOOL)_migrateVideoKeyFrameTimeValuesInStagedStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  char *v17;
  void *v18;
  id v20;
  uint8_t buf[4];
  const char *v22;
  __int16 v23;
  id v24;
  __int16 v25;
  void *v26;
  _QWORD v27[2];
  _QWORD v28[3];

  v28[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _migrateVideoKeyFrameTimeValuesInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "batchUpdateRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v27[0] = CFSTR("videoKeyFrameValue");
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("mediaAnalysisAttributes.bestKeyFrameValue"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v27[1] = CFSTR("videoKeyFrameTimeScale");
  v28[0] = v10;
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("mediaAnalysisAttributes.bestKeyFrameTimeScale"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v28[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, v27, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToUpdate:", v12);

  objc_msgSend(v9, "setResultType:", 2);
  v20 = 0;
  objc_msgSend(v6, "executeRequest:error:", v9, &v20);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v20;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v13)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v13, "result");
      v17 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v22 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Migrated %@ assets video key frame values from MediaAnalysisAttributes table to Asset table", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v14, "userInfo");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v22 = "-[PLModelMigrator _migrateVideoKeyFrameTimeValuesInStagedStore:]";
    v23 = 2112;
    v24 = v14;
    v25 = 2112;
    v26 = v18;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v5);

  return v13 != 0;
}

- (BOOL)migratePurgeableResources
{
  void *v3;
  void *v4;
  int v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  void *v9;
  void *v10;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  -[PLModelMigrator pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "capabilities");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isCentralizedCacheDeleteCapable");

  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      LOWORD(v12) = 0;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Migrating purgeable resources", (uint8_t *)&v12, 2u);
    }

    -[PLModelMigrator pathManager](self, "pathManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLCPLSettings settingsWithPathManager:](PLCPLSettings, "settingsWithPathManager:", v8);
    v6 = objc_claimAutoreleasedReturnValue();

    -[NSObject setRunOnceFlag:error:](v6, "setRunOnceFlag:error:", 4, 0);
  }
  else if (v7)
  {
    -[PLModelMigrator pathManager](self, "pathManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "libraryURL");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138412290;
    v13 = v10;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Skip migrating purgeable resources, not supported for library at %@", (uint8_t *)&v12, 0xCu);

  }
  return 1;
}

- (BOOL)_renumberLocalAvailabilityAndLocalAvailabilityTargetsInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _renumberLocalAvailabilityAndLocalAvailabilityTargetsInStore:]", a3, &__block_literal_global_1755);
}

- (BOOL)_migrateVersionSpecific1kResourcesInStore:(id)a3 deferHintChanges:(BOOL)a4
{
  return 1;
}

- (BOOL)_fixupResourceTypeUnknownInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _fixupResourceTypeUnknownInStore:]", a3, &__block_literal_global_1759);
}

- (BOOL)_regenerateReferenceKeyDataInStore:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[5];
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1E0C97B48];
  v5 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForReferencedAsset"), 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setFetchBatchSize:", 100);
  objc_msgSend(v7, "setPredicate:", v8);
  v14[0] = CFSTR("modernResources");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setRelationshipKeyPathsForPrefetching:", v9);

  v10 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s"), "-[PLModelMigrator _regenerateReferenceKeyDataInStore:]");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __54__PLModelMigrator__regenerateReferenceKeyDataInStore___block_invoke;
  v13[3] = &__block_descriptor_40_e28_B24__0__NSManagedObject_8Q16lu32l8;
  v13[4] = v10;
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithName:fetchRequest:store:migrationHandler:](self, "_runMigrationStepWithName:fetchRequest:store:migrationHandler:", v11, v7, v5, v13);

  return (char)self;
}

- (BOOL)_requestAvailabilityChangeForAssetsMissing1kResourcesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __80__PLModelMigrator__requestAvailabilityChangeForAssetsMissing1kResourcesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _requestAvailabilityChangeForAssetsMissing1kResourcesInStore:]", a3, v4);
}

- (BOOL)_move1kResourcesOutOfMastersDir:(id)a3
{
  return 1;
}

- (BOOL)_verifyAndFixBrokenLocalAvailabilityForResourceWithFileIDsInStore:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  int v8;
  _QWORD v10[5];

  v5 = a3;
  -[PLModelMigrator pathManager](self, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "capabilities");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isCentralizedCacheDeleteCapable");

  if (v8)
  {
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __85__PLModelMigrator__verifyAndFixBrokenLocalAvailabilityForResourceWithFileIDsInStore___block_invoke;
    v10[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
    v10[4] = a2;
    -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _verifyAndFixBrokenLocalAvailabilityForResourceWithFileIDsInStore:]", v5, v10);
  }

  return 1;
}

- (BOOL)_relocateCPLMarkerFiles
{
  return 1;
}

- (BOOL)_cleanupLegacyFiles
{
  return 1;
}

- (BOOL)relocateOriginalUBFPaths:(id)a3
{
  return 1;
}

- (BOOL)_removeCloudSharedFileAtPath:(id)a3 withFileManager:(id)a4 error:(id *)a5
{
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  char v18;
  uint64_t v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v8 = a4;
  v9 = (void *)MEMORY[0x1E0D73280];
  v10 = a3;
  objc_msgSend(v9, "systemLibraryPathManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(v11, "photoDirectoryWithType:", 22);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "fileURLWithPath:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v10);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v20 = 2;
  if (objc_msgSend(v8, "getRelationship:ofDirectoryAtURL:toItemAtURL:error:", &v20, v14, v15, a5))
  {
    if (!v20)
    {
      v18 = objc_msgSend(v8, "removeItemAtURL:error:", v15, a5);
      goto LABEL_7;
    }
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      NSStringFromSelector(a2);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v22 = v17;
      v23 = 2112;
      v24 = v15;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEBUG, "%@: not cloud shared url: %@", buf, 0x16u);

    }
  }
  v18 = 0;
LABEL_7:

  return v18;
}

- (BOOL)_removeAllSharedAssetDCIMFilesInStore:(id)a3
{
  return 1;
}

- (BOOL)_fixSharedStreamVideoResourcesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __57__PLModelMigrator__fixSharedStreamVideoResourcesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _fixSharedStreamVideoResourcesInStore:]", a3, v4);
}

- (BOOL)_fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __74__PLModelMigrator__fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore:]", a3, v4);
}

- (BOOL)_fixUnpushedVideoComplementResourcesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __63__PLModelMigrator__fixUnpushedVideoComplementResourcesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _fixUnpushedVideoComplementResourcesInStore:]", a3, v4);
}

- (BOOL)_fixAdjustedStableHashesInStore:(id)a3
{
  return 1;
}

- (BOOL)_fixInvalidPostMigrationFileSystemImportedAssets:(id)a3
{
  return 1;
}

- (BOOL)_scavengeCameraProcessingAdjustmentMetadataForAssetsInStore:(id)a3
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v12[4];
  id v13;
  __CFString *v14;
  id v15;
  _QWORD *v16;
  SEL v17;
  _QWORD v18[5];
  _QWORD v19[4];

  v5 = a3;
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", 590400000.0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x2020000000;
  v7 = MEMORY[0x1E0C809B0];
  v19[3] = 0;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke;
  v18[3] = &unk_1E3665B80;
  v18[4] = v19;
  v8 = (void *)MEMORY[0x19AEC174C](v18);
  v12[0] = v7;
  v12[1] = 3221225472;
  v12[2] = __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke_2;
  v12[3] = &unk_1E3665BF8;
  v9 = v6;
  v13 = v9;
  v14 = CFSTR("IMG_S");
  v10 = v8;
  v16 = v19;
  v17 = a2;
  v15 = v10;
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _scavengeCameraProcessingAdjustmentMetadataForAssetsInStore:]", v5, v12);

  _Block_object_dispose(v19, 8);
  return (char)self;
}

- (BOOL)_runPairingForAssetsInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __47__PLModelMigrator__runPairingForAssetsInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _runPairingForAssetsInStore:]", a3, v4);
}

- (BOOL)_repairOrphanedProjectAlbumsInStore:(id)a3
{
  return 1;
}

- (BOOL)_repushAllUserSmartAlbum:(id)a3
{
  return 1;
}

- (BOOL)_repairTableThumbFragmentation
{
  return 1;
}

- (BOOL)_repairLegacyMigrationDuplicateVersionCloudResources:(id)a3
{
  return 1;
}

- (BOOL)_migrateCandidateBitsToDeferredProcessingCandidateOptions:(id)a3
{
  _QWORD v4[5];
  int v5;
  __int16 v6;

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __77__PLModelMigrator__migrateCandidateBitsToDeferredProcessingCandidateOptions___block_invoke;
  v4[3] = &__block_descriptor_46_e32_B16__0__NSManagedObjectContext_8l;
  v5 = 2097154;
  v6 = 16;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _migrateCandidateBitsToDeferredProcessingCandidateOptions:]", a3, v4);
}

- (BOOL)_moveGpsHorizontalAccuracyToNewAttribute:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __60__PLModelMigrator__moveGpsHorizontalAccuracyToNewAttribute___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _moveGpsHorizontalAccuracyToNewAttribute:]", a3, v4);
}

- (BOOL)_migrateMetadataAndMigrationHistoryWithStore:(id)a3
{
  id v4;
  id v5;
  _QWORD v7[4];
  id v8;
  PLModelMigrator *v9;

  v4 = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __64__PLModelMigrator__migrateMetadataAndMigrationHistoryWithStore___block_invoke;
  v7[3] = &unk_1E36659A8;
  v8 = v4;
  v9 = self;
  v5 = v4;
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _migrateMetadataAndMigrationHistoryWithStore:]", v5, v7);

  return (char)self;
}

- (BOOL)_repairReframedAssetsWithoutSOCAvailableBitWithStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __72__PLModelMigrator__repairReframedAssetsWithoutSOCAvailableBitWithStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _repairReframedAssetsWithoutSOCAvailableBitWithStore:]", a3, v4);
}

- (BOOL)_clearAvalancheUUIDOnCloudSharedAssetsWithStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _clearAvalancheUUIDOnCloudSharedAssetsWithStore:]", a3, &__block_literal_global_1806);
}

- (BOOL)_copyAssetDescriptionToAccessibilityDescription:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __67__PLModelMigrator__copyAssetDescriptionToAccessibilityDescription___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _copyAssetDescriptionToAccessibilityDescription:]", a3, v4);
}

- (BOOL)_removeAllLocalVideoKeyFrameResourcesRevert14037InStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __75__PLModelMigrator__removeAllLocalVideoKeyFrameResourcesRevert14037InStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _removeAllLocalVideoKeyFrameResourcesRevert14037InStore:]", a3, v4);
}

- (BOOL)_removeResourceModelManualIdentityConstraintInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __71__PLModelMigrator__removeResourceModelManualIdentityConstraintInStore___block_invoke;
  v4[3] = &unk_1E36659D0;
  v4[4] = self;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _removeResourceModelManualIdentityConstraintInStore:]", a3, v4);
}

- (BOOL)_repairCTMOriginalVideosWithSOCAvailableBitInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __70__PLModelMigrator__repairCTMOriginalVideosWithSOCAvailableBitInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _repairCTMOriginalVideosWithSOCAvailableBitInStore:]", a3, v4);
}

- (BOOL)_persistResourceTypeAttributeOnAlternateImageResourcesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __81__PLModelMigrator__persistResourceTypeAttributeOnAlternateImageResourcesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _persistResourceTypeAttributeOnAlternateImageResourcesInStore:]", a3, v4);
}

- (BOOL)_addRAWPackedBadgeAttributeForAllRAWAssetsInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __69__PLModelMigrator__addRAWPackedBadgeAttributeForAllRAWAssetsInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _addRAWPackedBadgeAttributeForAllRAWAssetsInStore:]", a3, v4);
}

- (BOOL)_addLocalVideoKeyFrameResourceInStore:(id)a3 deferHintChanges:(BOOL)a4
{
  _QWORD v5[5];
  BOOL v6;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __74__PLModelMigrator__addLocalVideoKeyFrameResourceInStore_deferHintChanges___block_invoke;
  v5[3] = &__block_descriptor_41_e32_B16__0__NSManagedObjectContext_8l;
  v6 = a4;
  v5[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _addLocalVideoKeyFrameResourceInStore:deferHintChanges:]", a3, v5);
}

- (BOOL)_repairCTMOriginalVideosWithoutAdjustmentsInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __69__PLModelMigrator__repairCTMOriginalVideosWithoutAdjustmentsInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _repairCTMOriginalVideosWithoutAdjustmentsInStore:]", a3, v4);
}

- (BOOL)_refactorLargeVideoRecipeResourcesInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __61__PLModelMigrator__refactorLargeVideoRecipeResourcesInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _refactorLargeVideoRecipeResourcesInStore:]", a3, v4);
}

- (BOOL)_removeDuplicatedCloudSharedComments:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _removeDuplicatedCloudSharedComments:]", a3, &__block_literal_global_1843);
}

- (BOOL)_repairWallpaperAlbumsInStore:(id)a3 containerUUID:(id)a4 title:(id)a5
{
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[4];
  id v15;
  PLModelMigrator *v16;
  id v17;
  SEL v18;

  v9 = a4;
  v10 = a5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __69__PLModelMigrator__repairWallpaperAlbumsInStore_containerUUID_title___block_invoke;
  v14[3] = &unk_1E3665DA0;
  v15 = v9;
  v16 = self;
  v17 = v10;
  v18 = a2;
  v11 = v10;
  v12 = v9;
  LOBYTE(a3) = -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _repairWallpaperAlbumsInStore:containerUUID:title:]", a3, v14);

  return (char)a3;
}

- (BOOL)_invalidateZeroHDRGainInStore:(id)a3
{
  id v4;

  v4 = a3;
  pl_dispatch_once();
  LOBYTE(self) = -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _invalidateZeroHDRGainInStore:]", v4, &__block_literal_global_1852);

  return (char)self;
}

- (BOOL)_resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __85__PLModelMigrator__resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore___block_invoke;
  v4[3] = &__block_descriptor_40_e32_B16__0__NSManagedObjectContext_8l;
  v4[4] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore:]", a3, v4);
}

- (BOOL)_resetAssetLocationShiftingAndRevGeoInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _resetAssetLocationShiftingAndRevGeoInStore:]", a3, &__block_literal_global_1860);
}

- (id)_loadOriginalVideoMetadataFromAsset:(id)a3 timeZoneLookup:(id)a4 error:(id *)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  objc_msgSend(v7, "master");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "mediaMetadata");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    v12 = objc_alloc(MEMORY[0x1E0D75140]);
    objc_msgSend(v7, "master");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "mediaMetadata");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "data");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (void *)objc_msgSend(v12, "initWithAVProxyData:timeZoneLookup:", v15, v8);

  }
  else
  {
    if ((objc_msgSend(v7, "isReferencedAsset") & 1) != 0)
    {
      v17 = (void *)MEMORY[0x1E0CB35C8];
      v18 = *MEMORY[0x1E0D74498];
      v26 = *MEMORY[0x1E0CB2938];
      v27[0] = CFSTR("skipping reference asset");
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "errorWithDomain:code:userInfo:", v18, 46502, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      v16 = 0;
      if (!a5)
        goto LABEL_9;
      goto LABEL_8;
    }
    v21 = objc_alloc(MEMORY[0x1E0D75140]);
    v22 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(v7, "pathForOriginalFile");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "fileURLWithPath:", v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (void *)objc_msgSend(v21, "initWithAVURL:timeZoneLookup:", v24, v8);

  }
  v20 = 0;
  if (a5)
LABEL_8:
    *a5 = objc_retainAutorelease(v20);
LABEL_9:

  return v16;
}

- (BOOL)_updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __78__PLModelMigrator__updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore___block_invoke;
  v4[3] = &unk_1E36659D0;
  v4[4] = self;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore:]", a3, v4);
}

- (BOOL)_convertAssetDepthStatesToDepthTypeInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _convertAssetDepthStatesToDepthTypeInStore:]", a3, &__block_literal_global_1872);
}

- (void)_convertImplicitDownloadAndKeepOriginalsEnabledToExplicit
{
  void *v2;
  int v3;
  NSObject *v4;
  const __CFString *v5;
  int v6;
  const __CFString *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  PLReadCloudPhotoLibraryKeepOriginalsEnabled_Legacy();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    v3 = PLIsEDUMode();
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = CFSTR("download and keep originals");
      if (v3)
        v5 = CFSTR("optimize storage");
      v6 = 138412290;
      v7 = v5;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEFAULT, "Converting implicit to explicit iCPL mode in defaults: %@", (uint8_t *)&v6, 0xCu);
    }

    PLWriteCloudPhotoLibraryKeepOriginalsEnabled_Legacy(v3 ^ 1u);
  }

}

- (BOOL)_unQuarantineAssetsIfPossibleInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _unQuarantineAssetsIfPossibleInStore:]", a3, &__block_literal_global_1881);
}

- (BOOL)_resetLimitedLibraryFilterDataInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _resetLimitedLibraryFilterDataInStore:]", a3, &__block_literal_global_1886);
}

- (BOOL)_repairDuplicateSingletonFetchingAlbumsInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _repairDuplicateSingletonFetchingAlbumsInStore:]", a3, &__block_literal_global_1890);
}

- (BOOL)_deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore:(id)a3
{
  _QWORD v4[6];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __80__PLModelMigrator__deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore___block_invoke;
  v4[3] = &unk_1E36654D0;
  v4[4] = self;
  v4[5] = a2;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore:]", a3, v4);
}

- (BOOL)_deleteLocalVideoKeyFrameResourcesForNonVideosInStore:(id)a3 deferHintChanges:(BOOL)a4
{
  _QWORD v5[4];
  BOOL v6;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __90__PLModelMigrator__deleteLocalVideoKeyFrameResourcesForNonVideosInStore_deferHintChanges___block_invoke;
  v5[3] = &__block_descriptor_33_e32_B16__0__NSManagedObjectContext_8l;
  v6 = a4;
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _deleteLocalVideoKeyFrameResourcesForNonVideosInStore:deferHintChanges:]", a3, v5);
}

- (BOOL)_discardUnusedCustomRenderedValuesInStore:(id)a3
{
  return -[PLModelMigrator _runMigrationStepWithPrettyFunction:store:migrationHandler:](self, "_runMigrationStepWithPrettyFunction:store:migrationHandler:", "-[PLModelMigrator _discardUnusedCustomRenderedValuesInStore:]", a3, &__block_literal_global_1901);
}

- (BOOL)_migrateResourceUTIAndCodecInStagedStore:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  PLEnumerateAndSaveController *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  PLEnumerateAndSaveController *v21;
  BOOL v22;
  id v23;
  NSObject *v24;
  signed int v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  void *v30;
  void *context;
  id v32;
  _QWORD v33[5];
  _QWORD v34[4];
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  unsigned int *v40;
  uint64_t v41;
  int v42;
  uint8_t buf[4];
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v30 = v4;
  -[PLModelMigrator managedObjectContextForMigrationInStore:name:concurrencyType:](self, "managedObjectContextForMigrationInStore:name:concurrencyType:", v4, "-[PLModelMigrator _migrateResourceUTIAndCodecInStagedStore:]", *MEMORY[0x1E0C97C38]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLPersistentHistoryTransactionModifiers transactionAuthorFromChangeSource:](PLPersistentHistoryTransactionModifiers, "transactionAuthorFromChangeSource:", 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setTransactionAuthor:", v6);

  +[PLCloudMaster deleteOrphanedMastersWithManagedObjectContext:](PLCloudMaster, "deleteOrphanedMastersWithManagedObjectContext:", v5);
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", &unk_1E37638A8);
  v39 = 0;
  v40 = (unsigned int *)&v39;
  v41 = 0x3020000000;
  v42 = 0;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLModelMigrator _migrateResourceUTIAndCodecInStagedStore:]");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pathManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "persistentStoreCoordinator");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transactionAuthor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = [PLEnumerateAndSaveController alloc];
  objc_msgSend(v5, "pathManager");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = MEMORY[0x1E0C809B0];
  v34[0] = MEMORY[0x1E0C809B0];
  v34[1] = 3221225472;
  v34[2] = __60__PLModelMigrator__migrateResourceUTIAndCodecInStagedStore___block_invoke;
  v34[3] = &unk_1E3669318;
  v17 = v10;
  v35 = v17;
  v18 = v12;
  v36 = v18;
  v19 = v11;
  v37 = v19;
  v20 = v13;
  v38 = v20;
  v33[0] = v16;
  v33[1] = 3221225472;
  v33[2] = __60__PLModelMigrator__migrateResourceUTIAndCodecInStagedStore___block_invoke_3;
  v33[3] = &unk_1E3665F68;
  v33[4] = &v39;
  v21 = -[PLEnumerateAndSaveController initWithName:fetchRequest:context:pathManager:concurrent:refreshAllAfterSave:generateContextBlock:didFetchObjectIDsBlock:processResultBlock:](v14, "initWithName:fetchRequest:context:pathManager:concurrent:refreshAllAfterSave:generateContextBlock:didFetchObjectIDsBlock:processResultBlock:", CFSTR("migrateUTIAndCodec"), v9, v5, v15, 1, 1, v34, 0, v33);

  v32 = 0;
  v22 = -[PLEnumerateAndSaveController processObjectsWithError:](v21, "processObjectsWithError:", &v32);
  v23 = v32;
  if (v22)
  {
    PLMigrationGetLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      v25 = atomic_load(v40 + 10);
      *(_DWORD *)buf = 134217984;
      v44 = (id)v25;
      v26 = "Reset %ld asset image request hints.";
      v27 = v24;
      v28 = OS_LOG_TYPE_DEFAULT;
LABEL_6:
      _os_log_impl(&dword_199541000, v27, v28, v26, buf, 0xCu);
    }
  }
  else
  {
    PLMigrationGetLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v44 = v23;
      v26 = "Error resetting image request hints, %@";
      v27 = v24;
      v28 = OS_LOG_TYPE_ERROR;
      goto LABEL_6;
    }
  }

  _Block_object_dispose(&v39, 8);
  objc_autoreleasePoolPop(context);

  return v22;
}

- (PLPhotoLibraryPathManager)pathManager
{
  return self->_pathManager;
}

- (void)setOptions:(id)a3
{
  objc_setProperty_atomic_copy(self, a2, a3, 136);
}

- (NSFileManager)fileManager
{
  return self->_fileManager;
}

- (void)setFileManager:(id)a3
{
  objc_storeStrong((id *)&self->_fileManager, a3);
}

- (os_unfair_lock_s)containedObjectsLock
{
  return self->_containedObjectsLock;
}

- (void)setContainedObjectsLock:(os_unfair_lock_s)a3
{
  self->_containedObjectsLock = a3;
}

- (os_unfair_lock_s)storeMetadataLock
{
  return self->_storeMetadataLock;
}

- (void)setStoreMetadataLock:(os_unfair_lock_s)a3
{
  self->_storeMetadataLock = a3;
}

- (os_unfair_lock_s)lightweightMigrationLock
{
  return self->_lightweightMigrationLock;
}

- (void)setLightweightMigrationLock:(os_unfair_lock_s)a3
{
  self->_lightweightMigrationLock = a3;
}

- (NSProgress)progress
{
  return (NSProgress *)objc_getProperty(self, a2, 152, 1);
}

- (void)setProgress:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 152);
}

- (os_unfair_lock_s)recordMigrationMetadataLock
{
  return self->_recordMigrationMetadataLock;
}

- (void)setRecordMigrationMetadataLock:(os_unfair_lock_s)a3
{
  self->_recordMigrationMetadataLock = a3;
}

- (BOOL)didRecordCurrentMigrationMetadata
{
  return self->_didRecordCurrentMigrationMetadata;
}

- (void)setDidRecordCurrentMigrationMetadata:(BOOL)a3
{
  self->_didRecordCurrentMigrationMetadata = a3;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_progress, 0);
  objc_storeStrong((id *)&self->_fileManager, 0);
  objc_storeStrong((id *)&self->_options, 0);
  objc_storeStrong((id *)&self->_lazyGraphCache, 0);
  objc_storeStrong((id *)&self->_fileSystemLoadGroup, 0);
  objc_storeStrong((id *)&self->_fileSystemLoadQueue, 0);
  objc_storeStrong((id *)&self->_lazyMigrationLogger, 0);
  objc_storeStrong((id *)&self->_lazyDeviceRestoreMigrationPostProcessingSupport, 0);
  objc_storeStrong((id *)&self->_lazyDeviceRestoreMigrationSupport, 0);
  objc_storeStrong((id *)&self->_lazyCoreAnalysticsEventManager, 0);
  objc_storeStrong((id *)&self->_thumbnailManager, 0);
  objc_storeStrong((id *)&self->_pathManager, 0);
  objc_storeStrong((id *)&self->_syncedPropertiesByUUID, 0);
  objc_storeStrong((id *)&self->_transaction, 0);
}

id __60__PLModelMigrator__migrateResourceUTIAndCodecInStagedStore___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97B88]), "initWithConcurrencyType:", 1);
  objc_msgSend(v2, "setName:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v2, "setPersistentStoreCoordinator:", *(_QWORD *)(a1 + 40));
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __60__PLModelMigrator__migrateResourceUTIAndCodecInStagedStore___block_invoke_2;
  v7[3] = &unk_1E3677530;
  v3 = v2;
  v8 = v3;
  v9 = *(id *)(a1 + 48);
  v10 = *(id *)(a1 + 56);
  objc_msgSend(v3, "performBlockAndWait:", v7);
  v4 = v10;
  v5 = v3;

  return v5;
}

void __60__PLModelMigrator__migrateResourceUTIAndCodecInStagedStore___block_invoke_3(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned int *v9;
  unsigned int v10;
  id v11;

  v11 = a3;
  objc_msgSend(v11, "valueForKeyPath:", CFSTR("uniformTypeIdentifier.identifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "length"))
  {
    +[PLUniformTypeIdentifier utiWithIdentifier:](PLUniformTypeIdentifier, "utiWithIdentifier:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "willChangeValueForKey:", CFSTR("compactUTI"));
    objc_msgSend(v5, "compactRepresentation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setPrimitiveValue:forKey:", v6, CFSTR("compactUTI"));

    objc_msgSend(v11, "didChangeValueForKey:", CFSTR("compactUTI"));
    objc_msgSend(v11, "willChangeValueForKey:", CFSTR("utiConformanceHint"));
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", objc_msgSend(v5, "conformanceHint"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setPrimitiveValue:forKey:", v7, CFSTR("utiConformanceHint"));

    objc_msgSend(v11, "didChangeValueForKey:", CFSTR("utiConformanceHint"));
  }
  objc_msgSend(v11, "valueForKeyPath:", CFSTR("codec.fourCharCodeName"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "length"))
  {
    objc_msgSend(v11, "willChangeValueForKey:", CFSTR("codecFourCharCodeName"));
    objc_msgSend(v11, "setPrimitiveValue:forKey:", v8, CFSTR("codecFourCharCodeName"));
    objc_msgSend(v11, "didChangeValueForKey:", CFSTR("codecFourCharCodeName"));
  }
  v9 = (unsigned int *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 + 1, v9));

}

uint64_t __60__PLModelMigrator__migrateResourceUTIAndCodecInStagedStore___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "userInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKeyedSubscript:", v2, CFSTR("com.apple.photos.PLModelMigratorPathManagerKey"));

  return objc_msgSend(*(id *)(a1 + 32), "setTransactionAuthor:", *(_QWORD *)(a1 + 48));
}

BOOL __61__PLModelMigrator__discardUnusedCustomRenderedValuesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  id v14;
  uint8_t buf[4];
  id v16;
  const __CFString *v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  v3 = a2;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(NOT %K IN %@) AND (%K == %d)"), CFSTR("hdrType"), &unk_1E3763890, CFSTR("kind"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);
  v17 = CFSTR("hdrType");
  v18[0] = &unk_1E375E340;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, &v17, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToUpdate:", v7);

  objc_msgSend(v5, "setResultType:", 2);
  v14 = 0;
  objc_msgSend(v3, "executeRequest:error:", v5, &v14);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = v14;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "result");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v16 = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Discard unused customRenderedValue successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v16 = v9;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Batch update request failed, setting customRenderedValue: %@", buf, 0xCu);
  }

  return v8 != 0;
}

uint64_t __90__PLModelMigrator__deleteLocalVideoKeyFrameResourcesForNonVideosInStore_deferHintChanges___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  const char *v16;
  _QWORD v18[4];
  id v19;
  uint64_t *v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t buf[4];
  const char *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  void *v32;
  _QWORD v33[2];

  v33[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d AND %K != %d"), CFSTR("recipeID"), 65749, CFSTR("asset.kind"), 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);
  v33[0] = CFSTR("asset");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v33, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v8);

  v22 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v22);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v22;
  if (!v9)
    goto LABEL_3;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __90__PLModelMigrator__deleteLocalVideoKeyFrameResourcesForNonVideosInStore_deferHintChanges___block_invoke_2;
  v18[3] = &unk_1E3665F00;
  v11 = v3;
  v21 = *(_BYTE *)(a1 + 32);
  v19 = v11;
  v20 = &v23;
  objc_msgSend(v11, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, v18);
  v12 = objc_claimAutoreleasedReturnValue();

  v10 = (id)v12;
  if (!v12)
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v16 = (const char *)v24[3];
      *(_DWORD *)buf = 134217984;
      v28 = v16;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Deleted %lu video key frame resources on non-video assets", buf, 0xCu);
    }
    v10 = 0;
    v15 = 1;
  }
  else
  {
LABEL_3:
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v10, "userInfo");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136446722;
      v28 = "-[PLModelMigrator _deleteLocalVideoKeyFrameResourcesForNonVideosInStore:deferHintChanges:]_block_invoke";
      v29 = 2112;
      v30 = v10;
      v31 = 2112;
      v32 = v14;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%{public}s: failed: %@ %@", buf, 0x20u);

    }
    v15 = 0;
  }

  _Block_object_dispose(&v23, 8);
  return v15;
}

void __90__PLModelMigrator__deleteLocalVideoKeyFrameResourcesForNonVideosInStore_deferHintChanges___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  uint8_t buf[4];
  const char *v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "asset");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pathForLocalVideoKeyFrame");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  v7 = objc_msgSend(v5, "removeItemAtPath:error:", v6, &v12);
  v8 = v12;

  if ((v7 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
  {
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v4, "pathForLocalVideoKeyFrame");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "userInfo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136446978;
      v14 = "-[PLModelMigrator _deleteLocalVideoKeyFrameResourcesForNonVideosInStore:deferHintChanges:]_block_invoke_2";
      v15 = 2112;
      v16 = v10;
      v17 = 2112;
      v18 = v8;
      v19 = 2112;
      v20 = v11;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "%{public}s: failed to remove file at path: %@ error: %@ %@", buf, 0x2Au);

    }
  }
  if (objc_msgSend(v3, "isLocallyAvailable"))
  {
    objc_msgSend(v3, "markAsNotLocallyAvailable");
    objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v3);
    if (!*(_BYTE *)(a1 + 48))
      objc_msgSend(v4, "recalculateImageRequestHints");
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v3);
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

}

uint64_t __80__PLModelMigrator__deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  id v16;
  _QWORD v17[5];
  void *v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedFolder entityName](PLManagedFolder, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d AND %K = %@"), CFSTR("kind"), 4000, CFSTR("cloudGUID"), CFSTR("----Project-Root-Folder----"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v18 = 0;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __80__PLModelMigrator__deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore___block_invoke_2;
  v17[3] = &unk_1E3665ED8;
  v17[4] = *(_QWORD *)(a1 + 32);
  v8 = (id)objc_msgSend(v3, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, &v18, v17);
  if (objc_msgSend(v3, "hasChanges"))
  {
    v16 = 0;
    v9 = objc_msgSend(v3, "save:", &v16);
    v10 = v16;
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if ((v9 & 1) != 0)
    {
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v20 = v18;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Deleted %lu empty project root folder with wrong folder kind", buf, 0xCu);
      }
    }
    else if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 40));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "userInfo");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v20 = v13;
      v21 = 2112;
      v22 = v10;
      v23 = 2112;
      v24 = v14;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    v9 = 1;
  }

  return v9;
}

void __80__PLModelMigrator__deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  objc_msgSend(v3, "delete");
  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removePersistedFileSystemDataWithPathManager:", v4);

}

uint64_t __66__PLModelMigrator__repairDuplicateSingletonFetchingAlbumsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  char *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = (void *)MEMORY[0x1E0C97B48];
  +[PLFetchingAlbum entityName](PLFetchingAlbum, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("kind"), 1507);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  v7 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v8 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __66__PLModelMigrator__repairDuplicateSingletonFetchingAlbumsInStore___block_invoke_2;
  v21[3] = &unk_1E3665EB0;
  v9 = v7;
  v22 = v9;
  v10 = v8;
  v23 = v10;
  objc_msgSend(v2, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v5, 0, v21);
  v11 = (char *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
LABEL_2:
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446466;
      v25 = "-[PLModelMigrator _repairDuplicateSingletonFetchingAlbumsInStore:]_block_invoke";
      v26 = 2112;
      v27 = v11;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}s: failed with error: %@", buf, 0x16u);
    }
    v13 = 0;
    goto LABEL_12;
  }
  if (objc_msgSend(v10, "count"))
  {
    v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithObjectIDs:", v10);
    objc_msgSend(v14, "setResultType:", 2);
    v20 = 0;
    objc_msgSend(v2, "executeRequest:error:", v14, &v20);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (char *)v20;
    if (!v15)
    {
      PLMigrationGetLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v25 = v11;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Failed to delete duplicate singleton fetching albums: %@", buf, 0xCu);
      }

      goto LABEL_2;
    }
    objc_msgSend(v15, "result");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "unsignedIntegerValue");

  }
  else
  {
    v17 = 0;
    v11 = 0;
  }
  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v25 = (const char *)v17;
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Removed %lu duplicate singleton fetching albums", buf, 0xCu);
  }
  v13 = 1;
LABEL_12:

  return v13;
}

void __66__PLModelMigrator__repairDuplicateSingletonFetchingAlbumsInStore___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v4, "kind");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = objc_msgSend(v3, "containsObject:", v5);

  if ((v3 & 1) != 0)
  {
    v6 = *(void **)(a1 + 40);
    objc_msgSend(v4, "objectID");
  }
  else
  {
    v6 = *(void **)(a1 + 32);
    objc_msgSend(v4, "kind");
  }
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "addObject:", v7);
}

BOOL __57__PLModelMigrator__resetLimitedLibraryFilterDataInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  id v14;
  uint8_t buf[4];
  id v16;
  const __CFString *v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  v3 = a2;
  +[PLLimitedLibraryFetchFilter entityName](PLLimitedLibraryFetchFilter, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = CFSTR("fetchFilterData");
  objc_msgSend(MEMORY[0x1E0C99D50], "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, &v17, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToUpdate:", v7);

  objc_msgSend(v5, "setResultType:", 2);
  v14 = 0;
  objc_msgSend(v3, "executeRequest:error:", v5, &v14);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = v14;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "result");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v16 = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Reset limited-library fetchFilterData successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v16 = v9;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Batch update request failed, resetting limited-library fetchFilterData, error: %@", buf, 0xCu);
  }

  return v8 != 0;
}

BOOL __56__PLModelMigrator__unQuarantineAssetsIfPossibleInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  NSObject *v11;
  const char *v12;
  _QWORD v14[5];
  id v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  id v23;
  _QWORD v24[4];

  v24[3] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K == %d"), CFSTR("cloudLocalState"), 4, CFSTR("master.cloudLocalState"), 4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  v24[0] = CFSTR("master");
  v24[1] = CFSTR("modernResources");
  v24[2] = CFSTR("master.assets");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setRelationshipKeyPathsForPrefetching:", v7);

  objc_msgSend(v5, "setFetchBatchSize:", 100);
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v19 = 0;
  v15 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v5, &v15);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v15;
  if (v8)
  {
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __56__PLModelMigrator__unQuarantineAssetsIfPossibleInStore___block_invoke_2;
    v14[3] = &unk_1E3665110;
    v14[4] = &v16;
    objc_msgSend(v2, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v14);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (const char *)v17[3];
      *(_DWORD *)buf = 134217984;
      v21 = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Un-quarantined %lu assets", buf, 0xCu);
    }
  }
  else
  {
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446466;
      v21 = "-[PLModelMigrator _unQuarantineAssetsIfPossibleInStore:]_block_invoke";
      v22 = 2112;
      v23 = v9;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "%{public}s: failed with error: %@", buf, 0x16u);
    }
    v10 = v9;
  }

  _Block_object_dispose(&v16, 8);
  return v8 != 0;
}

uint64_t __56__PLModelMigrator__unQuarantineAssetsIfPossibleInStore___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "unQuarantineIfPossible");
  if ((_DWORD)result)
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

BOOL __62__PLModelMigrator__convertAssetDepthStatesToDepthTypeInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  id v14;
  uint8_t buf[4];
  id v16;
  const __CFString *v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  v3 = a2;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K = %d) OR (%K = %d) OR (%K = %d) OR (%K = %d)"), CFSTR("depthType"), 2, CFSTR("depthType"), 3, CFSTR("hdrType"), 7, CFSTR("hdrType"), 8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  v17 = CFSTR("depthType");
  v18[0] = &unk_1E375E328;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, &v17, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToUpdate:", v7);

  objc_msgSend(v5, "setResultType:", 2);
  v14 = 0;
  objc_msgSend(v3, "executeRequest:error:", v5, &v14);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = v14;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "result");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v16 = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Convert asset depth states to depth type successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v16 = v9;
    _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Batch update request failed, setting depthType: %@", buf, 0xCu);
  }

  return v8 != 0;
}

uint64_t __78__PLModelMigrator__updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  const char *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v37;
  _QWORD v38[5];
  id v39;
  _QWORD *v40;
  uint64_t *v41;
  id v42;
  _QWORD v43[5];
  id v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t *v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  int v62;
  uint8_t buf[4];
  const char *v64;
  __int16 v65;
  id v66;
  __int16 v67;
  void *v68;
  const __CFString *v69;
  _QWORD v70[4];
  _QWORD v71[5];

  v71[2] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v37 = objc_alloc_init(MEMORY[0x1E0D752E8]);
  v61[0] = 0;
  v61[1] = v61;
  v61[2] = 0x2020000000;
  v62 = 0;
  v57 = 0;
  v58 = &v57;
  v59 = 0x2020000000;
  v60 = 0;
  v53 = 0;
  v54 = &v53;
  v55 = 0x2020000000;
  v56 = 0;
  v49 = 0;
  v50 = &v49;
  v51 = 0x2020000000;
  v52 = 0;
  v3 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K == %d"), CFSTR("kindSubtype"), 101, CFSTR("kind"), 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  objc_msgSend(v5, "setFetchBatchSize:", 100);
  v71[0] = CFSTR("additionalAttributes.unmanagedAdjustment");
  v71[1] = CFSTR("master.mediaMetadata");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v71, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setRelationshipKeyPathsForPrefetching:", v7);

  v48 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v5, &v48);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v48;
  if (!v8)
    goto LABEL_12;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = objc_msgSend(v8, "count");
    *(_DWORD *)buf = 134217984;
    v64 = (const char *)v11;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Adding hfr state for %lu existing Mogul assets", buf, 0xCu);
  }

  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = __78__PLModelMigrator__updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore___block_invoke_1869;
  v43[3] = &unk_1E3666398;
  v12 = *(_QWORD *)(a1 + 32);
  v45 = &v57;
  v43[4] = v12;
  v13 = v37;
  v44 = v13;
  v46 = v61;
  v47 = &v53;
  objc_msgSend(v2, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v43);
  v14 = objc_claimAutoreleasedReturnValue();

  v9 = (id)v14;
  if (v14)
    goto LABEL_13;
  v15 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "fetchRequestWithEntityName:", v16);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", 0);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v70[0] = v18;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kind"), 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v70[1] = v19;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("kindSubtype"), 101);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v70[2] = v20;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForUpdateMogulSubtypeExclusions"), 1);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v70[3] = v21;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v70, 4);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "andPredicateWithSubpredicates:", v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v23);

  objc_msgSend(v5, "setFetchBatchSize:", 100);
  v69 = CFSTR("master.mediaMetadata");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v69, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setRelationshipKeyPathsForPrefetching:", v24);

  v42 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v5, &v42);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v42;
  if (v25)
  {
    PLMigrationGetLog();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      v27 = objc_msgSend(v25, "count");
      *(_DWORD *)buf = 134217984;
      v64 = (const char *)v27;
      _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Checking %lu non-Mogul adjusted videos if original is slomo (and if so update kindSubtype and hfr state)", buf, 0xCu);
    }

    v38[0] = MEMORY[0x1E0C809B0];
    v38[1] = 3221225472;
    v38[2] = __78__PLModelMigrator__updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore___block_invoke_1871;
    v38[3] = &unk_1E366AC60;
    v38[4] = *(_QWORD *)(a1 + 32);
    v39 = v13;
    v40 = v61;
    v41 = &v49;
    objc_msgSend(v2, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v25, v38);
    v28 = objc_claimAutoreleasedReturnValue();

    v9 = (id)v28;
    if (!v28)
    {
      PLMigrationGetLog();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        v30 = (const char *)v58[3];
        v31 = (void *)v54[3];
        v32 = (void *)v50[3];
        *(_DWORD *)buf = 134218496;
        v64 = v30;
        v65 = 2048;
        v66 = v31;
        v67 = 2048;
        v68 = v32;
        _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_DEFAULT, "updated %lu standard slomo assets, %lu nonstandard adjusted slomo assets, %lu original-only slomo assets", buf, 0x20u);
      }
      v9 = 0;
      v33 = 1;
      goto LABEL_16;
    }
  }
  else
  {
LABEL_12:

  }
LABEL_13:
  PLMigrationGetLog();
  v29 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v9, "userInfo");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v64 = "-[PLModelMigrator _updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore:]_block_invoke";
    v65 = 2112;
    v66 = v9;
    v67 = 2112;
    v68 = v34;
    _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

  }
  v33 = 0;
LABEL_16:

  _Block_object_dispose(&v49, 8);
  _Block_object_dispose(&v53, 8);
  _Block_object_dispose(&v57, 8);
  _Block_object_dispose(v61, 8);

  return v33;
}

void __78__PLModelMigrator__updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore___block_invoke_1869(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  int v16;
  NSObject *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint8_t buf[4];
  const char *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  id v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0D75308];
  objc_msgSend(v3, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "unmanagedAdjustment");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "adjustmentFormatIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "unmanagedAdjustment");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "adjustmentFormatVersion");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v4) = objc_msgSend(v4, "isRecognizedSlowMotionFormatWithIdentifier:version:", v7, v10);

  if ((_DWORD)v4)
  {
    objc_msgSend(v3, "setHighFrameRateState:", 3);
    ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
  }
  else
  {
    v11 = (void *)a1[4];
    v12 = a1[5];
    v21 = 0;
    objc_msgSend(v11, "_loadOriginalVideoMetadataFromAsset:timeZoneLookup:error:", v3, v12, &v21);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v21;
    if (!v13)
    {
      v15 = *(_QWORD *)(a1[7] + 8);
      v16 = *(_DWORD *)(v15 + 24);
      if (v16 <= 2)
      {
        *(_DWORD *)(v15 + 24) = v16 + 1;
        PLMigrationGetLog();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v3, "uuid");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "userInfo");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 136315906;
          v23 = "-[PLModelMigrator _updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore:]_block_invoke";
          v24 = 2112;
          v25 = v18;
          v26 = 2112;
          v27 = v14;
          v28 = 2112;
          v29 = v19;
          _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "%s: failed to load metadata for asset with uuid %@, not fatal, will proceed with migration, error: %@ %@", buf, 0x2Au);

        }
      }
    }
    if (objc_msgSend(v13, "isSloMo"))
      v20 = 3;
    else
      v20 = 2;
    objc_msgSend(v3, "setHighFrameRateState:", v20);
    ++*(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 24);

  }
}

void __78__PLModelMigrator__updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore___block_invoke_1871(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  uint8_t buf[4];
  const char *v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)a1[4];
  v5 = a1[5];
  v13 = 0;
  objc_msgSend(v4, "_loadOriginalVideoMetadataFromAsset:timeZoneLookup:error:", v3, v5, &v13);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v13;
  if (!v6)
  {
    v8 = *(_QWORD *)(a1[6] + 8);
    v9 = *(_DWORD *)(v8 + 24);
    if (v9 <= 2)
    {
      *(_DWORD *)(v8 + 24) = v9 + 1;
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v3, "uuid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "userInfo");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 136315906;
        v15 = "-[PLModelMigrator _updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore:]_block_invoke";
        v16 = 2112;
        v17 = v11;
        v18 = 2112;
        v19 = v7;
        v20 = 2112;
        v21 = v12;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%s: failed to load metadata for asset with uuid %@, not fatal, will proceed with migration, error: %@ %@", buf, 0x2Au);

      }
    }
  }
  if (objc_msgSend(v6, "isSloMo"))
  {
    objc_msgSend(v3, "setHighFrameRateState:", 1);
    objc_msgSend(v3, "setKindSubtype:", 101);
    ++*(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 24);
  }

}

BOOL __63__PLModelMigrator__resetAssetLocationShiftingAndRevGeoInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  char *v12;
  const char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint32_t v16;
  id v18;
  uint8_t buf[4];
  const char *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  char *v24;
  _QWORD v25[2];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  v3 = a2;
  +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "setResultType:", 2);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("shiftedLocationData"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  v25[0] = CFSTR("reverseLocationDataIsValid");
  v25[1] = CFSTR("shiftedLocationIsValid");
  v26[0] = MEMORY[0x1E0C9AAA0];
  v26[1] = MEMORY[0x1E0C9AAA0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToUpdate:", v7);

  v18 = 0;
  objc_msgSend(v3, "executeRequest:error:", v5, &v18);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = v18;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "result");
      v12 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v20 = v12;
      v13 = "Invalidated reverse geocoding and shifted location data for %@ assets";
      v14 = v11;
      v15 = OS_LOG_TYPE_DEFAULT;
      v16 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v14, v15, v13, buf, v16);

    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v9, "userInfo");
    v12 = (char *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136315650;
    v20 = "-[PLModelMigrator _resetAssetLocationShiftingAndRevGeoInStore:]_block_invoke";
    v21 = 2112;
    v22 = v9;
    v23 = 2112;
    v24 = v12;
    v13 = "%s: failed to update: %@ %@";
    v14 = v11;
    v15 = OS_LOG_TYPE_ERROR;
    v16 = 32;
    goto LABEL_6;
  }

  return v8 != 0;
}

uint64_t __85__PLModelMigrator__resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[5];
  id v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("cloudRecoveryState"), &unk_1E375E4D8);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v6, "setFetchBatchSize:", 100);
  v18 = 0;
  v19 = &v18;
  v20 = 0x2020000000;
  v21 = 0;
  v17 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v17);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v17;
  if (!v8)
    goto LABEL_3;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __85__PLModelMigrator__resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore___block_invoke_1858;
  v16[3] = &unk_1E3665DE8;
  v16[4] = &v18;
  objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v16);
  v10 = objc_claimAutoreleasedReturnValue();

  v9 = (id)v10;
  if (!v10)
  {
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v14 = (void *)v19[3];
      *(_DWORD *)buf = 134217984;
      v23 = v14;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Reset cloud recovery state for %lu assets", buf, 0xCu);
    }
    v9 = 0;
    v13 = 1;
  }
  else
  {
LABEL_3:
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v23 = v12;
      v24 = 2112;
      v25 = v9;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "%@: failed with error: %@", buf, 0x16u);

    }
    v13 = 0;
  }

  _Block_object_dispose(&v18, 8);
  return v13;
}

void __85__PLModelMigrator__resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore___block_invoke_1858(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "cloudRecoveryState"))
  {
    objc_msgSend(v3, "setCloudRecoveryState:", 0);
    objc_msgSend(v3, "setCloudStateRecoveryAttemptsCount:", 0);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }

}

BOOL __49__PLModelMigrator__invalidateZeroHDRGainInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  id v16;
  uint8_t buf[4];
  id v18;
  const __CFString *v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_DEFAULT, "Invalidating zero hdrGain for assets", buf, 2u);
  }

  v4 = objc_alloc(MEMORY[0x1E0C97AB0]);
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithEntityName:", v5);

  objc_msgSend(v6, "setResultType:", 2);
  v19 = CFSTR("hdrGain");
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v20, &v19, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPropertiesToUpdate:", v8);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("hdrGain"), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v9);

  v16 = 0;
  objc_msgSend(v2, "executeRequest:error:", v6, &v16);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v16;
  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v11)
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v11;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to invalidate zero hdrGain assets: %@", buf, 0xCu);
    }
  }
  else if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v10, "result");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v18 = v14;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Invalidated %@ assets with zero hdrGain", buf, 0xCu);

  }
  objc_msgSend(v2, "reset");

  return v11 == 0;
}

uint64_t __69__PLModelMigrator__repairWallpaperAlbumsInStore_containerUUID_title___block_invoke(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  void *v26;
  void *v27;
  NSObject *v28;
  char v29;
  id v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  void *v37;
  void *v39;
  uint64_t v40;
  int v41;
  _QWORD *v42;
  void *v43;
  id v44;
  void *v45;
  NSObject *v46;
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  id v52;
  id v53;
  uint8_t buf[4];
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  __int16 v58;
  int v59;
  _BYTE v60[128];
  const __CFString *v61;
  _QWORD v62[3];

  v62[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAlbum entityName](PLManagedAlbum, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("uuid"), a1[4]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v62[0] = CFSTR("assets");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v62, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v8);

  objc_msgSend(v6, "setPredicate:", v7);
  v53 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v53);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  v10 = v53;
  v11 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  if ((unint64_t)objc_msgSend(v9, "count") >= 2)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "handleFailureInMethod:object:file:lineNumber:description:", a1[7], a1[5], CFSTR("PLModelMigrator.m"), 14810, CFSTR("found more than one locket album with UUID %@"), a1[4]);

  }
  if (objc_msgSend(v9, "count"))
  {
    v43 = v10;
    objc_msgSend(v9, "firstObject");
    v46 = objc_claimAutoreleasedReturnValue();
    -[NSObject assets](v46, "assets");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "array");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addObjectsFromArray:", v13);

    v40 = objc_msgSend(v11, "count");
    v41 = 0;
    goto LABEL_7;
  }
  +[PLGenericAlbum insertAlbumWithKind:title:uuid:inManagedObjectContext:](PLManagedAlbum, "insertAlbumWithKind:title:uuid:inManagedObjectContext:", 2, a1[6], a1[4], v3);
  v14 = objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    v43 = v10;
    v46 = v14;
    v40 = 0;
    v41 = 1;
LABEL_7:
    v15 = (void *)MEMORY[0x1E0C97B48];
    +[PLGenericAlbum entityName](PLGenericAlbum, "entityName");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "fetchRequestWithEntityName:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v42 = a1;
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@ AND %K != %@"), CFSTR("title"), a1[6], CFSTR("uuid"), a1[4]);
    v18 = objc_claimAutoreleasedReturnValue();

    v61 = CFSTR("assets");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v61, 1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setRelationshipKeyPathsForPrefetching:", v19);

    v45 = (void *)v18;
    objc_msgSend(v17, "setPredicate:", v18);
    v52 = v43;
    objc_msgSend(v3, "executeFetchRequest:error:", v17, &v52);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = v52;

    v50 = 0u;
    v51 = 0u;
    v48 = 0u;
    v49 = 0u;
    v9 = v20;
    v21 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v48, v60, 16);
    if (v21)
    {
      v22 = v21;
      v23 = *(_QWORD *)v49;
      do
      {
        for (i = 0; i != v22; ++i)
        {
          if (*(_QWORD *)v49 != v23)
            objc_enumerationMutation(v9);
          v25 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * i);
          objc_msgSend(v25, "assets");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "array");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "addObjectsFromArray:", v27);

          objc_msgSend(v3, "deleteObject:", v25);
        }
        v22 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v48, v60, 16);
      }
      while (v22);
    }

    v28 = v46;
    if (objc_msgSend(v11, "count"))
      -[NSObject setAssets:](v46, "setAssets:", v11);
    if ((objc_msgSend(v3, "hasChanges") & 1) != 0)
    {
      v47 = 0;
      v29 = objc_msgSend(v3, "save:", &v47);
      v30 = v47;
      v31 = v30;
      if ((v29 & 1) != 0)
      {

        objc_msgSend(v3, "reset");
        PLMigrationGetLog();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          v33 = objc_msgSend(v11, "count") - v40;
          v34 = objc_msgSend(v9, "count");
          *(_DWORD *)buf = 134218496;
          v55 = v33;
          v56 = 2048;
          v57 = v34;
          v58 = 1024;
          v59 = v41;
          _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEFAULT, "wallpaper repair migrated %ld assets from %ld albums, created=%d", buf, 0x1Cu);
        }

        v35 = 1;
        goto LABEL_25;
      }
      PLMigrationGetLog();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector((SEL)v42[7]);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v55 = (uint64_t)v37;
        v56 = 2112;
        v57 = (uint64_t)v31;
        _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "%@ failed: %@", buf, 0x16u);

      }
    }
    objc_msgSend(v3, "reset");
    v35 = 0;
LABEL_25:
    v10 = v44;
    v7 = v45;
    goto LABEL_26;
  }
  PLMigrationGetLog();
  v28 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_ERROR, "failed to insert locket album", buf, 2u);
  }
  v35 = 0;
  v17 = v6;
LABEL_26:

  return v35;
}

uint64_t __56__PLModelMigrator__removeDuplicatedCloudSharedComments___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t i;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t j;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  uint64_t v30;
  void *v31;
  id v33;
  void *v34;
  void *v35;
  id obj;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  id v50;
  uint8_t buf[4];
  uint64_t v52;
  __int16 v53;
  id v54;
  _BYTE v55[128];
  _BYTE v56[128];
  const __CFString *v57;
  _QWORD v58[4];

  v58[1] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = (void *)MEMORY[0x1E0C97B48];
  +[PLCloudSharedComment entityName](PLCloudSharedComment, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v58[0] = CFSTR("commentDate");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v58, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToFetch:", v6);

  v57 = CFSTR("commentDate");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v57, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToGroupBy:", v7);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("count(SELF) > 1"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setHavingPredicate:", v8);

  objc_msgSend(v5, "setResultType:", 2);
  v50 = 0;
  v38 = v2;
  objc_msgSend(v2, "executeFetchRequest:error:", v5, &v50);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v50;
  v11 = v10;
  if (v9)
  {
    v33 = v10;
    v35 = v5;
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v9, "count"));
    v12 = objc_claimAutoreleasedReturnValue();
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    v34 = v9;
    obj = v9;
    v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v56, 16);
    if (v39)
    {
      v37 = *(_QWORD *)v47;
      do
      {
        for (i = 0; i != v39; ++i)
        {
          if (*(_QWORD *)v47 != v37)
            objc_enumerationMutation(obj);
          objc_msgSend(*(id *)(*((_QWORD *)&v46 + 1) + 8 * i), "objectForKey:", CFSTR("commentDate"));
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLCloudSharedComment cloudSharedCommentsWithCommentDate:inManagedObjectContext:](PLCloudSharedComment, "cloudSharedCommentsWithCommentDate:inManagedObjectContext:");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v42 = 0u;
          v43 = 0u;
          v44 = 0u;
          v45 = 0u;
          v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v42, v55, 16);
          if (v15)
          {
            v16 = v15;
            v17 = 0;
            v18 = 0;
            v19 = 0;
            v20 = *(_QWORD *)v43;
            do
            {
              for (j = 0; j != v16; ++j)
              {
                if (*(_QWORD *)v43 != v20)
                  objc_enumerationMutation(v14);
                v22 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * j);
                if ((v17 & 1) != 0)
                {
                  if (objc_msgSend(*(id *)(*((_QWORD *)&v42 + 1) + 8 * j), "matchesCommentText:isLike:", v19, v18 & 1))
                  {
                    objc_msgSend(v22, "objectID");
                    v23 = (void *)objc_claimAutoreleasedReturnValue();
                    -[NSObject addObject:](v12, "addObject:", v23);

                  }
                }
                else
                {
                  objc_msgSend(*(id *)(*((_QWORD *)&v42 + 1) + 8 * j), "commentText");
                  v24 = objc_claimAutoreleasedReturnValue();

                  v18 = objc_msgSend(v22, "isLikeBoolValue");
                  v19 = (void *)v24;
                }
                v17 = 1;
              }
              v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v42, v55, 16);
            }
            while (v16);
          }
          else
          {
            v19 = 0;
          }

        }
        v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v56, 16);
      }
      while (v39);
    }

    if (-[NSObject count](v12, "count"))
    {
      v25 = objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithObjectIDs:", v12);
      -[NSObject setResultType:](v25, "setResultType:", 2);
      v41 = 0;
      objc_msgSend(v38, "executeRequest:error:", v25, &v41);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = v41;
      PLMigrationGetLog();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = v28;
      v11 = v33;
      if (v27)
      {
        v5 = v35;
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          v30 = -[NSObject count](v12, "count");
          *(_DWORD *)buf = 134218242;
          v52 = v30;
          v53 = 2112;
          v54 = v33;
          _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "Failed to delete %lu duplicated cloud shared comments: %@", buf, 0x16u);
        }
      }
      else
      {
        v5 = v35;
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v26, "result");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v52 = (uint64_t)v31;
          _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_DEFAULT, "Deleted %@ duplicated cloud shared comments", buf, 0xCu);

        }
      }

    }
    else
    {
      PLMigrationGetLog();
      v25 = objc_claimAutoreleasedReturnValue();
      v11 = v33;
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEFAULT, "No duplicated cloud shared comments found.", buf, 2u);
      }
      v5 = v35;
    }
    v9 = v34;

  }
  else
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v52 = (uint64_t)v11;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "_removeDuplicatedCloudSharedComments: Error executing fetch request, error:%@", buf, 0xCu);
    }
  }

  return 1;
}

BOOL __61__PLModelMigrator__refactorLargeVideoRecipeResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL8 v17;
  NSObject *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v24[5];
  id v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  NSObject *v33;
  __int16 v34;
  void *v35;
  _QWORD v36[3];
  _QWORD v37[2];

  v37[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 0;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v37[0] = CFSTR("modernResources");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v37, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v7);

  v8 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("kind"), 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = v9;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport"), 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v36[1] = v10;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("SUBQUERY(%K, $r, $r.%K = %d).@count > 0"), CFSTR("modernResources"), CFSTR("recipeID"), 131473);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v36[2] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v36, 3);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "andPredicateWithSubpredicates:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v13);

  v25 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v25);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v25;
  if (v14)
  {
    v24[0] = MEMORY[0x1E0C809B0];
    v24[1] = 3221225472;
    v24[2] = __61__PLModelMigrator__refactorLargeVideoRecipeResourcesInStore___block_invoke_2;
    v24[3] = &unk_1E3665110;
    v24[4] = &v26;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v14, v24);
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = v16 == 0;
    if (v16)
    {
      PLMigrationGetLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v19 = (id)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v16, "userInfo");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v31 = v19;
        v32 = 2112;
        v33 = v16;
        v34 = 2112;
        v35 = v20;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      PLMigrationGetLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v22 = (void *)v27[3];
        *(_DWORD *)buf = 134217984;
        v31 = v22;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "updated %lu resources.", buf, 0xCu);
      }
    }

  }
  else
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v31 = v21;
      v32 = 2112;
      v33 = v15;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%@: failed to fetch with error: %@", buf, 0x16u);

    }
    v17 = 0;
  }

  _Block_object_dispose(&v26, 8);
  return v17;
}

void __61__PLModelMigrator__refactorLargeVideoRecipeResourcesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id obj;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "persistedResourcesMatching:", &__block_literal_global_1842);
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
        objc_msgSend(v3, "persistedResourcesWithRecipeID:andVersion:", 131077, objc_msgSend(v8, "version"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "anyObject");
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        if (v10)
          objc_msgSend(v10, "deleteResource");
        objc_msgSend(v8, "setRecipeID:", 131077);
        if ((int)objc_msgSend(v8, "localAvailability") >= 1)
        {
          objc_msgSend(v3, "pathForCPLResourceType:adjusted:", objc_msgSend(v8, "cplType"), objc_msgSend(v8, "isAdjustedResource"));
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v11, 0);
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "path");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "markAsLocallyAvailableWithFilePath:", v13);

        }
        ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v5);
  }

}

BOOL __61__PLModelMigrator__refactorLargeVideoRecipeResourcesInStore___block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "recipeID") == 131473;
}

BOOL __69__PLModelMigrator__repairCTMOriginalVideosWithoutAdjustmentsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL8 v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  _QWORD v18[5];
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  NSObject *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K = %d) and (%K = %d) and SUBQUERY(modernResources, $r, $r.resourceType = %d and $r.version = %d).@count == 0"), CFSTR("kind"), 1, CFSTR("deferredProcessingNeeded"), 2, 10, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  v19 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v19);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v19;
  if (v8)
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __69__PLModelMigrator__repairCTMOriginalVideosWithoutAdjustmentsInStore___block_invoke_2;
    v18[3] = &unk_1E3665110;
    v18[4] = &v20;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v18);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = v10 == 0;
    if (v10)
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v13 = (id)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v10, "userInfo");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v25 = v13;
        v26 = 2112;
        v27 = v10;
        v28 = 2112;
        v29 = v14;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v16 = *((_DWORD *)v21 + 6);
        *(_DWORD *)buf = 67109120;
        LODWORD(v25) = v16;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Repaired %d assets without adjustments but deferredProcessingNeeded set.", buf, 8u);
      }
    }

  }
  else
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v15;
      v26 = 2112;
      v27 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%@: failed to fetch assets for fetch request with error: %@", buf, 0x16u);

    }
    v11 = 0;
  }

  _Block_object_dispose(&v20, 8);
  return v11;
}

void __69__PLModelMigrator__repairCTMOriginalVideosWithoutAdjustmentsInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_msgSend(v3, "hasAdjustments") & 1) == 0)
  {
    objc_msgSend(v3, "setDeferredProcessingNeeded:", 0);
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }

}

uint64_t __74__PLModelMigrator__addLocalVideoKeyFrameResourceInStore_deferHintChanges___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  int v18;
  _QWORD v20[5];
  char v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  id v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kind"), 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v8;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAddingLocalVideoKeyFrameResourceExclusions"), 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "andPredicateWithSubpredicates:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v11);

  v22 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v22);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v22;
  if (!v12)
    goto LABEL_3;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __74__PLModelMigrator__addLocalVideoKeyFrameResourceInStore_deferHintChanges___block_invoke_2;
  v20[3] = &unk_1E3665D38;
  v20[4] = &v23;
  v21 = *(_BYTE *)(a1 + 40);
  objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v12, 1, v20);
  v14 = objc_claimAutoreleasedReturnValue();

  v13 = (id)v14;
  if (!v14)
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v18 = *((_DWORD *)v24 + 6);
      *(_DWORD *)buf = 67109120;
      LODWORD(v28) = v18;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Added %d local video key frame resources", buf, 8u);
    }
    v13 = 0;
    v17 = 1;
  }
  else
  {
LABEL_3:
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v28 = v16;
      v29 = 2112;
      v30 = v13;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%@: failed with error: %@", buf, 0x16u);

    }
    v17 = 0;
  }

  _Block_object_dispose(&v23, 8);
  return v17;
}

void __74__PLModelMigrator__addLocalVideoKeyFrameResourceInStore_deferHintChanges___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _BOOL4 v5;
  uint64_t v6;
  void *v7;
  char v9;
  void *v10;
  char v11;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "videoKeyFrameTime");
    v5 = (v11 & 0x1D) == 1;
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v4, "localVideoKeyFrameResource");
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)v6;
  if (v5 && v6 == 0)
  {
    +[PLResourceInstaller onDemand_installLocalVideoKeyFrameForAsset:](PLResourceInstaller, "onDemand_installLocalVideoKeyFrameForAsset:", v4);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
      ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

  }
  else
  {
    if (v6)
      v9 = v5;
    else
      v9 = 1;
    if ((v9 & 1) == 0)
    {
      objc_msgSend(v4, "pruneLocalVideoKeyFrameImage");
      objc_msgSend(v7, "deleteResource");
    }
  }
  if ((objc_msgSend(v4, "hasAdjustments") & 1) == 0 && (((v7 == 0) ^ v5) & 1) == 0 && !*(_BYTE *)(a1 + 40))
    objc_msgSend(v4, "recalculateImageRequestHints");

}

uint64_t __69__PLModelMigrator__addRAWPackedBadgeAttributeForAllRAWAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  id v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K == %d AND %K == %d"), CFSTR("utiConformanceHint"), 2, CFSTR("dataStoreSubtype"), 1, CFSTR("dataStoreClassID"), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v27[0] = CFSTR("asset");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v27, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v8);

  v22 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v22);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v22;
  v18 = 0;
  v19 = &v18;
  v20 = 0x2020000000;
  v21 = 0;
  if (!v9)
    goto LABEL_3;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __69__PLModelMigrator__addRAWPackedBadgeAttributeForAllRAWAssetsInStore___block_invoke_2;
  v17[3] = &unk_1E3672098;
  v17[4] = &v18;
  objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, v17);
  v11 = objc_claimAutoreleasedReturnValue();

  v10 = (id)v11;
  if (!v11)
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v15 = (void *)v19[3];
      *(_DWORD *)buf = 134217984;
      v24 = v15;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Added RAW packed badge attributes to %lu assets", buf, 0xCu);
    }
    v10 = 0;
    v14 = 1;
  }
  else
  {
LABEL_3:
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v24 = v13;
      v25 = 2112;
      v26 = v10;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%@: failed with error: %@", buf, 0x16u);

    }
    v14 = 0;
  }

  _Block_object_dispose(&v18, 8);
  return v14;
}

void __69__PLModelMigrator__addRAWPackedBadgeAttributeForAllRAWAssetsInStore___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;

  objc_msgSend(a2, "asset");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setRAWBadgeAttribute:", 3);

  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
}

BOOL __81__PLModelMigrator__persistResourceTypeAttributeOnAlternateImageResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v13 = 0;
  v3 = (void *)MEMORY[0x1E0C97B48];
  v4 = a2;
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K == %d AND %K == %d AND %K >= %d"), CFSTR("dataStoreClassID"), 0, CFSTR("resourceType"), 4, CFSTR("version"), 0, CFSTR("localAvailability"), 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v4, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, &v13, &__block_literal_global_1828);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v15 = v11;
      v16 = 2112;
      v17 = v8;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%@: failed with error: %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v15 = v13;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Persisted resourceType to %lu alternate image resources", buf, 0xCu);
  }

  return v8 == 0;
}

void __81__PLModelMigrator__persistResourceTypeAttributeOnAlternateImageResourcesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  PLValidatedExternalResource *v5;
  void *v6;
  void *v7;
  char v8;
  int v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  objc_msgSend(v2, "fileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = v2;
    if (objc_msgSend(v4, "resourceType") == 4 && !objc_msgSend(v4, "version"))
    {
      v8 = objc_msgSend(v4, "recipeID");

      if ((v8 & 1) == 0)
      {
        v5 = objc_alloc_init(PLValidatedExternalResource);
        -[PLValidatedExternalResource setResourceType:](v5, "setResourceType:", 4);
        -[PLValidatedExternalResource setFileURL:](v5, "setFileURL:", v3);
        -[PLValidatedExternalResource persistResourceTypeToFileURL](v5, "persistResourceTypeToFileURL");
        goto LABEL_7;
      }
    }
    else
    {

    }
  }
  PLMigrationGetLog();
  v5 = (PLValidatedExternalResource *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(&v5->super, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v2, "asset");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "uuid");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543362;
    v10 = v7;
    _os_log_impl(&dword_199541000, &v5->super, OS_LOG_TYPE_ERROR, "Resource UR unexpectedly nil or resource type/version/recipeID don't metch for alternate-imaage resource for asset: %{public}@", (uint8_t *)&v9, 0xCu);

  }
LABEL_7:

}

BOOL __70__PLModelMigrator__repairCTMOriginalVideosWithSOCAvailableBitInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL8 v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  _QWORD v18[5];
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  NSObject *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K = %d) and SUBQUERY(modernResources, $r, $r.resourceType = %d and $r.version = %d).@count == 0"), CFSTR("kind"), 1, 10, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  v19 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v19);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v19;
  if (v8)
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __70__PLModelMigrator__repairCTMOriginalVideosWithSOCAvailableBitInStore___block_invoke_2;
    v18[3] = &unk_1E3665110;
    v18[4] = &v20;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v18);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = v10 == 0;
    if (v10)
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v13 = (id)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v10, "userInfo");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v25 = v13;
        v26 = 2112;
        v27 = v10;
        v28 = 2112;
        v29 = v14;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v16 = *((_DWORD *)v21 + 6);
        *(_DWORD *)buf = 67109120;
        LODWORD(v25) = v16;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Repaired %d assets without soc available bit.", buf, 8u);
      }
    }

  }
  else
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v15;
      v26 = 2112;
      v27 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%@: failed to fetch assets for fetch request with error: %@", buf, 0x16u);

    }
    v11 = 0;
  }

  _Block_object_dispose(&v20, 8);
  return v11;
}

void __70__PLModelMigrator__repairCTMOriginalVideosWithSOCAvailableBitInStore___block_invoke_2(uint64_t a1, void *a2)
{
  char v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_msgSend(v5, "cameraProcessingAdjustmentState");
  v4 = v5;
  if ((v3 & 1) != 0)
  {
    objc_msgSend(v5, "setCameraProcessingAdjustmentState:", objc_msgSend(v5, "cameraProcessingAdjustmentState") & 0xFFFE);
    if (objc_msgSend(v5, "hasAdjustments"))
      objc_msgSend(v5, "setDeferredProcessingNeeded:", 2);
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    v4 = v5;
  }

}

uint64_t __71__PLModelMigrator__removeResourceModelManualIdentityConstraintInStore___block_invoke(uint64_t a1)
{
  void *v1;
  id v2;
  sqlite3 *v3;
  NSObject *v4;
  int v5;
  int v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  char *errmsg;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "photosDatabasePath");
  v2 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v3 = PLOpenSQLTransactionWithDBPath((const char *)objc_msgSend(v2, "fileSystemRepresentation"));

  if (!v3)
  {
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_ERROR, "Unable to open db in order to remove manual index.", buf, 2u);
    }
    goto LABEL_17;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("DROP INDEX IF EXISTS RADAR_45737537_UNIQUE_INDEX"));
  errmsg = 0;
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v5 = sqlite3_exec(v3, (const char *)-[NSObject UTF8String](v4, "UTF8String"), 0, 0, &errmsg);
  if (v5)
  {
    v6 = v5;
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109378;
      v13 = v6;
      v14 = 2080;
      v15 = errmsg;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "Error while removing manual index: %d %s", buf, 0x12u);
    }

    if (errmsg)
      sqlite3_free(errmsg);
    PLRollbackSQLTransactionAndCloseDB(v3);
LABEL_17:
    v8 = 0;
    goto LABEL_18;
  }
  if (!PLCommitSQLTransactionAndCloseDB(v3))
  {
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "Unable to commit transaction for index removal.", buf, 2u);
    }

    goto LABEL_17;
  }

  PLMigrationGetLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEFAULT, "Removed manual index for resource model identity constraint.", buf, 2u);
  }
  v8 = 1;
LABEL_18:

  return v8;
}

uint64_t __75__PLModelMigrator__removeAllLocalVideoKeyFrameResourcesRevert14037InStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[4];
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == 65749"), CFSTR("recipeID"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v23 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v23);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v23;
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 0;
  if (!v8)
    goto LABEL_3;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __75__PLModelMigrator__removeAllLocalVideoKeyFrameResourcesRevert14037InStore___block_invoke_2;
  v16[3] = &unk_1E3665CD0;
  v17 = v3;
  v18 = &v19;
  objc_msgSend(v17, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v16);
  v10 = objc_claimAutoreleasedReturnValue();

  v9 = (id)v10;
  if (!v10)
  {
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v14 = (void *)v20[3];
      *(_DWORD *)buf = 134217984;
      v25 = v14;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Reverting 14037, removed %lu resources", buf, 0xCu);
    }
    v9 = 0;
    v13 = 1;
  }
  else
  {
LABEL_3:
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v12;
      v26 = 2112;
      v27 = v9;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "%@: failed with error: %@", buf, 0x16u);

    }
    v13 = 0;
  }

  _Block_object_dispose(&v19, 8);
  return v13;
}

uint64_t __75__PLModelMigrator__removeAllLocalVideoKeyFrameResourcesRevert14037InStore___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "deleteObject:", a2);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

uint64_t __67__PLModelMigrator__copyAssetDescriptionToAccessibilityDescription___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  id v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  id v20;
  _QWORD v21[3];

  v21[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != NULL"), CFSTR("additionalAttributes.assetDescription.longDescription"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v21[0] = CFSTR("additionalAttributes");
  v21[1] = CFSTR("additionalAttributes.assetDescription");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v21, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v8);

  v9 = (id)objc_msgSend(v3, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, 0, &__block_literal_global_1812);
  if (objc_msgSend(v3, "hasChanges"))
  {
    v16 = 0;
    v10 = objc_msgSend(v3, "save:", &v16);
    v11 = v16;
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if ((v10 & 1) != 0)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v18) = 0;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Copied %d asset descriptions fields to accessibility description fields.", buf, 8u);
      }
    }
    else if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v18 = v14;
      v19 = 2112;
      v20 = v11;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%@: failed to save with error: %@", buf, 0x16u);

    }
  }
  else
  {
    v10 = 1;
  }

  return v10;
}

void __67__PLModelMigrator__copyAssetDescriptionToAccessibilityDescription___block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v3 = a2;
  objc_msgSend(v3, "longDescription");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "length"))
  {
    objc_msgSend(v3, "setAccessibilityDescription:", v2);
    objc_msgSend(v3, "persistMetadataToFilesystem");
  }

}

BOOL __67__PLModelMigrator__clearAvalancheUUIDOnCloudSharedAssetsWithStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  id v19;
  uint8_t buf[4];
  id v21;
  const __CFString *v22;
  void *v23;
  _QWORD v24[3];

  v24[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  v3 = a2;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = v7;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("avalancheUUID"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v24[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "setPredicate:", v10);
  v22 = CFSTR("avalancheUUID");
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToUpdate:", v12);

  objc_msgSend(v5, "setResultType:", 2);
  v19 = 0;
  objc_msgSend(v3, "executeRequest:error:", v5, &v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = v19;
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v13)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v13, "result");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v21 = v17;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Batch update to clear avalancheUUID successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v21 = v14;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Batch update to clear avalancheUUID failed, error: %@", buf, 0xCu);
  }

  return v13 != 0;
}

BOOL __72__PLModelMigrator__repairReframedAssetsWithoutSOCAvailableBitWithStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL8 v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  _QWORD v18[5];
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  NSObject *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K = %d) and SUBQUERY(modernResources, $r, $r.resourceType = %d and $r.version = %d).@count > 0"), CFSTR("kind"), 1, 10, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  v19 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v19);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v19;
  if (v8)
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __72__PLModelMigrator__repairReframedAssetsWithoutSOCAvailableBitWithStore___block_invoke_2;
    v18[3] = &unk_1E3665110;
    v18[4] = &v20;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v8, v18);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = v10 == 0;
    if (v10)
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v13 = (id)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v10, "userInfo");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v25 = v13;
        v26 = 2112;
        v27 = v10;
        v28 = 2112;
        v29 = v14;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v16 = *((_DWORD *)v21 + 6);
        *(_DWORD *)buf = 67109120;
        LODWORD(v25) = v16;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Repaired %d assets without soc available bit.", buf, 8u);
      }
    }

  }
  else
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v15;
      v26 = 2112;
      v27 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%@: failed to fetch assets for fetch request with error: %@", buf, 0x16u);

    }
    v11 = 0;
  }

  _Block_object_dispose(&v20, 8);
  return v11;
}

void __72__PLModelMigrator__repairReframedAssetsWithoutSOCAvailableBitWithStore___block_invoke_2(uint64_t a1, void *a2)
{
  char v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  id v8;

  v8 = a2;
  v3 = objc_msgSend(v8, "cameraProcessingAdjustmentState");
  v4 = v8;
  if ((v3 & 1) == 0)
  {
    objc_msgSend(v8, "setCameraProcessingAdjustmentState:", objc_msgSend(v8, "cameraProcessingAdjustmentState") | 1);
    if (objc_msgSend(v8, "cloudLocalState") == 2)
      objc_msgSend(v8, "setCloudLocalState:", 0);
    objc_msgSend(v8, "master");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "cloudLocalState");

    if (v6 == 2)
    {
      objc_msgSend(v8, "master");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setCloudLocalState:", 0);

    }
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    v4 = v8;
  }

}

uint64_t __64__PLModelMigrator__migrateMetadataAndMigrationHistoryWithStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  BOOL v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  NSObject *v26;
  NSObject *v27;
  char v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  const char *v35;
  NSObject *v36;
  NSObject *v37;
  NSObject *v38;
  void *v39;
  void *v40;
  void *v41;
  PLJournal *v42;
  void *v43;
  id v44;
  id v45;
  NSObject *v46;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  id v54;
  id v55;
  _QWORD v56[4];
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  id v67;
  const char *v68;
  _BYTE v69[128];
  uint8_t v70[128];
  uint8_t buf[4];
  const char *v72;
  __int16 v73;
  id v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v67 = 0;
  v68 = 0;
  v4 = +[PLMigrationHistory currentMigrationHistoryIndex:withManagedObjectContext:error:](PLMigrationHistory, "currentMigrationHistoryIndex:withManagedObjectContext:error:", &v68, v3, &v67);
  v5 = v67;
  if (v4)
  {
    if (((unint64_t)v68 & 0x8000000000000000) == 0)
    {
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v72 = v68;
        _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Migration history already migrated from metadata, curent index: %lld", buf, 0xCu);
      }
      v7 = 1;
      goto LABEL_52;
    }
    objc_msgSend(*(id *)(a1 + 32), "metadata");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v8, "mutableCopy");

    if (!v6)
    {
      PLMigrationGetLog();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v72 = "-[PLModelMigrator _migrateMetadataAndMigrationHistoryWithStore:]_block_invoke";
        _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "%{public}s no metadata found in store", buf, 0xCu);
      }
      v7 = 0;
      goto LABEL_51;
    }
    v51 = a1;
    v52 = v5;
    v9 = v3;
    v68 = 0;
    -[NSObject allKeys](v6, "allKeys");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "sortedArrayUsingSelector:", sel_compare_);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v54 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v63 = 0u;
    v64 = 0u;
    v65 = 0u;
    v66 = 0u;
    v12 = v11;
    v13 = -[NSObject countByEnumeratingWithState:objects:count:](v12, "countByEnumeratingWithState:objects:count:", &v63, v70, 16);
    v53 = v12;
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v64;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v64 != v15)
            objc_enumerationMutation(v12);
          v17 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * i);
          if (objc_msgSend(v17, "hasPrefix:", CFSTR("MetadataArchive_")))
          {
            -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", v17);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v19 = (void *)objc_msgSend(v18, "mutableCopy");

            ++v68;
            +[PLMigrationHistory migrateLegacyMigrationHistoryWithMetadata:index:outGlobalKeyValues:managedObjectContext:](PLMigrationHistory, "migrateLegacyMigrationHistoryWithMetadata:index:outGlobalKeyValues:managedObjectContext:", v19);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v54, "addObject:", v20);
            -[NSObject removeObjectForKey:](v6, "removeObjectForKey:", v17);

            v12 = v53;
          }
        }
        v14 = -[NSObject countByEnumeratingWithState:objects:count:](v12, "countByEnumeratingWithState:objects:count:", &v63, v70, 16);
      }
      while (v14);
    }

    v21 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v3 = v9;
    +[PLMigrationHistory migrateLegacyMigrationHistoryWithMetadata:index:outGlobalKeyValues:managedObjectContext:](PLMigrationHistory, "migrateLegacyMigrationHistoryWithMetadata:index:outGlobalKeyValues:managedObjectContext:", v6, v68, v21, v9);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v54, "addObject:", v22);
    objc_msgSend(*(id *)(v51 + 40), "pathManager");
    v23 = objc_claimAutoreleasedReturnValue();
    +[PLGlobalKeyValue migrateLocaleIdentifierToGlobalKeyValues:withPathManager:](PLGlobalKeyValue, "migrateLocaleIdentifierToGlobalKeyValues:withPathManager:", v21, v23);

    v24 = v21;
    +[PLGlobalKeyValue populateWithDictionary:managedObjectContext:replaceExisting:](PLGlobalKeyValue, "populateWithDictionary:managedObjectContext:replaceExisting:", v21, v9, 0);
    objc_msgSend(*(id *)(v51 + 32), "metadata");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v23) = objc_msgSend(v25, "isEqualToDictionary:", v6);

    if ((v23 & 1) != 0)
    {
      v5 = v52;
      if (!objc_msgSend(v9, "hasChanges"))
      {
        PLMigrationGetLog();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "No migration history or global key values found to migrate.", buf, 2u);
        }
        goto LABEL_46;
      }
    }
    else
    {
      objc_msgSend(*(id *)(v51 + 32), "setMetadata:", v6);
      objc_msgSend(v9, "hasChanges");
      v5 = v52;
    }
    v62 = v5;
    v28 = objc_msgSend(v9, "save:", &v62);
    v29 = v62;

    if ((v28 & 1) == 0)
    {
      PLMigrationGetLog();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446466;
        v72 = "-[PLModelMigrator _migrateMetadataAndMigrationHistoryWithStore:]_block_invoke";
        v73 = 2114;
        v74 = v29;
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "%{public}s failed to save migrated migration history: %{public}@", buf, 0x16u);
      }
      v7 = 0;
      v5 = v29;
      goto LABEL_50;
    }
    v48 = v29;
    v49 = v22;
    v50 = v21;
    v60 = 0u;
    v61 = 0u;
    v58 = 0u;
    v59 = 0u;
    v30 = v54;
    v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v58, v69, 16);
    if (v31)
    {
      v32 = v31;
      v33 = *(_QWORD *)v59;
      do
      {
        for (j = 0; j != v32; ++j)
        {
          if (*(_QWORD *)v59 != v33)
            objc_enumerationMutation(v30);
          v35 = *(const char **)(*((_QWORD *)&v58 + 1) + 8 * j);
          PLMigrationGetLog();
          v36 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            v72 = v35;
            _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_DEFAULT, "Migrated migration history to: %{public}@ ", buf, 0xCu);
          }

        }
        v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v58, v69, 16);
      }
      while (v32);
    }

    PLMigrationGetLog();
    v37 = objc_claimAutoreleasedReturnValue();
    v24 = v50;
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v72 = (const char *)v50;
      _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_DEFAULT, "Migrated global key values to: %{public}@ ", buf, 0xCu);
    }

    PLMigrationGetLog();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v72 = (const char *)v6;
      _os_log_impl(&dword_199541000, v38, OS_LOG_TYPE_DEFAULT, "Migrated library metadata to: %{public}@ ", buf, 0xCu);
    }

    v39 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(*(id *)(v51 + 40), "pathManager");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "photoDirectoryWithType:", 8);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "fileURLWithPath:", v41);
    v26 = objc_claimAutoreleasedReturnValue();

    v42 = -[PLJournal initWithBaseURL:payloadClass:]([PLJournal alloc], "initWithBaseURL:payloadClass:", v26, objc_opt_class());
    objc_msgSend(v30, "objectEnumerator");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v56[0] = MEMORY[0x1E0C809B0];
    v56[1] = 3221225472;
    v56[2] = __64__PLModelMigrator__migrateMetadataAndMigrationHistoryWithStore___block_invoke_1801;
    v56[3] = &unk_1E3665C68;
    v44 = v43;
    v57 = v44;
    v55 = v48;
    LOBYTE(v39) = -[PLJournal createSnapshotUsingNextPayloadBlock:createOnlyIfNecessary:error:](v42, "createSnapshotUsingNextPayloadBlock:createOnlyIfNecessary:error:", v56, 0, &v55);
    v5 = v55;

    v3 = v9;
    v22 = v49;
    if ((v39 & 1) == 0)
    {
      v45 = v5;
      PLMigrationGetLog();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446466;
        v72 = "-[PLModelMigrator _migrateMetadataAndMigrationHistoryWithStore:]_block_invoke_2";
        v73 = 2114;
        v74 = v45;
        _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_ERROR, "%{public}s failed to persist migration history to journal: %{public}@", buf, 0x16u);
      }

      v5 = v45;
      v24 = v50;
    }

LABEL_46:
    v7 = 1;
LABEL_50:

    v27 = v53;
LABEL_51:

    goto LABEL_52;
  }
  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136446466;
    v72 = "-[PLModelMigrator _migrateMetadataAndMigrationHistoryWithStore:]_block_invoke";
    v73 = 2114;
    v74 = v5;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "%{public}s unable to query current history index, %{public}@", buf, 0x16u);
  }
  v7 = 0;
LABEL_52:

  return v7;
}

id __64__PLModelMigrator__migrateMetadataAndMigrationHistoryWithStore___block_invoke_1801(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(*(id *)(a1 + 32), "nextObject");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "payloadForChangedKeys:", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

uint64_t __60__PLModelMigrator__moveGpsHorizontalAccuracyToNewAttribute___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  id v16;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  id v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("locationData"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v26[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v8);

  v18 = 0;
  v19 = &v18;
  v20 = 0x2020000000;
  v21 = 0;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __60__PLModelMigrator__moveGpsHorizontalAccuracyToNewAttribute___block_invoke_2;
  v17[3] = &unk_1E3665110;
  v17[4] = &v18;
  v9 = (id)objc_msgSend(v3, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, 0, v17);
  if (objc_msgSend(v3, "hasChanges"))
  {
    v16 = 0;
    v10 = objc_msgSend(v3, "save:", &v16);
    v11 = v16;
    if ((v10 & 1) != 0)
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v13 = (void *)v19[3];
        *(_DWORD *)buf = 134217984;
        v23 = v13;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Moved %ld assets' GPS horizontal accuracy.", buf, 0xCu);
      }
    }
    else
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v23 = v14;
        v24 = 2112;
        v25 = v11;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%@: failed to save: %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v10 = 1;
  }
  _Block_object_dispose(&v18, 8);

  return v10;
}

void __60__PLModelMigrator__moveGpsHorizontalAccuracyToNewAttribute___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  double v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  id v12;
  CLLocationCoordinate2D v13;

  v12 = a2;
  objc_msgSend(v12, "locationData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "dateCreated");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = +[PLManagedAsset newLocationFromLocationData:timestampIfMissing:](PLManagedAsset, "newLocationFromLocationData:timestampIfMissing:", v3, v4);

  objc_msgSend(v5, "coordinate");
  if (CLLocationCoordinate2DIsValid(v13) && (objc_msgSend(v5, "horizontalAccuracy"), v6 != 0.0))
  {
    objc_msgSend(v5, "horizontalAccuracy");
    v11 = v10;
    objc_msgSend(v12, "additionalAttributes");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    v9 = v11;
  }
  else
  {
    objc_msgSend(v12, "additionalAttributes");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    v9 = -1.0;
  }
  objc_msgSend(v7, "setGpsHorizontalAccuracy:", v9);

  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
}

uint64_t __77__PLModelMigrator__migrateCandidateBitsToDeferredProcessingCandidateOptions___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v22;
  id v24;
  _QWORD v25[5];
  __int16 v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  id v36;
  _QWORD v37[2];

  v37[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v37[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v37, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v7);

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 40) | 1u);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v9);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 42) | 1u);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v10);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 44) | 1u);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v11);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 40) | *(unsigned __int16 *)(a1 + 42) | 1u);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v12);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 40) | *(unsigned __int16 *)(a1 + 44) | 1u);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v13);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 42) | *(unsigned __int16 *)(a1 + 44) | 1u);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v14);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), *(unsigned __int16 *)(a1 + 40) | *(unsigned __int16 *)(a1 + 42) | *(unsigned __int16 *)(a1 + 44) | 1u);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObject:", v15);

  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v8);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v16);

  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __77__PLModelMigrator__migrateCandidateBitsToDeferredProcessingCandidateOptions___block_invoke_2;
  v25[3] = &unk_1E3665C20;
  v26 = *(_WORD *)(a1 + 40);
  v27 = *(_WORD *)(a1 + 42);
  v28 = *(_WORD *)(a1 + 44);
  v25[4] = &v29;
  v17 = (id)objc_msgSend(v3, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, 0, v25);
  if (objc_msgSend(v3, "hasChanges"))
  {
    v24 = 0;
    v18 = objc_msgSend(v3, "save:", &v24);
    v19 = v24;
    if ((v18 & 1) != 0)
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21 = (void *)v30[3];
        *(_DWORD *)buf = 134217984;
        v34 = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Migrated %ld soc assets' candidate bits.", buf, 0xCu);
      }
    }
    else
    {
      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v34 = v22;
        v35 = 2112;
        v36 = v19;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "%@: failed to save: %@", buf, 0x16u);

      }
    }

  }
  else
  {
    v18 = 1;
  }
  _Block_object_dispose(&v29, 8);

  return v18;
}

void __77__PLModelMigrator__migrateCandidateBitsToDeferredProcessingCandidateOptions___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;

  v3 = a2;
  LODWORD(v4) = (unsigned __int16)(*(_WORD *)(a1 + 40) & objc_msgSend(v3, "cameraProcessingAdjustmentState")) != 0;
  if ((*(unsigned __int16 *)(a1 + 42) & objc_msgSend(v3, "cameraProcessingAdjustmentState")) != 0)
    LODWORD(v4) = v4 | 4;
  if ((*(unsigned __int16 *)(a1 + 44) & objc_msgSend(v3, "cameraProcessingAdjustmentState")) != 0)
    v4 = v4 | 2;
  else
    v4 = v4;
  objc_msgSend(v3, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setDeferredProcessingCandidateOptions:", v4);

  objc_msgSend(v3, "setCameraProcessingAdjustmentState:", objc_msgSend(v3, "cameraProcessingAdjustmentState") & ((*(unsigned __int16 *)(a1 + 44) | *(unsigned __int16 *)(a1 + 40) | *(unsigned __int16 *)(a1 + 42)) ^ 0xFFFF));
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
}

uint64_t __47__PLModelMigrator__runPairingForAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  PLPairing *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  id v12;
  id v13;
  uint8_t buf[4];
  id v15;
  __int16 v16;
  NSObject *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_alloc_init(PLPairing);
  v13 = 0;
  -[PLPairing processPairingForEntireLibraryInContext:error:](v4, "processPairingForEntireLibraryInContext:error:", v3, &v13);
  v5 = v13;
  if (v5)
  {
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v15 = v5;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Error while attempting to pair CTM assets in the library: %@", buf, 0xCu);
    }
    v7 = 0;
LABEL_13:

    goto LABEL_14;
  }
  if (objc_msgSend(v3, "hasChanges"))
  {
    v12 = 0;
    v7 = objc_msgSend(v3, "save:", &v12);
    v6 = v12;
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if ((v7 & 1) != 0)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Processed assets for CTM pairing.", buf, 2u);
      }
    }
    else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v15 = v10;
      v16 = 2112;
      v17 = v6;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "%@: failed to save: %@", buf, 0x16u);

    }
    goto LABEL_13;
  }
  v7 = 1;
LABEL_14:

  return v7;
}

void __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke(uint64_t a1, void *a2, int a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  id v14;

  v14 = a2;
  objc_msgSend(v14, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "spatialOverCaptureGroupIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = v14;
  if (!v6)
  {
    objc_msgSend(v14, "metadataFromMediaPropertiesOrOriginalResource");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "spatialOverCaptureIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_msgSend(v14, "additionalAttributes");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setSpatialOverCaptureGroupIdentifier:", v9);

      if (a3 && objc_msgSend(v14, "hasAdjustments"))
      {
        objc_msgSend(v14, "additionalAttributes");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "unmanagedAdjustment");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "adjustmentRenderTypes");

        if ((v13 & 0x10) != 0)
          objc_msgSend(v14, "setCameraProcessingAdjustmentState:", objc_msgSend(v14, "cameraProcessingAdjustmentState") | 4);
        if ((v13 & 0x20) != 0)
        {
          objc_msgSend(v14, "setCameraProcessingAdjustmentState:", objc_msgSend(v14, "cameraProcessingAdjustmentState") | 4);
          objc_msgSend(v14, "setCameraProcessingAdjustmentState:", objc_msgSend(v14, "cameraProcessingAdjustmentState") | 8);
        }
      }
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    }

    v7 = v14;
  }

}

uint64_t __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id v23;
  _QWORD v24[4];
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  id v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  id v33;
  _QWORD v34[3];
  _QWORD v35[4];

  v35[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %@ AND %K BEGINSWITH[c] %@"), CFSTR("dateCreated"), *(_QWORD *)(a1 + 32), CFSTR("additionalAttributes.originalFilename"), *(_QWORD *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v35[0] = CFSTR("master.mediaMetadata");
  v35[1] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v8);

  v9 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v10 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke_3;
  v26[3] = &unk_1E3665BA8;
  v29 = *(id *)(a1 + 48);
  v27 = *(id *)(a1 + 40);
  v11 = v9;
  v28 = v11;
  v12 = (id)objc_msgSend(v3, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, 0, v26);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %@ AND %K IN %@"), CFSTR("dateCreated"), *(_QWORD *)(a1 + 32), CFSTR("additionalAttributes.originalFilename"), v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v13);

  v34[0] = CFSTR("master.mediaMetadata");
  v34[1] = CFSTR("additionalAttributes");
  v34[2] = CFSTR("additionalAttributes.unmanagedAdjustment");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v14);

  v24[0] = v10;
  v24[1] = 3221225472;
  v24[2] = __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke_4;
  v24[3] = &unk_1E3665BD0;
  v25 = *(id *)(a1 + 48);
  v15 = (id)objc_msgSend(v3, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, 0, v24);
  if (objc_msgSend(v3, "hasChanges"))
  {
    v23 = 0;
    v16 = objc_msgSend(v3, "save:", &v23);
    v17 = v23;
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = v18;
    if ((v16 & 1) != 0)
    {
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
        *(_DWORD *)buf = 134217984;
        v31 = v20;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "Scavenged camera processing adjustment metadata for %ld assets.", buf, 0xCu);
      }
    }
    else if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 64));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v31 = v21;
      v32 = 2112;
      v33 = v17;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "%@: failed to save: %@", buf, 0x16u);

    }
  }
  else
  {
    v16 = 1;
  }

  return v16;
}

void __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, id, _QWORD);
  id v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(void (**)(uint64_t, id, _QWORD))(v3 + 16);
  v5 = a2;
  v4(v3, v5, 0);
  objc_msgSend(v5, "originalFilename");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "stringByReplacingCharactersInRange:withString:", objc_msgSend(*(id *)(a1 + 32), "length") - 1, 1, &stru_1E36789C0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v6, "length"))
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);

}

uint64_t __79__PLModelMigrator__scavengeCameraProcessingAdjustmentMetadataForAssetsInStore___block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __63__PLModelMigrator__fixUnpushedVideoComplementResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[7];
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  uint64_t v42;
  _QWORD v43[3];

  v43[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v43[0] = CFSTR("modernResources");
  v43[1] = CFSTR("master");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v43, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v7);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d && %K == %d && %K != NULL"), CFSTR("kind"), 0, CFSTR("kindSubtype"), 2, CFSTR("master"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v8);
  v31 = 0;
  v32 = &v31;
  v33 = 0x2020000000;
  v34 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x2020000000;
  v30 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v22 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v22);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v22;
  if (v9)
  {
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __63__PLModelMigrator__fixUnpushedVideoComplementResourcesInStore___block_invoke_2;
    v21[3] = &unk_1E36652B0;
    v21[4] = &v27;
    v21[5] = &v31;
    v21[6] = &v23;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v9, v21);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11)
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v36 = v13;
        v37 = 2114;
        v38 = v11;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}@: save failed: %{public}@", buf, 0x16u);

      }
      v14 = 0;
    }
    else
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = (void *)v28[3];
        v18 = v32[3];
        v19 = v24[3];
        *(_DWORD *)buf = 138544130;
        v36 = v16;
        v37 = 2048;
        v38 = v17;
        v39 = 2048;
        v40 = v18;
        v41 = 2048;
        v42 = v19;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "%{public}@: resources repushed: %lu, resources created: %lu, resource creation failed: %lu", buf, 0x2Au);

      }
      v11 = 0;
      v14 = 1;
    }
  }
  else
  {
    PLMigrationGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v36 = v15;
      v37 = 2114;
      v38 = v10;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%{public}@: fetch failed: %{public}@", buf, 0x16u);

    }
    v14 = 0;
    v11 = v10;
  }

  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v31, 8);

  return v14;
}

void __63__PLModelMigrator__fixUnpushedVideoComplementResourcesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "firstPersistedResourceMatching:", &__block_literal_global_1778);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = v4;
    if (!objc_msgSend(v4, "cloudLocalState"))
    {
      objc_msgSend(v5, "fingerprint");
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v6)
      {
        v7 = a1 + 32;
LABEL_7:
        ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 8) + 24);
        objc_msgSend(v3, "master");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setCloudLocalState:", 0);

        objc_msgSend(v3, "setCloudLocalState:", 0);
      }
    }
  }
  else
  {
    +[PLResourceInstaller onDemand_installOriginalVideoComplementResourceIfPresentForAsset:](PLResourceInstaller, "onDemand_installOriginalVideoComplementResourceIfPresentForAsset:", v3);
    v8 = objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v5 = (void *)v8;
      v7 = a1 + 40;
      goto LABEL_7;
    }
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    PLBackendGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v3, "uuid");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "pathForVideoComplementFile");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v11;
      v15 = 2114;
      v16 = v12;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Unable to create resource for original video complement for asset uuid: %{public}@, resource is missing from CPL and not locally available at path: %{public}@", (uint8_t *)&v13, 0x16u);

    }
    v5 = 0;
  }

}

BOOL __63__PLModelMigrator__fixUnpushedVideoComplementResourcesInStore___block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "cplType") == 18;
}

BOOL __74__PLModelMigrator__fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BOOL8 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  _QWORD v16[4];
  NSObject *v17;
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  +[PLInternalResource fetchRequest](PLInternalResource, "fetchRequest");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d && %K == %d"), CFSTR("cloudLocalState"), 3, CFSTR("remoteAvailability"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);
  v18 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v5, &v18);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v18;
  if (v7)
  {
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __74__PLModelMigrator__fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore___block_invoke_2;
    v16[3] = &unk_1E36775E8;
    v17 = v4;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v7, v16);
    v9 = objc_claimAutoreleasedReturnValue();

    v10 = v9 == 0;
    if (v9)
    {
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v20 = v12;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "%{public}@: failed", buf, 0xCu);

      }
    }
    v13 = v17;
    v8 = (id)v9;
  }
  else
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v20 = v14;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%{public}@: fetch failed", buf, 0xCu);

    }
    v10 = 0;
  }

  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", &__block_literal_global_1775);
  return v10;
}

void __74__PLModelMigrator__fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(v10, "setRemoteAvailability:", 1);
  v3 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v10, "cplType"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v5, "unsignedIntegerValue") + 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v10, "cplType"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v6, v8);

  }
  else
  {
    v9 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v10, "cplType"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setObject:forKeyedSubscript:", &unk_1E375E4C0, v6);
  }

}

void __74__PLModelMigrator__fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore___block_invoke_1773(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 134218240;
    v8 = objc_msgSend(v5, "unsignedIntegerValue");
    v9 = 2048;
    v10 = objc_msgSend(v4, "unsignedIntegerValue");
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "fixed remote availability for %lu resources with cpl type %lu", (uint8_t *)&v7, 0x16u);
  }

}

uint64_t __57__PLModelMigrator__fixSharedStreamVideoResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  void *v21;
  _QWORD v23[4];
  id v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t buf[4];
  void *v32;
  _QWORD v33[2];
  _QWORD v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v27 = 0;
  v28 = &v27;
  v29 = 0x2020000000;
  v30 = 0;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v34[0] = CFSTR("modernResources");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v7);

  v8 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("kind"), 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = v9;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v33[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v33, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "andPredicateWithSubpredicates:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setPredicate:", v12);
  v26 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v26);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v26;
  if (v13)
  {
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = __57__PLModelMigrator__fixSharedStreamVideoResourcesInStore___block_invoke_2;
    v23[3] = &unk_1E366E278;
    v25 = &v27;
    v24 = v3;
    objc_msgSend(v24, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v13, v23);
    v15 = objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v32 = v17;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%{public}@: failed", buf, 0xCu);

      }
      v18 = 0;
      v14 = v15;
    }
    else
    {

      PLMigrationGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v21 = (void *)v28[3];
        *(_DWORD *)buf = 134217984;
        v32 = v21;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "added %lu shared stream video resources", buf, 0xCu);
      }
      v18 = 1;
    }
  }
  else
  {
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v32 = v20;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "%{public}@: fetch failed", buf, 0xCu);

    }
    v18 = 0;
  }

  _Block_object_dispose(&v27, 8);
  return v18;
}

void __57__PLModelMigrator__fixSharedStreamVideoResourcesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "modernResources");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectsPassingTest:", &__block_literal_global_1769);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v4, "count"))
  {
    +[PLResourceDataStoreManager updateDerivativeResourcesForAsset:forLifecycleEvent:](PLResourceDataStoreManager, "updateDerivativeResourcesForAsset:forLifecycleEvent:", v6, 2);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend(v5, "count");

  }
  objc_msgSend(*(id *)(a1 + 32), "refreshObject:mergeChanges:", v6, objc_msgSend(v6, "hasChanges"));

}

BOOL __57__PLModelMigrator__fixSharedStreamVideoResourcesInStore___block_invoke_3(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "dataStoreSubtype") == 7 || objc_msgSend(v2, "dataStoreSubtype") == 8;

  return v3;
}

uint64_t __85__PLModelMigrator__verifyAndFixBrokenLocalAvailabilityForResourceWithFileIDsInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  id v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v12 = 0;
  v13 = 0;
  v10 = 0;
  v11 = 0;
  v3 = +[PLCacheDeleteSupport verifyAndFixLocalAvailabilityForMissingResourcesUsingFileIDInManagedObjectContext:countPresent:countMissing:countUnableToVerify:error:](PLCacheDeleteSupport, "verifyAndFixLocalAvailabilityForMissingResourcesUsingFileIDInManagedObjectContext:countPresent:countMissing:countUnableToVerify:error:", a2, &v13, &v12, &v11, &v10);
  v4 = v10;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    NSStringFromSelector(*(SEL *)(a1 + 32));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544130;
    v15 = v6;
    v16 = 2048;
    v17 = v13;
    v18 = 2048;
    v19 = v12;
    v20 = 2048;
    v21 = v11;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@: Count present: %ld, missing: %ld, unable to verify: %ld\n", buf, 0x2Au);

  }
  if (!v3)
  {
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v15 = v8;
      v16 = 2112;
      v17 = v4;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "%{public}@: encountered errors while verifying fileIDs: %@", buf, 0x16u);

    }
  }

  return 1;
}

BOOL __80__PLModelMigrator__requestAvailabilityChangeForAssetsMissing1kResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  PLValidatedExternalResource *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  NSObject *v17;
  id v18;
  void *v19;
  void *v20;
  _QWORD v22[4];
  id v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  void *v35;
  _QWORD v36[2];

  v36[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 0;
  +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 65747);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "supportedVersionsForLocalResourceGeneration");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "integerValue");

  v8 = objc_alloc_init(PLValidatedExternalResource);
  -[PLValidatedExternalResource setResourceType:](v8, "setResourceType:", 0);
  -[PLValidatedExternalResource setVersion:](v8, "setVersion:", v7);
  -[PLValidatedExternalResource setRecipeID:](v8, "setRecipeID:", 65747);
  objc_msgSend(v4, "uti");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLValidatedExternalResource setUniformTypeIdentifier:](v8, "setUniformTypeIdentifier:", v9);

  v10 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "fetchRequestWithEntityName:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v36[0] = CFSTR("modernResources");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v36, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setRelationshipKeyPathsForPrefetching:", v13);

  objc_msgSend(v3, "executeFetchRequest:error:", v12, 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __80__PLModelMigrator__requestAvailabilityChangeForAssetsMissing1kResourcesInStore___block_invoke_2;
  v22[3] = &unk_1E3665AB8;
  v25 = v7;
  v15 = v4;
  v23 = v15;
  v24 = &v26;
  objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v14, v22);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (v16)
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v18 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "userInfo");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v31 = v18;
      v32 = 2112;
      v33 = v16;
      v34 = 2112;
      v35 = v19;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v20 = (void *)v27[3];
      *(_DWORD *)buf = 134217984;
      v31 = v20;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "requested 1k for %lu assets.", buf, 0xCu);
    }
  }

  _Block_object_dispose(&v26, 8);
  return v16 == 0;
}

void __80__PLModelMigrator__requestAvailabilityChangeForAssetsMissing1kResourcesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *(unsigned int *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v23[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceGenerator expectedLocalResourceRecipesForAsset:versions:](PLResourceGenerator, "expectedLocalResourceRecipesForAsset:versions:", v3, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *(unsigned int *)(a1 + 48));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setWithObject:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceGenerator locallyUnavailableRecipesFromRecipes:versions:asset:](PLResourceGenerator, "locallyUnavailableRecipesFromRecipes:versions:asset:", v6, v9, v3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v10, "containsObject:", *(_QWORD *)(a1 + 32)))
  {
    objc_msgSend(*(id *)(a1 + 32), "chooseIngredientsFrom:version:", v3, *(unsigned int *)(a1 + 48));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11)
    {
      v12 = *(unsigned int *)(a1 + 48);
      v13 = objc_msgSend(v3, "width");
      v14 = objc_msgSend(v3, "height");
      v15 = *(_QWORD *)(a1 + 32);
      LOWORD(v21) = objc_msgSend(v3, "kind");
      +[PLResourceInstaller generateValidatedExternalImageResourceOfType:forFilePath:requireFileToBePresent:version:basedOnFullSizeWidth:andHeight:recipe:assetKind:error:](PLResourceInstaller, "generateValidatedExternalImageResourceOfType:forFilePath:requireFileToBePresent:version:basedOnFullSizeWidth:andHeight:recipe:assetKind:error:", 0, 0, 0, v12, v13, v14, v15, v21, 0);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = v16;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v22, 1);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLResourceDataStoreManager storeExternalResources:forAsset:forLifecycleEvent:error:](PLResourceDataStoreManager, "storeExternalResources:forAsset:forLifecycleEvent:error:", v17, v3, 2, 0);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v18, "anyObject");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = v19;
      if (v19)
      {
        objc_msgSend(v19, "setLocalAvailabilityTarget:", 1);
        ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      }

    }
  }

}

uint64_t __54__PLModelMigrator__regenerateReferenceKeyDataInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  PLPrimaryResourceDataStoreReferenceFileKey *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  objc_msgSend(a2, "modernResources", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if ((objc_msgSend(v7, "isDerivative") & 1) == 0)
        {
          objc_msgSend(v7, "dataStoreKey");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v9 = -[PLPrimaryResourceDataStoreReferenceFileKey initWithResourceType:]([PLPrimaryResourceDataStoreReferenceFileKey alloc], "initWithResourceType:", objc_msgSend(v7, "resourceType"));
            -[PLPrimaryResourceDataStoreReferenceFileKey keyData](v9, "keyData");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v7, "setDataStoreKeyData:", v10);

          }
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }

  return 1;
}

BOOL __52__PLModelMigrator__fixupResourceTypeUnknownInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  id v15;
  uint8_t buf[4];
  id v17;
  const __CFString *v18;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_DEFAULT, "Renumbering PLResourceTypeUnknown from 32 to 31...", buf, 2u);
  }

  v4 = (void *)MEMORY[0x1E0C97AB0];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "batchUpdateRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("resourceType"), 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  v18 = CFSTR("resourceType");
  v19[0] = &unk_1E375E4A8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, &v18, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPropertiesToUpdate:", v8);

  objc_msgSend(v6, "setResultType:", 2);
  v15 = 0;
  objc_msgSend(v2, "executeRequest:error:", v6, &v15);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = v15;
  PLMigrationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v9)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "result");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v17 = v13;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Batch update to remap PLResourceTypeUnknown from 32 to 31 successful with result %@", buf, 0xCu);

    }
  }
  else if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v17 = v10;
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Batch update to remap PLResourceTypeUnknown from 32 to 31 failed, error: %@", buf, 0xCu);
  }

  return v9 != 0;
}

BOOL __80__PLModelMigrator__renumberLocalAvailabilityAndLocalAvailabilityTargetsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _BOOL8 v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  id v21;
  id v22;
  const __CFString *v23;
  void *v24;
  uint8_t buf[4];
  id v26;
  const __CFString *v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = (void *)MEMORY[0x1E0C97AB0];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "batchUpdateRequestWithEntityName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("localAvailability"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  v27 = CFSTR("localAvailability");
  v28[0] = &unk_1E375E490;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToUpdate:", v7);

  objc_msgSend(v5, "setResultType:", 2);
  v22 = 0;
  objc_msgSend(v2, "executeRequest:error:", v5, &v22);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v22;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "result");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v26 = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Batch update to remap localAvailability none/0 to none/-1 request successful with result %@", buf, 0xCu);

    }
    v13 = (void *)MEMORY[0x1E0C97AB0];
    +[PLInternalResource entityName](PLInternalResource, "entityName");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "batchUpdateRequestWithEntityName:", v14);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v23 = CFSTR("localAvailabilityTarget");
    v24 = &unk_1E375E340;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v24, &v23, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setPropertiesToUpdate:", v15);

    objc_msgSend(v5, "setResultType:", 2);
    v21 = 0;
    objc_msgSend(v2, "executeRequest:error:", v5, &v21);
    v11 = objc_claimAutoreleasedReturnValue();
    v9 = v21;
    v16 = v11 != 0;
    PLMigrationGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = v17;
    if (v11)
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        -[NSObject result](v11, "result");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v26 = v19;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "Batch update to remap localAvailabilityTarget to neutral/0 request successful with result %@", buf, 0xCu);

      }
    }
    else if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v26 = v9;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Batch update to remap localAvailabilityTarget to neutral/0 request failed, error: %@", buf, 0xCu);
    }

  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v26 = v9;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Batch update to remap localAvailability none/0 to none/-1 request failed, error: %@", buf, 0xCu);
    }
    v16 = 0;
  }

  objc_msgSend(v2, "reset");
  return v16;
}

void __58__PLModelMigrator__invalidateReverseGeocodingDataInStore___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  char *v11;
  void *v12;
  id v13;
  uint8_t buf[4];
  const char *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  void *v19;
  const __CFString *v20;
  _QWORD v21[2];

  v21[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v20 = CFSTR("reverseLocationDataIsValid");
  v21[0] = MEMORY[0x1E0C9AAA0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, &v20, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPropertiesToUpdate:", v5);

  objc_msgSend(v4, "setResultType:", 2);
  v6 = *(void **)(a1 + 32);
  v13 = 0;
  objc_msgSend(v6, "executeRequest:error:", v4, &v13);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v13;
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v7, "result");
      v11 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v15 = v11;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Invalidated reverse geocoding data for %@ assets", buf, 0xCu);

    }
  }
  else
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v8, "userInfo");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v15 = "-[PLModelMigrator _invalidateReverseGeocodingDataInStore:]_block_invoke";
      v16 = 2112;
      v17 = v8;
      v18 = 2112;
      v19 = v12;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }

}

uint64_t __85__PLModelMigrator__regenerateSharedStreamsDataStoreKeysDataInStore_deferHintChanges___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  void *v13;
  int v14;
  int v15;
  PLSharedStreamsDataStoreKey *v16;
  PLSharedStreamsDataStoreKey *v17;
  void *v18;
  void *v19;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "albums");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "anyObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v5, "kindValue") == 1505)
  {
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    objc_msgSend(v3, "modernResources");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    if (v7)
    {
      v8 = v7;
      v21 = a1;
      v22 = 0;
      v9 = *(_QWORD *)v24;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v24 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
          objc_msgSend(v11, "dataStoreKeyData");
          v12 = objc_claimAutoreleasedReturnValue();
          if (v12)
          {
            v13 = (void *)v12;
            v14 = objc_msgSend(v11, "dataStoreClassID");
            v15 = +[PLSharedStreamsDataStore storeClassID](PLSharedStreamsDataStore, "storeClassID");

            if (v14 == v15)
            {
              v16 = -[PLSharedStreamsDataStoreKey initWithAsset:album:type:]([PLSharedStreamsDataStoreKey alloc], "initWithAsset:album:type:", v3, v5, objc_msgSend(v11, "dataStoreSubtype"));
              v17 = v16;
              if (v16
                && (-[PLSharedStreamsDataStoreKey keyData](v16, "keyData"),
                    v18 = (void *)objc_claimAutoreleasedReturnValue(),
                    v18,
                    v18))
              {
                -[PLSharedStreamsDataStoreKey keyData](v17, "keyData");
                v19 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v11, "setDataStoreKeyData:", v19);

                v22 = 1;
              }
              else
              {
                objc_msgSend(v11, "markAsNotLocallyAvailable");
              }

            }
          }
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
      }
      while (v8);

      if ((v22 & 1) != 0 && !*(_BYTE *)(v21 + 32))
        objc_msgSend(v3, "recalculateImageRequestHints");
    }
    else
    {

    }
  }

  return 1;
}

uint64_t __54__PLModelMigrator__fixSidecarUTIsAndDataStoreSubtype___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v2 = a2;
  objc_msgSend(v2, "dataStoreKey");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v3, "extension");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "caseInsensitiveCompare:", *MEMORY[0x1E0D75A70]);

    if (!v5)
    {
      objc_msgSend(MEMORY[0x1E0D752F0], "supplementalResourceXMPType");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "identifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLUniformTypeIdentifier utiWithIdentifier:](PLUniformTypeIdentifier, "utiWithIdentifier:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "setUniformTypeIdentifier:", v8);

    }
  }
  objc_msgSend(v2, "uniformTypeIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "identifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D752F0], "supplementalResourceAAEType");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "isEqualToString:", v12))
  {
    v13 = objc_msgSend(v2, "dataStoreSubtype");

    if (v13 != 22)
      objc_msgSend(v2, "setDataStoreSubtype:", 22);
  }
  else
  {

  }
  return 1;
}

uint64_t __55__PLModelMigrator__reconstructImageExtendedAttributes___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_msgSend(v2, "newShortLivedLibraryWithName:", "-[PLModelMigrator _reconstructImageExtendedAttributes:]_block_invoke");
  v5 = objc_alloc(MEMORY[0x1E0D75140]);
  objc_msgSend(v3, "imageProperties");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0D752F0];
  objc_msgSend(v3, "uniformTypeIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "typeWithIdentifier:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryBundle");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "timeZoneLookup");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v5, "initWithImageProperties:contentType:timeZoneLookup:", v6, v9, v11);

  objc_msgSend(v3, "updateImageExtendedAttributesFromMetadata:", v12);
  return 1;
}

void __44__PLModelMigrator__updateAlbumDatesInStore___block_invoke(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  char v5;
  id v6;
  NSObject *v7;
  id v8;
  uint8_t buf[4];
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  +[PLPhotoLibrary refreshCachedCountsAndDates:onAssetsContainerClass:inContext:withPredicate:](PLPhotoLibrary, "refreshCachedCountsAndDates:onAssetsContainerClass:inContext:withPredicate:", 1, objc_opt_class(), *(_QWORD *)(a1 + 32), 0);
  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    PLMigrationGetLog();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 32), "updatedObjects");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134217984;
      v10 = objc_msgSend(v3, "count");
      _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_DEFAULT, "Updating dates on %ld albums", buf, 0xCu);

    }
    v4 = *(void **)(a1 + 32);
    v8 = 0;
    v5 = objc_msgSend(v4, "save:", &v8);
    v6 = v8;
    if ((v5 & 1) == 0)
    {
      PLBackendGetLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v10 = (uint64_t)v6;
        _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "Failed to update dates on albums %@", buf, 0xCu);
      }

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
    }

  }
}

uint64_t __61__PLModelMigrator__updateMissingFileSystemVolumeUuidInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0D73308];
  v3 = a2;
  objc_msgSend(v2, "UUIDString");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setUuid:", v4);

  return 1;
}

uint64_t __55__PLModelMigrator__resetAnalysisStateForVideosInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "resetAnalysisStateForVideosWithMoc:", a2);
}

uint64_t __67__PLModelMigrator__deleteVideoThumbsMadeFromPreferredFrameInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  _QWORD v18[5];
  id v19;
  id v20;
  uint8_t buf[4];
  NSObject *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K != 0"), CFSTR("kind"), 1, CFSTR("videoKeyFrameValue"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v6, "setFetchBatchSize:", 100);
  v20 = 0;
  objc_msgSend(v3, "executeFetchRequest:error:", v6, &v20);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v20;
  v10 = objc_msgSend(v8, "count");
  if (v8)
  {
    v11 = v10;
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __67__PLModelMigrator__deleteVideoThumbsMadeFromPreferredFrameInStore___block_invoke_2;
    v18[3] = &unk_1E3677A78;
    v12 = *(void **)(a1 + 40);
    v18[4] = *(_QWORD *)(a1 + 32);
    v19 = v12;
    objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:shouldRefreshAfterSave:withBlock:", v8, 1, v18);
    v13 = objc_claimAutoreleasedReturnValue();

    if (!v13)
    {
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v22 = v11;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Deleted thumbnails for %lu video assets with non-zero videoKeyFrame values and marked for rebuild", buf, 0xCu);
      }
      v14 = 1;
      goto LABEL_12;
    }
  }
  else
  {
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v9;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Failed to fetch video assets with non-zero videoKeyFrame values with error %@", buf, 0xCu);
    }

    v13 = 0;
  }
  PLMigrationGetLog();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v22 = v13;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Failed to enumerate thumbnails for video assets with non-zero videoKeyFrame values with error %@", buf, 0xCu);
  }

  v14 = 0;
LABEL_12:

  return v14;
}

void __67__PLModelMigrator__deleteVideoThumbsMadeFromPreferredFrameInStore___block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v8 = a2;
  objc_msgSend(v2, "_migrationThumbnailManagerWithStore:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "thumbnailIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (int)objc_msgSend(v8, "thumbnailIndex");
  objc_msgSend(v8, "uuid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deleteThumbnailsWithIdentifier:orIndex:uuid:", v5, v6, v7);

  objc_msgSend(v8, "setEffectiveThumbnailIndex:", 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t __54__PLModelMigrator__filterSceneClassificationsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;

  v3 = a2;
  objc_msgSend(v3, "managedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v3;
  v6 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", objc_msgSend(v5, "sceneIdentifier"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stringWithFormat:", CFSTR("%@"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "doubleValue");
    v12 = v11;

  }
  else
  {
    v12 = 1.79769313e308;
  }
  objc_msgSend(v5, "confidence");
  if (v13 < v12)
  {
    objc_msgSend(v4, "deleteObject:", v5);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }

  return 1;
}

uint64_t __69__PLModelMigrator__ensureAllUserVerifiedPersonsHaveFaceCropsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;

  v2 = a2;
  objc_msgSend(v2, "keyFace");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(v2, "keyFace");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setEffectiveNameSource:", 1);

  }
  return 1;
}

void __54__PLModelMigrator__unquarantineClass_inManagedObject___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  id v3;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = v3;
    objc_msgSend(v2, "setUploadAttempts:", 0);
    objc_msgSend(v2, "setLastUploadAttemptDate:", 0);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "setCloudLocalState:", 0);

}

void __65__PLModelMigrator__retryQuarantinedAssetsAndFixResourceRelation___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  objc_msgSend(v2, "asset");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setUploadAttempts:", 0);
  objc_msgSend(v4, "setLastUploadAttemptDate:", 0);
  objc_msgSend(v4, "setCloudLocalState:", 0);
  objc_msgSend(v2, "cloudMaster");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setCloudLocalState:", 0);
  objc_msgSend(v2, "setAsset:", 0);

}

uint64_t __52__PLModelMigrator__deletePersonsMissingUUIDInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v5;
  id v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  PLMigrationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_DEFAULT, "Deleting person missing UUID: %@", (uint8_t *)&v5, 0xCu);
  }

  objc_msgSend(v2, "deletePersonWithReason:", 1);
  return 1;
}

void __56__PLModelMigrator__repushPersonsWithMergeTargetInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "cloudLocalState"))
  {
    objc_msgSend(v3, "setCloudLocalState:", 0);
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }

}

void __42__PLModelMigrator__fixNilCloudMasterGUID___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint8_t buf[4];
  void *v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "assets");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v22, 16);
  if (v5)
  {
    v7 = v5;
    v8 = *(_QWORD *)v17;
    *(_QWORD *)&v6 = 138412290;
    v15 = v6;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v17 != v8)
          objc_enumerationMutation(v4);
        v10 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        objc_msgSend(v10, "setCloudLocalState:", 0, v15);
        objc_msgSend(v10, "setMaster:", 0);
        ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        PLMigrationGetLog();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v10, "uuid");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = v15;
          v21 = v12;
          _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Marking asset %@ unpushed, master doesn't have a valid cloudMasterGUID", buf, 0xCu);

        }
      }
      v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v22, 16);
    }
    while (v7);
  }
  PLMigrationGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v3, "scopedIdentifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v21 = v14;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Deleting master %@ to force master creation", buf, 0xCu);

  }
  objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v3);
  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);

}

void __44__PLModelMigrator__fixAssetMasterResources___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  void *v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "master");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(v3, "uuid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLCloudResource cloudResourceForResourceType:forAssetUuid:forCloudMaster:](PLCloudResource, "cloudResourceForResourceType:forAssetUuid:forCloudMaster:", 1, v5, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v6)
    {
      v24 = v3;
      v7 = (void *)MEMORY[0x1E0C99E60];
      v8 = v4;
      objc_msgSend(v4, "assets");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setWithSet:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      v27 = 0u;
      v28 = 0u;
      v25 = 0u;
      v26 = 0u;
      v11 = v10;
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v26;
        do
        {
          for (i = 0; i != v13; ++i)
          {
            if (*(_QWORD *)v26 != v14)
              objc_enumerationMutation(v11);
            v16 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
            objc_msgSend(v16, "setCloudLocalState:", 0);
            objc_msgSend(v16, "setMaster:", 0);
            ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
            PLMigrationGetLog();
            v17 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              objc_msgSend(v16, "uuid");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "scopedIdentifier");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v30 = v18;
              v31 = 2112;
              v32 = v19;
              _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Marking asset %@ in master %@ unpushed, don't have original resource", buf, 0x16u);

            }
          }
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
        }
        while (v13);
      }

      PLMigrationGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      v4 = v8;
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v8, "scopedIdentifier");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v30 = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Deleting master %@ to force master creation", buf, 0xCu);

      }
      objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v8);

      v6 = 0;
      v3 = v24;
    }

  }
  else
  {
    objc_msgSend(v3, "setCloudLocalState:", 0);
    PLMigrationGetLog();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v3, "uuid");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v30 = v23;
      _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "Marking asset %@ unpushed, don't have master", buf, 0xCu);

    }
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }

}

void __69__PLModelMigrator__repushAssetsMatchingPredicate_inStore_withMaster___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  objc_msgSend(v4, "setCloudLocalState:", 0);
  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(v4, "master");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setCloudLocalState:", 0);

    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

}

uint64_t __52__PLModelMigrator__fixIncorrectHeifMetadataInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixIncorrectHeifMetadataForAsset:", a2);
}

BOOL __45__PLModelMigrator__fixRawWithZeroDimensions___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _BOOL8 v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  int v16;
  void *v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (objc_msgSend(v3, "isRAW"))
  {
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = 138412546;
      v17 = v5;
      v18 = 2112;
      v19 = v3;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEFAULT, "%@: Attempting to fix zero dimensions of raw image: %@", (uint8_t *)&v16, 0x16u);

    }
    objc_msgSend(v3, "imageProperties");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "count");
    v8 = v7 != 0;
    if (v7)
    {
      if (!objc_msgSend(v3, "originalWidth") || !objc_msgSend(v3, "originalHeight"))
      {
        PLMigrationGetLog();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          NSStringFromSelector(*(SEL *)(a1 + 32));
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = 138412290;
          v17 = v10;
          _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "%@: Fixed original width/height for raw image", (uint8_t *)&v16, 0xCu);

        }
        objc_msgSend(v3, "setOriginalSizeAndOrientationFromImageProperties:", v6);
      }
      if (!objc_msgSend(v3, "width") || !objc_msgSend(v3, "height"))
      {
        PLMigrationGetLog();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          NSStringFromSelector(*(SEL *)(a1 + 32));
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = 138412290;
          v17 = v12;
          _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "%@: Fixed width/height for raw image", (uint8_t *)&v16, 0xCu);

        }
        objc_msgSend(v3, "setSizeAndOrientationFromImageProperties:", v6);
      }
    }
    else
    {
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 32));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = 138412290;
        v17 = v14;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%@: Failed to fetch image properties to fix zero dimensions of raw image", (uint8_t *)&v16, 0xCu);

      }
    }

  }
  else
  {
    v8 = 1;
  }

  return v8;
}

uint64_t __58__PLModelMigrator__populateCloudResourceLocalStateInStor___block_invoke(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "setCloudLocalState:", 3);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __75__PLModelMigrator__fixZeroTrashedDateForEntityName_inManagedObjectContext___block_invoke(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "setValue:forKey:", 0, CFSTR("trashedDate"));
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __53__PLModelMigrator__tryToPromoteUnknownAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "promoteFromUnknownKind");
  if ((_DWORD)result)
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __52__PLModelMigrator__rebuildWideCaptureThumbsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v6 = a2;
  objc_msgSend(v6, "thumbnailIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (int)objc_msgSend(v6, "thumbnailIndex");
  objc_msgSend(v6, "uuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "deleteThumbnailsWithIdentifier:orIndex:uuid:", v3, v4, v5);

  objc_msgSend(v6, "setEffectiveThumbnailIndex:", 0x7FFFFFFFFFFFFFFFLL);
}

void __72__PLModelMigrator__removeUntrackedCloudResourceImageDerivativesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  int v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "filePath");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "fileExistsAtPath:", v5);

  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "filePath");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 0;
    v9 = objc_msgSend(v7, "removeItemAtPath:error:", v8, &v13);
    v10 = v13;

    if (v9)
    {
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    }
    else
    {
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        *(_DWORD *)buf = 134218242;
        v15 = v12;
        v16 = 2112;
        v17 = v10;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Failed to remove file (%lu total failures so far) with error: %@", buf, 0x16u);
      }

    }
  }

}

void __49__PLModelMigrator__fixupCroppedUnadjustedAssets___block_invoke(uint64_t a1, void *a2)
{
  double v3;
  double v4;
  unint64_t v5;
  double v6;
  id v7;

  v7 = a2;
  v3 = (double)objc_msgSend(v7, "originalWidth");
  v4 = (double)objc_msgSend(v7, "originalHeight");
  v5 = (int)objc_msgSend(v7, "originalOrientation") - 5;
  if (v5 >= 4)
    v6 = v3;
  else
    v6 = v4;
  if (v5 >= 4)
    v3 = v4;
  if (objc_msgSend(v7, "width") != (int)v6 || objc_msgSend(v7, "height") != (int)v3)
  {
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    objc_msgSend(v7, "setWidth:", (uint64_t)v6);
    objc_msgSend(v7, "setHeight:", (uint64_t)v3);
  }

}

void __39__PLModelMigrator__fixRejectedKeyFace___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  int v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "keyFace");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(v6, "rejectedFaces");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "containsObject:", v3);

    if (v5)
    {
      objc_msgSend(v6, "setKeyFace:pickSource:", 0, 0);
      ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    }
  }

}

void __56__PLModelMigrator__fixMergedPeopleThatShouldBeVerified___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "associatedFaceGroup");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  objc_msgSend(v3, "detectedFaces");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v6)
  {
    v7 = v6;
    v16 = a1;
    v17 = v4;
    v8 = *(_QWORD *)v19;
    while (2)
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v19 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * i), "faceGroup", v16);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (v10)
        {
          v11 = v10;
          objc_msgSend(v10, "uuid");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v3, "associatedFaceGroup");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "uuid");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v12, "isEqualToString:", v14);

          if ((v15 & 1) == 0)
          {

            objc_msgSend(v3, "setAssociatedFaceGroup:", 0);
            objc_msgSend(v3, "setEffectiveVerifiedType:", 1);
            v4 = v17;
            +[PLPerson createAssociatedPersonForFaceGroup:inManagedObjectContext:](PLPerson, "createAssociatedPersonForFaceGroup:inManagedObjectContext:", v17, *(_QWORD *)(v16 + 32));
            goto LABEL_13;
          }
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      if (v7)
        continue;
      break;
    }

    v4 = v17;
  }
  else
  {

  }
LABEL_13:

}

void __41__PLModelMigrator__setUserTypeOnKeyFace___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  int v4;
  void *v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "setEffectiveNameSource:", 0);
  objc_msgSend(v6, "associatedAssetForFaceOrTorso:orTemporal:", 0, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "cloudLocalState");

  if (v4)
  {
    objc_msgSend(v6, "associatedAssetForFaceOrTorso:orTemporal:", 0, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setCloudLocalState:", 0);

  }
  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

}

void __41__PLModelMigrator__setUserTypeOnKeyFace___block_invoke_1573(uint64_t a1, void *a2)
{
  BOOL v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  id v8;

  v8 = a2;
  v3 = objc_msgSend(v8, "nameSource") == 1;
  v4 = v8;
  if (!v3)
  {
    objc_msgSend(v8, "setEffectiveNameSource:", 1);
    objc_msgSend(v8, "associatedAssetForFaceOrTorso:orTemporal:", 0, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "cloudLocalState");

    if (v6)
    {
      objc_msgSend(v8, "associatedAssetForFaceOrTorso:orTemporal:", 0, 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setCloudLocalState:", 0);

    }
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    v4 = v8;
  }

}

void __45__PLModelMigrator__recoverSingleBurstPhotos___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("count"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "integerValue");

  if (v4 == 1)
  {
    v5 = *(void **)(a1 + 32);
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("avalancheUUID"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "addObject:", v6);

  }
}

void __106__PLModelMigrator__repairMetadataAndSingletonsForMigrationType_forceRebuildReason_journalRebuildRequired___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  __CFString *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;

  v2 = *(_QWORD *)(a1 + 48);
  if (v2)
  {
    PLStringFromMigrationType(v2, 1);
    v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = CFSTR("repairing singletons");
  }
  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryURL");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0;
  +[PLManagedObjectContext contextForRepairingSingletonObjectsWithReason:libraryURL:error:](PLManagedObjectContext, "contextForRepairingSingletonObjectsWithReason:libraryURL:error:", v3, v5, &v25);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v25;

  if (!v6)
  {
    v8 = *(void **)(a1 + 32);
    if (*(_BYTE *)(a1 + 64))
      objc_msgSend(v8, "_failed_repairSingletonObjectsInNewDatabaseWithNilContextError:", v7);
    else
      objc_msgSend(v8, "_failed_repairSingletonObjectsWithNilContextError:", v7);
  }
  objc_msgSend(v6, "persistentStoreCoordinator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "persistentStores");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "firstObject");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v11)
  {
    v12 = *(void **)(a1 + 32);
    if (*(_BYTE *)(a1 + 64))
      objc_msgSend(v12, "_failed_repairSingletonObjectsInNewDatabaseWithNoPersistentStores");
    else
      objc_msgSend(v12, "_failed_repairSingletonObjectsWithNoPersistentStores");
  }
  v16 = MEMORY[0x1E0C809B0];
  v17 = 3221225472;
  v18 = __106__PLModelMigrator__repairMetadataAndSingletonsForMigrationType_forceRebuildReason_journalRebuildRequired___block_invoke_3;
  v19 = &unk_1E3667EF8;
  v13 = v6;
  v14 = *(_QWORD *)(a1 + 32);
  v20 = v13;
  v21 = v14;
  v24 = *(_BYTE *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 48);
  v23 = v15;
  objc_msgSend(v13, "performBlockAndWait:", &v16);
  if (*(_BYTE *)(a1 + 64)
    && (objc_msgSend(*(id *)(a1 + 32), "_recordCurrentVersionMetadataInPersistentStore:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:", v11, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), 0, 1, *(unsigned __int8 *)(a1 + 65), v16, v17, v18, v19) & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "_failed_recordCurrentVersionMetadata");
  }

}

void __106__PLModelMigrator__repairMetadataAndSingletonsForMigrationType_forceRebuildReason_journalRebuildRequired___block_invoke_3(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  char v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "setIsInitializingSingletons:", 1);
  v2 = *(_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0;
  LOBYTE(v2) = +[PLModelMigrationAction_RepairSingletons repairSingletonObjectsInDatabaseUsingContext:pathManager:error:](PLModelMigrationAction_RepairSingletons, "repairSingletonObjectsInDatabaseUsingContext:pathManager:error:", v2, v3, &v21);
  v4 = v21;

  if ((v2 & 1) == 0)
  {
    v5 = *(void **)(a1 + 40);
    if (*(_BYTE *)(a1 + 64))
      objc_msgSend(v5, "_failed_repairSingletonObjectsInNewDatabaseWithRepairError:", v4);
    else
      objc_msgSend(v5, "_failed_repairSingletonObjectsWithRepairError:", v4);
  }
  if ((*(_QWORD *)(a1 + 48) | 2) == 3)
  {
    v6 = (void *)MEMORY[0x1E0D73158];
    objc_msgSend(*(id *)(a1 + 40), "pathManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "libraryURL");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "appPrivateDataForLibraryURL:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v9, "valueForKey:", CFSTR("PLModelMigrator.CreateOptions"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(*(id *)(a1 + 40), "setOptions:", v10);
      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("LibraryCreateOptions"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (v11)
        +[PLGlobalValues setLibraryCreateOptions:managedObjectContext:](PLGlobalValues, "setLibraryCreateOptions:managedObjectContext:", objc_msgSend(v11, "unsignedIntValue"), *(_QWORD *)(a1 + 32));
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v23 = v10;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "restored appPrivateData library create options: %@", buf, 0xCu);
      }

    }
  }
  if (*(_BYTE *)(a1 + 64))
    objc_msgSend(*(id *)(a1 + 40), "_handleCreateOptionsUsingContext:", *(_QWORD *)(a1 + 32));
  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v14 = *(void **)(a1 + 32);
    v20 = 0;
    v15 = objc_msgSend(v14, "save:", &v20);
    v16 = v20;
    if ((v15 & 1) == 0)
    {
      PLMigrationGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 56));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "userInfo");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v23 = v18;
        v24 = 2112;
        v25 = v16;
        v26 = 2112;
        v27 = v19;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

      }
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "setIsInitializingSingletons:", 0);

}

void __106__PLModelMigrator__repairMetadataAndSingletonsForMigrationType_forceRebuildReason_journalRebuildRequired___block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.assetsd.migrator.singletonrepair", 0);
  v1 = (void *)_repairMetadataAndSingletonsForMigrationType_forceRebuildReason_journalRebuildRequired__isolation;
  _repairMetadataAndSingletonsForMigrationType_forceRebuildReason_journalRebuildRequired__isolation = (uint64_t)v0;

}

uint64_t __80__PLModelMigrator__deletePhotoCloudSharingMetadataInManagedObjectContext_error___block_invoke_1551(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteObject:", a2);
}

uint64_t __80__PLModelMigrator__deletePhotoCloudSharingMetadataInManagedObjectContext_error___block_invoke_1548(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "deleteFromDatabaseOnly");
}

uint64_t __80__PLModelMigrator__deletePhotoCloudSharingMetadataInManagedObjectContext_error___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "deleteFromDatabaseOnly");
}

BOOL __53__PLModelMigrator__deleteOrphanedExtendedAttributes___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  id v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  +[PLExtendedAttributes entityName](PLExtendedAttributes, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset == nil"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v5);

  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v4);
  objc_msgSend(v6, "setResultType:", 2);
  v13 = 0;
  objc_msgSend(v2, "executeRequest:error:", v6, &v13);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = v13;
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v7, "result");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v15 = v11;
      v16 = 2112;
      v17 = v3;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Deleted all %@ orphaned %@", buf, 0x16u);

    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412546;
    v15 = v3;
    v16 = 2112;
    v17 = v8;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Failed to delete orphaned %@, %@", buf, 0x16u);
  }

  return v7 != 0;
}

BOOL __60__PLModelMigrator__updateSuggestionStartAndEndDatesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0C97B48];
  v4 = a2;
  objc_msgSend(v3, "fetchRequestWithEntityName:", CFSTR("Suggestion"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("startDate == nil OR endDate == nil"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPredicate:", v6);

  objc_msgSend(v5, "execute:", 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v7, &__block_literal_global_1537);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "userInfo");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543874;
      v15 = (uint64_t)v11;
      v16 = 2112;
      v17 = v8;
      v18 = 2112;
      v19 = v12;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", (uint8_t *)&v14, 0x20u);

    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v14 = 134217984;
    v15 = objc_msgSend(v7, "count");
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "updated %lu suggestions with nil startDates", (uint8_t *)&v14, 0xCu);
  }

  return v8 == 0;
}

uint64_t __60__PLModelMigrator__updateSuggestionStartAndEndDatesInStore___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "updateStartAndEndDate");
}

void __54__PLModelMigrator__addUUIDsToExistingKeywordsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)MEMORY[0x1E0D73308];
  v3 = a2;
  objc_msgSend(v2, "UUIDString");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setUuid:", v4);

}

BOOL __51__PLModelMigrator__deletePersistentHistoryInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint32_t v11;
  id v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v13 = 0;
  v3 = +[PLPersistentHistoryUtilities deleteHistoryBeforeToken:withContext:error:](PLPersistentHistoryUtilities, "deleteHistoryBeforeToken:withContext:error:", 0, a2, &v13);
  v4 = v13;
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromSelector(*(SEL *)(a1 + 32));
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v15 = v7;
      v8 = "%@: Deleted persistent history";
      v9 = v6;
      v10 = OS_LOG_TYPE_DEFAULT;
      v11 = 12;
LABEL_6:
      _os_log_impl(&dword_199541000, v9, v10, v8, buf, v11);

    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    NSStringFromSelector(*(SEL *)(a1 + 32));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v15 = v7;
    v16 = 2112;
    v17 = v4;
    v8 = "%@: failed to deleted persistent history: %@";
    v9 = v6;
    v10 = OS_LOG_TYPE_ERROR;
    v11 = 22;
    goto LABEL_6;
  }

  return v3;
}

uint64_t __94__PLModelMigrator__identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure_inStore___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_identifyVariationsAndDepthAdjustmentsForAsset:", a2);
}

uint64_t __94__PLModelMigrator__identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure_inStore___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_identifyVariationsAndDepthAdjustmentsForAsset:", a2);
}

void __81__PLModelMigrator__runMigrationStepWithName_fetchRequest_store_migrationHandler___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  int v15;
  NSObject *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[4];
  id v20;
  _BYTE *v21;
  id v22;
  uint8_t v23[4];
  uint64_t v24;
  __int16 v25;
  id v26;
  _BYTE buf[24];
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v22 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v3, &v22);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v22;
  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    v7 = objc_msgSend(v4, "count");
    v8 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 134218242;
    *(_QWORD *)&buf[4] = v7;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v8;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEBUG, "Processing %lu objects for %@.", buf, 0x16u);
  }

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x2020000000;
  v28 = 0;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 80);
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __81__PLModelMigrator__runMigrationStepWithName_fetchRequest_store_migrationHandler___block_invoke_1507;
  v19[3] = &unk_1E36655F0;
  v11 = *(void **)(a1 + 56);
  v20 = *(id *)(a1 + 64);
  v21 = buf;
  v18 = 0;
  LOBYTE(v10) = objc_msgSend(v11, "_performChangesOnBatchFetchedObjects:inMOC:batchSize:objectHandler:error:", v4, v9, v10, v19, &v18);
  v12 = v18;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = v10;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
  {
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = *(_QWORD *)(a1 + 48);
      v15 = *(_DWORD *)(*(_QWORD *)&buf[8] + 24);
      *(_DWORD *)v23 = 138412546;
      v24 = v14;
      v25 = 1024;
      LODWORD(v26) = v15;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Migration step %@ successfully processed %d objects", v23, 0x12u);
    }

  }
  else
  {
    PLMigrationGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      v17 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)v23 = 138412546;
      v24 = v17;
      v25 = 2112;
      v26 = v12;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "%@ save failed: %@", v23, 0x16u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 0;
  }

  _Block_object_dispose(buf, 8);
}

uint64_t __81__PLModelMigrator__runMigrationStepWithName_fetchRequest_store_migrationHandler___block_invoke_1507(uint64_t a1)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if ((_DWORD)result)
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

uint64_t __78__PLModelMigrator__runMigrationStepWithPrettyFunction_store_migrationHandler___block_invoke(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "reset");
}

void __46__PLModelMigrator__fixMovieAttributesInStore___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t buf[4];
  id v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 0;
  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v16 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v3, &v16);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v16;
  if (v5)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 56));
      v7 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "userInfo");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v22 = v7;
      v23 = 2112;
      v24 = (uint64_t)v5;
      v25 = 2112;
      v26 = v8;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "%@ failed to fetch movie assets: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    v9 = *(void **)(a1 + 32);
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __46__PLModelMigrator__fixMovieAttributesInStore___block_invoke_1480;
    v15[3] = &unk_1E3665110;
    v15[4] = &v17;
    objc_msgSend(v9, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v4, v15);
    v6 = objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 56));
        v11 = (id)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v6, "userInfo");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v22 = v11;
        v23 = 2112;
        v24 = (uint64_t)v6;
        v25 = 2112;
        v26 = v12;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      PLMomentsGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v13 = (void *)v18[3];
        v14 = objc_msgSend(v4, "count");
        *(_DWORD *)buf = 134218240;
        v22 = v13;
        v23 = 2048;
        v24 = v14;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Update kind sub type for %lu of %lu movie assets.", buf, 0x16u);
      }
    }

  }
  _Block_object_dispose(&v17, 8);
}

void __46__PLModelMigrator__fixMovieAttributesInStore___block_invoke_1480(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend(v9, "avAssetProxyForOriginalAllowReadFromFile:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = objc_alloc(MEMORY[0x1E0D75140]);
    objc_msgSend(v9, "photoLibrary");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "libraryBundle");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "timeZoneLookup");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v4, "initWithAVAsset:timeZoneLookup:", v3, v7);

    objc_msgSend(v9, "updateVideoAttributesFromMetadata:overwriteOriginalProperties:", v8, 1);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

  }
}

void __59__PLModelMigrator__setPlaybackStyleForAnimatedGIFsInStore___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t buf[4];
  id v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 0;
  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v16 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v3, &v16);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v16;
  if (v5)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 56));
      v7 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "userInfo");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v22 = v7;
      v23 = 2112;
      v24 = (uint64_t)v5;
      v25 = 2112;
      v26 = v8;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "%@ failed to fetch GIF assets: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    v9 = *(void **)(a1 + 32);
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __59__PLModelMigrator__setPlaybackStyleForAnimatedGIFsInStore___block_invoke_1479;
    v15[3] = &unk_1E3665110;
    v15[4] = &v17;
    objc_msgSend(v9, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v4, v15);
    v6 = objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 56));
        v11 = (id)objc_claimAutoreleasedReturnValue();
        -[NSObject userInfo](v6, "userInfo");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v22 = v11;
        v23 = 2112;
        v24 = (uint64_t)v6;
        v25 = 2112;
        v26 = v12;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

      }
    }
    else
    {
      PLMomentsGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v13 = (void *)v18[3];
        v14 = objc_msgSend(v4, "count");
        *(_DWORD *)buf = 134218240;
        v22 = v13;
        v23 = 2048;
        v24 = v14;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Set playback style for %lu of %lu GIFs.", buf, 0x16u);
      }
    }

  }
  _Block_object_dispose(&v17, 8);
}

void __59__PLModelMigrator__setPlaybackStyleForAnimatedGIFsInStore___block_invoke_1479(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  id v5;

  v3 = a2;
  objc_msgSend(v3, "metadataFromMediaPropertiesOrOriginalResource");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "updatePlaybackVariationAndStyleFromOriginalMetadata:");
  v4 = objc_msgSend(v3, "playbackStyle");

  if (v4 == 2)
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

}

void __53__PLModelMigrator__removingDuplicatedCloudAssetGuid___block_invoke(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  const char *v12;
  NSObject *v13;
  os_log_type_t v14;
  NSObject *v15;
  _QWORD v16[4];
  NSObject *v17;
  uint64_t v18;
  uint64_t *v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t buf[4];
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v21 = 0;
  v22 = &v21;
  v23 = 0x2020000000;
  v24 = 0;
  v2 = (void *)a1[4];
  v3 = a1[5];
  v20 = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v3, &v20);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v20;
  if (v4)
  {
    v6 = (void *)a1[4];
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __53__PLModelMigrator__removingDuplicatedCloudAssetGuid___block_invoke_1469;
    v16[3] = &unk_1E36655C8;
    v7 = v6;
    v8 = a1[6];
    v17 = v7;
    v18 = v8;
    v19 = &v21;
    -[NSObject enumerateWithIncrementalSaveUsingObjects:withBlock:](v7, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v4, v16);
    v9 = objc_claimAutoreleasedReturnValue();

    *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = v9 == 0;
    if (*(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24))
    {
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v11 = v22[3];
        *(_DWORD *)buf = 134217984;
        v26 = v11;
        v12 = "Removed %lu duplicated assets";
        v13 = v10;
        v14 = OS_LOG_TYPE_DEFAULT;
LABEL_9:
        _os_log_impl(&dword_199541000, v13, v14, v12, buf, 0xCu);
      }
    }
    else
    {
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v26 = v9;
        v12 = "RemoveDuplicateMigration: Error fetching, error:%@";
        v13 = v10;
        v14 = OS_LOG_TYPE_ERROR;
        goto LABEL_9;
      }
    }

    v15 = v17;
    v5 = (id)v9;
    goto LABEL_11;
  }
  PLMigrationGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v26 = (uint64_t)v5;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "RemoveDuplicateMigration: Error executing fetch request, error:%@", buf, 0xCu);
  }
LABEL_11:

  _Block_object_dispose(&v21, 8);
}

void __53__PLModelMigrator__removingDuplicatedCloudAssetGuid___block_invoke_1469(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  NSObject *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  NSObject *v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t j;
  void *v45;
  NSObject *v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  id v65;
  uint8_t v66[128];
  uint8_t buf[4];
  id v68;
  __int16 v69;
  void *v70;
  _BYTE v71[128];
  _QWORD v72[2];
  _QWORD v73[4];

  v73[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKey:", CFSTR("cloudAssetGUID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v73[0] = CFSTR("master.resources");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v73, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setRelationshipKeyPathsForPrefetching:", v8);

  objc_msgSend(v7, "setFetchBatchSize:", 100);
  v9 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateForSupportedAssetTypesForUpload](PLManagedAsset, "predicateForSupportedAssetTypesForUpload");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v72[0] = v10;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudAssetGUID == %@ && cloudAssetGUID != nil && complete == 1"), v4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v72[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v72, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "andPredicateWithSubpredicates:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "setPredicate:", v13);
  v56 = a1;
  v14 = *(void **)(a1 + 32);
  v65 = 0;
  objc_msgSend(v14, "executeFetchRequest:error:", v7, &v65);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v65;
  if (!v15)
  {
    PLMigrationGetLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v68 = v16;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "RemoveDuplicateMigration: Error fetching, error:%@", buf, 0xCu);
    }
    goto LABEL_41;
  }
  if ((unint64_t)objc_msgSend(v15, "count") >= 2)
  {
    v49 = v16;
    v50 = v13;
    v51 = v7;
    v52 = v4;
    v53 = v3;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v61 = 0u;
    v62 = 0u;
    v63 = 0u;
    v64 = 0u;
    v48 = v15;
    v18 = v15;
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v61, v71, 16);
    if (!v19)
    {

      goto LABEL_28;
    }
    v20 = v19;
    v21 = 0;
    v22 = *(_QWORD *)v62;
    v54 = v18;
    while (1)
    {
      for (i = 0; i != v20; ++i)
      {
        if (*(_QWORD *)v62 != v22)
          objc_enumerationMutation(v18);
        v24 = *(void **)(*((_QWORD *)&v61 + 1) + 8 * i);
        if (v21)
          goto LABEL_20;
        if (objc_msgSend(*(id *)(v56 + 40), "isCloudPhotoLibraryEnabled"))
        {
          v25 = v17;
          objc_msgSend(v24, "master");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "uuid");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLCloudResource cloudResourceForResourceType:forAssetUuid:forCloudMaster:](PLCloudResource, "cloudResourceForResourceType:forAssetUuid:forCloudMaster:", 1, v27, v26);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "filePath");
          v29 = objc_claimAutoreleasedReturnValue();
          objc_msgSend((id)v29, "lastPathComponent");
          v30 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v24, "filename");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          LOBYTE(v29) = objc_msgSend(v30, "isEqualToString:", v31);

          if ((v29 & 1) == 0)
          {

            v17 = v25;
            v21 = 0;
            v18 = v54;
LABEL_19:

LABEL_20:
            objc_msgSend(v17, "addObject:", v24);
            continue;
          }
          v32 = v24;
          PLMigrationGetLog();
          v33 = objc_claimAutoreleasedReturnValue();
          v17 = v25;
          v21 = v32;
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            -[NSObject uuid](v32, "uuid");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412546;
            v68 = v34;
            v69 = 2112;
            v70 = v30;
            _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_DEFAULT, "RemoveDuplicateMigration: Found a match, keeping asset %@ (%@)", buf, 0x16u);

          }
          v18 = v54;
        }
        else
        {
          objc_msgSend(v24, "pathForOriginalFile");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (!objc_msgSend(v55, "fileExistsAtPath:", v26))
            goto LABEL_19;
          v21 = v24;
          PLMigrationGetLog();
          v35 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            -[NSObject uuid](v21, "uuid");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412546;
            v68 = v36;
            v69 = 2112;
            v70 = v26;
            _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_DEFAULT, "RemoveDuplicateMigration: Found a match, keeping asset %@ (%@)", buf, 0x16u);

          }
        }
      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v61, v71, 16);
      if (!v20)
      {

        if (!v21)
        {
LABEL_28:
          PLMigrationGetLog();
          v37 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v17, "firstObject");
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v38, "uuid");
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v68 = v39;
            _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_DEFAULT, "RemoveDuplicateMigration: Keeping asset %@", buf, 0xCu);

          }
          objc_msgSend(v17, "removeObjectAtIndex:", 0);
          v21 = 0;
        }
        v59 = 0u;
        v60 = 0u;
        v57 = 0u;
        v58 = 0u;
        v40 = v17;
        v41 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v57, v66, 16);
        if (v41)
        {
          v42 = v41;
          v43 = *(_QWORD *)v58;
          do
          {
            for (j = 0; j != v42; ++j)
            {
              if (*(_QWORD *)v58 != v43)
                objc_enumerationMutation(v40);
              v45 = *(void **)(*((_QWORD *)&v57 + 1) + 8 * j);
              PLMigrationGetLog();
              v46 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(v45, "uuid");
                v47 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v68 = v47;
                _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_DEFAULT, "RemoveDuplicateMigration: Will delete asset %@", buf, 0xCu);

              }
              objc_msgSend(v45, "deleteFromDatabaseOnly");
              ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v56 + 48) + 8) + 24);
            }
            v42 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v57, v66, 16);
          }
          while (v42);
        }

        v4 = v52;
        v3 = v53;
        v13 = v50;
        v7 = v51;
        v15 = v48;
        v16 = v49;
LABEL_41:

        break;
      }
    }
  }

}

void __80__PLModelMigrator__convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v12;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v4 + 40);
  objc_msgSend(v2, "executeFetchRequest:error:", v3, &obj);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_storeStrong((id *)(v4 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v5 != 0;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(v5, "count");
    objc_msgSend(*(id *)(a1 + 32), "enumerateWithIncrementalSaveUsingObjects:withBlock:", v5, &__block_literal_global_1460);
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8)
                                                                           + 40) == 0;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
    {
      if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
      {
        v9 = *(void **)(a1 + 32);
        v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v12 = *(id *)(v10 + 40);
        v11 = objc_msgSend(v9, "save:", &v12);
        objc_storeStrong((id *)(v10 + 40), v12);
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v11;
      }
    }
  }

}

void __80__PLModelMigrator__convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  objc_msgSend(v2, "setNameSource:", objc_msgSend(v2, "nameSource") == 0);

}

void __66__PLModelMigrator__populateUserKeyFacePickSourceForPersonInStore___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v12;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v4 + 40);
  objc_msgSend(v2, "executeFetchRequest:error:", v3, &obj);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_storeStrong((id *)(v4 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v5 != 0;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(v5, "count");
    objc_msgSend(*(id *)(a1 + 32), "enumerateWithIncrementalSaveUsingObjects:withBlock:", v5, &__block_literal_global_1457);
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8)
                                                                           + 40) == 0;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
    {
      if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
      {
        v9 = *(void **)(a1 + 32);
        v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v12 = *(id *)(v10 + 40);
        v11 = objc_msgSend(v9, "save:", &v12);
        objc_storeStrong((id *)(v10 + 40), v12);
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v11;
      }
    }
  }

}

uint64_t __66__PLModelMigrator__populateUserKeyFacePickSourceForPersonInStore___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setKeyFacePickSource:", 1);
}

void __57__PLModelMigrator__populateAdjustmentTimestampsOnAssets___block_invoke(uint64_t a1)
{
  id v2;
  void *v3;
  char v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  id v10;
  void *v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  id v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v11 = 0;
  v2 = (id)objc_msgSend(*(id *)(a1 + 32), "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", *(_QWORD *)(a1 + 40), &v11, &__block_literal_global_1454);
  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v3 = *(void **)(a1 + 32);
    v10 = 0;
    v4 = objc_msgSend(v3, "save:", &v10);
    v5 = v10;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v4;
    if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    {
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 56));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "userInfo");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v13 = v7;
        v14 = 2112;
        v15 = v5;
        v16 = 2112;
        v17 = v8;
        _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

      }
    }

  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v13 = v11;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Populated adjustmentTimestamps on %lu assets", buf, 0xCu);
    }

  }
}

void __57__PLModelMigrator__populateAdjustmentTimestampsOnAssets___block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  id v5;

  v2 = a2;
  objc_msgSend(v2, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "unmanagedAdjustment");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "adjustmentTimestamp");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "setAdjustmentTimestamp:", v5);
}

void __68__PLModelMigrator__migrateCloudResourcesRelationshipsInStagedStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  objc_msgSend(v3, "valueForKey:", CFSTR("cloudMaster"));
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "valueForKey:", CFSTR("cloudResources"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "valueForKey:", CFSTR("asset"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "setValue:forKey:", v6, CFSTR("master"));
  objc_msgSend(v5, "setValue:forKey:", v4, CFSTR("resources"));
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

}

uint64_t __49__PLModelMigrator__revalidateImportSessionDates___block_invoke(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "revalidateImportDates");
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return 1;
}

uint64_t __49__PLModelMigrator__setImportedByInPLCloudMaster___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a2;
  objc_msgSend(v3, "assets");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "allObjects");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(v5, "firstObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "additionalAttributes");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setImportedBy:", objc_msgSend(v7, "importedBy"));

    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }

  return 1;
}

uint64_t __50__PLModelMigrator__persistImportSessionAlbumType___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "_persistMetadataToFileSystemForAlbum:", a2);
  if ((_DWORD)result)
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

void __46__PLModelMigrator__createImportSessionAlbums___block_invoke(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  id v11;
  id v12;

  v12 = a2;
  objc_msgSend(v12, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "valueForKey:", CFSTR("importSessionID"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "importSession");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "importSessionID");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "isEqualToString:", v5);

      if ((v9 & 1) != 0)
        goto LABEL_12;
    }
    objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "importSessionID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v10, "isEqualToString:", v5) & 1) != 0)
    {
      v11 = *(id *)(*(_QWORD *)(a1[5] + 8) + 40);

      if (v11)
      {
LABEL_11:
        objc_msgSend(v12, "setImportSession:", v11);
        objc_msgSend(v11, "updateImportDatesFromAddedAsset:", v12);

LABEL_12:
        objc_msgSend(v4, "setValue:forKey:", 0, CFSTR("importSessionID"));
        ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);

        goto LABEL_13;
      }
    }
    else
    {

    }
    +[PLImportSession albumWithImportSessionID:inManagedObjectContext:](PLImportSession, "albumWithImportSessionID:inManagedObjectContext:", v5, a1[4]);
    v11 = (id)objc_claimAutoreleasedReturnValue();
    if (!v11)
    {
      +[PLImportSession insertNewImportSessionAlbumWithImportSessionID:inManagedObjectContext:](PLImportSession, "insertNewImportSessionAlbumWithImportSessionID:inManagedObjectContext:", v5, a1[4]);
      v11 = (id)objc_claimAutoreleasedReturnValue();
    }
    objc_storeStrong((id *)(*(_QWORD *)(a1[5] + 8) + 40), v11);
    goto LABEL_11;
  }
LABEL_13:

}

BOOL __53__PLModelMigrator__removeInvalidImportSessionAlbums___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD v13[6];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", CFSTR("ImportSession"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("importSessionID == NULL"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v5);

  objc_msgSend(v3, "executeFetchRequest:error:", v4, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0;
  v15 = &v14;
  v16 = 0x2020000000;
  v17 = 0;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __53__PLModelMigrator__removeInvalidImportSessionAlbums___block_invoke_2;
  v13[3] = &unk_1E36654A8;
  v13[4] = *(_QWORD *)(a1 + 32);
  v13[5] = &v14;
  objc_msgSend(v3, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v6, v13);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 40));
      v9 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "userInfo");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v19 = v9;
      v20 = 2112;
      v21 = v7;
      v22 = 2112;
      v23 = v10;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "%{public}@: failed: %@ %@", buf, 0x20u);

    }
  }
  else
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)v15[3];
      *(_DWORD *)buf = 134217984;
      v19 = v11;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "removed %lu invalid importSession ", buf, 0xCu);
    }
  }

  _Block_object_dispose(&v14, 8);
  return v7 == 0;
}

void __53__PLModelMigrator__removeInvalidImportSessionAlbums___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "removePersistedFileSystemDataWithPathManager:", v5);

  objc_msgSend(v4, "delete");
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
}

void __59__PLModelMigrator__migrateDetectedFacesGroupInStagedStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  __int128 v6;
  id v7;
  _QWORD v8[4];
  id v9;
  __int128 v10;
  uint64_t v11;

  v3 = a2;
  objc_msgSend(v3, "valueForKey:", CFSTR("faceGroups"));
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __59__PLModelMigrator__migrateDetectedFacesGroupInStagedStore___block_invoke_2;
  v8[3] = &unk_1E3665480;
  v9 = v3;
  v6 = *(_OWORD *)(a1 + 32);
  v4 = (id)v6;
  v10 = v6;
  v11 = *(_QWORD *)(a1 + 48);
  v5 = v3;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v8);

}

void __59__PLModelMigrator__migrateDetectedFacesGroupInStagedStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  const char *v14;
  __int16 v15;
  _WORD v16[17];

  *(_QWORD *)&v16[13] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "valueForKey:", CFSTR("faceGroupType"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "intValue");

  if (v5 == 5)
  {
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = *(_QWORD *)(a1 + 32);
      v13 = 138412546;
      v14 = (const char *)v3;
      v15 = 2112;
      *(_QWORD *)v16 = v10;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Found rejected faceGroup %@ in detectedFace %@", (uint8_t *)&v13, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 40), "deleteObject:", v3);
    v11 = *(_QWORD *)(a1 + 56);
    goto LABEL_14;
  }
  if (v5 == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("faceGroup"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      PLMigrationGetLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v13 = 138412546;
        v14 = (const char *)v3;
        v15 = 2112;
        *(_QWORD *)v16 = v8;
        _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "Found more than 1 faceGroup %@ for detectedFace %@ during staged migration", (uint8_t *)&v13, 0x16u);
      }

      goto LABEL_15;
    }
    objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", v3, CFSTR("faceGroup"));
    v11 = *(_QWORD *)(a1 + 48);
LABEL_14:
    ++*(_QWORD *)(*(_QWORD *)(v11 + 8) + 24);
    goto LABEL_15;
  }
  PLMigrationGetLog();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    v13 = 136315650;
    v14 = "-[PLModelMigrator _migrateDetectedFacesGroupInStagedStore:]_block_invoke";
    v15 = 1024;
    *(_DWORD *)v16 = v5;
    v16[2] = 2112;
    *(_QWORD *)&v16[3] = v3;
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%s: Unknown faceGroupType %d for faceGroup %@", (uint8_t *)&v13, 0x1Cu);
  }

LABEL_15:
}

void __59__PLModelMigrator__migrateRejectedFacesGroupInStagedStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  int v8;
  const char *v9;
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "valueForKey:", CFSTR("rejectedFacesGroup"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "valueForKey:", CFSTR("faces"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_msgSend(v3, "setValue:forKey:", v6, CFSTR("rejectedFaces"));
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    }
    objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v5);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);

  }
  else
  {
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      v8 = 136315394;
      v9 = "-[PLModelMigrator _migrateRejectedFacesGroupInStagedStore:]_block_invoke";
      v10 = 2112;
      v11 = v3;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "%s: failed to find rejectedFacesGroup for person %@", (uint8_t *)&v8, 0x16u);
    }

  }
}

void __101__PLModelMigrator__performMigrationCacheDateCreatedOnResources_cacheItemIdentifierOnResources_store___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t j;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t k;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t m;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  _BYTE v56[128];
  _BYTE v57[128];
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (*(_BYTE *)(a1 + 32))
  {
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    objc_msgSend(v3, "master");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "resources");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v51, v58, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v52;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v52 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * i);
          objc_msgSend(v4, "master");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "creationDate");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "setDateCreated:", v13);

        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v51, v58, 16);
      }
      while (v8);
    }

    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    objc_msgSend(v4, "resources");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v47, v57, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v48;
      do
      {
        for (j = 0; j != v16; ++j)
        {
          if (*(_QWORD *)v48 != v17)
            objc_enumerationMutation(v14);
          v19 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * j);
          objc_msgSend(v4, "master");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "creationDate");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "setDateCreated:", v21);

        }
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v47, v57, 16);
      }
      while (v16);
    }

  }
  if (*(_BYTE *)(a1 + 33))
  {
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    objc_msgSend(v4, "resources");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v43, v56, 16);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)v44;
      do
      {
        for (k = 0; k != v24; ++k)
        {
          if (*(_QWORD *)v44 != v25)
            objc_enumerationMutation(v22);
          v27 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * k);
          objc_msgSend(v4, "cloudAssetGUID");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "setItemIdentifier:", v28);

        }
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v43, v56, 16);
      }
      while (v24);
    }

    v41 = 0u;
    v42 = 0u;
    v39 = 0u;
    v40 = 0u;
    objc_msgSend(v4, "master", 0);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "resources");
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v39, v55, 16);
    if (v31)
    {
      v32 = v31;
      v33 = *(_QWORD *)v40;
      do
      {
        for (m = 0; m != v32; ++m)
        {
          if (*(_QWORD *)v40 != v33)
            objc_enumerationMutation(v30);
          v35 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * m);
          objc_msgSend(v4, "master");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "scopedIdentifier");
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v37, "identifier");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "setItemIdentifier:", v38);

        }
        v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v39, v55, 16);
      }
      while (v32);
    }

  }
}

uint64_t __42__PLModelMigrator__fixupAssetPersistence___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "persistMetadataToFilesystem");
}

void __55__PLModelMigrator__persistVideoComplPropertiesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  objc_msgSend(v10, "mainFileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v5 = *(void **)(a1 + 32);
    objc_msgSend(v3, "path");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v5) = objc_msgSend(v5, "fileExistsAtPath:", v6);

    if ((_DWORD)v5)
    {
      objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "videoComplementData");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setData:forKey:", v8, *MEMORY[0x1E0D73F20]);

      v9 = objc_msgSend(v10, "videoCpVisibilityState");
      objc_msgSend(v7, "setUInt16:forKey:", v9, *MEMORY[0x1E0D74018]);
      objc_msgSend(v7, "persist");
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

    }
  }

}

uint64_t __47__PLModelMigrator__persistPlaceAnnotationData___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "persistMetadataToFilesystem");
}

uint64_t __46__PLModelMigrator__fixVideoDimensionsInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "_fixVideoDimensionsForAsset:", a2);
  if ((_DWORD)result)
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

uint64_t __61__PLModelMigrator__populateAdjustmentsStateForAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setAdjustmentsState:", 2);
}

void __54__PLModelMigrator__fixEmptyVideoResourcePathsInStore___block_invoke(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  int v9;
  id v10;
  __int16 v11;
  NSObject *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "assetUuid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    +[PLManagedAsset assetWithUUID:inManagedObjectContext:](PLManagedAsset, "assetWithUUID:inManagedObjectContext:", v4, a1[4]);
    v5 = objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      -[NSObject pathForCPLResourceType:adjusted:](v5, "pathForCPLResourceType:adjusted:", (int)objc_msgSend(v3, "type"), 0);
      v6 = objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v3, "setFilePath:", v6);
        ++*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24);
      }
      else
      {
        ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
        PLMigrationGetLog();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          v9 = 138412546;
          v10 = v3;
          v11 = 2112;
          v12 = v5;
          _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "_fixEmptyVideoResourcePathsInStore: Unable to find a path for cloudResource %@ with asset %@", (uint8_t *)&v9, 0x16u);
        }

        v7 = 0;
      }
    }
    else
    {
      ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
      PLMigrationGetLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        v9 = 138412290;
        v10 = v3;
        _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEBUG, "_fixEmptyVideoResourcePathsInStore: Unable to find asset for cloudResource: %@", (uint8_t *)&v9, 0xCu);
      }
    }

  }
  else
  {
    ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
    PLMigrationGetLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      v9 = 138412290;
      v10 = v3;
      _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEBUG, "_fixEmptyVideoResourcePathsInStore: CloudResource %@ has no assetUUID", (uint8_t *)&v9, 0xCu);
    }
  }

}

void __63__PLModelMigrator__fixLocalPathForVideoCmplDerivativesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  int v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  id v16;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  NSObject *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "filePath");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend(v3, "setIsLocallyAvailable:", objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:", v4));
  objc_msgSend(v3, "assetUuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    +[PLManagedAsset assetWithUUID:inManagedObjectContext:](PLManagedAsset, "assetWithUUID:inManagedObjectContext:", v5, *(_QWORD *)(a1 + 40));
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      if (-[NSObject kindSubtype](v6, "kindSubtype") != 2)
      {
        PLMigrationGetLog();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v18 = v3;
          _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Found non-Iris video resource %@ with incorrect path.", buf, 0xCu);
        }

      }
      -[NSObject pathForCPLResourceType:adjusted:](v7, "pathForCPLResourceType:adjusted:", (int)objc_msgSend(v3, "type"), 0);
      v9 = objc_claimAutoreleasedReturnValue();
      if (v9)
      {
        v10 = v9;
        if ((objc_msgSend(v4, "isEqualToString:", v9) & 1) == 0)
        {
          objc_msgSend(v3, "setFilePath:", v10);
          if (objc_msgSend(v3, "isLocallyAvailable"))
          {
            v11 = *(void **)(a1 + 32);
            v16 = 0;
            v12 = objc_msgSend(v11, "moveItemAtPath:toPath:error:", v4, v10, &v16);
            v13 = v16;
            if (v12)
            {
              ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
            }
            else
            {
              PLMigrationGetLog();
              v15 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138413058;
                v18 = v4;
                v19 = 2112;
                v20 = v10;
                v21 = 2112;
                v22 = v3;
                v23 = 2112;
                v24 = v13;
                _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Unable to move %@ to %@ for cloudResource %@. Error: %@", buf, 0x2Au);
              }

              objc_msgSend(v3, "setIsLocallyAvailable:", 0);
            }

          }
          ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
        }
      }
      else
      {
        PLMigrationGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412546;
          v18 = v3;
          v19 = 2112;
          v20 = v7;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Unable to find a path for cloudResource %@ with asset %@", buf, 0x16u);
        }

        v10 = 0;
      }
    }
    else
    {
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v18 = v3;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "_fixLocalPathForVideoCmplDerivativesInStore: Unable to find asset for cloudResource: %@", buf, 0xCu);
      }
    }

  }
  else
  {
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v3;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEFAULT, "_fixLocalPathForVideoCmplDerivativesInStore: CloudResource %@ has no assetUUID", buf, 0xCu);
    }
  }

}

void __57__PLModelMigrator__fixItemIdentifierForVideoCmplInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(v7, "cloudMaster");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "scopedIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
    objc_msgSend(v7, "setItemIdentifier:", v5);
  objc_msgSend(v7, "filePath");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    objc_msgSend(v7, "setIsLocallyAvailable:", objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:", v6));
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

}

void __53__PLModelMigrator__markPhotoIrisVideoOrphansInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "pathForOriginalFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    PFVideoComplementMetadataForVideoAtPath();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pairingIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      objc_msgSend(v6, "setMediaGroupUUID:", v5);
      objc_msgSend(v6, "persistMetadataToFilesystem");
      objc_msgSend(v6, "setCloudLocalState:", 0);
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    }

  }
}

void __98__PLModelMigrator__fixZeroDurationPhotoIrisWithLocalResourcesInStore_assumeAdjustedIrisIsVisible___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  uint64_t v8;
  char v9;
  id v10;
  id v11;
  NSObject *v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint8_t buf[4];
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "pathForVideoComplementFile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "fileExistsAtPath:", v4);

  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v4, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = 0;
    v8 = *MEMORY[0x1E0C99998];
    v25 = 0;
    v9 = objc_msgSend(v7, "getResourceValue:forKey:error:", &v26, v8, &v25);
    v10 = v26;
    v11 = v25;
    if ((v9 & 1) != 0)
    {
      PFVideoComplementMetadataForVideoAtPath();
      v12 = objc_claimAutoreleasedReturnValue();
      -[NSObject pairingIdentifier](v12, "pairingIdentifier");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (v12)
      {
        -[NSObject videoDuration](v12, "videoDuration");
        -[NSObject imageDisplayTime](v12, "imageDisplayTime");
      }
      else
      {
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v20 = 0;
        v21 = 0;
        v19 = 0;
      }
      objc_msgSend(v3, "updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:", v13, &v22, &v19);

      if (objc_msgSend(v3, "hasAdjustments"))
      {
        v14 = *(unsigned __int8 *)(a1 + 32);
        v15 = 11;
        if (!v14)
        {
          objc_msgSend(v3, "pathForFullsizeRenderVideoFile");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = objc_msgSend(v17, "fileExistsAtPath:", v16);

          if (v18)
            v15 = 11;
          else
            v15 = 3;

        }
      }
      else
      {
        v15 = 0;
      }
      objc_msgSend(v3, "setVideoCpVisibilityState:", v15, v19, v20, v21, v22, v23, v24);
      objc_msgSend(v3, "persistMetadataToFilesystem");
    }
    else
    {
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v28 = v11;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "_fixZeroDurationPhotoIrisWithLocalResourcesInStore: failed to get size of video complement with error: %@", buf, 0xCu);
      }
    }

  }
}

uint64_t __57__PLModelMigrator__repushMemoriesWithNewFeaturesInStore___block_invoke(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "setCloudLocalState:", 0);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __65__PLModelMigrator__persistPhotoIrisVisibilityStateToDiskInStore___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "persistMetadataToFilesystem");
}

uint64_t __58__PLModelMigrator__markOldPhotoIrisEditsEvaluatedInStore___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setVideoCpVisibilityState:", 2);
}

uint64_t __99__PLModelMigrator__saveChangesToPhotoIrisInStore_matchingPredicate_countChanged_error_changeBlock___block_invoke(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 32));
}

void __54__PLModelMigrator__moveCloudSharedDerivativesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  int v10;
  NSObject *v11;
  id v12;
  char v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  NSObject *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "pathForOriginalFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "stringByDeletingPathExtension");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "stringByAppendingPathExtension:", CFSTR("deriv.JPG"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = 0;
    if (objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:isDirectory:", v6, &v13) && !v13)
    {
      PLMigrationGetLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v15 = v6;
        v16 = 2112;
        v17 = v4;
        _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEFAULT, "found derivative file at %@, moving to %@", buf, 0x16u);
      }

      if (!objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:isDirectory:", v4, &v13) || v13)
      {
        v9 = *(void **)(a1 + 32);
        v12 = 0;
        v10 = objc_msgSend(v9, "moveItemAtPath:toPath:error:", v6, v4, &v12);
        v8 = v12;
        if (v10)
        {
          ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        }
        else
        {
          ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
          PLMigrationGetLog();
          v11 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412802;
            v15 = v6;
            v16 = 2112;
            v17 = v4;
            v18 = 2112;
            v19 = v8;
            _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "couldn't move cloud shared derivative from %@ to %@. Error: %@", buf, 0x20u);
          }

        }
      }
      else
      {
        PLMigrationGetLog();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v15 = v4;
          _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "found unexpected original file at %@, skipping", buf, 0xCu);
        }
      }

    }
  }

}

void __53__PLModelMigrator__purgeCloudSharedResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  BOOL v12;
  void *v13;
  int v14;
  id v15;
  NSObject *v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  const char *v20;
  uint32_t v21;
  uint64_t v22;
  id v23;
  id v24;
  unsigned __int8 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  id v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v23 = a2;
  objc_msgSend(v23, "allFileURLs");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v27 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        v25 = 0;
        v9 = *(void **)(a1 + 32);
        objc_msgSend(v8, "path");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(v9) = objc_msgSend(v9, "fileExistsAtPath:isDirectory:", v10, &v25);
        v11 = v25;

        if ((_DWORD)v9)
          v12 = v11 == 0;
        else
          v12 = 0;
        if (v12)
        {
          v13 = *(void **)(a1 + 32);
          v24 = 0;
          v14 = objc_msgSend(v13, "removeItemAtURL:error:", v8, &v24);
          v15 = v24;
          PLMigrationGetLog();
          v16 = objc_claimAutoreleasedReturnValue();
          v17 = v16;
          if (v14)
          {
            if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v31 = v8;
              v18 = v17;
              v19 = OS_LOG_TYPE_DEFAULT;
              v20 = "deleted derivative file at %@";
              v21 = 12;
              goto LABEL_16;
            }
          }
          else if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            v31 = v8;
            v32 = 2112;
            v33 = v15;
            v18 = v17;
            v19 = OS_LOG_TYPE_ERROR;
            v20 = "couldn't delete file at %@. Error: %@";
            v21 = 22;
LABEL_16:
            _os_log_impl(&dword_199541000, v18, v19, v20, buf, v21);
          }

          continue;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
    }
    while (v5);
  }

  if (!objc_msgSend(v23, "hasMasterThumb"))
  {
    v22 = 2;
    goto LABEL_24;
  }
  if (objc_msgSend(v23, "cloudPlaceholderKind") != 3)
  {
    v22 = 3;
LABEL_24:
    objc_msgSend(v23, "setCloudPlaceholderKind:", v22);
  }

}

void __69__PLModelMigrator__fixOriginalPropertiesForCloudSharedAssetsInStore___block_invoke(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "filename");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(v5, "originalFilename");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v4)
    {
      objc_msgSend(v5, "setOriginalFilename:", v3);
      ++*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
    }
  }
  if (!objc_msgSend(v5, "originalWidth") && objc_msgSend(v5, "width"))
  {
    objc_msgSend(v5, "setOriginalWidth:", objc_msgSend(v5, "width"));
    ++*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24);
  }
  if (!objc_msgSend(v5, "originalHeight") && objc_msgSend(v5, "height"))
  {
    objc_msgSend(v5, "setOriginalHeight:", objc_msgSend(v5, "height"));
    ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
  }

}

void __46__PLModelMigrator__fixCloudSharedGIFsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "filename");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByDeletingPathExtension");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringByAppendingPathExtension:", CFSTR("GIF"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v2, "isEqualToString:", v4) & 1) == 0)
    objc_msgSend(v5, "setFilename:", v4);

}

void __48__PLModelMigrator__fixCloudSharedVideosInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  char v26;
  id v27;
  NSObject *v28;
  void *v29;
  void *v30;
  id v31;
  uint8_t buf[4];
  id v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_alloc(MEMORY[0x1E0CB3998]);
  objc_msgSend(v3, "thumbnailIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithString:", v5);

  v7 = (void *)MEMORY[0x1E0CB3940];
  v8 = *(_QWORD *)(a1 + 32);
  v30 = v6;
  objc_msgSend(v6, "path");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringWithFormat:", CFSTR("%@/%@"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "uniformTypeIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)*MEMORY[0x1E0CEC558];
  objc_msgSend((id)*MEMORY[0x1E0CEC558], "identifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11 != v13)
  {
    objc_msgSend(v12, "identifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setUniformTypeIdentifier:", v14);

    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  }
  objc_msgSend(v3, "directory");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "pathManager");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v15, 31, 0);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v15, "isEqualToString:", v17) & 1) == 0)
  {
    objc_msgSend(v3, "setDirectory:", v17);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  }
  objc_msgSend(v3, "filename");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "stringByDeletingPathExtension");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "stringByAppendingPathExtension:", CFSTR("MP4"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v18, "isEqualToString:", v20) & 1) == 0)
  {
    objc_msgSend(v3, "setFilename:", v20);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24);
  }
  v21 = (void *)MEMORY[0x1E0CB3940];
  v22 = *(_QWORD *)(a1 + 32);
  objc_msgSend(v3, "thumbnailIdentifier");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "stringWithFormat:", CFSTR("%@/%@"), v22, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v10, "isEqualToString:", v24) & 1) == 0
    && objc_msgSend(*(id *)(a1 + 48), "fileExistsAtPath:", v10))
  {
    v25 = *(void **)(a1 + 48);
    v31 = 0;
    v26 = objc_msgSend(v25, "moveItemAtPath:toPath:error:", v10, v24, &v31);
    v27 = v31;
    if ((v26 & 1) == 0)
    {
      PLMigrationGetLog();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v27, "userInfo");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v33 = v27;
        v34 = 2112;
        v35 = v29;
        _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_ERROR, "_fixCloudSharedVideosInStore: failed to move master thumb: %@ %@, abandoning thumbnail instead.", buf, 0x16u);

      }
      objc_msgSend(v3, "setCloudPlaceholderKind:", 2);
      objc_msgSend(v3, "setEffectiveThumbnailIndex:", 0x7FFFFFFFFFFFFFFFLL);
    }

  }
}

uint64_t __62__PLModelMigrator__fixupSharedVideosWithoutThumbnailsInStore___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setCloudPlaceholderKind:", 2);
}

void __60__PLModelMigrator__addCloudKindSubtypeAndBurstFlagsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v6, "cplAssetSubtypeFromPLAssetSubtype:", objc_msgSend(v6, "kindSubtype"));
  if (v4 != (int)objc_msgSend(v3, "cloudKindSubtype"))
  {
    objc_msgSend(v3, "setCloudKindSubtype:", (__int16)v4);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  v5 = objc_msgSend(v6, "cplBurstFlagsFromPLAvalancheType:", objc_msgSend(v6, "avalanchePickType"));
  if (v5 != (int)objc_msgSend(v3, "cloudAvalanchePickType"))
  {
    objc_msgSend(v3, "setCloudAvalanchePickType:", v5);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }

}

void __51__PLModelMigrator__tagScreenshotsForAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "updateKindSubtypeIfScreenshot"))
  {
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    if (objc_msgSend(v3, "cloudLocalState"))
      objc_msgSend(v3, "setCloudLocalState:", 0);
  }

}

void __59__PLModelMigrator__addCameraCaptureDeviceForAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  id v5;

  v3 = a2;
  objc_msgSend(v3, "metadataFromMediaPropertiesOrOriginalResource");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "updatePlaybackVariationAndStyleFromOriginalMetadata:");

  if (v4)
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

}

uint64_t __58__PLModelMigrator__fixIncorrectAddedDateForAssetsInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "fixPossiblyIncorrectAddedDateForAsset:", a2);
  if ((_DWORD)result)
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

void __54__PLModelMigrator__generateAddedDateForAssetsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v3 = a2;
  objc_msgSend(v3, "dateCreated");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setAddedDate:", v2);

  objc_msgSend(v3, "persistMetadataToFilesystem");
}

void __45__PLModelMigrator__fixKeywordsInStagedStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  objc_msgSend(v3, "valueForKey:", CFSTR("assetAttributes"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v8), "mutableSetValueForKey:", CFSTR("keywords"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "addObject:", *(_QWORD *)(a1 + 32));

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  v10 = *(void **)(a1 + 40);
  objc_msgSend(v3, "objectID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "addObject:", v11);

}

void __43__PLModelMigrator__updateKeyAssetInMemory___block_invoke(id *a1, void *a2)
{
  id v3;
  void *v4;
  id *v5;
  void *v6;
  NSObject *WeakRetained;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "calculateKeyAsset");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(v3, "setKeyAsset:", v4);
    v5 = a1 + 6;
  }
  else
  {
    if (objc_msgSend(a1[4], "isCloudPhotoLibraryEnabled")
      && objc_msgSend(v3, "cloudLocalState") == 1)
    {
      objc_msgSend(v3, "uuid");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        WeakRetained = objc_loadWeakRetained(a1 + 8);
        -[NSObject addObject:](WeakRetained, "addObject:", v6);
      }
      else
      {
        PLMigrationGetLog();
        WeakRetained = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
        {
          v9 = 138412290;
          v10 = v3;
          _os_log_impl(&dword_199541000, WeakRetained, OS_LOG_TYPE_ERROR, "Memory %@ missing uuid", (uint8_t *)&v9, 0xCu);
        }
      }

    }
    objc_msgSend(a1[4], "pathManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "removePersistedFileSystemDataWithPathManager:", v8);

    objc_msgSend(a1[5], "deleteObject:", v3);
    v5 = a1 + 7;
  }
  ++*(_QWORD *)(*((_QWORD *)*v5 + 1) + 24);

}

void __64__PLModelMigrator__fixLocallyAvailableFlagForThumbnailsInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;
  id v7;
  NSObject *v8;
  id v9;
  uint8_t buf[4];
  id v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "filePath");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:", v4))
  {
    v5 = *(void **)(a1 + 32);
    v9 = 0;
    v6 = objc_msgSend(v5, "removeItemAtPath:error:", v4, &v9);
    v7 = v9;
    if ((v6 & 1) == 0)
    {
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v11 = v3;
        v12 = 2112;
        v13 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Failed to remove thumbnail resource for %@: %@", buf, 0x16u);
      }

    }
  }
  objc_msgSend(v3, "setIsLocallyAvailable:", 0);
  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

}

uint64_t __44__PLModelMigrator__removeCameraRollInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteObject:", a2);
}

void __45__PLModelMigrator__deleteAllMemoriesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *WeakRetained;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (*(_BYTE *)(a1 + 56) && objc_msgSend(v3, "cloudLocalState") == 1)
  {
    objc_msgSend(v4, "uuid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      -[NSObject addObject:](WeakRetained, "addObject:", v5);
    }
    else
    {
      PLMigrationGetLog();
      WeakRetained = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
      {
        v7 = 138412290;
        v8 = v4;
        _os_log_impl(&dword_199541000, WeakRetained, OS_LOG_TYPE_ERROR, "Memory %@ missing uuid", (uint8_t *)&v7, 0xCu);
      }
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v4);
  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

}

void __44__PLModelMigrator__fixCustomRenderedValues___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  objc_msgSend(v3, "metadataFromMediaPropertiesOrOriginalResource");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setDepthTypeFromMetadata:", v4);

  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
}

void __48__PLModelMigrator__populateNilOriginalFilename___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(v7, "cloudAssetGUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v7, "fileExtension");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringWithFormat:", CFSTR("%@.%@"), v3, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "setOriginalFilename:", v6);
    objc_msgSend(v7, "persistMetadataToFilesystem");
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

  }
}

void __56__PLModelMigrator__populateNilOriginalFilenameOnMaster___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = a2;
  objc_msgSend(v2, "assets");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "allObjects");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstObject");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "originalFilename");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setOriginalFilename:", v5);

  objc_msgSend(v2, "setCloudLocalState:", 0);
}

void __42__PLModelMigrator__persistPersonsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "pathManager");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "persistMetadataToFileSystemWithPathManager:", v4);

}

void __43__PLModelMigrator__persistMemoriesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "pathManager");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "persistMetadataToFileSystemWithPathManager:", v4);

}

void __43__PLModelMigrator__populateLatLongInAsset___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  void *v10;
  id v11;

  v11 = a2;
  objc_msgSend(v11, "locationData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    objc_msgSend(v11, "locationData");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "dateCreated");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = +[PLManagedAsset newLocationFromLocationData:timestampIfMissing:](PLManagedAsset, "newLocationFromLocationData:timestampIfMissing:", v3, v4);

    v6 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(v5, "coordinate");
    objc_msgSend(v6, "numberWithDouble:");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setValue:forKey:", v7, CFSTR("latitude"));

    v8 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(v5, "coordinate");
    objc_msgSend(v8, "numberWithDouble:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setValue:forKey:", v10, CFSTR("longitude"));

  }
}

void __49__PLModelMigrator__populateRepresentativeAssets___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  id v3;

  v2 = a2;
  objc_msgSend(v2, "curatedAssets");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setValue:forKey:", v3, CFSTR("representativeAssets"));

}

void __50__PLModelMigrator__fixCloudMasterCloudLocalState___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "assets");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "allObjects");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "firstObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4 && objc_msgSend(v4, "cloudLocalState"))
    objc_msgSend(v5, "setCloudLocalState:", objc_msgSend(v4, "cloudLocalState"));

}

void __40__PLModelMigrator__resetUploadAttempts___block_invoke(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  objc_msgSend(v2, "setUploadAttempts:", 0);
  objc_msgSend(v2, "setLastUploadAttemptDate:", 0);
  objc_msgSend(v2, "setCloudLocalState:", 0);

}

uint64_t __44__PLModelMigrator__resetFailedCloudMasters___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setCloudLocalState:", 0);
}

void __38__PLModelMigrator__resetFailedAssets___block_invoke(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  objc_msgSend(v2, "setUploadAttempts:", 0);
  objc_msgSend(v2, "setLastUploadAttemptDate:", 0);
  objc_msgSend(v2, "setCloudLocalState:", 0);

}

void __38__PLModelMigrator__fixAdjustedAssets___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;
  id v18;
  void *v19;
  char v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  void *v24;
  void *v25;
  int v26;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint8_t buf[4];
  id v39;
  __int16 v40;
  void *v41;
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_msgSend(v5, "resources");
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
  if (v31)
  {
    v7 = *(_QWORD *)v35;
    v29 = v6;
    v30 = *(_QWORD *)v35;
    v28 = v5;
    do
    {
      for (i = 0; i != v31; ++i)
      {
        if (*(_QWORD *)v35 != v7)
          objc_enumerationMutation(v6);
        v9 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
        v10 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v5, "uuid");
        v11 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setAssetUuid:", v11);

        objc_msgSend(v9, "filePath");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "pathForCPLResourceType:adjusted:", (int)objc_msgSend(v9, "type"), 1);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v11) = objc_msgSend(v12, "isEqualToString:", v13);
        v14 = objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:isDirectory:", v12, 0);
        if ((v11 & 1) != 0)
        {
          objc_msgSend(v9, "setIsLocallyAvailable:", v14);
          goto LABEL_21;
        }
        if ((_DWORD)v14)
        {
          objc_msgSend(v13, "stringByDeletingLastPathComponent", v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = *(void **)(a1 + 32);
          v33 = 0;
          v17 = objc_msgSend(v16, "createDirectoryIfNeededAtPath:error:", v15, &v33);
          v18 = v33;
          if ((v17 & 1) != 0)
          {
            v19 = *(void **)(a1 + 32);
            v32 = v18;
            v20 = objc_msgSend(v19, "moveItemAtPath:toPath:error:", v12, v13, &v32);
            v21 = v32;

            if ((v20 & 1) != 0)
            {
              v22 = 1;
LABEL_19:
              v5 = v28;

              v6 = v29;
              goto LABEL_20;
            }
            PLMigrationGetLog();
            v23 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(v21, "userInfo");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v39 = v21;
              v40 = 2112;
              v41 = v25;
              _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "_fixAdjustedAssets: failed: %@ %@", buf, 0x16u);

            }
            v18 = v21;
          }
          else
          {
            PLMigrationGetLog();
            v23 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(v18, "userInfo");
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v39 = v18;
              v40 = 2112;
              v41 = v24;
              _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "_fixAdjustedAssets: failed: %@ %@", buf, 0x16u);

            }
          }

          v22 = 0;
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
          v21 = v18;
          goto LABEL_19;
        }
        v22 = 0;
LABEL_20:
        objc_msgSend(v9, "setIsLocallyAvailable:", v22);
        objc_msgSend(v9, "setFilePath:", v13);
        v7 = v30;
LABEL_21:
        v26 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

        objc_autoreleasePoolPop(v10);
        if (!v26)
          goto LABEL_24;
      }
      v31 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
    }
    while (v31);
  }
LABEL_24:

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a4 = 1;

}

uint64_t __92__PLModelMigrator__performChangesOnBatchFetchedObjects_inMOC_batchSize_objectHandler_error___block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = objc_msgSend(*(id *)(a1 + 32), "hasChanges");
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "save:", *(_QWORD *)(a1 + 48));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    if (*(_BYTE *)(v3 + 24))
      v4 = result;
    else
      v4 = 0;
    *(_BYTE *)(v3 + 24) = v4;
  }
  return result;
}

void __52__PLModelMigrator__fixCorruptedOrientationsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  const __CFData *v3;
  CGImageSource *v4;
  CFDictionaryRef v5;
  void *v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  id v10;

  v10 = a2;
  objc_msgSend(v10, "mainFileURL");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (const __CFData *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithContentsOfURL:options:error:", v2, 1, 0);
  if (-[__CFData length](v3, "length"))
  {
    v4 = CGImageSourceCreateWithData(v3, 0);
    v5 = CGImageSourceCopyPropertiesAtIndex(v4, 0, 0);
    -[__CFDictionary objectForKeyedSubscript:](v5, "objectForKeyedSubscript:", *MEMORY[0x1E0CBCFF0]);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "shortValue");
    v8 = objc_msgSend(v10, "originalOrientation");
    if ((_DWORD)v7)
      v9 = v8 == (_DWORD)v7;
    else
      v9 = 1;
    if (!v9)
      objc_msgSend(v10, "setOriginalOrientation:", v7);
    CFRelease(v4);

  }
}

void __68__PLModelMigrator__fixDuplicatedRootFolderAndOrphanedAlbumsInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "pathManager");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removePersistedFileSystemDataWithPathManager:", v4);

}

void __63__PLModelMigrator__removeInvalidAdjustmentResourceDataInStore___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  objc_msgSend(v2, "resources");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "syncedAdjustmentFingerprint");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (!v7)
  {

    goto LABEL_19;
  }
  v8 = v7;
  v17 = v2;
  v9 = 0;
  v10 = *(_QWORD *)v19;
  do
  {
    v11 = 0;
    do
    {
      if (*(_QWORD *)v19 != v10)
        objc_enumerationMutation(v6);
      v12 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * v11);
      v13 = (void *)MEMORY[0x19AEC1554]();
      if (objc_msgSend(v12, "type") != 13)
        goto LABEL_11;
      if ((v9 & 1) != 0)
      {
        v9 = 1;
        goto LABEL_12;
      }
      objc_msgSend(v12, "fingerprint");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v14, "isEqualToString:", v4);

      if (v15)
      {
        v9 = 1;
LABEL_11:
        objc_msgSend(v5, "addObject:", v12);
        goto LABEL_12;
      }
      v9 = 0;
LABEL_12:
      objc_autoreleasePoolPop(v13);
      ++v11;
    }
    while (v8 != v11);
    v16 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    v8 = v16;
  }
  while (v16);

  v2 = v17;
  if ((v9 & 1) != 0)
    objc_msgSend(v17, "setResources:", v5);
LABEL_19:

}

void __46__PLModelMigrator__addLocationHashesToAssets___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD v9[2];
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  objc_msgSend(v2, "location");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "pl_locationHash");
  PLMomentsGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    objc_msgSend(v3, "coordinate");
    v7 = v6;
    objc_msgSend(v3, "coordinate");
    v9[0] = 67109633;
    v9[1] = v4;
    v10 = 2049;
    v11 = v7;
    v12 = 2049;
    v13 = v8;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEBUG, "Generating hash (%d) for asset location (%{private}f, %{private}f)", (uint8_t *)v9, 0x1Cu);
  }

  objc_msgSend(v2, "setLocationHash:", v4);
}

void __54__PLModelMigrator__fixupSyncedAssetAttributesInStore___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  objc_msgSend(v3, "uuid");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v5);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "_applySyncedProperties:toAsset:", v4, v3);

}

void __47__PLModelMigrator__fixupCloudResourcesInStore___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  objc_msgSend(v4, "pathForOriginalFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:", v3) & 1) == 0
    && !objc_msgSend(v4, "cloudPlaceholderKind"))
  {
    objc_msgSend(v4, "setCloudPlaceholderKind:", 3);
  }

}

uint64_t __47__PLModelMigrator__populateFaceRegionsInStore___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateFaceRegionsForAsset:", a2);
}

void __55__PLModelMigrator__populateVideoCpFieldsInStagedStore___block_invoke(_QWORD *a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = a1[4];
  v4 = a2;
  objc_msgSend(v4, "valueForKey:", v3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "valueForKey:", a1[5]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "valueForKey:", CFSTR("asset"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setValue:forKey:", v7, a1[4]);
  objc_msgSend(v6, "setValue:forKey:", v5, a1[5]);
  ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);

}

id __65__PLModelMigrator__populateAlbumAndFolderOrderKeysInStagedStore___block_invoke(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "managedObjectContextForMigrationInStore:name:concurrencyType:", *(_QWORD *)(a1 + 32), a2, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id __65__PLModelMigrator__populateAlbumAndFolderOrderKeysInStagedStore___block_invoke_1081(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "managedObjectContextForMigrationInStore:name:concurrencyType:", *(_QWORD *)(a1 + 32), a2, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void __62__PLModelMigrator__migrateTransformableUUIDsToStringsInStore___block_invoke(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  char v27;
  id v28;
  NSObject *v29;
  uint64_t v30;
  void *v31;
  NSObject *v32;
  _BYTE *v33;
  void *v34;
  void *v35;
  id v36;
  _QWORD v37[4];
  id v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint8_t buf[4];
  _BYTE v45[28];
  _BYTE v46[128];
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  objc_msgSend(MEMORY[0x1E0C97B48], "fetchRequestWithEntityName:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "count") == 1)
  {
    v10 = (void *)MEMORY[0x1E0CB3880];
    objc_msgSend(v8, "firstObject");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "predicateWithFormat:", CFSTR("%K != NULL"), v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v33 = a4;
    v34 = v9;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v14 = v8;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v40, v46, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v41;
      do
      {
        for (i = 0; i != v16; ++i)
        {
          if (*(_QWORD *)v41 != v17)
            objc_enumerationMutation(v14);
          objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != NULL"), *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * i));
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "addObject:", v19);

        }
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v40, v46, 16);
      }
      while (v16);
    }

    objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v13);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = v34;
    a4 = v33;
  }
  objc_msgSend(v9, "setPredicate:", v12);
  v39 = 0;
  v20 = *(void **)(a1 + 32);
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __62__PLModelMigrator__migrateTransformableUUIDsToStringsInStore___block_invoke_2;
  v37[3] = &unk_1E36775E8;
  v21 = v8;
  v38 = v21;
  objc_msgSend(v20, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v9, &v39, v37);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  if (v22)
  {
    PLMigrationGetLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(*(SEL *)(a1 + 48));
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "userInfo");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      *(_QWORD *)v45 = v24;
      *(_WORD *)&v45[8] = 2112;
      *(_QWORD *)&v45[10] = v22;
      *(_WORD *)&v45[18] = 2112;
      *(_QWORD *)&v45[20] = v25;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }
  else if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v26 = *(void **)(a1 + 32);
    v36 = 0;
    v27 = objc_msgSend(v26, "save:", &v36);
    v28 = v36;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v27;
    if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    {
      PLMigrationGetLog();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(*(SEL *)(a1 + 48));
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "userInfo");
        v30 = objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        *(_QWORD *)v45 = v35;
        *(_WORD *)&v45[8] = 2112;
        *(_QWORD *)&v45[10] = v28;
        *(_WORD *)&v45[18] = 2112;
        *(_QWORD *)&v45[20] = v30;
        v31 = (void *)v30;
        _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "%@ failed: %@ %@", buf, 0x20u);

      }
    }

  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    PLMigrationGetLog();
    v32 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109634;
      *(_DWORD *)v45 = v39;
      *(_WORD *)&v45[4] = 2112;
      *(_QWORD *)&v45[6] = v7;
      *(_WORD *)&v45[14] = 2112;
      *(_QWORD *)&v45[16] = v21;
      _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEFAULT, "Migrated %d %@ %@ to strings", buf, 0x1Cu);
    }

  }
  else
  {
    *a4 = 1;
  }

}

void __62__PLModelMigrator__migrateTransformableUUIDsToStringsInStore___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        objc_msgSend(v9, "stringByAppendingString:", CFSTR("String"), (_QWORD)v12);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "valueForKey:", v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "setValue:forKey:", v11, v10);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateDurationAndHDRTypeFromAdditionalAssetAttributesInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateTransformableUUIDsToStringsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateAlbumAndFolderOrderKeysInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateVideoCpFieldsInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_5(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateCloudResourcesRelationshipsInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_6(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateOriginalColorSpaceInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_7(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixKeywordsInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateRejectedFacesGroupInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_9(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateDetectedFacesGroupInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_emptyResourceTablesInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_11(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateVideoKeyFrameTimeValuesInStagedStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __140__PLModelMigrator_processWelterweightMigrationStageOnStore_migrationUUID_fromVersion_toVersion_migrationContext_progress_progressUnitCount___block_invoke_12(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateResourceUTIAndCodecInStagedStore:", *(_QWORD *)(a1 + 40));
}

void __93__PLModelMigrator_postProcessFixesAfterOTARestoreForCompleteAsset_fixAddedDate_isMegaBackup___block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "managedObjectContext");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deleteObject:", v3);

}

uint64_t __93__PLModelMigrator_postProcessFixesAfterOTARestoreForCompleteAsset_fixAddedDate_isMegaBackup___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "recipeID") & 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  char v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  const __CFString *v14;
  __int128 *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  __int128 *v22;
  void *v23;
  uint64_t v24;
  int v25;
  const __CFString *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "deviceRestoreMigrationSupport");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v2, "isRestoreFromBackup"))
    goto LABEL_3;
  objc_msgSend(*(id *)(a1 + 32), "postProcessingToken");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isModelMigrationRestorePostProcessingComplete");

  if ((v4 & 1) != 0)
    goto LABEL_3;
  v7 = objc_msgSend(v2, "isRestoreFromBackupSourceDeviceToDevice");
  v8 = v7 ^ 1u;
  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v9 = objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v10 = (void *)v9;
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);

    if (v12)
    {
      v57 = 0u;
      v58 = 0u;
      v55 = 0u;
      v56 = 0u;
      v53 = 0u;
      v54 = 0u;
      v51 = 0u;
      v52 = 0u;
      v49 = 0u;
      v50 = 0u;
      v47 = 0u;
      v48 = 0u;
      v45 = 0u;
      v46 = 0u;
      v43 = 0u;
      v44 = 0u;
      v41 = 0u;
      v42 = 0u;
      v39 = 0u;
      v40 = 0u;
      v37 = 0u;
      v38 = 0u;
      v35 = 0u;
      v36 = 0u;
      v33 = 0u;
      v34 = 0u;
      v31 = 0u;
      v32 = 0u;
      v29 = 0u;
      v30 = 0u;
      v27 = 0u;
      v28 = 0u;
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v13, OS_LOG_TYPE_INFO);
      v14 = CFSTR("cloud shared and iTunes synced");
      if (v7)
        v14 = CFSTR("cloud shared");
      v25 = 138543362;
      v26 = v14;
      LODWORD(v24) = 12;
      v15 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", &v25, v24);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "logWithMessage:fromCodeLocation:type:", v15, "PLModelMigrator.m", 3601, 1);

      if (v15 != &v27)
        free(v15);
    }
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "_deleteCloudSharedAndSynced:assetReferencesInStore:", v8, *(_QWORD *)(a1 + 40)))
  {
    v5 = 0;
    goto LABEL_4;
  }
  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v17 = objc_claimAutoreleasedReturnValue();
    if (v17)
    {
      v18 = (void *)v17;
      PLMigrationGetLog();
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = os_log_type_enabled(v19, OS_LOG_TYPE_INFO);

      if (v20)
      {
        v57 = 0u;
        v58 = 0u;
        v55 = 0u;
        v56 = 0u;
        v53 = 0u;
        v54 = 0u;
        v51 = 0u;
        v52 = 0u;
        v49 = 0u;
        v50 = 0u;
        v47 = 0u;
        v48 = 0u;
        v45 = 0u;
        v46 = 0u;
        v43 = 0u;
        v44 = 0u;
        v41 = 0u;
        v42 = 0u;
        v39 = 0u;
        v40 = 0u;
        v37 = 0u;
        v38 = 0u;
        v35 = 0u;
        v36 = 0u;
        v33 = 0u;
        v34 = 0u;
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        v27 = 0u;
        v28 = 0u;
        PLMigrationGetLog();
        v21 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v21, OS_LOG_TYPE_INFO);
        LOWORD(v25) = 0;
        LODWORD(v24) = 2;
        v22 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", &v25, v24);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "logWithMessage:fromCodeLocation:type:", v22, "PLModelMigrator.m", 3604, 1);

        if (v22 != &v27)
          free(v22);
      }
    }
    v5 = objc_msgSend(*(id *)(a1 + 32), "_deletePhotoStreamAssetReferencesInStore:", *(_QWORD *)(a1 + 40));
  }
  else
  {
LABEL_3:
    v5 = 1;
  }
LABEL_4:

  return v5;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_342(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_postProcessFromVersion6006Store:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateKindSubtypeForPanoramaPhotosNeedsReset:inStore:", 0, *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  _OWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  _WORD v17[8];
  _OWORD v18[32];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContextForMigrationInStore:name:concurrencyType:", *(_QWORD *)(a1 + 40), "-[PLModelMigrator postProcessMigratedStore:migrationUUID:fromVersion:progress:progressUnitCount:]_block_invoke_3", *MEMORY[0x1E0C97C38]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("TRUEPREDICATE"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLShare sharesWithPredicate:fetchLimit:inManagedObjectContext:](PLLibraryScope, "sharesWithPredicate:fetchLimit:inManagedObjectContext:", v3, 1, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count");

  v6 = *(void **)(a1 + 32);
  if (!*(_BYTE *)(a1 + 48) || v5)
  {
    v14 = objc_msgSend(v6, "rebuildAllMomentsInStore:deleteExistingMoments:", *(_QWORD *)(a1 + 40), 1);
  }
  else
  {
    objc_msgSend(v6, "migrationLogger");
    v7 = objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v8 = (void *)v7;
      PLMigrationGetLog();
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        memset(v18, 0, sizeof(v18));
        PLMigrationGetLog();
        v11 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
        v17[0] = 0;
        LODWORD(v16) = 2;
        v12 = (_OWORD *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v17, v16);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "logWithMessage:fromCodeLocation:type:", v12, "PLModelMigrator.m", 3630, 0);

        if (v12 != v18)
          free(v12);
      }
    }
    v14 = 1;
  }

  return v14;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_353(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addUUIDsToCollectionLists:skipMomentLists:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_356(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addLocationHashesToAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_359(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateAssetLocationData:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setupRootFolderInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceAlbumMetadataToDiskInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6(uint64_t a1)
{
  int v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  __int128 *v8;
  void *v9;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  __int128 *v14;
  void *v15;
  uint64_t v16;
  _WORD v17[8];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)v3;
  if (v2)
  {
    if (v3)
    {
      PLMigrationGetLog();
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

      if (v6)
      {
        v48 = 0u;
        v49 = 0u;
        v46 = 0u;
        v47 = 0u;
        v44 = 0u;
        v45 = 0u;
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        v18 = 0u;
        v19 = 0u;
        PLMigrationGetLog();
        v7 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
        v17[0] = 0;
        LODWORD(v16) = 2;
        v8 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v17, v16);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "logWithMessage:fromCodeLocation:type:", v8, "PLModelMigrator.m", 3662, 0);

        if (v8 != &v18)
          free(v8);
      }
    }
    return 1;
  }
  else
  {
    if (v3)
    {
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

      if (v12)
      {
        v48 = 0u;
        v49 = 0u;
        v46 = 0u;
        v47 = 0u;
        v44 = 0u;
        v45 = 0u;
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        v18 = 0u;
        v19 = 0u;
        PLMigrationGetLog();
        v13 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
        v17[0] = 0;
        LODWORD(v16) = 2;
        v14 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v17, v16);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "logWithMessage:fromCodeLocation:type:", v14, "PLModelMigrator.m", 3664, 0);

        if (v14 != &v18)
          free(v14);
      }
    }
    return objc_msgSend(*(id *)(a1 + 32), "_migrateLegacySlomoAdjustmentsInStore:fromLegacySLMFormat:", *(_QWORD *)(a1 + 40), 1);
  }
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_370(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_persistPlaceAnnotationData:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3673, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_374(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_fixupAssetPersistence:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3683, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_378(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_generateAddedDateForAssetsInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3693, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_382(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateAdjustmentsStateForAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_385(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_fixVideoDimensionsInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3707, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_389(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_fixCorruptedOrientationsInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3717, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_393(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupAlbumOrderInAlbumListInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_396(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupSharedStreamOrientationsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_399(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupBrokenBurstPicksInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_402(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupCloudResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_405(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixIncorrectThumbnailTablesInStore:deferHintChanges:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_408(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_fixIncorrectHeifMetadataInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3750, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_412(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  objc_msgSend(*(id *)(a1 + 32), "managedObjectContextForMigrationInStore:name:concurrencyType:", *(_QWORD *)(a1 + 40), "-[PLModelMigrator postProcessMigratedStore:migrationUUID:fromVersion:progress:progressUnitCount:]_block_invoke", *MEMORY[0x1E0C97C38]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "_migrationThumbnailManagerWithStore:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "resetThumbnailsWithResetType:deferHintChanges:inContext:", *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), v2);

  return v4;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_415(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_verifyCloudAssetsLocalAvailability:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_418(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_disableICloudPhoto");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_421(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeEvents:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_424(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateLegacySlomoAdjustmentsInStore:fromLegacySLMFormat:", *(_QWORD *)(a1 + 40), 0);
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_427(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  __int128 *v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  __int128 *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  __int128 *v22;
  void *v23;
  int v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  _BOOL4 v28;
  NSObject *v29;
  __int128 *v30;
  void *v31;
  uint64_t v32;
  _WORD v33[8];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v2 = objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (void *)v2;
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      v64 = 0u;
      v65 = 0u;
      v62 = 0u;
      v63 = 0u;
      v60 = 0u;
      v61 = 0u;
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
      v33[0] = 0;
      LODWORD(v32) = 2;
      v7 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v33, v32);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "logWithMessage:fromCodeLocation:type:", v7, "PLModelMigrator.m", 3780, 0);

      if (v7 != &v34)
        free(v7);
    }
  }
  result = objc_msgSend(*(id *)(a1 + 32), "_fixAdjustedAssets:", *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v10 = objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      v11 = (void *)v10;
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

      if (v13)
      {
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        v50 = 0u;
        v51 = 0u;
        v48 = 0u;
        v49 = 0u;
        v46 = 0u;
        v47 = 0u;
        v44 = 0u;
        v45 = 0u;
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v34 = 0u;
        v35 = 0u;
        PLMigrationGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
        v33[0] = 0;
        LODWORD(v32) = 2;
        v15 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v33, v32);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "logWithMessage:fromCodeLocation:type:", v15, "PLModelMigrator.m", 3783, 0);

        if (v15 != &v34)
          free(v15);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "_fixDuplicatedAssets:", *(_QWORD *)(a1 + 40));
    if ((_DWORD)result)
    {
      objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
      v17 = objc_claimAutoreleasedReturnValue();
      if (v17)
      {
        v18 = (void *)v17;
        PLMigrationGetLog();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

        if (v20)
        {
          v64 = 0u;
          v65 = 0u;
          v62 = 0u;
          v63 = 0u;
          v60 = 0u;
          v61 = 0u;
          v58 = 0u;
          v59 = 0u;
          v56 = 0u;
          v57 = 0u;
          v54 = 0u;
          v55 = 0u;
          v52 = 0u;
          v53 = 0u;
          v50 = 0u;
          v51 = 0u;
          v48 = 0u;
          v49 = 0u;
          v46 = 0u;
          v47 = 0u;
          v44 = 0u;
          v45 = 0u;
          v42 = 0u;
          v43 = 0u;
          v40 = 0u;
          v41 = 0u;
          v38 = 0u;
          v39 = 0u;
          v36 = 0u;
          v37 = 0u;
          v34 = 0u;
          v35 = 0u;
          PLMigrationGetLog();
          v21 = objc_claimAutoreleasedReturnValue();
          os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);
          v33[0] = 0;
          LODWORD(v32) = 2;
          v22 = (__int128 *)_os_log_send_and_compose_impl();

          objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v33, v32);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "logWithMessage:fromCodeLocation:type:", v22, "PLModelMigrator.m", 3787, 0);

          if (v22 != &v34)
            free(v22);
        }
      }
      v24 = objc_msgSend(*(id *)(a1 + 32), "_fixNonDuplicatedAssets:adjusted:", *(_QWORD *)(a1 + 40), 0);
      result = 0;
      if (v24)
      {
        objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
        v25 = objc_claimAutoreleasedReturnValue();
        if (v25)
        {
          v26 = (void *)v25;
          PLMigrationGetLog();
          v27 = objc_claimAutoreleasedReturnValue();
          v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

          if (v28)
          {
            v64 = 0u;
            v65 = 0u;
            v62 = 0u;
            v63 = 0u;
            v60 = 0u;
            v61 = 0u;
            v58 = 0u;
            v59 = 0u;
            v56 = 0u;
            v57 = 0u;
            v54 = 0u;
            v55 = 0u;
            v52 = 0u;
            v53 = 0u;
            v50 = 0u;
            v51 = 0u;
            v48 = 0u;
            v49 = 0u;
            v46 = 0u;
            v47 = 0u;
            v44 = 0u;
            v45 = 0u;
            v42 = 0u;
            v43 = 0u;
            v40 = 0u;
            v41 = 0u;
            v38 = 0u;
            v39 = 0u;
            v36 = 0u;
            v37 = 0u;
            v34 = 0u;
            v35 = 0u;
            PLMigrationGetLog();
            v29 = objc_claimAutoreleasedReturnValue();
            os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
            v33[0] = 0;
            LODWORD(v32) = 2;
            v30 = (__int128 *)_os_log_send_and_compose_impl();

            objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v33, v32);
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v31, "logWithMessage:fromCodeLocation:type:", v30, "PLModelMigrator.m", 3791, 0);

            if (v30 != &v34)
              free(v30);
          }
        }
        return objc_msgSend(*(id *)(a1 + 32), "_fixNonDuplicatedAssets:adjusted:", *(_QWORD *)(a1 + 40), 1);
      }
    }
  }
  return result;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_434(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repersistDuplicatedAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_437(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_populateFaceRegionsInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3804, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_441(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceSoftResetSync");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_444(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetAlbumToFolderOrderKeyForAlbums:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_447(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixDuplicatedAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_450(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixVisibleBurstAsset:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_453(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixVideoJPGPath:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_456(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixAlbumAndFolderSortAscending:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  __int128 *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  __int128 *v14;
  void *v15;
  uint64_t v17;
  _WORD v18[8];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v2 = objc_claimAutoreleasedReturnValue();
    if (v2)
    {
      v3 = (void *)v2;
      PLMigrationGetLog();
      v4 = objc_claimAutoreleasedReturnValue();
      v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

      if (v5)
      {
        v49 = 0u;
        v50 = 0u;
        v47 = 0u;
        v48 = 0u;
        v45 = 0u;
        v46 = 0u;
        v43 = 0u;
        v44 = 0u;
        v41 = 0u;
        v42 = 0u;
        v39 = 0u;
        v40 = 0u;
        v37 = 0u;
        v38 = 0u;
        v35 = 0u;
        v36 = 0u;
        v33 = 0u;
        v34 = 0u;
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        v27 = 0u;
        v28 = 0u;
        v25 = 0u;
        v26 = 0u;
        v23 = 0u;
        v24 = 0u;
        v21 = 0u;
        v22 = 0u;
        v19 = 0u;
        v20 = 0u;
        PLMigrationGetLog();
        v6 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
        v18[0] = 0;
        LODWORD(v17) = 2;
        v7 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v18, v17);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "logWithMessage:fromCodeLocation:type:", v7, "PLModelMigrator.m", 3841, 0);

        if (v7 != &v19)
          free(v7);
      }
    }
  }
  if (*(_BYTE *)(a1 + 49))
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v9 = objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      v10 = (void *)v9;
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

      if (v12)
      {
        v49 = 0u;
        v50 = 0u;
        v47 = 0u;
        v48 = 0u;
        v45 = 0u;
        v46 = 0u;
        v43 = 0u;
        v44 = 0u;
        v41 = 0u;
        v42 = 0u;
        v39 = 0u;
        v40 = 0u;
        v37 = 0u;
        v38 = 0u;
        v35 = 0u;
        v36 = 0u;
        v33 = 0u;
        v34 = 0u;
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        v27 = 0u;
        v28 = 0u;
        v25 = 0u;
        v26 = 0u;
        v23 = 0u;
        v24 = 0u;
        v21 = 0u;
        v22 = 0u;
        v19 = 0u;
        v20 = 0u;
        PLMigrationGetLog();
        v13 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
        v18[0] = 0;
        LODWORD(v17) = 2;
        v14 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v18, v17);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "logWithMessage:fromCodeLocation:type:", v14, "PLModelMigrator.m", 3844, 0);

        if (v14 != &v19)
          free(v14);
      }
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_performMigrationCacheDateCreatedOnResources:cacheItemIdentifierOnResources:store:", *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_463(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_recoverSingleBurstPhotos:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_466(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateAdjustmentTimestampsOnAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_469(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_fixIncorrectAddedDateForAssetsInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 3860, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_473(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addCameraCaptureDeviceForAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_476(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_tagScreenshotsForAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_479(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupSharedVideosWithoutThumbnailsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_482(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_markOldPhotoIrisEditsEvaluatedInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_485(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_markPhotoIrisVideoOrphansInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_488(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addCloudKindSubtypeAndBurstFlagsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_491(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixItemIdentifierForVideoCmplInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixLocalPathForVideoCmplDerivativesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixEmptyVideoResourcePathsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_persistVideoComplPropertiesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_trimInvalidAlbumAssetsMappingRecords");
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "photoDirectoryWithType:", 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = *(void **)(a1 + 32);
  v7[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "applyDataProtectionToPhotosPaths:fromKeyClass:toKeyClass:", v5, 2, 3);

  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetFailedAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetFailedCloudMasters:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetUploadAttempts:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_16(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixCloudMasterCloudLocalState:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_17(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateRepresentativeAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_18(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteAllAssetAnalysisStatesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_19(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "fixupUnknownAnalysisStatesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_20(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "fixupStatesWithUnreachableAssetUUIDsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_21(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "touchAnalysisStateSortTokensInStoreInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_22(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateLatLongInAsset:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_23(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_persistMemoriesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_24(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_persistPersonsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_25(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeOldPersonMetadataInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_26(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  __int128 *v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  __int128 *v15;
  void *v16;
  uint64_t v17;
  _WORD v18[8];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v2 = objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (void *)v2;
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      v49 = 0u;
      v50 = 0u;
      v47 = 0u;
      v48 = 0u;
      v45 = 0u;
      v46 = 0u;
      v43 = 0u;
      v44 = 0u;
      v41 = 0u;
      v42 = 0u;
      v39 = 0u;
      v40 = 0u;
      v37 = 0u;
      v38 = 0u;
      v35 = 0u;
      v36 = 0u;
      v33 = 0u;
      v34 = 0u;
      v31 = 0u;
      v32 = 0u;
      v29 = 0u;
      v30 = 0u;
      v27 = 0u;
      v28 = 0u;
      v25 = 0u;
      v26 = 0u;
      v23 = 0u;
      v24 = 0u;
      v21 = 0u;
      v22 = 0u;
      v19 = 0u;
      v20 = 0u;
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
      v18[0] = 0;
      LODWORD(v17) = 2;
      v7 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v18, v17);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "logWithMessage:fromCodeLocation:type:", v7, "PLModelMigrator.m", 3979, 0);

      if (v7 != &v19)
        free(v7);
    }
  }
  result = objc_msgSend(*(id *)(a1 + 32), "_populateNilOriginalFilename:", *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v10 = objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      v11 = (void *)v10;
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

      if (v13)
      {
        v49 = 0u;
        v50 = 0u;
        v47 = 0u;
        v48 = 0u;
        v45 = 0u;
        v46 = 0u;
        v43 = 0u;
        v44 = 0u;
        v41 = 0u;
        v42 = 0u;
        v39 = 0u;
        v40 = 0u;
        v37 = 0u;
        v38 = 0u;
        v35 = 0u;
        v36 = 0u;
        v33 = 0u;
        v34 = 0u;
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        v27 = 0u;
        v28 = 0u;
        v25 = 0u;
        v26 = 0u;
        v23 = 0u;
        v24 = 0u;
        v21 = 0u;
        v22 = 0u;
        v19 = 0u;
        v20 = 0u;
        PLMigrationGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
        v18[0] = 0;
        LODWORD(v17) = 2;
        v15 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v18, v17);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "logWithMessage:fromCodeLocation:type:", v15, "PLModelMigrator.m", 3982, 0);

        if (v15 != &v19)
          free(v15);
      }
    }
    return objc_msgSend(*(id *)(a1 + 32), "_populateNilOriginalFilenameOnMaster:", *(_QWORD *)(a1 + 40));
  }
  return result;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_534(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_flattenUnknownCustomRenderedValues:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_537(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixCustomRenderedValues:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_540(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deleteAllMemoriesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_543(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "photoDirectoryWithType:", 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = *(void **)(a1 + 32);
  v7[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "applyDataProtectionToPhotosPaths:fromKeyClass:toKeyClass:", v5, 4, 3);

  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_546(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixFaceAlgorithmVersion:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_549(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixZeroDurationPhotoIrisWithLocalResourcesInStore:assumeAdjustedIrisIsVisible:", *(_QWORD *)(a1 + 40), 1);
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_552(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeCameraRollInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_555(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixLastPrefetchDateInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_558(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixLocallyAvailableFlagForThumbnailsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_561(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateKeyAssetInMemory:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_564(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deleteOrphanedUnverifiedPeople:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_567(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixMemoriesWithAssetLists:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_570(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeUntrackedCloudResourceImageDerivativesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14_573(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_rebuildWideCaptureThumbsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15_576(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_persistPhotoIrisVisibilityStateToDiskInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 4057, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_580(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cleanupInvalidAlbumsAndFoldersInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_583(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_setPlaybackStyleForAnimatedGIFsInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 4071, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_587(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixMovieAttributesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_590(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "libraryURL");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLLibraryServicesManager libraryServicesManagerForLibraryURL:](PLLibraryServicesManager, "libraryServicesManagerForLibraryURL:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (_os_feature_enabled_impl())
  {
    objc_msgSend(v3, "searchIndexingEngine");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dropSearchIndexWithSourceName:completion:", CFSTR("Dropping search index after lightweight migration"), 0);
  }
  else
  {
    objc_msgSend(v3, "searchIndexManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "resetSearchIndexWithReason:dropCompletion:", 6, 0);
  }

  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_593(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStoreAndClearSceneprints:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_596(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setUserTypeOnKeyFace:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_599(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_refreshTriggerValues:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_602(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "clearVisionWorkerCache");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_605(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixRejectedKeyFace:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_608(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixMergedPeopleThatShouldBeVerified:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_611(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_tryToPromoteUnknownAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_614(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixTrashedDate:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_617(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixMasterCloudLocalStateEnum:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_620(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateCloudResourceLocalStateInStor:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_623(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupCroppedUnadjustedAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14_626(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateUserKeyFacePickSourceForPersonInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15_629(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_16_632(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removingDuplicatedCloudAssetGuid:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_17_633(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeAutoloopWorkerStatesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_18_636(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixWhitelistOwnerForPendingInvitationsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_19_639(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repushMemoriesWithNewFeaturesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_20_642(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_retryQuarantinedAssetsAndFixResourceRelation:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_21_645(uint64_t a1)
{
  uint64_t result;
  char v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  __int128 *v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  __int128 *v17;
  void *v18;
  char v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  __int128 *v25;
  void *v26;
  char v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  _BOOL4 v31;
  NSObject *v32;
  __int128 *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  NSObject *v37;
  _BOOL4 v38;
  NSObject *v39;
  __int128 *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  NSObject *v44;
  _BOOL4 v45;
  NSObject *v46;
  __int128 *v47;
  void *v48;
  uint64_t v49;
  _WORD v50[7];
  unsigned __int8 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  result = 1;
  v51 = 1;
  if (*(int *)(a1 + 48) < 11000)
  {
    v3 = 0;
  }
  else
  {
    v3 = objc_msgSend(*(id *)(a1 + 32), "_storeContainsFaceCrops:success:", *(_QWORD *)(a1 + 40), &v51);
    result = v51;
    if (!v51)
      goto LABEL_11;
  }
  if ((v3 & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v4 = objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      v5 = (void *)v4;
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

      if (v7)
      {
        v82 = 0u;
        v83 = 0u;
        v80 = 0u;
        v81 = 0u;
        v78 = 0u;
        v79 = 0u;
        v76 = 0u;
        v77 = 0u;
        v74 = 0u;
        v75 = 0u;
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        v68 = 0u;
        v69 = 0u;
        v66 = 0u;
        v67 = 0u;
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        PLMigrationGetLog();
        v8 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
        v50[0] = 0;
        LODWORD(v49) = 2;
        v9 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v50, v49);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 4180, 0);

        if (v9 != &v52)
          free(v9);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "_ensureAllUserVerifiedPersonsHaveFaceCropsInStore:", *(_QWORD *)(a1 + 40));
    v51 = result;
  }
LABEL_11:
  if ((_DWORD)result)
    v11 = v3;
  else
    v11 = 1;
  if ((v11 & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v12 = objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      v13 = (void *)v12;
      PLMigrationGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

      if (v15)
      {
        v82 = 0u;
        v83 = 0u;
        v80 = 0u;
        v81 = 0u;
        v78 = 0u;
        v79 = 0u;
        v76 = 0u;
        v77 = 0u;
        v74 = 0u;
        v75 = 0u;
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        v68 = 0u;
        v69 = 0u;
        v66 = 0u;
        v67 = 0u;
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        PLMigrationGetLog();
        v16 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);
        v50[0] = 0;
        LODWORD(v49) = 2;
        v17 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v50, v49);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "logWithMessage:fromCodeLocation:type:", v17, "PLModelMigrator.m", 4184, 0);

        if (v17 != &v52)
          free(v17);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "resetRejectedFacesOnAllPersonsInStore:", *(_QWORD *)(a1 + 40));
    v51 = result;
  }
  if ((_DWORD)result)
    v19 = v3;
  else
    v19 = 1;
  if ((v19 & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v20 = objc_claimAutoreleasedReturnValue();
    if (v20)
    {
      v21 = (void *)v20;
      PLMigrationGetLog();
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

      if (v23)
      {
        v82 = 0u;
        v83 = 0u;
        v80 = 0u;
        v81 = 0u;
        v78 = 0u;
        v79 = 0u;
        v76 = 0u;
        v77 = 0u;
        v74 = 0u;
        v75 = 0u;
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        v68 = 0u;
        v69 = 0u;
        v66 = 0u;
        v67 = 0u;
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        PLMigrationGetLog();
        v24 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);
        v50[0] = 0;
        LODWORD(v49) = 2;
        v25 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v50, v49);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "logWithMessage:fromCodeLocation:type:", v25, "PLModelMigrator.m", 4188, 0);

        if (v25 != &v52)
          free(v25);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "markAllDirtyFaceAnalysisStatesWithFaceDetectionWorkerFlagsInStore:", *(_QWORD *)(a1 + 40));
    v51 = result;
  }
  if ((_DWORD)result)
    v27 = v3;
  else
    v27 = 1;
  if ((v27 & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v28 = objc_claimAutoreleasedReturnValue();
    if (v28)
    {
      v29 = (void *)v28;
      PLMigrationGetLog();
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        v82 = 0u;
        v83 = 0u;
        v80 = 0u;
        v81 = 0u;
        v78 = 0u;
        v79 = 0u;
        v76 = 0u;
        v77 = 0u;
        v74 = 0u;
        v75 = 0u;
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        v68 = 0u;
        v69 = 0u;
        v66 = 0u;
        v67 = 0u;
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        PLMigrationGetLog();
        v32 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);
        v50[0] = 0;
        LODWORD(v49) = 2;
        v33 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v50, v49);
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "logWithMessage:fromCodeLocation:type:", v33, "PLModelMigrator.m", 4192, 0);

        if (v33 != &v52)
          free(v33);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "markUserConfirmedFacesAndCorrespondingFaceAnalysisStatesDirtyInStore:", *(_QWORD *)(a1 + 40));
    v51 = result;
  }
  if ((_DWORD)result)
  {
    if (!*(_BYTE *)(a1 + 52))
      return 1;
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v35 = objc_claimAutoreleasedReturnValue();
    if (v35)
    {
      v36 = (void *)v35;
      PLMigrationGetLog();
      v37 = objc_claimAutoreleasedReturnValue();
      v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);

      if (v38)
      {
        v82 = 0u;
        v83 = 0u;
        v80 = 0u;
        v81 = 0u;
        v78 = 0u;
        v79 = 0u;
        v76 = 0u;
        v77 = 0u;
        v74 = 0u;
        v75 = 0u;
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        v68 = 0u;
        v69 = 0u;
        v66 = 0u;
        v67 = 0u;
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        PLMigrationGetLog();
        v39 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT);
        v50[0] = 0;
        LODWORD(v49) = 2;
        v40 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v50, v49);
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "logWithMessage:fromCodeLocation:type:", v40, "PLModelMigrator.m", 4198, 0);

        if (v40 != &v52)
          free(v40);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "_repushAssetsWithAnyUserConfirmedFaceInStore:", *(_QWORD *)(a1 + 40));
    v51 = result;
    if ((_DWORD)result)
    {
      if (*(_BYTE *)(a1 + 52))
      {
        objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
        v42 = objc_claimAutoreleasedReturnValue();
        if (v42)
        {
          v43 = (void *)v42;
          PLMigrationGetLog();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT);

          if (v45)
          {
            v82 = 0u;
            v83 = 0u;
            v80 = 0u;
            v81 = 0u;
            v78 = 0u;
            v79 = 0u;
            v76 = 0u;
            v77 = 0u;
            v74 = 0u;
            v75 = 0u;
            v72 = 0u;
            v73 = 0u;
            v70 = 0u;
            v71 = 0u;
            v68 = 0u;
            v69 = 0u;
            v66 = 0u;
            v67 = 0u;
            v64 = 0u;
            v65 = 0u;
            v62 = 0u;
            v63 = 0u;
            v60 = 0u;
            v61 = 0u;
            v58 = 0u;
            v59 = 0u;
            v56 = 0u;
            v57 = 0u;
            v54 = 0u;
            v55 = 0u;
            v52 = 0u;
            v53 = 0u;
            PLMigrationGetLog();
            v46 = objc_claimAutoreleasedReturnValue();
            os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT);
            v50[0] = 0;
            LODWORD(v49) = 2;
            v47 = (__int128 *)_os_log_send_and_compose_impl();

            objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v50, v49);
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v48, "logWithMessage:fromCodeLocation:type:", v47, "PLModelMigrator.m", 4202, 0);

            if (v47 != &v52)
              free(v47);
          }
        }
        return objc_msgSend(*(id *)(a1 + 32), "_markMigrationVerifiedTypePersonsInStore:", *(_QWORD *)(a1 + 40));
      }
      return 1;
    }
  }
  return result;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_654(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateCloudNameSourceOnFacesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_657(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updatePlaybackStylesAndVariationsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_660(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(*(id *)(a1 + 32), "_identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure:inStore:", objc_msgSend(v3, "isCloudPhotoLibraryEnabled"), *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 4220, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_664(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_populateCloudVerifiedTypeOnPersonsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_667(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "resetFaceQualityInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_670(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeUntrackedPersonMetadataInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_673(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "resetManualOrderForNonFavoritePeopleInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_676(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeAutoloopCacheIfExists");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_679(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixAssetMasterResources:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_682(uint64_t a1)
{
  void *v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCPLSettings settingsWithPathManager:](PLCPLSettings, "settingsWithPathManager:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "setRunOnceFlag:error:", 2, 0);
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_686(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixNilCloudMasterGUID:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_689(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repushPersonsWithMergeTargetInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_692(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_persistStoreUUIDToMobileCPLPlist:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_695(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  __int128 *v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  __int128 *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  __int128 *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  _BOOL4 v27;
  NSObject *v28;
  __int128 *v29;
  void *v30;
  uint64_t v31;
  _WORD v32[8];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v2 = objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (void *)v2;
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      v63 = 0u;
      v64 = 0u;
      v61 = 0u;
      v62 = 0u;
      v59 = 0u;
      v60 = 0u;
      v57 = 0u;
      v58 = 0u;
      v55 = 0u;
      v56 = 0u;
      v53 = 0u;
      v54 = 0u;
      v51 = 0u;
      v52 = 0u;
      v49 = 0u;
      v50 = 0u;
      v47 = 0u;
      v48 = 0u;
      v45 = 0u;
      v46 = 0u;
      v43 = 0u;
      v44 = 0u;
      v41 = 0u;
      v42 = 0u;
      v39 = 0u;
      v40 = 0u;
      v37 = 0u;
      v38 = 0u;
      v35 = 0u;
      v36 = 0u;
      v33 = 0u;
      v34 = 0u;
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
      v32[0] = 0;
      LODWORD(v31) = 2;
      v7 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v32, v31);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "logWithMessage:fromCodeLocation:type:", v7, "PLModelMigrator.m", 4271, 0);

      if (v7 != &v33)
        free(v7);
    }
  }
  result = objc_msgSend(*(id *)(a1 + 32), "_purgeCloudSharedResourcesInStore:", *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v10 = objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      v11 = (void *)v10;
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

      if (v13)
      {
        v63 = 0u;
        v64 = 0u;
        v61 = 0u;
        v62 = 0u;
        v59 = 0u;
        v60 = 0u;
        v57 = 0u;
        v58 = 0u;
        v55 = 0u;
        v56 = 0u;
        v53 = 0u;
        v54 = 0u;
        v51 = 0u;
        v52 = 0u;
        v49 = 0u;
        v50 = 0u;
        v47 = 0u;
        v48 = 0u;
        v45 = 0u;
        v46 = 0u;
        v43 = 0u;
        v44 = 0u;
        v41 = 0u;
        v42 = 0u;
        v39 = 0u;
        v40 = 0u;
        v37 = 0u;
        v38 = 0u;
        v35 = 0u;
        v36 = 0u;
        v33 = 0u;
        v34 = 0u;
        PLMigrationGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
        v32[0] = 0;
        LODWORD(v31) = 2;
        v15 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v32, v31);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "logWithMessage:fromCodeLocation:type:", v15, "PLModelMigrator.m", 4274, 0);

        if (v15 != &v33)
          free(v15);
      }
    }
    result = objc_msgSend(*(id *)(a1 + 32), "_fixCloudSharedVideosInStore:", *(_QWORD *)(a1 + 40));
    if ((_DWORD)result)
    {
      objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
      v17 = objc_claimAutoreleasedReturnValue();
      if (v17)
      {
        v18 = (void *)v17;
        PLMigrationGetLog();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

        if (v20)
        {
          v63 = 0u;
          v64 = 0u;
          v61 = 0u;
          v62 = 0u;
          v59 = 0u;
          v60 = 0u;
          v57 = 0u;
          v58 = 0u;
          v55 = 0u;
          v56 = 0u;
          v53 = 0u;
          v54 = 0u;
          v51 = 0u;
          v52 = 0u;
          v49 = 0u;
          v50 = 0u;
          v47 = 0u;
          v48 = 0u;
          v45 = 0u;
          v46 = 0u;
          v43 = 0u;
          v44 = 0u;
          v41 = 0u;
          v42 = 0u;
          v39 = 0u;
          v40 = 0u;
          v37 = 0u;
          v38 = 0u;
          v35 = 0u;
          v36 = 0u;
          v33 = 0u;
          v34 = 0u;
          PLMigrationGetLog();
          v21 = objc_claimAutoreleasedReturnValue();
          os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);
          v32[0] = 0;
          LODWORD(v31) = 2;
          v22 = (__int128 *)_os_log_send_and_compose_impl();

          objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v32, v31);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "logWithMessage:fromCodeLocation:type:", v22, "PLModelMigrator.m", 4278, 0);

          if (v22 != &v33)
            free(v22);
        }
      }
      result = objc_msgSend(*(id *)(a1 + 32), "_fixCloudSharedGIFsInStore:", *(_QWORD *)(a1 + 40));
      if ((_DWORD)result)
      {
        objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
        v24 = objc_claimAutoreleasedReturnValue();
        if (v24)
        {
          v25 = (void *)v24;
          PLMigrationGetLog();
          v26 = objc_claimAutoreleasedReturnValue();
          v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

          if (v27)
          {
            v63 = 0u;
            v64 = 0u;
            v61 = 0u;
            v62 = 0u;
            v59 = 0u;
            v60 = 0u;
            v57 = 0u;
            v58 = 0u;
            v55 = 0u;
            v56 = 0u;
            v53 = 0u;
            v54 = 0u;
            v51 = 0u;
            v52 = 0u;
            v49 = 0u;
            v50 = 0u;
            v47 = 0u;
            v48 = 0u;
            v45 = 0u;
            v46 = 0u;
            v43 = 0u;
            v44 = 0u;
            v41 = 0u;
            v42 = 0u;
            v39 = 0u;
            v40 = 0u;
            v37 = 0u;
            v38 = 0u;
            v35 = 0u;
            v36 = 0u;
            v33 = 0u;
            v34 = 0u;
            PLMigrationGetLog();
            v28 = objc_claimAutoreleasedReturnValue();
            os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);
            v32[0] = 0;
            LODWORD(v31) = 2;
            v29 = (__int128 *)_os_log_send_and_compose_impl();

            objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v32, v31);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "logWithMessage:fromCodeLocation:type:", v29, "PLModelMigrator.m", 4282, 0);

            if (v29 != &v33)
              free(v29);
          }
        }
        return objc_msgSend(*(id *)(a1 + 32), "_fixOriginalPropertiesForCloudSharedAssetsInStore:", *(_QWORD *)(a1 + 40));
      }
    }
  }
  return result;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_702(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deletePersonsMissingUUIDInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_705(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_unquarantinedQuarantinedItems:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_708(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixUTIforSlowMoInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_711(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixInitialSyncMarker");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_714(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_moveCloudSharedDerivativesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_717(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixDuplicatedRootFolderAndOrphanedAlbumsInStore:", *(_QWORD *)(a1 + 40));
}

BOOL __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_720(uint64_t a1)
{
  return +[PLResourceInstaller reconsiderSavedAssetTypeInStore:migrator:](PLResourceInstaller, "reconsiderSavedAssetTypeInStore:migrator:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

BOOL __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_723(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  __int128 *v7;
  void *v8;
  _BOOL4 v9;
  _BOOL8 result;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  __int128 *v16;
  void *v17;
  uint64_t v18;
  _WORD v19[8];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v2 = objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (void *)v2;
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      PLMigrationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
      v19[0] = 0;
      LODWORD(v18) = 2;
      v7 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v19, v18);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "logWithMessage:fromCodeLocation:type:", v7, "PLModelMigrator.m", 4318, 0);

      if (v7 != &v20)
        free(v7);
    }
  }
  v9 = +[PLResourceInstaller resetInternalResourcesInStore:resetUTIs:resetCodecs:resetMasters:migrator:](PLResourceInstaller, "resetInternalResourcesInStore:resetUTIs:resetCodecs:resetMasters:migrator:", *(_QWORD *)(a1 + 40), 1, 1, 0, *(_QWORD *)(a1 + 32));
  result = 0;
  if (v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v11 = objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v12 = (void *)v11;
      PLMigrationGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

      if (v14)
      {
        v50 = 0u;
        v51 = 0u;
        v48 = 0u;
        v49 = 0u;
        v46 = 0u;
        v47 = 0u;
        v44 = 0u;
        v45 = 0u;
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        PLMigrationGetLog();
        v15 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
        v19[0] = 0;
        LODWORD(v18) = 2;
        v16 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v19, v18);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "logWithMessage:fromCodeLocation:type:", v16, "PLModelMigrator.m", 4321, 0);

        if (v16 != &v20)
          free(v16);
      }
    }
    return +[PLResourceInstaller createInternalResourcesForExistingAssetsWithNoExistingResourcesInStore:migrator:](PLResourceInstaller, "createInternalResourcesForExistingAssetsWithNoExistingResourcesInStore:migrator:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  }
  return result;
}

BOOL __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_728(uint64_t a1)
{
  return +[PLResourceInstaller removeLegacyCloudResourcesInStore:migrator:](PLResourceInstaller, "removeLegacyCloudResourcesInStore:migrator:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_731(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteAnalysisStatesInStore:forWorkerType:", *(_QWORD *)(a1 + 40), 4294966296);
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_734(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_nukeWallpaperRemnantsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_737(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deletePersistentHistoryInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_740(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeInvalidAdjustmentResourceDataInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_743(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  _OWORD *v8;
  void *v9;
  uint64_t v10;
  _WORD v11[8];
  _OWORD v12[32];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  result = objc_msgSend(*(id *)(a1 + 32), "_createImportSessionAlbums:", *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
    v3 = objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      v4 = (void *)v3;
      PLMigrationGetLog();
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

      if (v6)
      {
        memset(v12, 0, sizeof(v12));
        PLMigrationGetLog();
        v7 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
        v11[0] = 0;
        LODWORD(v10) = 2;
        v8 = (_OWORD *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v11, v10);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "logWithMessage:fromCodeLocation:type:", v8, "PLModelMigrator.m", 4351, 0);

        if (v8 != v12)
          free(v8);
      }
    }
    return objc_msgSend(*(id *)(a1 + 32), "_persistImportSessionAlbumType:", *(_QWORD *)(a1 + 40));
  }
  return result;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_747(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeInvalidImportSessionAlbums:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_750(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixRawWithZeroDimensions:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_753(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_filterSceneClassificationsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_756(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_revalidateImportSessionDates:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_759(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setImportedByInPLCloudMaster:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_762(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v12;
  _WORD v13[8];
  _OWORD v14[32];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (!v2)
    return objc_msgSend(v3, "_deleteVideoThumbsMadeFromPreferredFrameInStore:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "migrationLogger");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    PLMigrationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      memset(v14, 0, sizeof(v14));
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      v13[0] = 0;
      LODWORD(v12) = 2;
      v9 = (_OWORD *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v13, v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logWithMessage:fromCodeLocation:type:", v9, "PLModelMigrator.m", 4380, 0);

      if (v9 != v14)
        free(v9);
    }
  }
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_766(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetAnalysisStateForVideosInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_769(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixImportedAssetsFromCMMSavedInDCIMWithWrongSavedAssetType:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_772(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addUUIDsToExistingKeywordsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_775(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateSuggestionStartAndEndDatesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_778(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deleteOrphanedExtendedAttributes:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_781(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deleteExtraneousAdjustedFullSizeResourcesForSloMoAssetsWithStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_784(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateMissingFileSystemVolumeUuidInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_787(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateCPLMarkerFiles");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_790(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateAlbumDatesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_793(uint64_t a1)
{
  void *v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCPLSettings settingsWithPathManager:](PLCPLSettings, "settingsWithPathManager:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "setRunOnceFlag:error:", 16, 0);
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_796(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixKindSubtypeForLoopingVideoLivePhotosInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_799(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixWhiteBalanceValuesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_802(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeUnneededAnalysisStateTableEntries:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_14_805(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixUTIForRDMigrationInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_15_808(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_regenerateSharedStreamsDataStoreKeysDataInStore:deferHintChanges:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_16_811(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixLocationValuesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_17_814(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_invalidateReverseGeocodingDataInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_18_817(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixHasLocationSmartAlbum:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_19_820(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixSidecarUTIsAndDataStoreSubtype:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_20_823(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "migratePurgeableResources");
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_21_826(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_renumberLocalAvailabilityAndLocalAvailabilityTargetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_22_829(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateVersionSpecific1kResourcesInStore:deferHintChanges:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_23_832(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_requestAvailabilityChangeForAssetsMissing1kResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_24_835(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_reconstructImageExtendedAttributes:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_25_838(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_move1kResourcesOutOfMastersDir:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_26_841(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixupResourceTypeUnknownInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_27(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_regenerateReferenceKeyDataInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_relocateCPLMarkerFiles");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_29(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cleanupLegacyFiles");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_30(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "relocateOriginalUBFPaths:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_31(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_verifyAndFixBrokenLocalAvailabilityForResourceWithFileIDsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_32(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeAllSharedAssetDCIMFilesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_33(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixSharedStreamVideoResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_34(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixUploadedButNotRemotelyAvailalbeCPLResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_35(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixUnpushedVideoComplementResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_36(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixAdjustedStableHashesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_37(uint64_t a1)
{
  void *v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCPLSettings settingsWithPathManager:](PLCPLSettings, "settingsWithPathManager:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "setRunOnceFlag:error:", 32, 0);
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_scavengeCameraProcessingAdjustmentMetadataForAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_39(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fixInvalidPostMigrationFileSystemImportedAssets:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_40(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_runPairingForAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_41(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairOrphanedProjectAlbumsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_42(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairTableThumbFragmentation");
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_43(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repushAllUserSmartAlbum:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_44(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairLegacyMigrationDuplicateVersionCloudResources:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_45(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateCandidateBitsToDeferredProcessingCandidateOptions:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_46(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_moveGpsHorizontalAccuracyToNewAttribute:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_47(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reconsiderAllowedForAnalysisOnAssetsMarkedNotAllowedInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_migrateMetadataAndMigrationHistoryWithStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_49(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairReframedAssetsWithoutSOCAvailableBitWithStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_50(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_clearAvalancheUUIDOnCloudSharedAssetsWithStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_51(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_regenerateMonthHighlightTitlesWithStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_52(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_copyAssetDescriptionToAccessibilityDescription:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_53(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeAllLocalVideoKeyFrameResourcesRevert14037InStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_54(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeResourceModelManualIdentityConstraintInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_55(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairCTMOriginalVideosWithSOCAvailableBitInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_56(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_persistResourceTypeAttributeOnAlternateImageResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_57(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addRAWPackedBadgeAttributeForAllRAWAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addLocalVideoKeyFrameResourceInStore:deferHintChanges:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_59(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairCTMOriginalVideosWithoutAdjustmentsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_60(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_refactorLargeVideoRecipeResourcesInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_61(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeDuplicatedCloudSharedComments:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_62(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  __int128 *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  __int128 *v19;
  void *v20;
  uint64_t v22;
  _WORD v23[8];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "options");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("DefaultAlbumUUID"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 32), "options");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("DefaultAlbumTitle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
LABEL_12:
    v15 = 1;
    goto LABEL_13;
  }
  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "BOOLForKey:", CFSTR("com.apple.Photos.FixWallpaper"));

  objc_msgSend(*(id *)(a1 + 32), "migrationLogger");
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = (void *)v8;
  if (!v7)
  {
    if (v8)
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (v17)
      {
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        v50 = 0u;
        v51 = 0u;
        v48 = 0u;
        v49 = 0u;
        v46 = 0u;
        v47 = 0u;
        v44 = 0u;
        v45 = 0u;
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        PLMigrationGetLog();
        v18 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
        v23[0] = 0;
        LODWORD(v22) = 2;
        v19 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v23, v22);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "logWithMessage:fromCodeLocation:type:", v19, "PLModelMigrator.m", 4650, 0);

        if (v19 != &v24)
          free(v19);
      }
    }
    goto LABEL_12;
  }
  if (v8)
  {
    PLMigrationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      PLMigrationGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
      v23[0] = 0;
      LODWORD(v22) = 2;
      v13 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(a1 + 32), "migrationLogger", v23, v22);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "logWithMessage:fromCodeLocation:type:", v13, "PLModelMigrator.m", 4647, 0);

      if (v13 != &v24)
        free(v13);
    }
  }
  v15 = objc_msgSend(*(id *)(a1 + 32), "_repairWallpaperAlbumsInStore:containerUUID:title:", *(_QWORD *)(a1 + 40), v3, v5);
LABEL_13:

  return v15;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_918(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_invalidateZeroHDRGainInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_2_921(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetDeferredRepairAdjustmentFailureAndCloudRecoveryStateInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_3_924(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetAssetLocationShiftingAndRevGeoInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_4_927(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateMogulSubtypeAndSetHighFrameRateStateOnAssetsInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_5_930(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_convertAssetDepthStatesToDepthTypeInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_6_933(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_convertImplicitDownloadAndKeepOriginalsEnabledToExplicit");
  return 1;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_7_936(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_unQuarantineAssetsIfPossibleInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_8_939(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetLimitedLibraryFilterDataInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_9_942(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deleteEmptyFolderWithProjectRootCloudGUIDOfWrongKindInStore:", *(_QWORD *)(a1 + 40));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_10_945(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_deleteLocalVideoKeyFrameResourcesForNonVideosInStore:deferHintChanges:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_11_948(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_discardUnusedCustomRenderedValuesInStore:", *(_QWORD *)(a1 + 40));
}

BOOL __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_12_951(uint64_t a1)
{
  void *v1;
  _BOOL8 v2;

  objc_msgSend(*(id *)(a1 + 32), "managedObjectContextForMigrationInStore:name:concurrencyType:", *(_QWORD *)(a1 + 40), "-[PLModelMigrator postProcessMigratedStore:migrationUUID:fromVersion:progress:progressUnitCount:]_block_invoke_12", *MEMORY[0x1E0C97C38]);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = +[PLResourceInstaller resetImageRequestHintsInContext:](PLResourceInstaller, "resetImageRequestHintsInContext:", v1);

  return v2;
}

uint64_t __97__PLModelMigrator_postProcessMigratedStore_migrationUUID_fromVersion_progress_progressUnitCount___block_invoke_13_954(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_repairDuplicateSingletonFetchingAlbumsInStore:", *(_QWORD *)(a1 + 40));
}

void __132__PLModelMigrator_attemptLightweightMigrationFromVersion_onStore_withMetadata_orStoreURL_options_coordinator_migrationPolicy_error___block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  PLMigrationContext *v15;
  PLModelMigration *v16;
  void *v17;
  PLModelMigration *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  double v27;
  double v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  _BOOL4 v32;
  NSObject *v33;
  int v34;
  __int128 *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  NSObject *v39;
  _BOOL4 v40;
  NSObject *v41;
  __int128 *v42;
  void *v43;
  void *v44;
  char v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  _BOOL4 v49;
  NSObject *v50;
  __int128 *v51;
  void *v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  NSObject *v56;
  _BOOL4 v57;
  NSObject *v58;
  void *v59;
  __int128 *v60;
  void *v61;
  __int128 *v62;
  uint64_t v63;
  void *v64;
  NSObject *v65;
  _BOOL4 v66;
  NSObject *v67;
  __int128 *v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  PLMigrationContext *v81;
  void *v82;
  id v83;
  _QWORD v84[3];
  _QWORD v85[3];
  int v86;
  _QWORD v87[3];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;

  v120 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
  v3 = v2;
  v81 = [PLMigrationContext alloc];
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32);
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = objc_msgSend(*(id *)(a1 + 56), "unsignedShortValue");
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_DWORD *)(a1 + 104);
  objc_msgSend(*(id *)(a1 + 32), "analyticsEventManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "graphCache");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v79) = v10;
  v13 = v9;
  v14 = a1;
  v15 = -[PLMigrationContext initWithPathManager:coordinator:onStore:orStoreURL:version:options:migrationPolicy:analyticsEventManager:graphCache:](v81, "initWithPathManager:coordinator:onStore:orStoreURL:version:options:migrationPolicy:analyticsEventManager:graphCache:", v5, v4, v6, v7, v8, v13, v79, v11, v12);

  v16 = [PLModelMigration alloc];
  objc_msgSend(*(id *)(v14 + 32), "migrationLogger");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = -[PLModelMigration initWithMigrationContext:logger:](v16, "initWithMigrationContext:logger:", v15, v17);

  objc_msgSend(*(id *)(v14 + 32), "progress");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLModelMigration progress](v18, "progress");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "addChild:withPendingUnitCount:", v20, 1);

  -[PLModelMigration setLegacyMigrationDelegate:](v18, "setLegacyMigrationDelegate:", *(_QWORD *)(v14 + 32));
  v83 = 0;
  v21 = -[PLModelMigration migrateWithError:](v18, "migrateWithError:", &v83);
  v22 = v83;
  if (v21 != 1)
  {
    objc_msgSend(*(id *)(v14 + 32), "migrationLogger");
    v46 = objc_claimAutoreleasedReturnValue();
    if (v46)
    {
      v47 = (void *)v46;
      PLMigrationGetLog();
      v48 = objc_claimAutoreleasedReturnValue();
      v49 = os_log_type_enabled(v48, OS_LOG_TYPE_ERROR);

      if (v49)
      {
        v118 = 0u;
        v119 = 0u;
        v116 = 0u;
        v117 = 0u;
        v114 = 0u;
        v115 = 0u;
        v112 = 0u;
        v113 = 0u;
        v110 = 0u;
        v111 = 0u;
        v108 = 0u;
        v109 = 0u;
        v106 = 0u;
        v107 = 0u;
        v104 = 0u;
        v105 = 0u;
        v102 = 0u;
        v103 = 0u;
        v100 = 0u;
        v101 = 0u;
        v98 = 0u;
        v99 = 0u;
        v96 = 0u;
        v97 = 0u;
        v94 = 0u;
        v95 = 0u;
        v92 = 0u;
        v93 = 0u;
        v91 = 0u;
        v89 = 0u;
        v90 = 0u;
        v88 = 0u;
        PLMigrationGetLog();
        v50 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v50, OS_LOG_TYPE_ERROR);
        v86 = 138412290;
        v87[0] = v22;
        LODWORD(v80) = 12;
        v51 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(v14 + 32), "migrationLogger", &v86, v80);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v52, "logWithMessage:fromCodeLocation:type:", v51, "PLModelMigrator.m", 3193, 16);

        if (v51 != &v88)
          free(v51);
      }
    }
    v53 = *(_QWORD **)(v14 + 96);
    if (v53)
      *v53 = objc_retainAutorelease(v22);
    objc_msgSend(*(id *)(v14 + 32), "migrationLogger");
    v54 = objc_claimAutoreleasedReturnValue();
    if (!v54)
      goto LABEL_32;
    v55 = (void *)v54;
    PLMigrationGetLog();
    v56 = objc_claimAutoreleasedReturnValue();
    v57 = os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT);

    v45 = 0;
    if (!v57)
      goto LABEL_33;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    v114 = 0u;
    v115 = 0u;
    v112 = 0u;
    v113 = 0u;
    v110 = 0u;
    v111 = 0u;
    v108 = 0u;
    v109 = 0u;
    v106 = 0u;
    v107 = 0u;
    v104 = 0u;
    v105 = 0u;
    v102 = 0u;
    v103 = 0u;
    v100 = 0u;
    v101 = 0u;
    v98 = 0u;
    v99 = 0u;
    v96 = 0u;
    v97 = 0u;
    v94 = 0u;
    v95 = 0u;
    v92 = 0u;
    v93 = 0u;
    v91 = 0u;
    v89 = 0u;
    v90 = 0u;
    v88 = 0u;
    PLMigrationGetLog();
    v58 = objc_claimAutoreleasedReturnValue();
    os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT);
    PLFilteredStoreMetadataWithPolicy(*(void **)(v14 + 72), 1);
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    v86 = 138543362;
    v87[0] = v59;
    LODWORD(v80) = 12;
    v60 = (__int128 *)_os_log_send_and_compose_impl();

    objc_msgSend(*(id *)(v14 + 32), "migrationLogger", &v86, v80);
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v61, "logWithMessage:fromCodeLocation:type:", v60, "PLModelMigrator.m", 3200, 0);

    if (v60 == &v88)
    {
LABEL_32:
      v45 = 0;
      goto LABEL_33;
    }
    v62 = v60;
LABEL_31:
    free(v62);
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 80) + 8) + 40);
  if (!v23)
  {
    -[PLMigrationContext store](v15, "store");
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = *(_QWORD *)(*(_QWORD *)(v14 + 80) + 8);
    v26 = *(void **)(v25 + 40);
    *(_QWORD *)(v25 + 40) = v24;

    v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 80) + 8) + 40);
  }
  if (!objc_msgSend(*(id *)(v14 + 32), "_recordCurrentVersionMetadataInPersistentStore:migrationType:forceRebuildReason:sourceModelVersion:updateLegacyMigrationState:journalRebuildRequred:", v23, 2, 0, *(_QWORD *)(v14 + 56), 0, 0))
  {
    objc_msgSend(*(id *)(v14 + 32), "migrationLogger");
    v63 = objc_claimAutoreleasedReturnValue();
    if (!v63)
      goto LABEL_32;
    v64 = (void *)v63;
    PLMigrationGetLog();
    v65 = objc_claimAutoreleasedReturnValue();
    v66 = os_log_type_enabled(v65, OS_LOG_TYPE_ERROR);

    if (!v66)
      goto LABEL_32;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    v114 = 0u;
    v115 = 0u;
    v112 = 0u;
    v113 = 0u;
    v110 = 0u;
    v111 = 0u;
    v108 = 0u;
    v109 = 0u;
    v106 = 0u;
    v107 = 0u;
    v104 = 0u;
    v105 = 0u;
    v102 = 0u;
    v103 = 0u;
    v100 = 0u;
    v101 = 0u;
    v98 = 0u;
    v99 = 0u;
    v96 = 0u;
    v97 = 0u;
    v94 = 0u;
    v95 = 0u;
    v92 = 0u;
    v93 = 0u;
    v91 = 0u;
    v89 = 0u;
    v90 = 0u;
    v88 = 0u;
    PLMigrationGetLog();
    v67 = objc_claimAutoreleasedReturnValue();
    os_log_type_enabled(v67, OS_LOG_TYPE_ERROR);
    LOWORD(v86) = 0;
    LODWORD(v80) = 2;
    v68 = (__int128 *)_os_log_send_and_compose_impl();

    objc_msgSend(*(id *)(v14 + 32), "migrationLogger", &v86, v80);
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v69, "logWithMessage:fromCodeLocation:type:", v68, "PLModelMigrator.m", 3217, 16);

    if (v68 == &v88)
      goto LABEL_32;
    v62 = v68;
    goto LABEL_31;
  }
  objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
  v28 = v27;
  objc_msgSend(*(id *)(v14 + 32), "migrationLogger");
  v29 = objc_claimAutoreleasedReturnValue();
  if (v29)
  {
    v30 = (void *)v29;
    PLMigrationGetLog();
    v31 = objc_claimAutoreleasedReturnValue();
    v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

    if (v32)
    {
      v118 = 0u;
      v119 = 0u;
      v116 = 0u;
      v117 = 0u;
      v114 = 0u;
      v115 = 0u;
      v112 = 0u;
      v113 = 0u;
      v110 = 0u;
      v111 = 0u;
      v108 = 0u;
      v109 = 0u;
      v106 = 0u;
      v107 = 0u;
      v104 = 0u;
      v105 = 0u;
      v102 = 0u;
      v103 = 0u;
      v100 = 0u;
      v101 = 0u;
      v98 = 0u;
      v99 = 0u;
      v96 = 0u;
      v97 = 0u;
      v94 = 0u;
      v95 = 0u;
      v92 = 0u;
      v93 = 0u;
      v91 = 0u;
      v89 = 0u;
      v90 = 0u;
      v88 = 0u;
      PLMigrationGetLog();
      v33 = objc_claimAutoreleasedReturnValue();
      os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT);
      v34 = +[PLModelMigrator currentModelVersion](PLModelMigrator, "currentModelVersion");
      v86 = 67109376;
      LODWORD(v87[0]) = v34;
      WORD2(v87[0]) = 2048;
      *(double *)((char *)v87 + 6) = v28 - v3;
      LODWORD(v80) = 18;
      v35 = (__int128 *)_os_log_send_and_compose_impl();

      objc_msgSend(*(id *)(v14 + 32), "migrationLogger", &v86, v80);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "logWithMessage:fromCodeLocation:type:", v35, "PLModelMigrator.m", 3208, 0);

      if (v35 != &v88)
        free(v35);
    }
  }
  if (-[PLModelMigration allowRebuild](v18, "allowRebuild")
    || -[PLModelMigration didCreateSqliteErrorIndicator](v18, "didCreateSqliteErrorIndicator"))
  {
    objc_msgSend(*(id *)(v14 + 32), "migrationLogger");
    v37 = objc_claimAutoreleasedReturnValue();
    if (v37)
    {
      v38 = (void *)v37;
      PLMigrationGetLog();
      v39 = objc_claimAutoreleasedReturnValue();
      v40 = os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT);

      if (v40)
      {
        v118 = 0u;
        v119 = 0u;
        v116 = 0u;
        v117 = 0u;
        v114 = 0u;
        v115 = 0u;
        v112 = 0u;
        v113 = 0u;
        v110 = 0u;
        v111 = 0u;
        v108 = 0u;
        v109 = 0u;
        v106 = 0u;
        v107 = 0u;
        v104 = 0u;
        v105 = 0u;
        v102 = 0u;
        v103 = 0u;
        v100 = 0u;
        v101 = 0u;
        v98 = 0u;
        v99 = 0u;
        v96 = 0u;
        v97 = 0u;
        v94 = 0u;
        v95 = 0u;
        v92 = 0u;
        v93 = 0u;
        v91 = 0u;
        v89 = 0u;
        v90 = 0u;
        v88 = 0u;
        PLMigrationGetLog();
        v41 = objc_claimAutoreleasedReturnValue();
        os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);
        LOWORD(v86) = 0;
        LODWORD(v80) = 2;
        v42 = (__int128 *)_os_log_send_and_compose_impl();

        objc_msgSend(*(id *)(v14 + 32), "migrationLogger", &v86, v80);
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "logWithMessage:fromCodeLocation:type:", v42, "PLModelMigrator.m", 3213, 0);

        if (v42 != &v88)
          free(v42);
      }
    }
    objc_msgSend(*(id *)(v14 + 32), "pathManager");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "removeSqliteErrorIndicatorFile");

  }
  v45 = 1;
LABEL_33:
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 88) + 8) + 24) = v45;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 88) + 8) + 24))
  {
    v70 = *(_QWORD **)(v14 + 96);
    if (v70)
    {
      if (!*v70)
      {
        v82 = (void *)MEMORY[0x1E0CB35C8];
        v71 = v14;
        v72 = *MEMORY[0x1E0D74498];
        v84[0] = *MEMORY[0x1E0CB2AA0];
        objc_msgSend(*(id *)(v71 + 48), "path");
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        v85[0] = v73;
        v84[1] = *MEMORY[0x1E0CB3308];
        objc_msgSend(*(id *)(v71 + 48), "URLByDeletingLastPathComponent");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v74, "URLByDeletingLastPathComponent");
        v75 = (void *)objc_claimAutoreleasedReturnValue();
        v85[1] = v75;
        v84[2] = *MEMORY[0x1E0CB2D50];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Lightweight migration failed from model version %d to version %d."), objc_msgSend(*(id *)(v71 + 56), "intValue"), +[PLModelMigrator currentModelVersion](PLModelMigrator, "currentModelVersion"));
        v76 = (void *)objc_claimAutoreleasedReturnValue();
        v85[2] = v76;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v85, v84, 3);
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        v78 = v72;
        v14 = v71;
        objc_msgSend(v82, "errorWithDomain:code:userInfo:", v78, 46008, v77);
        **(_QWORD **)(v71 + 96) = (id)objc_claimAutoreleasedReturnValue();

      }
    }
  }
  objc_msgSend(*(id *)(v14 + 32), "migrationLoggerClose");

}

void __75__PLModelMigrator__importFileSystemImportAssets_intoLibrary_type_progress___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  CFMutableDictionaryRef Mutable;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  NSObject *v13;
  uint64_t v14;
  int v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _BOOL4 v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  int v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  _BOOL4 v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t i;
  void *v54;
  void *v55;
  void *v56;
  const __CFDictionary *v57;
  const __CFDictionary *v58;
  BOOL v59;
  __int16 v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  BOOL v65;
  id v66;
  NSObject *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  NSObject *v74;
  _BOOL4 v75;
  void *v76;
  void *v77;
  BOOL v78;
  void *v79;
  NSObject *v80;
  int v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t j;
  void *v86;
  int v87;
  char v88;
  id v89;
  NSObject *v90;
  id v91;
  uint64_t v92;
  void *v93;
  CFMutableDictionaryRef theDict;
  id obj;
  void (**v96)(void);
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  void *v103;
  void *v104;
  void *v105;
  void *context;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  id v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  id v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _QWORD v127[4];
  CFMutableDictionaryRef v128;
  id v129;
  uint64_t *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE v140[128];
  void *v141;
  CGRect buf;
  _BYTE v143[128];
  _BYTE v144[128];
  uint64_t v145;

  v145 = *MEMORY[0x1E0C80C00];
  v102 = a2;
  v109 = a1;
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(v109 + 40), "_prepareForImportDeleteCorruptAssetsWithImporter:context:", v102, v3);
  v136 = 0;
  v137 = &v136;
  v138 = 0x2020000000;
  v139 = 0;
  v132 = 0;
  v133 = &v132;
  v134 = 0x2020000000;
  v135 = 0;
  v135 = arc4random_uniform(0xAu) + 20;
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E0C9B390], MEMORY[0x1E0C9B3A0]);
  v127[0] = MEMORY[0x1E0C809B0];
  v127[1] = 3221225472;
  v127[2] = __75__PLModelMigrator__importFileSystemImportAssets_intoLibrary_type_progress___block_invoke_2;
  v127[3] = &unk_1E3676348;
  theDict = Mutable;
  v128 = theDict;
  v91 = v3;
  v129 = v91;
  v130 = &v136;
  v131 = &v132;
  v96 = (void (**)(void))MEMORY[0x19AEC174C](v127);
  objc_msgSend(*(id *)(v109 + 32), "filesystemImportProgressAlbum");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB38A8], "progressWithTotalUnitCount:parent:pendingUnitCount:", objc_msgSend(*(id *)(v109 + 48), "count"), *(_QWORD *)(v109 + 56), objc_msgSend(*(id *)(v109 + 56), "totalUnitCount"));
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = objc_msgSend(*(id *)(v109 + 48), "count");
    LODWORD(buf.origin.x) = 134217984;
    *(_QWORD *)((char *)&buf.origin.x + 4) = v6;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "Starting file system import of %ld assets", (uint8_t *)&buf, 0xCu);
  }

  v125 = 0u;
  v126 = 0u;
  v123 = 0u;
  v124 = 0u;
  obj = *(id *)(v109 + 48);
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v123, v144, 16);
  if (v7)
  {
    v99 = v7;
    v97 = 0;
    v100 = *(_QWORD *)v124;
    v92 = *MEMORY[0x1E0C998E8];
    while (2)
    {
      v107 = 0;
      do
      {
        if (*(_QWORD *)v124 != v100)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v123 + 1) + 8 * v107);
        if (objc_msgSend(*(id *)(v109 + 56), "isCancelled"))
        {
          PLBackendGetLog();
          v80 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v80, OS_LOG_TYPE_ERROR))
          {
            LOWORD(buf.origin.x) = 0;
            _os_log_impl(&dword_199541000, v80, OS_LOG_TYPE_ERROR, "Will abort looping over file system import assets due to progress cancel", (uint8_t *)&buf, 2u);
          }

          goto LABEL_87;
        }
        context = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v8, "lockedResourceTransferRecovery");
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        if (v9)
        {
          objc_msgSend(v8, "lockedResourceTransferRecovery");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(v109 + 40), "pathManager");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v10, "recoverFromInProgressLockedTransferForImportAsset:pathManager:", v8, v11);

          if ((v12 & 1) == 0)
          {
            PLMigrationGetLog();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            {
              LOWORD(buf.origin.x) = 0;
              _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "[lockedResourceTransfer] Failed locked resource transfer recovery", (uint8_t *)&buf, 2u);
            }

          }
        }
        objc_msgSend(v8, "urls");
        v108 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "destinationAlbum");
        v14 = objc_claimAutoreleasedReturnValue();
        if (v14)
          objc_msgSend(v98, "addObject:", v14);
        v110 = (void *)v14;
        v15 = *(unsigned __int8 *)(v109 + 72);
        objc_msgSend(v8, "assetPayload");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v102, "addAssetWithURLs:assetPayload:forceInsert:forceUpdate:fixAddedDate:", v108, v16, 0, v15 == 2, 0);
        v111 = (void *)objc_claimAutoreleasedReturnValue();

        if (v111)
        {
          objc_msgSend(*(id *)(v109 + 64), "addObject:");
          if (+[PLAvalanche shouldOnlyShowAvalanchePicks](PLAvalanche, "shouldOnlyShowAvalanchePicks"))
          {
            objc_msgSend(v111, "avalancheUUID");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            if (v17)
              v18 = objc_msgSend(v111, "avalanchePickTypeIsVisible") ^ 1;
            else
              v18 = 0;

          }
          else
          {
            v18 = 0;
          }
          v19 = v110;
          if (archivedAssetUUIDForPathDictionary_block_invoke_s_onceToken != -1)
            dispatch_once(&archivedAssetUUIDForPathDictionary_block_invoke_s_onceToken, &__block_literal_global_298);
          objc_msgSend(v111, "pathManager");
          v105 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v105, "isDCIM"))
          {
            objc_msgSend(v111, "directory");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            v21 = objc_msgSend(v20, "hasPrefix:", archivedAssetUUIDForPathDictionary_block_invoke_s_cplAssetDirectoryPrefix);

            v19 = v110;
          }
          else
          {
            v21 = 0;
          }
          objc_msgSend(*(id *)(v109 + 40), "_updateImportedSavedAssetTypeForFileSystemImportedAsset:type:importAssetKind:isCPLAssetsDirectory:destinationAlbum:", v111, *(unsigned __int8 *)(v109 + 72), objc_msgSend(v8, "assetKind"), v21, v19);
          if ((_DWORD)v21)
          {
            objc_msgSend(v111, "cloudAssetGUID");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v23 = v22 == 0;

            if (v23)
            {
              v24 = objc_alloc(MEMORY[0x1E0CB3A28]);
              objc_msgSend(v111, "filename");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v25, "stringByDeletingPathExtension");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              v27 = (void *)objc_msgSend(v24, "initWithUUIDString:", v26);

              if (v27)
              {
                objc_msgSend(v27, "UUIDString");
                v28 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v111, "setCloudAssetGUID:", v28);

              }
            }
          }
          objc_msgSend(v108, "anyObject");
          v103 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = v110;
          if (objc_msgSend(v111, "isPhotoStreamPhoto"))
          {
            v122 = 0;
            v30 = objc_msgSend(v103, "getResourceValue:forKey:error:", &v122, v92, 0);
            v31 = v122;
            v32 = v31;
            if (v30)
            {
              if (v31)
                objc_msgSend(v111, "setDateCreated:", v31);
              objc_msgSend(v111, "dateCreated");
              v33 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v33, "timeIntervalSinceReferenceDate");
              objc_msgSend(v111, "setSortToken:");

            }
            objc_msgSend(v111, "setVisibilityState:", 1);

            v29 = v110;
          }
          if (objc_msgSend(v8, "isCameraKit"))
          {
            if (!v97)
            {
              objc_msgSend(*(id *)(v109 + 32), "allImportedPhotosAlbum");
              v97 = (void *)objc_claimAutoreleasedReturnValue();
            }
            if ((v18 & 1) == 0)
            {
              objc_msgSend(v97, "mutableAssets");
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v34, "addObject:", v111);

              v29 = v110;
            }
            if (v29)
            {
              if (objc_msgSend(v29, "kindValue") == 12)
              {
                objc_msgSend(v29, "mutableAssets");
                v35 = (void *)objc_claimAutoreleasedReturnValue();
                v36 = objc_msgSend(v35, "count") == 0;

                if (v36)
                {
                  v37 = objc_alloc(MEMORY[0x1E0D75140]);
                  objc_msgSend(*(id *)(v109 + 32), "libraryBundle");
                  v38 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v38, "timeZoneLookup");
                  v39 = (void *)objc_claimAutoreleasedReturnValue();
                  v40 = (void *)objc_msgSend(v37, "initWithMediaURL:timeZoneLookup:", v103, v39);

                  v41 = *(void **)(v109 + 40);
                  objc_msgSend(v40, "creationDate");
                  v42 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v41, "_eventNameFromDate:", v42);
                  v43 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v110, "setTitle:", v43);

                }
              }
            }
          }
          if (objc_msgSend(v105, "isDCIM") && objc_msgSend(v111, "isFinderSyncedAsset"))
          {
            objc_msgSend(v111, "photoLibrary");
            v44 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v44, "pathManager");
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v45, "iTunesSyncedFaceDataDirectory");
            v46 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v111, "uuid");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v46, "stringByAppendingPathComponent:", v47);
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v48, "stringByAppendingPathExtension:", CFSTR("plist"));
            v93 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithContentsOfFile:", v93);
            v49 = (void *)objc_claimAutoreleasedReturnValue();
            v121 = 0u;
            v119 = 0u;
            v120 = 0u;
            v118 = 0u;
            v50 = v49;
            v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v118, v143, 16);
            if (v51)
            {
              v52 = *(_QWORD *)v119;
              do
              {
                for (i = 0; i != v51; ++i)
                {
                  if (*(_QWORD *)v119 != v52)
                    objc_enumerationMutation(v50);
                  v54 = *(void **)(*((_QWORD *)&v118 + 1) + 8 * i);
                  objc_msgSend(v54, "objectForKey:", CFSTR("faceAlbumUUID"));
                  v55 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v54, "objectForKey:", CFSTR("faceIndex"));
                  v56 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v54, "objectForKey:", CFSTR("faceRectangle"));
                  v57 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
                  v58 = v57;
                  if (v56)
                    v59 = v57 == 0;
                  else
                    v59 = 1;
                  if (!v59)
                  {
                    memset(&buf, 0, sizeof(buf));
                    if (CGRectMakeWithDictionaryRepresentation(v57, &buf))
                    {
                      v60 = objc_msgSend(v56, "intValue");
                      v61 = (id)objc_msgSend(v111, "addLegacyFaceWithRelativeRect:identifier:albumUUID:", v60, v55, buf.origin.x, buf.origin.y, buf.size.width, buf.size.height);
                    }
                  }

                }
                v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v118, v143, 16);
              }
              while (v51);
            }

            v62 = *(void **)(v109 + 40);
            objc_msgSend(v111, "uuid");
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v62, "_syncedPropertiesForAssetUUID:", v63);
            v64 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(*(id *)(v109 + 40), "_applySyncedProperties:toAsset:", v64, v111);
          }
          v117 = 0;
          v65 = +[PLResourceInstaller installInternalResourcesForExistingAsset:assumeNoExistingResources:referencedResourceURLs:error:](PLResourceInstaller, "installInternalResourcesForExistingAsset:assumeNoExistingResources:referencedResourceURLs:error:", v111, 0, 0, &v117);
          v66 = v117;
          if (!v65)
          {
            PLMigrationGetLog();
            v67 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(v111, "uuid");
              v68 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(buf.origin.x) = 138412546;
              *(_QWORD *)((char *)&buf.origin.x + 4) = v68;
              WORD2(buf.origin.y) = 2112;
              *(_QWORD *)((char *)&buf.origin.y + 6) = v66;
              _os_log_impl(&dword_199541000, v67, OS_LOG_TYPE_ERROR, "Failed to build modern resources for asset uuid: %@, reason: %@", (uint8_t *)&buf, 0x16u);

            }
          }
          objc_msgSend(v111, "setDeferredProcessingNeeded:", objc_msgSend(v111, "expectedDeferredProcessingNeededOnAssetCreation"));
          if (objc_msgSend(v111, "deferredProcessingNeeded"))
          {
            objc_msgSend(v111, "photoLibrary");
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v69, "libraryServicesManager");
            v70 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v70, "backgroundJobService");
            v71 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v111, "photoLibrary");
            v72 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v71, "signalBackgroundProcessingNeededOnLibrary:", v72);

          }
          v141 = v111;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v141, 1);
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLManagedAsset deDupCMMAssets:](PLManagedAsset, "deDupCMMAssets:", v73);

          PLMigrationGetLog();
          v74 = objc_claimAutoreleasedReturnValue();
          v75 = os_log_type_enabled(v74, OS_LOG_TYPE_DEBUG);
          v76 = v110;
          if (v75)
          {
            objc_msgSend(v111, "uuid");
            v77 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(buf.origin.x) = 138412546;
            *(_QWORD *)((char *)&buf.origin.x + 4) = v108;
            WORD2(buf.origin.y) = 2112;
            *(_QWORD *)((char *)&buf.origin.y + 6) = v77;
            _os_log_impl(&dword_199541000, v74, OS_LOG_TYPE_DEBUG, "Added '%@'\nto the database. UUID = %@", (uint8_t *)&buf, 0x16u);

            v76 = v110;
          }
          v78 = v76 == 0;

          if (!v78)
          {
            -[__CFDictionary objectForKey:](theDict, "objectForKey:", v110);
            v79 = (void *)objc_claimAutoreleasedReturnValue();
            if (!v79)
            {
              objc_msgSend(MEMORY[0x1E0C99DE8], "array");
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              CFDictionarySetValue(theDict, v110, v79);
            }
            objc_msgSend(v79, "addObject:", v111);

          }
          ++v137[3];

        }
        else
        {
          objc_msgSend(v110, "reducePendingItemsCountBy:", 1);
          objc_msgSend(v101, "reducePendingItemsCountBy:", 1);
          objc_msgSend(v104, "setCompletedUnitCount:", objc_msgSend(v104, "completedUnitCount") + 1);
        }
        if (v133[3] <= (unint64_t)v137[3])
        {
          objc_msgSend(v101, "reducePendingItemsCountBy:");
          objc_msgSend(v104, "setCompletedUnitCount:", v137[3] + objc_msgSend(v104, "completedUnitCount"));
          v96[2]();
        }

        objc_autoreleasePoolPop(context);
        ++v107;
      }
      while (v107 != v99);
      v99 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v123, v144, 16);
      if (v99)
        continue;
      break;
    }
  }
  else
  {
    v97 = 0;
  }
LABEL_87:

  v96[2]();
  v81 = objc_msgSend(v101, "pendingItemsCount");
  if (v81)
    objc_msgSend(v101, "reducePendingItemsCountBy:", v81);
  v115 = 0u;
  v116 = 0u;
  v113 = 0u;
  v114 = 0u;
  v82 = v98;
  v83 = objc_msgSend(v82, "countByEnumeratingWithState:objects:count:", &v113, v140, 16);
  if (v83)
  {
    v84 = *(_QWORD *)v114;
    do
    {
      for (j = 0; j != v83; ++j)
      {
        if (*(_QWORD *)v114 != v84)
          objc_enumerationMutation(v82);
        v86 = *(void **)(*((_QWORD *)&v113 + 1) + 8 * j);
        v87 = objc_msgSend(v86, "pendingItemsCount");
        if (v87)
          objc_msgSend(v86, "reducePendingItemsCountBy:", v87);
      }
      v83 = objc_msgSend(v82, "countByEnumeratingWithState:objects:count:", &v113, v140, 16);
    }
    while (v83);
  }

  if (objc_msgSend(v91, "hasChanges"))
  {
    v112 = 0;
    v88 = objc_msgSend(v91, "save:", &v112);
    v89 = v112;
    if ((v88 & 1) == 0)
    {
      PLMigrationGetLog();
      v90 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf.origin.x) = 138412290;
        *(_QWORD *)((char *)&buf.origin.x + 4) = v89;
        _os_log_impl(&dword_199541000, v90, OS_LOG_TYPE_ERROR, "Unable to save moc during migration. Data loss may occur. (%@)", (uint8_t *)&buf, 0xCu);
      }

    }
  }
  else
  {
    v89 = 0;
  }

  _Block_object_dispose(&v132, 8);
  _Block_object_dispose(&v136, 8);

}

void __75__PLModelMigrator__importFileSystemImportAssets_intoLibrary_type_progress___block_invoke_2(uint64_t a1)
{
  void *v2;
  char v3;
  id v4;
  NSObject *v5;
  id v6;
  uint8_t buf[4];
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "enumerateKeysAndObjectsUsingBlock:", &__block_literal_global_295);
  objc_msgSend(*(id *)(a1 + 32), "removeAllObjects");
  if (objc_msgSend(*(id *)(a1 + 40), "hasChanges"))
  {
    v2 = *(void **)(a1 + 40);
    v6 = 0;
    v3 = objc_msgSend(v2, "save:", &v6);
    v4 = v6;
    if ((v3 & 1) == 0)
    {
      PLMigrationGetLog();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v8 = v4;
        _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "Unable to save moc during migration. Data loss may occur. (%@)", buf, 0xCu);
      }

    }
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = arc4random_uniform(0xAu) + 20;

}

void __75__PLModelMigrator__importFileSystemImportAssets_intoLibrary_type_progress___block_invoke_297()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@/%@"), CFSTR("PhotoData"), CFSTR("CPLAssets"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)archivedAssetUUIDForPathDictionary_block_invoke_s_cplAssetDirectoryPrefix;
  archivedAssetUUIDForPathDictionary_block_invoke_s_cplAssetDirectoryPrefix = v0;

}

void __75__PLModelMigrator__importFileSystemImportAssets_intoLibrary_type_progress___block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  v4 = a3;
  v7 = a2;
  objc_msgSend(v7, "mutableAssets");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addObjectsFromArray:", v4);

  v6 = objc_msgSend(v4, "count");
  objc_msgSend(v7, "reducePendingItemsCountBy:", v6);

}

void __81__PLModelMigrator__importAfterCrash_dictionariesByPhotoStreamID_completionBlock___block_invoke(uint64_t a1)
{
  double *v2;
  uint64_t v3;
  double v4;
  void *v5;
  void *v6;
  id v7;

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
    v7 = (id)objc_claimAutoreleasedReturnValue();
    v3 = *(_QWORD *)(a1 + 32);
    v2 = *(double **)(a1 + 40);
    v4 = v2[1];
    objc_msgSend(v2, "pathManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLRebuildableDirectory collectFileURLs:urlsToSkip:forAddingToAlbum:intoAssetsArray:assetsKind:testCreationDates:startTime:pathManager:](PLRebuildableDirectory, "collectFileURLs:urlsToSkip:forAddingToAlbum:intoAssetsArray:assetsKind:testCreationDates:startTime:pathManager:", v3, 0, 0, v7, 0, 0, v4, v5);

    objc_msgSend(v7, "sortUsingComparator:", &__block_literal_global_283);
    objc_msgSend(*(id *)(a1 + 40), "_importFileSystemImportAssets:intoLibrary:type:progress:", v7, *(_QWORD *)(a1 + 48), 2, 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 56), "addObjectsFromArray:", v6);

  }
}

void __81__PLModelMigrator__importAfterCrash_dictionariesByPhotoStreamID_completionBlock___block_invoke_3(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  os_signpost_id_t v5;
  uint8_t v6[16];

  v2 = *(_QWORD *)(a1 + 56);
  if (v2)
    (*(void (**)(uint64_t, _QWORD))(v2 + 16))(v2, *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "stillAlive");
  v3 = *(id *)(a1 + 48);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 64);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)v6 = 0;
    _os_signpost_emit_with_name_impl(&dword_199541000, v4, OS_SIGNPOST_INTERVAL_END, v5, "ImportAfterCrash", ", v6, 2u);
  }

}

uint64_t __81__PLModelMigrator__importAfterCrash_dictionariesByPhotoStreamID_completionBlock___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

uint64_t __66__PLModelMigrator__orderedAssetsToImportInLibrary_cameraRollOnly___block_invoke_280(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

uint64_t __66__PLModelMigrator__orderedAssetsToImportInLibrary_cameraRollOnly___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  void *v7;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  PLMigrationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v4, "path");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138412546;
    v10 = v7;
    v11 = 2112;
    v12 = v5;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Unable to enumerate '%@': %@", (uint8_t *)&v9, 0x16u);

  }
  return 1;
}

uint64_t __51__PLModelMigrator__orderedAssetsToImportInLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void __80__PLModelMigrator__repairInProgressLockedAssetTransfersInOrderedAssetsToImport___block_invoke(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  if (a2 == 4)
  {
    objc_msgSend(a4, "photoDirectoryWithType:", 4);
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

  }
}

void __77__PLModelMigrator__addUBFBundleScopedOrderedAssetsToImport_onDiskURLsToSkip___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[4];
  __int16 v14;

  v6 = a4;
  if (objc_msgSend(MEMORY[0x1E0D73280], "bundleScopeShouldBePersistedForRebuild:", a2))
  {
    v7 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(v6, "photoDirectoryWithType:", 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "fileURLWithPath:isDirectory:", v8, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:", *MEMORY[0x1E0C99A90], *MEMORY[0x1E0C998E8], *MEMORY[0x1E0C999D0], 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "fileManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __77__PLModelMigrator__addUBFBundleScopedOrderedAssetsToImport_onDiskURLsToSkip___block_invoke_2;
    v13[3] = &__block_descriptor_34_e27_B24__0__NSURL_8__NSError_16l;
    v14 = a2;
    objc_msgSend(v11, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v9, v10, 0, v13);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    +[PLRebuildableDirectory collectFileURLs:urlsToSkip:forAddingToAlbum:intoAssetsArray:assetsKind:testCreationDates:startTime:pathManager:](PLRebuildableDirectory, "collectFileURLs:urlsToSkip:forAddingToAlbum:intoAssetsArray:assetsKind:testCreationDates:startTime:pathManager:", v12, *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 48), 0, 1, *(double *)(*(_QWORD *)(a1 + 32) + 8), v6);
  }

}

uint64_t __77__PLModelMigrator__addUBFBundleScopedOrderedAssetsToImport_onDiskURLsToSkip___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!PLIsErrorFileNotFound() || *(_WORD *)(a1 + 32) != 4)
  {
    PLMigrationGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v5, "path");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138412546;
      v11 = v8;
      v12 = 2112;
      v13 = v6;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "Unable to enumerate asset dir '%@': %@", (uint8_t *)&v10, 0x16u);

    }
  }

  return 1;
}

void __60__PLModelMigrator__repairPotentialModelCorruptionInLibrary___block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t i;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t j;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t k;
  void *v37;
  void *v38;
  char *v39;
  void *v40;
  NSObject *v41;
  uint64_t v42;
  void *v43;
  NSObject *v44;
  NSObject *v45;
  int v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v52;
  void *v53;
  id obj;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  id v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  id v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _QWORD v73[4];
  __CFString *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  __int16 v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char v93;
  _BYTE v94[128];
  uint8_t v95[128];
  uint8_t buf[4];
  const char *v97;
  __int16 v98;
  id v99;
  _BYTE v100[128];
  _QWORD v101[8];

  v101[5] = *MEMORY[0x1E0C80C00];
  v52 = objc_alloc_init(MEMORY[0x1E0C97B30]);
  objc_msgSend(v52, "setName:", CFSTR("objectID"));
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "setExpression:", v1);

  objc_msgSend(v52, "setExpressionResultType:", 2000);
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v53 = (void *)objc_claimAutoreleasedReturnValue();

  v101[0] = CFSTR("directory");
  v101[1] = CFSTR("filename");
  v101[2] = CFSTR("uuid");
  v101[3] = CFSTR("savedAssetType");
  v101[4] = v52;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v101, 5);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "setPropertiesToFetch:", v4);

  objc_msgSend(v53, "setResultType:", 2);
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v90 = 0;
  v91 = &v90;
  v92 = 0x2020000000;
  v93 = 0;
  v86 = 0;
  v87 = &v86;
  v88 = 0x2020000000;
  v89 = 0;
  v82 = 0;
  v83 = &v82;
  v84 = 0x2020000000;
  v85 = 0;
  v73[0] = MEMORY[0x1E0C809B0];
  v73[1] = 3221225472;
  v73[2] = __60__PLModelMigrator__repairPotentialModelCorruptionInLibrary___block_invoke_2;
  v73[3] = &unk_1E3664C88;
  v74 = CFSTR("objectID");
  v48 = v5;
  v75 = v48;
  v79 = &v82;
  v80 = &v86;
  v49 = v6;
  v76 = v49;
  v9 = v7;
  v77 = v9;
  v81 = &v90;
  v50 = v8;
  v78 = v50;
  v10 = (id)objc_msgSend(v56, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v53, 0, v73);
  if (objc_msgSend(v9, "count"))
  {
    objc_msgSend(*(id *)(a1 + 40), "removeUnpairedTimelapsePreviewsInContext:fromDuplicatedUUIDs:", v56, v9);
    if (!objc_msgSend(v9, "count"))
    {
      PLMigrationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v97 = "-[PLModelMigrator _repairPotentialModelCorruptionInLibrary:]_block_invoke";
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "%{public}s deleted all unpaired timelapse video previews, resolved UUID corruption", buf, 0xCu);
      }

      *((_BYTE *)v91 + 24) = 0;
    }
  }
  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  obj = v9;
  v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v69, v100, 16);
  if (v12)
  {
    v55 = *(_QWORD *)v70;
    do
    {
      v57 = v12;
      for (i = 0; i != v57; ++i)
      {
        if (*(_QWORD *)v70 != v55)
          objc_enumerationMutation(obj);
        v14 = *(const char **)(*((_QWORD *)&v69 + 1) + 8 * i);
        v15 = (void *)MEMORY[0x1E0C97B48];
        +[PLManagedAsset entityName](PLManagedAsset, "entityName");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "fetchRequestWithEntityName:", v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("uuid"), v14);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "setPredicate:", v18);

        objc_msgSend(v17, "setFetchBatchSize:", 100);
        v68 = 0;
        objc_msgSend(v56, "executeFetchRequest:error:", v17, &v68);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v58 = v68;
        if ((unint64_t)objc_msgSend(v19, "count") > 1)
        {
          v66 = 0u;
          v67 = 0u;
          v64 = 0u;
          v65 = 0u;
          v20 = v19;
          v21 = -[NSObject countByEnumeratingWithState:objects:count:](v20, "countByEnumeratingWithState:objects:count:", &v64, v95, 16);
          if (v21)
          {
            v22 = *(_QWORD *)v65;
            do
            {
              for (j = 0; j != v21; ++j)
              {
                if (*(_QWORD *)v65 != v22)
                  objc_enumerationMutation(v20);
                v24 = *(void **)(*((_QWORD *)&v64 + 1) + 8 * j);
                objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v24, "setUuid:", v25);
                objc_msgSend(v24, "setCloudAssetGUID:", 0);
                objc_msgSend(v24, "persistMetadataToFilesystem");

              }
              v21 = -[NSObject countByEnumeratingWithState:objects:count:](v20, "countByEnumeratingWithState:objects:count:", &v64, v95, 16);
            }
            while (v21);
          }
        }
        else
        {
          PLMigrationGetLog();
          v20 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            v97 = v14;
            v98 = 2112;
            v99 = v58;
            _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Didn't find multiple assets for duplicated UUID during data migration: %{public}@ error: %@", buf, 0x16u);
          }
        }

      }
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v69, v100, 16);
    }
    while (v12);
  }

  if (objc_msgSend(v50, "count"))
  {
    v26 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "fetchRequestWithEntityName:", v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("SELF in %@"), v50);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setPredicate:", v29);

    v63 = 0;
    objc_msgSend(v56, "executeFetchRequest:error:", v28, &v63);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = (char *)v63;
    if (v30)
    {
      v32 = objc_msgSend(v30, "count");
      if (v32 == objc_msgSend(v50, "count"))
      {
        v61 = 0u;
        v62 = 0u;
        v59 = 0u;
        v60 = 0u;
        v33 = v30;
        v34 = -[NSObject countByEnumeratingWithState:objects:count:](v33, "countByEnumeratingWithState:objects:count:", &v59, v94, 16);
        if (v34)
        {
          v35 = *(_QWORD *)v60;
          do
          {
            for (k = 0; k != v34; ++k)
            {
              if (*(_QWORD *)v60 != v35)
                objc_enumerationMutation(v33);
              v37 = *(void **)(*((_QWORD *)&v59 + 1) + 8 * k);
              objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v37, "setUuid:", v38);
              objc_msgSend(v37, "setCloudAssetGUID:", 0);
              objc_msgSend(v37, "persistMetadataToFilesystem");

            }
            v34 = -[NSObject countByEnumeratingWithState:objects:count:](v33, "countByEnumeratingWithState:objects:count:", &v59, v94, 16);
          }
          while (v34);
        }
      }
      else
      {
        PLMigrationGetLog();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v30, "count"));
          v39 = (char *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v50, "count"));
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v97 = v39;
          v98 = 2112;
          v99 = v40;
          _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "Fetched assets count: %@ objects with missing uuids count: %@", buf, 0x16u);

        }
      }
    }
    else
    {
      PLMigrationGetLog();
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v97 = v31;
        _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "Error occured during data migration: %@", buf, 0xCu);
      }
    }

  }
  else
  {
    v28 = v53;
  }
  if (*((_BYTE *)v91 + 24))
  {
    PLMigrationGetLog();
    v41 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, "Found duplicate UUIDs in the database during data migration; triggering rebuild!",
        buf,
        2u);
    }

    v42 = objc_msgSend(MEMORY[0x1E0D73310], "mapSavedAssetType:unknown:photoBooth:photoStream:camera:cloudShared:cameraConnectionKit:cloudPhotoLibrary:wallpaper_UNUSED:momentShared:placeholder:referenced:alternate:guest:companionSynced:recovered:legacyImport:unrecognized:", *((__int16 *)v83 + 12), 6, 6, 14, 6, 15, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
            6,
            6,
            v48,
            v49);
    objc_msgSend(*(id *)(a1 + 40), "pathManager");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "setSqliteErrorForRebuildReason:allowsExit:", v42, 1);

    objc_msgSend(*(id *)(a1 + 32), "libraryServicesManager");
    v44 = objc_claimAutoreleasedReturnValue();
    -[NSObject shutdownLibraryWithDescription:](v44, "shutdownLibraryWithDescription:", CFSTR("duplicate UUIDs found during data migration"));
  }
  else
  {
    if (!*((_BYTE *)v87 + 24))
      goto LABEL_45;
    PLMigrationGetLog();
    v45 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v45, OS_LOG_TYPE_FAULT))
    {
      v46 = *((__int16 *)v83 + 12);
      *(_DWORD *)buf = 67109120;
      LODWORD(v97) = v46;
      _os_log_impl(&dword_199541000, v45, OS_LOG_TYPE_FAULT, "Found duplicate paths for savedAssetType %hd in the database during data migration", buf, 8u);
    }

    objc_msgSend(MEMORY[0x1E0D73310], "maskForTriggerRebuildForPathCorruptionExclusions");
    if (PLValidatedSavedAssetTypeApplies())
    {
      PLMigrationGetLog();
      v44 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v44, OS_LOG_TYPE_ERROR, "Do not trigger rebuild for duplicated paths", buf, 2u);
      }
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 40), "pathManager");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v47, "setSqliteErrorForRebuildReason:allowsExit:", 7, 1);

      objc_msgSend(*(id *)(a1 + 32), "libraryServicesManager");
      v44 = objc_claimAutoreleasedReturnValue();
      -[NSObject shutdownLibraryWithDescription:](v44, "shutdownLibraryWithDescription:", CFSTR("duplicate paths found during data migration"));
    }
  }

LABEL_45:
  _Block_object_dispose(&v82, 8);
  _Block_object_dispose(&v86, 8);
  _Block_object_dispose(&v90, 8);

}

void __60__PLModelMigrator__repairPotentialModelCorruptionInLibrary___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  int v20;
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  int v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKey:", CFSTR("directory"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", CFSTR("filename"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 32));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", CFSTR("uuid"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "length") && objc_msgSend(v5, "length"))
  {
    objc_msgSend(v4, "stringByAppendingPathComponent:", v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 40), "containsObject:", v8))
    {
      objc_msgSend(v3, "objectForKey:", CFSTR("savedAssetType"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_WORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(v9, "integerValue");

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
      PLMigrationGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(MEMORY[0x1E0D73208], "redactedDescriptionForPath:", v8);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = *(__int16 *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24);
        v20 = 138413314;
        v21 = v8;
        v22 = 2114;
        v23 = v11;
        v24 = 2114;
        v25 = v7;
        v26 = 2114;
        v27 = v6;
        v28 = 1024;
        v29 = v12;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Found duplicate during data migration for path %@ (%{public}@), uuid %{public}@, objectID %{public}@, savedAssetType %hd", (uint8_t *)&v20, 0x30u);

      }
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);
    }

  }
  if (objc_msgSend(*(id *)(a1 + 48), "containsObject:", v7))
  {
    objc_msgSend(v3, "objectForKey:", CFSTR("savedAssetType"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_WORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(v13, "integerValue");

    objc_msgSend(*(id *)(a1 + 56), "addObject:", v7);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 1;
    objc_msgSend(v4, "stringByAppendingPathComponent:", v5);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    PLMigrationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(MEMORY[0x1E0D731F0], "descriptionWithPath:", v14);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = *(__int16 *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24);
      v20 = 138544130;
      v21 = v7;
      v22 = 2112;
      v23 = v16;
      v24 = 2114;
      v25 = v6;
      v26 = 1024;
      LODWORD(v27) = v17;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Found duplicate asset UUID during data migration for uuid: %{public}@, path %@, objectID %{public}@, savedAssetType %hd", (uint8_t *)&v20, 0x26u);

    }
  }
  else
  {
    if (v7)
    {
      v18 = *(void **)(a1 + 48);
      v19 = v7;
    }
    else
    {
      v18 = *(void **)(a1 + 64);
      v19 = v6;
    }
    objc_msgSend(v18, "addObject:", v19);
  }

}

void __80__PLModelMigrator_removeUnpairedTimelapsePreviewsInContext_fromDuplicatedUUIDs___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  const char *v13;
  __int16 v14;
  id v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v6, "objectID");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "mainFileURL");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "path");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 136446978;
      v13 = "-[PLModelMigrator removeUnpairedTimelapsePreviewsInContext:fromDuplicatedUUIDs:]_block_invoke";
      v14 = 2114;
      v15 = v5;
      v16 = 2114;
      v17 = v9;
      v18 = 2112;
      v19 = v11;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "%{public}s deleting unpaired, timelapse preview %{public}@ -> final video %{public}@ with path %@", (uint8_t *)&v12, 0x2Au);

    }
    objc_msgSend(v7, "deleteFromDatabaseOnly");
    objc_msgSend(*(id *)(a1 + 40), "removeObject:", v5);
  }

}

void __62__PLModelMigrator_cleanupModelForDataMigrationForRestoreType___block_invoke(uint64_t a1)
{
  void *v1;
  BOOL v2;
  id v3;
  NSObject *v4;
  id v5;
  uint8_t buf[4];
  const char *v7;
  __int16 v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 0;
  v2 = +[PLInternalResource batchResetFileIDInManagedObjectContext:error:](PLInternalResource, "batchResetFileIDInManagedObjectContext:error:", v1, &v5);
  v3 = v5;

  if (!v2)
  {
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446466;
      v7 = "-[PLModelMigrator cleanupModelForDataMigrationForRestoreType:]_block_invoke";
      v8 = 2112;
      v9 = v3;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_ERROR, "%{public}ss Failed to reset internal resource fileID: %@", buf, 0x16u);
    }

  }
}

void __38__PLModelMigrator_handleGreenChanges___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  char *v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint32_t v19;
  id v20;
  uint8_t buf[4];
  const char *v22;
  __int16 v23;
  id v24;
  __int16 v25;
  char *v26;
  _QWORD v27[2];
  _QWORD v28[3];

  v28[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "globalValues");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "greenValues");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(*(id *)(a1 + 40), "greenValuesSimilarToGreenValues:", v3) & 1) == 0)
  {
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEFAULT, "Green values are different from the backup one, invalidating the reverse geocoding data", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)MEMORY[0x1E0C97AB0];
    +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "batchUpdateRequestWithEntityName:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v27[0] = CFSTR("reverseLocationDataIsValid");
    v27[1] = CFSTR("reverseLocationData");
    v28[0] = MEMORY[0x1E0C9AAA0];
    v28[1] = v6;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, v27, 2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setPropertiesToUpdate:", v10);

    objc_msgSend(v9, "setResultType:", 2);
    v20 = 0;
    objc_msgSend(v5, "executeRequest:error:", v9, &v20);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v20;
    PLMigrationGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v11)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v11, "result");
        v15 = (char *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v22 = v15;
        v16 = "Invalidated reverse geocoding data due to green changes for %@ assets";
        v17 = v14;
        v18 = OS_LOG_TYPE_DEFAULT;
        v19 = 12;
LABEL_9:
        _os_log_impl(&dword_199541000, v17, v18, v16, buf, v19);

      }
    }
    else if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v12, "userInfo");
      v15 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v22 = "-[PLModelMigrator handleGreenChanges:]_block_invoke";
      v23 = 2112;
      v24 = v12;
      v25 = 2112;
      v26 = v15;
      v16 = "%s: failed to update: %@ %@";
      v17 = v14;
      v18 = OS_LOG_TYPE_ERROR;
      v19 = 32;
      goto LABEL_9;
    }

  }
}

uint64_t __55__PLModelMigrator__loadFacesFileSystemDataIntoDatabase__block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_DEFAULT, "Starting import of file system faces", v4, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "recreatePersonsFromMetadata");
}

uint64_t __55__PLModelMigrator__loadFacesFileSystemDataIntoDatabase__block_invoke_208(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  PLMigrationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_DEFAULT, "Finished import of file system faces", v4, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "setLoadingFacesFromFileSystem:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "stillAlive");
}

void __117__PLModelMigrator__loadFileSystemDataIntoDatabaseIfNeededWithReason_progress_requestBackgroundMigrationRegistration___block_invoke(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  PLModelMigratorRebuildProgressFraction *v9;
  void *v10;
  void *v11;
  char v12;
  double v13;
  double v14;
  BOOL v15;
  BOOL *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __int16 v30;
  int v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(*(id *)(a1 + 32), "_isFileSystemImportRequiredForLibrary:", *(_QWORD *)(a1 + 40)))
  {
    v2 = objc_msgSend(*(id *)(a1 + 48), "isRebuildComplete");
    PLMigrationGetLog();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(_QWORD *)(a1 + 56);
      v28 = 138412546;
      v29 = v4;
      v30 = 1024;
      v31 = v2;
      _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_DEFAULT, "Starting import of file system assets [%@], rebuild complete: %d", (uint8_t *)&v28, 0x12u);
    }

    if ((v2 & 1) == 0)
      objc_msgSend(*(id *)(a1 + 64), "notifyWillRebuild");
    objc_msgSend(*(id *)(a1 + 32), "pathManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLModelMigrationAction_CreateManualIndexes createManualIndexesDropBeforeCreate:pathManager:](PLModelMigrationAction_CreateManualIndexes, "createManualIndexesDropBeforeCreate:pathManager:", 1, v5);

    objc_msgSend(*(id *)(a1 + 40), "libraryServicesManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "readyForAnalysis");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "resetReadyForAnalysisState");

    objc_msgSend(MEMORY[0x1E0CB38A8], "progressWithTotalUnitCount:parent:pendingUnitCount:", 100, *(_QWORD *)(a1 + 72), objc_msgSend(*(id *)(a1 + 72), "totalUnitCount") - 1);
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = -[PLModelMigratorRebuildProgressFraction initWithLegacyRecoveryEnabled:]([PLModelMigratorRebuildProgressFraction alloc], "initWithLegacyRecoveryEnabled:", 0);
    objc_msgSend(*(id *)(a1 + 32), "analyticsEventManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "pathManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (+[PLRebuildJournalManager isEnabledWithPathManager:error:](PLRebuildJournalManager, "isEnabledWithPathManager:error:", v11, 0)&& objc_msgSend(*(id *)(a1 + 48), "isJournalRebuildRequired"))
    {
      v12 = objc_msgSend(*(id *)(a1 + 72), "isCancelled");

      if ((v12 & 1) == 0)
      {
        -[PLModelMigratorRebuildProgressFraction setRebuildEnabled:](v9, "setRebuildEnabled:", 1);
        objc_msgSend(v10, "startRecordingTimedEventToken");
        v14 = v13;
        objc_msgSend(*(id *)(a1 + 32), "_rebuildAssetsFromJournal:inLibrary:progress:progressFraction:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40), v8, v9);
        objc_msgSend(v10, "stopRecordingTimedEventWithToken:forKey:onEventWithName:", *MEMORY[0x1E0D73820], *MEMORY[0x1E0D73800], v14);
        if ((objc_msgSend(*(id *)(a1 + 72), "isCancelled") & 1) == 0)
          objc_msgSend(*(id *)(a1 + 48), "setJournalRebuildRequired:", 0);
        v15 = +[PLBackgroundModelMigration isBackgroundMigrationRegistrationAfterRebuildRequiredWithLibrary:](PLBackgroundModelMigration, "isBackgroundMigrationRegistrationAfterRebuildRequiredWithLibrary:", *(_QWORD *)(a1 + 40));
        v16 = *(BOOL **)(a1 + 80);
        if (v16)
          *v16 = v15;
      }
    }
    else
    {

    }
    if (objc_msgSend(*(id *)(a1 + 72), "isCancelled"))
    {
      v18 = *MEMORY[0x1E0D73800];
    }
    else
    {
      objc_msgSend(v10, "startRecordingTimedEventToken");
      v20 = v19;
      objc_msgSend(*(id *)(a1 + 32), "_importAllDCIMAssetsInLibrary:progress:progressFraction:rebuildComplete:", *(_QWORD *)(a1 + 40), v8, v9, v2);
      v18 = *MEMORY[0x1E0D73800];
      objc_msgSend(v10, "stopRecordingTimedEventWithToken:forKey:onEventWithName:", *MEMORY[0x1E0D73808], *MEMORY[0x1E0D73800], v20);
      if ((objc_msgSend(*(id *)(a1 + 72), "isCancelled") & 1) == 0)
      {
        if ((v2 & 1) == 0)
        {
          objc_msgSend(*(id *)(a1 + 48), "setRebuildComplete");
          objc_msgSend(*(id *)(a1 + 64), "notifyRebuildComplete");
        }
        objc_msgSend(*(id *)(a1 + 48), "setImportFilesystemAssetsState:", 1);
      }
    }
    v21 = *MEMORY[0x1E0D73838];
    objc_msgSend(v10, "valueForKey:onEventWithName:", *MEMORY[0x1E0D73838], v18);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v22)
      objc_msgSend(v10, "setPayloadValue:forKey:onEventWithName:", *(_QWORD *)(a1 + 56), v21, v18);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "_assetCountForLibrary:", *(_QWORD *)(a1 + 40)));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setPayloadValue:forKey:onEventWithName:", v23, *MEMORY[0x1E0D73840], v18);

    objc_msgSend(v10, "valueForKey:onEventWithName:", *MEMORY[0x1E0D73810], v18);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend(v24, "BOOLValue");

    objc_msgSend(v10, "valueForKey:onEventWithName:", *MEMORY[0x1E0D73818], v18);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "unsignedIntegerValue");

    if (!-[PLModelMigratorRebuildProgressFraction isRebuildEnabled](v9, "isRebuildEnabled") && (v25 & 1) == 0 && !v27)
      objc_msgSend(v10, "removeEventWithName:", v18);

  }
  else
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      v17 = *(_QWORD *)(a1 + 56);
      v28 = 138412290;
      v29 = v17;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEBUG, "File system import already done, ignoring request [%@]", (uint8_t *)&v28, 0xCu);
    }
  }

}

void __86__PLModelMigrator_loadFileSystemDataIntoDatabaseIfNeededWithReason_completionHandler___block_invoke(uint64_t a1)
{
  _BOOL4 v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = +[PLModelMigrator waitForDataMigratorToExit](PLModelMigrator, "waitForDataMigratorToExit");
  v3 = *(id *)(a1 + 32);
  if (v2)
  {
    objc_msgSend(*(id *)(a1 + 32), "stringByAppendingString:", CFSTR("(after waiting for data migrator to exit)"));
    v4 = objc_claimAutoreleasedReturnValue();

    v3 = (id)v4;
  }
  v6 = 0;
  objc_msgSend(*(id *)(a1 + 40), "_loadFileSystemDataIntoDatabaseIfNeededWithReason:progress:requestBackgroundMigrationRegistration:", v3, *(_QWORD *)(a1 + 48), &v6);
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
    (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, v6);
  objc_msgSend(*(id *)(a1 + 56), "stillAlive");

}

void __91__PLModelMigrator_createNewDatabaseWithMigrationType_forceRebuildReason_coordinator_error___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  NSObject *v11;
  void *v12;
  char v13;
  id v14;
  char v15;
  NSObject *v16;
  id v17;
  uint8_t buf[4];
  int v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D73280], "bundleScopeShouldBePersistedForRebuild:", a2) & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "photoDirectoryWithType:", a3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((_DWORD)a2 && (_DWORD)a3 != 1)
    {
      objc_msgSend(*(id *)(a1 + 32), "baseDirectory");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v6, "isEqualToString:", v7))
      {

      }
      else
      {
        objc_msgSend(*(id *)(a1 + 32), "baseDirectory");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v6, "hasPrefix:", v8);

        if ((v9 & 1) != 0)
          goto LABEL_7;
      }
    }
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInMethod:object:file:lineNumber:description:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), CFSTR("PLModelMigrator.m"), 1114, CFSTR("Attempted to remove main bundle directory, bundleScope: %d, pathType, %d, path: %@"), a2, a3, v6);

LABEL_7:
    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109378;
      v19 = a2;
      v20 = 2112;
      v21 = v6;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Removing resources for bundle scope %d at path %@", buf, 0x12u);
    }

    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0;
    v13 = objc_msgSend(v12, "removeItemAtPath:error:", v6, &v17);
    v14 = v17;
    if ((v13 & 1) != 0)
    {

    }
    else
    {
      v15 = PLIsErrorFileNotFound();

      if ((v15 & 1) == 0)
      {
        PLMigrationGetLog();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109634;
          v19 = a2;
          v20 = 2112;
          v21 = v6;
          v22 = 2112;
          v23 = v14;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Couldn't remove bundle scope %d on library creation at path %@: %@", buf, 0x1Cu);
        }

        goto LABEL_16;
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "photoDirectoryCreationMaskResetWithType:", a3);
LABEL_16:

  }
}

void __103__PLModelMigrator_managedObjectContextForMigrationWithName_persistentStoreCoordinator_concurrencyType___block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 40), "pathManager");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "userInfo");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("com.apple.photos.PLModelMigratorPathManagerKey"));

}

void __103__PLModelMigrator_managedObjectContextForMigrationWithName_persistentStoreCoordinator_concurrencyType___block_invoke()
{
  PLMergePolicy *v0;
  void *v1;

  v0 = -[NSMergePolicy initWithMergeType:]([PLMergePolicy alloc], "initWithMergeType:", 2);
  v1 = (void *)managedObjectContextForMigrationWithName_persistentStoreCoordinator_concurrencyType__pl_once_object_20;
  managedObjectContextForMigrationWithName_persistentStoreCoordinator_concurrencyType__pl_once_object_20 = (uint64_t)v0;

}

void __41__PLModelMigrator__assetCountForContext___block_invoke(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  uint8_t buf[4];
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc(MEMORY[0x1E0C97B48]);
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v2, "initWithEntityName:", v3);

  v5 = *(void **)(a1 + 32);
  v10 = 0;
  v6 = objc_msgSend(v5, "countForFetchRequest:error:", v4, &v10);
  v7 = v10;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v6;
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  if (*(_QWORD *)(v8 + 24) == 0x7FFFFFFFFFFFFFFFLL)
  {
    *(_QWORD *)(v8 + 24) = 0;
    PLMigrationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v12 = v7;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "Failed to count the number of assets. Error: %{public}@", buf, 0xCu);
    }

  }
}

uint64_t __39__PLModelMigrator_migrationLoggerClose__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "close");
}

id __39__PLModelMigrator_initWithPathManager___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    v2 = objc_alloc_init(MEMORY[0x1E0D731C0]);
  else
    v2 = 0;

  return v2;
}

id __39__PLModelMigrator_initWithPathManager___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
    v3 = (void *)objc_msgSend(WeakRetained, "newDeviceRestoreMigrationSupport");
  else
    v3 = 0;

  return v3;
}

PLDeviceRestoreMigrationPostProcessingSupport *__39__PLModelMigrator_initWithPathManager___block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  PLDeviceRestoreMigrationPostProcessingSupport *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    v2 = -[PLDeviceRestoreMigrationPostProcessingSupport initWithModelMigrator:]([PLDeviceRestoreMigrationPostProcessingSupport alloc], "initWithModelMigrator:", WeakRetained);
  else
    v2 = 0;

  return v2;
}

id __39__PLModelMigrator_initWithPathManager___block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  void *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0D731E0], "setupWithLibraryIdentifier:type:", 0, 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

PLGraphCache *__39__PLModelMigrator_initWithPathManager___block_invoke_5(uint64_t a1)
{
  id WeakRetained;
  PLGraphCache *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    v2 = objc_alloc_init(PLGraphCache);
  else
    v2 = 0;

  return v2;
}

+ (BOOL)resetThumbnailIndexesAndInitiateThumbnailRebuildRequestIfSuccessfulForForThumbnailManager:(id)a3 deferHintChanges:(BOOL)a4 inContext:(id)a5
{
  id v7;
  id v8;
  id v9;
  BOOL v10;
  _QWORD v12[4];
  id v13;
  uint64_t *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;

  v7 = a3;
  v8 = a5;
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v19 = 1;
  objc_msgSend(v7, "addRebuildThumbnailsRequest");
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __136__PLModelMigrator_resetThumbnailIndexesAndInitiateThumbnailRebuildRequestIfSuccessfulForForThumbnailManager_deferHintChanges_inContext___block_invoke;
  v12[3] = &unk_1E3671990;
  v9 = v8;
  v15 = a4;
  v13 = v9;
  v14 = &v16;
  objc_msgSend(v9, "pl_performBlockAndWait:", v12);
  if (*((_BYTE *)v17 + 24))
  {
    v10 = 1;
  }
  else
  {
    objc_msgSend(v7, "removeRebuildThumbnailsRequest:", "+[PLModelMigrator resetThumbnailIndexesAndInitiateThumbnailRebuildRequestIfSuccessfulForForThumbnailManager:deferHintChanges:inContext:]");
    v10 = *((_BYTE *)v17 + 24) != 0;
  }

  _Block_object_dispose(&v16, 8);
  return v10;
}

+ (BOOL)markAssetsWithThumbsForTableRebuildInContext:(id)a3
{
  id v3;
  id v4;
  char v5;
  _QWORD v7[4];
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;

  v3 = a3;
  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v13 = 1;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __64__PLModelMigrator_markAssetsWithThumbsForTableRebuildInContext___block_invoke;
  v7[3] = &unk_1E3677C68;
  v4 = v3;
  v8 = v4;
  v9 = &v10;
  objc_msgSend(v4, "pl_performBlockAndWait:", v7);
  v5 = *((_BYTE *)v11 + 24);

  _Block_object_dispose(&v10, 8);
  return v5;
}

+ (BOOL)shouldPromptUserForRebuildWithLibraryPathManager:(id)a3
{
  id v3;
  char v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  id v11;
  uint8_t buf[4];
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if ((objc_msgSend(v3, "isSystemPhotoLibraryPathManager") & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    objc_msgSend(v3, "libraryURL");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 0;
    +[PLPhotoLibraryIdentifier photoLibraryIdentifierWithPhotoLibraryURL:createIfMissing:error:](PLPhotoLibraryIdentifier, "photoLibraryIdentifierWithPhotoLibraryURL:createIfMissing:error:", v5, 1, &v11);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v11;

    if (!v6)
    {
      PLMigrationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v13 = v3;
        v14 = 2112;
        v15 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Failed to create identifier for library with path manager %@ %@.", buf, 0x16u);
      }

    }
    objc_msgSend(v6, "containerIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v9, "containsString:", CFSTR("com.apple."));

  }
  return v4;
}

+ (BOOL)waitForDataMigratorToExit
{
  char v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  if (PLPlatformWaitsForDataMigrator())
    pl_dispatch_once();
  v2 = *((_BYTE *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v2;
}

+ (id)_readNumberWithKey:(id)a3 fromMetadataWithMOC:(id)a4 pathManager:(id)a5 error:(id *)a6
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  BOOL v22;
  void *v23;
  id v25;
  id v26;
  id v27;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = (void *)MEMORY[0x19AEC1554]();
  if (v10)
  {
    objc_msgSend(v10, "persistentStoreCoordinator");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "persistentStores");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v14, "count"))
    {
      objc_msgSend(v14, "firstObject");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "metadataForPersistentStore:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        v17 = 0;
        goto LABEL_7;
      }
    }
    else
    {

    }
  }
  v26 = 0;
  v27 = 0;
  objc_msgSend(v11, "photosDatabasePath");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedObjectContext getPersistentStoreURL:options:forDatabasePath:](PLManagedObjectContext, "getPersistentStoreURL:options:forDatabasePath:", &v27, &v26, v18);
  v19 = v27;
  v20 = v26;

  v21 = *MEMORY[0x1E0C979E8];
  v25 = 0;
  objc_msgSend(MEMORY[0x1E0C97C00], "metadataForPersistentStoreOfType:URL:options:error:", v21, v19, v20, &v25);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v25;

LABEL_7:
  if (v16)
    v22 = v17 == 0;
  else
    v22 = 0;
  if (v22)
  {
    objc_msgSend(v16, "valueForKey:", v9);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    objc_autoreleasePoolPop(v12);
  }
  else
  {

    objc_autoreleasePoolPop(v12);
    v23 = 0;
    if (a6 && v17)
    {
      v23 = 0;
      *a6 = objc_retainAutorelease(v17);
    }
  }

  return v23;
}

+ (BOOL)_readBooleanFlagWithKey:(id)a3 fromMetadataWithMOC:(id)a4 pathManager:(id)a5
{
  void *v5;
  char v6;

  objc_msgSend(a1, "_readNumberWithKey:fromMetadataWithMOC:pathManager:error:", a3, a4, a5, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "BOOLValue");

  return v6;
}

+ (BOOL)_writeNumber:(id)a3 forKey:(id)a4 pathManager:(id)a5 error:(id *)a6
{
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  BOOL v17;
  id v18;
  NSObject *v19;
  char v20;
  id *v21;
  void *v22;
  NSObject *v23;
  id v25;
  void *context;
  void *v27;
  id v29;
  id v30;
  id v31;
  id v32;
  uint8_t buf[4];
  id v34;
  __int16 v35;
  id v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  context = (void *)MEMORY[0x19AEC1554]();
  v27 = v10;
  v31 = 0;
  v32 = 0;
  objc_msgSend(v10, "photosDatabasePath");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedObjectContext getPersistentStoreURL:options:forDatabasePath:](PLManagedObjectContext, "getPersistentStoreURL:options:forDatabasePath:", &v32, &v31, v11);
  v12 = v32;
  v13 = v31;

  v14 = *MEMORY[0x1E0C979E8];
  v30 = 0;
  objc_msgSend(MEMORY[0x1E0C97C00], "metadataForPersistentStoreOfType:URL:options:error:", v14, v12, v13, &v30);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v30;
  if (v15)
    v17 = v16 == 0;
  else
    v17 = 0;
  if (!v17)
  {
    v18 = v16;
    PLMigrationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v34 = v9;
      v35 = 2112;
      v36 = v18;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Failed to get metadata while setting %@ %@", buf, 0x16u);
    }
    goto LABEL_9;
  }
  objc_msgSend(v15, "valueForKey:", v9);
  v19 = objc_claimAutoreleasedReturnValue();
  if ((-[NSObject isEqual:](v19, "isEqual:", v8) & 1) != 0)
  {
    v18 = 0;
LABEL_9:
    v20 = 1;
    v21 = a6;
    goto LABEL_15;
  }
  v22 = (void *)objc_msgSend(v15, "mutableCopy");
  v25 = v8;
  objc_msgSend(v22, "setObject:forKey:", v8, v9);
  v29 = 0;
  v20 = objc_msgSend(MEMORY[0x1E0C97C00], "setMetadata:forPersistentStoreOfType:URL:options:error:", v22, v14, v12, v13, &v29);
  v18 = v29;
  v21 = a6;
  if ((v20 & 1) == 0)
  {
    PLMigrationGetLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v34 = v9;
      v35 = 2112;
      v36 = v18;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "Failed to set %@ %@", buf, 0x16u);
    }

  }
  v8 = v25;
LABEL_15:

  objc_autoreleasePoolPop(context);
  if (v21 && v18)
    *v21 = objc_retainAutorelease(v18);

  return v20;
}

+ (id)extractPathToAssetUUIDRecoveryMappingFromDatabasePath:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  sqlite3 *v7;
  sqlite3 *v8;
  int v9;
  void *v10;
  const unsigned __int8 *v11;
  void *v12;
  const unsigned __int8 *v13;
  void *v14;
  void *v15;
  const unsigned __int8 *v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  const char *v20;
  sqlite3_stmt *ppStmt;
  uint8_t buf[4];
  int v24;
  __int16 v25;
  const char *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x19AEC1554]();
  v6 = objc_retainAutorelease(v3);
  v7 = PLOpenSQLTransactionWithDBPath((const char *)objc_msgSend(v6, "UTF8String"));
  v8 = v7;
  if (v7)
  {
    ppStmt = 0;
    v9 = sqlite3_prepare_v2(v7, "SELECT zdirectory, zfilename, zuuid FROM zasset;", -1, &ppStmt, 0);
    if (v9)
      goto LABEL_22;
    while (sqlite3_step(ppStmt) == 100)
    {
      v10 = (void *)MEMORY[0x19AEC1554]();
      v11 = sqlite3_column_text(ppStmt, 0);
      if (v11)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v12 = 0;
      }
      v13 = sqlite3_column_text(ppStmt, 1);
      if (v13)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v14 = 0;
      }
      objc_msgSend(v12, "stringByAppendingPathComponent:", v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v15, "length"))
      {
        v16 = sqlite3_column_text(ppStmt, 2);
        if (v16)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v17 = 0;
        }
        if (objc_msgSend(v17, "length"))
          objc_msgSend(v4, "setObject:forKey:", v17, v15);

      }
      objc_autoreleasePoolPop(v10);
    }
    v9 = sqlite3_finalize(ppStmt);
    if (v9)
    {
LABEL_22:
      PLMigrationGetLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        v20 = sqlite3_errmsg(v8);
        *(_DWORD *)buf = 67109378;
        v24 = v9;
        v25 = 2080;
        v26 = v20;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Failed to fetch path to uuid mappings %d %s", buf, 0x12u);
      }

      PLRollbackSQLTransactionAndCloseDB(v8);
    }
    else
    {
      PLCommitSQLTransactionAndCloseDB(v8);
    }
  }
  else
  {
    PLMigrationGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Failed to open database for extracting path to uuid mappings", buf, 2u);
    }

  }
  objc_autoreleasePoolPop(v5);

  return v4;
}

+ (BOOL)shouldImportAssetsFromDCIMSubDirectoryAtURL:(id)a3 assetsKind:(int *)a4
{
  id v5;
  void *v6;
  int v7;
  id v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  id v20;
  int v21;
  id v22;

  v5 = a3;
  v6 = (void *)MEMORY[0x19AEC1554]();
  v22 = 0;
  v7 = objc_msgSend(v5, "getResourceValue:forKey:error:", &v22, *MEMORY[0x1E0C99A90], 0);
  v8 = v22;
  if (v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3900], "scannerWithString:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setCharactersToBeSkipped:", 0);
    v21 = 0;
    v10 = 0;
    v11 = 0;
    if (objc_msgSend(v9, "scanInt:", &v21) && v21 >= 100 && v21 <= 99999)
    {
      objc_msgSend(MEMORY[0x1E0CB3500], "alphanumericCharacterSet");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 0;
      v13 = objc_msgSend(v9, "scanCharactersFromSet:intoString:", v12, &v20);
      v11 = v20;
      if ((v13 & 1) != 0)
      {
        v14 = objc_msgSend(v9, "isAtEnd");

        if (v14)
        {
          v15 = objc_msgSend(v11, "isEqualToString:", CFSTR("APPLE"));
          v16 = objc_msgSend(v11, "isEqualToString:", CFSTR("IMPRT"));
          v17 = objc_msgSend(v11, "isEqualToString:", CFSTR("SYNCD"));
          v10 = v17 | v16 | v15;
          if (a4)
          {
            if (v15)
              v18 = 0;
            else
              v18 = 7;
            if (v16)
              v18 = 1;
            if (v17)
              v18 = 4;
            *a4 = v18;
          }
          goto LABEL_19;
        }
      }
      else
      {

      }
      v10 = 0;
    }
LABEL_19:

    goto LABEL_20;
  }
  v10 = 0;
LABEL_20:

  objc_autoreleasePoolPop(v6);
  return v10;
}

+ (id)schemaIncompatibilityDetailsForStoreMetadata:(id)a3 model:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  objc_msgSend(a3, "objectForKey:", CFSTR("NSStoreModelVersionHashes"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v5;
  objc_msgSend(v5, "entityVersionHashesByName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C99E20];
  objc_msgSend(v6, "allKeys");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setWithArray:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend(v7, "allKeys");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setWithArray:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "unionSet:", v13);

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v25 = (id)objc_claimAutoreleasedReturnValue();
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v14 = v10;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v27 != v17)
          objc_enumerationMutation(v14);
        v19 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * i);
        objc_msgSend(v6, "objectForKeyedSubscript:", v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "objectForKeyedSubscript:", v19);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        if ((PLObjectIsEqual() & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("model(%@) vs. store(%@)"), v21, v20);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "setObject:forKeyedSubscript:", v22, v19);

        }
      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v16);
  }

  return v25;
}

+ (BOOL)rebuildMomentsInContext:(id)a3 pathManager:(id)a4 deleteExistingMoments:(BOOL)a5 targetedAssetOIDs:(id)a6
{
  _BOOL4 v7;
  id v9;
  id v10;
  id v11;
  PLMomentGenerationDataManager *v12;
  id v13;
  void *v14;
  void *v15;
  PLMomentGenerationDataManager *v16;
  _QWORD v18[4];
  PLMomentGenerationDataManager *v19;

  v7 = a5;
  v9 = a3;
  v10 = a4;
  v11 = a6;
  if (PLPlatformMomentsSupported())
  {
    v12 = -[PLMomentGenerationDataManager initWithManagedObjectContext:pathManagerForLightweightMigration:]([PLMomentGenerationDataManager alloc], "initWithManagedObjectContext:pathManagerForLightweightMigration:", v9, v10);
    pl_dispatch_once();
    +[PLMomentGenerationDataManager setManagerMomentarilyBlessed:](PLMomentGenerationDataManager, "setManagerMomentarilyBlessed:", v12);
    v13 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v14 = v13;
    if (v7)
      objc_msgSend(v13, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], PLMomentGenerationShouldDeleteAllMomentsKey);
    if (objc_msgSend(v11, "count"))
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v11, PLMomentGenerationTargetedAssetOIDsKey);
    -[PLMomentGenerationDataManager generator](v12, "generator");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "rebuildAllMomentsWithOptions:completionHandler:", v14, 0);

    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __95__PLModelMigrator_rebuildMomentsInContext_pathManager_deleteExistingMoments_targetedAssetOIDs___block_invoke;
    v18[3] = &unk_1E3677AA0;
    v19 = v12;
    v16 = v12;
    -[PLMomentGenerationDataManager performBlock:synchronously:completionHandler:](v16, "performBlock:synchronously:completionHandler:", v18, 1, 0);

  }
  return 1;
}

void __95__PLModelMigrator_rebuildMomentsInContext_pathManager_deleteExistingMoments_targetedAssetOIDs___block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  NSObject *v4;
  int v5;
  id v6;
  uint8_t buf[4];
  int v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(a1 + 32);
  v6 = 0;
  objc_msgSend(v1, "orphanedAssetIDsWithError:", &v6);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v6;
  if (objc_msgSend(v2, "count"))
  {
    PLMigrationGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v5 = objc_msgSend(v2, "count");
      *(_DWORD *)buf = 67109378;
      v8 = v5;
      v9 = 2112;
      v10 = v2;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_ERROR, "Orphaned asset IDs (%d) detected after rebuilding moments: %@", buf, 0x12u);
    }

  }
}

void __44__PLModelMigrator_waitForDataMigratorToExit__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v2 = getDMIsMigrationNeededSymbolLoc_ptr;
  v11 = getDMIsMigrationNeededSymbolLoc_ptr;
  if (!getDMIsMigrationNeededSymbolLoc_ptr)
  {
    v3 = DataMigrationLibrary();
    v2 = dlsym(v3, "DMIsMigrationNeeded");
    v9[3] = (uint64_t)v2;
    getDMIsMigrationNeededSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v8, 8);
  if (!v2)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL PLDMIsMigrationNeeded(void)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("PLModelMigrator.m"), 210, CFSTR("%s"), dlerror());
LABEL_12:

    __break(1u);
    return;
  }
  if (!((unsigned int (*)(void))v2)())
    return;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v4 = getDMPerformMigrationIfNeededSymbolLoc_ptr;
  v11 = getDMPerformMigrationIfNeededSymbolLoc_ptr;
  if (!getDMPerformMigrationIfNeededSymbolLoc_ptr)
  {
    v5 = DataMigrationLibrary();
    v4 = dlsym(v5, "DMPerformMigrationIfNeeded");
    v9[3] = (uint64_t)v4;
    getDMPerformMigrationIfNeededSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v8, 8);
  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void PLDMPerformMigrationIfNeeded(void)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("PLModelMigrator.m"), 211, CFSTR("%s"), dlerror());
    goto LABEL_12;
  }
  ((void (*)(void))v4)();
}

void __64__PLModelMigrator_markAssetsWithThumbsForTableRebuildInContext___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  uint8_t buf[4];
  const char *v13;
  __int16 v14;
  void *v15;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v16[0] = CFSTR("thumbnailIndex");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPropertiesToFetch:", v5);

  objc_msgSend(v4, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %d"), CFSTR("thumbnailIndex"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v6);

  objc_msgSend(*(id *)(a1 + 32), "executeFetchRequest:error:", v4, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "enumerateWithIncrementalSaveUsingObjects:withBlock:", v7, &__block_literal_global_73);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  PLMigrationGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v13 = "+[PLModelMigrator markAssetsWithThumbsForTableRebuildInContext:]_block_invoke";
      v14 = 2112;
      v15 = v8;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%s: failed to mark assets for table thumb rebuild: %@", buf, 0x16u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }
  else
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Marked assets for table thumb rebuild.", buf, 2u);
    }

    PLMigrationGetLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Rebuilding image request hints...", buf, 2u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = +[PLResourceInstaller resetImageRequestHintsInContext:](PLResourceInstaller, "resetImageRequestHintsInContext:", *(_QWORD *)(a1 + 32));
  }

}

uint64_t __64__PLModelMigrator_markAssetsWithThumbsForTableRebuildInContext___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setThumbnailIndex:", 4294967294);
}

void __136__PLModelMigrator_resetThumbnailIndexesAndInitiateThumbnailRebuildRequestIfSuccessfulForForThumbnailManager_deferHintChanges_inContext___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  int v15;
  NSObject *v16;
  _BOOL4 v17;
  void *v18;
  id v19;
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  id v23;
  __int16 v24;
  void *v25;
  const __CFString *v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97AB0];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "batchUpdateRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "setResultType:", 2);
  v26 = CFSTR("thumbnailIndex");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 0xFFFFFFFFLL);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPropertiesToUpdate:", v6);

  v7 = *(void **)(a1 + 32);
  v19 = 0;
  objc_msgSend(v7, "executeRequest:error:", v4, &v19);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v19;
  PLMigrationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "result");
      v12 = (char *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v21 = v12;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Reset thumbnailIndex on %@ assets", buf, 0xCu);

    }
    objc_msgSend(v8, "result");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "integerValue");

    if (v14 >= 1)
    {
      v15 = *(unsigned __int8 *)(a1 + 48);
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);
      if (v15)
      {
        if (v17)
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Deferring image request hints rebuild", buf, 2u);
        }

      }
      else
      {
        if (v17)
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Rebuilding image request hints...", buf, 2u);
        }

        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = +[PLResourceInstaller resetImageRequestHintsInContext:](PLResourceInstaller, "resetImageRequestHintsInContext:", *(_QWORD *)(a1 + 32));
      }
    }
  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v9, "userInfo");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v21 = "+[PLModelMigrator resetThumbnailIndexesAndInitiateThumbnailRebuildRequestIfSuccessfulForForThumbnailManager:"
            "deferHintChanges:inContext:]_block_invoke";
      v22 = 2112;
      v23 = v9;
      v24 = 2112;
      v25 = v18;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "%s: failed to update: %@ %@", buf, 0x20u);

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }

}

- (void)filesystemImportResultsUpdateKeywordWithImportedAssets:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  PLModelMigrator *v11;

  v4 = a3;
  if (objc_msgSend(v4, "count"))
  {
    objc_msgSend(v4, "firstObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "photoLibrary");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __84__PLModelMigrator_Recovery__filesystemImportResultsUpdateKeywordWithImportedAssets___block_invoke;
    v8[3] = &unk_1E3677530;
    v9 = v6;
    v10 = v4;
    v11 = self;
    v7 = v6;
    objc_msgSend(v7, "performTransaction:", v8);

  }
}

void __84__PLModelMigrator_Recovery__filesystemImportResultsUpdateKeywordWithImportedAssets___block_invoke(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unint64_t v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  PLKeywordManager *v12;
  void *v13;
  PLKeywordManager *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint8_t buf[4];
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "setFetchBatchSize:", 100);
  objc_msgSend(a1[4], "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0;
  v6 = objc_msgSend(v5, "countForFetchRequest:error:", v4, &v18);
  v7 = v18;

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    PLMigrationGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v7;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Post filesystem import, failed to obtain asset count. Error: %@", buf, 0xCu);
    }
    goto LABEL_6;
  }
  if (v6 > objc_msgSend(a1[5], "count"))
  {
    v8 = objc_alloc_init(MEMORY[0x1E0CB3578]);
    -[NSObject setDateStyle:](v8, "setDateStyle:", 2);
    -[NSObject setTimeStyle:](v8, "setTimeStyle:", 2);
    PLServicesLocalizedFrameworkStringForAssetsd();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject stringFromDate:](v8, "stringFromDate:", v10);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    PFStringWithValidatedFormat();
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = [PLKeywordManager alloc];
    objc_msgSend(a1[6], "pathManager", v17);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = -[PLKeywordManager initWithPathManager:](v12, "initWithPathManager:", v13);

    objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", a1[5]);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1[4], "managedObjectContext");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLKeywordManager setKeyword:forAssets:managedObjectContext:](v14, "setKeyword:forAssets:managedObjectContext:", v11, v15, v16);

LABEL_6:
  }

}

+ (BOOL)executeBatchDeleteWithEntityName:(id)a3 predicate:(id)a4 managedObjectContext:(id)a5 error:(id *)a6
{
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  id v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = (void *)MEMORY[0x1E0C97B48];
  v11 = a5;
  v12 = a4;
  objc_msgSend(v10, "fetchRequestWithEntityName:", v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setPredicate:", v12);

  v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v13);
  objc_msgSend(v14, "setResultType:", 2);
  v21 = 0;
  objc_msgSend(v11, "executeRequest:error:", v14, &v21);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = v21;
  PLMigrationGetLog();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (v16)
  {
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v23 = v9;
      v24 = 2112;
      v25 = v16;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Batch delete of %@ returned error: %@", buf, 0x16u);
    }

    if (a6)
      *a6 = objc_retainAutorelease(v16);
  }
  else
  {
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v15, "result");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v23 = v9;
      v24 = 2112;
      v25 = v19;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEBUG, "Batch delete of %@ with result: %@", buf, 0x16u);

    }
  }

  return v16 == 0;
}

+ (BOOL)executeBatchUpdateWithEntityName:(id)a3 predicate:(id)a4 propertiesToUpdate:(id)a5 managedObjectContext:(id)a6 error:(id *)a7
{
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  NSObject *v19;
  NSObject *v20;
  void *v21;
  id v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  id v27;
  __int16 v28;
  id v29;
  __int16 v30;
  id v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v11 = a3;
  v12 = a4;
  v13 = a5;
  v14 = (void *)MEMORY[0x1E0C97AB0];
  v15 = a6;
  objc_msgSend(v14, "batchUpdateRequestWithEntityName:", v11);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setPredicate:", v12);
  objc_msgSend(v16, "setPropertiesToUpdate:", v13);
  objc_msgSend(v16, "setResultType:", 2);
  v23 = 0;
  objc_msgSend(v15, "executeRequest:error:", v16, &v23);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = v23;
  PLMigrationGetLog();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = v19;
  if (v17)
  {
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v17, "result");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v25 = v21;
      v26 = 2112;
      v27 = v11;
      v28 = 2112;
      v29 = v12;
      v30 = 2112;
      v31 = v13;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Batch updated %@ %@ objects with predicate %@, updated properties %@", buf, 0x2Au);

    }
  }
  else
  {
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138413058;
      v25 = v11;
      v26 = 2112;
      v27 = v12;
      v28 = 2112;
      v29 = v13;
      v30 = 2112;
      v31 = v18;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Batch update request failed, for entity %@, predicate %@, properties to update %@, error: %@", buf, 0x2Au);
    }

    if (a7)
      *a7 = objc_retainAutorelease(v18);
  }

  return v17 != 0;
}

+ (BOOL)enumerateObjectsWithIncrementalSaveDefaultBatchSizeFetchRequest:(id)a3 managedObjectContext:(id)a4 count:(unint64_t *)a5 error:(id *)a6 block:(id)a7
{
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  BOOL v17;
  id v19;

  v11 = a4;
  v12 = a7;
  v13 = a3;
  objc_msgSend(v13, "setFetchBatchSize:", 100);
  v19 = 0;
  objc_msgSend(v11, "executeFetchRequest:error:", v13, &v19);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = v19;
  if (v14)
  {
    objc_msgSend(v11, "enumerateWithIncrementalSaveUsingObjects:withBlock:", v14, v12);
    v16 = objc_claimAutoreleasedReturnValue();

    v15 = (id)v16;
    if (!v16)
    {
      v17 = 1;
      if (!a5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  if (a6)
    *a6 = objc_retainAutorelease(v15);

  v17 = 0;
  if (a5)
LABEL_6:
    *a5 = objc_msgSend(v14, "count");
LABEL_7:

  return v17;
}

@end
