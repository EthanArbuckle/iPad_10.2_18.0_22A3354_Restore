@implementation PLManagedAsset

+ (id)entityName
{
  return CFSTR("Asset");
}

+ (void)enumerateImageRequestHintData:(id)a3 assetWidth:(int64_t)a4 assetHeight:(int64_t)a5 libraryID:(id)a6 startingOffset:(int64_t)a7 assetID:(id)a8 block:(id)a9
{
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  void (**v21)(_QWORD, _QWORD);
  _QWORD *v22;
  unint64_t v23;
  double v24;
  double v25;
  double v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unsigned __int8 *v31;
  NSObject *v33;
  void *v34;
  id v35;
  int v36;
  double v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  _QWORD v49[6];
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  int64_t v53;
  char v54;
  uint8_t buf[4];
  void *v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v16 = a3;
  v48 = a6;
  v47 = a8;
  v17 = a9;
  v54 = 0;
  v18 = objc_retainAutorelease(v16);
  v19 = objc_msgSend(v18, "bytes");
  v46 = v18;
  v20 = objc_msgSend(v18, "length");
  v50 = 0;
  v51 = &v50;
  v52 = 0x2020000000;
  v53 = a7;
  if (v20 - 1 < a7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+RM.m"), 630, CFSTR("enumerateImageRequestHintData: startingOffset must be less than hint length when data is available."));

  }
  v49[0] = MEMORY[0x1E0C809B0];
  v49[1] = 3221225472;
  v49[2] = __114__PLManagedAsset_RM__enumerateImageRequestHintData_assetWidth_assetHeight_libraryID_startingOffset_assetID_block___block_invoke;
  v49[3] = &unk_1E3677078;
  v49[4] = &v50;
  v49[5] = v20;
  v21 = (void (**)(_QWORD, _QWORD))MEMORY[0x19AEC174C](v49);
  v22 = v51 + 3;
  v23 = v51[3];
  if (v23 < v20 && !v54)
  {
    v24 = (double)a4;
    v25 = (double)a5;
    v26 = (double)(a5 * a4);
    while (1)
    {
      v27 = v19 + v23;
      *v22 = v23 + 3;
      v28 = *(_BYTE *)(v19 + v23 + 2) & 3;
      PLDataStoreForClassIDAndLibraryID(v28, v48);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v29)
        break;
      v30 = objc_msgSend((id)objc_opt_class(), "keyLengthWithDataPreview:", *(unsigned __int8 *)(v19 + v51[3]));
      if (!(_DWORD)v30)
      {
        PLBackendGetLog();
        v43 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v47, "uuid");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v56 = v44;
          _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_ERROR, "Invalid keyLen. Exiting hint enumeration for assetID: %{public}@", buf, 0xCu);

        }
        goto LABEL_29;
      }
      v31 = (unsigned __int8 *)(v19 + v51[3]);
      _ZF = (_DWORD)v28 == 3 || (_DWORD)v28 == 0;
      if (_ZF && *v31 >= 0x10u)
      {
        PLBackendGetLog();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v47, "uuid");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v56 = v34;
          _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "Invalid FilePath strategy hint data. Skipping hint assetID: %{public}@", buf, 0xCu);

        }
        v21[2](v21, v30);
      }
      else
      {
        if (v28 > 1)
          objc_msgSend(v29, "keyFromKeyStruct:", v31);
        else
          +[PLTaggedPointerDataStoreKey keyWithKeyStruct:keyLength:forStoreClassID:inLibraryWithID:](PLTaggedPointerDataStoreKey, "keyWithKeyStruct:keyLength:forStoreClassID:inLibraryWithID:", v31, v30, v28, v48);
        v35 = (id)objc_claimAutoreleasedReturnValue();
        v36 = objc_msgSend(v35, "recipeIDForAssetID:", v47);
        v21[2](v21, v30);
        _H0 = *(_WORD *)v27;
        __asm { FCVT            D0, H0 }
        v42 = sqrt(_D0);
        *(float *)&v42 = round(v24 / v42) * round(v25 / v42) / v26;
        (*((void (**)(id, uint64_t, _QWORD, _QWORD, void *, id, unint64_t, uint64_t, float, int, char *))v17
         + 2))(v17, v51[3], (*(unsigned __int8 *)(v27 + 2) >> 2) & 1, (*(unsigned __int8 *)(v27 + 2) >> 3) & 1, v29, v35, v27, v30 + 3, *(float *)&v42, v36, &v54);

      }
      v22 = v51 + 3;
      v23 = v51[3];
      if (v23 >= v20 || v54)
        goto LABEL_30;
    }
    PLImageManagerGetLog();
    v43 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v56) = v28;
      _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_ERROR, "[RM]: unable to parse image request hints (can't find data store class for classID: %d", buf, 8u);
    }
    v29 = 0;
LABEL_29:

  }
LABEL_30:

  _Block_object_dispose(&v50, 8);
}

uint64_t __114__PLManagedAsset_RM__enumerateImageRequestHintData_assetWidth_assetHeight_libraryID_startingOffset_assetID_block___block_invoke(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += a2;
  v2 = *(_QWORD *)(*(_QWORD *)(result + 32) + 8);
  if (!a2 || *(_QWORD *)(v2 + 24) >= *(_QWORD *)(result + 40))
    *(_QWORD *)(v2 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  return result;
}

+ (BOOL)canPlayPhotoIrisWithPhotoIris:(BOOL)a3 photoIrisPlaceholder:(BOOL)a4 hasAdjustments:(BOOL)a5 videoCpVisibilityState:(unsigned __int16)a6
{
  if (!a3 || a4)
    return 0;
  else
    return objc_msgSend(a1, "isVideoComplementVisibilityStatePlayable:hasAdjustments:", a6, a5);
}

+ (BOOL)isVideoComplementVisibilityStatePlayable:(unsigned __int16)a3 hasAdjustments:(BOOL)a4
{
  int v4;

  if (((a3 | ((a3 & 8) >> 3)) & 1) != 0)
    v4 = (a3 >> 3) & 1;
  else
    v4 = !a4 | ((a3 & 2) >> 1);
  if ((a3 & 4) != 0)
    return (a3 & 1) == 0;
  else
    return v4;
}

void __49__PLManagedAsset_predicateToExcludeTrashedAssets__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "predicateToExcludeTrashedAssetsWithTrashedStateKeyPath:", CFSTR("trashedState"));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v3, "copy");
  v2 = (void *)predicateToExcludeTrashedAssets_pl_once_object_9;
  predicateToExcludeTrashedAssets_pl_once_object_9 = v1;

}

+ (id)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath:(id)a3
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  pl_dispatch_once();
  v10 = CFSTR("trashedState");
  v4 = (void *)MEMORY[0x1E0CB35D0];
  v5 = (id)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath__pl_once_object_10;
  objc_msgSend(v4, "expressionForKeyPath:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v11[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "predicateWithSubstitutionVariables:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath:(id)a3
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  pl_dispatch_once();
  v10 = CFSTR("avalanchePickType");
  v4 = (void *)MEMORY[0x1E0CB35D0];
  v5 = (id)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath__pl_once_object_14;
  objc_msgSend(v4, "expressionForKeyPath:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v11[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "predicateWithSubstitutionVariables:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (BOOL)isPhotoIrisPlaceholderWithPhotoIris:(BOOL)a3 videoCpDuration:(int64_t)a4 isCloudShared:(BOOL)a5 videoCpFilePath:(id)a6
{
  _BOOL4 v8;
  id v9;
  void *v10;
  int v11;
  void *v12;

  v8 = a3;
  v9 = a6;
  v10 = v9;
  LOBYTE(v11) = 0;
  if (!a4 && !a5 && v8)
  {
    if (v9)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v12, "fileExistsAtPath:", v10) ^ 1;

    }
    else
    {
      LOBYTE(v11) = 1;
    }
  }

  return v11;
}

+ (id)predicateToExcludeHiddenAssets
{
  return (id)objc_msgSend(a1, "predicateToExcludeHiddenAssetsWithHiddenKeyPath:", CFSTR("hidden"));
}

+ (id)predicateToExcludeTrashedAssets
{
  pl_dispatch_once();
  return (id)predicateToExcludeTrashedAssets_pl_once_object_9;
}

void __86__PLManagedAsset_predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath___block_invoke()
{
  uint64_t v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(noindex:($avalanchePickType) = %d) OR (noindex:($avalanchePickType) >= %d AND (((noindex:($avalanchePickType) & %i) == %i) OR ((noindex:($avalanchePickType) & %i) == %i)))"), 0, 8, 8, 8, 16, 16);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v0 = objc_msgSend(v2, "copy");
  v1 = (void *)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath__pl_once_object_14;
  predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath__pl_once_object_14 = v0;

}

void __73__PLManagedAsset_predicateToExcludeTrashedAssetsWithTrashedStateKeyPath___block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:($trashedState) == %d"), 0);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v0 = objc_msgSend(v2, "copy");
  v1 = (void *)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath__pl_once_object_10;
  predicateToExcludeTrashedAssetsWithTrashedStateKeyPath__pl_once_object_10 = v0;

}

void __66__PLManagedAsset_predicateToExcludeHiddenAssetsWithHiddenKeyPath___block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:($hidden) == NO"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v0 = objc_msgSend(v2, "copy");
  v1 = (void *)predicateToExcludeHiddenAssetsWithHiddenKeyPath__pl_once_object_11;
  predicateToExcludeHiddenAssetsWithHiddenKeyPath__pl_once_object_11 = v0;

}

void __57__PLManagedAsset_predicateToExcludeNonvisibleBurstAssets__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath:", CFSTR("avalanchePickType"));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v3, "copy");
  v2 = (void *)predicateToExcludeNonvisibleBurstAssets_pl_once_object_13;
  predicateToExcludeNonvisibleBurstAssets_pl_once_object_13 = v1;

}

+ (id)predicateToExcludeNonvisibleBurstAssets
{
  pl_dispatch_once();
  return (id)predicateToExcludeNonvisibleBurstAssets_pl_once_object_13;
}

+ (id)predicateToExcludeHiddenAssetsWithHiddenKeyPath:(id)a3
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  pl_dispatch_once();
  v10 = CFSTR("hidden");
  v4 = (void *)MEMORY[0x1E0CB35D0];
  v5 = (id)predicateToExcludeHiddenAssetsWithHiddenKeyPath__pl_once_object_11;
  objc_msgSend(v4, "expressionForKeyPath:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v11[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "predicateWithSubstitutionVariables:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (BOOL)migrateLocationDataIfNeededAfterOTARestore:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  int64_t v6;
  char v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  uint64_t v36;
  BOOL v37;

  v3 = a3;
  -[PLManagedAsset locationData](self, "locationData");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = +[PLManagedAsset _locationDataFormat:](PLManagedAsset, "_locationDataFormat:", v5);
  if (v6 == 2)
  {
    v7 = 0;
    goto LABEL_15;
  }
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = +[PLManagedAsset newLocationFromLocationData:timestampIfMissing:](PLManagedAsset, "newLocationFromLocationData:timestampIfMissing:", v5, v8);
  if (!v6)
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (-[PLManagedAsset complete](self, "complete")
      && (objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager"),
          v11 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v10, "path"),
          v12 = (void *)objc_claimAutoreleasedReturnValue(),
          v13 = objc_msgSend(v11, "fileExistsAtPath:isDirectory:", v12, 0),
          v12,
          v11,
          v13))
    {
      v14 = objc_alloc(MEMORY[0x1E0D75140]);
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "libraryBundle");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "timeZoneLookup");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)objc_msgSend(v14, "initWithMediaURL:timeZoneLookup:", v10, v17);

      objc_msgSend(v18, "gpsLocation");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      if (v19)
      {
        v20 = objc_alloc(MEMORY[0x1E0C9E3B8]);
        objc_msgSend(v9, "coordinate");
        v22 = v21;
        v24 = v23;
        objc_msgSend(v19, "altitude");
        v26 = v25;
        objc_msgSend(v19, "horizontalAccuracy");
        v28 = v27;
        objc_msgSend(v19, "verticalAccuracy");
        v30 = v29;
        objc_msgSend(v19, "course");
        v32 = v31;
        objc_msgSend(v19, "speed");
        v34 = v33;
        objc_msgSend(v19, "timestamp");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v36 = objc_msgSend(v20, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:", v35, v22, v24, v26, v28, v30, v32, v34);

        v9 = (id)v36;
      }

    }
    else if (!v3)
    {
      v7 = 0;
      goto LABEL_13;
    }
    -[PLManagedAsset setLocation:](self, "setLocation:", v9);
    v7 = 1;
LABEL_13:

    goto LABEL_14;
  }
  -[PLManagedAsset setLocation:](self, "setLocation:", v9);
  v7 = 1;
LABEL_14:

LABEL_15:
  if (v6 == 2)
    v37 = 1;
  else
    v37 = v7;

  return v37;
}

+ (id)newLocationDataFromLocation:(id)a3
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v14[8];

  if (!a3)
    return 0;
  v3 = a3;
  objc_msgSend(v3, "coordinate");
  objc_msgSend(v3, "coordinate", v4);
  v14[1] = v5;
  objc_msgSend(v3, "altitude");
  v14[2] = v6;
  objc_msgSend(v3, "horizontalAccuracy");
  v14[3] = v7;
  objc_msgSend(v3, "verticalAccuracy");
  v14[4] = v8;
  objc_msgSend(v3, "course");
  v14[5] = v9;
  objc_msgSend(v3, "speed");
  v14[6] = v10;
  objc_msgSend(v3, "timestamp");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "timeIntervalSinceReferenceDate");
  v14[7] = v12;

  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytes:length:", v14, 64);
}

+ (int64_t)_locationDataFormat:(id)a3
{
  uint64_t v3;

  v3 = objc_msgSend(a3, "length");
  if ((v3 & 0xFFFFFFFFFFFFFFBFLL) != 0)
    return v3 != 16;
  else
    return 2;
}

+ (id)newLocationFromLocationData:(id)a3 timestampIfMissing:(id)a4
{
  id v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  CLLocationCoordinate2D v12;
  void *v13;
  void *v14;
  CLLocationCoordinate2D v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v6 = a3;
  v7 = a4;
  if (!v6 || !objc_msgSend(v6, "length"))
    goto LABEL_8;
  v8 = objc_msgSend(a1, "_locationDataFormat:", v6);
  if (!v8)
  {
    v18 = 0uLL;
    objc_msgSend(v6, "getBytes:length:", &v18, 16);
    v16 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)&v18, *((CLLocationDegrees *)&v18 + 1));
    v14 = 0;
    if (!+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"))
      goto LABEL_9;
    v17 = objc_msgSend(objc_alloc(MEMORY[0x1E0C9E3B8]), "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v7, v16.latitude, v16.longitude, 0.0, 0.0, 0.0);
LABEL_13:
    v14 = (void *)v17;
    goto LABEL_9;
  }
  if (v8 == 1)
  {
    objc_msgSend(MEMORY[0x1E0CB3710], "pl_safeUnarchiveObjectFromData:class:", v6, objc_opt_class());
    v17 = objc_claimAutoreleasedReturnValue();
    goto LABEL_13;
  }
  if (v8 != 2)
  {
LABEL_8:
    v14 = 0;
    goto LABEL_9;
  }
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  objc_msgSend(v6, "getBytes:length:", &v18, 64);
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)&v18, *((CLLocationDegrees *)&v18 + 1));
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", *((double *)&v11 + 1));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", v12.latitude, v12.longitude))
  {
    v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C9E3B8]), "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:", v13, v12.latitude, v12.longitude, v9, v10, *(double *)&v11);
  }
  else
  {
    v14 = 0;
  }

LABEL_9:
  return v14;
}

- (id)documentObservation
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v9;
  void *v10;
  id v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (documentObservation_onceToken != -1)
    dispatch_once(&documentObservation_onceToken, &__block_literal_global_7539);
  if (!documentObservation_observationClass)
    return 0;
  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "characterRecognitionAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "characterRecognitionData");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    v11 = 0;
    objc_msgSend(MEMORY[0x1E0CB3710], "unarchivedObjectOfClass:fromData:error:", documentObservation_observationClass, v5, &v11);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v11;
    if (!v6 && os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v13 = v10;
      v14 = 2112;
      v15 = v7;
      _os_log_error_impl(&dword_199541000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "Failed to unarchive OCR VNDocumentObservation for asset: %{public}@, error: %@", buf, 0x16u);

    }
  }
  else
  {
    v6 = 0;
  }
  v9 = v6;

  return v9;
}

void __42__PLManagedAsset_OCR__documentObservation__block_invoke()
{
  uint8_t v0[16];

  documentObservation_observationClass = (uint64_t)NSClassFromString(CFSTR("VNDocumentObservation"));
  if (!documentObservation_observationClass && os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v0 = 0;
    _os_log_error_impl(&dword_199541000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "VNDocumentObservation not available in current process.", v0, 2u);
  }
}

- (BOOL)attemptPromoteFromUnknownKindUsingCloudMaster
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  BOOL v20;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset master](self, "master");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "uniformTypeIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "allMasterResources");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(MEMORY[0x1E0D11440], "imageDerivativeTypes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "predicateWithFormat:", CFSTR("cplType IN %@"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "filteredSetUsingPredicate:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "count");

  if (v10)
  {
    if (*MEMORY[0x1E0D115D0])
    {
      v13 = 0;
      goto LABEL_12;
    }
    __CPLAssetsdOSLogDomain();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v23 = v4;
      v24 = 2112;
      v25 = v12;
      v26 = 2112;
      v27 = v3;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Guessing PLAssetTypeImage for UTI: %@ on asset: %@ from master %@", buf, 0x20u);

    }
    v13 = 0;
  }
  else
  {
    v14 = (void *)MEMORY[0x1E0CB3880];
    objc_msgSend(MEMORY[0x1E0D11440], "videoDerivativeTypes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "predicateWithFormat:", CFSTR("cplType IN %@"), v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "filteredSetUsingPredicate:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "count");

    if (!v18)
    {
      v20 = 0;
      goto LABEL_13;
    }
    if (*MEMORY[0x1E0D115D0])
    {
      v13 = 1;
      goto LABEL_12;
    }
    __CPLAssetsdOSLogDomain();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v23 = v4;
      v24 = 2112;
      v25 = v19;
      v26 = 2112;
      v27 = v3;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Guessing PLAssetTypeVideo for UTI: %@ on asset: %@ from master %@", buf, 0x20u);

    }
    v13 = 1;
  }

LABEL_12:
  -[PLManagedAsset updateAssetKindAndPlaybackStyleIfNeededWithKind:](self, "updateAssetKindAndPlaybackStyleIfNeededWithKind:", v13);
  v20 = 1;
LABEL_13:

  return v20;
}

- (BOOL)promoteFromUnknownKind
{
  void *v3;
  void *v4;
  uint64_t v5;
  BOOL v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;

  if (-[PLManagedAsset kind](self, "kind") == 3)
  {
    -[PLManagedAsset originalUniformTypeIdentifier](self, "originalUniformTypeIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC520]) & 1) != 0)
    {
      v5 = 0;
    }
    else
    {
      if ((objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC568]) & 1) == 0)
      {
        if (!-[PLManagedAsset attemptPromoteFromUnknownKindUsingCloudMaster](self, "attemptPromoteFromUnknownKindUsingCloudMaster"))
        {
          v6 = 0;
LABEL_11:

          return v6;
        }
LABEL_8:
        -[PLManagedObject photoLibrary](self, "photoLibrary");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "thumbnailManager");
        v8 = (void *)objc_claimAutoreleasedReturnValue();

        -[PLManagedAsset thumbnailIdentifier](self, "thumbnailIdentifier");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = (int)-[PLManagedAsset thumbnailIndex](self, "thumbnailIndex");
        -[PLManagedAsset uuid](self, "uuid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "deleteThumbnailsWithIdentifier:orIndex:uuid:", v9, v10, v11);

        -[PLManagedAsset setEffectiveThumbnailIndex:](self, "setEffectiveThumbnailIndex:", 0x7FFFFFFFFFFFFFFFLL);
        -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v12)
          -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v3);

        v6 = 1;
        goto LABEL_11;
      }
      v5 = 1;
    }
    -[PLManagedAsset updateAssetKindAndPlaybackStyleIfNeededWithKind:](self, "updateAssetKindAndPlaybackStyleIfNeededWithKind:", v5);
    goto LABEL_8;
  }
  return 0;
}

+ (id)assetsToConsiderForTypePromotionInContext:(id)a3 withExtensions:(id)a4 error:(id *)a5
{
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id obj;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _QWORD v40[2];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  if (!v9)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+NewFormats.m"), 60, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("context"));

  }
  v33 = v9;
  if (!v10)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+NewFormats.m"), 61, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("extensions"));

  }
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("kind = %d"), 3);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  obj = v10;
  v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v37;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v37 != v14)
          objc_enumerationMutation(obj);
        v16 = (void *)MEMORY[0x1E0CB3880];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR(".%@"), *(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * i));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "predicateWithFormat:", CFSTR("filename ENDSWITH[c] %@"), v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "addObject:", v18);

      }
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
    }
    while (v13);
  }

  v19 = (void *)MEMORY[0x1E0CB3528];
  v40[0] = v32;
  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v11);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v40[1] = v20;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v40, 2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "andPredicateWithSubpredicates:", v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  v23 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "fetchRequestWithEntityName:", v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v25, "setFetchBatchSize:", 100);
  objc_msgSend(v25, "setPredicate:", v22);
  v35 = 0;
  objc_msgSend(v33, "executeFetchRequest:error:", v25, &v35);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = v35;
  v28 = v27;
  if (a5 && v27)
    *a5 = objc_retainAutorelease(v27);

  return v26;
}

- (void)dealloc
{
  NSString *reverseGeoDescription;
  objc_super v4;

  -[PLManagedAsset unregisterForChanges](self, "unregisterForChanges");
  -[PLManagedAsset setIsInFlight:](self, "setIsInFlight:", 0);
  reverseGeoDescription = self->_reverseGeoDescription;
  self->_reverseGeoDescription = 0;

  v4.receiver = self;
  v4.super_class = (Class)PLManagedAsset;
  -[PLManagedAsset dealloc](&v4, sel_dealloc);
}

- (void)awakeFromInsert
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  objc_super v8;

  v8.receiver = self;
  v8.super_class = (Class)PLManagedAsset;
  -[PLManagedAsset awakeFromInsert](&v8, sel_awakeFromInsert);
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  PLSafeInsertNewObjectForEntityForNameInManagedObjectContext((uint64_t)v4, (uint64_t)v3, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    -[PLManagedAsset setAdditionalAttributes:](self, "setAdditionalAttributes:", v5);
    -[PLManagedAsset setKind:](self, "setKind:", 3);
    -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", 0);
    objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUuid:](self, "setUuid:", v6);

    -[PLManagedAsset setHdrType:](self, "setHdrType:", 0);
    -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForAwakeFromInsert"));
    -[PLManagedAsset setTrashedState:](self, "setTrashedState:", 0);
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setAddedDate:](self, "setAddedDate:", v7);

    -[PLManagedAsset registerForChanges](self, "registerForChanges");
    -[PLManagedAsset setComplete:](self, "setComplete:", 1);
  }

}

- (void)awakeFromFetch
{
  objc_super v3;

  v3.receiver = self;
  v3.super_class = (Class)PLManagedAsset;
  -[PLManagedAsset awakeFromFetch](&v3, sel_awakeFromFetch);
  -[PLManagedAsset registerForChanges](self, "registerForChanges");
}

- (void)awakeFromSnapshotEvents:(unint64_t)a3
{
  if (-[PLManagedAsset isInFlight](self, "isInFlight", a3))
  {
    if (-[PLManagedAsset hasAllThumbs](self, "hasAllThumbs"))
      -[PLManagedAsset setIsInFlight:](self, "setIsInFlight:", 0);
  }
}

- (void)willTurnIntoFault
{
  objc_super v3;

  -[PLManagedAsset unregisterForChanges](self, "unregisterForChanges");
  v3.receiver = self;
  v3.super_class = (Class)PLManagedAsset;
  -[PLManagedAsset willTurnIntoFault](&v3, sel_willTurnIntoFault);
}

- (void)didTurnIntoFault
{
  NSString *reverseGeoDescription;
  objc_super v4;

  reverseGeoDescription = self->_reverseGeoDescription;
  self->_reverseGeoDescription = 0;

  self->_isLocatedAtHome = 0;
  self->_didLoadReverseGeo = 0;
  v4.receiver = self;
  v4.super_class = (Class)PLManagedAsset;
  -[PLManagedAsset didTurnIntoFault](&v4, sel_didTurnIntoFault);
}

- (NSSet)allDetectedFaces
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset detectedFaces](self, "detectedFaces");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v3, "mutableCopy");

  -[PLManagedAsset temporalDetectedFaces](self, "temporalDetectedFaces");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "unionSet:", v5);

  v6 = (void *)objc_msgSend(v4, "copy");
  return (NSSet *)v6;
}

- (int64_t)width
{
  int64_t width;

  -[PLManagedAsset willAccessValueForKey:](self, "willAccessValueForKey:", CFSTR("width"));
  width = self->_width;
  -[PLManagedAsset didAccessValueForKey:](self, "didAccessValueForKey:", CFSTR("width"));
  return width;
}

- (void)setWidth:(int64_t)a3
{
  -[PLManagedAsset willChangeValueForKey:](self, "willChangeValueForKey:", CFSTR("width"));
  self->_width = a3;
  -[PLManagedAsset didChangeValueForKey:](self, "didChangeValueForKey:", CFSTR("width"));
}

- (int64_t)height
{
  int64_t height;

  -[PLManagedAsset willAccessValueForKey:](self, "willAccessValueForKey:", CFSTR("height"));
  height = self->_height;
  -[PLManagedAsset didAccessValueForKey:](self, "didAccessValueForKey:", CFSTR("height"));
  return height;
}

- (void)setHeight:(int64_t)a3
{
  -[PLManagedAsset willChangeValueForKey:](self, "willChangeValueForKey:", CFSTR("height"));
  self->_height = a3;
  -[PLManagedAsset didChangeValueForKey:](self, "didChangeValueForKey:", CFSTR("height"));
}

- (CGSize)unorientedSize
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  double v6;
  double v7;
  _BOOL4 v8;
  double v9;
  CGSize result;

  v3 = -[PLManagedAsset width](self, "width");
  v4 = -[PLManagedAsset height](self, "height");
  v5 = -[PLManagedAsset orientation](self, "orientation");
  if (v5 == 8 || v5 == 6)
  {
    v6 = (double)v4;
    v7 = (double)v3;
    v8 = 1;
  }
  else
  {
    v8 = (unint64_t)(v5 - 5) < 4;
    v6 = (double)v4;
    v7 = (double)v3;
    v9 = (double)v3;
    if ((unint64_t)(v5 - 5) > 3)
      goto LABEL_6;
  }
  v9 = v6;
LABEL_6:
  if (v8)
    v6 = v7;
  result.height = v6;
  result.width = v9;
  return result;
}

- (PLManagedAssetID)assetID
{
  PLManagedAssetID *assetID;
  PLManagedAssetID *v4;
  PLManagedAssetID *v5;

  assetID = self->_assetID;
  if (!assetID)
  {
    v4 = -[PLManagedAssetID initWithManagedAsset:]([PLManagedAssetID alloc], "initWithManagedAsset:", self);
    v5 = self->_assetID;
    self->_assetID = v4;

    assetID = self->_assetID;
  }
  return assetID;
}

- (id)libraryID
{
  void *v2;
  void *v3;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "libraryID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (BOOL)isWalrusEnabled
{
  void *v5;

  if ((MEMORY[0x19AEC0720]() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 1294, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("PLIsXcTest()"));

  }
  return 0;
}

- (NSString)originalFilename
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalFilename");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (BOOL)hasLibraryScope
{
  void *v2;
  BOOL v3;

  -[PLManagedAsset objectIDsForRelationshipNamed:](self, "objectIDsForRelationshipNamed:", CFSTR("libraryScope"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "count") != 0;

  return v3;
}

- (BOOL)isSuggestedForSharingByPhotos
{
  uint64_t v2;
  BOOL result;

  v2 = -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState");
  result = 1;
  if (v2 > 65537)
  {
    if (v2 != 65538 && v2 != 65552)
      return 0;
  }
  else if (v2 != 2 && v2 != 16)
  {
    return 0;
  }
  return result;
}

- (void)_handleHighlightRelationshipChangeForKey:(id)a3 forAssetCountKey:(id)a4 newValue:(id)a5
{
  id v9;
  id v10;
  id v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  BOOL v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  _QWORD v25[4];
  id v26;
  PLManagedAsset *v27;
  id v28;
  id v29;
  BOOL v30;
  BOOL v31;
  char v32;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  if (v9)
  {
    if (v10)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 1315, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("key"));

    if (v10)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 1316, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("countKey"));

LABEL_3:
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = -[PLManagedAsset hasLibraryScope](self, "hasLibraryScope");
  v14 = -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState");
  v15 = 1;
  if (v14 > 65537)
  {
    if (v14 != 65538 && v14 != 65552)
      goto LABEL_9;
  }
  else if (v14 != 2 && v14 != 16)
  {
LABEL_9:
    v15 = 0;
  }
  objc_msgSend(v12, "libraryServicesManager");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "databaseContext");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "momentLibrary");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = v12 == v18;

  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __85__PLManagedAsset__handleHighlightRelationshipChangeForKey_forAssetCountKey_newValue___block_invoke;
  v25[3] = &unk_1E3663838;
  v30 = v19;
  v31 = v13;
  v32 = v15;
  v26 = v9;
  v27 = self;
  v28 = v11;
  v29 = v10;
  v20 = v10;
  v21 = v11;
  v22 = v9;
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v21, v22, v25);

}

- (void)setHighlightBeingAssets:(id)a3
{
  -[PLManagedAsset _handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:](self, "_handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:", CFSTR("highlightBeingAssets"), CFSTR("assetsCount"), a3);
}

- (void)setHighlightBeingExtendedAssets:(id)a3
{
  -[PLManagedAsset _handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:](self, "_handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:", CFSTR("highlightBeingExtendedAssets"), CFSTR("extendedCount"), a3);
}

- (void)setHighlightBeingSummaryAssets:(id)a3
{
  -[PLManagedAsset _handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:](self, "_handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:", CFSTR("highlightBeingSummaryAssets"), CFSTR("summaryCount"), a3);
}

- (void)setDayGroupHighlightBeingAssets:(id)a3
{
  -[PLManagedAsset _handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:](self, "_handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:", CFSTR("dayGroupHighlightBeingAssets"), CFSTR("dayGroupAssetsCount"), a3);
}

- (void)setDayGroupHighlightBeingExtendedAssets:(id)a3
{
  -[PLManagedAsset _handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:](self, "_handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:", CFSTR("dayGroupHighlightBeingExtendedAssets"), CFSTR("dayGroupExtendedAssetsCount"), a3);
}

- (void)setDayGroupHighlightBeingSummaryAssets:(id)a3
{
  -[PLManagedAsset _handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:](self, "_handleHighlightRelationshipChangeForKey:forAssetCountKey:newValue:", CFSTR("dayGroupHighlightBeingSummaryAssets"), CFSTR("dayGroupSummaryAssetsCount"), a3);
}

- (NSData)reverseLocationData
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "reverseLocationData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSData *)v3;
}

- (void)setReverseLocationData:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setReverseLocationData:", v4);

}

- (BOOL)reverseLocationDataIsValid
{
  void *v2;
  void *v3;
  char v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "reverseLocationDataIsValid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "BOOLValue");

  return v4;
}

- (void)setReverseLocationDataIsValid:(BOOL)a3
{
  _BOOL8 v3;
  void *v4;
  id v5;

  v3 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setReverseLocationDataIsValid:", v4);

}

- (NSData)placeAnnotationData
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "placeAnnotationData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSData *)v3;
}

- (void)setPlaceAnnotationData:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPlaceAnnotationData:", v4);

}

- (signed)importedBy
{
  void *v2;
  signed __int16 v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "importedBy");

  return v3;
}

- (void)setImportedBy:(signed __int16)a3
{
  uint64_t v3;
  id v4;

  v3 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setImportedBy:", v3);

}

- (CLLocation)shiftedLocation
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "shiftedLocation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (CLLocation *)v3;
}

- (void)setShiftedLocation:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setShiftedLocation:", v4);

}

- (BOOL)shiftedLocationIsValid
{
  void *v2;
  char v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "shiftedLocationIsValid");

  return v3;
}

- (void)setShiftedLocationIsValid:(BOOL)a3
{
  _BOOL8 v3;
  id v4;

  v3 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setShiftedLocationIsValid:", v3);

}

- (NSString)importedByBundleIdentifier
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "importedByBundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setImportedByBundleIdentifier:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setImportedByBundleIdentifier:", v4);

}

- (unsigned)syndicationHistory
{
  void *v2;
  unsigned __int16 v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "syndicationHistory");

  return v3;
}

- (unsigned)syndicationProcessingValue
{
  void *v2;
  unsigned __int16 v3;

  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "syndicationProcessingValue");

  return v3;
}

- (unint64_t)syndicationProcessingVersion
{
  void *v2;
  unint64_t v3;

  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "syndicationProcessingVersion");

  return v3;
}

- (unint64_t)effectiveThumbnailIndex
{
  unint64_t result;

  LODWORD(result) = -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex");
  if ((result & 0x80000000) != 0)
    return 0x7FFFFFFFFFFFFFFFLL;
  else
    return (int)result;
}

- (void)setEffectiveThumbnailIndex:(unint64_t)a3
{
  int v5;

  v5 = -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex");
  if (a3 > 0x989680)
    a3 = 0xFFFFFFFFLL;
  else
    a3 = a3;
  -[PLManagedAsset setThumbnailIndex:](self, "setThumbnailIndex:", a3);
  if ((a3 & 0x80000000) != 0 || v5 != -2)
    -[PLManagedAsset recalculateImageRequestHints](self, "recalculateImageRequestHints");
  else
    -[PLManagedAsset insertTableThumbImageRequestHints](self, "insertTableThumbImageRequestHints");
}

- (BOOL)hasAllThumbs
{
  return -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex") < 0x989681;
}

- (BOOL)hasMasterThumb
{
  unsigned int v2;

  v2 = -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex");
  return v2 == -2 || v2 < 0x989681;
}

- (id)thumbnailIdentifier
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  -[PLManagedAsset uuid](self, "uuid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset directory](self, "directory");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset filename](self, "filename");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[PLManagedAsset bundleScope](self, "bundleScope");
  -[PLManagedObject pathManager](self, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLThumbnailManager thumbnailIdentifierWithAssetUUID:directory:filename:bundleScope:pathManager:](PLThumbnailManager, "thumbnailIdentifierWithAssetUUID:directory:filename:bundleScope:pathManager:", v3, v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (void)setThumbnailDataFromImageProperties:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  objc_msgSend(a3, "objectForKey:", *MEMORY[0x1E0CBCB50]);
  v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", *MEMORY[0x1E0CBD1D8]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", *MEMORY[0x1E0CBD1E0]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setEmbeddedThumbnailOffset:", v4);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setEmbeddedThumbnailLength:", v5);

  objc_msgSend(v12, "objectForKey:", CFSTR("JPEGInterchangeFormatWidth"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", CFSTR("JPEGInterchangeFormatHeight"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setEmbeddedThumbnailWidth:", v8);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setEmbeddedThumbnailHeight:", v9);

}

- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 forceSRGBConversion:(BOOL)a7
{
  uint64_t v7;

  LOWORD(v7) = 256;
  -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:", a3, a4, a5, a6, 0, a7, v7);
}

- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 metadata:(id)a7 forceSRGBConversion:(BOOL)a8 saveCameraPreviewWellImage:(BOOL)a9
{
  uint64_t v9;

  BYTE1(v9) = a9;
  LOBYTE(v9) = 0;
  -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:", a3, a4, a5, a6, a7, a8, v9);
}

- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 metadata:(id)a7 forceSRGBConversion:(BOOL)a8 forFinalCameraImage:(BOOL)a9 saveCameraPreviewWellImage:(BOOL)a10
{
  _BOOL8 v10;
  uint64_t v16;
  unint64_t v17;
  id v18;
  NSObject *v19;
  const __CFData *v20;
  NSObject *v21;
  const __CFData *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  NSObject *v27;
  const __CFData *v28;
  void *v29;
  void *v30;
  int v31;
  id v32;
  const __CFDictionary *v33;
  void *v34;
  CGImageSource *v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  PLImageContainer *v43;
  void *v44;
  void *v45;
  PLImageContainer *v46;
  id v47;
  NSObject *v48;
  const __CFData *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char v66;
  void *context;
  void *v68;
  id v69;
  const __CFData *data;
  _QWORD v71[4];
  id v72;
  id v73;
  _QWORD v74[5];
  id v75;
  id v76;
  id v77;
  id v78;
  char v79;
  uint8_t buf[4];
  const __CFData *v81;
  __int16 v82;
  unint64_t v83;
  __int16 v84;
  void *v85;
  uint64_t v86;
  _QWORD v87[4];

  v10 = a8;
  v87[1] = *MEMORY[0x1E0C80C00];
  v16 = (uint64_t)a3;
  v17 = (unint64_t)a4;
  data = (const __CFData *)a6;
  v18 = a7;
  context = (void *)MEMORY[0x19AEC1554]();
  if (!(v16 | v17)
    && -[PLManagedAsset resetVideoKeyFrameTimeAndDeleteKeyFrameResource](self, "resetVideoKeyFrameTimeAndDeleteKeyFrameResource"))
  {
    PLThumbnailsGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v20 = (const __CFData *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v81 = v20;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_INFO, "Reset media analysis key frame due to generating thumbs for asset %{public}@", buf, 0xCu);

    }
  }
  PLThumbnailsGetLog();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v22 = (const __CFData *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v81 = v22;
    _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEBUG, "[RM]: generating and updating thumbnails for asset %@", buf, 0xCu);

  }
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "thumbnailManager");
  v24 = objc_claimAutoreleasedReturnValue();

  v25 = -[PLManagedAsset effectiveThumbnailIndex](self, "effectiveThumbnailIndex");
  if (!-[PLManagedAsset hasAllThumbs](self, "hasAllThumbs"))
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = +[PLThumbnailIndexes nextAvailableThumbnailIndexInLibrary:](PLThumbnailIndexes, "nextAvailableThumbnailIndexInLibrary:", v26);

  }
  -[PLManagedAsset setEffectiveThumbnailIndex:](self, "setEffectiveThumbnailIndex:", v25);
  PLThumbnailsGetLog();
  v27 = objc_claimAutoreleasedReturnValue();
  v69 = v18;
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v28 = (const __CFData *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v81 = v28;
    v82 = 2048;
    v83 = v25;
    _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_DEBUG, "[RM]: setting effective thumbnail index for %@ at index %lu", buf, 0x16u);

    v18 = v69;
  }

  v68 = (void *)v24;
  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = (void *)v17;
    if (objc_msgSend(v29, "isCloudPhotoLibraryEnabled")
      && -[PLManagedAsset cloudPlaceholderKind](self, "cloudPlaceholderKind") == 3)
    {
      v31 = !-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset");
    }
    else
    {
      v31 = 0;
    }

  }
  else
  {
    v30 = (void *)v17;
    v31 = 0;
  }
  v79 = 0;
  if (-[PLManagedAsset isVideo](self, "isVideo")
    && -[PLManagedAsset isBundleScopeSyndication](self, "isBundleScopeSyndication")
    || -[PLManagedAsset isPhoto](self, "isPhoto")
    || ((-[PLManagedAsset isStreamedVideo](self, "isStreamedVideo") | v31) & 1) != 0
    || -[PLManagedAsset hasUnrenderedAsyncAdjustments](self, "hasUnrenderedAsyncAdjustments"))
  {
    if (a5)
    {
      if (v16)
      {
LABEL_26:
        LOBYTE(v63) = v79;
        -[PLManagedAsset generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:](self, "generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:", a5, data, v18, 1, v10, a9, 0, v63);
        v32 = 0;
        goto LABEL_40;
      }
LABEL_39:
      v77 = 0;
      LOBYTE(v63) = v79;
      -[PLManagedAsset generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:](self, "generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:", a5, data, v18, 1, v10, a9, &v77, v63);
      v32 = v77;
      v16 = DCIM_newPLImageWithData();
LABEL_40:
      if (v31)
      {
        -[PLManagedAsset fileURLForThumbnailFile](self, "fileURLForThumbnailFile");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v40 = v30;
        +[PLManagedAsset createTHMFileWithPreviewImage:thumbnailImage:fileURLForThumbnailFile:](PLManagedAsset, "createTHMFileWithPreviewImage:thumbnailImage:fileURLForThumbnailFile:", v16, v30, v39);

        v41 = v68;
        v18 = v69;
        v42 = (uint64_t)v32;
      }
      else
      {
        v42 = (uint64_t)v32;
        v40 = v30;
        v41 = v68;
      }
      goto LABEL_43;
    }
    if (data)
    {
      v33 = 0;
      v34 = 0;
    }
    else
    {
      v78 = 0;
      -[PLManagedAsset imageDataForThumbGenerationAndIfNeededRAWUTI:isPreviewSource:](self, "imageDataForThumbGenerationAndIfNeededRAWUTI:isPreviewSource:", &v78, &v79);
      v36 = objc_claimAutoreleasedReturnValue();
      v37 = v78;
      v34 = v37;
      data = (const __CFData *)v36;
      if (!v36)
      {
        data = 0;
        a5 = 0;
        goto LABEL_38;
      }
      if (v37)
      {
        v86 = *MEMORY[0x1E0CBD2A8];
        v87[0] = v37;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v87, &v86, 1);
        v33 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v33 = 0;
      }
    }
    v35 = CGImageSourceCreateWithData(data, v33);
    a5 = v35;
    if (v35)
    {
      CFAutorelease(v35);
    }
    else
    {
      PLThumbnailsGetLog();
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      {
        v64 = -[__CFData length](data, "length");
        -[PLManagedAsset _compactDebugDescription](self, "_compactDebugDescription");
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 134218498;
        v81 = data;
        v82 = 2048;
        v83 = v64;
        v84 = 2114;
        v85 = v65;
        _os_log_impl(&dword_199541000, v38, OS_LOG_TYPE_ERROR, "Unable to generate image source from data %p (length %lu) for asset %{public}@", buf, 0x20u);

      }
      v18 = v69;
    }

LABEL_38:
    if (v16)
      goto LABEL_26;
    goto LABEL_39;
  }
  if (!-[PLManagedAsset isVideo](self, "isVideo"))
  {
    v40 = v30;
    v41 = v68;
    goto LABEL_52;
  }
  if (v16 && v30)
  {
    v42 = 0;
    v47 = v30;
    v41 = v68;
  }
  else
  {
    -[PLManagedAsset pathForVideoFile](self, "pathForVideoFile");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    v76 = (id)v16;
    v74[4] = self;
    v75 = v30;
    v74[0] = MEMORY[0x1E0C809B0];
    v74[1] = 3221225472;
    v74[2] = __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke;
    v74[3] = &unk_1E3663860;
    PLPreviewImageAndDurationForVideoAtPathWithPreferredTime(0, v58, &v76, &v75, v74);
    v59 = v76;

    v47 = v75;
    if (v59)
    {
      v42 = 0;
      v16 = (uint64_t)v59;
      v41 = v68;
      v18 = v69;
    }
    else
    {
      -[PLManagedAsset imageDataForThumbGenerationAndIfNeededRAWUTI:isPreviewSource:](self, "imageDataForThumbGenerationAndIfNeededRAWUTI:isPreviewSource:", 0, 0);
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = (uint64_t)v60;
      v41 = v68;
      if (v60)
      {
        v61 = v60;
        v16 = DCIM_newPLImageWithData();
      }
      else
      {
        v16 = 0;
      }
      v18 = v69;

    }
  }
  -[PLManagedAsset pathForVideoPreviewFile](self, "pathForVideoPreviewFile");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  PLWriteImageWithEmbeddedThumbnailToPath(v16, v47, v62);

  -[PLManagedAsset fileURLForThumbnailFile](self, "fileURLForThumbnailFile");
  v32 = (id)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset createTHMFileWithPreviewImage:thumbnailImage:fileURLForThumbnailFile:](PLManagedAsset, "createTHMFileWithPreviewImage:thumbnailImage:fileURLForThumbnailFile:", v16, v47, v32);
  v40 = v47;
LABEL_43:

  if (v42)
  {
    v43 = [PLImageContainer alloc];
    v44 = 0;
LABEL_45:
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = -[PLImageContainer initWithPLImage:backingData:uniformTypeIdentifier:auxiliaryImageRecords:](v43, "initWithPLImage:backingData:uniformTypeIdentifier:auxiliaryImageRecords:", v16, v42, v45, v44);

    goto LABEL_59;
  }
LABEL_52:
  DCIM_storedJPEGDataFromImage();
  v42 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D75130], "auxiliaryImageRecordsToPreserveForDerivativesFromPrimaryImageInImageSource:", a5);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  if (v16 | v42)
  {
    v43 = [PLImageContainer alloc];
    if (v42)
      goto LABEL_45;
  }
  else
  {
    PLThumbnailsGetLog();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset _compactDebugDescription](self, "_compactDebugDescription");
      v49 = (const __CFData *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v81 = v49;
      _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_ERROR, "Missing preview image and data to set as thumbnail for asset %{public}@", buf, 0xCu);

    }
    v43 = [PLImageContainer alloc];
  }
  v46 = -[PLImageContainer initWithPLImage:backingData:uniformTypeIdentifier:auxiliaryImageRecords:](v43, "initWithPLImage:backingData:uniformTypeIdentifier:auxiliaryImageRecords:", v16, 0, 0, v44);
  v42 = 0;
LABEL_59:
  objc_msgSend(v41, "setThumbnailsForAsset:withImage:", self, v46);
  if (a10)
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v50, "libraryServicesManager");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v51, "isSystemPhotoLibrary")
      || !PLCameraPreviewWellSupportedOnCurrentDevice())
    {
LABEL_72:

      goto LABEL_73;
    }
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "thumbnailManager");
    v53 = v16;
    v54 = v40;
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v66 = objc_msgSend(v55, "isRebuildingThumbnails");

    v40 = v54;
    v16 = v53;
    v41 = v68;

    v18 = v69;
    if ((v66 & 1) == 0)
    {
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v50, "libraryServicesManager");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v56, "cameraPreviewWellManager");
      v51 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v51, "shouldReconsiderCameraPreviewWellImageForUpdatedAsset:thumbnailWasGenerated:", self, 1))
      {
        objc_msgSend(v50, "managedObjectContext");
        v57 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v50, "pendingTransactions"))
        {
          v71[0] = MEMORY[0x1E0C809B0];
          v71[1] = 3221225472;
          v71[2] = __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke_286;
          v71[3] = &unk_1E3677C18;
          v72 = v51;
          v73 = v57;
          objc_msgSend(v50, "addCompletionHandlerToCurrentTransaction:", v71);

        }
        else
        {
          objc_msgSend(v51, "refreshPreviewWellImageWithContext:avoidNotificationIfLinkIsAlreadySet:", v57, 0);
        }
        v41 = v68;

      }
      else
      {
        v41 = v68;
      }
      goto LABEL_72;
    }
  }
LABEL_73:

  objc_autoreleasePoolPop(context);
}

- (id)_sizeOfVideoPreviewForAVAsset:(id)a3
{
  id v4;
  int v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  BOOL v16;
  double v17;
  double v18;
  NSObject *v19;
  void *v20;
  void *v22;
  _QWORD v24[4];
  int v25;
  uint8_t buf[4];
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    v5 = 2;
  else
    v5 = 0;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __48__PLManagedAsset__sizeOfVideoPreviewForAVAsset___block_invoke;
  v24[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  v25 = v5;
  -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", v24);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  v8 = *MEMORY[0x1E0C9D820];
  v9 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  if (v6)
  {
    v10 = (double)objc_msgSend(v6, "orientedWidth");
    v11 = (double)objc_msgSend(v7, "orientedHeight");
  }
  else
  {
    +[PLManagedAsset dimensionsForAVAsset:](PLManagedAsset, "dimensionsForAVAsset:", v4);
    if (v12 <= 0.0 || (v14 = v13, v13 <= 0.0))
    {
      PLThumbnailsGetLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v27 = v20;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Asset %{public}@ attempting to size preview image for video with 0 dimensions", buf, 0xCu);

      }
      v11 = v9;
      v10 = v8;
    }
    else
    {
      v10 = v12;
      objc_msgSend(MEMORY[0x1E0D11440], "maxPixelSizeForResourceType:", 4);
      PFScaleFactorForMaximumPixelCount();
      v16 = v15 < 1.0;
      v17 = v10 * v15;
      v18 = v14 * v15;
      if (v16)
        v11 = v18;
      else
        v11 = v14;
      if (v16)
        v10 = v17;
    }
  }
  if (v10 == v8 && v11 == v9)
  {
    v22 = 0;
  }
  else
  {
    DCIM_NSValueFromCGSize();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v22;
}

- (PLRevGeoPlaceAnnotation)placeAnnotation
{
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  id v9;
  uint8_t buf[4];
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset placeAnnotationData](self, "placeAnnotationData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v9 = 0;
    objc_msgSend(MEMORY[0x1E0CB3710], "unarchivedObjectOfClass:fromData:error:", objc_opt_class(), v3, &v9);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v9;
    if (!v4)
    {
      PLBackendGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v11 = v7;
        v12 = 2114;
        v13 = v5;
        _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Failed to read placeAnnotation from asset with ID %{public}@, error:%{public}@", buf, 0x16u);

      }
    }

  }
  else
  {
    v4 = 0;
  }

  return (PLRevGeoPlaceAnnotation *)v4;
}

- (PLRevGeoLocationInfo)locationInfo
{
  void *v2;
  void *v3;

  -[PLManagedAsset reverseLocationData](self, "reverseLocationData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLRevGeoLocationInfo infoFromPlistData:](PLRevGeoLocationInfo, "infoFromPlistData:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (PLRevGeoLocationInfo *)v3;
}

- (void)setImportSessionAlbumWithImportSessionID:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  const char *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  _BYTE v20[24];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    -[PLManagedAsset importSession](self, "importSession");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "importSessionID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqualToString:", v4);

    if ((v8 & 1) != 0)
    {
LABEL_18:

      goto LABEL_19;
    }
    objc_msgSend(v5, "userInfo");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("importSessionObjectIDCache"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "userInfo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "setObject:forKeyedSubscript:", v10, CFSTR("importSessionObjectIDCache"));

    }
    objc_msgSend(v10, "objectForKeyedSubscript:", v4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12
      && (objc_msgSend(v5, "objectRegisteredForID:", v12), (v13 = (void *)objc_claimAutoreleasedReturnValue()) != 0)
      || (+[PLImportSession albumWithImportSessionID:inManagedObjectContext:](PLImportSession, "albumWithImportSessionID:inManagedObjectContext:", v4, v5), (v13 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      PLBackendGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v20 = 138412546;
        *(_QWORD *)&v20[4] = v4;
        *(_WORD *)&v20[12] = 2112;
        *(_QWORD *)&v20[14] = v15;
        v16 = "Found importSessionAlbum (%@) for asset uuid %@";
LABEL_12:
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_INFO, v16, v20, 0x16u);

      }
    }
    else
    {
      +[PLImportSession insertNewImportSessionAlbumWithImportSessionID:inManagedObjectContext:](PLImportSession, "insertNewImportSessionAlbumWithImportSessionID:inManagedObjectContext:", v4, v5);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      PLBackendGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v20 = 138412546;
        *(_QWORD *)&v20[4] = v4;
        *(_WORD *)&v20[12] = 2112;
        *(_QWORD *)&v20[14] = v15;
        v16 = "Created importSessionAlbum (%@) for asset uuid %@";
        goto LABEL_12;
      }
    }

    if (v6)
    {
      PLBackendGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v20 = 138412802;
        *(_QWORD *)&v20[4] = v6;
        *(_WORD *)&v20[12] = 2112;
        *(_QWORD *)&v20[14] = v4;
        *(_WORD *)&v20[22] = 2112;
        v21 = v18;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Changed importSessionAlbum (%@) to (%@) for asset uuid %@", v20, 0x20u);

      }
    }
    -[PLManagedAsset setImportSession:](self, "setImportSession:", v13, *(_OWORD *)v20, *(_QWORD *)&v20[16]);
    objc_msgSend(v13, "updateImportDatesFromAddedAsset:", self);
    objc_msgSend(v13, "objectID");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setObject:forKeyedSubscript:", v19, v4);

    goto LABEL_18;
  }
LABEL_19:

}

- (void)prepareForDeletion
{
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  objc_super v30;
  uint8_t buf[4];
  void *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v30.receiver = self;
  v30.super_class = (Class)PLManagedAsset;
  -[PLManagedObject prepareForDeletion](&v30, sel_prepareForDeletion);
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    +[PLDelayedSearchIndexUpdates recordAssetIfNeeded:](PLDelayedSearchIndexUpdates, "recordAssetIfNeeded:", self);
    if ((objc_msgSend(v3, "mergingChanges") & 1) == 0)
    {
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v4, "isCloudPhotoLibraryEnabled");

      if (v5)
      {
        -[PLManagedAsset master](self, "master");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = v6;
        if (v6)
        {
          if ((objc_msgSend(v6, "isDeleted") & 1) == 0)
          {
            -[PLManagedAsset uuid](self, "uuid");
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v9 = objc_msgSend(v7, "hasResourcesOtherThanForAssetUuid:", v8);

            if ((v9 & 1) == 0)
            {
              PLBackendGetLog();
              v10 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
              {
                objc_msgSend(v7, "pl_shortDescription");
                v11 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543362;
                v32 = v11;
                _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_INFO, "Deleting master %{public}@, last resource was removed since we deleted the asset", buf, 0xCu);

              }
              objc_msgSend(v3, "deleteObject:", v7);
            }
          }
        }

      }
      if (PLPlatformMomentsSupported())
      {
        objc_msgSend(v3, "delayedSaveActions");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "recordAssetForMomentUpdate:", self);

      }
      objc_msgSend(v3, "recordAvalancheUUIDForUpdate:", self);
      if (!self->_didPrepareForDeletion)
      {
        self->_didPrepareForDeletion = 1;
        if (-[PLManagedAsset savedAssetTypeIsSupportedForUpload](self, "savedAssetTypeIsSupportedForUpload")
          && !-[PLManagedAsset isMomentSharedAsset](self, "isMomentSharedAsset")
          && !-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset")
          && !-[PLManagedAsset isLocalOnlyDelete](self, "isLocalOnlyDelete"))
        {
          objc_msgSend(v3, "recordCloudDeletionForObject:", self);
        }
        if (PLIsAssetsd()
          && (-[PLManagedAsset hasOutstandingDeferredCaptureProcessing](self, "hasOutstandingDeferredCaptureProcessing")
           || -[PLManagedAsset hasUnrenderedAsyncAdjustments](self, "hasUnrenderedAsyncAdjustments")))
        {
          -[PLManagedAsset requestDeletionOfDeferredPhotoProcessingIntermediates](self, "requestDeletionOfDeferredPhotoProcessingIntermediates");
        }
        +[PLFilesystemDeletionInfo deletionInfoWithAsset:](PLFilesystemDeletionInfo, "deletionInfoWithAsset:", self);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (v13)
        {
          if (!PLIsAssetsd())
          {
            PLBackendGetLog();
            v26 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
            {
              -[PLManagedAsset uuid](self, "uuid");
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLManagedAsset mainFileURL](self, "mainFileURL");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v28, "path");
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543618;
              v32 = v27;
              v33 = 2112;
              v34 = v29;
              _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_INFO, "Registering file system deletion info for assetsd to process %{public}@ %@", buf, 0x16u);

            }
            objc_msgSend(v3, "registerFilesystemDeletionInfo:", v13);
            goto LABEL_38;
          }
          v14 = objc_opt_new();
          -[NSObject addFilesystemDeletionInfo:](v14, "addFilesystemDeletionInfo:", v13);
          -[PLManagedObject photoLibrary](self, "photoLibrary");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject deleteAllRemainingFilesAndThumbnailsWithPhotoLibrary:](v14, "deleteAllRemainingFilesAndThumbnailsWithPhotoLibrary:", v15);

          -[PLManagedObject photoLibrary](self, "photoLibrary");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "libraryServicesManager");
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v17, "wellKnownPhotoLibraryIdentifier") == 3)
          {
            -[PLManagedAsset uuid](self, "uuid");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            +[PLBackgroundJobWorkItem insertBackgroundJobWorkItemIfNeededWithIdentifier:jobType:jobFlags:inManagedObjectContext:](PLBackgroundJobWorkItem, "insertBackgroundJobWorkItemIfNeededWithIdentifier:jobType:jobFlags:inManagedObjectContext:", v18, 0, 2, v3);
            v19 = (void *)objc_claimAutoreleasedReturnValue();

            if (v19)
            {
              PLSyndicationGetLog();
              v20 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
              {
                -[PLManagedAsset uuid](self, "uuid");
                v21 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v32 = v21;
                _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEBUG, "GuestAssetSync: preparing to delete syndication asset: %@, triggering update", buf, 0xCu);

              }
            }
            objc_msgSend(v17, "backgroundJobService");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedObject photoLibrary](self, "photoLibrary");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v22, "signalBackgroundProcessingNeededOnLibrary:", v23);

          }
        }
        else
        {
          PLBackendGetLog();
          v14 = objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
LABEL_34:

LABEL_38:
            goto LABEL_39;
          }
          -[PLManagedAsset uuid](self, "uuid");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset mainFileURL](self, "mainFileURL");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "path");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v32 = v17;
          v33 = 2112;
          v34 = v25;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_INFO, "No file system deletion info for %{public}@ %@", buf, 0x16u);

        }
        goto LABEL_34;
      }
    }
  }
LABEL_39:

}

- (int64_t)cloudDeletionType
{
  return 1;
}

- (void)setVideoKeyFrameTime:(id *)a3
{
  -[PLManagedAsset setVideoKeyFrameValue:](self, "setVideoKeyFrameValue:", a3->var0);
  -[PLManagedAsset setVideoKeyFrameTimeScale:](self, "setVideoKeyFrameTimeScale:", a3->var1);
}

- ($3CC8671D27C23BF42ADDB32F2B5E48AE)videoKeyFrameTime
{
  return ($3CC8671D27C23BF42ADDB32F2B5E48AE *)CMTimeMake((CMTime *)retstr, -[PLManagedAsset videoKeyFrameValue](self, "videoKeyFrameValue"), -[PLManagedAsset videoKeyFrameTimeScale](self, "videoKeyFrameTimeScale"));
}

- (BOOL)isVideoKeyFrameSet
{
  return -[PLManagedAsset videoKeyFrameValue](self, "videoKeyFrameValue") >= 1
      && (int)-[PLManagedAsset videoKeyFrameTimeScale](self, "videoKeyFrameTimeScale") > 0;
}

- (BOOL)resetVideoKeyFrameTime
{
  uint64_t v3;
  BOOL v4;

  v3 = -[PLManagedAsset videoKeyFrameValue](self, "videoKeyFrameValue");
  v4 = v3 != 0;
  if (v3)
    -[PLManagedAsset setVideoKeyFrameValue:](self, "setVideoKeyFrameValue:", 0);
  if (-[PLManagedAsset videoKeyFrameTimeScale](self, "videoKeyFrameTimeScale"))
  {
    -[PLManagedAsset setVideoKeyFrameTimeScale:](self, "setVideoKeyFrameTimeScale:", 0);
    return 1;
  }
  return v4;
}

- (BOOL)isLocalVideoKeyFrameValid
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments")
    || -[PLManagedAsset bundleScope](self, "bundleScope") == 3)
  {
    return 0;
  }
  objc_msgSend(MEMORY[0x1E0D73310], "maskForGuestAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies() ^ 1;
}

- (BOOL)isSemanticEnhanceProcessingCandidate
{
  void *v2;
  unsigned int v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (objc_msgSend(v2, "deferredProcessingCandidateOptions") >> 3) & 1;

  return v3;
}

- (BOOL)isLocatedAtCoordinates:(CLLocationCoordinate2D)a3
{
  double longitude;
  double latitude;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v11;
  _BOOL4 v12;

  longitude = a3.longitude;
  latitude = a3.latitude;
  -[PLManagedAsset location](self, "location");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "coordinate");
    v8 = v7;
    v10 = v9;
  }
  else
  {
    v8 = *MEMORY[0x1E0C9E500];
    v10 = *(double *)(MEMORY[0x1E0C9E500] + 8);
  }
  if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", latitude, longitude))
  {
    v11 = vabdd_f64(latitude, v8) < 2.22044605e-16;
    LOBYTE(v12) = vabdd_f64(longitude, v10) < 2.22044605e-16 && v11;
  }
  else
  {
    v12 = !+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", v8, v10);
  }

  return v12;
}

- (CLLocation)location
{
  id v3;
  void *v4;
  void *v5;

  -[PLManagedAsset willAccessValueForKey:](self, "willAccessValueForKey:", CFSTR("location"));
  -[PLManagedAsset cachedLocation](self, "cachedLocation");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset didAccessValueForKey:](self, "didAccessValueForKey:", CFSTR("location"));
  if (!v3)
  {
    -[PLManagedAsset locationData](self, "locationData");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = +[PLManagedAsset newLocationFromLocationData:timestampIfMissing:](PLManagedAsset, "newLocationFromLocationData:timestampIfMissing:", v4, v5);
    if (v3)
    {
      -[PLManagedAsset willChangeValueForKey:](self, "willChangeValueForKey:", CFSTR("location"));
      -[PLManagedAsset setCachedLocation:](self, "setCachedLocation:", v3);
      -[PLManagedAsset didChangeValueForKey:](self, "didChangeValueForKey:", CFSTR("location"));
    }

  }
  return (CLLocation *)v3;
}

- (void)setLocation:(id)a3
{
  id v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  v16 = a3;
  -[PLManagedAsset willChangeValueForKey:](self, "willChangeValueForKey:", CFSTR("location"));
  -[PLManagedAsset setCachedLocation:](self, "setCachedLocation:", v16);
  -[PLManagedAsset didChangeValueForKey:](self, "didChangeValueForKey:", CFSTR("location"));
  v4 = +[PLManagedAsset newLocationDataFromLocation:](PLManagedAsset, "newLocationDataFromLocation:", v16);
  -[PLManagedAsset setLocationData:](self, "setLocationData:", v4);
  if (v4)
  {
    objc_msgSend(v16, "coordinate");
    -[PLManagedAsset setLatitude:](self, "setLatitude:");
    objc_msgSend(v16, "coordinate");
    -[PLManagedAsset setLongitude:](self, "setLongitude:", v5);
    objc_msgSend(v16, "horizontalAccuracy");
    v7 = v6;
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = -1.0;
    if (v7 != 0.0)
      objc_msgSend(v16, "horizontalAccuracy", -1.0);
    objc_msgSend(v8, "setGpsHorizontalAccuracy:", v9);

    objc_msgSend(v16, "coordinate");
    v10 = +[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:");
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v10)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v16, "pl_locationHash"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setLocationHash:", v13);

    }
    else
    {
      objc_msgSend(v11, "setLocationHash:", 0);
    }
  }
  else
  {
    v14 = MEMORY[0x1E0C9E500];
    -[PLManagedAsset setLatitude:](self, "setLatitude:", *MEMORY[0x1E0C9E500]);
    -[PLManagedAsset setLongitude:](self, "setLongitude:", *(double *)(v14 + 8));
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setLocationHash:", 0);

    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "setGpsHorizontalAccuracy:", -1.0);
  }

  -[PLManagedAsset setReverseLocationDataIsValid:](self, "setReverseLocationDataIsValid:", 0);
  -[PLManagedAsset setShiftedLocationIsValid:](self, "setShiftedLocationIsValid:", 0);

}

- (BOOL)isPhotoIris
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset isPhoto](self, "isPhoto");
  if (v3)
    LOBYTE(v3) = -[PLManagedAsset kindSubtype](self, "kindSubtype") == 2;
  return v3;
}

- (BOOL)isPhotoIrisPlaceholder
{
  PLManagedAsset *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = self;
  v3 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  v4 = -[PLManagedAsset videoCpDurationValue](v2, "videoCpDurationValue");
  v5 = -[PLManagedAsset isCloudSharedAsset](v2, "isCloudSharedAsset");
  -[PLManagedAsset pathForVideoComplementFile](v2, "pathForVideoComplementFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v2) = objc_msgSend((id)objc_opt_class(), "isPhotoIrisPlaceholderWithPhotoIris:videoCpDuration:isCloudShared:videoCpFilePath:", v3, v4, v5, v6);

  return (char)v2;
}

- (BOOL)canPlayPhotoIris
{
  return objc_msgSend((id)objc_opt_class(), "canPlayPhotoIrisWithPhotoIris:photoIrisPlaceholder:hasAdjustments:videoCpVisibilityState:", -[PLManagedAsset isPhotoIris](self, "isPhotoIris"), -[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder"), -[PLManagedAsset hasAdjustments](self, "hasAdjustments"), -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState"));
}

- (BOOL)hasAdjustedVideoComplement
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  if (v3)
  {
    v3 = -[PLManagedAsset hasAdjustments](self, "hasAdjustments");
    if (v3)
      return (-[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState") >> 3) & 1;
  }
  return v3;
}

- ($3CC8671D27C23BF42ADDB32F2B5E48AE)photoIrisStillDisplayTime
{
  void *v5;
  int64_t v6;
  void *v7;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "videoCpDisplayValue");

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v5) = objc_msgSend(v7, "videoCpDisplayTimescale");

  retstr->var0 = 0;
  *(_QWORD *)&retstr->var1 = 0;
  retstr->var3 = 0;
  return ($3CC8671D27C23BF42ADDB32F2B5E48AE *)CMTimeMake((CMTime *)retstr, v6, (int32_t)v5);
}

- (void)setPhotoIrisStillDisplayTime:(id *)a3
{
  void *v5;
  CMTime v6;
  CMTime time2;

  -[PLManagedAsset photoIrisStillDisplayTime](self, "photoIrisStillDisplayTime");
  v6 = *(CMTime *)a3;
  if (CMTimeCompare(&v6, &time2))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setVideoCpDisplayValue:", a3->var0);
    objc_msgSend(v5, "setVideoCpDisplayTimescale:", a3->var1);

  }
}

- ($3CC8671D27C23BF42ADDB32F2B5E48AE)photoIrisVideoDuration
{
  int64_t v5;
  void *v6;
  int32_t v7;

  v5 = -[PLManagedAsset videoCpDurationValue](self, "videoCpDurationValue");
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "videoCpDurationTimescale");

  retstr->var0 = 0;
  *(_QWORD *)&retstr->var1 = 0;
  retstr->var3 = 0;
  return ($3CC8671D27C23BF42ADDB32F2B5E48AE *)CMTimeMake((CMTime *)retstr, v5, v7);
}

- (void)setPhotoIrisVideoDuration:(id *)a3
{
  void *v5;
  CMTime v6;
  CMTime time2;

  -[PLManagedAsset photoIrisVideoDuration](self, "photoIrisVideoDuration");
  v6 = *(CMTime *)a3;
  if (CMTimeCompare(&v6, &time2))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setVideoCpDurationValue:](self, "setVideoCpDurationValue:", a3->var0);
    objc_msgSend(v5, "setVideoCpDurationTimescale:", a3->var1);

  }
}

- (BOOL)_hasVideoComplementData
{
  void *v3;
  BOOL v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[PLManagedAsset videoCpDurationValue](self, "videoCpDurationValue")
    || objc_msgSend(v3, "videoCpDurationTimescale")
    || objc_msgSend(v3, "videoCpDisplayValue")
    || objc_msgSend(v3, "videoCpDisplayTimescale") != 0;

  return v4;
}

- (id)videoComplementData
{
  void *v3;
  id v4;
  CMTime v6;
  CMTime v7;
  CMTime v8;
  CMTime v9;

  if (!-[PLManagedAsset _hasVideoComplementData](self, "_hasVideoComplementData"))
    return 0;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  memset(&v9, 0, sizeof(v9));
  CMTimeMake(&v9, objc_msgSend(v3, "videoCpDisplayValue"), objc_msgSend(v3, "videoCpDisplayTimescale"));
  memset(&v8, 0, sizeof(v8));
  CMTimeMake(&v8, -[PLManagedAsset videoCpDurationValue](self, "videoCpDurationValue"), objc_msgSend(v3, "videoCpDurationTimescale"));
  v7 = v9;
  v6 = v8;
  v4 = +[PLAdditionalAssetAttributes newExtraDurationDataFromStillDisplayTime:videoDuration:](PLAdditionalAssetAttributes, "newExtraDurationDataFromStillDisplayTime:videoDuration:", &v7, &v6);

  return v4;
}

- (void)_setVideoComplementData:(id)a3
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v8 = *MEMORY[0x1E0CA2E18];
  v9 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
  v6 = v8;
  v7 = v9;
  +[PLAdditionalAssetAttributes fromExtraDurationData:getStillDisplayTime:videoDuration:](PLAdditionalAssetAttributes, "fromExtraDurationData:getStillDisplayTime:videoDuration:", a3, &v8, &v6);
  v4 = v6;
  v5 = v7;
  -[PLManagedAsset setPhotoIrisVideoDuration:](self, "setPhotoIrisVideoDuration:", &v4);
  v4 = v8;
  v5 = v9;
  -[PLManagedAsset setPhotoIrisStillDisplayTime:](self, "setPhotoIrisStillDisplayTime:", &v4);
}

- (id)photoIrisSidecarIgnoringSubtype:(BOOL)a3
{
  void *v4;

  if (a3 || -[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
  {
    -[PLManagedAsset sidecarFileMatchingContentType:requireExactMatch:requireSort:](self, "sidecarFileMatchingContentType:requireExactMatch:requireSort:", *MEMORY[0x1E0CEC568], 0, 1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

- (void)_updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  CMTime *v7;
  NSObject *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v14;
  NSObject *v15;
  void *v16;
  const __CFString *v17;
  CMTimeEpoch epoch;
  __int128 v19;
  CMTime time2;
  CMTime v21[2];
  CMTime buf;
  NSObject *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PFVideoComplementMetadataForVideoAVAssetPreloadingValues();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  memset(&v21[1], 0, sizeof(CMTime));
  v7 = (CMTime *)MEMORY[0x1E0CA2E18];
  if (!v5)
  {
    memset(v21, 0, 24);
    goto LABEL_8;
  }
  objc_msgSend(v5, "videoDuration");
  memset(v21, 0, 24);
  objc_msgSend(v6, "imageDisplayTime");
  if (v21[1].value)
    goto LABEL_18;
  if ((v21[0].flags & 1) == 0)
  {
LABEL_8:
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_14;
    v10 = v4;
    objc_msgSend(v10, "URL");
    v11 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    -[NSObject path](v11, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v12, "fileExistsAtPath:", v13);

    if (v11)
    {
      PLPhotoEditGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = CFSTR("does not");
        LODWORD(buf.value) = 138543874;
        *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v16;
        LOWORD(buf.flags) = 2112;
        if (v14)
          v17 = CFSTR("does");
        *(_QWORD *)((char *)&buf.flags + 2) = v17;
        HIWORD(buf.epoch) = 2112;
        v23 = v11;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_FAULT, "asset %{public}@ photo iris still display time is invalid and duration is 0, rejecting times, backing video file %@ exist at url: %@", (uint8_t *)&buf, 0x20u);

      }
    }
    else
    {
LABEL_14:
      PLPhotoEditGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
      {
LABEL_17:

        v21[1] = *v7;
        goto LABEL_18;
      }
      -[PLManagedAsset uuid](self, "uuid");
      v15 = objc_claimAutoreleasedReturnValue();
      LODWORD(buf.value) = 138543618;
      *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v15;
      LOWORD(buf.flags) = 2112;
      *(_QWORD *)((char *)&buf.flags + 2) = v4;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_FAULT, "asset %{public}@ photo iris still display time is invalid and duration is 0, rejecting times, likely failed to read temporal metadata from avasset: %@", (uint8_t *)&buf, 0x16u);
    }

    goto LABEL_17;
  }
  PLPhotoEditGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(buf.value) = 138543618;
    *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v9;
    LOWORD(buf.flags) = 2112;
    *(_QWORD *)((char *)&buf.flags + 2) = v4;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "asset %{public}@ photo iris duration is 0, video will likely be unplayable, avasset: %@", (uint8_t *)&buf, 0x16u);

  }
LABEL_18:
  buf = v21[0];
  v19 = *(_OWORD *)&v7->value;
  *(_OWORD *)&time2.value = *(_OWORD *)&v7->value;
  epoch = v7->epoch;
  time2.epoch = epoch;
  if (CMTimeCompare(&buf, &time2))
  {
    buf = v21[0];
    -[PLManagedAsset setPhotoIrisStillDisplayTime:](self, "setPhotoIrisStillDisplayTime:", &buf);
  }
  buf = v21[1];
  *(_OWORD *)&time2.value = v19;
  time2.epoch = epoch;
  if (CMTimeCompare(&buf, &time2))
  {
    buf = v21[1];
    -[PLManagedAsset setPhotoIrisVideoDuration:](self, "setPhotoIrisVideoDuration:", &buf);
  }

}

- (void)updatePhotoIrisMetadataWithMediaGroupUUID:(id)a3 videoDuration:(id *)a4 stillDisplayTime:(id *)a5
{
  id v8;
  void *v9;
  char v10;
  __int128 v11;
  int64_t var3;

  v8 = a3;
  -[PLManagedAsset mediaGroupUUID](self, "mediaGroupUUID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isEqualToString:", v8);

  if ((v10 & 1) == 0)
    -[PLManagedAsset setMediaGroupUUID:](self, "setMediaGroupUUID:", v8);
  v11 = *(_OWORD *)&a4->var0;
  var3 = a4->var3;
  -[PLManagedAsset setPhotoIrisVideoDuration:](self, "setPhotoIrisVideoDuration:", &v11);
  v11 = *(_OWORD *)&a5->var0;
  var3 = a5->var3;
  -[PLManagedAsset setPhotoIrisStillDisplayTime:](self, "setPhotoIrisStillDisplayTime:", &v11);

}

- (void)updatePhotoIrisVisibilityStateWithVitalityScore:(id)a3
{
  id v4;
  void *v5;
  float v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "floatValue");
    if (v6 < 0.5)
    {
      PLBackendGetLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v10 = 138543362;
        v11 = v5;
        _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_INFO, "Setting VC visibility state to hidden with vitalityScore:%{public}@", (uint8_t *)&v10, 0xCu);
      }

      -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState") | 5);
    }
  }
  else
  {
    PLBackendGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543362;
      v11 = v9;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Vitality thresholding was requested for asset %{public}@ but vitality score was nil", (uint8_t *)&v10, 0xCu);

    }
  }

}

- (BOOL)_linkVideoFileFromSourcePath:(id)a3 toDestinationPath:(id)a4
{
  id v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  id v19;
  id v20;
  uint8_t buf[4];
  id v22;
  __int16 v23;
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isEqualToString:", v6) && (objc_msgSend(v7, "fileExistsAtPath:", v6) & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    v27 = *MEMORY[0x1E0CB2AD8];
    v28[0] = *MEMORY[0x1E0CB2AC0];
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = 0;
    v10 = objc_msgSend(v7, "setAttributes:ofItemAtPath:error:", v9, v5, &v20);
    v11 = v20;

    if ((v10 & 1) == 0)
    {
      PLPhotoSharingGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v22 = v5;
        v23 = 2112;
        v24 = v11;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Unable to assign data protection to \"%@\": %@", buf, 0x16u);
      }

    }
    v13 = (void *)MEMORY[0x1E0D73208];
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v5, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v6, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = 0;
    v8 = objc_msgSend(v13, "copyItemAtURL:toURL:error:", v14, v15, &v19);
    v16 = v19;

    if ((v8 & 1) == 0)
    {
      PLBackendGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        v22 = v5;
        v23 = 2112;
        v24 = v6;
        v25 = 2112;
        v26 = v16;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "failed to copy video file from %@ to %@: %@", buf, 0x20u);
      }

    }
  }

  return v8;
}

- (BOOL)becomePhotoIrisWithMediaGroupUUID:(id)a3 mainFileMetadata:(id)a4 videoURL:(id)a5 videoDuration:(id *)a6 stillDisplayTime:(id *)a7 options:(unint64_t)a8
{
  $3CC8671D27C23BF42ADDB32F2B5E48AE v9;
  $3CC8671D27C23BF42ADDB32F2B5E48AE v10;

  v10 = *a6;
  v9 = *a7;
  return -[PLManagedAsset becomePhotoIrisWithMediaGroupUUID:mainFileMetadata:videoURL:spatialOverCaptureURL:videoDuration:stillDisplayTime:options:](self, "becomePhotoIrisWithMediaGroupUUID:mainFileMetadata:videoURL:spatialOverCaptureURL:videoDuration:stillDisplayTime:options:", a3, a4, a5, 0, &v10, &v9, a8);
}

- (BOOL)becomePhotoIrisWithMediaGroupUUID:(id)a3 mainFileMetadata:(id)a4 videoURL:(id)a5 spatialOverCaptureURL:(id)a6 videoDuration:(id *)a7 stillDisplayTime:(id *)a8 options:(unint64_t)a9
{
  id v16;
  id v17;
  _BOOL4 v18;
  _BOOL4 v19;
  void *v20;
  void *v21;
  int v22;
  char v23;
  void *v24;
  BOOL v25;
  void *v26;
  _BOOL4 v27;
  void *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  BOOL v45;
  void *v47;
  int v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  int64_t v54;
  uint8_t buf[16];
  int64_t var3;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v49 = a3;
  v50 = a4;
  v16 = a5;
  v17 = a6;
  if (!-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2334, CFSTR("expect photo when changing to photoIris but type is %d"), (int)-[PLManagedAsset kind](self, "kind"));

  }
  v18 = -[PLManagedAsset isPhoto](self, "isPhoto");
  v19 = -[PLManagedAsset _checkForAndAddFrameDropRecoveryForPhotoKitIngest](self, "_checkForAndAddFrameDropRecoveryForPhotoKitIngest");
  objc_msgSend(v16, "path");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForDeferredVideoComplementFile](self, "pathForDeferredVideoComplementFile");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(v20, "isEqualToString:", v21);

  if (!v18)
  {
    v25 = 0;
    v26 = 0;
    v24 = 0;
    goto LABEL_45;
  }
  v23 = v22 | v19;
  v48 = v22 | v19;
  if ((a9 & 2) != 0)
  {
    objc_msgSend(v16, "path");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if ((objc_msgSend(v50, "isSyndicationOriginated") & 1) == 0)
    {
      objc_msgSend(v16, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      if ((v23 & 1) != 0)
        -[PLManagedAsset pathForDeferredVideoComplementFile](self, "pathForDeferredVideoComplementFile");
      else
        -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = -[PLManagedAsset _linkVideoFileFromSourcePath:toDestinationPath:](self, "_linkVideoFileFromSourcePath:toDestinationPath:", v28, v24);

      if (!v17)
        goto LABEL_18;
      goto LABEL_15;
    }
    v24 = 0;
  }
  v27 = 1;
  if (!v17)
    goto LABEL_18;
LABEL_15:
  if (v27)
  {
    objc_msgSend(v17, "path");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    if ((a9 & 2) != 0)
      objc_msgSend(v17, "path");
    else
      -[PLManagedAsset pathForVideoComplementSpatialOverCaptureContentFile](self, "pathForVideoComplementSpatialOverCaptureContentFile");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = -[PLManagedAsset _linkVideoFileFromSourcePath:toDestinationPath:](self, "_linkVideoFileFromSourcePath:toDestinationPath:", v26, v44);

    if (v45)
      goto LABEL_19;
LABEL_44:
    v25 = 0;
    goto LABEL_45;
  }
LABEL_18:
  v26 = 0;
  if (!v27)
    goto LABEL_44;
LABEL_19:
  -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 2);
  -[PLManagedAsset master](self, "master");
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  if (v29)
  {
    PLBackendGetLog();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v31;
      _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_INFO, "Mark the master to be not pushed, we just detect the video complement %{public}@", buf, 0xCu);

    }
    -[PLManagedAsset master](self, "master");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "setCloudLocalState:", 0);

  }
  *(_OWORD *)buf = *(_OWORD *)&a7->var0;
  var3 = a7->var3;
  v53 = *(_OWORD *)&a8->var0;
  v54 = a8->var3;
  -[PLManagedAsset updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:](self, "updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:", v49, buf, &v53);
  if ((objc_msgSend(v50, "isSyndicationOriginated") & 1) == 0)
    objc_msgSend(MEMORY[0x1E0D73200], "persistString:forKey:fileURL:", 0, *MEMORY[0x1E0D73F88], v16);
  if (-[PLManagedAsset canPlayPhotoIris](self, "canPlayPhotoIris"))
  {
    -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", 3);
    -[PLManagedAsset updatePlaybackVariationAndStyleFromOriginalMetadata:](self, "updatePlaybackVariationAndStyleFromOriginalMetadata:", v50);
  }
  if (v26)
    -[PLManagedAsset setCameraProcessingAdjustmentState:](self, "setCameraProcessingAdjustmentState:", -[PLManagedAsset cameraProcessingAdjustmentState](self, "cameraProcessingAdjustmentState") | 1);
  if (v19)
  {
    -[PLManagedAsset setVideoDeferredProcessingNeeded:](self, "setVideoDeferredProcessingNeeded:", 1);
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "libraryServicesManager");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "backgroundJobService");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "signalBackgroundProcessingNeededOnLibrary:", v36);

  }
  v25 = 1;
  if (!-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset") && v24)
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "libraryID");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    PLDataStoreForClassIDAndLibraryID(0, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLResourceInstaller validatedExternalResourceForLocalVideoIfPresentAtPath:context:](PLResourceInstaller, "validatedExternalResourceForLocalVideoIfPresentAtPath:context:", v24, v40);
    v41 = (void *)objc_claimAutoreleasedReturnValue();

    if (v41)
    {
      objc_msgSend(v41, "setVersion:", 0);
      objc_msgSend(v41, "setResourceType:", 3);
      if (v48)
        objc_msgSend(v41, "setRecipeID:", 131279);
      v52 = 0;
      objc_msgSend(v39, "storeExternalResource:forAsset:options:error:resultingResource:", v41, self, 0, 0, &v52);
    }
    if (v26)
    {
      -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLResourceInstaller validatedExternalResourceForLocalVideoIfPresentAtPath:context:](PLResourceInstaller, "validatedExternalResourceForLocalVideoIfPresentAtPath:context:", v26, v42);
      v43 = (void *)objc_claimAutoreleasedReturnValue();

      if (v43)
      {
        objc_msgSend(v43, "setVersion:", 0);
        objc_msgSend(v43, "setResourceType:", 11);
        v51 = 0;
        objc_msgSend(v39, "storeExternalResource:forAsset:options:error:resultingResource:", v43, self, 0, 0, &v51);
      }

    }
    v25 = 1;
  }
LABEL_45:

  return v25;
}

- (void)setPlaybackVariationAndLoopingStyleFromAdjustmentRenderTypes:(unsigned int)a3
{
  -[PLManagedAsset setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:](self, "setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:", -[PLManagedAsset _playbackVariationWithAdjustmentRenderTypes:](self, "_playbackVariationWithAdjustmentRenderTypes:", *(_QWORD *)&a3));
}

- (void)setDepthTypeFromAdjustmentRenderTypes:(unsigned int)a3
{
  uint64_t v3;

  if ((a3 & 2) != 0)
  {
    v3 = 1;
LABEL_5:
    -[PLManagedAsset setDepthType:](self, "setDepthType:", v3);
    return;
  }
  if ((a3 & 0x80) != 0)
  {
    v3 = 2;
    goto LABEL_5;
  }
}

- (void)setCameraProcessingAdjustmentStateFromAdjustmentRenderTypes:(unsigned int)a3
{
  -[PLManagedAsset setCameraProcessingAdjustmentState:](self, "setCameraProcessingAdjustmentState:", (a3 >> 2) & 0xC | -[PLManagedAsset cameraProcessingAdjustmentState](self, "cameraProcessingAdjustmentState") & 0xFFFFFFF3);
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withDepthType:(signed __int16)a4
{
  int v4;

  v4 = (a4 == 2) << 7;
  if (a4 == 1)
    v4 = 2;
  return v4 | a3 & 0xFFFFFF7D;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withAdjustmentState:(unsigned __int16)a4
{
  return a3 & 0xFFFFFFCF | (16 * ((a4 >> 2) & 3));
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withPlaybackVariation:(unsigned __int16)a4
{
  int v4;

  if ((a4 - 1) > 2)
    v4 = 0;
  else
    v4 = dword_199B9B5A0[(unsigned __int16)(a4 - 1)];
  return v4 | a3 & 0xFFFFFFF2;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withAdjustmentData:(id)a4 formatIdentifier:(id)a5 formatVersion:(id)a6
{
  return a3 & 0xFFFFF0FF | (((+[PLPhotoEditPersistenceManager renderTypeForAdjustmentData:formatIdentifier:formatVersion:](PLPhotoEditPersistenceManager, "renderTypeForAdjustmentData:formatIdentifier:formatVersion:", a4, a5, a6) >> 8) & 0xF) << 8);
}

- (unsigned)_playbackVariationWithAdjustmentRenderTypes:(unsigned int)a3
{
  int v3;

  if ((a3 & 8) != 0)
    LOWORD(v3) = 2;
  else
    v3 = ((int)(a3 << 29) >> 31) & 3;
  if ((a3 & 1) != 0)
    return 1;
  else
    return v3;
}

- (void)setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:(unsigned __int16)a3
{
  uint64_t v3;
  int v5;
  unsigned __int16 v6;

  v3 = a3;
  if (-[PLManagedAsset playbackVariation](self, "playbackVariation") != a3)
  {
    -[PLManagedAsset setPlaybackVariation:](self, "setPlaybackVariation:", v3);
    v5 = -[PLManagedAsset playbackStyle](self, "playbackStyle");
    if ((objc_msgSend((id)objc_opt_class(), "_isLoopingVideoPlaybackVariation:", v3) & 1) != 0)
    {
      v6 = 5;
    }
    else
    {
      if (v5 != 5)
        return;
      if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
        v6 = 3;
      else
        v6 = 4;
    }
    if (v5 != v6)
      -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", v6);
  }
}

- (BOOL)isAutoloop
{
  return -[PLManagedAsset playbackVariation](self, "playbackVariation") == 1;
}

- (BOOL)isLongExposure
{
  return -[PLManagedAsset playbackVariation](self, "playbackVariation") == 3;
}

- (BOOL)isMirror
{
  return -[PLManagedAsset playbackVariation](self, "playbackVariation") == 2;
}

- (BOOL)isAnimation
{
  return -[PLManagedAsset playbackStyle](self, "playbackStyle") == 2;
}

- (BOOL)avalanchePickTypeIsVisible
{
  return -[PLManagedAsset _isVisibleAvalanchePickType:](self, "_isVisibleAvalanchePickType:", -[PLManagedAsset avalanchePickType](self, "avalanchePickType"));
}

- (BOOL)_isVisibleAvalanchePickType:(int)a3
{
  return (a3 & 0x18) != 0 || a3 == 0;
}

- (BOOL)isAvalancheStackPhoto
{
  return (-[PLManagedAsset avalanchePickType](self, "avalanchePickType") & 0x10) != 0
      && -[PLManagedAsset isPartOfBurst](self, "isPartOfBurst");
}

- (BOOL)isAvalanchePhoto
{
  int v3;

  v3 = -[PLManagedAsset avalanchePickType](self, "avalanchePickType");
  if (v3)
    LOBYTE(v3) = -[PLManagedAsset isPartOfBurst](self, "isPartOfBurst");
  return v3;
}

- (id)avalanchePickDescription
{
  int v2;
  void *v3;
  void *v4;
  const __CFString *v5;

  v2 = -[PLManagedAsset avalanchePickType](self, "avalanchePickType");
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (!v2)
  {
    v5 = CFSTR(" PLAvalancheTypeNotInBurst");
LABEL_14:
    objc_msgSend(v4, "appendString:", v5);
    return v4;
  }
  if ((v2 & 1) != 0)
  {
    objc_msgSend(v3, "appendString:", CFSTR(" PLAvalancheTypeUnknown"));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0)
        goto LABEL_5;
      goto LABEL_11;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  objc_msgSend(v4, "appendString:", CFSTR(" PLAvalancheTypeNotPicked"));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  objc_msgSend(v4, "appendString:", CFSTR(" PLAvalancheTypeAutoPicked"));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0)
      return v4;
    goto LABEL_13;
  }
LABEL_12:
  objc_msgSend(v4, "appendString:", CFSTR(" PLAvalancheTypeUserFavorite"));
  if ((v2 & 0x10) != 0)
  {
LABEL_13:
    v5 = CFSTR(" PLAvalancheTypeStack");
    goto LABEL_14;
  }
  return v4;
}

- (id)reverseGeoDescription
{
  -[PLManagedAsset _loadReverseGeoIfNeeded](self, "_loadReverseGeoIfNeeded");
  return self->_reverseGeoDescription;
}

- (BOOL)isLocatedAtHome
{
  -[PLManagedAsset _loadReverseGeoIfNeeded](self, "_loadReverseGeoIfNeeded");
  return self->_isLocatedAtHome;
}

- (void)_loadReverseGeoIfNeeded
{
  void *v3;
  void *v4;
  void *v5;
  NSString *v6;
  NSString *reverseGeoDescription;
  id v8;

  if (!self->_didLoadReverseGeo)
  {
    -[PLManagedAsset locationInfo](self, "locationInfo");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      v8 = v3;
      -[PLManagedAsset location](self, "location");
      v4 = (void *)objc_claimAutoreleasedReturnValue();

      v3 = v8;
      if (v4)
      {
        self->_isLocatedAtHome = objc_msgSend(v8, "isHome");
        objc_msgSend(v8, "localizedDescription");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v6 = (NSString *)objc_msgSend(v5, "copy");
        reverseGeoDescription = self->_reverseGeoDescription;
        self->_reverseGeoDescription = v6;

        v3 = v8;
      }
    }
    self->_didLoadReverseGeo = 1;

  }
}

- (id)decodedFaceRegions
{
  void *v2;
  void *v3;

  -[PLManagedAsset faceRegions](self, "faceRegions");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  PLManagedAssetDecodeFaceRegions(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (BOOL)isEditableFromAssetsLibrary
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset canPerformEditOperation:](self, "canPerformEditOperation:", 1);
  if (v3)
  {
    if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) != 0
      || -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
    {
      LOBYTE(v3) = 0;
    }
    else
    {
      LOBYTE(v3) = !-[PLManagedAsset isPhotoStreamPhoto](self, "isPhotoStreamPhoto");
    }
  }
  return v3;
}

- (BOOL)isDeletableFromAssetsLibrary
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset canPerformEditOperation:](self, "canPerformEditOperation:", 4);
  if (v3)
  {
    if (-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
      LOBYTE(v3) = 0;
    else
      LOBYTE(v3) = !-[PLManagedAsset isPhotoStreamPhoto](self, "isPhotoStreamPhoto");
  }
  return v3;
}

- (void)deleteWithReason:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLPhotosStatusGetLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v4, "reason");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138412290;
    v9 = v6;
    _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "Delete reason: %@", (uint8_t *)&v8, 0xCu);

  }
  objc_msgSend(v4, "reason");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setDeleteReason:](self, "setDeleteReason:", v7);

  self->_deleteReasonExists = 1;
  -[PLManagedAsset delete](self, "delete");

}

- (void)delete
{
  _BOOL4 v3;
  NSObject *v4;
  _BOOL4 v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  const char *v11;
  void *v12;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if (!self->_deleteReasonExists)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2658, CFSTR("Asset deletion must specify a reason.  Please use deleteWithReason:"));

  }
  v3 = -[PLManagedAsset isCameraConnectionKitAsset](self, "isCameraConnectionKitAsset");
  PLPhotosStatusGetLog();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      -[PLManagedAsset directory](self, "directory");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset filename](self, "filename");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset objectID](self, "objectID");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset uuid](self, "uuid");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset dateCreated](self, "dateCreated");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138544386;
      v16 = v6;
      v17 = 2112;
      v18 = v7;
      v19 = 2114;
      v20 = v8;
      v21 = 2114;
      v22 = v9;
      v23 = 2114;
      v24 = v10;
      v11 = "Deleting %{public}@/%@ [%{public}@ %{public}@] (created on %{public}@)";
LABEL_8:
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v15, 0x34u);

    }
  }
  else if (v5)
  {
    -[PLManagedAsset directory](self, "directory");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset filename](self, "filename");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset objectID](self, "objectID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset uuid](self, "uuid");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 138544386;
    v16 = v6;
    v17 = 2114;
    v18 = v7;
    v19 = 2114;
    v20 = v8;
    v21 = 2114;
    v22 = v9;
    v23 = 2114;
    v24 = v10;
    v11 = "Deleting %{public}@/%{public}@ [%{public}@ %{public}@] (created on %{public}@)";
    goto LABEL_8;
  }

  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "deleteObject:", self);

  self->_deleteReasonExists = 0;
}

- (void)deleteFromDatabaseOnly
{
  void *v4;
  id v5;

  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2672, CFSTR("deleteFromDatabaseOnly is only safe from inside of assetsd!"));

  }
  self->_didPrepareForDeletion = 1;
  +[PLAssetTransactionReason transactionReason:](PLAssetTransactionReason, "transactionReason:", CFSTR("Deleting from database only"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset deleteWithReason:](self, "deleteWithReason:", v5);

}

- (void)deleteFromDatabaseOnlyWithReason:(id)a3
{
  void *v5;
  id v6;

  v6 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2681, CFSTR("deleteFromDatabaseOnly is only safe from inside of assetsd!"));

  }
  self->_didPrepareForDeletion = 1;
  -[PLManagedAsset deleteWithReason:](self, "deleteWithReason:", v6);

}

- (BOOL)isInTrash
{
  return -[PLManagedAsset trashedState](self, "trashedState") != 0;
}

- (void)trashWithReason:(unsigned __int16)a3
{
  -[PLManagedAsset applyTrashedState:withTrashedReason:expungeReasonFromClient:](self, "applyTrashedState:withTrashedReason:expungeReasonFromClient:", 1, a3, 0);
}

- (void)unTrash
{
  -[PLManagedAsset applyTrashedState:withTrashedReason:expungeReasonFromClient:](self, "applyTrashedState:withTrashedReason:expungeReasonFromClient:", 0, 0, 0);
}

- (void)expunge
{
  -[PLManagedAsset applyTrashedState:withTrashedReason:expungeReasonFromClient:](self, "applyTrashedState:withTrashedReason:expungeReasonFromClient:", 2, 0, 0);
}

- (void)applyTrashedState:(signed __int16)a3 withTrashedReason:(unsigned __int16)a4 expungeReasonFromClient:(id)a5
{
  uint64_t v5;
  uint64_t v6;
  id v9;
  void *v10;
  id v11;
  const __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v5 = a4;
  v6 = a3;
  v25 = *MEMORY[0x1E0C80C00];
  v9 = a5;
  if (!-[PLManagedAsset canMoveToTrash](self, "canMoveToTrash"))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2735, CFSTR("expect trashable asset"));

  }
  if ((_DWORD)v6 == 2)
  {
    if (-[PLManagedAsset trashedState](self, "trashedState") == 1
      || !-[PLManagedAsset trashedState](self, "trashedState"))
    {
      v11 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
      if (-[PLManagedAsset trashedState](self, "trashedState") == 1)
        v12 = CFSTR("User deleted asset in trashedState.");
      else
        v12 = CFSTR("User deleted asset in non-trashedState");
      objc_msgSend(v11, "appendString:", v12);
      if (v9)
        objc_msgSend(v11, "appendFormat:", CFSTR(" Client expunge reason: %@"), v9);
      -[PLManagedAsset setTrashedState:](self, "setTrashedState:", v6);
      +[PLAssetTransactionReason transactionReason:](PLAssetTransactionReason, "transactionReason:", v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset deleteWithReason:](self, "deleteWithReason:", v13);

    }
  }
  else if ((_DWORD)v6 == 1)
  {
    if (!-[PLManagedAsset trashedState](self, "trashedState"))
    {
      -[PLManagedAsset setTrashedState:](self, "setTrashedState:", v6);
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setTrashedDate:](self, "setTrashedDate:", v14);

      -[PLManagedAsset setTrashedReason:](self, "setTrashedReason:", v5);
      if (-[PLManagedAsset hasLibraryScope](self, "hasLibraryScope")
        && (-[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState") & 0x800000) != 0)
      {
        -[PLManagedAsset libraryScope](self, "libraryScope");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "currentUserParticipant");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setTrashedByParticipant:](self, "setTrashedByParticipant:", v16);

      }
      PLPhotosStatusGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset dateCreated](self, "dateCreated");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v22 = v18;
        v23 = 2114;
        v24 = v19;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Asset %{public}@ (created on %{public}@) was trashed.", buf, 0x16u);

      }
    }
  }
  else if (!(_DWORD)v6 && -[PLManagedAsset trashedState](self, "trashedState") == 1)
  {
    -[PLManagedAsset setTrashedState:](self, "setTrashedState:", v6);
    -[PLManagedAsset setTrashedDate:](self, "setTrashedDate:", 0);
    -[PLManagedAsset setTrashedReason:](self, "setTrashedReason:", 0);
    -[PLManagedAsset trashedByParticipant](self, "trashedByParticipant");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
      -[PLManagedAsset setTrashedByParticipant:](self, "setTrashedByParticipant:", 0);
  }

}

- (BOOL)validateForInsert:(id *)a3
{
  uint64_t v5;
  objc_super v7;

  v5 = +[PLManagedAsset correctedOrientation:](PLManagedAsset, "correctedOrientation:", -[PLManagedAsset orientation](self, "orientation"));
  if ((_DWORD)v5 != -[PLManagedAsset orientation](self, "orientation"))
    -[PLManagedAsset setOrientation:](self, "setOrientation:", v5);
  v7.receiver = self;
  v7.super_class = (Class)PLManagedAsset;
  return -[PLManagedAsset validateForInsert:](&v7, sel_validateForInsert_, a3);
}

- (BOOL)validateForUpdate:(id *)a3
{
  uint64_t v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  objc_super v13;
  uint8_t buf[4];
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = +[PLManagedAsset correctedOrientation:](PLManagedAsset, "correctedOrientation:", -[PLManagedAsset orientation](self, "orientation"));
  if ((_DWORD)v5 != -[PLManagedAsset orientation](self, "orientation"))
    -[PLManagedAsset setOrientation:](self, "setOrientation:", v5);
  v13.receiver = self;
  v13.super_class = (Class)PLManagedAsset;
  v6 = -[PLManagedAsset validateForUpdate:](&v13, sel_validateForUpdate_, a3);
  if (v6)
  {
    -[PLManagedAsset changedValues](self, "changedValues");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("libraryScope"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {

    }
    else
    {
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("libraryScopeShareState"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v9)
      {
LABEL_12:

        return v6;
      }
    }
    if (-[PLManagedAsset hasLibraryScope](self, "hasLibraryScope")
      && -[PLManagedAsset isSuggestedForSharingByPhotos](self, "isSuggestedForSharingByPhotos"))
    {
      PLBackendGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v15 = v11;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Correcting libraryScopeShareState on asset %{public}@, for failing rule: a shared asset should not be marked as suggested for sharing.", buf, 0xCu);

      }
      PLLibraryScopeAssetRemoveSuggestedByClientType(self);
    }
    goto LABEL_12;
  }
  return v6;
}

- (void)updatePanoramosityWithMetadata:(id)a3
{
  uint64_t v4;
  int64_t v5;
  id v6;

  v6 = a3;
  if (!-[PLManagedAsset isPhotoIris](self, "isPhotoIris")
    && -[PLManagedAsset kindSubtype](self, "kindSubtype") != 10
    && -[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    if (!v6)
    {
      -[PLManagedAsset metadataFromMediaPropertiesOrOriginalResource](self, "metadataFromMediaPropertiesOrOriginalResource");
      v6 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (-[PLManagedAsset _hasPanoramaDimensions](self, "_hasPanoramaDimensions")
      && (objc_msgSend(v6, "isScreenshot") & 1) == 0
      && ((v5 = -[PLManagedAsset height](self, "height"), v5 <= -[PLManagedAsset width](self, "width"))
       || objc_msgSend(v6, "isPanorama")))
    {
      if (-[PLManagedAsset kindSubtype](self, "kindSubtype") != 1)
      {
        v4 = 1;
        goto LABEL_14;
      }
    }
    else if (-[PLManagedAsset kindSubtype](self, "kindSubtype") == 1)
    {
      v4 = 0;
LABEL_14:
      -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", v4);
    }
  }

}

- (BOOL)updateKindSubtypeIfScreenshot
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __47__PLManagedAsset_updateKindSubtypeIfScreenshot__block_invoke;
  v3[3] = &unk_1E3670EA0;
  v3[4] = self;
  return -[PLManagedAsset _updateKindSubtypeIfScreenshotWithCheckTask:](self, "_updateKindSubtypeIfScreenshotWithCheckTask:", v3);
}

- (BOOL)updateKindSubtypeIfScreenshotWithMetadata:(id)a3
{
  id v5;
  id v6;
  BOOL v7;
  void *v9;
  _QWORD v10[4];
  id v11;
  PLManagedAsset *v12;

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2867, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("metadata"));

  }
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __60__PLManagedAsset_updateKindSubtypeIfScreenshotWithMetadata___block_invoke;
  v10[3] = &unk_1E36731D8;
  v11 = v5;
  v12 = self;
  v6 = v5;
  v7 = -[PLManagedAsset _updateKindSubtypeIfScreenshotWithCheckTask:](self, "_updateKindSubtypeIfScreenshotWithCheckTask:", v10);

  return v7;
}

- (BOOL)_updateKindSubtypeIfScreenshotWithCheckTask:(id)a3
{
  unsigned int (**v5)(_QWORD);
  BOOL v6;
  void *v8;

  v5 = (unsigned int (**)(_QWORD))a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 2881, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("checkTask"));

  }
  if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris")
    || !-[PLManagedAsset isPhoto](self, "isPhoto")
    || -[PLManagedAsset kindSubtype](self, "kindSubtype") == 10
    || !v5[2](v5))
  {
    v6 = 0;
  }
  else
  {
    -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 10);
    v6 = 1;
  }

  return v6;
}

- (BOOL)isSyncableChange
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  int v10;
  BOOL v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  void *v16;
  int v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (-[PLManagedAsset savedAssetTypeIsSupportedForUpload](self, "savedAssetTypeIsSupportedForUpload"))
  {
    -[PLManagedAsset changedValues](self, "changedValues");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    +[PLManagedAsset listOfSyncedProperties](PLManagedAsset, "listOfSyncedProperties", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v20;
      while (2)
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v20 != v7)
            objc_enumerationMutation(v4);
          objc_msgSend(v3, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * i));
          v9 = (void *)objc_claimAutoreleasedReturnValue();

          if (v9)
          {
            v10 = 0;
            goto LABEL_13;
          }
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
        if (v6)
          continue;
        break;
      }
    }
    v10 = 1;
LABEL_13:

    objc_msgSend(v3, "objectForKey:", CFSTR("cloudLocalState"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (v12)
    {
      if (objc_msgSend(v12, "intValue"))
        v14 = v10;
      else
        v14 = 0;
      if ((v14 & 1) == 0)
        goto LABEL_23;
    }
    else if (!v10)
    {
      goto LABEL_23;
    }
    objc_msgSend(v3, "objectForKey:", CFSTR("savedAssetType"));
    v15 = objc_claimAutoreleasedReturnValue();
    if (!v15
      || (v16 = (void *)v15, v17 = -[PLManagedAsset cloudLocalState](self, "cloudLocalState"), v16, v17))
    {
      v11 = 0;
LABEL_26:

      return v11;
    }
LABEL_23:
    if (-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
      v11 = +[PLManagedAsset validMomentShareForPlaceholderAsset:](PLManagedAsset, "validMomentShareForPlaceholderAsset:", self);
    else
      v11 = 1;
    goto LABEL_26;
  }
  return 0;
}

- (BOOL)setTrashedStateOnSpatialOverCaptureResources:(signed __int16)a3
{
  uint64_t v3;
  NSObject *v5;
  void *v6;
  BOOL v8;
  int v9;
  const __CFString *v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v3 = a3;
  v13 = *MEMORY[0x1E0C80C00];
  if (setTrashedStateOnSpatialOverCaptureResources__onceToken != -1)
    dispatch_once(&setTrashedStateOnSpatialOverCaptureResources__onceToken, &__block_literal_global_389_14644);
  if ((_DWORD)v3 == 1 && setTrashedStateOnSpatialOverCaptureResources__ignoreSOCSetTrashedStateChange)
  {
    PLBackendGetLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138412546;
      v10 = CFSTR("PLIgnoreSOCPrune");
      v11 = 2114;
      v12 = v6;
      _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_INFO, "ignoring setTrashedState for SOC resources: %@ = YES for asset %{public}@", (uint8_t *)&v9, 0x16u);

    }
    return 0;
  }
  else
  {
    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
      v8 = -[PLManagedAsset setTrashedState:forResourceType:](self, "setTrashedState:forResourceType:", v3, 24);
    else
      v8 = 1;
    return v8 & -[PLManagedAsset setTrashedState:forResourceType:](self, "setTrashedState:forResourceType:", v3, 23);
  }
}

- (void)expungeTrashedSpatialOverCaptureResources
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", &__block_literal_global_391);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        -[PLManagedAsset setTrashedState:forResourceType:](self, "setTrashedState:forResourceType:", 2, objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v7++), "cplType"));
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

- (BOOL)setTrashedState:(signed __int16)a3 forResourceType:(unint64_t)a4
{
  uint64_t v5;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  BOOL v13;
  NSObject *v14;
  id v15;
  __CFString *v16;
  void *v17;
  int v19;
  _BYTE v20[34];
  uint64_t v21;

  v5 = a3;
  v21 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7 && objc_msgSend(v7, "supportsTrashedState"))
  {
    PLBackendGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "objectID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", a4);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 67109890;
      *(_DWORD *)v20 = v5;
      *(_WORD *)&v20[4] = 2114;
      *(_QWORD *)&v20[6] = v10;
      *(_WORD *)&v20[14] = 2112;
      *(_QWORD *)&v20[16] = v11;
      *(_WORD *)&v20[24] = 2112;
      *(_QWORD *)&v20[26] = v12;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_INFO, "Setting resource trashedState to %i for asset %{public}@, resource %@, cplType %@", (uint8_t *)&v19, 0x26u);

    }
    objc_msgSend(v8, "applyTrashedState:", v5);
    v13 = 1;
  }
  else
  {
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v15 = (id)objc_claimAutoreleasedReturnValue();
      if (v8)
      {
        objc_msgSend(v8, "objectID");
        v16 = (__CFString *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v16 = CFSTR("<no master resource for cplType>");
      }
      objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", a4);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 138543874;
      *(_QWORD *)v20 = v15;
      *(_WORD *)&v20[8] = 2112;
      *(_QWORD *)&v20[10] = v16;
      *(_WORD *)&v20[18] = 2112;
      *(_QWORD *)&v20[20] = v17;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Resource does not support trashedState %{public}@, resource %@, cplType %@", (uint8_t *)&v19, 0x20u);
      if (v8)

    }
    v13 = 0;
  }

  return v13;
}

- (void)reevaluateCameraProcessingAdjustmentState
{
  uint64_t v3;
  id v4;

  -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_394);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  if (v4)
    v3 = -[PLManagedAsset cameraProcessingAdjustmentState](self, "cameraProcessingAdjustmentState") | 1;
  else
    v3 = 0;
  -[PLManagedAsset setCameraProcessingAdjustmentState:](self, "setCameraProcessingAdjustmentState:", v3);

}

- (void)_updateOriginalResourceChoice
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v16 = (id)objc_claimAutoreleasedReturnValue();
  if (-[PLManagedAsset isPhoto](self, "isPhoto") && -[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    objc_msgSend(v16, "unmanagedAdjustment");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v3;
    if (v3
      && (objc_msgSend(v3, "adjustmentBaseImageFormat"),
          v5 = (void *)objc_claimAutoreleasedReturnValue(),
          v6 = objc_msgSend(v5, "integerValue"),
          v5,
          v6))
    {
      v7 = 0;
    }
    else
    {
      -[PLManagedAsset mainFileURL](self, "mainFileURL");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "pathExtension");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v9, -[PLManagedAsset kind](self, "kind"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (v10)
      {
        objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "conformsToType:", *MEMORY[0x1E0CEC5B8]);

        if (v12)
          v7 = 3;
        else
          v7 = 0;
      }
      else
      {
        v7 = 0;
      }

    }
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v16, "originalResourceChoice");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "unsignedIntegerValue");

  if (v7 != v14)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v7);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setOriginalResourceChoice:", v15);

  }
}

- (BOOL)_hasBecomeNonVisibleToMemoriesAndPersonsAndSuggestions:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  __int16 v7;
  void *v8;
  void *v9;
  char v10;
  _BOOL4 v11;
  void *v13;
  void *v14;
  uint64_t v15;

  v4 = a3;
  if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) != 0)
    goto LABEL_6;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("trashedState"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(v4, "objectForKey:", CFSTR("trashedState"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "intValue");

    if (v7)
      goto LABEL_6;
  }
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("hidden"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8
    && (objc_msgSend(v4, "objectForKey:", CFSTR("hidden")),
        v9 = (void *)objc_claimAutoreleasedReturnValue(),
        v10 = objc_msgSend(v9, "BOOLValue"),
        v9,
        (v10 & 1) != 0))
  {
LABEL_6:
    LOBYTE(v11) = 1;
  }
  else
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("avalanchePickType"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      objc_msgSend(v4, "objectForKey:", CFSTR("avalanchePickType"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v14, "intValue");

      v11 = !-[PLManagedAsset _isVisibleAvalanchePickType:](self, "_isVisibleAvalanchePickType:", v15);
    }
    else
    {
      LOBYTE(v11) = 0;
    }
  }

  return v11;
}

- (void)fixupMemoriesWithMissingKeyAsset
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  PLManagedAsset *v24;
  void *v25;
  _QWORD v26[4];
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  PLManagedAsset *v35;
  __int16 v36;
  void *v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && !objc_msgSend(v4, "resetCloudLibraryMode"))
  {
    v25 = v3;
    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v24 = self;
    -[PLManagedAsset memoriesBeingKeyAsset](self, "memoriesBeingKeyAsset");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v29;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v29 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
          objc_msgSend(v13, "calculateKeyAsset");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          if (v14)
          {
            objc_msgSend(v6, "addObject:", v13);
            v15 = v7;
            v16 = v14;
          }
          else
          {
            v15 = v5;
            v16 = v13;
          }
          objc_msgSend(v15, "addObject:", v16);

        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
      }
      while (v10);
    }

    if (objc_msgSend(v6, "count"))
    {
      v17 = 0;
      do
      {
        objc_msgSend(v6, "objectAtIndexedSubscript:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "objectAtIndexedSubscript:", v17);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        PLBackendGetLog();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412802;
          v33 = v18;
          v34 = 2112;
          v35 = v24;
          v36 = 2112;
          v37 = v19;
          _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_INFO, "Updating keyAsset for memory %@ from %@ to %@", buf, 0x20u);
        }

        objc_msgSend(v18, "setKeyAsset:", v19);
        if (objc_msgSend(v18, "featuredState") == 1)
        {
          objc_msgSend(v4, "delayedSaveActions");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "recordWidgetTimelineReloadNeededForType:", 0);

          PLBackendGetLog();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(v18, "uuid");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v33 = v23;
            _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_INFO, "Recording ForYou widget timeline invalidation due to memory %{public}@ keyAsset update", buf, 0xCu);

          }
        }

        ++v17;
      }
      while (objc_msgSend(v6, "count") > v17);
    }
    v26[0] = MEMORY[0x1E0C809B0];
    v26[1] = 3221225472;
    v26[2] = __50__PLManagedAsset_fixupMemoriesWithMissingKeyAsset__block_invoke;
    v26[3] = &unk_1E3667CB8;
    v27 = v4;
    objc_msgSend(v5, "enumerateObjectsUsingBlock:", v26);

    v3 = v25;
  }

  objc_autoreleasePoolPop(v3);
}

- (void)resetKeyFaceOnVideoKeyFrameChange
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *context;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  void *v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  context = (void *)MEMORY[0x19AEC1554](self, a2);
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  -[PLManagedAsset detectedFaces](self, "detectedFaces");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * i), "personBeingKeyFace");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (v8)
        {
          PLBackendGetLog();
          v9 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            -[PLManagedAsset uuid](self, "uuid");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "personUUID");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v18 = v10;
            v19 = 2114;
            v20 = v11;
            _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Video key frame change on asset %{public}@: Resetting key face for person %{public}@", buf, 0x16u);

          }
          objc_msgSend(v8, "setKeyFace:pickSource:", 0, 0);
        }

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v5);
  }

  objc_autoreleasePoolPop(context);
}

- (void)removeAssetFromRelatedSuggestionsAndFixupSuggestions
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    -[PLManagedAsset suggestionsBeingRepresentativeAssets](self, "suggestionsBeingRepresentativeAssets", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(v5, "copy");

    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v15;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v15 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
          objc_msgSend(v11, "removeRepresentativeAsset:", self);
          objc_msgSend(v4, "photoLibrary");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "updateCachedCounts:", v12);

        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v8);
    }

    -[PLManagedAsset suggestionsBeingKeyAssets](self, "suggestionsBeingKeyAssets");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset _removeKeyAssetFromSuggestions:](self, "_removeKeyAssetFromSuggestions:", v13);

  }
  objc_autoreleasePoolPop(v3);
}

- (void)_removeKeyAssetFromSuggestions:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  int v16;
  _BOOL4 v17;
  void *v18;
  NSObject *v19;
  const char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t buf[4];
  void *v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_31;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v6 = (void *)objc_msgSend(v4, "copy");
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
  if (!v7)
    goto LABEL_30;
  v8 = v7;
  v22 = v4;
  v23 = 0;
  v9 = *(_QWORD *)v25;
  do
  {
    for (i = 0; i != v8; ++i)
    {
      if (*(_QWORD *)v25 != v9)
        objc_enumerationMutation(v6);
      v11 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
      objc_msgSend(v11, "replaceKeyAsset:", self);
      if (objc_msgSend(v11, "isEmpty"))
      {
        PLBackendGetLog();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v29 = v11;
          _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_INFO, "Deleting suggestion %@ due to it containing no more assets", buf, 0xCu);
        }

        objc_msgSend(v5, "deleteObject:", v11);
      }
      else
      {
        objc_msgSend(v5, "photoLibrary");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "updateCachedCounts:", v13);

      }
      if (objc_msgSend(v11, "featuredState") == 1)
      {
        if (objc_msgSend(v11, "type") == 6)
        {
          objc_msgSend(v5, "delayedSaveActions");
          v14 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "uuid");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject recordWallpaperSuggestionReloadForUUID:](v14, "recordWallpaperSuggestionReloadForUUID:", v15);

        }
        else
        {
          v16 = objc_msgSend(v11, "type");
          PLBackendGetLog();
          v14 = objc_claimAutoreleasedReturnValue();
          v17 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
          if (v16 == 7)
          {
            if (!v17)
            {
              BYTE4(v23) = 1;
              goto LABEL_23;
            }
            objc_msgSend(v11, "uuid");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v29 = v18;
            BYTE4(v23) = 1;
            v19 = v14;
            v20 = "Recording Album widget timeline invalidation due to featured suggestion's %{public}@ key asset being removed";
          }
          else
          {
            if (!v17)
            {
              LOBYTE(v23) = 1;
              goto LABEL_23;
            }
            objc_msgSend(v11, "uuid");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v29 = v18;
            LOBYTE(v23) = 1;
            v19 = v14;
            v20 = "Recording ForYou widget timeline invalidation due to featured suggestion's %{public}@ key asset being removed";
          }
          _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_INFO, v20, buf, 0xCu);

        }
LABEL_23:

        continue;
      }
    }
    v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
  }
  while (v8);

  if ((v23 & 1) != 0)
  {
    objc_msgSend(v5, "delayedSaveActions");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "recordWidgetTimelineReloadNeededForType:", 0);

  }
  v4 = v22;
  if ((v23 & 0x100000000) != 0)
  {
    objc_msgSend(v5, "delayedSaveActions");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "recordWidgetTimelineReloadNeededForType:", 1);
LABEL_30:

  }
LABEL_31:

}

- (void)removeAssetFromUserAlbumSuggestionIfNeededWithChangedValues:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _QWORD v38[3];

  v38[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("favorite"));
    v6 = objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = -[PLManagedAsset favorite](self, "favorite");

      if ((v8 & 1) == 0)
      {
        objc_msgSend(v5, "delayedSaveActions");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset objectID](self, "objectID");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "recordAssetIDForWidgetFavoriteAlbumRemoval:", v10);

        objc_msgSend(v5, "delayedSaveActions");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset objectID](self, "objectID");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "recordAssetIDForWallpaperFavoriteAlbumRemoval:", v12);

      }
    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("albums"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      v38[0] = CFSTR("albums");
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v38, 1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset committedValuesForKeys:](self, "committedValuesForKeys:", v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "objectForKey:", CFSTR("albums"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset albums](self, "albums");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)objc_msgSend(v16, "mutableCopy");
      objc_msgSend(v18, "minusSet:", v17);
      if (objc_msgSend(v18, "count"))
      {
        v30 = v17;
        v31 = v16;
        v32 = v15;
        v35 = 0u;
        v36 = 0u;
        v33 = 0u;
        v34 = 0u;
        v29 = v18;
        v19 = v18;
        v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
        if (v20)
        {
          v21 = v20;
          v22 = *(_QWORD *)v34;
          do
          {
            for (i = 0; i != v21; ++i)
            {
              if (*(_QWORD *)v34 != v22)
                objc_enumerationMutation(v19);
              v24 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * i);
              if ((objc_msgSend(v24, "isDeleted", v29, v30, v31, v32, (_QWORD)v33) & 1) == 0)
              {
                objc_msgSend(v5, "delayedSaveActions");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                -[PLManagedAsset objectID](self, "objectID");
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "recordAssetID:forWidgetUserAlbumRemoval:", v26, v24);

                objc_msgSend(v5, "delayedSaveActions");
                v27 = (void *)objc_claimAutoreleasedReturnValue();
                -[PLManagedAsset objectID](self, "objectID");
                v28 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v27, "recordAssetID:forWallpaperUserAlbumRemoval:", v28, v24);

              }
            }
            v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
          }
          while (v21);
        }

        v16 = v31;
        v15 = v32;
        v18 = v29;
        v17 = v30;
      }

    }
  }

}

- (void)_deleteComputedAttributes
{
  void *v3;
  void *v4;
  id v5;

  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset computedAttributes](self, "computedAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    -[PLManagedAsset computedAttributes](self, "computedAttributes");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "deleteObject:", v4);

  }
}

- (void)deleteMediaAnalysisAttributes
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  int v11;
  id v12;

  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v12 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "deleteObject:", v4);

  }
  +[PLGeneratedAssetDescription resetGeneratedAssetDescriptionsForAsset:](PLGeneratedAssetDescription, "resetGeneratedAssetDescriptionsForAsset:", self);
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "cloudComputeStateAdjustmentFingerprint");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "adjustedStableHash");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "isEqualToString:", v8);

  if ((v9 & 1) == 0)
  {
    -[PLManagedAsset deleteComputeSyncResourceIfExists](self, "deleteComputeSyncResourceIfExists");
    -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "hasValidLocalProperties");

    if (v11)
      +[PLComputeSyncAttributes resetLocalComputeSyncAttributesForAsset:](PLComputeSyncAttributes, "resetLocalComputeSyncAttributesForAsset:", self);
  }

}

- (void)_clearPreferredCropRect
{
  if (-[PLManagedAsset packedPreferredCropRect](self, "packedPreferredCropRect"))
    -[PLManagedAsset setPackedPreferredCropRect:](self, "setPackedPreferredCropRect:", 0);
}

- (void)_clearAcceptableCropRect
{
  if (-[PLManagedAsset packedAcceptableCropRect](self, "packedAcceptableCropRect"))
    -[PLManagedAsset setPackedAcceptableCropRect:](self, "setPackedAcceptableCropRect:", 0);
}

- (void)_clearOverallAestheticScore
{
  double v3;

  -[PLManagedAsset overallAestheticScore](self, "overallAestheticScore");
  if (*(float *)&v3 != 0.5)
  {
    LODWORD(v3) = 0.5;
    -[PLManagedAsset setOverallAestheticScore:](self, "setOverallAestheticScore:", v3);
  }
}

- (void)_clearStickerConfidenceAttributes
{
  void *v3;
  id v4;

  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "visualSearchAttributes");
  v4 = (id)objc_claimAutoreleasedReturnValue();

  if (v4)
    objc_msgSend(v4, "pl_safeSetValue:forKey:valueDidChangeHandler:", &unk_1E375DA10, CFSTR("stickerConfidenceAlgorithmVersion"), 0);
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", &unk_1E3764780, CFSTR("stickerConfidenceScore"), 0);

}

- (void)_reloadWidgetTimelineIfNeeded
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BOOL4 v11;
  int v12;
  int v13;
  NSObject *v14;
  _BOOL4 v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint8_t v38[128];
  uint8_t buf[4];
  void *v40;
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    -[PLManagedAsset suggestionsBeingKeyAssets](self, "suggestionsBeingKeyAssets");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(v4, "copy");

    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v35;
LABEL_4:
      v9 = 0;
      while (1)
      {
        if (*(_QWORD *)v35 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * v9);
        if (objc_msgSend(v10, "featuredState") == 1)
          break;
        if (v7 == ++v9)
        {
          v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
          if (v7)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
      v12 = objc_msgSend(v10, "type");
      v11 = v12 != 6;
      if (v12 == 6)
      {
        objc_msgSend(v3, "delayedSaveActions");
        v14 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSObject recordWallpaperSuggestionReloadForUUID:](v14, "recordWallpaperSuggestionReloadForUUID:", v16);
        goto LABEL_16;
      }
      v13 = objc_msgSend(v10, "type");
      PLBackendGetLog();
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
      if (v13 == 7)
      {
        if (!v15)
        {
LABEL_17:

          goto LABEL_18;
        }
        -[PLManagedAsset uuid](self, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v40 = v16;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_INFO, "Recording Album widget timeline invalidation due to asset with featured suggestion being adjusted %{public}@", buf, 0xCu);
LABEL_16:

        goto LABEL_17;
      }
      if (v15)
      {
        -[PLManagedAsset uuid](self, "uuid");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v40 = v29;
        _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_INFO, "Recording ForYou widget timeline invalidation due to asset with featured suggestion being adjusted %{public}@", buf, 0xCu);

      }
      objc_msgSend(v3, "delayedSaveActions");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = v26;
      v28 = 0;
    }
    else
    {
LABEL_10:
      v11 = 0;
LABEL_18:

      v32 = 0u;
      v33 = 0u;
      v30 = 0u;
      v31 = 0u;
      -[PLManagedAsset memoriesBeingKeyAsset](self, "memoriesBeingKeyAsset", 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)objc_msgSend(v17, "copy");

      v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
      if (v19)
      {
        v20 = v19;
        v21 = *(_QWORD *)v31;
LABEL_20:
        v22 = 0;
        while (1)
        {
          if (*(_QWORD *)v31 != v21)
            objc_enumerationMutation(v18);
          if (objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v22), "featuredState") == 1)
            break;
          if (v20 == ++v22)
          {
            v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
            if (v20)
              goto LABEL_20;
            goto LABEL_26;
          }
        }
        PLBackendGetLog();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v40 = v24;
          _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_INFO, "Recording ForYou widget timeline invalidation due to key asset with featured memory being adjusted %{public}@", buf, 0xCu);

        }
        objc_msgSend(v3, "delayedSaveActions");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "recordWidgetTimelineReloadNeededForType:", 0);

        if (!v11)
          goto LABEL_36;
      }
      else
      {
LABEL_26:

        if (!v11)
          goto LABEL_36;
      }
      objc_msgSend(v3, "delayedSaveActions");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = v26;
      v28 = 1;
    }
    objc_msgSend(v26, "recordWidgetTimelineReloadNeededForType:", v28);

  }
LABEL_36:

}

- (void)ensurePlaybackStyleConsistencyWithKindSubtype:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  __int16 v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("kindSubtype"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v9[0] = CFSTR("kindSubtype");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset committedValuesForKeys:](self, "committedValuesForKeys:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v6, "objectForKey:", CFSTR("kindSubtype"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

    if (!-[PLManagedAsset kindSubtype](self, "kindSubtype") && v8 == 2)
      -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", &unk_1E375D9E0, CFSTR("playbackStyle"), 0);

  }
}

- (BOOL)_checkForAndAddFrameDropRecoveryForPhotoKitIngest
{
  BOOL v3;
  BOOL v4;
  void *v5;
  int v6;

  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    return 0;
  v4 = -[PLManagedAsset importedBy](self, "importedBy") != 1 && -[PLManagedAsset importedBy](self, "importedBy") != 2;
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.mobileslideshow"));
  v6 = objc_msgSend(v5, "BOOLForKey:", CFSTR("PLFrameDropRecoveryEnableOnOlderDevices"));
  if ((PLPlatformIsFrameDropRecoverySupported() & 1) != 0 || v6)
  {
    if (-[PLManagedAsset videoDeferredProcessingNeeded](self, "videoDeferredProcessingNeeded"))
      v3 = 0;
    else
      v3 = !v4;
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

- (void)recalculateIsDetectedScreenshot
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (-[PLManagedAsset kind](self, "kind") && -[PLManagedAsset kind](self, "kind") != 1)
  {
    v5 = 0;
    goto LABEL_25;
  }
  if (-[PLManagedAsset kind](self, "kind"))
  {
    if (-[PLManagedAsset kind](self, "kind") != 1
      || -[PLManagedAsset kindSubtype](self, "kindSubtype") != 103)
    {
      goto LABEL_6;
    }
LABEL_10:
    v5 = 1;
    goto LABEL_25;
  }
  if (-[PLManagedAsset kindSubtype](self, "kindSubtype") == 10)
    goto LABEL_10;
LABEL_6:
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "libraryServicesManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "wellKnownPhotoLibraryIdentifier") == 3)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(v4, "searchIndexingEngine");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "configuration");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "sceneTaxonomyProvider");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
      PLBackendGetLog();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
      {
        objc_msgSend(v4, "searchIndexingEngine");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = 138543362;
        v18 = v10;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_FAULT, "configuration.sceneTaxonomyProvider nil on searchIndexingEngine: %{public}@", (uint8_t *)&v17, 0xCu);

      }
    }
    +[PLUtilityAsset utilityAssetFromManagedAsset:usingPool:](PLUtilityAsset, "utilityAssetFromManagedAsset:usingPool:", self, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "searchIndexSceneTaxonomyForSceneAnalysisVersion:", (__int16)objc_msgSend(v11, "sceneAnalysisVersion"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_alloc(MEMORY[0x1E0D78210]);
    if (v12)
      v14 = objc_msgSend(v13, "initWithSceneTaxonomy:", v12);
    else
      v14 = objc_msgSend(v13, "initWithSceneAnalysisVersion:", objc_msgSend(v11, "sceneAnalysisVersion"));
    v15 = (void *)v14;
    v5 = 0;
    if (v11 && v14)
    {
      if (objc_opt_class())
        v5 = objc_msgSend(MEMORY[0x1E0D78230], "screenshotInferredInAsset:usingSceneModel:", v11, v15);
      else
        v5 = 0;
    }

  }
LABEL_25:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v5);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v16, CFSTR("isDetectedScreenshot"), 0);

}

- (void)recalculateIsRecentlySaved
{
  void *v3;
  int v4;
  void *v5;
  int v6;
  id v7;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", -[PLManagedAsset importedBy](self, "importedBy"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(&unk_1E37633B0, "containsObject:", v3);

  -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqualToString:", CFSTR("com.apple.camera.CameraMessagesApp"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", (v6 | v4) ^ 1u);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v7, CFSTR("isRecentlySaved"), 0);

}

- (void)willSave
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _BOOL4 v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  char v41;
  void *v42;
  void *v43;
  unsigned int v44;
  unsigned __int16 v45;
  BOOL v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  char v70;
  NSObject *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  NSObject *v77;
  void *v78;
  NSObject *v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  uint64_t v89;
  void *v90;
  int v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BOOL4 v97;
  void *v98;
  void *v99;
  int v100;
  void *v101;
  void *v102;
  void *v103;
  NSObject *v104;
  void *v105;
  void *v106;
  uint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  __int16 v112;
  void *v113;
  void *v114;
  void *v115;
  NSObject *v116;
  void *v117;
  _BOOL4 v118;
  const __CFString *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  NSObject *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  uint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  char v138;
  void *v139;
  void *v140;
  void *v141;
  int v142;
  uint64_t v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  int v149;
  void *v150;
  void *v151;
  void *v152;
  id v153;
  void *v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  void *v158;
  char v159;
  void *v160;
  char v161;
  objc_super v162;
  _QWORD v163[2];
  uint8_t buf[4];
  void *v165;
  __int16 v166;
  _BYTE v167[10];
  _QWORD v168[3];

  v168[1] = *MEMORY[0x1E0C80C00];
  v162.receiver = self;
  v162.super_class = (Class)PLManagedAsset;
  -[PLManagedObject willSave](&v162, sel_willSave);
  if (-[PLManagedAsset isDeleted](self, "isDeleted")
    && ((PLIsAssetsd() & 1) != 0 || MEMORY[0x19AEC0720]()))
  {
    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLGraphEdge cleanupDanglingReferencesInManagedObjectContext:](PLGraphEdge, "cleanupDanglingReferencesInManagedObjectContext:", v3);

  }
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v4, "userInfo");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLClientServerTransaction transactionFromUserInfo:](PLClientServerTransaction, "transactionFromUserInfo:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
      objc_msgSend(v6, "pushChangeScopesBatch");
    v160 = v6;
    -[PLManagedAsset changedValues](self, "changedValues");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[PLManagedAsset isSyncableChange](self, "isSyncableChange");
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("modificationDate"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9 && v8)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setModificationDate:](self, "setModificationDate:", v10);

    }
    if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) != 0)
    {
LABEL_102:
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("savedAssetType"));
      v62 = (void *)objc_claimAutoreleasedReturnValue();

      if (v62)
      {
        v168[0] = CFSTR("savedAssetType");
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v168, 1);
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset committedValuesForKeys:](self, "committedValuesForKeys:", v63);
        v64 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("savedAssetType"));
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        v66 = objc_msgSend(v65, "shortValue");

        objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("savedAssetType"));
        v67 = (void *)objc_claimAutoreleasedReturnValue();
        v68 = objc_msgSend(v67, "shortValue");

        if ((objc_msgSend(MEMORY[0x1E0D73310], "allowSavedAssetTypeMutationFrom:to:", v66, v68) & 1) == 0)
        {
          -[PLManagedObject photoLibrary](self, "photoLibrary");
          v69 = (void *)objc_claimAutoreleasedReturnValue();
          v70 = objc_msgSend(v69, "isUnitTesting");

          if ((v70 & 1) == 0)
          {
            PLBackendGetLog();
            v71 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v71, OS_LOG_TYPE_FAULT))
            {
              -[PLManagedAsset uuid](self, "uuid");
              v72 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543874;
              v165 = v72;
              v166 = 1024;
              *(_DWORD *)v167 = v66;
              *(_WORD *)&v167[4] = 1024;
              *(_DWORD *)&v167[6] = v68;
              _os_log_impl(&dword_199541000, v71, OS_LOG_TYPE_FAULT, "Attempting to modify the saved asset type is not permitted for asset %{public}@. From: %d to: %d", buf, 0x18u);

            }
          }
        }

      }
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("videoKeyFrameValue"));
      v73 = (void *)objc_claimAutoreleasedReturnValue();

      if (v73)
      {
        -[PLManagedAsset resetKeyFaceOnVideoKeyFrameChange](self, "resetKeyFaceOnVideoKeyFrameChange");
        objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("modificationDate"));
        v74 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v74)
        {
          objc_msgSend(MEMORY[0x1E0C99D68], "date");
          v75 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset setModificationDate:](self, "setModificationDate:", v75);

        }
        if (-[PLManagedAsset isVideo](self, "isVideo")
          && !-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
        {
          -[PLManagedAsset videoKeyFrameTime](self, "videoKeyFrameTime");
          if ((v161 & 0x1D) == 1)
          {
            -[PLManagedAsset localVideoKeyFrameResource](self, "localVideoKeyFrameResource");
            v76 = (void *)objc_claimAutoreleasedReturnValue();

            if (v76)
            {
              PLBackendGetLog();
              v77 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v77, OS_LOG_TYPE_DEBUG))
              {
                -[PLManagedAsset uuid](self, "uuid");
                v78 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543362;
                v165 = v78;
                _os_log_impl(&dword_199541000, v77, OS_LOG_TYPE_DEBUG, "Pruning local video key frame due to media analsysis key frame time change change for asset: %{public}@", buf, 0xCu);

              }
              -[PLManagedAsset pruneLocalVideoKeyFrameImage](self, "pruneLocalVideoKeyFrameImage");
            }
            else
            {
              v82 = +[PLResourceInstaller onDemand_installLocalVideoKeyFrameForAsset:](PLResourceInstaller, "onDemand_installLocalVideoKeyFrameForAsset:", self);
            }
          }
          else
          {
            PLBackendGetLog();
            v79 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v79, OS_LOG_TYPE_DEBUG))
            {
              -[PLManagedAsset uuid](self, "uuid");
              v80 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543362;
              v165 = v80;
              _os_log_impl(&dword_199541000, v79, OS_LOG_TYPE_DEBUG, "Pruning and deleting local key frame resource due to media analysis key frame time invalidated for asset: %{public}@", buf, 0xCu);

            }
            -[PLManagedAsset pruneLocalVideoKeyFrameImage](self, "pruneLocalVideoKeyFrameImage");
            -[PLManagedAsset localVideoKeyFrameResource](self, "localVideoKeyFrameResource");
            v81 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v81, "deleteResource");

          }
        }
        -[PLManagedAsset _resetComputedAttributesIncludingMediaAnalysisAttributes:](self, "_resetComputedAttributesIncludingMediaAnalysisAttributes:", 0);
        -[PLManagedAsset resetSceneAnalysisStates](self, "resetSceneAnalysisStates");
        -[PLManagedAsset resetFaceAnalysisStates](self, "resetFaceAnalysisStates");
      }
      if (-[PLManagedAsset _hasBecomeNonVisibleToMemoriesAndPersonsAndSuggestions:](self, "_hasBecomeNonVisibleToMemoriesAndPersonsAndSuggestions:", v7)&& !-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset")&& !-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
      {
        -[PLManagedAsset fixupMemoriesWithMissingKeyAsset](self, "fixupMemoriesWithMissingKeyAsset");
        -[PLManagedAsset removeAssetFromRelatedSuggestionsAndFixupSuggestions](self, "removeAssetFromRelatedSuggestionsAndFixupSuggestions");
      }
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("favorite"));
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      if (v83)
      {

      }
      else
      {
        objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("albums"));
        v84 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v84)
        {
LABEL_132:
          objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("trashedState"));
          v85 = (void *)objc_claimAutoreleasedReturnValue();
          if (v85
            || (objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("hidden")),
                (v85 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
          {

          }
          else
          {
            objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("dateCreated"));
            v146 = (void *)objc_claimAutoreleasedReturnValue();

            if (!v146)
            {
LABEL_136:
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("detectedFaces"));
              v88 = (void *)objc_claimAutoreleasedReturnValue();

              if (v88)
                -[PLManagedAsset revalidateFaceAreaPoints](self, "revalidateFaceAreaPoints");
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("trashedState"));
              v89 = objc_claimAutoreleasedReturnValue();
              if (v89)
              {
                v90 = (void *)v89;
                v91 = -[PLManagedAsset trashedState](self, "trashedState");

                if (v91 == 2)
                {
                  objc_msgSend(v4, "delayedSaveActions");
                  v92 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v92, "recordAssetForDuetDelete:", self);

                }
              }
              objc_msgSend(v7, "objectForKey:", CFSTR("modernResources"));
              v93 = objc_claimAutoreleasedReturnValue();
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("deferredProcessingNeeded"));
              v94 = objc_claimAutoreleasedReturnValue();

              v95 = v94 | v93;
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("additionalAttributes.originalResourceChoice"));
              v96 = objc_claimAutoreleasedReturnValue();

              v97 = (v96 | v93) != 0;
              if (v95)
                -[PLManagedAsset recalculateImageRequestHints](self, "recalculateImageRequestHints");
              if (v97)
                -[PLManagedAsset recalculateRAWBadgeAttribute](self, "recalculateRAWBadgeAttribute");
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("adjustmentTimestamp"));
              v98 = (void *)objc_claimAutoreleasedReturnValue();

              if (v98)
              {
                -[PLManagedAsset _resetMediaAnalysisStateOnEdit](self, "_resetMediaAnalysisStateOnEdit");
                -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
                v99 = (void *)objc_claimAutoreleasedReturnValue();
                v100 = objc_msgSend(v99, "hasDuplicateMatchingData");

                if (v100)
                {
                  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
                  v101 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v101, "setDuplicateMatchingData:duplicateMatchingAlternateData:processingSucceeded:", 0, 0, 1);

                }
                if (!-[PLManagedAsset isValidForPerceptualProcessing](self, "isValidForPerceptualProcessing"))
                {
                  -[PLManagedObject photoLibrary](self, "photoLibrary");
                  v102 = (void *)objc_claimAutoreleasedReturnValue();
                  +[PLDuplicateProcessor signalBackgroundJobServiceDuplicateProcessingWithLibrary:](PLDuplicateProcessor, "signalBackgroundJobServiceDuplicateProcessingWithLibrary:", v102);

                }
              }
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("mediaAnalysisAttributes"));
              v103 = (void *)objc_claimAutoreleasedReturnValue();

              if (v103)
              {
                PLBackendGetLog();
                v104 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v104, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl(&dword_199541000, v104, OS_LOG_TYPE_DEBUG, "Pruning local video key frame due to media analysis attributes relationship change", buf, 2u);
                }

                -[PLManagedAsset pruneLocalVideoKeyFrameImage](self, "pruneLocalVideoKeyFrameImage");
              }
              -[PLManagedAsset ensurePlaybackStyleConsistencyWithKindSubtype:](self, "ensurePlaybackStyleConsistencyWithKindSubtype:", v7);
              -[PLManagedObject photoLibrary](self, "photoLibrary");
              v105 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v105, "libraryServicesManager");
              v106 = (void *)objc_claimAutoreleasedReturnValue();

              if (objc_msgSend(v106, "wellKnownPhotoLibraryIdentifier") == 3
                && (-[PLManagedAsset isDeleted](self, "isDeleted") & 1) == 0)
              {
                v107 = v93;
                v163[0] = CFSTR("savedAssetType");
                v163[1] = CFSTR("syndicationState");
                objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v163, 2);
                v108 = (void *)objc_claimAutoreleasedReturnValue();
                -[PLManagedAsset committedValuesForKeys:](self, "committedValuesForKeys:", v108);
                v109 = (void *)objc_claimAutoreleasedReturnValue();

                v110 = (void *)objc_opt_class();
                objc_msgSend(v109, "objectForKeyedSubscript:", CFSTR("savedAssetType"));
                v111 = (void *)objc_claimAutoreleasedReturnValue();
                v112 = objc_msgSend(v111, "integerValue");
                objc_msgSend(v109, "objectForKeyedSubscript:", CFSTR("syndicationState"));
                v113 = (void *)objc_claimAutoreleasedReturnValue();
                LODWORD(v110) = objc_msgSend(v110, "shouldSyncAssetToSPLWithSavedAssetType:syndicationState:", v112, (unsigned __int16)objc_msgSend(v113, "integerValue"));

                if ((_DWORD)v110 != -[PLManagedAsset shouldSyncToSPL](self, "shouldSyncToSPL"))
                {
                  -[PLManagedAsset uuid](self, "uuid");
                  v114 = (void *)objc_claimAutoreleasedReturnValue();
                  +[PLBackgroundJobWorkItem insertBackgroundJobWorkItemIfNeededWithIdentifier:jobType:jobFlags:inManagedObjectContext:](PLBackgroundJobWorkItem, "insertBackgroundJobWorkItemIfNeededWithIdentifier:jobType:jobFlags:inManagedObjectContext:", v114, 0, 1, v4);
                  v115 = (void *)objc_claimAutoreleasedReturnValue();

                  if (v115)
                  {
                    PLSyndicationGetLog();
                    v116 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v116, OS_LOG_TYPE_DEBUG))
                    {
                      -[PLManagedAsset uuid](self, "uuid");
                      v117 = (void *)objc_claimAutoreleasedReturnValue();
                      v118 = -[PLManagedAsset shouldSyncToSPL](self, "shouldSyncToSPL");
                      v119 = CFSTR("should not");
                      if (v118)
                        v119 = CFSTR("should");
                      *(_DWORD *)buf = 138412546;
                      v165 = v117;
                      v166 = 2112;
                      *(_QWORD *)v167 = v119;
                      _os_log_impl(&dword_199541000, v116, OS_LOG_TYPE_DEBUG, "GuestAssetSync: property changes to asset: %@ indicate %@ sync to SPL, triggering update", buf, 0x16u);

                    }
                  }
                  objc_msgSend(v106, "backgroundJobService");
                  v120 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PLManagedObject photoLibrary](self, "photoLibrary");
                  v121 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v120, "signalBackgroundProcessingNeededOnLibrary:", v121);

                }
                v93 = v107;
              }
              if (-[PLManagedAsset shouldPurgeSyndicationResourcesWithChangedValues:](self, "shouldPurgeSyndicationResourcesWithChangedValues:", v7))
              {
                -[PLManagedAsset purgeSyndicationResourcesAfterMediaAnalysisProcessing](self, "purgeSyndicationResourcesAfterMediaAnalysisProcessing");
              }
              if (PLPlatformMomentsSupported())
              {
                objc_msgSend(v4, "delayedSaveActions");
                v122 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v122, "recordAssetForMomentUpdate:", self);

              }
              if (PLPlatformCloudFeedSupported())
              {
                objc_msgSend(v4, "delayedSaveActions");
                v123 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v123, "recordAssetForCloudFeedUpdate:", self);

              }
              if (PLPlatformSearchSupported())
              {
                objc_msgSend(v4, "delayedSaveActions");
                v124 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v124, "recordAssetForSearchIndexUpdate:", self);

              }
              if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) == 0)
                +[PLDelayedSearchIndexUpdates recordAssetIfNeeded:](PLDelayedSearchIndexUpdates, "recordAssetIfNeeded:", self);
              objc_msgSend(v4, "recordAvalancheUUIDForUpdate:", self);
              objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("trashedState"));
              v125 = objc_claimAutoreleasedReturnValue();
              if (v125
                || (objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("hidden")),
                    (v125 = objc_claimAutoreleasedReturnValue()) != 0))
              {
                v126 = (void *)v125;
                if (objc_msgSend(v106, "wellKnownPhotoLibraryIdentifier") == 1)
                {

                }
                else
                {
                  v127 = objc_msgSend(v106, "wellKnownPhotoLibraryIdentifier");

                  if (v127)
                    goto LABEL_183;
                }
                PLBackendGetLog();
                v128 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v128, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl(&dword_199541000, v128, OS_LOG_TYPE_DEBUG, "Signaling delayed background processing needed for LockedResourceWorker", buf, 2u);
                }

                objc_msgSend(v4, "recordNeedsBackgroundJobProcessing");
              }
LABEL_183:
              -[PLManagedObject photoLibrary](self, "photoLibrary");
              v129 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v129, "libraryServicesManager");
              v130 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v130, "modelMigrator");
              v131 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v131, "isPostProcessingLightweightMigration"))
              {

              }
              else
              {
                v132 = v4;
                v133 = v93;
                -[PLManagedObject photoLibrary](self, "photoLibrary");
                v134 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v134, "thumbnailManager");
                v135 = (void *)objc_claimAutoreleasedReturnValue();
                if ((objc_msgSend(v135, "isRebuildingThumbnails") & 1) != 0
                  || !PLCameraPreviewWellSupportedOnCurrentDevice())
                {

                  v93 = v133;
                  v4 = v132;
                }
                else
                {
                  v159 = -[PLManagedAsset isInserted](self, "isInserted");

                  v93 = v133;
                  v4 = v132;
                  if ((v159 & 1) != 0)
                    goto LABEL_193;
                  objc_msgSend(v132, "userInfo");
                  v136 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v136, "objectForKeyedSubscript:", CFSTR("com.apple.photos.PLCameraPreviewWellNeedsUpdate"));
                  v137 = (void *)objc_claimAutoreleasedReturnValue();
                  v138 = objc_msgSend(v137, "BOOLValue");

                  if ((v138 & 1) != 0)
                    goto LABEL_193;
                  -[PLManagedObject photoLibrary](self, "photoLibrary");
                  v139 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v139, "libraryServicesManager");
                  v140 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v140, "cameraPreviewWellManager");
                  v141 = (void *)objc_claimAutoreleasedReturnValue();
                  v142 = objc_msgSend(v141, "shouldReconsiderCameraPreviewWellImageForUpdatedAsset:thumbnailWasGenerated:", self, 0);

                  if (!v142)
                  {
LABEL_193:
                    if (_os_feature_enabled_impl())
                    {
                      if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) == 0)
                      {
                        if (PLPlatformMomentsSupported())
                        {
                          -[PLManagedAsset highlightBeingExtendedAssets](self, "highlightBeingExtendedAssets");
                          v143 = objc_claimAutoreleasedReturnValue();
                          if (v143)
                          {
                            v144 = (void *)v143;
                            objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("dateCreated"));
                            v145 = (void *)objc_claimAutoreleasedReturnValue();
                            if (v145)
                            {

                              goto LABEL_202;
                            }
                            objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("activeLibraryScopeParticipationState"));
                            v147 = (void *)objc_claimAutoreleasedReturnValue();

                            if (v147)
                            {
LABEL_202:
                              -[PLManagedAsset highlightBeingExtendedAssets](self, "highlightBeingExtendedAssets");
                              v148 = (void *)objc_claimAutoreleasedReturnValue();
                              v149 = objc_msgSend(v148, "kind");

                              if (!v149)
                              {
                                -[PLManagedAsset highlightBeingExtendedAssets](self, "highlightBeingExtendedAssets");
                                v150 = (void *)objc_claimAutoreleasedReturnValue();
                                objc_msgSend(v150, "recalculateCollageAssets");

                              }
                            }
                          }
                        }
                      }
                    }
                    if (v160)
                      objc_msgSend(v160, "popChangeScopesBatch");

                    goto LABEL_207;
                  }
                  objc_msgSend(v4, "userInfo");
                  v129 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v129, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("com.apple.photos.PLCameraPreviewWellNeedsUpdate"));
                }
              }

              goto LABEL_193;
            }
          }
          objc_msgSend(v4, "delayedSaveActions");
          v86 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v86, "recordAssetForAlbumCountsDateRangeAndKeyAssetsUpdate:", self);

          objc_msgSend(v4, "delayedSaveActions");
          v87 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v87, "recordAssetForImportSessionCountsAndDateRangeUpdate:", self);

          goto LABEL_136;
        }
      }
      -[PLManagedAsset removeAssetFromUserAlbumSuggestionIfNeededWithChangedValues:](self, "removeAssetFromUserAlbumSuggestionIfNeededWithChangedValues:", v7);
      goto LABEL_132;
    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("libraryScope"));
    v11 = objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v12 = (void *)v11;
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("activeLibraryScopeParticipationState"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v13)
      {
        PLBackendGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_FAULT, "-[PLManagedAsset willSave] detected a change with changedValues[libraryScope] but no corresponding change to activeLibraryScopeParticipationState.", buf, 2u);
        }

        -[PLManagedAsset libraryScope](self, "libraryScope");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = +[PLLibraryScope participationStateFromLibraryScope:](PLLibraryScope, "participationStateFromLibraryScope:", v15);

        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v17, CFSTR("activeLibraryScopeParticipationState"), 0);

      }
    }
    if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    {
      if (-[PLManagedAsset isInserted](self, "isInserted")
        && -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset")
        && -[PLManagedAsset visibilityState](self, "visibilityState") != 2)
      {
        -[PLManagedAsset setVisibilityState:](self, "setVisibilityState:", 2);
      }
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("avalanchePickType"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (v18)
      {
        v157 = 1;
      }
      else
      {
        objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("avalancheUUID"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v157 = v19 != 0;

      }
    }
    else
    {
      v157 = 0;
    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("dateCreated"));
    v20 = objc_claimAutoreleasedReturnValue();
    if (v20)
    {
      v21 = (void *)v20;
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("sortToken"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v22)
      {
        -[PLManagedAsset dateCreated](self, "dateCreated");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "timeIntervalSinceReferenceDate");
        v25 = v24;

        -[PLManagedAsset sortToken](self, "sortToken");
        if (vabdd_f64(v26, v25) > 2.22044605e-16)
          -[PLManagedAsset setSortToken:](self, "setSortToken:", v25);
      }
    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("hidden"));
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("favorite"));
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("trashedState"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("deferredProcessingNeeded"));
    v154 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("addedDate"));
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    if (-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
    {
      v156 = 0;
    }
    else
    {
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("cloudAssetGUID"));
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v156 = v31 != 0;

    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("mediaGroupUUID"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("videoCpDurationValue"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    if (v33)
    {
      v155 = 1;
    }
    else
    {
      v34 = v30;
      v35 = v32;
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("additionalAttributes.videoCpDurationTimescale"));
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      if (v36)
      {
        v155 = 1;
      }
      else
      {
        objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("additionalAttributes.videoCpDisplayValue"));
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        if (v37)
        {
          v155 = 1;
        }
        else
        {
          objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("additionalAttributes.videoCpDisplayTimescale"));
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          v155 = v38 != 0;

          v37 = 0;
        }

      }
      v32 = v35;
      v30 = v34;
    }

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("videoCpVisibilityState"));
    v39 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("libraryScopeShareState"));
    v153 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("trashedReason"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset _recordAssetPersonEdgeAndSocialGroupContainmentUpdateIfNeededWithChangedValues:inContext:](self, "_recordAssetPersonEdgeAndSocialGroupContainmentUpdateIfNeededWithChangedValues:inContext:", v7, v4);
    if (v27)
      v41 = 1;
    else
      v41 = v157;
    if ((v41 & 1) == 0 && !v28 && !v29 && !self->_setCustomCreationDate)
    {
      v46 = !self->_setCustomLocation && v30 == 0;
      v47 = v156;
      if (!v46)
        v47 = 1;
      if (v32)
        v47 = 1;
      if (((v47 | v155) & 1) == 0 && !v39 && !v154 && !v153 && !v40)
      {
LABEL_99:
        -[PLManagedAsset _duplicateProcessingChanges:](self, "_duplicateProcessingChanges:", v7);
        if ((-[PLManagedAsset isInserted](self, "isInserted") & 1) != 0
          || (objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("dateCreated")),
              v61 = (void *)objc_claimAutoreleasedReturnValue(),
              v61,
              v61))
        {
          -[PLManagedAsset recalculateIsRecentlySaved](self, "recalculateIsRecentlySaved");
        }
        goto LABEL_102;
      }
    }
    v152 = v40;
    -[PLManagedAsset persistedFileSystemAttributesFileURL](self, "persistedFileSystemAttributesFileURL");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v42 || !-[PLManagedAsset isValidTypeForPersistence](self, "isValidTypeForPersistence"))
    {
LABEL_98:

      goto LABEL_99;
    }
    v151 = v32;
    objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v42);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    if (v157)
    {
      v44 = -[PLManagedAsset avalancheKind](self, "avalancheKind");
      if (v44 < 2)
      {
        -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
        v158 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "setUUIDString:forKey:", v158, *MEMORY[0x1E0D73EC8]);

        v45 = -[PLManagedAsset avalanchePickType](self, "avalanchePickType");
LABEL_70:
        objc_msgSend(v43, "setUInt16:forKey:", v45, *MEMORY[0x1E0D73EC0]);
        goto LABEL_71;
      }
      if (v44 == 2)
      {
        v45 = 0;
        goto LABEL_70;
      }
    }
LABEL_71:
    if (v27)
    {
      v48 = -[PLManagedAsset hidden](self, "hidden");
      objc_msgSend(v43, "setUInt16:forKey:", v48, *MEMORY[0x1E0D73F30]);
    }
    if (v28)
    {
      v49 = -[PLManagedAsset favorite](self, "favorite");
      objc_msgSend(v43, "setUInt16:forKey:", v49, *MEMORY[0x1E0D73F28]);
    }
    if (v29)
    {
      v50 = -[PLManagedAsset isInTrash](self, "isInTrash");
      objc_msgSend(v43, "setUInt16:forKey:", v50, *MEMORY[0x1E0D74000]);
    }
    if (v154)
    {
      v51 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
      objc_msgSend(v43, "setUInt16:forKey:", v51, *MEMORY[0x1E0D73F08]);
    }
    if (self->_setCustomCreationDate)
    {
      -[PLManagedAsset dateCreatedData](self, "dateCreatedData");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "setData:forKey:", v52, *MEMORY[0x1E0D73EE8]);

    }
    if (self->_setCustomLocation)
    {
      -[PLManagedAsset locationData](self, "locationData");
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "setData:forKey:", v53, *MEMORY[0x1E0D73EF0]);

    }
    if (v30)
    {
      -[PLManagedAsset addedDateData](self, "addedDateData");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "setData:forKey:", v54, *MEMORY[0x1E0D73EB0]);

    }
    if (v156)
    {
      -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "setString:forKey:", v55, *MEMORY[0x1E0D73ED0]);

    }
    if (v151)
    {
      -[PLManagedAsset _mediaGroupUUIDForPersistence](self, "_mediaGroupUUIDForPersistence");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "setString:forKey:", v56, *MEMORY[0x1E0D73F88]);

    }
    if (v155)
    {
      -[PLManagedAsset videoComplementData](self, "videoComplementData");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "setData:forKey:", v57, *MEMORY[0x1E0D73F20]);

    }
    if (v39)
    {
      v58 = -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState");
      objc_msgSend(v43, "setUInt16:forKey:", v58, *MEMORY[0x1E0D74018]);
    }
    if (v153)
    {
      v59 = -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState");
      objc_msgSend(v43, "setUInt64:forKey:", v59, *MEMORY[0x1E0D73F80]);
    }
    if (v152)
    {
      v60 = -[PLManagedAsset trashedReason](self, "trashedReason");
      objc_msgSend(v43, "setUInt16:forKey:", v60, *MEMORY[0x1E0D74008]);
    }
    objc_msgSend(v43, "persist");

    goto LABEL_98;
  }
LABEL_207:

}

- (void)_recordAssetPersonEdgeAndSocialGroupContainmentUpdateIfNeededWithChangedValues:(id)a3 inContext:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a3;
  v6 = a4;
  objc_msgSend(v11, "objectForKey:", CFSTR("hidden"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7
    || (objc_msgSend(v11, "objectForKey:", CFSTR("trashedState")),
        (v7 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {

  }
  else
  {
    objc_msgSend(v11, "objectForKey:", CFSTR("visibilityState"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10)
      goto LABEL_5;
  }
  objc_msgSend(v6, "delayedSaveActions");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "recordAssetPersonEdgeUpdateNeededForAsset:", self);

  objc_msgSend(v6, "delayedSaveActions");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "recordSocialGroupContainmentUpdateNeededForAsset:", self);

LABEL_5:
}

- (void)_duplicateProcessingChanges:(id)a3
{
  void *v4;
  void *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  id v21;

  v21 = a3;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryServicesManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = +[PLDuplicateProcessor isDuplicateProcessorEnabledForLibraryServicesManager:](PLDuplicateProcessor, "isDuplicateProcessorEnabledForLibraryServicesManager:", v5);

  if (v6)
  {
    v7 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("hidden"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("trashedState"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("activeLibraryScopeParticipationState"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      if ((-[PLManagedAsset hidden](self, "hidden") & 1) != 0)
        goto LABEL_8;
      if (!v9)
        goto LABEL_10;
    }
    else if (!v9)
    {
LABEL_11:
      if (v10)
      {
        -[PLManagedAsset removeFromDuplicateAlbum](self, "removeFromDuplicateAlbum");
LABEL_15:
        v11 = 1;
        goto LABEL_19;
      }
      if (+[PLDuplicateAsset isDuplicateAssetSortChangedObject:](PLDuplicateAsset, "isDuplicateAssetSortChangedObject:", self))
      {
        -[PLManagedAsset duplicateAlbum](self, "duplicateAlbum");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "sortAssets");

      }
LABEL_18:
      v11 = 0;
LABEL_19:
      objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("kindSubtype"));
      v13 = objc_claimAutoreleasedReturnValue();

      if (v13)
      {
        v14 = -[PLManagedAsset kindSubtype](self, "kindSubtype");
        v13 = 4 * (v14 == 10);
        v15 = 4 * (v14 != 10);
        v11 = 1;
      }
      else
      {
        v15 = 0;
      }
      objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("kind"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        if (-[PLManagedAsset kind](self, "kind") == 1
          || -[PLManagedAsset kind](self, "kind") == 2)
        {
          v13 = v13 | 2;
        }
        else
        {
          v15 = v15 | 2;
        }
        v11 = 1;
      }
      objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("playbackStyle"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      if (v17)
      {
        v18 = -[PLManagedAsset playbackStyle](self, "playbackStyle");
        if (v18 == 2)
          v13 = v13 | 8;
        else
          v13 = v13;
        if (v18 == 2)
          v15 = v15;
        else
          v15 = v15 | 8;
      }
      else if (!v11)
      {
LABEL_39:
        objc_autoreleasePoolPop(v7);
        goto LABEL_40;
      }
      if (v13 | v15)
      {
        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "addDuplicateDetectorPerceptualProcessingStates:removeProcessingStates:", v13, v15);

      }
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLDuplicateProcessor signalBackgroundJobServiceDuplicateProcessingWithLibrary:](PLDuplicateProcessor, "signalBackgroundJobServiceDuplicateProcessingWithLibrary:", v20);

      goto LABEL_39;
    }
    if (!-[PLManagedAsset isInTrash](self, "isInTrash"))
    {
LABEL_10:
      if ((-[PLManagedAsset hidden](self, "hidden") & 1) == 0
        && !-[PLManagedAsset isInTrash](self, "isInTrash")
        && !v10)
      {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
LABEL_8:
    if (!v10)
    {
      -[PLManagedAsset removeFromDuplicateAlbum](self, "removeFromDuplicateAlbum");
      goto LABEL_18;
    }
    goto LABEL_10;
  }
LABEL_40:

}

- (void)_resetComputedAttributesIncludingMediaAnalysisAttributes:(BOOL)a3
{
  _BOOL4 v3;

  v3 = a3;
  -[PLManagedAsset _clearOverallAestheticScore](self, "_clearOverallAestheticScore");
  -[PLManagedAsset _deleteComputedAttributes](self, "_deleteComputedAttributes");
  -[PLManagedAsset _clearPreferredCropRect](self, "_clearPreferredCropRect");
  -[PLManagedAsset _clearAcceptableCropRect](self, "_clearAcceptableCropRect");
  -[PLManagedAsset removeSceneClassifications](self, "removeSceneClassifications");
  -[PLManagedAsset _reloadWidgetTimelineIfNeeded](self, "_reloadWidgetTimelineIfNeeded");
  -[PLManagedAsset removeFromDuplicateAlbum](self, "removeFromDuplicateAlbum");
  -[PLManagedAsset _clearStickerConfidenceAttributes](self, "_clearStickerConfidenceAttributes");
  if (v3)
    -[PLManagedAsset deleteMediaAnalysisAttributes](self, "deleteMediaAnalysisAttributes");
}

- (void)resetSceneAnalysisStates
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "sceneAnalysisVersion");

  if (v4)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setSceneAnalysisVersion:", 0);

  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "sceneAnalysisTimestamp");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setSceneAnalysisTimestamp:", 0);

  }
}

- (void)resetFaceAnalysisStates
{
  PLResetMediaProcessingStateOnAsset(3, self, 1);
}

- (void)_resetMediaAnalysisStateOnEdit
{
  -[PLManagedAsset _resetComputedAttributesIncludingMediaAnalysisAttributes:](self, "_resetComputedAttributesIncludingMediaAnalysisAttributes:", 1);
  -[PLManagedAsset resetSceneAnalysisStates](self, "resetSceneAnalysisStates");
  -[PLManagedAsset resetFaceAnalysisStates](self, "resetFaceAnalysisStates");
}

- (void)removeFromDuplicateAlbum
{
  void *v3;
  id v4;

  -[PLManagedAsset duplicateAlbum](self, "duplicateAlbum");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    -[PLManagedAsset setDuplicateAssetVisibilityState:](self, "setDuplicateAssetVisibilityState:", 0);
    objc_msgSend(v4, "mutableAssets");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "removeObject:", self);

  }
}

- (id)duplicateAlbum
{
  void *v3;
  void *v4;
  _BOOL4 v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *i;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "libraryServicesManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    v5 = +[PLDuplicateProcessor isDuplicateProcessorEnabledForLibraryServicesManager:](PLDuplicateProcessor, "isDuplicateProcessorEnabledForLibraryServicesManager:", v4);
  else
    v5 = 1;
  -[PLManagedAsset albums](self, "albums");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = 0;
  if (v6 && v5)
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    -[PLManagedAsset albums](self, "albums", 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (id)objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v7)
    {
      v9 = *(_QWORD *)v14;
      while (2)
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v14 != v9)
            objc_enumerationMutation(v8);
          v11 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v11, "isDuplicateAlbum"))
          {
            v7 = v11;
            goto LABEL_16;
          }
        }
        v7 = (id)objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        if (v7)
          continue;
        break;
      }
    }
LABEL_16:

  }
  return v7;
}

- (void)didSave
{
  objc_super v2;

  self->_setCustomCreationDate = 0;
  self->_setCustomLocation = 0;
  v2.receiver = self;
  v2.super_class = (Class)PLManagedAsset;
  -[PLManagedAsset didSave](&v2, sel_didSave);
}

- (int64_t)originalImageOrientation
{
  -[PLManagedAsset originalOrientation](self, "originalOrientation");
  return PLImageOrientationFromExifOrientation();
}

- (BOOL)isOriginalSRGB
{
  void *v3;
  void *v4;
  char v5;

  -[PLManagedAsset originalColorSpace](self, "originalColorSpace");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
    return 1;
  -[PLManagedAsset originalColorSpace](self, "originalColorSpace");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqualToString:", CFSTR("sRGB IEC61966-2.1"));

  return v5;
}

- (CGSize)originalImageSize
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGSize result;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalWidth");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "doubleValue");
  v5 = v4;
  objc_msgSend(v2, "originalHeight");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "doubleValue");
  v8 = v7;

  v9 = v5;
  v10 = v8;
  result.height = v10;
  result.width = v9;
  return result;
}

- (PLManagedAsset)originalAsset
{
  void *v3;
  void *v4;
  void *v5;

  -[PLManagedAsset originalAssetsUUID](self, "originalAssetsUUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset assetWithUUID:inLibrary:](PLManagedAsset, "assetWithUUID:inLibrary:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return (PLManagedAsset *)v5;
}

- (void)setOriginalAsset:(id)a3
{
  id v4;

  objc_msgSend(a3, "uuid");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setOriginalAssetsUUID:](self, "setOriginalAssetsUUID:", v4);

}

- (BOOL)hasGPS
{
  return 0;
}

- (BOOL)isTrashed
{
  return -[PLManagedAsset trashedState](self, "trashedState") != 0;
}

- (void)setMoment:(id)a3
{
  id v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  void *v9;
  BOOL v10;
  id v11;
  _QWORD v12[5];
  id v13;
  BOOL v14;
  BOOL v15;

  v4 = a3;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[PLManagedAsset hasLibraryScope](self, "hasLibraryScope");
  objc_msgSend(v5, "libraryServicesManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "databaseContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "momentLibrary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v5 == v9;

  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __28__PLManagedAsset_setMoment___block_invoke;
  v12[3] = &unk_1E36638E8;
  v14 = v10;
  v15 = v6;
  v12[4] = self;
  v13 = v4;
  v11 = v4;
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v11, CFSTR("moment"), v12);

}

- (void)setDateCreated:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __33__PLManagedAsset_setDateCreated___block_invoke;
  v6[3] = &unk_1E36647D8;
  objc_copyWeak(&v8, &location);
  v5 = v4;
  v7 = v5;
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v5, CFSTR("dateCreated"), v6);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);

}

- (void)setUuid:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __26__PLManagedAsset_setUuid___block_invoke;
  v6[3] = &unk_1E36647D8;
  objc_copyWeak(&v8, &location);
  v5 = v4;
  v7 = v5;
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v5, CFSTR("uuid"), v6);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);

}

- (void)_setAllowedForAnalysisDependentValue:(id)a3 forKey:(id)a4
{
  id v7;
  id v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id location;

  v7 = a3;
  v8 = a4;
  if (!v8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 4079, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("key"));

  }
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __62__PLManagedAsset__setAllowedForAnalysisDependentValue_forKey___block_invoke;
  v10[3] = &unk_1E3663910;
  objc_copyWeak(&v11, &location);
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v7, v8, v10);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);

}

- (void)setHidden:(BOOL)a3
{
  id v4;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _setAllowedForAnalysisDependentValue:forKey:](self, "_setAllowedForAnalysisDependentValue:forKey:", v4, CFSTR("hidden"));

}

- (void)setTrashedState:(signed __int16)a3
{
  id v4;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _setAllowedForAnalysisDependentValue:forKey:](self, "_setAllowedForAnalysisDependentValue:forKey:", v4, CFSTR("trashedState"));

}

- (void)setSavedAssetType:(signed __int16)a3
{
  uint64_t v3;
  int v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v3 = a3;
  v6 = -[PLManagedAsset savedAssetType](self, "savedAssetType");
  if (v6 != (_DWORD)v3 && v6 == objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForPromoteToGuestAsset"))
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "libraryServicesManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "wellKnownPhotoLibraryIdentifier");

    if (v9 != 3)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 4104, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("self.photoLibrary.libraryServicesManager.wellKnownPhotoLibraryIdentifier == PLWellKnownPhotoLibraryIdentifierSyndication"));

    }
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v3);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _setAllowedForAnalysisDependentValue:forKey:](self, "_setAllowedForAnalysisDependentValue:forKey:", v11, CFSTR("savedAssetType"));

}

- (void)setAvalanchePickType:(int)a3
{
  id v4;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", *(_QWORD *)&a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _setAllowedForAnalysisDependentValue:forKey:](self, "_setAllowedForAnalysisDependentValue:forKey:", v4, CFSTR("avalanchePickType"));

}

- (void)setFaceAdjustmentVersion:(id)a3
{
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", a3, CFSTR("faceAdjustmentVersion"), 0);
}

- (void)setFaceCrop:(id)a3
{
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", a3, CFSTR("faceCrop"), 0);
}

- (void)setLibraryScope:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;

  v4 = a3;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __34__PLManagedAsset_setLibraryScope___block_invoke;
  v7[3] = &unk_1E3663938;
  v7[4] = &v8;
  -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v4, CFSTR("libraryScope"), v7);
  if (*((_BYTE *)v9 + 24))
  {
    v5 = +[PLLibraryScope participationStateFromLibraryScope:](PLLibraryScope, "participationStateFromLibraryScope:", v4);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedObject pl_safeSetValue:forKey:valueDidChangeHandler:](self, "pl_safeSetValue:forKey:valueDidChangeHandler:", v6, CFSTR("activeLibraryScopeParticipationState"), 0);

  }
  _Block_object_dispose(&v8, 8);

}

- (void)revalidateFaceAreaPoints
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  unint64_t v23;
  void *v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double MinX;
  double MaxX;
  double MinY;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _BYTE v44[128];
  uint64_t v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v45 = *MEMORY[0x1E0C80C00];
  v42 = 0xBFF0000000000000;
  v43 = 0xBFF0000000000000;
  v40 = 0xBFF0000000000000;
  v41 = 0xBFF0000000000000;
  -[PLManagedAsset detectedFaces](self, "detectedFaces");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "count");

  if (v4)
  {
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    -[PLManagedAsset detectedFaces](self, "detectedFaces", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v37;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v37 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
          if ((objc_msgSend(v10, "isTorsoOnly") & 1) == 0)
          {
            objc_msgSend(v10, "centerX");
            v12 = v11;
            objc_msgSend(v10, "centerY");
            v14 = v13;
            objc_msgSend(v10, "size");
            v16 = v15 * 0.5;
            v17 = v12 - v15 * 0.5;
            if (v17 < 0.0)
              v17 = 0.0;
            v18 = v12 + v16;
            if (v12 + v16 > 1.0)
              v18 = 1.0;
            v19 = v14 - v16;
            if (v14 - v16 < 0.0)
              v19 = 0.0;
            v20 = v14 + v16;
            if (v20 > 1.0)
              v20 = 1.0;
            -[PLManagedAsset _coordinatesFromDoubles:faceMaxX:faceMinY:faceMaxY:minX:maxX:minY:maxY:](self, "_coordinatesFromDoubles:faceMaxX:faceMinY:faceMaxY:minX:maxX:minY:maxY:", &v43, &v41, &v42, &v40, v17, v18, v19, v20);
          }
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
      }
      while (v7);
    }
LABEL_24:

    goto LABEL_25;
  }
  -[PLManagedAsset faceRegions](self, "faceRegions");
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  if (v21)
  {
    -[PLManagedAsset faceRegions](self, "faceRegions");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    PLManagedAssetDecodeFaceRegions(v22);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v5, "count"))
    {
      v23 = 0;
      do
      {
        objc_msgSend(v5, "objectAtIndexedSubscript:", v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = MEMORY[0x19AEBFD00]();
        v27 = v26;
        v29 = v28;
        v31 = v30;

        v46.origin.x = v25;
        v46.origin.y = v27;
        v46.size.width = v29;
        v46.size.height = v31;
        MinX = CGRectGetMinX(v46);
        v47.origin.x = v25;
        v47.origin.y = v27;
        v47.size.width = v29;
        v47.size.height = v31;
        MaxX = CGRectGetMaxX(v47);
        v48.origin.x = v25;
        v48.origin.y = v27;
        v48.size.width = v29;
        v48.size.height = v31;
        MinY = CGRectGetMinY(v48);
        v49.origin.x = v25;
        v49.origin.y = v27;
        v49.size.width = v29;
        v49.size.height = v31;
        -[PLManagedAsset _coordinatesFromDoubles:faceMaxX:faceMinY:faceMaxY:minX:maxX:minY:maxY:](self, "_coordinatesFromDoubles:faceMaxX:faceMinY:faceMaxY:minX:maxX:minY:maxY:", &v43, &v41, &v42, &v40, MinX, MaxX, MinY, CGRectGetMaxY(v49));
        ++v23;
      }
      while (objc_msgSend(v5, "count") > v23);
    }
    goto LABEL_24;
  }
LABEL_25:
  v35 = PLCombineToInt64();
  if (-[PLManagedAsset faceAreaPoints](self, "faceAreaPoints") != v35)
    -[PLManagedAsset setFaceAreaPoints:](self, "setFaceAreaPoints:", v35);
}

- (void)_coordinatesFromDoubles:(double)a3 faceMaxX:(double)a4 faceMinY:(double)a5 faceMaxY:(double)a6 minX:(double *)a7 maxX:(double *)a8 minY:(double *)a9 maxY:(double *)a10
{
  double v11;
  double v13;
  double v15;

  if (*a7 < a3 && *a7 > -1.0)
    a3 = *a7;
  *a7 = a3;
  v11 = *a9;
  if (*a9 >= a5 || v11 <= -1.0)
    v11 = a5;
  *a9 = v11;
  v13 = *a8;
  if (*a8 <= a4 || v13 <= -1.0)
    v13 = a4;
  *a8 = v13;
  v15 = *a10;
  if (*a10 <= a6 || v15 <= -1.0)
    v15 = a6;
  *a10 = v15;
}

- (NSURL)cachedNonPersistedVideoPlaybackURL
{
  NSURL *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  int v12;
  void *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = self->cachedNonPersistedVideoPlaybackURL;
  -[PLManagedAsset cachedNonPersistedVideoPlaybackURLExpiration](self, "cachedNonPersistedVideoPlaybackURLExpiration");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    PLPhotoSharingGetLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "timeIntervalSinceDate:", v4);
      v12 = 138412546;
      v13 = v4;
      v14 = 2048;
      v15 = v7;
      _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "cachedNonPersistedVideoPlaybackURLExpiration %@ %lf", (uint8_t *)&v12, 0x16u);

    }
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v4, "compare:", v8);

    if (v9 != 1)
    {
      PLPhotoSharingGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v12 = 138412290;
        v13 = v4;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "cachedNonPersistedVideoPlaybackURL expired on %@", (uint8_t *)&v12, 0xCu);
      }

      v3 = 0;
    }
  }

  return v3;
}

- (id)pathToOriginalVideoFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  NSObject *v11;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (-[PLManagedAsset isStreamedVideo](self, "isStreamedVideo")
    && (-[PLManagedAsset originalAssetsUUID](self, "originalAssetsUUID"),
        v3 = (void *)objc_claimAutoreleasedReturnValue(),
        v3,
        v3))
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset originalAssetsUUID](self, "originalAssetsUUID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "assetWithUUID:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6 && (-[PLManagedAsset duration](self, "duration"), v8 = v7, objc_msgSend(v6, "duration"), v8 == v9))
    {
      objc_msgSend(v6, "pathForVideoFile");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      PLPhotoSharingGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        v13 = 138412290;
        v14 = v10;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEBUG, "pathToOriginalVideoFile %@", (uint8_t *)&v13, 0xCu);
      }

    }
    else
    {
      v10 = 0;
    }

  }
  else
  {
    v10 = 0;
  }
  return v10;
}

- (void)setIsInFlight:(BOOL)a3
{
  if (!a3)
  {
    -[PLManagedAsset setInflightImageInMemory:](self, "setInflightImageInMemory:", 0);
    -[PLManagedAsset setInflightImagePath:](self, "setInflightImagePath:", 0);
    -[PLManagedAsset setInflightIndexSheetImage:](self, "setInflightIndexSheetImage:", 0);
    -[PLManagedAsset setInflightMetadata:](self, "setInflightMetadata:", 0);
  }
}

- (BOOL)isInFlight
{
  void *v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset inflightImageInMemory](self, "inflightImageInMemory");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = 1;
  }
  else
  {
    -[PLManagedAsset inflightImagePath](self, "inflightImagePath");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      v4 = 1;
    }
    else
    {
      -[PLManagedAsset inflightIndexSheetImage](self, "inflightIndexSheetImage");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        v4 = 1;
      }
      else
      {
        -[PLManagedAsset inflightMetadata](self, "inflightMetadata");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = v7 != 0;

      }
    }

  }
  return v4;
}

- (NSObject)inflightImage
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;

  if (!-[PLManagedAsset isInFlight](self, "isInFlight"))
  {
    v7 = 0;
    return v7;
  }
  -[PLManagedAsset inflightImagePath](self, "inflightImagePath");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    -[PLManagedAsset inflightImageInMemory](self, "inflightImageInMemory");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
      return v7;
    goto LABEL_10;
  }
  v4 = objc_alloc(MEMORY[0x1E0C99D50]);
  -[PLManagedAsset inflightImagePath](self, "inflightImagePath");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithContentsOfFile:options:error:", v5, 1, 0);

  if (objc_msgSend(v6, "length"))
    v7 = (void *)DCIM_newPLImageWithData();
  else
    v7 = 0;

  if (!v7)
  {
LABEL_10:
    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "stalenessInterval");
    v10 = v9;
    objc_msgSend(v8, "setStalenessInterval:", 0.0);
    objc_msgSend(v8, "refreshObject:mergeChanges:", self, 1);
    objc_msgSend(v8, "setStalenessInterval:", v10);
    -[PLManagedAsset pathForLargeDisplayableImageFile](self, "pathForLargeDisplayableImageFile");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      DCIM_newPLImageWithContentsOfFile();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setIsInFlight:](self, "setIsInFlight:", 0);
    }
    else
    {
      v7 = 0;
    }

  }
  return v7;
}

- (BOOL)_isValidUTI:(id)a3 forService:(id)a4
{
  id v6;
  id v7;
  char v8;
  void *v10;

  v6 = a3;
  v7 = a4;
  if (-[PLManagedAsset isPhoto](self, "isPhoto") && !objc_msgSend(v7, "caseInsensitiveCompare:", CFSTR("MMS")))
  {
    objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v10, "isEqual:", *MEMORY[0x1E0CEC530]) & 1) != 0
      || (objc_msgSend(v10, "isEqual:", *MEMORY[0x1E0CEC580]) & 1) != 0)
    {
      v8 = 1;
    }
    else
    {
      v8 = objc_msgSend(v10, "isEqual:", *MEMORY[0x1E0CEC4F8]);
    }

  }
  else
  {
    v8 = 1;
  }

  return v8;
}

- (void)registerForChanges
{
  id v3;

  if (-[PLManagedObject isRegisteredWithUserInterfaceContext](self, "isRegisteredWithUserInterfaceContext")
    && -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset")
    && !self->_isRegisteredForChanges)
  {
    self->_isRegisteredForChanges = 1;
    +[PLChangeNotificationCenter defaultCenter](PLChangeNotificationCenter, "defaultCenter");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset addObserver:forKeyPath:options:context:](self, "addObserver:forKeyPath:options:context:", v3, CFSTR("cloudComments"), 8, &PLChangeNotificationCenterKVOContext);
    -[PLManagedAsset addObserver:forKeyPath:options:context:](self, "addObserver:forKeyPath:options:context:", v3, CFSTR("likeComments"), 8, &PLChangeNotificationCenterKVOContext);

  }
}

- (void)unregisterForChanges
{
  id v3;

  if (self->_isRegisteredForChanges)
  {
    self->_isRegisteredForChanges = 0;
    +[PLChangeNotificationCenter defaultCenter](PLChangeNotificationCenter, "defaultCenter");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset removeObserver:forKeyPath:context:](self, "removeObserver:forKeyPath:context:", v3, CFSTR("cloudComments"), &PLChangeNotificationCenterKVOContext);
    -[PLManagedAsset removeObserver:forKeyPath:context:](self, "removeObserver:forKeyPath:context:", v3, CFSTR("likeComments"), &PLChangeNotificationCenterKVOContext);

  }
}

- (id)_hdrTypeDescription
{
  unsigned int v2;

  v2 = -[PLManagedAsset hdrType](self, "hdrType");
  if (v2 > 0xB)
    return CFSTR("HDR");
  else
    return off_1E3663E90[(unsigned __int16)v2];
}

- (id)_savedAssetTypeDescription
{
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return (id)PLValidatedSavedAssetTypeDescription();
}

- (id)_kindDescription
{
  unsigned int v2;

  v2 = -[PLManagedAsset kind](self, "kind");
  if (v2 > 2)
    return CFSTR("unknown");
  else
    return (id)qword_1E3663EF0[(unsigned __int16)v2];
}

- (id)_compactDebugDescription
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLManagedAsset objectID](self, "objectID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "URIRepresentation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "path");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "pathComponents");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if ((unint64_t)objc_msgSend(v7, "count") >= 2)
  {
    objc_msgSend(v7, "subarrayWithRange:", objc_msgSend(v7, "count") - 2, 2);
    v8 = objc_claimAutoreleasedReturnValue();

    v7 = (void *)v8;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "pathWithComponents:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)MEMORY[0x1E0CB3940];
  -[PLManagedAsset uuid](self, "uuid");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "stringWithFormat:", CFSTR("%@ [%@]"), v11, v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v3);
  return v12;
}

- (id)_prettyDescription
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLManagedAsset objectID](self, "objectID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "URIRepresentation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "path");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "pathComponents");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if ((unint64_t)objc_msgSend(v7, "count") >= 2)
  {
    objc_msgSend(v7, "subarrayWithRange:", objc_msgSend(v7, "count") - 2, 2);
    v8 = objc_claimAutoreleasedReturnValue();

    v7 = (void *)v8;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "pathWithComponents:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[PLManagedAsset isFault](self, "isFault"))
  {
    v10 = v9;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37A0], "string");
    v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "appendString:", v9);
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset _kindDescription](self, "_kindDescription");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
      objc_msgSend(v11, "addObject:", v12);
    -[PLManagedAsset _savedAssetTypeDescription](self, "_savedAssetTypeDescription");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      -[PLManagedAsset _savedAssetTypeDescription](self, "_savedAssetTypeDescription");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "addObject:", v14);

    }
    -[PLManagedAsset _hdrTypeDescription](self, "_hdrTypeDescription");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v15)
      objc_msgSend(v11, "addObject:", v15);
    if (objc_msgSend(v11, "count"))
    {
      objc_msgSend(v10, "appendString:", CFSTR(" ("));
      objc_msgSend(v11, "componentsJoinedByString:", CFSTR(", "));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "appendString:", v16);

      objc_msgSend(v10, "appendString:", CFSTR(")"));
    }

  }
  objc_autoreleasePoolPop(v3);
  return v10;
}

- (NSString)uuidDescription
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = (void *)MEMORY[0x1E0CB3940];
  -[PLManagedAsset objectID](self, "objectID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pl_shortURI");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset uuid](self, "uuid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringWithFormat:", CFSTR("<%@ %@>"), v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v7;
}

- (BOOL)isValidTypeForPersistence
{
  int v3;

  objc_msgSend(MEMORY[0x1E0D73310], "maskForIsValidForFileSystemPersistence");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  v3 = PLValidatedSavedAssetTypeApplies();
  if (v3)
  {
    v3 = objc_msgSend(MEMORY[0x1E0D73280], "bundleScopeShouldBePersistedForRebuild:", -[PLManagedAsset bundleScope](self, "bundleScope"));
    if (v3)
      LOBYTE(v3) = -[PLManagedAsset hasOriginalFile](self, "hasOriginalFile")
                || -[PLManagedAsset hasDeferredProcessingPreviewFile](self, "hasDeferredProcessingPreviewFile");
  }
  return v3;
}

- (BOOL)hasOriginalFile
{
  void *v3;
  void *v4;
  char v5;

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v3, "fileExistsAtPath:isDirectory:", v4, 0);

  return v5;
}

- (BOOL)hasLegacyRequiredResourcesLocallyAvailable
{
  void *v3;
  int v4;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isCloudPhotoLibraryEnabled");

  return !v4
      || -[PLManagedAsset checkAllResourcesRequiredForCPLDisableWithReachableBlock:](self, "checkAllResourcesRequiredForCPLDisableWithReachableBlock:", 0);
}

- (id)dateCreatedData
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB38B0];
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dataWithPropertyList:format:options:error:", v3, 200, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)addedDateData
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB38B0];
  -[PLManagedAsset addedDate](self, "addedDate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dataWithPropertyList:format:options:error:", v3, 200, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (void)didSetCustomDateCreated
{
  self->_setCustomCreationDate = 1;
}

- (void)didSetCustomLocation
{
  self->_setCustomLocation = 1;
}

- (id)_mediaGroupUUIDForPersistence
{
  void *v3;
  uint64_t v4;

  -[PLManagedAsset mediaGroupUUID](self, "mediaGroupUUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 && -[PLManagedAsset isVideo](self, "isVideo"))
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@%@"), CFSTR("failed-"), v3);
    v4 = objc_claimAutoreleasedReturnValue();

    v3 = (void *)v4;
  }
  return v3;
}

- (id)_mediaGroupUUIDFromPersistence:(id)a3
{
  return (id)objc_msgSend(a3, "stringByReplacingOccurrencesOfString:withString:", CFSTR("failed-"), &stru_1E36789C0);
}

- (void)persistMetadataToFilesystem
{
  void *v3;
  void *v4;

  if (PLIsAssetsd() && -[PLManagedAsset isValidTypeForPersistence](self, "isValidTypeForPersistence"))
  {
    -[PLManagedAsset persistedFileSystemAttributesFileURL](self, "persistedFileSystemAttributesFileURL");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      v4 = v3;
      -[PLManagedAsset persistMetadataToFileURL:](self, "persistMetadataToFileURL:", v3);
      v3 = v4;
    }

  }
}

- (void)persistMetadataToFileURL:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned __int16 v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  unsigned __int16 v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int16 v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  NSObject *v52;
  void *v53;
  id v54;
  uint8_t buf[4];
  id v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 4593, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("url"));

  }
  v6 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset uuid](self, "uuid");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setUUIDString:forKey:", v8, *MEMORY[0x1E0D74010]);

  v9 = -[PLManagedAsset savedAssetType](self, "savedAssetType");
  objc_msgSend(v7, "setUInt16:forKey:", v9, *MEMORY[0x1E0D73FC0]);
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "managedObjectContextStoreUUID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v11, *MEMORY[0x1E0D73F00]);

  v12 = -[PLManagedAsset avalancheKind](self, "avalancheKind");
  if (v12 >= 2)
  {
    if (v12 != 2)
      goto LABEL_8;
    v14 = 0;
  }
  else
  {
    -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setUUIDString:forKey:", v13, *MEMORY[0x1E0D73EC8]);

    v14 = -[PLManagedAsset avalanchePickType](self, "avalanchePickType");
  }
  objc_msgSend(v7, "setUInt16:forKey:", v14, *MEMORY[0x1E0D73EC0]);
LABEL_8:
  v15 = -[PLManagedAsset hidden](self, "hidden");
  objc_msgSend(v7, "setUInt16:forKey:", v15, *MEMORY[0x1E0D73F30]);
  v16 = -[PLManagedAsset favorite](self, "favorite");
  objc_msgSend(v7, "setUInt16:forKey:", v16, *MEMORY[0x1E0D73F28]);
  v17 = -[PLManagedAsset isInTrash](self, "isInTrash");
  objc_msgSend(v7, "setUInt16:forKey:", v17, *MEMORY[0x1E0D74000]);
  v18 = -[PLManagedAsset trashedReason](self, "trashedReason");
  objc_msgSend(v7, "setUInt16:forKey:", v18, *MEMORY[0x1E0D74008]);
  v19 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
  objc_msgSend(v7, "setUInt16:forKey:", v19, *MEMORY[0x1E0D73F08]);
  -[PLManagedAsset dateCreatedData](self, "dateCreatedData");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setData:forKey:", v20, *MEMORY[0x1E0D73EE8]);

  -[PLManagedAsset locationData](self, "locationData");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setData:forKey:", v21, *MEMORY[0x1E0D73EF0]);

  -[PLManagedAsset addedDateData](self, "addedDateData");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setData:forKey:", v22, *MEMORY[0x1E0D73EB0]);

  objc_msgSend(MEMORY[0x1E0D73310], "maskForIsValidForFileSystemPersistence");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  if (PLValidatedSavedAssetTypeApplies())
  {
    -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setString:forKey:", v23, *MEMORY[0x1E0D73ED0]);

  }
  -[PLManagedAsset videoComplementData](self, "videoComplementData");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setData:forKey:", v24, *MEMORY[0x1E0D73F20]);

  v25 = -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState");
  objc_msgSend(v7, "setUInt16:forKey:", v25, *MEMORY[0x1E0D74018]);
  v26 = -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState");
  objc_msgSend(v7, "setUInt64:forKey:", v26, *MEMORY[0x1E0D73F80]);
  v27 = -[PLManagedAsset currentSleetCast](self, "currentSleetCast");
  objc_msgSend(v7, "setUInt16:forKey:", v27, *MEMORY[0x1E0D73EE0]);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "importedByBundleIdentifier");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v29, *MEMORY[0x1E0D73F38]);

  objc_msgSend(v28, "importedByDisplayName");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v30, *MEMORY[0x1E0D73F40]);

  objc_msgSend(v28, "originalAssetsUUID");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setUUIDString:forKey:", v31, *MEMORY[0x1E0D73F98]);

  objc_msgSend(v28, "publicGlobalUUID");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v32, *MEMORY[0x1E0D73FB0]);

  objc_msgSend(v28, "title");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v33, *MEMORY[0x1E0D73FF8]);

  objc_msgSend(v28, "accessibilityDescription");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v34, *MEMORY[0x1E0D73EA8]);

  objc_msgSend(v28, "timeZoneName");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v35, *MEMORY[0x1E0D73FE8]);

  objc_msgSend(v28, "timeZoneOffset");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "intValue");
  objc_msgSend(v7, "setInt32:forKey:", v37, *MEMORY[0x1E0D73FF0]);

  objc_msgSend(v28, "longDescription");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v38, *MEMORY[0x1E0D73F18]);

  objc_msgSend(v28, "originalFilename");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v39, *MEMORY[0x1E0D73FA0]);

  objc_msgSend(v28, "placeAnnotationData");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setData:forKey:", v40, *MEMORY[0x1E0D73FA8]);

  if (objc_msgSend(v28, "importedBy"))
  {
    v41 = objc_msgSend(v28, "importedBy");
    objc_msgSend(v7, "setUInt16:forKey:", v41, *MEMORY[0x1E0D73F48]);
  }
  -[PLManagedAsset _mediaGroupUUIDForPersistence](self, "_mediaGroupUUIDForPersistence");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v42, *MEMORY[0x1E0D73F88]);
  objc_msgSend(v28, "spatialOverCaptureGroupIdentifier");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v43, *MEMORY[0x1E0D73FD0]);

  objc_msgSend(v28, "syndicationIdentifier");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setString:forKey:", v44, *MEMORY[0x1E0D73FE0]);

  v45 = objc_msgSend(v28, "syndicationHistory");
  objc_msgSend(v7, "setUInt16:forKey:", v45, *MEMORY[0x1E0D73FD8]);
  v46 = objc_msgSend(v28, "sceneAnalysisIsFromPreview");
  objc_msgSend(v7, "setUInt16:forKey:", v46, *MEMORY[0x1E0D73FC8]);
  v47 = objc_msgSend(v28, "viewPresentation");
  objc_msgSend(v7, "setUInt16:forKey:", v47, *MEMORY[0x1E0D74020]);
  v48 = (void *)MEMORY[0x1E0CB36F8];
  objc_msgSend(v28, "libraryScopeAssetContributorsToUpdate");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = 0;
  objc_msgSend(v48, "archivedDataWithRootObject:requiringSecureCoding:error:", v49, 1, &v54);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = v54;

  if (v51)
  {
    PLBackendGetLog();
    v52 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v56 = v51;
      _os_log_impl(&dword_199541000, v52, OS_LOG_TYPE_ERROR, "libraryScopeAssetContributorsToUpdate archiving failed: %@", buf, 0xCu);
    }

  }
  else
  {
    objc_msgSend(v7, "setData:forKey:", v50, *MEMORY[0x1E0D73F78]);
  }
  objc_msgSend(v7, "persist");

  objc_autoreleasePoolPop(v6);
}

- (void)synchronizeWithPersistedFileSystemAttributes
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  PLManagedAsset *v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  int v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  NSObject *v119;
  uint64_t v120;
  void *v121;
  unint64_t v122;
  void *v123;
  id v124;
  void *v125;
  uint64_t v126;
  void *v127;
  void *v128;
  void *v129;
  NSObject *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  unsigned __int16 v150;
  id v151;
  id v152;
  __int16 v153;
  __int16 v154;
  unsigned __int16 v155;
  int v156;
  __int16 v157;
  __int16 v158;
  __int16 v159;
  __int16 v160;
  __int16 v161;
  __int16 v162;
  unsigned __int16 v163;
  __int16 v164;
  unsigned __int16 buf[8];
  uint64_t v166;

  v166 = *MEMORY[0x1E0C80C00];
  if (-[PLManagedAsset isValidTypeForPersistence](self, "isValidTypeForPersistence"))
  {
    v3 = (void *)MEMORY[0x19AEC1554]();
    -[PLManagedAsset persistedFileSystemAttributesFileURL](self, "persistedFileSystemAttributesFileURL");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v4)
    {
LABEL_206:

      objc_autoreleasePoolPop(v3);
      return;
    }
    objc_msgSend(MEMORY[0x1E0D73200], "persistedAttributesForFileAtURL:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *MEMORY[0x1E0D74010];
    objc_msgSend(v5, "UUIDStringForKey:", *MEMORY[0x1E0D74010]);
    v7 = objc_claimAutoreleasedReturnValue();
    v147 = (void *)v7;
    if (v7)
    {
      -[PLManagedAsset setUuid:](self, "setUuid:", v7);
      v8 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
      v8 = (id)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset uuid](self, "uuid");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setUUIDString:forKey:", v9, v6);

    }
    v164 = 0;
    v10 = *MEMORY[0x1E0D73FC0];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v164, *MEMORY[0x1E0D73FC0]))
    {
      objc_msgSend(MEMORY[0x1E0D73310], "maskForIsValidForBackup");
      if (PLValidatedSavedAssetTypeApplies())
        -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", v164);
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)-[PLManagedAsset savedAssetType](self, "savedAssetType"), v10);
    }
    v11 = *MEMORY[0x1E0D73F38];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73F38]);
    v12 = objc_claimAutoreleasedReturnValue();
    v146 = (void *)v12;
    if (v12)
    {
      -[PLManagedAsset setImportedByBundleIdentifier:](self, "setImportedByBundleIdentifier:", v12);
    }
    else
    {
      -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      if (v13)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v14, v11);

      }
    }
    v15 = *MEMORY[0x1E0D73F40];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73F40]);
    v16 = objc_claimAutoreleasedReturnValue();
    v145 = (void *)v16;
    if (v16)
    {
      -[PLManagedAsset setImportedByDisplayName:](self, "setImportedByDisplayName:", v16);
    }
    else
    {
      -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      if (v17)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v18, v15);

      }
    }
    v19 = *MEMORY[0x1E0D73F98];
    objc_msgSend(v5, "UUIDStringForKey:", *MEMORY[0x1E0D73F98]);
    v20 = objc_claimAutoreleasedReturnValue();
    v144 = (void *)v20;
    if (v20)
    {
      -[PLManagedAsset setOriginalAssetsUUID:](self, "setOriginalAssetsUUID:", v20);
    }
    else
    {
      -[PLManagedAsset originalAssetsUUID](self, "originalAssetsUUID");
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      if (v21)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset originalAssetsUUID](self, "originalAssetsUUID");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setUUIDString:forKey:", v22, v19);

      }
    }
    v23 = *MEMORY[0x1E0D73EC8];
    objc_msgSend(v5, "UUIDStringForKey:", *MEMORY[0x1E0D73EC8]);
    v24 = objc_claimAutoreleasedReturnValue();
    v143 = (void *)v24;
    if (v24)
    {
      -[PLManagedAsset setAvalancheUUID:](self, "setAvalancheUUID:", v24);
    }
    else
    {
      -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      if (v25)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setUUIDString:forKey:", v26, v23);

      }
    }
    v163 = 0;
    v27 = *MEMORY[0x1E0D73EC0];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v163, *MEMORY[0x1E0D73EC0]))
    {
      -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      if (v28)
      {
        -[PLManagedAsset setAvalanchePickType:](self, "setAvalanchePickType:", v163);
        v29 = self;
        v30 = 1;
      }
      else
      {
        -[PLManagedAsset setAvalanchePickType:](self, "setAvalanchePickType:", 0);
        v29 = self;
        v30 = 0;
      }
      -[PLManagedAsset setAvalancheKind:](v29, "setAvalancheKind:", v30);
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      v31 = -[PLManagedAsset avalancheKind](self, "avalancheKind");
      if (v31 >= 2)
      {
        if (v31 != 2)
          goto LABEL_48;
        v33 = v8;
        v32 = 0;
      }
      else
      {
        v32 = (unsigned __int16)-[PLManagedAsset avalanchePickType](self, "avalanchePickType");
        v33 = v8;
      }
      objc_msgSend(v33, "setUInt16:forKey:", v32, v27);
    }
LABEL_48:
    v162 = 0;
    v34 = *MEMORY[0x1E0D73F30];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v162, *MEMORY[0x1E0D73F30]))
    {
      -[PLManagedAsset setHidden:](self, "setHidden:", v162 != 0);
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset hidden](self, "hidden"), v34);
    }
    v161 = 0;
    v35 = *MEMORY[0x1E0D73F28];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v161, *MEMORY[0x1E0D73F28]))
    {
      -[PLManagedAsset setFavorite:](self, "setFavorite:", v161 != 0);
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset favorite](self, "favorite"), v35);
    }
    v160 = 0;
    v36 = *MEMORY[0x1E0D73FC8];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v160, *MEMORY[0x1E0D73FC8]))
    {
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "setSceneAnalysisIsFromPreview:", v160 != 0);
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setUInt16:forKey:", objc_msgSend(v37, "sceneAnalysisIsFromPreview"), v36);
    }

    v159 = 0;
    v38 = *MEMORY[0x1E0D74020];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v159, *MEMORY[0x1E0D74020]))
    {
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "setViewPresentation:", v159);
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      v8 = v8;

      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)objc_msgSend(v39, "viewPresentation"), v38);
    }

    v158 = 0;
    v40 = *MEMORY[0x1E0D74000];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v158, *MEMORY[0x1E0D74000]))
    {
      if (-[PLManagedAsset canMoveToTrash](self, "canMoveToTrash") && v158)
      {
        buf[0] = 0;
        objc_msgSend(v5, "getUInt16:forKey:", buf, *MEMORY[0x1E0D74008]);
        -[PLManagedAsset trashWithReason:](self, "trashWithReason:", buf[0]);
      }
    }
    else
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset isInTrash](self, "isInTrash"), v40);
      v41 = -[PLManagedAsset trashedReason](self, "trashedReason");
      objc_msgSend(v8, "setUInt16:forKey:", v41, *MEMORY[0x1E0D74008]);
    }
    v157 = 0;
    v42 = *MEMORY[0x1E0D73F08];
    if (objc_msgSend(v5, "getUInt16:forKey:", &v157, *MEMORY[0x1E0D73F08]))
    {
      if (v157)
      {
        -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:");
        -[PLManagedObject photoLibrary](self, "photoLibrary");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        v44 = v43;
        if (v43)
        {
          objc_msgSend(v43, "libraryServicesManager");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v45, "backgroundJobService");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v46, "signalBackgroundProcessingNeededOnLibrary:", v44);

        }
      }
    }
    else if (-[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded"))
    {
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded"), v42);
    }
    v47 = *MEMORY[0x1E0D73FB0];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73FB0]);
    v48 = objc_claimAutoreleasedReturnValue();
    if (v48)
    {
      -[PLManagedAsset setDisableFileSystemPersistency:](self, "setDisableFileSystemPersistency:", 1);
      -[PLManagedAsset setPublicGlobalUUID:](self, "setPublicGlobalUUID:", v48);
      -[PLManagedAsset setDisableFileSystemPersistency:](self, "setDisableFileSystemPersistency:", 0);
    }
    else
    {
      -[PLManagedAsset publicGlobalUUID](self, "publicGlobalUUID");
      v49 = (void *)objc_claimAutoreleasedReturnValue();

      if (v49)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset publicGlobalUUID](self, "publicGlobalUUID");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v50, v47);

      }
    }
    v51 = *MEMORY[0x1E0D73FF8];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73FF8]);
    v52 = objc_claimAutoreleasedReturnValue();
    if (v52)
    {
      -[PLManagedAsset setTitle:](self, "setTitle:", v52);
    }
    else
    {
      -[PLManagedAsset title](self, "title");
      v53 = (void *)objc_claimAutoreleasedReturnValue();

      if (v53)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset title](self, "title");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v54, v51);

      }
    }
    v55 = *MEMORY[0x1E0D73EA8];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73EA8]);
    v56 = objc_claimAutoreleasedReturnValue();
    v140 = (void *)v56;
    if (v52)
    {
      -[PLManagedAsset setAccessibilityDescription:](self, "setAccessibilityDescription:", v56);
    }
    else
    {
      -[PLManagedAsset accessibilityDescription](self, "accessibilityDescription");
      v57 = (void *)objc_claimAutoreleasedReturnValue();

      if (v57)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset accessibilityDescription](self, "accessibilityDescription");
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v58, v55);

      }
    }
    v142 = (void *)v48;
    objc_msgSend(MEMORY[0x1E0C99E80], "localTimeZone");
    v148 = (void *)objc_claimAutoreleasedReturnValue();
    v59 = *MEMORY[0x1E0D73FE8];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73FE8]);
    v60 = objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v62 = v61;
    v139 = (void *)v60;
    if (v60)
    {
      objc_msgSend(v61, "setTimeZoneName:", v60);
    }
    else
    {
      objc_msgSend(v61, "timeZoneName");
      v63 = (void *)objc_claimAutoreleasedReturnValue();

      if (v63)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v62, "timeZoneName");
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v64, v59);

      }
      else
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        objc_msgSend(v148, "name");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setString:forKey:", v62, v59);
      }
    }

    v156 = 0;
    v65 = *MEMORY[0x1E0D73FF0];
    v66 = objc_msgSend(v5, "getInt32:forKey:", &v156, *MEMORY[0x1E0D73FF0]);
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    v68 = v67;
    if (v66)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", v156);
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v68, "setTimeZoneOffset:", v69);

    }
    else
    {
      objc_msgSend(v67, "timeZoneOffset");
      v70 = (void *)objc_claimAutoreleasedReturnValue();

      if (v70)
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v68, "timeZoneOffset");
        v71 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setInt32:forKey:", objc_msgSend(v71, "longValue"), v65);

      }
      else
      {
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
          v8 = (id)objc_claimAutoreleasedReturnValue();
        }
        -[PLManagedAsset dateCreated](self, "dateCreated");
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setInt32:forKey:", objc_msgSend(v148, "secondsFromGMTForDate:", v68), v65);
      }
    }

    v72 = *MEMORY[0x1E0D73F18];
    objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73F18]);
    v73 = objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    v75 = v74;
    v138 = (void *)v73;
    if (v73)
    {
      objc_msgSend(v74, "setLongDescription:", v73);
    }
    else
    {
      objc_msgSend(v74, "longDescription");
      v76 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v76)
      {
LABEL_127:
        v78 = *MEMORY[0x1E0D73EB0];
        objc_msgSend(v5, "dataForKey:", *MEMORY[0x1E0D73EB0]);
        v79 = objc_claimAutoreleasedReturnValue();
        if (v79
          && (objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v79, 0, 0, 0),
              v80 = (id)objc_claimAutoreleasedReturnValue(),
              v80,
              v80))
        {
          -[PLManagedAsset setAddedDate:](self, "setAddedDate:", v80);
        }
        else
        {
          -[PLManagedAsset addedDate](self, "addedDate");
          v81 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v81)
            goto LABEL_135;
          if (!v8)
          {
            objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
            v8 = (id)objc_claimAutoreleasedReturnValue();
          }
          -[PLManagedAsset addedDateData](self, "addedDateData");
          v80 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "setData:forKey:", v80, v78);
        }

LABEL_135:
        v82 = *MEMORY[0x1E0D73FA0];
        objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73FA0]);
        v83 = objc_claimAutoreleasedReturnValue();
        v136 = (void *)v83;
        v137 = (void *)v79;
        if (v83)
        {
          -[PLManagedAsset setOriginalFilename:](self, "setOriginalFilename:", v83);
        }
        else
        {
          -[PLManagedAsset originalFilename](self, "originalFilename");
          v84 = (void *)objc_claimAutoreleasedReturnValue();

          if (v84)
          {
            if (!v8)
            {
              objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
              v8 = (id)objc_claimAutoreleasedReturnValue();
            }
            -[PLManagedAsset originalFilename](self, "originalFilename");
            v85 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "setString:forKey:", v85, v82);

          }
        }
        v86 = *MEMORY[0x1E0D73F88];
        objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73F88]);
        v87 = objc_claimAutoreleasedReturnValue();
        if (v87)
        {
          v88 = (void *)v87;
          -[PLManagedAsset _mediaGroupUUIDFromPersistence:](self, "_mediaGroupUUIDFromPersistence:", v87);
          v89 = (void *)objc_claimAutoreleasedReturnValue();

          -[PLManagedAsset setMediaGroupUUID:](self, "setMediaGroupUUID:", v89);
        }
        else
        {
          -[PLManagedAsset _mediaGroupUUIDForPersistence](self, "_mediaGroupUUIDForPersistence");
          v90 = objc_claimAutoreleasedReturnValue();
          if (!v90)
          {
LABEL_148:
            v91 = *MEMORY[0x1E0D73F20];
            objc_msgSend(v5, "dataForKey:", *MEMORY[0x1E0D73F20]);
            v92 = objc_claimAutoreleasedReturnValue();
            v135 = (void *)v92;
            if (v92)
            {
              -[PLManagedAsset _setVideoComplementData:](self, "_setVideoComplementData:", v92);
            }
            else if (-[PLManagedAsset _hasVideoComplementData](self, "_hasVideoComplementData"))
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              -[PLManagedAsset videoComplementData](self, "videoComplementData");
              v93 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "setData:forKey:", v93, v91);

            }
            v155 = 0;
            v94 = *MEMORY[0x1E0D74018];
            if (objc_msgSend(v5, "getUInt16:forKey:", &v155, *MEMORY[0x1E0D74018]))
            {
              -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", v155);
            }
            else
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState"), v94);
            }
            v95 = *MEMORY[0x1E0D73FA8];
            objc_msgSend(v5, "dataForKey:", *MEMORY[0x1E0D73FA8]);
            v96 = objc_claimAutoreleasedReturnValue();
            v134 = (void *)v96;
            if (v96)
            {
              -[PLManagedAsset setPlaceAnnotationData:](self, "setPlaceAnnotationData:", v96);
            }
            else
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              -[PLManagedAsset placeAnnotationData](self, "placeAnnotationData");
              v97 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "setData:forKey:", v97, v95);

            }
            v154 = 0;
            v98 = *MEMORY[0x1E0D73F48];
            if (objc_msgSend(v5, "getUInt16:forKey:", &v154, *MEMORY[0x1E0D73F48]))
            {
              if (v154)
              {
                -[PLManagedAsset setImportedBy:](self, "setImportedBy:", v154);
              }
              else if (-[PLManagedAsset importedBy](self, "importedBy"))
              {
                if (!v8)
                {
                  objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                  v8 = (id)objc_claimAutoreleasedReturnValue();
                }
                v8 = v8;

                objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)-[PLManagedAsset importedBy](self, "importedBy"), v98);
              }
            }
            v153 = 0;
            v99 = *MEMORY[0x1E0D73EE0];
            if (objc_msgSend(v5, "getUInt16:forKey:", &v153, *MEMORY[0x1E0D73EE0]))
            {
              -[PLManagedAsset setCurrentSleetCast:](self, "setCurrentSleetCast:", v153);
            }
            else
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)-[PLManagedAsset currentSleetCast](self, "currentSleetCast"), v99);
            }
            v100 = *MEMORY[0x1E0D73FD0];
            objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73FD0]);
            v101 = objc_claimAutoreleasedReturnValue();
            v133 = (void *)v101;
            if (v101)
            {
              v102 = v101;
              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v103 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v103, "setSpatialOverCaptureGroupIdentifier:", v102);
            }
            else
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v103 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v103, "spatialOverCaptureGroupIdentifier");
              v104 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "setString:forKey:", v104, v100);

            }
            v105 = *MEMORY[0x1E0D73FE0];
            objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73FE0]);
            v106 = objc_claimAutoreleasedReturnValue();
            v149 = v4;
            v131 = (void *)v106;
            if (v106)
            {
              v107 = v106;
              v108 = v3;
              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v109 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v109, "setSyndicationIdentifier:", v107);
            }
            else
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v108 = v3;
              v8 = v8;

              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v109 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v109, "syndicationIdentifier");
              v110 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "setString:forKey:", v110, v105);

            }
            v111 = *MEMORY[0x1E0D73F78];
            objc_msgSend(v5, "dataForKey:", *MEMORY[0x1E0D73F78]);
            v112 = objc_claimAutoreleasedReturnValue();
            v113 = (void *)MEMORY[0x1E0CB3710];
            v114 = (void *)MEMORY[0x1E0C99E60];
            v115 = objc_opt_class();
            objc_msgSend(v114, "setWithObjects:", v115, objc_opt_class(), 0);
            v116 = (void *)objc_claimAutoreleasedReturnValue();
            v152 = 0;
            v132 = (void *)v112;
            objc_msgSend(v113, "unarchivedObjectOfClasses:fromData:error:", v116, v112, &v152);
            v117 = (void *)objc_claimAutoreleasedReturnValue();
            v118 = v152;

            v141 = (void *)v52;
            if (objc_msgSend(v117, "count"))
            {
              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v119 = objc_claimAutoreleasedReturnValue();
              -[NSObject setLibraryScopeAssetContributorsToUpdate:](v119, "setLibraryScopeAssetContributorsToUpdate:", v117);
              v3 = v108;
            }
            else
            {
              v3 = v108;
              if (v118)
              {
                PLBackendGetLog();
                v119 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138412290;
                  *(_QWORD *)&buf[2] = v118;
                  _os_log_impl(&dword_199541000, v119, OS_LOG_TYPE_ERROR, "libraryScopeAssetContributorsToUpdate unarchiving failed: %@", (uint8_t *)buf, 0xCu);
                }
              }
              else
              {
                if (!v8)
                {
                  objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v149);
                  v8 = (id)objc_claimAutoreleasedReturnValue();
                }
                v8 = v8;

                v127 = (void *)MEMORY[0x1E0CB36F8];
                -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
                v128 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v128, "libraryScopeAssetContributorsToUpdate");
                v129 = (void *)objc_claimAutoreleasedReturnValue();
                v151 = 0;
                objc_msgSend(v127, "archivedDataWithRootObject:requiringSecureCoding:error:", v129, 1, &v151);
                v119 = objc_claimAutoreleasedReturnValue();
                v118 = v151;

                if (v118)
                {
                  PLBackendGetLog();
                  v130 = objc_claimAutoreleasedReturnValue();
                  v3 = v108;
                  if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 138412290;
                    *(_QWORD *)&buf[2] = v118;
                    _os_log_impl(&dword_199541000, v130, OS_LOG_TYPE_ERROR, "libraryScopeAssetContributorsToUpdate archiving failed: %@", (uint8_t *)buf, 0xCu);
                  }

                }
                else
                {
                  objc_msgSend(v8, "setData:forKey:", v119, v111);
                  v3 = v108;
                }
              }
            }

            v150 = 0;
            v120 = *MEMORY[0x1E0D73FD8];
            if (objc_msgSend(v5, "getUInt16:forKey:", &v150, *MEMORY[0x1E0D73FD8]))
            {
              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v121 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v121, "setSyndicationHistory:", v150);
              v122 = 0x1E0CB3000;
            }
            else
            {
              v122 = 0x1E0CB3000uLL;
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v149);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v121 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "setUInt16:forKey:", objc_msgSend(v121, "syndicationHistory"), v120);
            }

            objc_msgSend(v5, "dataForKey:", *MEMORY[0x1E0D73EE8]);
            v123 = (void *)objc_claimAutoreleasedReturnValue();
            if (v123)
            {
              objc_msgSend(*(id *)(v122 + 2224), "propertyListWithData:options:format:error:", v123, 0, 0, 0);
              v124 = (id)objc_claimAutoreleasedReturnValue();

              if (v124)
              {
                -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v124);

              }
            }
            objc_msgSend(v5, "stringForKey:", *MEMORY[0x1E0D73ED0]);
            v125 = (void *)objc_claimAutoreleasedReturnValue();
            if (v125)
              -[PLManagedAsset setCloudAssetGUID:](self, "setCloudAssetGUID:", v125);
            *(_QWORD *)buf = 0;
            v126 = *MEMORY[0x1E0D73F80];
            if (objc_msgSend(v5, "getUInt64:forKey:", buf, *MEMORY[0x1E0D73F80]))
            {
              -[PLManagedAsset setLibraryScopeShareState:](self, "setLibraryScopeShareState:", *(_QWORD *)buf);
            }
            else
            {
              if (!v8)
              {
                objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v149);
                v8 = (id)objc_claimAutoreleasedReturnValue();
              }
              v8 = v8;

              objc_msgSend(v8, "setUInt64:forKey:", -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState"), v126);
            }
            -[PLManagedAsset setLocationFromPersistedAttributes:](self, "setLocationFromPersistedAttributes:", v5);
            if (v8)
              objc_msgSend(v8, "persist");

            v4 = v149;
            goto LABEL_206;
          }
          v89 = (void *)v90;
          if (!v8)
          {
            objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
            v8 = (id)objc_claimAutoreleasedReturnValue();
          }
          v8 = v8;

          objc_msgSend(v8, "setString:forKey:", v89, v86);
        }

        goto LABEL_148;
      }
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0D73200], "filesystemPersistenceBatchItemForFileAtURL:", v4);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v75, "longDescription");
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setString:forKey:", v77, v72);

    }
    goto LABEL_127;
  }
}

- (void)setLocationFromPersistedAttributes:(id)a3
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  objc_msgSend(a3, "dataForKey:", *MEMORY[0x1E0D73EF0]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v7 = v4;
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = +[PLManagedAsset newLocationFromLocationData:timestampIfMissing:](PLManagedAsset, "newLocationFromLocationData:timestampIfMissing:", v7, v5);

    if (v6)
    {
      objc_msgSend(v6, "coordinate");
      if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"))
        -[PLManagedAsset setLocation:](self, "setLocation:", v6);
    }

    v4 = v7;
  }

}

- (id)edgesIn
{
  return +[PLGraphEdge edgesInToObject:](PLGraphEdge, "edgesInToObject:", self);
}

- (id)edgesOut
{
  return +[PLGraphEdge edgesOutFromObject:](PLGraphEdge, "edgesOutFromObject:", self);
}

- (NSSet)generatedAssetDescriptionNodes
{
  return (NSSet *)+[PLGeneratedAssetDescription fetchGeneratedAssetDescriptionNodesForAsset:](PLGeneratedAssetDescription, "fetchGeneratedAssetDescriptionNodesForAsset:", self);
}

- (void)implementsPLGraphEdgeReferenceObjectRecipient
{
  id v4;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v4 = (id)objc_claimAutoreleasedReturnValue();

}

- (id)legacyFaceWithIdentifier:(signed __int16)a3
{
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v3 = a3;
  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset legacyFaces](self, "legacyFaces", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v9, "identifier") == v3)
        {
          v10 = v9;
          goto LABEL_11;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v6)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

- (id)addLegacyFaceWithRelativeRect:(CGRect)a3 identifier:(signed __int16)a4 albumUUID:(id)a5
{
  uint64_t v5;
  double height;
  double width;
  double y;
  double x;
  id v11;
  void *v12;
  void *v13;

  v5 = a4;
  height = a3.size.height;
  width = a3.size.width;
  y = a3.origin.y;
  x = a3.origin.x;
  v11 = a5;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedObject insertInManagedObjectContext:](PLManagedLegacyFace, "insertInManagedObjectContext:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "setRelativeRect:", x, y, width, height);
  objc_msgSend(v13, "setIdentifier:", v5);
  objc_msgSend(v13, "setAlbumUUID:", v11);

  objc_msgSend(v13, "setAsset:", self);
  return v13;
}

- (id)mutableDetectedFaces
{
  return (id)-[PLManagedAsset mutableSetValueForKey:](self, "mutableSetValueForKey:", CFSTR("detectedFaces"));
}

- (id)mutableTemporalDetectedFaces
{
  return (id)-[PLManagedAsset mutableSetValueForKey:](self, "mutableSetValueForKey:", CFSTR("temporalDetectedFaces"));
}

- (BOOL)updateAttributesFromMainFileURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 error:(id *)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  uint64_t v19;
  void *v20;
  int v21;
  NSObject *v22;
  void *v24;
  id v25;
  uint8_t buf[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v25 = 0;
  -[PLManagedAsset _effectiveMetadataForMainFileURL:mainFileMetadata:fullSizeRenderURL:shouldCache:error:](self, "_effectiveMetadataForMainFileURL:mainFileMetadata:fullSizeRenderURL:shouldCache:error:", v10, v11, v12, 0, &v25);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v25;
  if (v13)
  {
    v15 = (void *)MEMORY[0x19AEC1554]();
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "isCloudPhotoLibraryEnabled");

    if (v17 && !-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    {
      -[PLManagedAsset master](self, "master");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = v24;
      if (!v24)
      {
        -[PLManagedAsset setUniformTypeIdentifierFromOriginalFile](self, "setUniformTypeIdentifierFromOriginalFile");
        goto LABEL_6;
      }
      objc_msgSend(v24, "uniformTypeIdentifier");
      v19 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v13, "contentType");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "identifier");
      v19 = objc_claimAutoreleasedReturnValue();
    }
    v20 = (void *)v19;
    -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v19);

LABEL_6:
    -[PLManagedAsset updateAssetKindFromUniformTypeIdentifier](self, "updateAssetKindFromUniformTypeIdentifier");
    v21 = -[PLManagedAsset kind](self, "kind");
    if (v21)
    {
      if (v21 == 1)
        -[PLManagedAsset setVideoInfoFromFileAtURL:mainFileMetadata:fullSizeRenderURL:overwriteOriginalProperties:](self, "setVideoInfoFromFileAtURL:mainFileMetadata:fullSizeRenderURL:overwriteOriginalProperties:", v10, v11, v12, 0);
    }
    else
    {
      -[PLManagedAsset setImageInfoFromImageMetadata:overwriteOriginalProperties:](self, "setImageInfoFromImageMetadata:overwriteOriginalProperties:", v13, 0);
    }
    objc_autoreleasePoolPop(v15);
    goto LABEL_15;
  }
  PLBackendGetLog();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v27 = v14;
    _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Unable to load metadata with error: %@", buf, 0xCu);
  }

  if (a6)
    *a6 = objc_retainAutorelease(v14);
LABEL_15:

  return v13 != 0;
}

- (BOOL)setAttributesFromMainFileURL:(id)a3 mainFileMetadata:(id)a4 savedAssetType:(signed __int16)a5 bundleScope:(unsigned __int16)a6 isPlaceholder:(BOOL)a7 placeholderFileURL:(id)a8 imageSource:(CGImageSource *)a9 imageData:(id *)a10
{
  uint64_t v12;
  unsigned int v13;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  CGImageSource **v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  int v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  NSObject *v60;
  void *v61;
  NSObject *v62;
  BOOL v63;
  id v64;
  void *v65;
  void *v66;
  NSObject *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  CFTypeRef v71;
  id v73;
  void *v74;
  id v75;
  void *v76;
  const char *aSelector;
  void *v78;
  void *v79;
  unsigned int v80;
  CGImageSource **v81;
  void *context;
  id v83;
  id v84;
  id v85;
  uint8_t buf[4];
  id v87;
  __int16 v88;
  void *v89;
  uint64_t v90;

  v12 = a6;
  v13 = a5;
  v90 = *MEMORY[0x1E0C80C00];
  v17 = (uint64_t)a3;
  v18 = (unint64_t)a4;
  v83 = a8;
  if (!(v17 | v18))
  {
    v18 = 0;
    v17 = 0;
    goto LABEL_43;
  }
  aSelector = a2;
  if (!a7 && (objc_msgSend((id)v18, "isSyndicationOriginated") & 1) == 0)
  {
    v85 = 0;
    -[PLManagedAsset _effectiveMetadataForMainFileURL:mainFileMetadata:fullSizeRenderURL:shouldCache:error:](self, "_effectiveMetadataForMainFileURL:mainFileMetadata:fullSizeRenderURL:shouldCache:error:", v17, v18, 0, 1, &v85);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v85;

    if (v19)
    {
      objc_msgSend(v19, "fileURL");
      v21 = objc_claimAutoreleasedReturnValue();

      v18 = (unint64_t)v19;
      v17 = v21;
      goto LABEL_6;
    }
    PLBackendGetLog();
    v62 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v87 = v20;
      _os_log_impl(&dword_199541000, v62, OS_LOG_TYPE_ERROR, "Unable to load metadata with error: %@", buf, 0xCu);
    }

    v18 = 0;
LABEL_43:
    v63 = 0;
    v52 = v83;
    goto LABEL_58;
  }
LABEL_6:
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLManagedObject pathManager](self, "pathManager");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "isUBF");

  v24 = 31;
  if (v23)
  {
    objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset");
    if (PLValidatedSavedAssetTypeApplies())
      v24 = 22;
    else
      v24 = 31;
  }
  v80 = v13;
  if (v17)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend((id)v17, "path");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "stringByDeletingLastPathComponent");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v27, v24, v12);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v28 = 0;
  }
  v29 = a9;
  objc_msgSend((id)v17, "lastPathComponent");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setDirectory:](self, "setDirectory:", v28);
  -[PLManagedAsset setFilename:](self, "setFilename:", v30);
  -[PLManagedAsset setOriginalFilename:](self, "setOriginalFilename:", v30);
  if (a7)
  {
    objc_msgSend((id)v17, "pathExtension");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUniformTypeIdentifierFromPathExtension:](self, "setUniformTypeIdentifierFromPathExtension:", v31);

    -[PLManagedAsset dateCreated](self, "dateCreated");
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    if (v32)
      goto LABEL_29;
    v78 = v28;
    -[PLManagedAsset modificationDate](self, "modificationDate");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v33);
  }
  else
  {
    v78 = v28;
    objc_msgSend((id)v18, "fileSystemProperties");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "objectForKeyedSubscript:", *MEMORY[0x1E0CB2A88]);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    if (v35)
    {
      -[PLManagedAsset setModificationDate:](self, "setModificationDate:", v35);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setModificationDate:](self, "setModificationDate:", v36);

    }
    objc_msgSend((id)v18, "contentType");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "identifier");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v38);

    objc_msgSend((id)v18, "captionAbstract");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setLongDescription:](self, "setLongDescription:", v39);

    objc_msgSend((id)v18, "artworkContentDescription");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setAccessibilityDescription:](self, "setAccessibilityDescription:", v40);

    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v41 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v41)
    {
      objc_msgSend((id)v18, "utcCreationDate");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v42);

      objc_msgSend(v33, "setDateCreatedSource:", (__int16)objc_msgSend((id)v18, "creationDateSource"));
    }
    -[PLManagedAsset setTimeExifTimestampStringFromMetadata:](self, "setTimeExifTimestampStringFromMetadata:", v18);
    objc_msgSend(v33, "timeZoneName");
    v43 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v43)
    {
      objc_msgSend((id)v18, "timeZoneName");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "setTimeZoneName:", v44);

    }
    objc_msgSend(v33, "timeZoneOffset");
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v45)
    {
      objc_msgSend((id)v18, "timeZoneOffset");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "setTimeZoneOffset:", v46);

    }
    v47 = objc_msgSend((id)v18, "fileSize");
    if (v47)
      -[PLManagedAsset setOriginalFilesize:](self, "setOriginalFilesize:", v47);
    objc_msgSend((id)v18, "spatialOverCaptureIdentifier");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v49, "setSpatialOverCaptureGroupIdentifier:", v48);

  }
  v28 = v78;
LABEL_29:
  -[PLManagedAsset updateAssetKindFromUniformTypeIdentifier](self, "updateAssetKindFromUniformTypeIdentifier");
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "timeIntervalSinceReferenceDate");
  -[PLManagedAsset setSortToken:](self, "setSortToken:");

  -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", v80);
  -[PLManagedAsset setBundleScope:](self, "setBundleScope:", v12);
  v51 = -[PLManagedAsset kind](self, "kind");
  if (v51)
  {
    v52 = v83;
    if (v51 == 1 && !a7)
      -[PLManagedAsset setVideoInfoFromFileAtURL:mainFileMetadata:fullSizeRenderURL:overwriteOriginalProperties:](self, "setVideoInfoFromFileAtURL:mainFileMetadata:fullSizeRenderURL:overwriteOriginalProperties:", v17, v18, 0, 1);
    goto LABEL_52;
  }
  v52 = v83;
  if (!a7)
  {
    -[PLManagedAsset setImageInfoFromImageMetadata:overwriteOriginalProperties:](self, "setImageInfoFromImageMetadata:overwriteOriginalProperties:", v18, 1);
    goto LABEL_52;
  }
  if (!v83)
    goto LABEL_52;
  v84 = 0;
  objc_msgSend(MEMORY[0x1E0D752F0], "typeForURL:error:", v83, &v84);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = v84;
  if (!v53)
  {
    v79 = v28;
    v81 = a9;
    PLBackendGetLog();
    v60 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(aSelector);
      v64 = v54;
      v65 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v83, "path");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v87 = v65;
      v88 = 2112;
      v89 = v66;
      _os_log_impl(&dword_199541000, v60, OS_LOG_TYPE_ERROR, "%@ Couldn't get uti for '%@'.", buf, 0x16u);

      v54 = v64;
    }
    goto LABEL_50;
  }
  if (objc_msgSend(v53, "conformsToType:", *MEMORY[0x1E0CEC520]))
  {
    v75 = v54;
    v76 = v53;
    v79 = v28;
    v81 = a9;
    v73 = objc_alloc(MEMORY[0x1E0D75140]);
    v55 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(v83, "path");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "fileURLWithPath:", v74);
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "libraryBundle");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v58, "timeZoneLookup");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    v60 = objc_msgSend(v73, "initWithImageURL:contentType:options:timeZoneLookup:cacheImageSource:cacheImageData:", v56, 0, 12, v59, 1, 0);

    if (v60)
    {
      -[NSObject utcCreationDate](v60, "utcCreationDate");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v61);

      -[PLManagedAsset setImageInfoFromImageMetadata:overwriteOriginalProperties:](self, "setImageInfoFromImageMetadata:overwriteOriginalProperties:", v60, 1);
      v52 = v83;
    }
    else
    {
      PLBackendGetLog();
      v67 = objc_claimAutoreleasedReturnValue();
      v52 = v83;
      if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(aSelector);
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v83, "path");
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v87 = v68;
        v88 = 2112;
        v89 = v69;
        _os_log_impl(&dword_199541000, v67, OS_LOG_TYPE_ERROR, "%@ Unable to read metadata from '%@'", buf, 0x16u);

      }
      v60 = 0;
    }
    v54 = v75;
    v53 = v76;
LABEL_50:

    v28 = v79;
    v29 = v81;
  }

LABEL_52:
  objc_autoreleasePoolPop(context);
  v70 = objc_msgSend((id)v18, "imageSource");
  if (v29 && v70)
  {
    v71 = CFRetain((CFTypeRef)objc_msgSend((id)v18, "imageSource"));
    *v29 = (CGImageSource *)CFAutorelease(v71);
  }
  if (a10)
  {
    objc_msgSend((id)v18, "imageData");
    *a10 = (id)objc_claimAutoreleasedReturnValue();
  }
  v63 = 1;
LABEL_58:

  return v63;
}

- (void)setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:(id)a3 originalFilename:(id)a4
{
  id v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;

  v28 = a3;
  v7 = a4;
  -[PLManagedObject pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isUBF");

  if ((v9 & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 5343, CFSTR("Path manager must be UBF"));

  }
  -[PLManagedAsset directory](self, "directory");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "length"))
  {
    -[PLManagedAsset filename](self, "filename");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "length");

    if (v12)
      goto LABEL_12;
  }
  else
  {

  }
  v13 = objc_alloc(MEMORY[0x1E0D73278]);
  -[PLManagedAsset uuid](self, "uuid");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (void *)objc_msgSend(v13, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v14, -[PLManagedAsset bundleScope](self, "bundleScope"), v28, 0, 31, 0, v7);

  -[PLManagedObject pathManager](self, "pathManager");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "readOnlyUrlWithIdentifier:", v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset directory](self, "directory");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "length");

  if (!v19)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "path");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "stringByDeletingLastPathComponent");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v22, 4, -[PLManagedAsset bundleScope](self, "bundleScope"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset setDirectory:](self, "setDirectory:", v23);
  }
  -[PLManagedAsset filename](self, "filename");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_msgSend(v24, "length");

  if (!v25)
  {
    objc_msgSend(v17, "lastPathComponent");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setFilename:](self, "setFilename:", v26);

  }
LABEL_12:

}

- (void)updateWithCustomAssetProperties:(id)a3
{
  id v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  uint64_t v15;
  const __CFDictionary *v16;
  const __CFDictionary *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  CMTime v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  CMTime v31;
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dateCreated"));
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  if (v25)
  {
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:");
    -[PLManagedAsset didSetCustomDateCreated](self, "didSetCustomDateCreated");
  }
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
  if (v6)
  {
    v8 = *(_QWORD *)v28;
    *(_QWORD *)&v7 = 138543618;
    v24 = v7;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v28 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * v9);
        if ((objc_msgSend(v10, "isEqualToString:", CFSTR("dateCreated"), v24) & 1) == 0
          && (objc_msgSend(v10, "isEqualToString:", CFSTR("trashedReason")) & 1) == 0)
        {
          if (objc_msgSend(v10, "isEqualToString:", CFSTR("trashedState")))
          {
            objc_msgSend(v5, "objectForKeyedSubscript:", v10);
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            v12 = objc_msgSend(v11, "BOOLValue");

            if ((-[PLManagedAsset canMoveToTrash](self, "canMoveToTrash") & v12) == 1)
            {
              objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("trashedReason"));
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              v14 = v13;
              if (v13)
                v15 = objc_msgSend(v13, "unsignedShortValue");
              else
                v15 = 0;
              -[PLManagedAsset trashWithReason:](self, "trashWithReason:", v15);

            }
          }
          else if (objc_msgSend(v10, "isEqualToString:", CFSTR("photoIrisVideoDuration")))
          {
            memset(&v31, 0, sizeof(v31));
            objc_msgSend(v5, "objectForKeyedSubscript:", v10);
            v16 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
            CMTimeMakeFromDictionary(&v31, v16);

            v26 = v31;
            -[PLManagedAsset setPhotoIrisVideoDuration:](self, "setPhotoIrisVideoDuration:", &v26);
          }
          else if (objc_msgSend(v10, "isEqualToString:", CFSTR("photoIrisStillDisplayTime")))
          {
            memset(&v31, 0, sizeof(v31));
            objc_msgSend(v5, "objectForKeyedSubscript:", v10);
            v17 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
            CMTimeMakeFromDictionary(&v31, v17);

            v26 = v31;
            -[PLManagedAsset setPhotoIrisStillDisplayTime:](self, "setPhotoIrisStillDisplayTime:", &v26);
          }
          else if (objc_msgSend(v10, "isEqualToString:", CFSTR("location")))
          {
            objc_msgSend(v5, "objectForKeyedSubscript:", v10);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset dateCreated](self, "dateCreated");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = +[PLManagedAsset newLocationFromLocationData:timestampIfMissing:](PLManagedAsset, "newLocationFromLocationData:timestampIfMissing:", v18, v19);

            objc_msgSend(v20, "coordinate");
            if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"))
            {
              -[PLManagedAsset setLocation:](self, "setLocation:", v20);
              -[PLManagedAsset didSetCustomLocation](self, "didSetCustomLocation");
            }

          }
          else if (objc_msgSend(v10, "isEqualToString:", CFSTR("hdrType")))
          {
            objc_msgSend(v5, "objectForKeyedSubscript:", v10);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset setHdrType:](self, "setHdrType:", (__int16)objc_msgSend(v21, "unsignedIntegerValue"));

          }
          else
          {
            objc_msgSend(v5, "objectForKeyedSubscript:", v10);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset setValue:forKeyPath:](self, "setValue:forKeyPath:", v22, v10);

          }
        }
        ++v9;
      }
      while (v6 != v9);
      v23 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
      v6 = v23;
    }
    while (v23);
  }

}

- (void)setMetadataFromCustomRenderedValue:(int64_t)a3
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (__int16)a3;
  v5 = +[PLManagedAsset imageHDRTypeFromCustomRenderedValue:](PLManagedAsset, "imageHDRTypeFromCustomRenderedValue:", v4);
  if ((_DWORD)v5)
    -[PLManagedAsset setHdrType:](self, "setHdrType:", v5);
  v6 = +[PLManagedAsset imageDepthTypeFromCustomRenderedValue:](PLManagedAsset, "imageDepthTypeFromCustomRenderedValue:", v4);
  if ((_DWORD)v6)
    -[PLManagedAsset setDepthType:](self, "setDepthType:", v6);
}

- (id)imageProperties
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  CGImageSourceRef v15;
  CGImageSourceRef v16;
  id v17;
  void *v18;

  objc_opt_class();
  -[PLManagedAsset master](self, "master");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "mediaMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "valueForKey:", CFSTR("data"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  if (!v7
    || ((objc_opt_class(),
         objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v7, 0, 0, 0),
         v8 = (id)objc_claimAutoreleasedReturnValue(),
         (objc_opt_isKindOfClass() & 1) == 0)
      ? (v9 = 0)
      : (v9 = v8),
        v10 = v9,
        v8,
        !v10))
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "path");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v12, "fileExistsAtPath:isDirectory:", v13, 0);

      v8 = 0;
      if (!v14)
      {
LABEL_17:

        goto LABEL_18;
      }
      v15 = CGImageSourceCreateWithURL((CFURLRef)v11, 0);
      if (v15)
      {
        v16 = v15;
        objc_opt_class();
        v17 = (id)objc_msgSend((id)objc_opt_class(), "newImagePropertiesFromImageSource:", v16);
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v18 = v17;
        else
          v18 = 0;
        v8 = v18;

        CFRelease(v16);
        goto LABEL_17;
      }
    }
    v8 = 0;
    goto LABEL_17;
  }
LABEL_18:

  return v8;
}

- (id)avAssetProxyForOriginalAllowReadFromFile:(BOOL)a3
{
  return -[PLManagedAsset _avAssetProxyForFullSize:allowReadFromFile:](self, "_avAssetProxyForFullSize:allowReadFromFile:", 0, a3);
}

- (id)avAssetProxyForFullSizeAllowReadFromFile:(BOOL)a3
{
  return -[PLManagedAsset _avAssetProxyForFullSize:allowReadFromFile:](self, "_avAssetProxyForFullSize:allowReadFromFile:", 1, a3);
}

- (id)_avAssetProxyForFullSize:(BOOL)a3 allowReadFromFile:(BOOL)a4
{
  _BOOL4 v4;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;

  v4 = a4;
  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    if (a3)
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    else
      -[PLManagedAsset master](self, "master");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "mediaMetadata");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v9, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v10, 0, 0, 0);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (v11)
      {
        objc_msgSend(MEMORY[0x1E0C8AF90], "assetProxyWithPropertyList:", v11);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v7 = 0;
      }

      if (v7)
      {
LABEL_21:

        return v7;
      }
    }
    else
    {
      v7 = 0;
    }
    if (v4)
    {
      if (a3)
        -[PLManagedAsset fileURLForFullsizeRenderVideo](self, "fileURLForFullsizeRenderVideo");
      else
        -[PLManagedAsset mainFileURL](self, "mainFileURL");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (v12)
      {
        objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "path");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_msgSend(v13, "fileExistsAtPath:isDirectory:", v14, 0);

        v7 = 0;
        if (v15)
        {
          objc_msgSend(MEMORY[0x1E0C8AF90], "assetWithURL:", v12);
          v7 = (void *)objc_claimAutoreleasedReturnValue();
        }
      }
      else
      {
        v7 = 0;
      }

    }
    goto LABEL_21;
  }
  v7 = 0;
  return v7;
}

- (id)cameraMake
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    -[PLManagedAsset imageProperties](self, "imageProperties");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if (!v4)
    {
      v8 = 0;
      goto LABEL_12;
    }
    objc_msgSend(v4, "objectForKey:", *MEMORY[0x1E0CBD090]);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "objectForKey:", *MEMORY[0x1E0CBD0B0]);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_10:

LABEL_12:
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedAsset avAssetProxyForOriginalAllowReadFromFile:](self, "avAssetProxyForOriginalAllowReadFromFile:", 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "metadata");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      objc_msgSend(MEMORY[0x1E0C8B220], "metadataItemsFromArray:withKey:keySpace:", v7, *MEMORY[0x1E0C8AAD0], *MEMORY[0x1E0C8A9E8]);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "firstObject");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "stringValue");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_10;
    }
LABEL_9:
    v8 = 0;
    goto LABEL_10;
  }
  v8 = 0;
LABEL_13:
  objc_autoreleasePoolPop(v3);
  return v8;
}

- (id)lensModel
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    -[PLManagedAsset imageProperties](self, "imageProperties");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if (v4)
    {
      objc_msgSend(v4, "objectForKey:", *MEMORY[0x1E0CBCB50]);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v6;
      if (v6)
      {
        objc_msgSend(v6, "objectForKey:", *MEMORY[0x1E0CBCBE0]);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v8 = 0;
      }

    }
    else
    {
      v8 = 0;
    }

  }
  else
  {
    v8 = 0;
  }
  objc_autoreleasePoolPop(v3);
  return v8;
}

- (id)cameraModel
{
  void *v2;
  void *v3;

  -[PLManagedAsset extendedAttributes](self, "extendedAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "cameraModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)formattedCameraModel
{
  void *v2;
  void *v3;

  -[PLManagedAsset extendedAttributes](self, "extendedAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "formattedCameraModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)pictureTransferProtocolAssetsWithConversionSupport:(id)a3
{
  return +[PLPTPAssetBuilder pictureTransferProtocolAssetsForAsset:withConversionSupport:](PLPTPAssetBuilder, "pictureTransferProtocolAssetsForAsset:withConversionSupport:", self, a3);
}

- (BOOL)_setHDRTypeFromMetadata:(id)a3
{
  id v4;
  __int16 v5;
  __int16 v6;
  unsigned int v8;

  v4 = a3;
  if ((objc_msgSend(v4, "hasHDRGainMap") & 1) != 0 || (objc_msgSend(v4, "hasISOGainMap") & 1) != 0)
  {
    v5 = 10;
  }
  else if (objc_msgSend(v4, "customRendered") && (v8 = (__int16)objc_msgSend(v4, "customRendered") - 2, v8 < 3))
  {
    v5 = v8 + 2;
  }
  else if (objc_msgSend(v4, "isMovie") && (objc_msgSend(v4, "isHDR") & 1) != 0)
  {
    v5 = 5;
  }
  else if ((objc_msgSend(v4, "isMovie") & 1) == 0
         && ((objc_msgSend(v4, "isHDR_TS22028") & 1) != 0 || objc_msgSend(v4, "isHDR_ExtendedRange")))
  {
    v5 = 11;
  }
  else
  {
    v5 = 0;
  }
  v6 = -[PLManagedAsset hdrType](self, "hdrType");
  if (v5 != v6)
    -[PLManagedAsset setHdrType:](self, "setHdrType:", v5);

  return v5 != v6;
}

- (void)setSpatialTypeFromMetadata:(id)a3
{
  __int16 v4;
  id v5;

  v5 = a3;
  if (objc_msgSend(v5, "isSpatialMedia"))
  {
    if (objc_msgSend(v5, "isAlchemist"))
      v4 = 2;
    else
      v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  -[PLManagedAsset setSpatialType:](self, "setSpatialType:", v4);

}

- (BOOL)setCameraCaptureDeviceFromMetadata:(id)a3
{
  uint64_t v4;
  void *v5;
  int v6;
  void *v7;

  v4 = objc_msgSend(a3, "isFrontFacingCamera");
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "cameraCaptureDevice");

  if (v6 != (_DWORD)v4)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setCameraCaptureDevice:", v4);

  }
  return v6 != (_DWORD)v4;
}

- (BOOL)setTimeExifTimestampStringFromMetadata:(id)a3
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  void *v8;

  objc_msgSend(a3, "creationDateString");
  v4 = objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "exifTimestampString");
  v6 = objc_claimAutoreleasedReturnValue();

  if (v4 | v6 && (objc_msgSend((id)v6, "isEqualToString:", v4) & 1) == 0)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setExifTimestampString:", v4);

    v7 = 1;
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (void)setSizeAndOrientationFromImageProperties:(id)a3
{
  id v4;
  id v5;
  id v6;
  int v7;
  BOOL v8;
  void *v9;
  void *v10;

  PFGetDimensionsFromImageProperties();
  v4 = 0;
  v5 = 0;
  v6 = 0;
  -[PLManagedAsset setOrientation:](self, "setOrientation:", objc_msgSend(v4, "shortValue"));
  -[PLManagedAsset orientation](self, "orientation");
  v7 = PLIsRotatedExifOrientation();
  v8 = v7 == 0;
  if (v7)
    v9 = v6;
  else
    v9 = v5;
  if (v8)
    v10 = v6;
  else
    v10 = v5;
  -[PLManagedAsset setWidth:](self, "setWidth:", objc_msgSend(v9, "longLongValue"));
  -[PLManagedAsset setHeight:](self, "setHeight:", objc_msgSend(v10, "longLongValue"));

}

- (void)_setSizeAndOrientationFromMetadata:(id)a3
{
  double v4;
  double v5;
  void *v6;
  id v7;

  v7 = a3;
  if (objc_msgSend(v7, "isSyndicationOriginated"))
  {
    -[PLManagedAsset setOrientation:](self, "setOrientation:", (__int16)objc_msgSend(v7, "orientation"));
    objc_msgSend(v7, "orientedPixelSize");
    -[PLManagedAsset setWidth:](self, "setWidth:", (uint64_t)v4);
    objc_msgSend(v7, "orientedPixelSize");
    -[PLManagedAsset setHeight:](self, "setHeight:", (uint64_t)v5);
  }
  else
  {
    objc_msgSend(v7, "cgImageProperties");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setSizeAndOrientationFromImageProperties:](self, "setSizeAndOrientationFromImageProperties:", v6);

  }
}

- (void)setDepthTypeFromMetadata:(id)a3
{
  int v4;
  unsigned __int16 v5;
  id v6;

  v6 = a3;
  if ((objc_msgSend(v6, "isPortrait") & 1) != 0)
  {
    v4 = 1;
  }
  else if (objc_msgSend(v6, "isMovie") && (objc_msgSend(v6, "isCinematicVideo") & 1) != 0)
  {
    v4 = 2;
  }
  else
  {
    v5 = objc_msgSend(v6, "customRendered");
    if ((unsigned __int16)(v5 >> 1) > 4u)
      v4 = 0;
    else
      v4 = (unsigned __int16)word_199B9B5AC[(__int16)v5];
  }
  if (v4 != (unsigned __int16)-[PLManagedAsset depthType](self, "depthType"))
    -[PLManagedAsset setDepthType:](self, "setDepthType:", (__int16)v4);

}

- (void)setEditableDepthBadgeAttributeFromMetadata:(id)a3
{
  if (objc_msgSend(a3, "hasDepthDataAndIsNotRenderedSDOF"))
    -[PLManagedAsset setEditableDepthBadgeAttribute:](self, "setEditableDepthBadgeAttribute:", 1);
}

- (void)setPlaybackControlBadgeAttributeFromMetadata:(id)a3
{
  void *v4;
  double v5;
  double v6;

  objc_msgSend(a3, "nominalFrameRate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "doubleValue");
  v6 = v5;

  if (v6 >= 45.0)
    -[PLManagedAsset setPlaybackControlBadgeAttribute:](self, "setPlaybackControlBadgeAttribute:", 1);
}

- (void)setSpatialAudioControlBadgeAttributeFromMetadata:(id)a3
{
  if (objc_msgSend(a3, "hasSpatialAudio"))
    -[PLManagedAsset setSpatialAudioControlBadgeAttribute:](self, "setSpatialAudioControlBadgeAttribute:", 1);
}

- (void)_setHDRGainFromMetadata:(id)a3
{
  void *v4;
  BOOL IsEqual;
  id v6;

  objc_msgSend(a3, "hdrGain");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset hdrGain](self, "hdrGain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  IsEqual = PLNumberIsEqual(v4, v6);

  if (!IsEqual)
    -[PLManagedAsset setHdrGain:](self, "setHdrGain:", v6);

}

- (void)setOriginalSizeAndOrientationFromImageProperties:(id)a3
{
  id v4;
  id v5;
  id v6;

  PFGetDimensionsFromImageProperties();
  v4 = 0;
  v5 = 0;
  v6 = 0;
  if (!-[PLManagedAsset originalOrientation](self, "originalOrientation"))
    -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", objc_msgSend(v4, "shortValue"));
  -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", objc_msgSend(v5, "longLongValue"));
  -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", objc_msgSend(v6, "longLongValue"));

}

- (void)_setOriginalSizeAndOrientationFromMetadata:(id)a3
{
  double v4;
  double v5;
  void *v6;
  id v7;

  v7 = a3;
  if (objc_msgSend(v7, "isSyndicationOriginated"))
  {
    -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", (__int16)objc_msgSend(v7, "orientation"));
    objc_msgSend(v7, "exifPixelSize");
    -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", (uint64_t)v4);
    objc_msgSend(v7, "exifPixelSize");
    -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", (uint64_t)v5);
  }
  else
  {
    objc_msgSend(v7, "cgImageProperties");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setOriginalSizeAndOrientationFromImageProperties:](self, "setOriginalSizeAndOrientationFromImageProperties:", v6);

  }
}

- (void)_setSavedAssetTypeFromMetadata:(id)a3
{
  id v4;

  v4 = a3;
  if (!-[PLManagedAsset savedAssetType](self, "savedAssetType")
    && objc_msgSend(v4, "isPhotoBooth"))
  {
    -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForPhotoBoothAsset"));
  }

}

- (void)setKeywordsFromImageProperties:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  objc_msgSend(a3, "objectForKey:", *MEMORY[0x1E0CBCED8]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v9 = v4;
    objc_msgSend(v4, "objectForKey:", *MEMORY[0x1E0CBCF10]);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E20], "setWithArray:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "keywordManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setKeywords:forAsset:", v6, self);

    v4 = v9;
  }

}

- (void)_setPhotoIrisPropertiesFromMetadata:(id)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = a3;
  objc_msgSend(v7, "livePhotoPairingIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "length");

  if (v5)
  {
    objc_msgSend(v7, "livePhotoPairingIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setMediaGroupUUID:](self, "setMediaGroupUUID:", v6);

  }
}

- (void)_setSOCGroupIdentifierFromMetadata:(id)a3
{
  id v4;
  void *v5;
  id v6;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "spatialOverCaptureIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setSpatialOverCaptureGroupIdentifier:", v5);
}

- (void)_setColorSpaceNameFromMetadata:(id)a3
{
  id v4;

  objc_msgSend(a3, "defaultProfileName");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setOriginalColorSpace:](self, "setOriginalColorSpace:", v4);

}

- (void)updatePlaybackStyleWithLivePhotoPlayability:(BOOL)a3
{
  uint64_t v4;

  if (a3)
  {
    if (objc_msgSend((id)objc_opt_class(), "_isLoopingVideoPlaybackVariation:", -[PLManagedAsset playbackVariation](self, "playbackVariation")))v4 = 5;
    else
      v4 = 3;
  }
  else
  {
    v4 = 1;
  }
  if ((_DWORD)v4 != -[PLManagedAsset playbackStyle](self, "playbackStyle"))
    -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", v4);
}

- (BOOL)updatePlaybackVariationAndStyleFromOriginalMetadata:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  BOOL v7;
  uint8_t v9[16];

  v4 = a3;
  v5 = v4;
  if (v4)
  {
    if (objc_msgSend(v4, "isAnimatedImage"))
    {
      if (-[PLManagedAsset playbackStyle](self, "playbackStyle") != 2)
      {
        -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", 2);
LABEL_14:
        v7 = 1;
        goto LABEL_12;
      }
    }
    else if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris")
           && objc_msgSend(v5, "isLongExposure")
           && -[PLManagedAsset playbackVariation](self, "playbackVariation") != 3)
    {
      -[PLManagedAsset setPlaybackVariation:](self, "setPlaybackVariation:", 3);
      goto LABEL_14;
    }
  }
  else
  {
    PLBackendGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "nil metadata", v9, 2u);
    }

  }
  v7 = 0;
LABEL_12:

  return v7;
}

- (unsigned)playbackVariationFromAVAsset:(id)a3 isLivePhotoVideoComplement:(BOOL)a4
{
  id v4;
  void *v5;
  void *v6;
  unint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  unsigned __int16 v11;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVAsset:timeZoneLookup:", v4, 0);
  objc_msgSend(v5, "playbackVariation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "unsignedIntegerValue");

  if (v7 >= 4)
  {
    PLBackendGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v5, "playbackVariation");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138412546;
      v14 = v9;
      v15 = 2112;
      v16 = v4;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Unrecognized variation identifier %@ in %@", (uint8_t *)&v13, 0x16u);

    }
  }
  objc_msgSend(v5, "playbackVariation");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "unsignedIntegerValue");

  return v11;
}

- (BOOL)updatePlaybackVariationAndLoopingStyleFromVariation:(unsigned __int16)a3
{
  uint64_t v3;
  int v5;
  int v6;

  v3 = a3;
  v5 = -[PLManagedAsset playbackVariation](self, "playbackVariation");
  v6 = -[PLManagedAsset playbackStyle](self, "playbackStyle");
  -[PLManagedAsset setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:](self, "setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:", v3);
  return v5 != -[PLManagedAsset playbackVariation](self, "playbackVariation")
      || v6 != -[PLManagedAsset playbackStyle](self, "playbackStyle");
}

- (BOOL)updatePlaybackVariationAndLoopingStyleFromAVAsset:(id)a3
{
  id v4;
  uint64_t v5;

  v4 = a3;
  v5 = -[PLManagedAsset playbackVariationFromAVAsset:isLivePhotoVideoComplement:](self, "playbackVariationFromAVAsset:isLivePhotoVideoComplement:", v4, -[PLManagedAsset isPhotoIris](self, "isPhotoIris"));

  return -[PLManagedAsset updatePlaybackVariationAndLoopingStyleFromVariation:](self, "updatePlaybackVariationAndLoopingStyleFromVariation:", v5);
}

- (void)updateSmartStyleVideoCastFromMetadata:(id)a3
{
  -[PLManagedAsset setCurrentSleetCast:](self, "setCurrentSleetCast:", objc_msgSend(a3, "smartStyleVideoCastValue"));
}

- (void)setCurrentSleetCastFromMetadata:(id)a3
{
  -[PLManagedAsset setCurrentSleetCast:](self, "setCurrentSleetCast:", objc_msgSend(a3, "smartStyleCast"));
}

- (id)extendedAttributesCreateIfNeeded:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  void *v7;

  v3 = a3;
  -[PLManagedAsset extendedAttributes](self, "extendedAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5 && v3)
  {
    if (PLPlatformExtendedAttributesSupported())
    {
      -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLExtendedAttributes entityName](PLExtendedAttributes, "entityName");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      PLSafeInsertNewObjectForEntityForNameInManagedObjectContext((uint64_t)v7, (uint64_t)v6, 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      if (v5)
        -[PLManagedAsset setExtendedAttributes:](self, "setExtendedAttributes:", v5);

    }
    else
    {
      v5 = 0;
    }
  }
  return v5;
}

- (BOOL)updateExtendedAttributesWithError:(id *)a3
{
  void *v5;

  -[PLManagedAsset metadataFromMediaPropertiesOrOriginalResource](self, "metadataFromMediaPropertiesOrOriginalResource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(a3) = -[PLManagedAsset updateExtendedAttributesWithMetadata:error:](self, "updateExtendedAttributesWithMetadata:error:", v5, a3);

  return (char)a3;
}

- (BOOL)updateExtendedAttributesWithMetadata:(id)a3 error:(id *)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  BOOL v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint8_t buf[4];
  void *v32;
  uint64_t v33;
  _QWORD v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  if (!PLPlatformExtendedAttributesSupported())
  {
    v20 = 1;
    goto LABEL_20;
  }
  if (-[PLManagedAsset kind](self, "kind") == 3)
  {
    v7 = (void *)MEMORY[0x1E0CB3940];
    -[PLManagedAsset uuid](self, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringWithFormat:", CFSTR("Unsupported asset kind for asset: %@"), v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = (void *)MEMORY[0x1E0CB35C8];
    v11 = *MEMORY[0x1E0D74498];
    v27 = *MEMORY[0x1E0CB2D50];
    v28 = v9;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v28, &v27, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "errorWithDomain:code:userInfo:", v11, 46309, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      goto LABEL_17;
    *(_DWORD *)buf = 138543362;
    v32 = v9;
    goto LABEL_16;
  }
  if (v6)
  {
    switch(-[PLManagedAsset kind](self, "kind"))
    {
      case 0u:
        -[PLManagedAsset updateImageExtendedAttributesFromMetadata:](self, "updateImageExtendedAttributesFromMetadata:", v6);
        break;
      case 1u:
        -[PLManagedAsset updateVideoExtendedAttributesFromMetadata:](self, "updateVideoExtendedAttributesFromMetadata:", v6);
        break;
      case 2u:
        -[PLManagedAsset updateAudioExtendedAttributesFromMetadata:](self, "updateAudioExtendedAttributesFromMetadata:", v6);
        break;
      case 3u:
        v21 = (void *)MEMORY[0x1E0CB3940];
        -[PLManagedAsset uuid](self, "uuid");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "stringWithFormat:", CFSTR("Unsupported asset kind for asset: %@"), v22);
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        v23 = (void *)MEMORY[0x1E0CB35C8];
        v24 = *MEMORY[0x1E0D74498];
        v33 = *MEMORY[0x1E0CB2D50];
        v34[0] = v9;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v34, &v33, 1);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "errorWithDomain:code:userInfo:", v24, 46309, v25);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        PLBackendGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_17;
        *(_DWORD *)buf = 138543362;
        v32 = v9;
        goto LABEL_16;
      default:
        break;
    }
    v13 = 0;
    v20 = 1;
    if (!a4)
      goto LABEL_19;
    goto LABEL_18;
  }
  v15 = (void *)MEMORY[0x1E0CB3940];
  -[PLManagedAsset uuid](self, "uuid");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "stringWithFormat:", CFSTR("Missing metadata for asset %@. File not on disk"), v16);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = (void *)MEMORY[0x1E0CB35C8];
  v18 = *MEMORY[0x1E0D74498];
  v29 = *MEMORY[0x1E0CB2D50];
  v30 = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v30, &v29, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "errorWithDomain:code:userInfo:", v18, 41004, v19);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  PLBackendGetLog();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    v32 = v9;
LABEL_16:
    _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
  }
LABEL_17:

  v20 = 0;
  if (a4)
LABEL_18:
    *a4 = objc_retainAutorelease(v13);
LABEL_19:

LABEL_20:
  return v20;
}

- (void)_updateCoreDateExtendedAttributes:(id)a3 fromMetadata:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v5 = a4;
  v6 = a3;
  objc_msgSend(v5, "utcCreationDate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setDateCreated:", v7);

  objc_msgSend(v5, "timeZoneName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setTimezoneName:", v8);

  objc_msgSend(v5, "timeZoneOffset");
  v9 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setTimezoneOffset:", v9);
}

- (void)_updateCoreExtendedAttributes:(id)a3 fromMetadata:(id)a4
{
  id v6;
  __int16 v7;
  void *v8;
  uint64_t v9;
  void *v10;
  PLManagedAsset *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  double v28;
  void *v29;
  id v30;

  v30 = a3;
  v6 = a4;
  if (!v30 || !v6)
    goto LABEL_21;
  v7 = objc_msgSend(v6, "creationDateSource");
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setDateCreatedSource:", v7);

  v9 = objc_msgSend(v6, "creationDateSource");
  if ((unint64_t)(v9 - 1) < 3)
  {
    objc_msgSend(v6, "utcCreationDate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10)
    {
      -[PLManagedAsset _updateCoreDateExtendedAttributes:fromMetadata:](self, "_updateCoreDateExtendedAttributes:fromMetadata:", v30, 0);
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setDateCreatedSource:", 0);

      goto LABEL_10;
    }
    v11 = self;
    v12 = v30;
    v13 = v6;
    goto LABEL_8;
  }
  if (!v9)
  {
    v11 = self;
    v12 = v30;
    v13 = 0;
LABEL_8:
    -[PLManagedAsset _updateCoreDateExtendedAttributes:fromMetadata:](v11, "_updateCoreDateExtendedAttributes:fromMetadata:", v12, v13);
  }
LABEL_10:
  objc_msgSend(v6, "cameraMake");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "cameraMake");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v15, "isEqualToString:", v16);

  if ((v17 & 1) == 0)
    objc_msgSend(v30, "setCameraMake:", v15);
  objc_msgSend(v6, "cameraModel");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "cameraModel");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(v18, "isEqualToString:", v19);

  if ((v20 & 1) == 0)
    objc_msgSend(v30, "setCameraModel:", v18);
  objc_msgSend(v6, "lensModel");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (v21)
    objc_msgSend(v30, "setLensModel:", v21);
  objc_msgSend(v6, "focalLengthIn35mm");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  if (v22)
    objc_msgSend(v30, "setFocalLengthIn35mm:", v22);
  objc_msgSend(v6, "gpsLocation");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v23;
  if (v23)
  {
    v25 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(v23, "coordinate");
    objc_msgSend(v25, "numberWithDouble:");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setLatitude:", v26);

    v27 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(v24, "coordinate");
    objc_msgSend(v27, "numberWithDouble:", v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setLongitude:", v29);

  }
LABEL_21:

}

- (void)updateImageExtendedAttributesFromMetadata:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;

  v28 = a3;
  -[PLManagedAsset extendedAttributesCreateIfNeeded:](self, "extendedAttributesCreateIfNeeded:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v28)
  {
    -[PLManagedAsset _updateCoreExtendedAttributes:fromMetadata:](self, "_updateCoreExtendedAttributes:fromMetadata:", v4, v28);
    objc_msgSend(v28, "fNumber");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAperture:", v5);

    objc_msgSend(v28, "exposureBias");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setExposureBias:", v6);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v28, "flashFired"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setFlashFired:", v7);

    objc_msgSend(v28, "focalLength");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setFocalLength:", v8);

    objc_msgSend(v28, "focalLengthIn35mm");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setFocalLengthIn35mm:", v9);

    objc_msgSend(v28, "iso");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setIso:", v10);

    objc_msgSend(v28, "lensModel");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setLensModel:", v11);

    objc_msgSend(v28, "meteringMode");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setMeteringMode:", v12);

    objc_msgSend(v28, "exposureTime");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setShutterSpeed:", v13);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v28, "orientation"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setOrientation:", v14);

    objc_msgSend(v28, "semanticStyleToneBias");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSlushSceneBias:", v15);

    objc_msgSend(v28, "semanticStyleWarmthBias");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSlushWarmthBias:", v16);

    objc_msgSend(v28, "semanticStyleRenderingVersion");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSlushVersion:", v17);

    objc_msgSend(v28, "semanticStylePreset");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSlushPreset:", v18);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", objc_msgSend(v28, "smartStyleCast"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSleetCast:", v19);

    objc_msgSend(v28, "smartStyleToneBias");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSleetToneBias:", v20);

    objc_msgSend(v28, "smartStyleColorBias");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSleetColorBias:", v21);

    objc_msgSend(v28, "smartStyleIntensity");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSleetIntensity:", v22);

    objc_msgSend(v28, "smartStyleRenderingVersion");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSleetRenderingVersion:", v23);

    -[PLManagedAsset setIsSmartStyleableWithMetadata:](self, "setIsSmartStyleableWithMetadata:", v28);
    objc_msgSend(v28, "digitalZoomRatio");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setDigitalZoomRatio:", v24);

    objc_msgSend(v28, "generativeAIImageType");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setGenerativeAIType:", v25);

    objc_msgSend(v28, "credit");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setCredit:", v26);

    objc_msgSend(v28, "whiteBalance");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (v27)
      objc_msgSend(v4, "setWhiteBalance:", v27);

  }
}

- (id)evaluateWhiteBalanceValueWithOriginalExifProperties:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  unint64_t v9;

  v3 = a3;
  objc_msgSend(v3, "objectForKey:", *MEMORY[0x1E0CBCCC0]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    if ((objc_msgSend(v4, "isEqualToNumber:", &unk_1E375DA10) & 1) == 0)
    {
      objc_msgSend(v3, "objectForKey:", *MEMORY[0x1E0CBCBF8]);
      v6 = objc_claimAutoreleasedReturnValue();

      v5 = (void *)v6;
      if (!v6)
      {
        objc_msgSend(v3, "objectForKey:", *MEMORY[0x1E0CBC8C0]);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = v7;
        if (v7 && (v9 = objc_msgSend(v7, "integerValue"), v9 <= 0x15))
        {
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", evaluateWhiteBalanceValueWithOriginalExifProperties__canonWhiteBalance[v9]);
          v5 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v5 = 0;
        }

      }
    }
  }

  return v5;
}

- (void)setImageInfoFromOriginalImageMetadata:(id)a3
{
  id v4;

  v4 = a3;
  if (v4)
  {
    -[PLManagedAsset setCameraCaptureDeviceFromMetadata:](self, "setCameraCaptureDeviceFromMetadata:", v4);
    -[PLManagedAsset _setHDRTypeFromMetadata:](self, "_setHDRTypeFromMetadata:", v4);
    -[PLManagedAsset _setColorSpaceNameFromMetadata:](self, "_setColorSpaceNameFromMetadata:", v4);
    -[PLManagedAsset setDepthTypeFromMetadata:](self, "setDepthTypeFromMetadata:", v4);
    -[PLManagedAsset setEditableDepthBadgeAttributeFromMetadata:](self, "setEditableDepthBadgeAttributeFromMetadata:", v4);
    -[PLManagedAsset setSpatialTypeFromMetadata:](self, "setSpatialTypeFromMetadata:", v4);
    -[PLManagedAsset updatePlaybackVariationAndStyleFromOriginalMetadata:](self, "updatePlaybackVariationAndStyleFromOriginalMetadata:", v4);
    -[PLManagedAsset _setHDRGainFromMetadata:](self, "_setHDRGainFromMetadata:", v4);
    -[PLManagedAsset _setSOCGroupIdentifierFromMetadata:](self, "_setSOCGroupIdentifierFromMetadata:", v4);
    -[PLManagedAsset setTimeExifTimestampStringFromMetadata:](self, "setTimeExifTimestampStringFromMetadata:", v4);
    -[PLManagedAsset setCurrentSleetCastFromMetadata:](self, "setCurrentSleetCastFromMetadata:", v4);
    if (PLPlatformExtendedAttributesSupported())
      -[PLManagedAsset updateImageExtendedAttributesFromMetadata:](self, "updateImageExtendedAttributesFromMetadata:", v4);
  }

}

- (void)_setBurstUuidFromMetadata:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0D73310], "maskForAvalancheSupportedAssets");
    -[PLManagedAsset savedAssetType](self, "savedAssetType");
    if (!PLValidatedSavedAssetTypeApplies())
      goto LABEL_3;
    objc_msgSend(v5, "burstUuid");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      -[PLManagedAsset setAvalancheUUID:](self, "setAvalancheUUID:", v4);
      -[PLManagedAsset setAvalanchePickType:](self, "setAvalanchePickType:", 1);
      -[PLManagedAsset setAvalancheKind:](self, "setAvalancheKind:", 1);
      if (+[PLAvalanche shouldOnlyShowAvalanchePicks](PLAvalanche, "shouldOnlyShowAvalanchePicks"))
        -[PLManagedAsset setVisibilityState:](self, "setVisibilityState:", 2);
    }
  }

LABEL_3:
}

- (BOOL)setImageInfoFromImageMetadata:(id)a3 overwriteOriginalProperties:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;

  v4 = a4;
  v6 = a3;
  if (v6)
  {
    v7 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v6, "cgImageProperties");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset _setSizeAndOrientationFromMetadata:](self, "_setSizeAndOrientationFromMetadata:", v6);
    v9 = objc_msgSend(v6, "cgImageMetadata");
    if (v9)
    {
      -[PLManagedAsset setFaceRegionsFromImageMetadata:](self, "setFaceRegionsFromImageMetadata:", v9);
      -[PLManagedAsset revalidateFaceAreaPoints](self, "revalidateFaceAreaPoints");
    }
    objc_msgSend(v6, "contentType");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "identifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v11);

    if (v4)
    {
      -[PLManagedAsset _setOriginalSizeAndOrientationFromMetadata:](self, "_setOriginalSizeAndOrientationFromMetadata:", v6);
      if (v8)
        -[PLManagedAsset setThumbnailDataFromImageProperties:](self, "setThumbnailDataFromImageProperties:", v8);
      objc_msgSend(v6, "gpsLocation");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setLocation:](self, "setLocation:", v12);

      -[PLManagedAsset _setSavedAssetTypeFromMetadata:](self, "_setSavedAssetTypeFromMetadata:", v6);
      -[PLManagedAsset setKeywordsFromImageProperties:](self, "setKeywordsFromImageProperties:", v8);
      -[PLManagedAsset _setPhotoIrisPropertiesFromMetadata:](self, "_setPhotoIrisPropertiesFromMetadata:", v6);
      -[PLManagedAsset updateKindSubtypeIfScreenshotWithMetadata:](self, "updateKindSubtypeIfScreenshotWithMetadata:", v6);
      -[PLManagedAsset updatePanoramosityWithMetadata:](self, "updatePanoramosityWithMetadata:", v6);
      if (!-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
        -[PLManagedAsset setImageInfoFromOriginalImageMetadata:](self, "setImageInfoFromOriginalImageMetadata:", v6);
      v13 = (void *)MEMORY[0x1E0D73280];
      -[PLManagedAsset pl_photoLibrary](self, "pl_photoLibrary");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "pathManager");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "libraryURL");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v13, "wellKnownPhotoLibraryIdentifierForURL:", v16);

      if (v17 != 3)
        -[PLManagedAsset _setBurstUuidFromMetadata:](self, "_setBurstUuidFromMetadata:", v6);
      objc_msgSend(v6, "originatingAssetIdentifier");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (v18)
      {
        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "setOriginatingAssetIdentifier:", v18);

      }
    }
    else
    {
      -[PLManagedAsset setDepthTypeFromMetadata:](self, "setDepthTypeFromMetadata:", v6);
      -[PLManagedAsset _setHDRGainFromMetadata:](self, "_setHDRGainFromMetadata:", v6);
    }

    objc_autoreleasePoolPop(v7);
  }

  return v6 != 0;
}

- (void)updateVideoExtendedAttributesFromMetadata:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  char v20;
  id v21;

  v21 = a3;
  -[PLManagedAsset extendedAttributesCreateIfNeeded:](self, "extendedAttributesCreateIfNeeded:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v21)
  {
    -[PLManagedAsset _updateCoreExtendedAttributes:fromMetadata:](self, "_updateCoreExtendedAttributes:fromMetadata:", v4, v21);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v21, "orientation"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setOrientation:", v5);

    objc_msgSend(v21, "durationTimeInterval");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_msgSend(v4, "duration");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "doubleValue");
      v9 = v8;
      objc_msgSend(v6, "doubleValue");
      v11 = vabdd_f64(v9, v10);

      if (v11 > 2.22044605e-16)
        objc_msgSend(v4, "setDuration:", v6);
    }
    objc_msgSend(v21, "nominalFrameRate");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      objc_msgSend(v4, "fps");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "doubleValue");
      v15 = v14;
      objc_msgSend(v12, "doubleValue");
      v17 = vabdd_f64(v15, v16);

      if (v17 > 2.22044605e-16)
        objc_msgSend(v4, "setFps:", v12);
    }
    objc_msgSend(v21, "firstVideoTrackCodecString");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "codec");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v18, "isEqualToString:", v19);

    if ((v20 & 1) == 0)
      objc_msgSend(v4, "setCodec:", v18);

  }
}

- (void)updateAudioExtendedAttributesFromMetadata:(id)a3
{
  void *v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  void *v30;
  id v31;

  v31 = a3;
  -[PLManagedAsset extendedAttributesCreateIfNeeded:](self, "extendedAttributesCreateIfNeeded:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v31)
  {
    objc_msgSend(v31, "durationTimeInterval");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "doubleValue");
    v7 = v6;

    objc_msgSend(v4, "duration");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "doubleValue");
    v10 = vabdd_f64(v9, v7);

    if (v10 > 2.22044605e-16)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v7);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setDuration:", v11);

    }
    objc_msgSend(v31, "audioSampleRate");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "doubleValue");
    v14 = v13;

    objc_msgSend(v4, "sampleRate");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "doubleValue");
    v17 = vabdd_f64(v16, v14);

    if (v17 > 2.22044605e-16)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v14);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setSampleRate:", v18);

    }
    objc_msgSend(v31, "audioTrackFormat");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "unsignedIntegerValue");

    objc_msgSend(v4, "trackFormat");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "unsignedIntegerValue");

    if (v22 != v20)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v20);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setTrackFormat:", v23);

    }
    objc_msgSend(v31, "audioDataRate");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "doubleValue");
    v26 = v25;

    objc_msgSend(v4, "bitrate");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "doubleValue");
    v29 = vabdd_f64(v28, v26);

    if (v29 > 2.22044605e-16)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v14);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setBitrate:", v30);

    }
  }

}

- (void)updateVideoAttributesFromMetadata:(id)a3 overwriteOriginalProperties:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;

  v4 = a4;
  v6 = a3;
  if (v6)
  {
    v23 = v6;
    objc_msgSend(v6, "durationTimeInterval");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "doubleValue");
    v9 = v8;

    -[PLManagedAsset duration](self, "duration");
    if (vabdd_f64(v10, v9) > 0.00000011920929)
      -[PLManagedAsset setDuration:](self, "setDuration:", v9);
    objc_msgSend(v23, "orientedPixelSize");
    v12 = v11;
    v14 = v13;
    if (v11 != (double)-[PLManagedAsset width](self, "width"))
      -[PLManagedAsset setWidth:](self, "setWidth:", (uint64_t)v12);
    if (v14 != (double)-[PLManagedAsset height](self, "height"))
      -[PLManagedAsset setHeight:](self, "setHeight:", (uint64_t)v14);
    v15 = -[PLManagedAsset highFrameRateState](self, "highFrameRateState");
    if (objc_msgSend(v23, "isSloMo"))
    {
      if (v4)
      {
        v16 = v15 | 3;
        -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 101);
      }
      else
      {
        v16 = v15 | 2;
      }
    }
    else if ((v15 & 1) != 0)
    {
      v16 = v15 & 0xFFFD;
    }
    else
    {
      v16 = v15;
    }
    if (-[PLManagedAsset highFrameRateState](self, "highFrameRateState") != v16)
      -[PLManagedAsset setHighFrameRateState:](self, "setHighFrameRateState:", v16);
    -[PLManagedAsset setPlaybackControlBadgeAttributeFromMetadata:](self, "setPlaybackControlBadgeAttributeFromMetadata:", v23);
    if (-[PLManagedAsset kindSubtype](self, "kindSubtype") != 102
      && objc_msgSend(v23, "isTimelapse"))
    {
      -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 102);
    }
    if (-[PLManagedAsset kindSubtype](self, "kindSubtype") != 104
      && objc_msgSend(v23, "isActionCam"))
    {
      -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 104);
    }
    objc_msgSend(v23, "playbackVariation");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset updatePlaybackVariationAndLoopingStyleFromVariation:](self, "updatePlaybackVariationAndLoopingStyleFromVariation:", (unsigned __int16)objc_msgSend(v17, "unsignedIntegerValue"));

    -[PLManagedAsset updateSmartStyleVideoCastFromMetadata:](self, "updateSmartStyleVideoCastFromMetadata:", v23);
    objc_msgSend(v23, "montageString");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "setMontage:", v18);

    }
    -[PLManagedAsset mediaGroupUUID](self, "mediaGroupUUID");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "length");

    if (!v21)
    {
      objc_msgSend(v23, "livePhotoPairingIdentifier");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      if (v22)
        -[PLManagedAsset setMediaGroupUUID:](self, "setMediaGroupUUID:", v22);

    }
    -[PLManagedAsset setTimeExifTimestampStringFromMetadata:](self, "setTimeExifTimestampStringFromMetadata:", v23);
    -[PLManagedAsset setSpatialTypeFromMetadata:](self, "setSpatialTypeFromMetadata:", v23);
    if (objc_msgSend(v23, "isHDR"))
      -[PLManagedAsset _setHDRTypeFromMetadata:](self, "_setHDRTypeFromMetadata:", v23);
    if (objc_msgSend(v23, "isCinematicVideo"))
      -[PLManagedAsset setDepthTypeFromMetadata:](self, "setDepthTypeFromMetadata:", v23);
    -[PLManagedAsset setSpatialAudioControlBadgeAttributeFromMetadata:](self, "setSpatialAudioControlBadgeAttributeFromMetadata:", v23);
    if (objc_msgSend(v23, "isProRes"))
    {
      -[PLManagedAsset setIsMagicCarpet:](self, "setIsMagicCarpet:", 1);
      -[PLManagedAsset setProResBadgeAttribute:](self, "setProResBadgeAttribute:", 1);
    }

    v6 = v23;
  }

}

- (id)metadataFromMediaPropertiesOrOriginalResource
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[5];

  -[PLManagedAsset master](self, "master");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "mediaMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset master](self, "master");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "uniformTypeIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __63__PLManagedAsset_metadataFromMediaPropertiesOrOriginalResource__block_invoke;
  v10[3] = &unk_1E36639C0;
  v10[4] = self;
  -[PLManagedAsset _metadataFromMediaProperties:uniformTypeIdentifier:block:](self, "_metadataFromMediaProperties:uniformTypeIdentifier:block:", v5, v7, v10);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (id)fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[4];
  id v12;
  PLManagedAsset *v13;

  v4 = a3;
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "mediaMetadata");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "data");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __93__PLManagedAsset_fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL___block_invoke;
    v11[3] = &unk_1E36639E8;
    v12 = v4;
    v13 = self;
    -[PLManagedAsset _metadataFromMediaProperties:uniformTypeIdentifier:block:](self, "_metadataFromMediaProperties:uniformTypeIdentifier:block:", v7, v8, v11);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (id)_metadataFromMediaProperties:(id)a3 uniformTypeIdentifier:(id)a4 block:(id)a5
{
  id v8;
  id v9;
  void (**v10)(_QWORD);
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  id v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  NSObject *v27;
  int v28;
  void *v29;
  int v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = (void (**)(_QWORD))a5;
  objc_opt_class();
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v12 = v11;
  else
    v12 = 0;
  v13 = v12;

  objc_msgSend(v13, "pl_libraryBundle");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "timeZoneLookup");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8)
    goto LABEL_16;
  v16 = -[PLManagedAsset kind](self, "kind");
  if ((v16 - 1) < 2)
  {
    v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVProxyData:timeZoneLookup:", v8, v15);
    if (!v19)
      goto LABEL_16;
    goto LABEL_11;
  }
  if (v16 == 3)
  {
    PLBackendGetLog();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v31 = 67109120;
      LODWORD(v32) = -[PLManagedAsset kind](self, "kind");
      _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Unexpected asset kind: %d", (uint8_t *)&v31, 8u);
    }

LABEL_16:
    if (!v10)
    {
LABEL_30:
      PLBackendGetLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = 138543362;
        v32 = v29;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEBUG, "Failed to obtain media metadata for asset: %{public}@", (uint8_t *)&v31, 0xCu);

      }
      v19 = 0;
      goto LABEL_33;
    }
    v10[2](v10);
    v20 = objc_claimAutoreleasedReturnValue();
    v23 = -[PLManagedAsset kind](self, "kind");
    if ((v23 - 1) >= 2)
    {
      if (v23 == 3)
      {
        PLBackendGetLog();
        v27 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          v28 = -[PLManagedAsset kind](self, "kind");
          v31 = 67109120;
          LODWORD(v32) = v28;
          _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "Unexpected asset kind: %d", (uint8_t *)&v31, 8u);
        }

      }
      else if (!v23)
      {
        v24 = objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithImageURL:contentType:options:timeZoneLookup:cacheImageSource:cacheImageData:", v20, 0, 12, v15, 1, 0);
        goto LABEL_22;
      }
LABEL_29:

      goto LABEL_30;
    }
    v24 = objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVURL:options:timeZoneLookup:", v20, 12, v15);
LABEL_22:
    v19 = (void *)v24;
    if (v24)
    {
      PLBackendGetLog();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = 138543362;
        v32 = v26;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEBUG, "Metadata obtained from file url for asset: %{public}@", (uint8_t *)&v31, 0xCu);

      }
      goto LABEL_33;
    }
    goto LABEL_29;
  }
  if (v16)
    goto LABEL_16;
  v17 = objc_alloc(MEMORY[0x1E0D75140]);
  objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", v9);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (void *)objc_msgSend(v17, "initWithImageSourceProxyOrEncodedImagePropertyData:contentType:timeZoneLookup:", v8, v18, v15);

  if (!v19)
    goto LABEL_16;
LABEL_11:
  PLBackendGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = 138543362;
    v32 = v21;
    _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEBUG, "Metadata obtained from mediaMetadata data for asset: %{public}@", (uint8_t *)&v31, 0xCu);

  }
LABEL_33:

  return v19;
}

- (id)_effectiveMetadataForMainFileURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 shouldCache:(BOOL)a6 error:(id *)a7
{
  _BOOL8 v8;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  const char *aSelector;
  char *aSelectora;
  id *v44;
  uint64_t v45;
  void *v46;
  uint8_t buf[4];
  void *v48;
  __int16 v49;
  void *v50;
  uint64_t v51;

  v8 = a6;
  v51 = *MEMORY[0x1E0C80C00];
  v13 = a3;
  v14 = a4;
  v15 = a5;
  if (objc_msgSend(v14, "isSyndicationOriginated"))
  {
    v16 = v14;
    v17 = 0;
  }
  else
  {
    if (v15)
      v18 = 0;
    else
      v18 = v14;
    v19 = v18;
    v16 = v19;
    if (v19)
    {
      objc_msgSend(v19, "fileURL");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      if (v20)
      {
        v21 = 0;
        v16 = v14;
        goto LABEL_24;
      }
    }
    aSelector = a2;
    v44 = a7;
    if (v15)
      v22 = v15;
    else
      v22 = v13;
    v23 = v22;
    if (v23)
    {
      v24 = v23;
      v25 = objc_alloc(MEMORY[0x1E0D75140]);
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "libraryBundle");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "timeZoneLookup");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = v25;
      v23 = v24;
      v30 = objc_msgSend(v29, "initWithMediaURL:options:timeZoneLookup:shouldCache:", v24, 12, v28, v8);

      v16 = (id)v30;
    }
    if (v16)
    {
      v17 = 0;
    }
    else
    {
      PLMigrationGetLog();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(aSelector);
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "path");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v48 = v32;
        v49 = 2112;
        v50 = v33;
        _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "%@ Unable to get file metadata for '%@', skip updating asset attributes", buf, 0x16u);

      }
      aSelectora = (char *)MEMORY[0x1E0CB35C8];
      v34 = *MEMORY[0x1E0D74498];
      v45 = *MEMORY[0x1E0CB2938];
      v35 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v23, "path");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "stringWithFormat:", CFSTR("Unable to load file metadata from path %@"), v36);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v46 = v37;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v46, &v45, 1);
      v38 = v23;
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(aSelectora, "errorWithDomain:code:userInfo:", v34, 47020, v39);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      v23 = v38;
    }

    a7 = v44;
  }
  v40 = v17;
  v21 = v40;
  if (!v16)
  {
    if (a7)
    {
      v21 = objc_retainAutorelease(v40);
      v16 = 0;
      *a7 = v21;
    }
    else
    {
      v16 = 0;
    }
  }
LABEL_24:

  return v16;
}

- (BOOL)setVideoInfoFromFileAtURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 overwriteOriginalProperties:(BOOL)a6
{
  _BOOL8 v6;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  BOOL v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _BOOL4 v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  int v30;
  void *v32;
  void *v33;
  id v34;
  uint8_t buf[4];
  id v36;
  uint64_t v37;

  v6 = a6;
  v37 = *MEMORY[0x1E0C80C00];
  v11 = (unint64_t)a3;
  v12 = (unint64_t)a4;
  v13 = a5;
  if (v11 | v12)
  {
    v34 = 0;
    -[PLManagedAsset _effectiveMetadataForMainFileURL:mainFileMetadata:fullSizeRenderURL:shouldCache:error:](self, "_effectiveMetadataForMainFileURL:mainFileMetadata:fullSizeRenderURL:shouldCache:error:", v11, v12, v13, 0, &v34);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v34;
    v16 = v14 != 0;
    if (v14)
    {
      v17 = (void *)MEMORY[0x19AEC1554]();
      -[PLManagedAsset updateVideoAttributesFromMetadata:overwriteOriginalProperties:](self, "updateVideoAttributesFromMetadata:overwriteOriginalProperties:", v14, v6);
      if (v6)
      {
        if (v13)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v32, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 6771, CFSTR("Overwriting original properties should only happen when fullSizeRenderURL is nil"));

        }
        objc_msgSend(v14, "orientedPixelSize", v17);
        v19 = v18;
        -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", (uint64_t)v20);
        -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", (uint64_t)v19);
        objc_msgSend(v14, "gpsLocation");
        v21 = objc_claimAutoreleasedReturnValue();
        if (v21
          && (v22 = (void *)v21,
              objc_msgSend(v14, "gpsLocation"),
              v23 = (void *)objc_claimAutoreleasedReturnValue(),
              objc_msgSend(v23, "coordinate"),
              v24 = +[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"),
              v23,
              v22,
              v24))
        {
          objc_msgSend(v14, "gpsLocation");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset setLocation:](self, "setLocation:", v25);

        }
        else
        {
          -[PLManagedAsset setLocation:](self, "setLocation:", 0);
        }
        objc_msgSend(v14, "originatingAssetIdentifier");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        if (v27)
        {
          -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "setOriginatingAssetIdentifier:", v27);

        }
        if (PLPlatformExtendedAttributesSupported()
          && !-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
        {
          -[PLManagedAsset updateVideoExtendedAttributesFromMetadata:](self, "updateVideoExtendedAttributesFromMetadata:", v14);
        }
        objc_msgSend(v14, "author");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v30 = objc_msgSend(v29, "isEqual:", CFSTR("ReplayKitRecording"));

        if (v30)
          -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 103);

        v17 = v33;
      }
      objc_autoreleasePoolPop(v17);
    }
    else
    {
      PLBackendGetLog();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v36 = v15;
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "Unable to load metadata with error: %@", buf, 0xCu);
      }

    }
  }
  else
  {
    v16 = 0;
  }

  return v16;
}

- (void)setFaceRegionsFromCGImageProperties:(id)a3
{
  void *v4;
  id v5;

  PLGetFaceRegionsFromCGImageProperties(a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  PLManagedAssetEncodeFaceRegions(v5);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setFaceRegions:](self, "setFaceRegions:", v4);

}

- (void)setFaceRegionsFromImageMetadata:(CGImageMetadata *)a3
{
  void *v4;
  id v5;

  if (a3)
  {
    PLGetFaceRegionsFromImageMetadata(a3);
    v5 = (id)objc_claimAutoreleasedReturnValue();
    PLManagedAssetEncodeFaceRegions(v5);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setFaceRegions:](self, "setFaceRegions:", v4);

  }
}

- (id)imageDataForThumbGenerationAndIfNeededRAWUTI:(id *)a3 isPreviewSource:(BOOL *)a4
{
  void *v7;
  void *v8;
  int v9;
  BOOL v10;
  id v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  NSObject *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  id v28;
  void *v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  id v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[PLManagedAsset hasUnrenderedAsyncAdjustments](self, "hasUnrenderedAsyncAdjustments"))
  {
    -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](self, "pathForAsyncAdjustedRenderPreviewImageFile");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v7, "fileExistsAtPath:", v8);
    v10 = v9;
    if (v9)
      v11 = v8;
    else
      v11 = 0;

  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  v12 = -[PLManagedAsset isPhoto](self, "isPhoto");
  if (!v11 && v12)
  {
    if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    {
      -[PLManagedAsset pathForBestAvailableFullsizeRenderImageFileOutIsSubstandard:](self, "pathForBestAvailableFullsizeRenderImageFileOutIsSubstandard:", 0);
      v11 = (id)objc_claimAutoreleasedReturnValue();
      PLThumbnailsGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v31 = v11;
        v32 = 2114;
        v33 = v14;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEBUG, "Best available file for thumbnail generation is %@ for uuid %{public}@", buf, 0x16u);

      }
    }
    else
    {
      -[PLManagedAsset pathForLargeThumbnailFile](self, "pathForLargeThumbnailFile");
      v13 = objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v7, "fileExistsAtPath:", v13))
      {
        v13 = v13;
        v11 = v13;
      }
      else
      {
        -[PLManagedAsset pathForFullsizeImageFile](self, "pathForFullsizeImageFile");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v7, "fileExistsAtPath:", v15))
        {
          v11 = v15;
        }
        else
        {
          -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v7, "fileExistsAtPath:", v16))
          {
            v29 = v16;
            v11 = v16;
            objc_msgSend(v11, "pathExtension");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v17, -[PLManagedAsset kind](self, "kind"));
            v18 = objc_claimAutoreleasedReturnValue();

            v19 = (void *)v18;
            if (v18)
            {
              objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", v18);
              v28 = (id)v18;
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              v21 = objc_msgSend(v20, "conformsToType:", *MEMORY[0x1E0CEC5B8]);

              v19 = v28;
              if (v21)
              {
                if (a3)
                  *a3 = objc_retainAutorelease(v28);
                PLBackendGetLog();
                v22 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412546;
                  v31 = v11;
                  v32 = 2112;
                  v33 = v15;
                  _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "Rebuilding thumbs from RAW file (%@) because fullsize image is missing (%@). This might cause assetsd to jetsam.", buf, 0x16u);
                }

              }
            }

            v16 = v29;
          }
          else
          {
            v11 = 0;
          }

        }
      }
    }

  }
  if (!v11)
  {
    if (!-[PLManagedAsset isVideo](self, "isVideo"))
    {
      v11 = 0;
      v23 = 0;
      if ((objc_msgSend(v7, "fileExistsAtPath:", 0) & 1) != 0)
        goto LABEL_46;
    }
    -[PLManagedAsset pathForLargeThumbnailFile](self, "pathForLargeThumbnailFile");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v7, "fileExistsAtPath:", v11) & 1) == 0)
    {
      -[PLManagedAsset pathForMediumThumbnailFile](self, "pathForMediumThumbnailFile");
      v24 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_msgSend(v7, "fileExistsAtPath:", v24) & 1) != 0
        || (!-[PLManagedAsset isPhoto](self, "isPhoto") || -[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
        && (!-[PLManagedAsset isVideo](self, "isVideo")
         || -[PLManagedAsset hasAdjustments](self, "hasAdjustments")
         && !-[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo")))
      {
        v11 = v24;
      }
      else
      {
        -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
        v11 = (id)objc_claimAutoreleasedReturnValue();

      }
    }
    if (!v11)
      goto LABEL_49;
  }
  if (!objc_msgSend(v7, "fileExistsAtPath:", v11))
  {
LABEL_49:
    v23 = 0;
    if (!a4)
      goto LABEL_48;
    goto LABEL_47;
  }
  PLThumbnailsGetLog();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v31 = v26;
    v32 = 2112;
    v33 = v11;
    _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEBUG, "Rebuilding thumbnail for %{public}@ with %@", buf, 0x16u);

  }
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithContentsOfFile:options:error:", v11, 1, 0);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_46:
  if (a4)
LABEL_47:
    *a4 = v10;
LABEL_48:

  return v23;
}

- (unsigned)shareState
{
  void *v3;
  void *v4;
  int v5;

  -[PLManagedAsset libraryScope](self, "libraryScope");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
    return 0;
  objc_msgSend((id)objc_opt_class(), "predicateToIncludeOnlyContentContributedByCurrentUser");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "evaluateWithObject:", self);

  if (v5)
    return 1;
  else
    return 2;
}

- (CGSize)imageSize
{
  double v3;
  double v4;
  double v5;
  CGSize result;

  v3 = (double)-[PLManagedAsset width](self, "width");
  v4 = (double)-[PLManagedAsset height](self, "height");
  v5 = v3;
  result.height = v4;
  result.width = v5;
  return result;
}

- (void)setImageSize:(CGSize)a3
{
  double height;

  height = a3.height;
  -[PLManagedAsset setWidth:](self, "setWidth:", vcvtpd_s64_f64(a3.width));
  -[PLManagedAsset setHeight:](self, "setHeight:", vcvtpd_s64_f64(height));
}

- (id)managedAssetForPhotoLibrary:(id)a3
{
  id v4;
  id v5;
  PLManagedAsset *v6;

  v4 = a3;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v5 == v4)
    v6 = self;
  else
    v6 = 0;
  return v6;
}

- (CLLocationCoordinate2D)gpsCoordinate
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  CLLocationCoordinate2D result;

  -[PLManagedAsset location](self, "location");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v5 = *MEMORY[0x1E0C9E500];
  v4 = *(double *)(MEMORY[0x1E0C9E500] + 8);
  if (v2)
  {
    objc_msgSend(v2, "coordinate");
    v7 = v6;
    v9 = v8;
    if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"))
    {
      v4 = v9;
      v5 = v7;
    }
  }

  v10 = v5;
  v11 = v4;
  result.longitude = v11;
  result.latitude = v10;
  return result;
}

- (BOOL)isPhotoStreamPhoto
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForPhotoStreamAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isPlaceholderAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForPlaceholderAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isFinderSyncedAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForFinderSyncedAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isCloudSharedAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isMomentSharedAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForMomentSharedAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isCameraConnectionKitAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForCameraConnectionKitAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isReferencedAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForReferencedAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isVisibleForSocialGroupKeyAssetFetch
{
  int v3;
  void *v4;
  char v5;

  if ((-[PLManagedAsset hidden](self, "hidden") & 1) != 0
    || -[PLManagedAsset trashedState](self, "trashedState")
    || !-[PLManagedAsset avalanchePickTypeIsVisible](self, "avalanchePickTypeIsVisible"))
  {
    v3 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D73310], "maskForSocialGroupKeyAssetFetch");
    -[PLManagedAsset savedAssetType](self, "savedAssetType");
    v3 = PLValidatedSavedAssetTypeApplies() ^ 1;
  }
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isCloudPhotoLibraryEnabled");

  if ((v5 & 1) != 0)
  {
    if (!v3)
      return 0;
    return !-[PLManagedAsset isPhotoStreamPhoto](self, "isPhotoStreamPhoto");
  }
  if (v3)
  {
    -[PLManagedAsset setVisibilityState:](self, "setVisibilityState:", 0);
    return !-[PLManagedAsset isPhotoStreamPhoto](self, "isPhotoStreamPhoto");
  }
  return 0;
}

- (int64_t)cloudSharedAssetPlaceholderKind
{
  if (-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
    return (int)-[PLManagedAsset cloudPlaceholderKind](self, "cloudPlaceholderKind");
  else
    return 0;
}

- (BOOL)isCloudPhotoLibraryAsset
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudPhotoLibraryAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (PLCloudSharedAlbumProtocol)cloudShareAlbum
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  id v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[PLManagedAsset albums](self, "albums", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v2);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v8, "isCloudSharedAlbum"))
        {
          v9 = v8;

          v5 = v9;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v4);
  }
  else
  {
    v5 = 0;
  }

  return (PLCloudSharedAlbumProtocol *)v5;
}

- (BOOL)isVideo
{
  return -[PLManagedAsset kind](self, "kind") == 1;
}

- (BOOL)isLoopingVideo
{
  return -[PLManagedAsset playbackStyle](self, "playbackStyle") == 5;
}

- (BOOL)isStreamedVideo
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset isVideo](self, "isVideo");
  if (v3)
    LOBYTE(v3) = -[PLManagedAsset kindSubtype](self, "kindSubtype") == 100;
  return v3;
}

- (BOOL)isHDVideo
{
  _BOOL4 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = -[PLManagedAsset isVideo](self, "isVideo");
  if (v3)
  {
    v4 = -[PLManagedAsset width](self, "width");
    v5 = -[PLManagedAsset height](self, "height");
    LOBYTE(v3) = v4 >= 720 && v5 > 1279 || v4 > 1279 && v5 > 719;
  }
  return v3;
}

- (BOOL)isPhoto
{
  return -[PLManagedAsset kind](self, "kind") == 0;
}

- (BOOL)isColorAware
{
  return -[PLManagedAsset isPhoto](self, "isPhoto") || -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
}

- (BOOL)isPanorama
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset isPhoto](self, "isPhoto");
  if (v3)
    LOBYTE(v3) = -[PLManagedAsset kindSubtype](self, "kindSubtype") == 1;
  return v3;
}

- (BOOL)isUnknown
{
  return -[PLManagedAsset kind](self, "kind") == 3;
}

- (BOOL)_hasPanoramaDimensions
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  int v8;
  int v9;
  int v10;

  v3 = -[PLManagedAsset height](self, "height");
  if (v3)
  {
    v4 = v3;
    v5 = -[PLManagedAsset width](self, "width");
    v6 = (double)v5 / (double)v4;
    if (v6 > 2.0 || v6 < 0.5)
    {
      if (v5 <= v4)
        v8 = v4;
      else
        v8 = v5;
      if (v5 >= v4)
        v9 = v4;
      else
        v9 = v5;
      v10 = v8 << 16;
      LOBYTE(v3) = v9 << 16 > 52428800 && v10 < 1966080000;
    }
    else
    {
      LOBYTE(v3) = 0;
    }
  }
  return v3;
}

- (BOOL)hasScreenshotMetadata
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  char v9;

  -[PLManagedAsset imageProperties](self, "imageProperties");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_opt_class();
    objc_msgSend(v2, "objectForKey:", *MEMORY[0x1E0CBCB50]);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;

    if (v5)
    {
      objc_opt_class();
      objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0CBCCB0]);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v7 = v6;
      else
        v7 = 0;
      v8 = v7;

      v9 = objc_msgSend(v8, "isEqualToString:", CFSTR("Screenshot"));
    }
    else
    {
      v9 = 0;
    }

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (BOOL)_hasScreenshotMetadataWithMetadata:(id)a3
{
  return objc_msgSend(a3, "isScreenshot");
}

- (BOOL)_hasScreenshotDimensions
{
  void *v3;
  void *v4;
  char v5;

  pl_dispatch_once();
  -[PLManagedAsset originalWidth](self, "originalWidth");
  -[PLManagedAsset originalHeight](self, "originalHeight");
  DCIM_NSValueFromCGSize();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  DCIM_NSValueFromCGSize();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend((id)_hasScreenshotDimensions_screenDimensions, "containsObject:", v3) & 1) != 0)
    v5 = 1;
  else
    v5 = objc_msgSend((id)_hasScreenshotDimensions_screenDimensions, "containsObject:", v4);

  return v5;
}

- (BOOL)isAudio
{
  return -[PLManagedAsset kind](self, "kind") == 2;
}

- (BOOL)canPerformEditOperation:(unint64_t)a3
{
  int v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v16;
  char v17;
  _QWORD v18[6];
  _QWORD v19[7];
  _QWORD v20[6];
  _QWORD v21[5];
  _QWORD v22[7];
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;

  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  if (a3 == 32)
  {
    objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders");
    -[PLManagedAsset savedAssetType](self, "savedAssetType");
    v7 = PLValidatedSavedAssetTypeApplies();
    *((_BYTE *)v24 + 24) = v7;
    if (v7)
    {
      if (!-[PLManagedAsset hasLibraryScope](self, "hasLibraryScope"))
      {
        v6 = objc_msgSend((id)objc_opt_class(), "_isLibraryScopeExiting:", self) ^ 1;
        v8 = v24;
        goto LABEL_13;
      }
LABEL_9:
      v8 = v24;
      v6 = 1;
LABEL_13:
      *((_BYTE *)v8 + 24) = v6;
      goto LABEL_14;
    }
LABEL_11:
    v6 = 0;
    goto LABEL_14;
  }
  if (a3 != 64)
  {
    v9 = MEMORY[0x1E0C809B0];
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke;
    v22[3] = &unk_1E3675800;
    v22[4] = self;
    v22[5] = &v23;
    v22[6] = a3;
    v10 = (void *)MEMORY[0x19AEC174C](v22, a2);
    v21[0] = v9;
    v21[1] = 3221225472;
    v21[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_2;
    v21[3] = &unk_1E3677580;
    v21[4] = &v23;
    v11 = (void *)MEMORY[0x19AEC174C](v21);
    v20[0] = v9;
    v20[1] = 3221225472;
    v20[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_3;
    v20[3] = &unk_1E3666688;
    v20[4] = &v23;
    v20[5] = a3;
    v12 = (void *)MEMORY[0x19AEC174C](v20);
    v19[0] = v9;
    v19[1] = 3221225472;
    v19[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_4;
    v19[3] = &unk_1E3675800;
    v19[5] = &v23;
    v19[6] = a3;
    v19[4] = self;
    v13 = (void *)MEMORY[0x19AEC174C](v19);
    v18[0] = v9;
    v18[1] = 3221225472;
    v18[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_5;
    v18[3] = &unk_1E3666688;
    v18[4] = &v23;
    v18[5] = a3;
    v14 = (void *)MEMORY[0x19AEC174C](v18);
    objc_msgSend(MEMORY[0x1E0D73310], "executeBlockForSavedAssetType:unknown:photoBooth:photoStream:camera:cloudShared:cameraConnectionKit:cloudPhotoLibrary:wallpaper_UNUSED:momentShared:placeholder:referenced:alternate:guest:companionSynced:recovered:legacyImport:unrecognized:", -[PLManagedAsset savedAssetType](self, "savedAssetType"), v10, v10, v12, v10, v13, v10, v10, v11, v10, v14, v10, v10, v12, v10, v12,
      v11,
      v11);
    v6 = *((unsigned __int8 *)v24 + 24);

    goto LABEL_14;
  }
  objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  v5 = PLValidatedSavedAssetTypeApplies();
  *((_BYTE *)v24 + 24) = v5;
  if (!v5)
    goto LABEL_11;
  if (!-[PLManagedAsset hasLibraryScope](self, "hasLibraryScope"))
    goto LABEL_9;
  if (objc_msgSend((id)objc_opt_class(), "_isLibraryScopeExiting:", self))
  {
    v6 = 0;
    *((_BYTE *)v24 + 24) = 0;
  }
  else
  {
    objc_msgSend((id)objc_opt_class(), "predicateToIncludeOnlyContentContributedByCurrentUser");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "evaluateWithObject:", self);
    *((_BYTE *)v24 + 24) = v17;

    v6 = *((unsigned __int8 *)v24 + 24);
  }
LABEL_14:
  _Block_object_dispose(&v23, 8);
  return v6 != 0;
}

- (BOOL)canPerformDeleteOperation
{
  return -[PLManagedAsset canPerformEditOperation:](self, "canPerformEditOperation:", 4);
}

- (BOOL)isCloudPlaceholder
{
  return (-[PLManagedAsset cloudPlaceholderKind](self, "cloudPlaceholderKind") & 0xFFFFFFFE) == 2;
}

- (BOOL)isIncludedInMoments
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsIncludedInMoments");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isIncludedInCloudFeeds
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isTimelapsePlaceholder
{
  double v3;
  void *v4;
  void *v5;
  int v6;

  if (-[PLManagedAsset kindSubtype](self, "kindSubtype") == 102
    && (-[PLManagedAsset duration](self, "duration"), v3 == 0.0))
  {
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "fileExistsAtPath:", v4) ^ 1;

  }
  else
  {
    LOBYTE(v6) = 0;
  }
  return v6;
}

- (void)setIsSmartStyleableWithMetadata:(id)a3
{
  id v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  char v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t v17[16];

  v4 = a3;
  objc_msgSend(v4, "smartStyleIsReversible");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "BOOLValue");

  objc_msgSend(v4, "smartStyleExpectingReversibility");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "BOOLValue");

  -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isEqualToString:", CFSTR("com.apple.camera"));

  if (v6)
  {
    -[PLManagedAsset extendedAttributes](self, "extendedAttributes");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "sleetCast");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (int)objc_msgSend(v12, "intValue") < 1 ? 1 : v10;

    if ((v13 & 1) == 0)
    {
      if (!objc_msgSend(v4, "containsCustomStylesMetadataBlob"))
      {
        PLPhotoKitIngestGetLog();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v17 = 0;
          _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Missing smart style custom metadata.", v17, 2u);
        }
        goto LABEL_14;
      }
      goto LABEL_12;
    }
  }
  if ((v8 & v10) != 1
    || -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") != 1)
  {
    if ((v6 & v10) != 1)
      goto LABEL_15;
LABEL_12:
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = v14;
    v16 = 1;
    goto LABEL_13;
  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  v16 = 2;
LABEL_13:
  -[NSObject setSleetIsReversible:](v14, "setSleetIsReversible:", v16);
LABEL_14:

LABEL_15:
}

- (unsigned)RAWBadgeAttribute
{
  return (-[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") >> 1) & 3;
}

- (void)setRAWBadgeAttribute:(unsigned __int8)a3
{
  -[PLManagedAsset _updatePackedBadgeAttributesIfNeeded:](self, "_updatePackedBadgeAttributesIfNeeded:", -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 0xFFFFFFF9 | (2 * (a3 & 3u)));
}

- (void)recalculateRAWBadgeAttribute
{
  void *v3;
  void *v4;
  unint64_t v5;
  unsigned int v6;

  if (-[PLManagedAsset isRAWPlusJPEG](self, "isRAWPlusJPEG"))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "originalResourceChoice");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "unsignedIntegerValue");

    v6 = 0x2020102u >> (8 * v5);
    if (v5 >= 4)
      LOBYTE(v6) = 0;
  }
  else if (-[PLManagedAsset isRAWOnly](self, "isRAWOnly"))
  {
    LOBYTE(v6) = 3;
  }
  else
  {
    LOBYTE(v6) = 0;
  }
  -[PLManagedAsset setRAWBadgeAttribute:](self, "setRAWBadgeAttribute:", v6);
}

- (unsigned)keywordBadgeAttribute
{
  return -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 1;
}

- (void)setKeywordBadgeAttribute:(unsigned __int8)a3
{
  -[PLManagedAsset _updatePackedBadgeAttributesIfNeeded:](self, "_updatePackedBadgeAttributesIfNeeded:", -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 0xFFFFFFFE | a3 & 1);
}

- (unsigned)proResBadgeAttribute
{
  return (-[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") >> 3) & 1;
}

- (void)setProResBadgeAttribute:(unsigned __int8)a3
{
  -[PLManagedAsset _updatePackedBadgeAttributesIfNeeded:](self, "_updatePackedBadgeAttributesIfNeeded:", -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 0xFFFFFFF7 | (8 * (a3 & 1u)));
}

- (unsigned)editableDepthBadgeAttribute
{
  return (-[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") >> 4) & 1;
}

- (void)setEditableDepthBadgeAttribute:(unsigned __int8)a3
{
  -[PLManagedAsset _updatePackedBadgeAttributesIfNeeded:](self, "_updatePackedBadgeAttributesIfNeeded:", -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 0xFFFFFFEF | (16 * (a3 & 1u)));
}

- (unsigned)playbackControlBadgeAttribute
{
  return (-[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") >> 5) & 1;
}

- (void)setPlaybackControlBadgeAttribute:(unsigned __int8)a3
{
  -[PLManagedAsset _updatePackedBadgeAttributesIfNeeded:](self, "_updatePackedBadgeAttributesIfNeeded:", -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 0xFFFFFFDF | (32 * (a3 & 1u)));
}

- (unsigned)spatialAudioControlBadgeAttribute
{
  return (-[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") >> 6) & 1;
}

- (void)setSpatialAudioControlBadgeAttribute:(unsigned __int8)a3
{
  -[PLManagedAsset _updatePackedBadgeAttributesIfNeeded:](self, "_updatePackedBadgeAttributesIfNeeded:", -[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") & 0xFFFFFFBF | ((a3 & 1) << 6));
}

- (void)_updatePackedBadgeAttributesIfNeeded:(int)a3
{
  uint64_t v3;

  v3 = *(_QWORD *)&a3;
  if (-[PLManagedAsset packedBadgeAttributes](self, "packedBadgeAttributes") != a3)
    -[PLManagedAsset setPackedBadgeAttributes:](self, "setPackedBadgeAttributes:", v3);
}

- (BOOL)hasJustBeenShown
{
  void *v2;
  void *v3;
  BOOL v4;

  -[PLManagedAsset changedValues](self, "changedValues");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("visibilityState"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    v4 = objc_msgSend(v3, "shortValue") == 0;
  else
    v4 = 0;

  return v4;
}

- (BOOL)hasJustBeenHidden
{
  void *v2;
  void *v3;
  BOOL v4;

  -[PLManagedAsset changedValues](self, "changedValues");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("visibilityState"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    v4 = objc_msgSend(v3, "shortValue") != 0;
  else
    v4 = 0;

  return v4;
}

- (BOOL)hasUnrenderedAsyncAdjustments
{
  int v3;
  BOOL result;

  v3 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") - 1;
  result = 1;
  switch(v3)
  {
    case 0:
      if (!-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
        goto LABEL_4;
      result = 1;
      break;
    case 1:
    case 8:
      return result;
    case 9:
      result = -[PLManagedAsset hasAdjustments](self, "hasAdjustments");
      break;
    default:
LABEL_4:
      result = 0;
      break;
  }
  return result;
}

- (BOOL)hasNonSlomoAdjustments
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;

  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    v3 = (void *)MEMORY[0x1E0D75308];
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "unmanagedAdjustment");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "adjustmentFormatIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "unmanagedAdjustment");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "adjustmentFormatVersion");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v3, "isRecognizedSlowMotionFormatWithIdentifier:version:", v6, v9) ^ 1;

  }
  else
  {
    LOBYTE(v10) = 0;
  }
  return v10;
}

- (NSSet)libraryScopeContributors
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset libraryScopeAssetContributors](self, "libraryScopeAssetContributors");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithCapacity:", objc_msgSend(v2, "count"));
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v8), "participant", (_QWORD)v11);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "addObject:", v9);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

  return (NSSet *)v3;
}

- (void)setLibraryScopeContributors:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  uint64_t v23;
  void *v24;
  PLManagedAsset *v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = v4;
  v6 = (void *)objc_msgSend(v4, "mutableCopy");
  v25 = self;
  -[PLManagedAsset libraryScopeAssetContributors](self, "libraryScopeAssetContributors");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v7, "mutableCopy");

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v9 = (void *)objc_msgSend(v8, "copy");
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v32;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v32 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * i);
        objc_msgSend(v14, "participant");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v6, "containsObject:", v15);

        if (v16)
        {
          objc_msgSend(v14, "participant");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "removeObject:", v17);

        }
        else
        {
          objc_msgSend(v5, "deleteObject:", v14);
          objc_msgSend(v8, "removeObject:", v14);
        }
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
    }
    while (v11);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v18 = v6;
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v28;
    do
    {
      for (j = 0; j != v20; ++j)
      {
        if (*(_QWORD *)v28 != v21)
          objc_enumerationMutation(v18);
        v23 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * j);
        +[PLManagedObject insertInManagedObjectContext:](PLAssetContributor, "insertInManagedObjectContext:", v5);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "setParticipant:", v23);
        objc_msgSend(v8, "addObject:", v24);

      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
    }
    while (v20);
  }

  -[PLManagedAsset setLibraryScopeAssetContributors:](v25, "setLibraryScopeAssetContributors:", v8);
}

- (void)setLibraryScopeWithCurrentUserAsContributor:(id)a3
{
  void *v4;
  void *v5;
  id v6;

  v6 = a3;
  objc_msgSend(v6, "currentUserParticipant");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setLibraryScope:withContributors:](self, "setLibraryScope:withContributors:", v6, v5);

  }
  else
  {
    -[PLManagedAsset setLibraryScope:withContributors:](self, "setLibraryScope:withContributors:", v6, 0);
  }

}

- (void)setLibraryScope:(id)a3 withContributors:(id)a4
{
  id v6;

  v6 = a4;
  -[PLManagedAsset setLibraryScope:](self, "setLibraryScope:", a3);
  -[PLManagedAsset setLibraryScopeContributors:](self, "setLibraryScopeContributors:", v6);

}

- (void)removeLibraryScopeAndContributors
{
  -[PLManagedAsset setLibraryScope:](self, "setLibraryScope:", 0);
  -[PLManagedAsset setLibraryScopeContributors:](self, "setLibraryScopeContributors:", 0);
}

- (void)reportSharedAssetIncrementalChange:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *, void *);
  void *v21;
  id v22;
  id v23;

  v5 = a3;
  if (objc_msgSend(v5, "collectionChangeType"))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 7693, CFSTR("only supports private/shared transitions against the shared state or suggested-by-photos state for an asset being updated (not inserted or deleted)"));

  }
  -[PLManagedAsset moment](self, "moment");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "reportSharedAssetContainerIncrementalChange:forAllAssetsCountKey:", v5, CFSTR("assetsCount"));

  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithCapacity:", 6);
  v18 = MEMORY[0x1E0C809B0];
  v19 = 3221225472;
  v20 = __53__PLManagedAsset_reportSharedAssetIncrementalChange___block_invoke;
  v21 = &unk_1E3663A58;
  v22 = v5;
  v23 = v7;
  v8 = v7;
  v9 = v5;
  v10 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x19AEC174C](&v18);
  -[PLManagedAsset highlightBeingAssets](self, "highlightBeingAssets", v18, v19, v20, v21);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, const __CFString *))v10)[2](v10, v11, CFSTR("assetsCount"));

  -[PLManagedAsset highlightBeingSummaryAssets](self, "highlightBeingSummaryAssets");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, const __CFString *))v10)[2](v10, v12, CFSTR("summaryCount"));

  -[PLManagedAsset highlightBeingExtendedAssets](self, "highlightBeingExtendedAssets");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, const __CFString *))v10)[2](v10, v13, CFSTR("extendedCount"));

  -[PLManagedAsset dayGroupHighlightBeingAssets](self, "dayGroupHighlightBeingAssets");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, const __CFString *))v10)[2](v10, v14, CFSTR("dayGroupAssetsCount"));

  -[PLManagedAsset dayGroupHighlightBeingSummaryAssets](self, "dayGroupHighlightBeingSummaryAssets");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, const __CFString *))v10)[2](v10, v15, CFSTR("dayGroupSummaryAssetsCount"));

  -[PLManagedAsset dayGroupHighlightBeingExtendedAssets](self, "dayGroupHighlightBeingExtendedAssets");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, const __CFString *))v10)[2](v10, v16, CFSTR("dayGroupExtendedAssetsCount"));

}

- (BOOL)hasOutstandingDeferredCaptureProcessing
{
  int v2;

  v2 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
  return v2 == 6 || (v2 & 0xFFFFFFFB) == 1;
}

- (BOOL)hasDeferredProcessingPreviewFile
{
  int v2;

  v2 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
  return v2 == 10 || (v2 & 0xFFFFFFFB) == 1;
}

- (BOOL)isJPEG
{
  void *v2;
  void *v3;
  void *v4;
  char v5;

  v2 = (void *)MEMORY[0x1E0D752F0];
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "typeWithIdentifier:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqual:", *MEMORY[0x1E0CEC530]);

  return v5;
}

- (BOOL)isHEIF
{
  void *v2;
  void *v3;
  void *v4;
  char v5;

  v2 = (void *)MEMORY[0x1E0D752F0];
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "typeWithIdentifier:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC698]);

  return v5;
}

- (BOOL)isPrimaryImageFormat
{
  void *v3;
  void *v4;

  v3 = (void *)objc_opt_class();
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = objc_msgSend(v3, "isPrimaryImageFormatForUTI:", v4);

  return (char)v3;
}

- (BOOL)isRAW
{
  void *v2;
  void *v3;
  void *v4;
  char v5;

  v2 = (void *)MEMORY[0x1E0D752F0];
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "typeWithIdentifier:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC5B8]);

  return v5;
}

- (BOOL)isOriginalRAW
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;

  -[PLManagedAsset originalFilename](self, "originalFilename");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "pathExtension");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v4, -[PLManagedAsset kind](self, "kind"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "conformsToType:", *MEMORY[0x1E0CEC5B8]);

  return v7;
}

- (BOOL)isPartOfBurst
{
  return -[PLManagedAsset _isPartOfAvalancheWithKind:](self, "_isPartOfAvalancheWithKind:", 1);
}

- (BOOL)_isPartOfAvalancheWithKind:(unsigned __int16)a3
{
  int v3;
  void *v5;
  BOOL v6;
  BOOL v7;

  v3 = a3;
  if (-[PLManagedAsset avalancheKind](self, "avalancheKind") != a3)
    return 0;
  switch(v3)
  {
    case 2:
      -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v5 == 0;
      goto LABEL_10;
    case 1:
      -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v5)
      {
        v6 = 0;
        goto LABEL_15;
      }
      v7 = -[PLManagedAsset avalanchePickType](self, "avalanchePickType") == 0;
LABEL_10:
      v6 = !v7;
      goto LABEL_15;
    case 0:
      -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5 == 0;
LABEL_15:

      return v6;
  }
  return 1;
}

- (BOOL)isScreenRecording
{
  void *v4;
  BOOL v5;

  if (-[PLManagedAsset kindSubtype](self, "kindSubtype") == 103)
    return 1;
  if (-[PLManagedAsset kind](self, "kind") != 1)
    return 0;
  -[PLManagedAsset originalFilename](self, "originalFilename");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = +[PLManagedAsset isScreenRecordingFileName:](PLManagedAsset, "isScreenRecordingFileName:", v4);

  return v5;
}

- (void)setUniformTypeIdentifierFromPathExtension:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v4, -[PLManagedAsset kind](self, "kind"));
  v5 = (id)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v5);
}

- (void)setUniformTypeIdentifierFromOriginalFile
{
  id v3;

  -[PLManagedAsset nonDynamicOriginalUTI](self, "nonDynamicOriginalUTI");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v3);

}

- (id)nonDynamicOriginalUTI
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "path");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pathExtension");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (+[PLManagedAsset isKnownFileExtension:](PLManagedAsset, "isKnownFileExtension:", v5))
  {
    +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v5, -[PLManagedAsset kind](self, "kind"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (void)updateAssetKindAndPlaybackStyleIfNeededWithKind:(signed __int16)a3
{
  uint64_t v3;

  v3 = a3;
  if (-[PLManagedAsset kind](self, "kind") != a3)
  {
    -[PLManagedAsset setKind:](self, "setKind:", v3);
    if (!-[PLManagedAsset playbackVariation](self, "playbackVariation"))
      -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", objc_msgSend((id)objc_opt_class(), "defaultPlaybackStyleFromAssetType:subtype:playbackVariation:", v3, 0, -[PLManagedAsset playbackVariation](self, "playbackVariation")));
  }
}

- (void)updateAssetKindFromUniformTypeIdentifier
{
  void *v3;
  uint64_t v4;

  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = +[PLManagedAsset assetTypeFromUniformTypeIdentifier:](PLManagedAsset, "assetTypeFromUniformTypeIdentifier:", v3);

  -[PLManagedAsset updateAssetKindAndPlaybackStyleIfNeededWithKind:](self, "updateAssetKindAndPlaybackStyleIfNeededWithKind:", v4);
}

- (NSString)originalUniformTypeIdentifier
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  const __CFDictionary *v8;
  const __CFURL *v9;
  CGImageSource *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset master](self, "master");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    -[PLManagedAsset master](self, "master");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uniformTypeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    goto LABEL_9;
  }
  if (!-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_9:
    v7 = 0;
    if (!v5)
      goto LABEL_10;
    goto LABEL_13;
  }
  if (-[PLManagedAsset kind](self, "kind"))
    goto LABEL_11;
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v6 = objc_claimAutoreleasedReturnValue();
  if (!v6)
    goto LABEL_11;
  v7 = (void *)v6;
  v15 = *MEMORY[0x1E0CBD240];
  v16[0] = MEMORY[0x1E0C9AAA0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, &v15, 1);
  v8 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v7, 0);
  v9 = (const __CFURL *)objc_claimAutoreleasedReturnValue();
  v10 = CGImageSourceCreateWithURL(v9, v8);

  if (v10)
  {
    CGImageSourceGetType(v10);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    CFRelease(v10);
  }
  else
  {
    v5 = 0;
  }

  if (!v5)
  {
LABEL_10:
    if (v7)
    {
LABEL_12:
      v11 = (void *)MEMORY[0x1E0D752F0];
      objc_msgSend(v7, "pathExtension");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "typeWithFilenameExtension:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "identifier");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_13;
    }
LABEL_11:
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_12;
  }
LABEL_13:

  return (NSString *)v5;
}

- (id)originalVideoComplementUniformTypeIdentifier
{
  void *v4;
  int v5;
  _BOOL4 v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v16;
  id v17;

  if (!-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 8015, CFSTR("Requires a live photo asset but type/subtype are %d/%d"), (int)-[PLManagedAsset kind](self, "kind"), (int)-[PLManagedAsset kindSubtype](self, "kindSubtype"));

  }
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isCloudPhotoLibraryEnabled");

  if (v5)
  {
    v17 = 0;
    v6 = -[PLManagedAsset _isResourceAvailableForResourceType:outResource:](self, "_isResourceAvailableForResourceType:outResource:", 18, &v17);
    v7 = v17;
    v8 = v7;
    v9 = 0;
    if (v6)
    {
      objc_msgSend(v7, "uniformTypeIdentifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "identifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v11 = (void *)MEMORY[0x1E0D752F0];
    -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "pathExtension");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "typeWithFilenameExtension:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "identifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v9;
}

- (BOOL)couldBeStoredInDCIM
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForCouldBeStoredInDCIM");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isSavedPhotosAsset
{
  void *v3;
  char v4;
  BOOL v5;
  void *v6;
  void *v7;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if ((v4 & 1) != 0)
    return 1;
  pl_dispatch_once();
  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "path");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
    v5 = objc_msgSend((id)isSavedPhotosAsset_savedPhotosDirectoryRegEx, "numberOfMatchesInString:options:range:", v7, 0, 0, objc_msgSend(v7, "length")) == 1;
  else
    v5 = 1;

  return v5;
}

- (id)pathForMutationsDirectory
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset directory](self, "directory");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset filename](self, "filename");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "assetPathForMutationsDirectoryWithDirectory:filename:", v3, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (NSString)pathForAdjustmentDirectory
{
  void *v2;
  void *v3;

  -[PLManagedAsset pathForMutationsDirectory](self, "pathForMutationsDirectory");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset pathForAdjustmentDirectoryWithMutationsDirectory:](PLManagedAsset, "pathForAdjustmentDirectoryWithMutationsDirectory:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (NSString)pathForComputeDirectory
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset directory](self, "directory");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset filename](self, "filename");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "assetPathForComputeDirectoryWithDirectory:filename:", v3, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v6;
}

- (NSSet)filePathsWithoutThumbs
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset sidecars](self, "sidecars");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v3, "count") + 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    objc_msgSend(v4, "addObject:", v5);
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v16;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v16 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v10), "fileURL", (_QWORD)v15);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = v11;
        if (v11)
        {
          objc_msgSend(v11, "path");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "addObject:", v13);

        }
        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v8);
  }

  return (NSSet *)v4;
}

- (NSSet)allFileURLs
{
  void *v3;
  void *v4;
  id v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  unsigned int v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  int v34;
  NSObject *v35;
  void *v36;
  void *v37;
  int v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  int v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  NSSet *v68;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _QWORD v74[4];
  id v75;
  uint8_t buf[4];
  void *v77;
  __int16 v78;
  void *v79;
  _BYTE v80[128];
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset sidecars](self, "sidecars");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v3, "count") + 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v74[0] = MEMORY[0x1E0C809B0];
  v74[1] = 3221225472;
  v74[2] = __29__PLManagedAsset_allFileURLs__block_invoke;
  v74[3] = &unk_1E3663AC0;
  v5 = v4;
  v75 = v5;
  v6 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x19AEC174C](v74);
  if (!-[PLManagedAsset isReferencedAsset](self, "isReferencedAsset"))
  {
    -[PLManagedAsset filename](self, "filename");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "length");

    if (v8)
    {
      -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v9, 0);

    }
    v72 = 0u;
    v73 = 0u;
    v70 = 0u;
    v71 = 0u;
    v10 = v3;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v70, v80, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v71;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v71 != v13)
            objc_enumerationMutation(v10);
          objc_msgSend(*(id *)(*((_QWORD *)&v70 + 1) + 8 * v14), "fileURL", (_QWORD)v70);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (v15)
            objc_msgSend(v5, "addObject:", v15);

          ++v14;
        }
        while (v12 != v14);
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v70, v80, 16);
      }
      while (v12);
    }

    -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v16, 0);

    -[PLManagedAsset pathForSpatialOverCaptureContentFile](self, "pathForSpatialOverCaptureContentFile");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v17, 0);

    -[PLManagedAsset pathForVideoComplementSpatialOverCaptureContentFile](self, "pathForVideoComplementSpatialOverCaptureContentFile");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v18, 0);

    -[PLManagedAsset pathForOriginalAdjustmentFile](self, "pathForOriginalAdjustmentFile");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v19, 0);

  }
  -[PLManagedAsset fileURLForNonAdjustedMediumThumbnailFile](self, "fileURLForNonAdjustedMediumThumbnailFile", (_QWORD)v70);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pl_addObjectIfNotNil:", v20);

  -[PLManagedAsset fileURLForNonAdjustedLargeThumbnailFile](self, "fileURLForNonAdjustedLargeThumbnailFile");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pl_addObjectIfNotNil:", v21);

  -[PLManagedAsset pathForNonAdjustedLargeSizeImageFile](self, "pathForNonAdjustedLargeSizeImageFile");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v22, 0);

  -[PLManagedAsset pathForNonAdjustedFullsizeImageFile](self, "pathForNonAdjustedFullsizeImageFile");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v23, 0);

  if (-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
  {
    v24 = 3;
    do
    {
      -[PLManagedAsset cloudSharedAssetPathForPlaceholderKind:](self, "cloudSharedAssetPathForPlaceholderKind:", (__int16)v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = (unsigned __int16)v24;
      ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v25, 0);

      ++v24;
    }
    while (v26 < 9);
  }
  -[PLManagedAsset pathForNonAdjustedMediumVideoFile](self, "pathForNonAdjustedMediumVideoFile");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v27, 0);

  -[PLManagedAsset pathForNonAdjustedMediumHDRVideoFile](self, "pathForNonAdjustedMediumHDRVideoFile");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v28, 0);

  -[PLManagedAsset pathForNonAdjustedSmallVideoFile](self, "pathForNonAdjustedSmallVideoFile");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v29, 0);

  -[PLManagedAsset fileURLForThumbnailFile](self, "fileURLForThumbnailFile");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pl_addObjectIfNotNil:", v30);

  -[PLManagedAsset pathForMutationsDirectory](self, "pathForMutationsDirectory");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  if (v31)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "photoDirectoryWithType:", 9);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v33, "hasPrefix:", v31);

    if (v34)
    {
      PLBackendGetLog();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v77 = v36;
        v78 = 2112;
        v79 = v31;
        _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_ERROR, "Asset %{public}@ has incorrect mutation directory %@, skip removing the directory.", buf, 0x16u);

      }
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v31, 1);
      v35 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "pl_addObjectIfNotNil:", v35);
    }

  }
  -[PLManagedObject pathManager](self, "pathManager");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = objc_msgSend(v37, "isUBF");

  if (v38 && -[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    -[PLManagedAsset adjustedFileURLs](self, "adjustedFileURLs");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "unionSet:", v39);

  }
  -[PLManagedAsset pathForLegacySlalomRegionsArchive](self, "pathForLegacySlalomRegionsArchive");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v40, 0);

  -[PLManagedAsset pathForDiagnosticFile](self, "pathForDiagnosticFile");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v41, 0);

  -[PLManagedAsset pathForDeferredProcessingPreviewFile](self, "pathForDeferredProcessingPreviewFile");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v42, 0);

  -[PLManagedAsset pathForCameraMetadataFile](self, "pathForCameraMetadataFile");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v43, 0);

  -[PLManagedAsset pathForDeferredVideoComplementFile](self, "pathForDeferredVideoComplementFile");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v44, 0);

  -[PLManagedAsset pathForSpatialOverCaptureDiagnosticFile](self, "pathForSpatialOverCaptureDiagnosticFile");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v45, 0);

  -[PLManagedAsset pathForReframeDiagnosticDirectory](self, "pathForReframeDiagnosticDirectory");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, uint64_t))v6)[2](v6, v46, 1);

  -[PLManagedAsset pathForCameraMetadataDiagnosticFile](self, "pathForCameraMetadataDiagnosticFile");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v47, 0);

  -[PLManagedAsset pathForCameraSpatialOverCaptureMetadataDiagnosticFile](self, "pathForCameraSpatialOverCaptureMetadataDiagnosticFile");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v48, 0);

  -[PLManagedAsset pathForOriginalVideoComplementDiagnosticFile](self, "pathForOriginalVideoComplementDiagnosticFile");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v49, 0);

  -[PLManagedObject pathManager](self, "pathManager");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = objc_msgSend(v50, "isDCIM");

  if (v51 && -[PLManagedAsset isFinderSyncedAsset](self, "isFinderSyncedAsset"))
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "iTunesSyncedFaceDataDirectory");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset uuid](self, "uuid");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "stringByAppendingPathComponent:", v54);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "stringByAppendingPathExtension:", CFSTR("plist"));
    v56 = (void *)objc_claimAutoreleasedReturnValue();

    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v56, 0);
  }
  -[PLManagedAsset pathForLocalVideoKeyFrame](self, "pathForLocalVideoKeyFrame");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v57, 0);

  -[PLManagedObject pathManager](self, "pathManager");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset uuid](self, "uuid");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v58, "URLForPartialVideoDirectoryWithAssetUUID:", v59);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v60, "path");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, uint64_t))v6)[2](v6, v61, 1);

  -[PLManagedAsset pathForWallpaperComputeResourcesFile](self, "pathForWallpaperComputeResourcesFile");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v62, 0);

  -[PLManagedAsset pathForComputeSyncWrapperFile](self, "pathForComputeSyncWrapperFile");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v63, 0);

  -[PLManagedAsset pathForComputeSyncMediaAnalysisPayloadFile](self, "pathForComputeSyncMediaAnalysisPayloadFile");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v64, 0);

  -[PLManagedAsset pathForGenerativePlaygroundFaceResourcesFile](self, "pathForGenerativePlaygroundFaceResourcesFile");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v65, 0);

  -[PLManagedObject pathManager](self, "pathManager");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v59) = objc_msgSend(v66, "isDCIM");

  if ((_DWORD)v59)
  {
    -[PLManagedAsset pathForComputeDirectory](self, "pathForComputeDirectory");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, uint64_t))v6)[2](v6, v67, 1);

  }
  v68 = (NSSet *)v5;

  return v68;
}

- (id)adjustedFileURLs
{
  void *v3;
  id v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v24[4];
  id v25;

  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __34__PLManagedAsset_adjustedFileURLs__block_invoke;
  v24[3] = &unk_1E3663AC0;
  v4 = v3;
  v25 = v4;
  v5 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x19AEC174C](v24);
  -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v6, 0);

  -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v7, 0);

  -[PLManagedAsset pathForSubstandardFullsizeRenderImageFile](self, "pathForSubstandardFullsizeRenderImageFile");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v8, 0);

  -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v9, 0);

  -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v10, 0);

  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v11, 0);

  -[PLManagedAsset pathForAdjustmentDataFile](self, "pathForAdjustmentDataFile");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v12, 0);

  -[PLManagedAsset pathForAdjustedLargeSizeImageFile](self, "pathForAdjustedLargeSizeImageFile");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v13, 0);

  -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](self, "pathForAsyncAdjustedRenderPreviewImageFile");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v14, 0);

  -[PLManagedAsset fileURLForAdjustedLargeThumbnailFile](self, "fileURLForAdjustedLargeThumbnailFile");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v15);

  -[PLManagedAsset fileURLForAdjustedMediumThumbnailFile](self, "fileURLForAdjustedMediumThumbnailFile");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v16);

  -[PLManagedAsset pathForAdjustedLargeVideoFile](self, "pathForAdjustedLargeVideoFile");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v17, 0);

  -[PLManagedAsset pathForAdjustedMediumVideoFile](self, "pathForAdjustedMediumVideoFile");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v18, 0);

  -[PLManagedAsset pathForAdjustedMediumHDRVideoFile](self, "pathForAdjustedMediumHDRVideoFile");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v19, 0);

  -[PLManagedAsset pathForAdjustedSmallVideoFile](self, "pathForAdjustedSmallVideoFile");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v20, 0);

  -[PLManagedAsset pathForAdjustmentSecondaryDataFile](self, "pathForAdjustmentSecondaryDataFile");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v21, 0);

  v22 = v4;
  return v22;
}

- (id)unadjustedDerivativeImageURLs
{
  void *v3;
  id v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[4];
  id v14;

  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __47__PLManagedAsset_unadjustedDerivativeImageURLs__block_invoke;
  v13[3] = &unk_1E3663AC0;
  v4 = v3;
  v14 = v4;
  v5 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x19AEC174C](v13);
  -[PLManagedAsset masterThumbnailFileURLIfLocal](self, "masterThumbnailFileURLIfLocal");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v6);

  -[PLManagedAsset fileURLForNonAdjustedMediumThumbnailFile](self, "fileURLForNonAdjustedMediumThumbnailFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v7);

  -[PLManagedAsset fileURLForNonAdjustedLargeThumbnailFile](self, "fileURLForNonAdjustedLargeThumbnailFile");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v8);

  -[PLManagedAsset pathForNonAdjustedLargeSizeImageFile](self, "pathForNonAdjustedLargeSizeImageFile");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v9, 0);

  -[PLManagedAsset pathForNonAdjustedFullsizeImageFile](self, "pathForNonAdjustedFullsizeImageFile");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *, _QWORD))v5)[2](v5, v10, 0);

  v11 = v4;
  return v11;
}

- (BOOL)shouldUseNonAdjustedVideo
{
  char v3;
  _QWORD v5[5];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v9 = 0;
  v9 = !-[PLManagedAsset hasAdjustments](self, "hasAdjustments");
  if (!*((_BYTE *)v7 + 24) && -[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo"))
  {
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __43__PLManagedAsset_shouldUseNonAdjustedVideo__block_invoke;
    v5[3] = &unk_1E366F028;
    v5[4] = &v6;
    -[PLManagedAsset synchronouslyFetchAdjustmentDataWithCompletionHandler:](self, "synchronouslyFetchAdjustmentDataWithCompletionHandler:", v5);
  }
  if (!*((_BYTE *)v7 + 24)
    && -[PLManagedAsset isPhotoIris](self, "isPhotoIris")
    && -[PLManagedAsset hasAdjustments](self, "hasAdjustments")
    && -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState") == 2
    && !-[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded"))
  {
    *((_BYTE *)v7 + 24) = 1;
  }
  v3 = *((_BYTE *)v7 + 24);
  _Block_object_dispose(&v6, 8);
  return v3;
}

- (BOOL)_isMasterResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4
{
  void *v7;
  void *v8;

  -[PLManagedAsset master](self, "master");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    v8 = 0;
    if (!a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", a3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4)
LABEL_3:
    *a4 = objc_retainAutorelease(v8);
LABEL_4:

  return v8 != 0;
}

- (BOOL)_isMasterResourceAvailableForResourceType:(unint64_t)a3
{
  return -[PLManagedAsset _isMasterResourceAvailableForResourceType:outResource:](self, "_isMasterResourceAvailableForResourceType:outResource:", a3, 0);
}

- (BOOL)_isAdjustedResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4
{
  void *v5;
  void *v6;

  -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (a4)
    *a4 = objc_retainAutorelease(v5);

  return v6 != 0;
}

- (BOOL)_isAdjustedResourceAvailableForResourceType:(unint64_t)a3
{
  return -[PLManagedAsset _isAdjustedResourceAvailableForResourceType:outResource:](self, "_isAdjustedResourceAvailableForResourceType:outResource:", a3, 0);
}

- (BOOL)_isResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4
{
  return -[PLManagedAsset _isAdjustedResourceAvailableForResourceType:outResource:](self, "_isAdjustedResourceAvailableForResourceType:outResource:")|| -[PLManagedAsset _isMasterResourceAvailableForResourceType:outResource:](self, "_isMasterResourceAvailableForResourceType:outResource:", a3, a4);
}

- (BOOL)isResourceAvailableForResourceType:(unint64_t)a3
{
  return -[PLManagedAsset _isResourceAvailableForResourceType:outResource:](self, "_isResourceAvailableForResourceType:outResource:", a3, 0);
}

- (id)_availableCloudResourcesForPhotosRequireUnadjusted:(BOOL)a3 allowPenultimate:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  uint64_t v13;
  BOOL v14;
  id v15;
  _BOOL4 v16;
  _BOOL4 v19;
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v19 = a4;
  v4 = a3;
  v27 = *MEMORY[0x1E0C80C00];
  if (_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__onceToken != -1)
    dispatch_once(&_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__onceToken, &__block_literal_global_673);
  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v7 = (id)_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__photoTypes;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * i);
        v13 = objc_msgSend(v12, "integerValue");
        if (v4)
        {
          v21 = 0;
          v14 = -[PLManagedAsset _isMasterResourceAvailableForResourceType:outResource:](self, "_isMasterResourceAvailableForResourceType:outResource:", v13, &v21);
          v15 = v21;
          if (v14)
            goto LABEL_16;
        }
        else
        {
          v20 = 0;
          v16 = -[PLManagedAsset _isAdjustedResourceAvailableForResourceType:outResource:](self, "_isAdjustedResourceAvailableForResourceType:outResource:", v13, &v20);
          v15 = v20;
          if (v16 && (objc_msgSend(v12, "integerValue") != 15 || v19))
LABEL_16:
            objc_msgSend(v6, "addObject:", v15);
        }

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v9);
  }

  return v6;
}

- (id)availableAdjustedCloudResourcesForPhotos:(BOOL)a3
{
  return -[PLManagedAsset _availableCloudResourcesForPhotosRequireUnadjusted:allowPenultimate:](self, "_availableCloudResourcesForPhotosRequireUnadjusted:allowPenultimate:", 0, a3);
}

- (id)availableUnadjustedCloudResourcesForPhotos
{
  return -[PLManagedAsset _availableCloudResourcesForPhotosRequireUnadjusted:allowPenultimate:](self, "_availableCloudResourcesForPhotosRequireUnadjusted:allowPenultimate:", 1, 0);
}

- (void)revertToOriginal
{
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  PLBackendGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = 138543362;
    v7 = v4;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_INFO, "Reverting to original for asset %{public}@", (uint8_t *)&v6, 0xCu);

  }
  +[PLAssetAdjustmentOptions assetAdjustmentOptionsForRevertingToOriginal](PLAssetAdjustmentOptions, "assetAdjustmentOptionsForRevertingToOriginal");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setAdjustments:options:](self, "setAdjustments:options:", 0, v5);

}

- (BOOL)hasAdjustments
{
  return -[PLManagedAsset adjustmentsState](self, "adjustmentsState") != 0;
}

- (int64_t)_prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:(int64_t)a3 penultimateRenderedJPEGData:(id)a4 penultimateRenderedVideoContentURL:(id)a5 penultimateRenderedVideoComplementContentURL:(id)a6 fileIngestionType:(int64_t)a7
{
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  _BOOL4 v14;
  __CFString *v15;
  NSObject *v16;
  __CFString *v17;
  void *v18;
  NSObject *v19;
  __CFString *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  __CFString *v25;
  __CFString *v26;
  const __CFString *v27;
  uint64_t v28;
  void *v29;
  const __CFString *v30;
  void *v31;
  char v32;
  __CFString *v33;
  NSObject *v34;
  NSObject *v35;
  __CFString *v36;
  const char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint32_t v40;
  void *v41;
  void *v42;
  __CFString *v43;
  char v44;
  NSObject *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  NSObject *v53;
  __CFString *v54;
  __CFString *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  NSObject *v60;
  __CFString *v61;
  void *v62;
  void *v63;
  NSObject *v64;
  _BOOL4 v65;
  void *v66;
  uint64_t v67;
  NSObject *v68;
  void *v70;
  void *v71;
  __CFString *v72;
  void *v74;
  void *context;
  __CFString *v76;
  void *v77;
  __CFString *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint8_t buf[4];
  __CFString *v86;
  __int16 v87;
  const __CFString *v88;
  __int16 v89;
  uint64_t v90;
  __int16 v91;
  __CFString *v92;
  __int16 v93;
  const __CFString *v94;
  __int16 v95;
  __CFString *v96;
  __int16 v97;
  __CFString *v98;
  uint64_t v99;

  v99 = *MEMORY[0x1E0C80C00];
  v11 = (__CFString *)a4;
  v12 = (__CFString *)a5;
  v13 = (__CFString *)a6;
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
  else
    -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
  v78 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
  else
    -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
  v76 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v14 = -[PLManagedAsset isVideo](self, "isVideo");
  if (a3 != 2)
  {
    if (a3 != 1)
      goto LABEL_22;
    v15 = v14 ? v12 : v11;
    if ((objc_msgSend(v77, "fileExistsAtPath:", v76) & 1) != 0 || v15)
      goto LABEL_22;
    PLPhotoEditGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      PLAdjustmentBaseVersionDescription();
      v17 = (__CFString *)objc_claimAutoreleasedReturnValue();
      PLAdjustmentBaseVersionDescription();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v86 = v17;
      v87 = 2112;
      v88 = v76;
      v89 = 2112;
      v90 = (uint64_t)v18;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "[RM] Base version is %@ but no file exists at %@, defaulting to %@", buf, 0x20u);

    }
  }
  if ((objc_msgSend(v77, "fileExistsAtPath:", v78) & 1) != 0)
  {
    a3 = 2;
  }
  else
  {
    PLPhotoEditGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      PLAdjustmentBaseVersionDescription();
      v20 = (__CFString *)objc_claimAutoreleasedReturnValue();
      PLAdjustmentBaseVersionDescription();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v86 = v20;
      v87 = 2112;
      v88 = v78;
      v89 = 2112;
      v90 = (uint64_t)v21;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "[RM] Base version is %@ but no file exists at %@, defaulting to %@", buf, 0x20u);

    }
    a3 = 0;
  }
LABEL_22:
  -[PLManagedObject pathManager](self, "pathManager");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "capabilities");
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  PLPhotoEditGetLog();
  v24 = objc_claimAutoreleasedReturnValue();
  v25 = v13;
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v26 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    {
      if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
        v27 = CFSTR("live photo");
      else
        v27 = CFSTR("photo");
    }
    else
    {
      v27 = CFSTR("video");
    }
    PLAdjustmentBaseVersionDescription();
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = (void *)v28;
    *(_DWORD *)buf = 138544898;
    v30 = CFSTR("YES");
    v86 = v26;
    if (!v11)
      v30 = CFSTR("NO");
    v87 = 2112;
    v88 = v27;
    v89 = 2112;
    v90 = v28;
    v91 = 2112;
    v92 = v78;
    v93 = 2112;
    v94 = v30;
    v95 = 2112;
    v96 = v12;
    v97 = 2112;
    v25 = v13;
    v98 = v13;
    _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "[RM] Preparing resources for adjustment for asset %{public}@ (%@) with base version %@ fullSizeRenderFile: %@ penultimate data: %@ penultimateRenderedVideoContentURL: %@ penultimateRenderedVideoComplementContentURL: %@", buf, 0x48u);

  }
  if (!-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    v41 = (void *)MEMORY[0x1E0C99E98];
    -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "fileURLWithPath:isDirectory:", v42, 0);
    v43 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (v12)
    {
      v80 = 0;
      v44 = objc_msgSend(MEMORY[0x1E0D73208], "ingestItemAtURL:toURL:type:options:capabilities:error:", v12, v43, a7, 6, v23, &v80);
      v33 = (__CFString *)v80;
      if ((v44 & 1) == 0)
      {
        PLPhotoEditGetLog();
        v45 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412802;
          v86 = v12;
          v87 = 2112;
          v88 = v43;
          v89 = 2112;
          v90 = (uint64_t)v33;
          _os_log_impl(&dword_199541000, v45, OS_LOG_TYPE_ERROR, "Failed to ingest penultimateRenderedVideoContentURL %@ to %@: %@", buf, 0x20u);
        }
LABEL_70:

      }
LABEL_72:

LABEL_73:
      goto LABEL_74;
    }
    if ((a3 | 2) != 2
      || (-[PLManagedAsset _cleanupPenultimateResources](self, "_cleanupPenultimateResources"), a3 != 2))
    {
      v33 = 0;
      goto LABEL_72;
    }
    v62 = (void *)MEMORY[0x1E0D73208];
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v78, 0);
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    v79 = 0;
    LOBYTE(v62) = objc_msgSend(v62, "ingestItemAtURL:toURL:type:options:capabilities:error:", v63, v43, 3, 2, v23, &v79);
    v33 = (__CFString *)v79;

    if ((v62 & 1) == 0)
    {
      PLPhotoEditGetLog();
      v64 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        v86 = v78;
        v87 = 2112;
        v88 = v43;
        v89 = 2112;
        v90 = (uint64_t)v33;
        _os_log_impl(&dword_199541000, v64, OS_LOG_TYPE_ERROR, "Failed to ingest pathForFullsizeRenderFile %@ to %@: %@", buf, 0x20u);
      }

    }
    -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 16);
LABEL_60:
    a3 = 1;
    goto LABEL_72;
  }
  if (v11)
  {
    -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v84 = 0;
    v32 = -[__CFString writeToFile:options:error:](v11, "writeToFile:options:error:", v31, 1073741825, &v84);
    v33 = (__CFString *)v84;

    PLPhotoEditGetLog();
    v34 = objc_claimAutoreleasedReturnValue();
    v35 = v34;
    if ((v32 & 1) != 0)
    {
      if (!os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        goto LABEL_64;
      -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
      v36 = (__CFString *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v86 = v36;
      v37 = "Written penultimateFullsizeRenderImage to %@";
      v38 = v35;
      v39 = OS_LOG_TYPE_DEFAULT;
      v40 = 12;
    }
    else
    {
      if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
        goto LABEL_64;
      -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
      v36 = (__CFString *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v86 = v36;
      v87 = 2112;
      v88 = v33;
      v37 = "Failed to write penultimateFullsizeRenderImage %@: %@";
      v38 = v35;
      v39 = OS_LOG_TYPE_ERROR;
      v40 = 22;
    }
    _os_log_impl(&dword_199541000, v38, v39, v37, buf, v40);

LABEL_64:
    v65 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
    if (!v25 || !v65)
      goto LABEL_73;
    v66 = (void *)MEMORY[0x1E0C99E98];
    -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
    v67 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "fileURLWithPath:isDirectory:", v67, 0);
    v43 = (__CFString *)objc_claimAutoreleasedReturnValue();

    v83 = 0;
    LOBYTE(v67) = objc_msgSend(MEMORY[0x1E0D73208], "ingestItemAtURL:toURL:type:options:capabilities:error:", v25, v43, a7, 6, v23, &v83);
    v45 = v83;
    if ((v67 & 1) == 0)
    {
      PLPhotoEditGetLog();
      v68 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        v86 = v25;
        v87 = 2112;
        v88 = v43;
        v89 = 2112;
        v90 = (uint64_t)v45;
        _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_ERROR, "Failed to ingest penultimateRenderedVideoComplementContentURL %@ to penultimateRenderedVideoComplementURL %@: %@", buf, 0x20u);
      }

    }
    goto LABEL_70;
  }
  if ((a3 | 2) == 2)
  {
    -[PLManagedAsset _cleanupPenultimateResources](self, "_cleanupPenultimateResources");
    if (a3 == 2)
    {
      -[__CFString pathExtension](v78, "pathExtension");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v46, 0);
      v43 = (__CFString *)objc_claimAutoreleasedReturnValue();

      v47 = (void *)MEMORY[0x1E0C99E98];
      -[PLManagedAsset pathForPenultimateFullsizeRenderImageFileWithUTI:](self, "pathForPenultimateFullsizeRenderImageFileWithUTI:", v43);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v47, "fileURLWithPath:isDirectory:", v48, 0);
      v49 = objc_claimAutoreleasedReturnValue();

      v50 = (void *)MEMORY[0x1E0D73208];
      v51 = (void *)v49;
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v78, 0);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      v82 = 0;
      v74 = v51;
      LOBYTE(v50) = objc_msgSend(v50, "ingestItemAtURL:toURL:type:options:capabilities:error:", v52, v51, 3, 2, v23, &v82);
      v33 = (__CFString *)v82;

      if ((v50 & 1) == 0)
      {
        PLPhotoEditGetLog();
        v53 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
          v54 = (__CFString *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v86 = v78;
          v87 = 2112;
          v88 = v54;
          v89 = 2112;
          v90 = (uint64_t)v33;
          _os_log_impl(&dword_199541000, v53, OS_LOG_TYPE_DEFAULT, "Failed to ingest pathForFullsizeRenderFile %@ to pathForPenultimateFullsizeRenderImageFile %@: %@", buf, 0x20u);

        }
      }
      -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 2);
      -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
      v55 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v77, "fileExistsAtPath:", v55))
      {
        v71 = (void *)MEMORY[0x1E0D73208];
        v72 = v55;
        objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v55, 0);
        v70 = (void *)objc_claimAutoreleasedReturnValue();
        v56 = (void *)MEMORY[0x1E0C99E98];
        -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
        v57 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v56, "fileURLWithPath:isDirectory:", v57, 0);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        v81 = 0;
        LOBYTE(v71) = objc_msgSend(v71, "ingestItemAtURL:toURL:type:options:capabilities:error:", v70, v58, 3, 2, v23, &v81);
        v59 = v81;

        if ((v71 & 1) == 0)
        {
          PLPhotoEditGetLog();
          v60 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
          {
            -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
            v61 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412802;
            v86 = v72;
            v87 = 2112;
            v88 = v61;
            v89 = 2112;
            v90 = (uint64_t)v59;
            _os_log_impl(&dword_199541000, v60, OS_LOG_TYPE_DEFAULT, "Failed to ingest pathForFullsizeRenderVideoFile %@ to pathForPenultimateFullsizeRenderVideoFile %@: %@", buf, 0x20u);

          }
        }
        -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 16);

        v55 = v72;
      }

      goto LABEL_60;
    }
  }
LABEL_74:

  objc_autoreleasePoolPop(context);
  return a3;
}

- (void)updateAssetAdjustmentsStateIfNeededFromAdjustmentFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  if (-[PLManagedAsset _isCameraAutoAdjustmentChecksNeededAndUpdateAsset](self, "_isCameraAutoAdjustmentChecksNeededAndUpdateAsset"))
  {
    -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
    v7 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D750B0]), "initWithURL:", v3);
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "unmanagedAdjustment");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v6, "updateRenderTypeFlagsForAssetAdjustments:checkFlag:settingPayload:", v4, 1, 0))
    {
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", objc_msgSend(v6, "adjustmentRenderTypes"));
      -[PLManagedAsset updateAdjustmentFileWithAdjustmentRenderTypes:](self, "updateAdjustmentFileWithAdjustmentRenderTypes:", objc_msgSend(v6, "adjustmentRenderTypes"));
    }
    else if (-[PLManagedAsset adjustmentsState](self, "adjustmentsState") <= 1)
    {
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", objc_msgSend(v6, "adjustmentRenderTypes"));
    }

  }
}

- (void)updateAssetSleetCastIfNeededFromAdjustmentFile
{
  void *v3;
  void *v4;
  PLMutableAssetAdjustmentOptions *v5;
  void *v6;
  void *v7;
  id v8;

  if (!-[PLManagedAsset currentSleetCast](self, "currentSleetCast"))
  {
    -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v8, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D750B0]), "initWithURL:", v3);
    v5 = objc_alloc_init(PLMutableAssetAdjustmentOptions);
    -[PLMutableAssetAdjustmentOptions setSkipCheckCameraAutoAdjustment:](v5, "setSkipCheckCameraAutoAdjustment:", 1);
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "unmanagedAdjustment");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset _updateAdjustmentFromAssetAdjustment:unmanagedAdjustment:fullSizeRenderURL:options:](self, "_updateAdjustmentFromAssetAdjustment:unmanagedAdjustment:fullSizeRenderURL:options:", v4, v7, 0, v5);
  }
}

- (void)setAssetAdjustmentsStateFromAdjustmentRenderType:(unsigned int)a3
{
  __int16 v3;
  int v5;
  uint64_t v6;

  v3 = a3;
  v5 = -[PLManagedAsset adjustmentsState](self, "adjustmentsState");
  if ((v3 & 0x2000) != 0)
  {
    if (v5 != 3)
    {
      v6 = 3;
      goto LABEL_7;
    }
  }
  else if (v5 != 2)
  {
    v6 = 2;
LABEL_7:
    -[PLManagedAsset setAdjustmentsState:](self, "setAdjustmentsState:", v6);
  }
}

- (BOOL)_isCameraAutoAdjustmentChecksNeededAndUpdateAsset
{
  void *v3;
  void *v4;
  void *v5;
  BOOL v6;

  if (-[PLManagedAsset adjustmentsState](self, "adjustmentsState") == 3)
    return 0;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "unmanagedAdjustment");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    if (-[PLManagedAsset adjustmentsState](self, "adjustmentsState"))
      -[PLManagedAsset setAdjustmentsState:](self, "setAdjustmentsState:", 0);
    return 0;
  }
  objc_msgSend(v4, "adjustmentFormatVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "compare:options:", *MEMORY[0x1E0D765C8], 64) < 0
    || -[PLManagedAsset adjustmentsState](self, "adjustmentsState") == 1;

  return v6;
}

- (void)_updateAdjustmentFromAssetAdjustment:(id)a3 unmanagedAdjustment:(id)a4 fullSizeRenderURL:(id)a5 options:(id)a6
{
  id v10;
  id v11;
  id v12;
  _BOOL4 v13;
  BOOL v14;
  uint64_t v15;
  id v16;
  int v17;
  uint64_t v18;
  void *v19;
  id v20;

  v20 = a4;
  v10 = a5;
  v11 = a6;
  v12 = a3;
  v13 = -[PLManagedAsset isPhoto](self, "isPhoto");
  v14 = v13;
  if (v13)
    v15 = 2;
  else
    v15 = 0;
  if (a3
    && objc_msgSend(v11, "shouldCheckForLegacyCameraAutoAdjustment")
    && (objc_msgSend(v11, "skipCheckCameraAutoAdjustment") & 1) == 0)
  {
    if (-[PLManagedAsset _isCameraAutoAdjustmentChecksNeededAndUpdateAsset](self, "_isCameraAutoAdjustmentChecksNeededAndUpdateAsset"))
    {
      v15 = v15 | 1;
    }
    else if ((objc_msgSend(v20, "adjustmentRenderTypes") & 0x4000) == 0)
    {
      objc_msgSend(v20, "setAdjustmentRenderTypes:", objc_msgSend(v20, "adjustmentRenderTypes") | 0x4000);
    }
  }
  v16 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v17 = objc_msgSend(v20, "updateRenderTypeFlagsForAssetAdjustments:checkFlag:settingPayload:", v12, v15, v16);

  if (!a3)
  {
    if (!v14)
      goto LABEL_29;
    goto LABEL_22;
  }
  if ((objc_msgSend(v11, "skipCheckCameraAutoAdjustment") & 1) == 0)
  {
    if (v17)
    {
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", objc_msgSend(v20, "adjustmentRenderTypes"));
    }
    else if ((objc_msgSend(v11, "shouldCheckForLegacyCameraAutoAdjustment") & 1) == 0
           && (objc_msgSend(v20, "adjustmentRenderTypes") & 0x4000) == 0)
    {
      objc_msgSend(v20, "setAdjustmentRenderTypes:", objc_msgSend(v20, "adjustmentRenderTypes") | 0x4000);
    }
  }
  if (v14)
  {
    if ((objc_msgSend(v20, "adjustmentRenderTypes") & 0x8000) != 0)
    {
      objc_msgSend(v16, "objectForKeyedSubscript:", *MEMORY[0x1E0D75368]);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setCurrentSleetCast:](self, "setCurrentSleetCast:", objc_msgSend(v19, "shortValue"));
LABEL_28:

      goto LABEL_29;
    }
LABEL_22:
    -[PLManagedAsset fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:](self, "fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:", v10);
    v18 = objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      v19 = (void *)v18;
      -[PLManagedAsset setCurrentSleetCastFromMetadata:](self, "setCurrentSleetCastFromMetadata:", v18);
    }
    else
    {
      if (-[PLManagedAsset currentSleetCast](self, "currentSleetCast"))
        -[PLManagedAsset setCurrentSleetCast:](self, "setCurrentSleetCast:", 0);
      v19 = 0;
    }
    goto LABEL_28;
  }
LABEL_29:

}

- (void)updateAdjustmentFileWithAdjustmentRenderTypes:(unsigned int)a3
{
  uint64_t v3;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v3 = *(_QWORD *)&a3;
  v18 = *MEMORY[0x1E0C80C00];
  v5 = objc_alloc(MEMORY[0x1E0C99D50]);
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithContentsOfFile:", v6);

  if (v7)
  {
    v13 = 0;
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v7, 0, 0, &v13);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v13;
    if (v8)
    {
      v10 = objc_msgSend(v8, "mutableCopy");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", v3);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject setObject:forKey:](v10, "setObject:forKey:", v11, *MEMORY[0x1E0D73390]);

      -[PLManagedAsset _writeOutAdjustmentsToFile:](self, "_writeOutAdjustmentsToFile:", v10);
    }
    else
    {
      PLBackendGetLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v15 = v12;
        v16 = 2112;
        v17 = v9;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Failed to read adjustment file %@, %@", buf, 0x16u);

      }
    }

  }
}

- (void)_writeOutAdjustmentsToFile:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  const __CFString *v16;
  id v17;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  const __CFString *v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v18 = 0;
  objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v4, 100, 0, &v18);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v18;
  if (!v5)
    goto LABEL_3;
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v6;
  v8 = objc_msgSend(v5, "writeToFile:options:error:", v7, 1073741825, &v17);
  v9 = v17;

  v6 = v9;
  if ((v8 & 1) == 0)
  {
LABEL_3:
    v10 = *MEMORY[0x1E0D73370];
    objc_msgSend(v4, "objectForKeyedSubscript:", *MEMORY[0x1E0D73370]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v11)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<%lu bytes>"), objc_msgSend(v11, "length"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v13, v10);

    }
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = CFSTR("write failed");
      *(_DWORD *)buf = 138413058;
      v20 = v15;
      if (!v5)
        v16 = CFSTR("unable to encode dictionary as data");
      v21 = 2112;
      v22 = v4;
      v23 = 2112;
      v24 = v16;
      v25 = 2112;
      v26 = v6;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Failed to create adjustment file %@ from adjustment dictionary %@ (%@): %@", buf, 0x2Au);

    }
  }

}

- (void)setAdjustments:(id)a3 options:(id)a4
{
  uint64_t v6;
  BOOL v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  int v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  __CFString *v18;
  void *v19;
  void *v20;
  void *v21;
  __CFString *v22;
  uint64_t v23;
  void *v24;
  char v25;
  NSObject *v26;
  uint64_t v27;
  char v28;
  void *v29;
  void *v30;
  void *v31;
  BOOL v32;
  int v33;
  unsigned int v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  NSObject *v39;
  __CFString *v40;
  void *v41;
  int v42;
  NSObject *v43;
  __CFString *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t i;
  __CFString *v48;
  char v49;
  __CFString *v50;
  NSObject *v51;
  void *v52;
  __CFString *v53;
  void *v54;
  void *v55;
  __CFString *v56;
  char v57;
  void *v58;
  uint64_t v59;
  void *v60;
  __CFString *v61;
  NSObject *v62;
  __CFString *v63;
  void *v64;
  NSObject *v65;
  __CFString *v66;
  NSObject *v67;
  __CFString *v68;
  NSObject *v69;
  __CFString *v70;
  __CFString *v71;
  void *v72;
  void *v73;
  void *v74;
  NSObject *v75;
  __CFString *v76;
  NSObject *v77;
  int v78;
  const __CFString *v79;
  int64_t v80;
  void *v81;
  char v82;
  void *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  __CFString *v88;
  __CFString *v89;
  void *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  NSObject *v95;
  __CFString *v96;
  void *v97;
  id v98;
  id v99;
  void *v100;
  __CFString *v101;
  __CFString *v102;
  void *v103;
  void *v104;
  __CFString *v105;
  void *v106;
  void *v107;
  int v108;
  void *v109;
  __CFString *v110;
  NSObject *v111;
  void *v112;
  void *v113;
  NSObject *v114;
  NSObject *v115;
  __CFString *v116;
  id v117;
  void *v118;
  BOOL v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  _BOOL4 v124;
  NSObject *v125;
  NSObject *v126;
  void *v127;
  double v128;
  double v129;
  void *v130;
  uint64_t v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  id v136;
  id v137;
  CGImageSourceRef v138;
  id v139;
  const __CFURL *v140;
  const __CFURL *v141;
  NSObject *v142;
  void *v143;
  void *v144;
  NSObject *v145;
  id v146;
  NSObject *v147;
  os_signpost_id_t v148;
  NSObject *v149;
  NSObject *v150;
  NSObject *v151;
  NSObject *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  char v156;
  NSObject *v157;
  NSObject *v158;
  uint64_t v159;
  NSObject *v160;
  __CFString *v161;
  os_signpost_id_t spid;
  void *v163;
  int v164;
  void *v165;
  id obj;
  void *v167;
  __CFString *v168;
  void *v169;
  void *v170;
  void *v171;
  NSObject *oslog;
  id v173;
  id v174;
  PLManagedAsset *v175;
  id v176;
  id v177;
  __CFString *v178;
  id v179;
  __CFString *v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  id v185;
  id v186;
  _QWORD v187[4];
  id v188;
  _BYTE *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  char v194;
  uint8_t v195[128];
  uint8_t v196[4];
  __CFString *v197;
  __int16 v198;
  const __CFString *v199;
  _BYTE buf[24];
  uint64_t (*v201)(uint64_t, uint64_t);
  void (*v202)(uint64_t);
  id v203;
  uint64_t v204;

  v204 = *MEMORY[0x1E0C80C00];
  v173 = a3;
  v174 = a4;
  v175 = self;
  if (-[PLManagedAsset isVideo](self, "isVideo") || -[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    objc_msgSend(v173, "adjustmentFormatIdentifier");
    oslog = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v173, "adjustmentFormatVersion");
    v171 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v174, "fileIngestionType");
    if (!-[PLManagedAsset hasAdjustments](self, "hasAdjustments") && !oslog)
    {
LABEL_193:

      goto LABEL_194;
    }
    v7 = v6 == 0;
    objc_msgSend(v173, "adjustmentTimestamp");
    v170 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v170)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v170 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v173, "setAdjustmentTimestamp:", v170);
      v7 = 0;
    }
    objc_opt_class();
    obj = (id)objc_claimAutoreleasedReturnValue();
    objc_sync_enter(obj);
    objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
    v167 = (void *)objc_claimAutoreleasedReturnValue();
    v191 = 0;
    v192 = &v191;
    v193 = 0x2020000000;
    v194 = 0;
    objc_msgSend(MEMORY[0x1E0D73308], "UUIDString");
    v163 = (void *)objc_claimAutoreleasedReturnValue();
    PLImageManagerGetLog();
    v8 = (id)objc_claimAutoreleasedReturnValue();
    spid = os_signpost_id_generate(v8);
    v9 = v8;

    v10 = v9;
    v11 = v10;
    if (spid - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
    {
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v163;
      _os_signpost_emit_with_name_impl(&dword_199541000, v11, OS_SIGNPOST_INTERVAL_BEGIN, spid, "AssetSetAdjustments", "adjustmentUuid = %{public}@", buf, 0xCu);
    }

    v160 = v11;
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v201 = __Block_byref_object_copy__14262;
    v202 = __Block_byref_object_dispose__14263;
    v203 = 0;
    -[PLManagedObject pathManager](self, "pathManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isUBF");

    if (v13)
    {
      v14 = objc_alloc(MEMORY[0x1E0D73278]);
      -[PLManagedAsset uuid](self, "uuid");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = -[PLManagedAsset bundleScope](self, "bundleScope");
      objc_msgSend((id)*MEMORY[0x1E0CEC5A8], "identifier");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (__CFString *)objc_msgSend(v14, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v15, v16, v17, 2, 31);

      -[PLManagedObject pathManager](self, "pathManager");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v187[0] = MEMORY[0x1E0C809B0];
      v187[1] = 3221225472;
      v187[2] = __41__PLManagedAsset_setAdjustments_options___block_invoke;
      v187[3] = &unk_1E3663B08;
      v189 = buf;
      v190 = &v191;
      v188 = v167;
      objc_msgSend(v19, "obtainAccessAndWaitWithFileWithIdentifier:mode:toURLWithHandler:", v18, 2, v187);

      v161 = 0;
      v20 = v188;
    }
    else
    {
      -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
      v22 = (__CFString *)objc_claimAutoreleasedReturnValue();
      -[__CFString stringByAppendingPathComponent:](v22, "stringByAppendingPathComponent:", CFSTR("in_flight"));
      v23 = objc_claimAutoreleasedReturnValue();
      v161 = v22;
      v24 = *(void **)(*(_QWORD *)&buf[8] + 40);
      *(_QWORD *)(*(_QWORD *)&buf[8] + 40) = v23;

      if (v7)
        goto LABEL_21;
      v186 = 0;
      v25 = objc_msgSend(v167, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v22, 1, 0, &v186);
      v18 = (__CFString *)v186;
      if ((v25 & 1) == 0)
      {
        PLBackendGetLog();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v196 = 138412546;
          v197 = v161;
          v198 = 2112;
          v199 = v18;
          _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "Failed to create directory at %@: %@", v196, 0x16u);
        }

      }
      v27 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
      objc_msgSend(MEMORY[0x1E0C99D50], "data");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v28 = objc_msgSend(v167, "createFileAtPath:contents:attributes:", v27, v20, 0);
      *((_BYTE *)v192 + 24) = v28;
    }

LABEL_21:
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v169 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = (void *)objc_opt_class();
    objc_msgSend(v174, "renderedContentURL");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "pathExtension");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "uniformTypeIdentifierFromPathExtension:assetType:", v31, -[PLManagedAsset kind](self, "kind"));
    v165 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForFullsizeRenderImageFileWithUTI:](self, "pathForFullsizeRenderImageFileWithUTI:", v165);
    v168 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (oslog)
      v32 = v171 == 0;
    else
      v32 = 1;
    v33 = !v32;
    v164 = v33;
    if (!v32)
    {
      if (objc_msgSend(v174, "isDeferred"))
      {
        v34 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
        if (v34 <= 0xB
          && ((1 << v34) & 0xB15) != 0
          && !-[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder"))
        {
          -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 2);
          -[PLManagedObject photoLibrary](self, "photoLibrary");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "libraryServicesManager");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "backgroundJobService");
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedObject photoLibrary](self, "photoLibrary");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v37, "signalBackgroundProcessingNeededOnLibrary:", v38);

        }
      }
      else if (-[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") == 2
             || -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") == 9)
      {
        -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 0);
      }
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v52, "unmanagedAdjustment");
      v53 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (!v53)
      {
        -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLManagedObject insertInManagedObjectContext:](PLUnmanagedAdjustment, "insertInManagedObjectContext:", v54);
        v53 = (__CFString *)objc_claimAutoreleasedReturnValue();

        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v55, "setUnmanagedAdjustment:", v53);

      }
      -[__CFString setUuid:](v53, "setUuid:", v163);
      if (objc_msgSend(v174, "isSubstandardRender"))
      {
        if (objc_msgSend(v174, "isDeferred"))
          -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](self, "pathForAsyncAdjustedRenderPreviewImageFile");
        else
          -[PLManagedAsset pathForSubstandardFullsizeRenderImageFile](self, "pathForSubstandardFullsizeRenderImageFile");
        v56 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();

        PLBackendGetLog();
        v77 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
        {
          v78 = objc_msgSend(v174, "isDeferred");
          v79 = CFSTR("NO");
          if (v78)
            v79 = CFSTR("YES");
          *(_DWORD *)v196 = 138412546;
          v197 = v56;
          v198 = 2112;
          v199 = v79;
          _os_log_impl(&dword_199541000, v77, OS_LOG_TYPE_INFO, "Updating destinationPathForRenderedImageContent to substandardRender path: %@ deferred: %@", v196, 0x16u);
        }

      }
      else
      {
        v56 = v168;
      }
      v80 = +[PLManagedAsset adjustmentBaseVersionFromPFAdjustmentsBaseVersion:](PLManagedAsset, "adjustmentBaseVersionFromPFAdjustmentsBaseVersion:", objc_msgSend(v173, "adjustmentBaseVersion"));
      objc_msgSend(v174, "renderedContentURL");
      v81 = (void *)objc_claimAutoreleasedReturnValue();
      if (v81)
        v82 = v7;
      else
        v82 = 1;

      if ((v82 & 1) == 0)
      {
        objc_msgSend(v174, "penultimateRenderedJPEGData");
        v83 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v174, "penultimateRenderedVideoContentURL");
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v174, "penultimateRenderedVideoComplementContentURL");
        v85 = (void *)objc_claimAutoreleasedReturnValue();
        v80 = -[PLManagedAsset _prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:penultimateRenderedJPEGData:penultimateRenderedVideoContentURL:penultimateRenderedVideoComplementContentURL:fileIngestionType:](self, "_prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:penultimateRenderedJPEGData:penultimateRenderedVideoContentURL:penultimateRenderedVideoComplementContentURL:fileIngestionType:", v80, v83, v84, v85, objc_msgSend(v174, "fileIngestionType"));

      }
      objc_msgSend(v173, "editorBundleID");
      v86 = objc_claimAutoreleasedReturnValue();
      v87 = (void *)v86;
      v88 = &stru_1E36789C0;
      if (v86)
        v88 = (__CFString *)v86;
      v89 = v88;

      if (!v7)
      {
        objc_msgSend(v169, "setObject:forKey:", oslog, *MEMORY[0x1E0D73380]);
        objc_msgSend(v169, "setObject:forKey:", v171, *MEMORY[0x1E0D73388]);
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v80);
        v90 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v169, "setObject:forKey:", v90, *MEMORY[0x1E0D73368]);

        objc_msgSend(v169, "setObject:forKey:", v89, *MEMORY[0x1E0D73378]);
        objc_msgSend(v169, "setObject:forKey:", v170, *MEMORY[0x1E0D73398]);
        objc_msgSend(v173, "adjustmentData");
        v91 = (void *)objc_claimAutoreleasedReturnValue();
        if (v91)
          objc_msgSend(v169, "setObject:forKey:", v91, *MEMORY[0x1E0D73370]);

      }
      -[PLManagedAsset setEditorBundleID:](self, "setEditorBundleID:", v89);
      v92 = objc_msgSend(v173, "adjustmentRenderTypes");
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", v92);
      -[__CFString setAdjustmentRenderTypes:](v53, "setAdjustmentRenderTypes:", v92);
      -[__CFString setAdjustmentFormatIdentifier:](v53, "setAdjustmentFormatIdentifier:", oslog);
      -[__CFString setAdjustmentFormatVersion:](v53, "setAdjustmentFormatVersion:", v171);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v80);
      v93 = (void *)objc_claimAutoreleasedReturnValue();
      -[__CFString setAdjustmentBaseImageFormat:](v53, "setAdjustmentBaseImageFormat:", v93);

      -[__CFString setAdjustmentTimestamp:](v53, "setAdjustmentTimestamp:", v170);
      v94 = (void *)SBSCopyLocalizedApplicationNameForDisplayIdentifier();
      -[__CFString setEditorLocalizedName:](v53, "setEditorLocalizedName:", v94);
      PLBackendGetLog();
      v95 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v95, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](v175, "uuid");
        v96 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v196 = 138412546;
        v197 = v53;
        v198 = 2114;
        v199 = v96;
        _os_log_impl(&dword_199541000, v95, OS_LOG_TYPE_INFO, "Setting unmanaged adjustment %@ to asset %{public}@", v196, 0x16u);

      }
      if (-[PLManagedAsset isPhoto](v175, "isPhoto"))
      {
        objc_msgSend(v174, "penultimateRenderedJPEGData");
        v97 = (void *)objc_claimAutoreleasedReturnValue();
        if (v97)
        {
          objc_msgSend(v174, "penultimateRenderedJPEGData");
          v98 = (id)objc_claimAutoreleasedReturnValue();
          v99 = v98;
        }
        else
        {
          v103 = (void *)MEMORY[0x1E0C99D50];
          -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](v175, "pathForPenultimateFullsizeRenderImageFile");
          v98 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v103, "dataWithContentsOfFile:", v98);
          v99 = (id)objc_claimAutoreleasedReturnValue();

        }
        v104 = (void *)objc_opt_class();
        objc_msgSend(v173, "adjustmentData");
        v102 = (__CFString *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v104, "cloudAdjustmentFingerprintWithAdjustmentDataBlob:formatIdentifier:formatVersion:editorBundleID:baseVersion:baseImageData:", v102, oslog, v171, v89, v80, v99);
        v105 = (__CFString *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        objc_msgSend(v174, "penultimateRenderedVideoContentURL");
        v100 = (void *)objc_claimAutoreleasedReturnValue();
        if (v100)
        {
          objc_msgSend(v174, "penultimateRenderedVideoContentURL");
          v101 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
          v102 = v101;
        }
        else
        {
          v106 = (void *)MEMORY[0x1E0C99E98];
          -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](v175, "pathForPenultimateFullsizeRenderVideoFile");
          v101 = (__CFString *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v106, "fileURLWithPath:", v101);
          v102 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();

        }
        -[__CFString path](v102, "path");
        v107 = (void *)objc_claimAutoreleasedReturnValue();
        v108 = objc_msgSend(v167, "fileExistsAtPath:", v107);

        if (v108)
        {
          objc_msgSend(MEMORY[0x1E0D11398], "nonPrivateFingerprintScheme");
          v109 = (void *)objc_claimAutoreleasedReturnValue();
          v185 = 0;
          objc_msgSend(v109, "fingerPrintForFileAtURL:error:", v102, &v185);
          v99 = (id)objc_claimAutoreleasedReturnValue();
          v110 = (__CFString *)v185;

          if (!v99)
          {
            PLBackendGetLog();
            v111 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)v196 = 138412546;
              v197 = v102;
              v198 = 2112;
              v199 = v110;
              _os_log_impl(&dword_199541000, v111, OS_LOG_TYPE_ERROR, "Failed to calculate base fingerprint for penultimate video at url: %@, error: %@", v196, 0x16u);
            }

          }
        }
        else
        {
          v99 = 0;
        }
        v112 = (void *)objc_opt_class();
        objc_msgSend(v173, "adjustmentData");
        v113 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v112, "cloudAdjustmentFingerprintWithAdjustmentDataBlob:formatIdentifier:formatVersion:editorBundleID:baseVersion:baseFingerprint:", v113, oslog, v171, v89, v80, v99);
        v105 = (__CFString *)objc_claimAutoreleasedReturnValue();

      }
      PLBackendGetLog();
      v114 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v114, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)v196 = 138412290;
        v197 = v105;
        _os_log_impl(&dword_199541000, v114, OS_LOG_TYPE_INFO, "Calculating cloud adjustment fingerprint at set time: %@", v196, 0xCu);
      }

      -[__CFString setOtherAdjustmentsFingerprint:](v53, "setOtherAdjustmentsFingerprint:", v105);
      v168 = v56;
      goto LABEL_129;
    }
    if (objc_msgSend(v174, "isDeferred"))
    {
      PLBackendGetLog();
      v39 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v40 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v196 = 138543362;
        v197 = v40;
        _os_log_impl(&dword_199541000, v39, OS_LOG_TYPE_ERROR, "Unsupported adjustment, revert and deferred are incompatible for asset %{public}@", v196, 0xCu);

      }
    }
    -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 0);
    -[PLManagedAsset deleteAdjustedResources](self, "deleteAdjustedResources");
    if (v7)
    {
LABEL_69:
      -[PLManagedAsset setEditorBundleID:](v175, "setEditorBundleID:", 0);
      -[PLManagedAsset setAdjustmentsState:](v175, "setAdjustmentsState:", 0);
      -[PLManagedAsset additionalAttributes](v175, "additionalAttributes");
      v64 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v64, "unmanagedAdjustment");
      v53 = (__CFString *)objc_claimAutoreleasedReturnValue();

      PLBackendGetLog();
      v65 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v65, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](v175, "uuid");
        v66 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v196 = 138412546;
        v197 = v53;
        v198 = 2114;
        v199 = v66;
        _os_log_impl(&dword_199541000, v65, OS_LOG_TYPE_INFO, "Reverting unmanaged adjustment %@ for asset %{public}@", v196, 0x16u);

      }
      PLPhotosStatusGetLog();
      v67 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](v175, "uuid");
        v68 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v196 = 138412546;
        v197 = v53;
        v198 = 2114;
        v199 = v68;
        _os_log_impl(&dword_199541000, v67, OS_LOG_TYPE_DEFAULT, "Reverting unmanaged adjustment %@ for asset %{public}@", v196, 0x16u);

      }
      PLPhotosStatusGetLog();
      v69 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
        v70 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v196 = 138412290;
        v197 = v70;
        _os_log_impl(&dword_199541000, v69, OS_LOG_TYPE_DEFAULT, "%@", v196, 0xCu);

      }
      if (v53)
      {
        -[__CFString setAdjustmentFormatIdentifier:](v53, "setAdjustmentFormatIdentifier:", 0);
        -[__CFString setAdjustmentFormatVersion:](v53, "setAdjustmentFormatVersion:", 0);
        -[__CFString setAdjustmentTimestamp:](v53, "setAdjustmentTimestamp:", v170);
        -[__CFString setAdjustmentRenderTypes:](v53, "setAdjustmentRenderTypes:", 0);
        -[__CFString setOtherAdjustmentsFingerprint:](v53, "setOtherAdjustmentsFingerprint:", 0);
        -[__CFString setAdjustmentBaseImageFormat:](v53, "setAdjustmentBaseImageFormat:", &unk_1E375DB90);
      }
      if (-[PLManagedAsset isPhotoIris](v175, "isPhotoIris")
        && objc_msgSend(v174, "shouldUpdateAttributes"))
      {
        if (-[PLManagedAsset playbackStyle](v175, "playbackStyle") != 3)
          -[PLManagedAsset setPlaybackStyle:](v175, "setPlaybackStyle:", 3);
        -[PLManagedAsset pathForVideoComplementFile](v175, "pathForVideoComplementFile");
        v71 = (__CFString *)objc_claimAutoreleasedReturnValue();
        v72 = (void *)MEMORY[0x1E0C8AF90];
        objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v71);
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v72, "assetWithURL:", v73);
        v74 = (void *)objc_claimAutoreleasedReturnValue();

        if (v74)
        {
          PLBackendGetLog();
          v75 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
          {
            -[PLManagedAsset uuid](v175, "uuid");
            v76 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v196 = 138543618;
            v197 = v76;
            v198 = 2112;
            v199 = v71;
            _os_log_impl(&dword_199541000, v75, OS_LOG_TYPE_INFO, "Updating Live Photo properties for asset %{public}@ from %@", v196, 0x16u);

          }
          -[PLManagedAsset _updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:](v175, "_updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:", v74);
          -[PLManagedAsset updatePlaybackVariationAndLoopingStyleFromAVAsset:](v175, "updatePlaybackVariationAndLoopingStyleFromAVAsset:", v74);
        }
        else
        {
          PLBackendGetLog();
          v115 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR))
          {
            -[PLManagedAsset uuid](v175, "uuid");
            v116 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v196 = 138412546;
            v197 = v71;
            v198 = 2114;
            v199 = v116;
            _os_log_impl(&dword_199541000, v115, OS_LOG_TYPE_ERROR, "Failed to create avAsset from %@ to update Live Photo properties for asset %{public}@", v196, 0x16u);

          }
        }

      }
      if (!-[PLManagedAsset isPhoto](v175, "isPhoto"))
      {
LABEL_130:

        if (-[PLManagedAsset isPhoto](v175, "isPhoto") || objc_msgSend(v174, "isDeferred"))
        {
          v117 = 0;
          if (v168 && oslog && v171)
          {
            objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v168, 0);
            v117 = (id)objc_claimAutoreleasedReturnValue();

          }
          if (-[PLManagedAsset isVideo](v175, "isVideo"))
          {
            objc_msgSend(v174, "renderedVideoPosterContentURL");
            v118 = (void *)objc_claimAutoreleasedReturnValue();
            v119 = v118 == 0;

            if (!v119)
            {
              v120 = (void *)MEMORY[0x1E0C99E98];
              -[PLManagedAsset pathForTransientVideoPosterFramePreview](v175, "pathForTransientVideoPosterFramePreview");
              v121 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v120, "fileURLWithPath:", v121);
              v122 = (void *)objc_claimAutoreleasedReturnValue();

              goto LABEL_144;
            }
          }
        }
        else
        {
          objc_msgSend(v174, "renderedContentURL");
          v123 = (void *)objc_claimAutoreleasedReturnValue();
          if (v123)
          {
            v124 = -[PLManagedAsset isVideo](v175, "isVideo");

            if (v124)
            {
              -[PLManagedAsset fileURLForFullsizeRenderVideo](v175, "fileURLForFullsizeRenderVideo");
              v117 = (id)objc_claimAutoreleasedReturnValue();
              -[PLManagedAsset fileURLForFullsizeRenderImage](v175, "fileURLForFullsizeRenderImage");
              v122 = (void *)objc_claimAutoreleasedReturnValue();
              goto LABEL_144;
            }
          }
          v117 = 0;
        }
        v122 = 0;
LABEL_144:
        -[PLManagedAsset _ingestAndApplyMetadataChangesFromAdjustments:updateAdjustmentDictionary:options:fullSizeRenderURL:videoPosterRenderURL:isRevertToOriginal:error:](v175, "_ingestAndApplyMetadataChangesFromAdjustments:updateAdjustmentDictionary:options:fullSizeRenderURL:videoPosterRenderURL:isRevertToOriginal:error:", v173, v169, v174, v117, v122, v164 ^ 1u, 0);
        v125 = v160;
        v126 = v125;
        if (spid - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v125))
        {
          *(_WORD *)v196 = 0;
          _os_signpost_emit_with_name_impl(&dword_199541000, v126, OS_SIGNPOST_INTERVAL_END, spid, "AssetSetAdjustments", ", v196, 2u);
        }

        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v127 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setModificationDate:](v175, "setModificationDate:", v127);

        if (objc_msgSend(v174, "shouldOverwriteFullSizeRenderSize"))
        {
          objc_msgSend(v174, "fullSizeRenderSize");
          -[PLManagedAsset setWidth:](v175, "setWidth:", (uint64_t)v128);
          objc_msgSend(v174, "fullSizeRenderSize");
          -[PLManagedAsset setHeight:](v175, "setHeight:", (uint64_t)v129);
          if (-[PLManagedAsset isPhoto](v175, "isPhoto"))
          {
            objc_msgSend(v174, "mainFileMetadata");
            v130 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset updatePanoramosityWithMetadata:](v175, "updatePanoramosityWithMetadata:", v130);

          }
        }
        if (-[PLManagedAsset isVideo](v175, "isVideo")
          && ((objc_msgSend(v174, "isSubstandardRender") & 1) != 0 || objc_msgSend(v174, "isDeferred")))
        {
          objc_msgSend(v174, "fullSizeRenderDuration");
          if (((v131 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 <= 0x3FE)
          {
            objc_msgSend(v174, "fullSizeRenderDuration");
            -[PLManagedAsset setDuration:](v175, "setDuration:");
          }
        }
        if ((v164 & 1) == 0 && -[PLManagedAsset kindSubtype](v175, "kindSubtype") == 101)
        {
          objc_msgSend(v174, "mainFileMetadata");
          v132 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:](v175, "setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:", v132);

        }
        if (*((_BYTE *)v192 + 24))
          objc_msgSend(v167, "removeItemAtPath:error:", *(_QWORD *)(*(_QWORD *)&buf[8] + 40), 0);

        _Block_object_dispose(buf, 8);
        _Block_object_dispose(&v191, 8);

        objc_sync_exit(obj);
        if (-[PLManagedAsset isVideo](v175, "isVideo")
          && ((objc_msgSend(v174, "isDeferred") & 1) != 0 || objc_msgSend(v174, "shouldUpdateAttributes")))
        {
          -[PLManagedAsset pruneLocalVideoKeyFrameImage](v175, "pruneLocalVideoKeyFrameImage");
        }
        -[PLManagedAsset pathForWallpaperComputeResourcesFile](v175, "pathForWallpaperComputeResourcesFile");
        v133 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset _removeComputeResourceWithRecipeID:atPath:](v175, "_removeComputeResourceWithRecipeID:atPath:", 327687, v133);

        -[PLManagedAsset pathForGenerativePlaygroundFaceResourcesFile](v175, "pathForGenerativePlaygroundFaceResourcesFile");
        v134 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset _removeComputeResourceWithRecipeID:atPath:](v175, "_removeComputeResourceWithRecipeID:atPath:", 327693, v134);

        if (!objc_msgSend(v174, "isDeferred")
          || (objc_msgSend(v174, "isSubstandardRender") & 1) != 0
          || objc_msgSend(v174, "shouldGenerateThumbnails"))
        {
          if (-[PLManagedAsset isVideo](v175, "isVideo"))
          {
            if ((objc_msgSend(v174, "isDeferred") & 1) != 0)
            {
              v135 = (void *)MEMORY[0x1E0C99E98];
              -[PLManagedAsset pathForTransientVideoPosterFramePreview](v175, "pathForTransientVideoPosterFramePreview");
              v136 = (id)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v135, "fileURLWithPath:", v136);
              v137 = (id)objc_claimAutoreleasedReturnValue();

            }
            else
            {
              -[PLManagedAsset fileURLForFullsizeRenderImage](v175, "fileURLForFullsizeRenderImage");
              v136 = (id)objc_claimAutoreleasedReturnValue();
              v137 = v136;
            }

            v140 = (const __CFURL *)v137;
            v141 = v140;
            if (!v140)
            {
              PLPhotoEditGetLog();
              v142 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v142, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_199541000, v142, OS_LOG_TYPE_DEBUG, "No custom video poster provided, default to standard preview image", buf, 2u);
              }

              v143 = (void *)MEMORY[0x1E0C99E98];
              -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](v175, "pathForAsyncAdjustedRenderPreviewImageFile");
              v144 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v143, "fileURLWithPath:", v144);
              v141 = (const __CFURL *)objc_claimAutoreleasedReturnValue();

            }
            v138 = CGImageSourceCreateWithURL(v141, 0);
            if (v138)
            {
              PLPhotoEditGetLog();
              v145 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v145, OS_LOG_TYPE_INFO))
              {
                -[PLManagedAsset uuid](v175, "uuid");
                v146 = (id)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412546;
                *(_QWORD *)&buf[4] = v141;
                *(_WORD *)&buf[12] = 2114;
                *(_QWORD *)&buf[14] = v146;
                _os_log_impl(&dword_199541000, v145, OS_LOG_TYPE_INFO, "Creating thumbnail image from %@ for video asset %{public}@", buf, 0x16u);

              }
              v176 = 0;
              v177 = 0;
              +[PLManagedAsset createThumbnailImage:previewImage:withToBeReleasedImageSource:](PLManagedAsset, "createThumbnailImage:previewImage:withToBeReleasedImageSource:", &v177, &v176, v138);
              v139 = v177;
              v138 = (CGImageSourceRef)v176;
            }
            else
            {
              v139 = 0;
            }

          }
          else
          {
            v138 = 0;
            v139 = 0;
          }
          PLImageManagerGetLog();
          v147 = (id)objc_claimAutoreleasedReturnValue();
          v148 = os_signpost_id_generate(v147);
          v149 = v147;

          v150 = v149;
          v151 = v150;
          if (v148 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v150))
          {
            *(_WORD *)buf = 0;
            _os_signpost_emit_with_name_impl(&dword_199541000, v151, OS_SIGNPOST_INTERVAL_BEGIN, v148, "UpdateDerivativeAndThumbnailAdjustments", "Begin potential updates on derivatives and thumbnails after setting adjustments.", buf, 2u);
          }

          v152 = v151;
          v153 = objc_msgSend(v174, "shouldGenerateThumbnails");
          objc_msgSend(v174, "mainFileMetadata");
          v154 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v174, "shouldUpdateAttributes") & 1) != 0)
            v155 = 1;
          else
            v155 = objc_msgSend(v174, "isDeferred");
          v156 = objc_msgSend(v174, "isSubstandardRender");
          BYTE1(v159) = objc_msgSend(v174, "isDeferred");
          LOBYTE(v159) = v156;
          -[PLManagedAsset _updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:](v175, "_updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:", v153, v138, v139, v154, v164 ^ 1u, v155, v159);

          v157 = v152;
          v158 = v157;
          if (v148 - 1 < 0xFFFFFFFFFFFFFFFELL && os_signpost_enabled(v157))
          {
            *(_WORD *)buf = 0;
            _os_signpost_emit_with_name_impl(&dword_199541000, v158, OS_SIGNPOST_INTERVAL_END, v148, "UpdateDerivativeAndThumbnailAdjustments", ", buf, 2u);
          }

        }
        goto LABEL_193;
      }
      -[PLManagedAsset metadataFromMediaPropertiesOrOriginalResource](v175, "metadataFromMediaPropertiesOrOriginalResource");
      v89 = (__CFString *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setDepthTypeFromMetadata:](v175, "setDepthTypeFromMetadata:", v89);
      -[PLManagedAsset setSpatialTypeFromMetadata:](v175, "setSpatialTypeFromMetadata:", v89);
      -[PLManagedAsset setCurrentSleetCastFromMetadata:](v175, "setCurrentSleetCastFromMetadata:", v89);
LABEL_129:

      goto LABEL_130;
    }
    -[PLManagedObject pathManager](self, "pathManager");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = objc_msgSend(v41, "isUBF");

    if (v42)
    {
      v183 = 0u;
      v184 = 0u;
      v181 = 0u;
      v182 = 0u;
      -[PLManagedAsset adjustedFileURLs](self, "adjustedFileURLs");
      v43 = objc_claimAutoreleasedReturnValue();
      v44 = 0;
      v45 = -[NSObject countByEnumeratingWithState:objects:count:](v43, "countByEnumeratingWithState:objects:count:", &v181, v195, 16);
      if (v45)
      {
        v46 = *(_QWORD *)v182;
        do
        {
          for (i = 0; i != v45; ++i)
          {
            if (*(_QWORD *)v182 != v46)
              objc_enumerationMutation(v43);
            v48 = *(__CFString **)(*((_QWORD *)&v181 + 1) + 8 * i);
            v180 = v44;
            v49 = objc_msgSend(MEMORY[0x1E0D73208], "removeItemAtURL:error:", v48, &v180);
            v50 = v180;

            v44 = v50;
            if ((v49 & 1) == 0)
            {
              PLBackendGetLog();
              v51 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)v196 = 138412546;
                v197 = v48;
                v198 = 2112;
                v199 = v44;
                _os_log_impl(&dword_199541000, v51, OS_LOG_TYPE_ERROR, "Failed to remove adjusted resource %@: %@", v196, 0x16u);
              }

            }
          }
          v45 = -[NSObject countByEnumeratingWithState:objects:count:](v43, "countByEnumeratingWithState:objects:count:", &v181, v195, 16);
        }
        while (v45);
      }
    }
    else
    {
      v179 = 0;
      v57 = objc_msgSend(MEMORY[0x1E0D73208], "removeItemAtPath:error:", v161, &v179);
      v44 = (__CFString *)v179;
      if ((v57 & 1) != 0)
      {
LABEL_64:
        -[PLManagedObject pathManager](v175, "pathManager");
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset uuid](v175, "uuid");
        v59 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v58, "URLForPartialVideoDirectoryWithAssetUUID:", v59);
        v60 = (void *)objc_claimAutoreleasedReturnValue();

        v178 = v44;
        LOBYTE(v59) = objc_msgSend(MEMORY[0x1E0D73208], "removeItemAtURL:error:", v60, &v178);
        v61 = v178;

        if ((v59 & 1) == 0)
        {
          PLBackendGetLog();
          v62 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
          {
            -[PLManagedAsset uuid](v175, "uuid");
            v63 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v196 = 138543618;
            v197 = v63;
            v198 = 2112;
            v199 = v61;
            _os_log_impl(&dword_199541000, v62, OS_LOG_TYPE_ERROR, "Failed to remove partial video directory for assetUUID %{public}@: %@", v196, 0x16u);

          }
        }

        goto LABEL_69;
      }
      PLBackendGetLog();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v196 = 138412546;
        v197 = v161;
        v198 = 2112;
        v199 = v44;
        _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_ERROR, "Failed to remove adjustment directory %@: %@", v196, 0x16u);
      }
    }

    goto LABEL_64;
  }
  PLPhotoEditGetLog();
  oslog = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(oslog, OS_LOG_TYPE_ERROR))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    *(_QWORD *)&buf[4] = v21;
    _os_log_impl(&dword_199541000, oslog, OS_LOG_TYPE_ERROR, "setAdjustments for non-photo non-video asset %{public}@ is invalid", buf, 0xCu);

  }
LABEL_194:

}

- (void)_removeComputeResourceWithRecipeID:(unsigned int)a3 atPath:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  NSObject *v12;
  id v13;
  _QWORD v14[4];
  unsigned int v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __60__PLManagedAsset__removeComputeResourceWithRecipeID_atPath___block_invoke;
  v14[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  v15 = a3;
  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", v14);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "anyObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
    objc_msgSend(v8, "deleteResource");
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  v10 = objc_msgSend(v9, "removeItemAtPath:error:", v6, &v13);
  v11 = v13;

  if ((v10 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
  {
    PLPhotoEditGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v17 = v6;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Error removing file at path: '%@'", buf, 0xCu);
    }

  }
}

- (void)_updateDerivativesAndThumbnails:(BOOL)a3 withPreviewImage:(id)a4 thumbnailImage:(id)a5 metadata:(id)a6 didRevertToOriginal:(BOOL)a7 updateInternalResources:(BOOL)a8 isSubstandardRender:(BOOL)a9 isDeferred:(BOOL)a10
{
  _BOOL4 v10;
  _BOOL4 v13;
  _BOOL4 v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  void *v33;
  NSObject *v34;
  void *v35;
  char v36;
  id v37;
  NSObject *v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t j;
  void *v46;
  NSObject *v47;
  unint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  NSObject *v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  unint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  NSObject *v68;
  void *v69;
  BOOL v70;
  id v71;
  NSObject *v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  _BOOL4 v78;
  _BOOL4 v79;
  id v80;
  id v81;
  _BOOL4 v82;
  uint64_t v83;
  id v85;
  id v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  id v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint8_t buf[4];
  unint64_t v101;
  __int16 v102;
  id v103;
  __int16 v104;
  void *v105;
  _BYTE v106[128];
  _BYTE v107[128];
  _BYTE v108[128];
  uint64_t v109;

  v82 = a8;
  v10 = a7;
  v13 = a3;
  v14 = a9;
  v109 = *MEMORY[0x1E0C80C00];
  v15 = a4;
  v16 = a5;
  v17 = a6;
  if (v13)
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "libraryServicesManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "modelMigrator");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "isPostProcessingLightweightMigration");

    if ((v21 & 1) == 0)
    {
      v74 = v17;
      v76 = v16;
      v80 = v15;
      v78 = v10;
      if (!v10)
      {
        objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_alloc_init(MEMORY[0x1E0C99E20]);
        -[PLManagedAsset pathForLargeThumbnailFile](self, "pathForLargeThumbnailFile");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v24);

        -[PLManagedAsset pathForMediumThumbnailFile](self, "pathForMediumThumbnailFile");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v25);

        -[PLManagedAsset pathForLargeSizeImageFile](self, "pathForLargeSizeImageFile");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v26);

        -[PLManagedAsset pathForSubstandardFullsizeRenderImageFile](self, "pathForSubstandardFullsizeRenderImageFile");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v27);

        v98 = 0u;
        v99 = 0u;
        v96 = 0u;
        v97 = 0u;
        v28 = v23;
        v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v96, v108, 16);
        if (v29)
        {
          v30 = v29;
          v31 = *(_QWORD *)v97;
          do
          {
            for (i = 0; i != v30; ++i)
            {
              if (*(_QWORD *)v97 != v31)
                objc_enumerationMutation(v28);
              v33 = *(void **)(*((_QWORD *)&v96 + 1) + 8 * i);
              if (objc_msgSend(v22, "fileExistsAtPath:", v33))
              {
                PLBackendGetLog();
                v34 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
                {
                  -[PLManagedAsset uuid](self, "uuid");
                  v35 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412546;
                  v101 = (unint64_t)v33;
                  v102 = 2114;
                  v103 = v35;
                  _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_INFO, "Removing %@ for asset %{public}@", buf, 0x16u);

                }
                v95 = 0;
                v36 = objc_msgSend(v22, "removeItemAtPath:error:", v33, &v95);
                v37 = v95;
                if ((v36 & 1) == 0)
                {
                  PLBackendGetLog();
                  v38 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 138412546;
                    v101 = (unint64_t)v33;
                    v102 = 2112;
                    v103 = v37;
                    _os_log_impl(&dword_199541000, v38, OS_LOG_TYPE_ERROR, "Failed to remove %@: %@", buf, 0x16u);
                  }

                }
              }
            }
            v30 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v96, v108, 16);
          }
          while (v30);
        }

      }
      -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 3);
      -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 4);
      -[PLManagedAsset modernResources](self, "modernResources");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "objectsPassingTest:", &__block_literal_global_711);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      v93 = 0u;
      v94 = 0u;
      v91 = 0u;
      v92 = 0u;
      v41 = v40;
      v42 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v91, v107, 16);
      if (v42)
      {
        v43 = v42;
        v44 = *(_QWORD *)v92;
        do
        {
          for (j = 0; j != v43; ++j)
          {
            if (*(_QWORD *)v92 != v44)
              objc_enumerationMutation(v41);
            v46 = *(void **)(*((_QWORD *)&v91 + 1) + 8 * j);
            if (objc_msgSend(v46, "isLocallyAvailable"))
            {
              PLBackendGetLog();
              v47 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
              {
                v48 = objc_msgSend(v46, "recipeID");
                -[PLManagedAsset uuid](self, "uuid");
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 134349314;
                v101 = v48;
                v102 = 2114;
                v103 = v49;
                _os_log_impl(&dword_199541000, v47, OS_LOG_TYPE_INFO, "Marking resource with recipe ID %{public}lu as locally unavailable for asset %{public}@", buf, 0x16u);

              }
            }
            objc_msgSend(v46, "markAsNotLocallyAvailable");
          }
          v43 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v91, v107, 16);
        }
        while (v43);
      }

      v15 = v80;
      v17 = v74;
      v16 = v76;
      if (!-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
      {
        LOWORD(v73) = 256;
        -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:", v80, v76, 0, 0, v74, 0, v73);
      }

      v10 = v78;
      v14 = a9;
    }
  }
  if (v14 && a10 && !v10)
  {
    v75 = v17;
    v77 = v16;
    v79 = v10;
    v81 = v15;
    v89 = 0u;
    v90 = 0u;
    v87 = 0u;
    v88 = 0u;
    -[PLManagedAsset modernResources](self, "modernResources");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v87, v106, 16);
    if (v51)
    {
      v52 = v51;
      v53 = *(_QWORD *)v88;
      v54 = 0x1E0D73000uLL;
      do
      {
        v55 = 0;
        v83 = v52;
        do
        {
          if (*(_QWORD *)v88 != v53)
            objc_enumerationMutation(v50);
          v56 = *(void **)(*((_QWORD *)&v87 + 1) + 8 * v55);
          if (objc_msgSend(v56, "isLocallyAvailable")
            && objc_msgSend(v56, "isAdjustedFullSizeRenderResource"))
          {
            PLPhotoEditGetLog();
            v57 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v56, "fileURL");
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v56, "fileURL");
              v59 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v59, "lastPathComponent");
              v60 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLManagedAsset uuid](self, "uuid");
              v61 = v53;
              v62 = v50;
              v63 = v54;
              v64 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412802;
              v101 = (unint64_t)v58;
              v102 = 2114;
              v103 = v60;
              v104 = 2114;
              v105 = v64;
              _os_log_impl(&dword_199541000, v57, OS_LOG_TYPE_INFO, "Removing stale render at path %@ (filename: %{public}@) for asset %{public}@ due to deferred rendering", buf, 0x20u);

              v54 = v63;
              v50 = v62;
              v53 = v61;
              v52 = v83;

            }
            v65 = *(void **)(v54 + 520);
            objc_msgSend(v56, "fileURL");
            v66 = (void *)objc_claimAutoreleasedReturnValue();
            v86 = 0;
            LOBYTE(v65) = objc_msgSend(v65, "removeItemAtURL:error:", v66, &v86);
            v67 = v86;

            if ((v65 & 1) == 0)
            {
              PLPhotoEditGetLog();
              v68 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
              {
                objc_msgSend(v56, "fileURL");
                v69 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v101 = (unint64_t)v69;
                v102 = 2112;
                v103 = v67;
                _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_ERROR, "Failed to remove %{public}@: %@", buf, 0x16u);

              }
            }
            objc_msgSend(v56, "markAsNotLocallyAvailable");

          }
          ++v55;
        }
        while (v52 != v55);
        v52 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v87, v106, 16);
      }
      while (v52);
    }

    v15 = v81;
    v10 = v79;
    v17 = v75;
    v16 = v77;
  }
  if (v82)
  {
    -[PLManagedAsset deleteAdjustedResources](self, "deleteAdjustedResources");
    v85 = 0;
    v70 = +[PLResourceInstaller installInternalResourcesForExistingAsset:assumeNoExistingResources:referencedResourceURLs:error:](PLResourceInstaller, "installInternalResourcesForExistingAsset:assumeNoExistingResources:referencedResourceURLs:error:", self, 0, 0, &v85);
    v71 = v85;
    if (!v70)
    {
      PLPhotoEditGetLog();
      v72 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v101 = (unint64_t)v71;
        _os_log_impl(&dword_199541000, v72, OS_LOG_TYPE_ERROR, "Unable to install resources after adjustment change: %@", buf, 0xCu);
      }

    }
    if (v10)
      -[PLManagedAsset reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker](self, "reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker");

  }
}

- (BOOL)_ingestAndApplyMetadataChangesFromAdjustments:(id)a3 updateAdjustmentDictionary:(id)a4 options:(id)a5 fullSizeRenderURL:(id)a6 videoPosterRenderURL:(id)a7 isRevertToOriginal:(BOOL)a8 error:(id *)a9
{
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  int v25;
  const __CFString *v26;
  const __CFString *v27;
  void *v28;
  void *v29;
  BOOL v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  char v36;
  id v37;
  void *v38;
  void *v39;
  char v40;
  id v41;
  void *v42;
  BOOL v43;
  int v44;
  void *v45;
  void *v46;
  char v47;
  id v48;
  NSObject *v49;
  NSObject *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  BOOL v56;
  NSObject *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  BOOL v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  char v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  char v76;
  id v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  char v88;
  NSObject *v89;
  void *v90;
  NSObject *v91;
  unsigned __int16 v92;
  unsigned __int16 v93;
  void *v94;
  uint64_t v95;
  _BOOL8 v96;
  void *v97;
  uint64_t v98;
  void *v99;
  void *v100;
  _BOOL4 v101;
  char v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  NSObject *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v122;
  int v123;
  void *v124;
  void *v125;
  _BOOL4 v126;
  unsigned int v127;
  id v128;
  id v129;
  void *v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  _QWORD v138[4];
  id v139;
  id v140;
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[2];
  _BYTE location[12];
  __int16 v148;
  id v149;
  __int16 v150;
  id v151;
  __int16 v152;
  void *v153;
  __int16 v154;
  void *v155;
  __int16 v156;
  id v157;
  __int16 v158;
  uint64_t v159;
  __int16 v160;
  const __CFString *v161;
  __int16 v162;
  const __CFString *v163;
  uint64_t v164;

  v126 = a8;
  v164 = *MEMORY[0x1E0C80C00];
  v128 = a3;
  v129 = a4;
  v14 = a5;
  v15 = a6;
  v131 = a7;
  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_initWeak((id *)location, self);

  v17 = objc_alloc(MEMORY[0x1E0D73248]);
  v138[0] = MEMORY[0x1E0C809B0];
  v138[1] = 3221225472;
  v138[2] = __163__PLManagedAsset__ingestAndApplyMetadataChangesFromAdjustments_updateAdjustmentDictionary_options_fullSizeRenderURL_videoPosterRenderURL_isRevertToOriginal_error___block_invoke;
  v138[3] = &unk_1E3670E50;
  objc_copyWeak(&v140, (id *)location);
  v18 = v15;
  v139 = v18;
  v125 = (void *)objc_msgSend(v17, "initWithBlock:", v138);

  objc_destroyWeak(&v140);
  objc_destroyWeak((id *)location);
  PLPhotoEditGetLog();
  v19 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "renderedContentURL");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "renderedVideoComplementContentURL");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "renderedVideoPosterContentURL");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_msgSend(v14, "fileIngestionType");
    v25 = objc_msgSend(v14, "isSubstandardRender");
    v26 = CFSTR("NO");
    *(_DWORD *)location = 138545410;
    *(_QWORD *)&location[4] = v20;
    v148 = 2112;
    if (v25)
      v27 = CFSTR("YES");
    else
      v27 = CFSTR("NO");
    v149 = v21;
    if (v126)
      v26 = CFSTR("YES");
    v150 = 2112;
    v151 = v18;
    v152 = 2112;
    v153 = v22;
    v154 = 2112;
    v155 = v23;
    v156 = 2112;
    v157 = v131;
    v158 = 2048;
    v159 = v24;
    v160 = 2112;
    v161 = v27;
    v162 = 2112;
    v163 = v26;
    _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_INFO, "Ingest and apply metadata changes for asset %{public}@ from renderedContentURL %@ fullSizeRenderURL %@ renderedVideoComplementContentURL %@ videoPosterContentURL %@ videoPosterRenderURL %@ ingestionType %ld isSubstandardRender %@ isRevertToOriginal %@", location, 0x5Cu);

  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "setAdjustedStableHash:", 0);

  -[PLManagedAsset revalidateFaceAreaPoints](self, "revalidateFaceAreaPoints");
  objc_msgSend(v14, "renderedContentURL");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  if (v18)
    v30 = v29 == 0;
  else
    v30 = 1;
  v31 = !v30;

  if (v31)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "capabilities");
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v18, "path");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "stringByDeletingLastPathComponent");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v137 = 0;
    v36 = objc_msgSend(v130, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v35, 1, 0, &v137);
    v37 = v137;

    if ((v36 & 1) == 0)
    {
      PLPhotoEditGetLog();
      v50 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)location = 138412546;
        *(_QWORD *)&location[4] = v18;
        v148 = 2112;
        v149 = v37;
        _os_log_impl(&dword_199541000, v50, OS_LOG_TYPE_ERROR, "Failed to create directory for %@: %@", location, 0x16u);
      }

      v51 = (void *)MEMORY[0x1E0CB35C8];
      v52 = *MEMORY[0x1E0CB2938];
      v145[0] = *MEMORY[0x1E0CB3388];
      v145[1] = v52;
      v146[0] = v37;
      v146[1] = CFSTR("Failed to create directory for full size render");
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v146, v145, 2);
      v41 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47011, v41);
      v53 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_32;
    }
    v38 = (void *)MEMORY[0x1E0D73208];
    objc_msgSend(v14, "renderedContentURL");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v136 = 0;
    v40 = objc_msgSend(v38, "ingestItemAtURL:toURL:type:options:capabilities:error:", v39, v18, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v136);
    v41 = v136;

    if ((v40 & 1) == 0 && (objc_msgSend(v14, "isSubstandardRender") & 1) == 0)
    {
      PLPhotoEditGetLog();
      v57 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v14, "renderedContentURL");
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)location = 138412546;
        *(_QWORD *)&location[4] = v58;
        v148 = 2112;
        v149 = v41;
        _os_log_impl(&dword_199541000, v57, OS_LOG_TYPE_ERROR, "Failed to ingest %@: %@", location, 0x16u);

      }
      v59 = (void *)MEMORY[0x1E0CB35C8];
      v60 = *MEMORY[0x1E0CB2938];
      v143[0] = *MEMORY[0x1E0CB3388];
      v143[1] = v60;
      v144[0] = v41;
      v144[1] = CFSTR("Failed to ingest full size render");
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v144, v143, 2);
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v59, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47011, v61);
      v53 = (id)objc_claimAutoreleasedReturnValue();

      goto LABEL_32;
    }

    if (!-[PLManagedAsset isVideo](self, "isVideo")
      || ((objc_msgSend(v14, "renderedVideoPosterContentURL"), v42 = (void *)objc_claimAutoreleasedReturnValue(), v131)
        ? (v43 = v42 == 0)
        : (v43 = 1),
          v43 ? (v44 = 0) : (v44 = 1),
          v42,
          !v44))
    {
LABEL_44:
      objc_msgSend(v14, "adjustmentSecondaryDataURL");
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      v64 = v63 == 0;

      if (v64)
        goto LABEL_47;
      v65 = (void *)MEMORY[0x1E0C99E98];
      -[PLManagedAsset pathForAdjustmentSecondaryDataFile](self, "pathForAdjustmentSecondaryDataFile");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v65, "fileURLWithPath:isDirectory:", v66, 0);
      v67 = (void *)objc_claimAutoreleasedReturnValue();

      v68 = (void *)MEMORY[0x1E0D73208];
      objc_msgSend(v14, "adjustmentSecondaryDataURL");
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      v134 = 0;
      v70 = objc_msgSend(v68, "ingestItemAtURL:toURL:type:options:capabilities:error:", v69, v67, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v134);
      v41 = v134;

      if ((v70 & 1) != 0)
      {

LABEL_47:
        if (!-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
        {
LABEL_80:

          goto LABEL_81;
        }
        v123 = -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState");
        v71 = (void *)MEMORY[0x1E0C99E98];
        -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
        v72 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v71, "fileURLWithPath:isDirectory:", v72, 0);
        v124 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v14, "renderedVideoComplementContentURL");
        v73 = (void *)objc_claimAutoreleasedReturnValue();

        if (v73)
        {
          v74 = (void *)MEMORY[0x1E0D73208];
          objc_msgSend(v14, "renderedVideoComplementContentURL");
          v75 = (void *)objc_claimAutoreleasedReturnValue();
          v133 = 0;
          v76 = objc_msgSend(v74, "ingestItemAtURL:toURL:type:options:capabilities:error:", v75, v124, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v133);
          v77 = v133;

          if ((v76 & 1) != 0)
          {

            if ((objc_msgSend(v14, "shouldUpdateAttributes") & 1) != 0)
            {
              if (-[PLManagedAsset depthType](self, "depthType") != 1
                || (-[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState") & 1) == 0)
              {
                LOWORD(v123) = v123 | 8;
              }
              objc_msgSend(MEMORY[0x1E0C8AF90], "assetWithURL:", v124);
              v78 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLManagedAsset _updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:](self, "_updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:", v78);
              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v79, "unmanagedAdjustment");
              v122 = (void *)objc_claimAutoreleasedReturnValue();

              v80 = objc_msgSend(v122, "adjustmentRenderTypes");
              v81 = -[PLManagedAsset playbackVariationFromAVAsset:isLivePhotoVideoComplement:](self, "playbackVariationFromAVAsset:isLivePhotoVideoComplement:", v78, 1);
              v82 = -[PLManagedAsset updateAdjustmentRenderTypes:withPlaybackVariation:](self, "updateAdjustmentRenderTypes:withPlaybackVariation:", v80, v81);
              if (-[PLManagedAsset playbackVariation](self, "playbackVariation") != (_DWORD)v81)
                -[PLManagedAsset setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:](self, "setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:", v81);
              if ((_DWORD)v80 != (_DWORD)v82)
                objc_msgSend(v122, "setAdjustmentRenderTypes:", v82);

              goto LABEL_77;
            }
            goto LABEL_79;
          }
          if ((PLIsErrorFileNotFound() & 1) == 0)
          {
            PLPhotoEditGetLog();
            v89 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(v14, "renderedVideoComplementContentURL");
              v90 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)location = 138412546;
              *(_QWORD *)&location[4] = v90;
              v148 = 2112;
              v149 = v77;
              _os_log_impl(&dword_199541000, v89, OS_LOG_TYPE_ERROR, "Nonfatal - Error ingesting video complement %@: %@", location, 0x16u);

            }
          }

          v88 = objc_msgSend(v14, "shouldUpdateAttributes");
        }
        else
        {
          v88 = objc_msgSend(v14, "shouldUpdateAttributes");
        }
        if ((v88 & 1) != 0)
        {
          if (objc_msgSend(v14, "fileIngestionType") || !v123)
          {
            if ((v123 & 2) == 0)
            {
              v92 = v123 & 0xFFF6 | 1;
LABEL_78:
              v93 = v92;
              -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", v92);
              v94 = (void *)objc_opt_class();
              v95 = -[PLManagedAsset videoCpDurationValue](self, "videoCpDurationValue");
              v96 = -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset");
              objc_msgSend(v124, "path");
              v97 = (void *)objc_claimAutoreleasedReturnValue();
              v98 = objc_msgSend(v94, "isPhotoIrisPlaceholderWithPhotoIris:videoCpDuration:isCloudShared:videoCpFilePath:", 1, v95, v96, v97);

              -[PLManagedAsset updatePlaybackStyleWithLivePhotoPlayability:](self, "updatePlaybackStyleWithLivePhotoPlayability:", objc_msgSend((id)objc_opt_class(), "canPlayPhotoIrisWithPhotoIris:photoIrisPlaceholder:hasAdjustments:videoCpVisibilityState:", 1, v98, 1, v93));
              goto LABEL_79;
            }
            -[PLManagedAsset setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:](self, "setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:", 0);
          }
          else
          {
            PLMigrationGetLog();
            v91 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v91, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)location = 67109120;
              *(_DWORD *)&location[4] = v123;
              _os_log_impl(&dword_199541000, v91, OS_LOG_TYPE_INFO, "The video complement is missing, and we are perserving existing PLVideoComplementVisibilityState on rebuild: %hu", location, 8u);
            }

          }
LABEL_77:
          v92 = v123;
          goto LABEL_78;
        }
LABEL_79:

        goto LABEL_80;
      }
      PLPhotoEditGetLog();
      v83 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v14, "adjustmentSecondaryDataURL");
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)location = 138412546;
        *(_QWORD *)&location[4] = v84;
        v148 = 2112;
        v149 = v41;
        _os_log_impl(&dword_199541000, v83, OS_LOG_TYPE_ERROR, "Failed to ingest adjustment secondary data %@: %@", location, 0x16u);

      }
      v85 = (void *)MEMORY[0x1E0CB35C8];
      v86 = *MEMORY[0x1E0CB2938];
      v141[0] = *MEMORY[0x1E0CB3388];
      v141[1] = v86;
      v142[0] = v41;
      v142[1] = CFSTR("Failed to ingest adjustment secondary data");
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v142, v141, 2);
      v87 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v85, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47011, v87);
      v53 = (id)objc_claimAutoreleasedReturnValue();

LABEL_32:
      goto LABEL_33;
    }
    v45 = (void *)MEMORY[0x1E0D73208];
    objc_msgSend(v14, "renderedVideoPosterContentURL");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v135 = 0;
    v47 = objc_msgSend(v45, "ingestItemAtURL:toURL:type:options:capabilities:error:", v46, v131, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v135);
    v48 = v135;

    if ((v47 & 1) != 0)
    {
      PLPhotoEditGetLog();
      v49 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)location = 138412290;
        *(_QWORD *)&location[4] = v131;
        _os_log_impl(&dword_199541000, v49, OS_LOG_TYPE_DEBUG, "Ingested video poster to %@", location, 0xCu);
      }
    }
    else
    {
      if ((PLIsErrorFileNotFound() & 1) != 0)
      {
LABEL_43:

        goto LABEL_44;
      }
      PLPhotoEditGetLog();
      v49 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v14, "renderedVideoPosterContentURL");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)location = 138412546;
        *(_QWORD *)&location[4] = v62;
        v148 = 2112;
        v149 = v48;
        _os_log_impl(&dword_199541000, v49, OS_LOG_TYPE_ERROR, "Nonfatal - error ingesting video poster %@: %@", location, 0x16u);

      }
    }

    goto LABEL_43;
  }
LABEL_81:
  if (objc_msgSend(v14, "shouldUpdateAttributes"))
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v99 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "mainFileMetadata");
    v100 = (void *)objc_claimAutoreleasedReturnValue();
    v132 = 0;
    v101 = -[PLManagedAsset updateAttributesFromMainFileURL:mainFileMetadata:fullSizeRenderURL:error:](self, "updateAttributesFromMainFileURL:mainFileMetadata:fullSizeRenderURL:error:", v99, v100, v18, &v132);
    v53 = v132;

    if (!v101 || v126)
    {
      if (v101)
      {
        v102 = 1;
        goto LABEL_105;
      }
LABEL_33:
      v54 = v53;
      v55 = v54;
      if (a9)
      {
        v55 = objc_retainAutorelease(v54);
        v56 = 0;
        *a9 = v55;
      }
      else
      {
        v56 = 0;
      }
      goto LABEL_114;
    }
  }
  else
  {
    v53 = 0;
    v102 = 1;
    if (v126)
      goto LABEL_105;
  }
  if (objc_msgSend(v14, "shouldUpdateAttributes"))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v103, "unmanagedAdjustment");
    v104 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v104)
    {
LABEL_103:

      goto LABEL_104;
    }
    v127 = objc_msgSend(v104, "adjustmentRenderTypes");
    v105 = -[PLManagedAsset updateAdjustmentRenderTypes:withAdjustmentState:](self, "updateAdjustmentRenderTypes:withAdjustmentState:", -[PLManagedAsset updateAdjustmentRenderTypes:withDepthType:](self, "updateAdjustmentRenderTypes:withDepthType:", v127, -[PLManagedAsset depthType](self, "depthType")), -[PLManagedAsset cameraProcessingAdjustmentState](self, "cameraProcessingAdjustmentState"));
    objc_msgSend(v129, "objectForKeyedSubscript:", *MEMORY[0x1E0D73370]);
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v129, "objectForKeyedSubscript:", *MEMORY[0x1E0D73380]);
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v129, "objectForKeyedSubscript:", *MEMORY[0x1E0D73388]);
    v108 = (void *)objc_claimAutoreleasedReturnValue();
    v109 = -[PLManagedAsset updateAdjustmentRenderTypes:withAdjustmentData:formatIdentifier:formatVersion:](self, "updateAdjustmentRenderTypes:withAdjustmentData:formatIdentifier:formatVersion:", v105, v106, v107, v108);

    if (v18)
    {
      if (-[PLManagedAsset isVideo](self, "isVideo"))
      {
        objc_msgSend(MEMORY[0x1E0C8AF90], "assetWithURL:", v18);
        v110 = (void *)objc_claimAutoreleasedReturnValue();
        if (v110)
        {
          v111 = -[PLManagedAsset playbackVariationFromAVAsset:isLivePhotoVideoComplement:](self, "playbackVariationFromAVAsset:isLivePhotoVideoComplement:", v110, 0);
          v112 = -[PLManagedAsset updateAdjustmentRenderTypes:withPlaybackVariation:](self, "updateAdjustmentRenderTypes:withPlaybackVariation:", v109, v111);
          if (-[PLManagedAsset playbackVariation](self, "playbackVariation") != (_DWORD)v111)
            -[PLManagedAsset setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:](self, "setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:", v111);
          v109 = -[PLManagedAsset updateAdjustmentRenderTypes:forSpatialTypeOfAVAsset:](self, "updateAdjustmentRenderTypes:forSpatialTypeOfAVAsset:", v112, v110);
        }
        else
        {
          PLPhotoEditGetLog();
          v114 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v114, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)location = 138412290;
            *(_QWORD *)&location[4] = v18;
            _os_log_impl(&dword_199541000, v114, OS_LOG_TYPE_ERROR, "Unable to create AVAssest from %@", location, 0xCu);
          }

          v110 = 0;
        }
      }
      else
      {
        if (!-[PLManagedAsset isPhoto](self, "isPhoto"))
          goto LABEL_101;
        objc_msgSend(v125, "objectValue");
        v113 = (void *)objc_claimAutoreleasedReturnValue();
        v109 = -[PLManagedAsset updateAdjustmentRenderTypes:withMetadata:](self, "updateAdjustmentRenderTypes:withMetadata:", v109, v113);

        objc_msgSend(v125, "objectValue");
        v110 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setSpatialTypeFromMetadata:](self, "setSpatialTypeFromMetadata:", v110);
      }

    }
LABEL_101:
    if (v127 != (_DWORD)v109)
      objc_msgSend(v104, "setAdjustmentRenderTypes:", v109);
    goto LABEL_103;
  }
LABEL_104:
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "unmanagedAdjustment");
  v116 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset _updateAdjustmentFromAssetAdjustment:unmanagedAdjustment:fullSizeRenderURL:options:](self, "_updateAdjustmentFromAssetAdjustment:unmanagedAdjustment:fullSizeRenderURL:options:", v128, v116, v18, v14);
  v102 = 0;
LABEL_105:
  if (-[PLManagedAsset isPhoto](self, "isPhoto") && objc_msgSend(v14, "shouldUpdateAttributes"))
  {
    objc_msgSend(v14, "mainFileMetadata");
    v117 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset updatePanoramosityWithMetadata:](self, "updatePanoramosityWithMetadata:", v117);

  }
  if ((v102 & 1) != 0 || !objc_msgSend(v14, "fileIngestionType"))
  {
    v56 = 1;
    v55 = v53;
  }
  else
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v118 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v118, "unmanagedAdjustment");
    v119 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v119, "adjustmentRenderTypes"))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(v119, "adjustmentRenderTypes"));
      v120 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v129, "setObject:forKey:", v120, *MEMORY[0x1E0D73390]);

    }
    -[PLManagedAsset _writeOutAdjustmentsToFile:](self, "_writeOutAdjustmentsToFile:", v129);

    v55 = v53;
    v56 = 1;
  }
LABEL_114:

  return v56;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 forSpatialTypeOfAVAsset:(id)a4
{
  id v6;
  void *v7;
  int v8;

  v6 = a4;
  if (-[PLManagedAsset spatialType](self, "spatialType"))
  {
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVAsset:timeZoneLookup:", v6, 0);
    if (objc_msgSend(v7, "isSpatialMedia"))
      v8 = 4096;
    else
      v8 = 0;
    a3 = v8 | a3 & 0xFFFFEFFF;

  }
  return a3;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withMetadata:(id)a4
{
  int v5;

  if (objc_msgSend(a4, "isSpatialMedia"))
    v5 = 4096;
  else
    v5 = 0;
  return v5 | a3 & 0xFFFFEFFF;
}

- (BOOL)updateDeferredAdjustmentWithFullSizeRenderImageURL:(id)a3 videoURL:(id)a4 videoPosterURL:(id)a5 error:(id *)a6
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  const __CFURL *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  PLMutableAssetAdjustmentOptions *v24;
  _BOOL4 v25;
  id v26;
  void *v27;
  void *v28;
  char v29;
  id v30;
  NSObject *v31;
  CGImageSourceRef v32;
  id v33;
  id v34;
  uint64_t v36;
  id v37;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint8_t buf[4];
  id v48;
  __int16 v49;
  id v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  if (v9 && -[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    v12 = v9;
    objc_msgSend(v12, "pathExtension");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset uniformTypeIdentifierFromPathExtension:assetType:](PLManagedAsset, "uniformTypeIdentifierFromPathExtension:assetType:", v13, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForFullsizeRenderImageFileWithUTI:](self, "pathForFullsizeRenderImageFileWithUTI:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v15, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = 0;
  }
  else if (v10 && -[PLManagedAsset isVideo](self, "isVideo"))
  {
    v12 = v10;
    -[PLManagedAsset fileURLForFullsizeRenderVideo](self, "fileURLForFullsizeRenderVideo");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset fileURLForFullsizeRenderImage](self, "fileURLForFullsizeRenderImage");
    v17 = (const __CFURL *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v17 = 0;
    v16 = 0;
    v12 = 0;
  }
  v41 = v10;
  if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
    v18 = v10;
  else
    v18 = 0;
  v42 = v18;
  v19 = (void *)MEMORY[0x1E0C99E08];
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "dictionaryWithContentsOfFile:", v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  PLPhotoEditGetLog();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    v48 = v12;
    v49 = 2112;
    v50 = v16;
    _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_INFO, "Update deferred adjustment ingesting rendered media at source URL: %@ to destination URL: %@", buf, 0x16u);
  }

  if (objc_msgSend(v16, "isEqual:", v12))
    v23 = 0;
  else
    v23 = 3;
  v24 = objc_alloc_init(PLMutableAssetAdjustmentOptions);
  -[PLMutableAssetAdjustmentOptions setRenderedContentURL:](v24, "setRenderedContentURL:", v12);
  -[PLMutableAssetAdjustmentOptions setRenderedVideoComplementContentURL:](v24, "setRenderedVideoComplementContentURL:", v42);
  v40 = v11;
  -[PLMutableAssetAdjustmentOptions setRenderedVideoPosterContentURL:](v24, "setRenderedVideoPosterContentURL:", v11);
  -[PLMutableAssetAdjustmentOptions setFileIngestionType:](v24, "setFileIngestionType:", v23);
  -[PLMutableAssetAdjustmentOptions setShouldUpdateAttributes:](v24, "setShouldUpdateAttributes:", 1);
  v46 = 0;
  v25 = -[PLManagedAsset _ingestAndApplyMetadataChangesFromAdjustments:updateAdjustmentDictionary:options:fullSizeRenderURL:videoPosterRenderURL:isRevertToOriginal:error:](self, "_ingestAndApplyMetadataChangesFromAdjustments:updateAdjustmentDictionary:options:fullSizeRenderURL:videoPosterRenderURL:isRevertToOriginal:error:", 0, v21, v24, v16, v17, 0, &v46);
  v26 = v46;
  v27 = v26;
  if (v25)
  {
    -[PLManagedAsset _writeOutAdjustmentsToFile:](self, "_writeOutAdjustmentsToFile:", v21);
    v39 = v9;
    if (-[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") == 2
      || -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") == 9)
    {
      -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](self, "pathForAsyncAdjustedRenderPreviewImageFile");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      if (v28)
      {
        v45 = 0;
        v29 = objc_msgSend(MEMORY[0x1E0D73208], "removeItemAtPath:error:", v28, &v45);
        v30 = v45;
        if ((v29 & 1) == 0)
        {
          v37 = v30;
          PLBackendGetLog();
          v31 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            v48 = v28;
            v49 = 2112;
            v50 = v37;
            _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "Couldn't remove async render preview image %@ with error: %@", buf, 0x16u);
          }

          v30 = v37;
        }

      }
      -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 0);

    }
    if (v17 && (v32 = CGImageSourceCreateWithURL(v17, 0)) != 0)
    {
      v43 = 0;
      v44 = 0;
      +[PLManagedAsset createThumbnailImage:previewImage:withToBeReleasedImageSource:](PLManagedAsset, "createThumbnailImage:previewImage:withToBeReleasedImageSource:", &v44, &v43, v32);
      v33 = v44;
      v34 = v43;
    }
    else
    {
      v34 = 0;
      v33 = 0;
    }
    LOWORD(v36) = 0;
    -[PLManagedAsset _updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:](self, "_updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:", 1, v34, v33, 0, 0, 1, v36);

    v9 = v39;
  }
  else if (a6)
  {
    *a6 = objc_retainAutorelease(v26);
  }

  return v25;
}

- (void)_cleanupPenultimateResources
{
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  void *v14;
  int v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  const char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint32_t v22;
  id v23;
  id v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  PLBackendGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_INFO, "Cleaning up penultimate resources", buf, 2u);
  }

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "fileExistsAtPath:", v5))
  {
    v24 = 0;
    v6 = objc_msgSend(v4, "removeItemAtPath:error:", v5, &v24);
    v7 = v24;
    PLBackendGetLog();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v6)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v26 = v5;
        v10 = "Removed pathForPenultimateFullsizeRenderImageFile %@";
        v11 = v9;
        v12 = OS_LOG_TYPE_INFO;
        v13 = 12;
LABEL_9:
        _os_log_impl(&dword_199541000, v11, v12, v10, buf, v13);
      }
    }
    else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v26 = v5;
      v27 = 2112;
      v28 = v7;
      v10 = "Failed to remove pathForPenultimateFullsizeRenderImageFile %@: %@";
      v11 = v9;
      v12 = OS_LOG_TYPE_ERROR;
      v13 = 22;
      goto LABEL_9;
    }

  }
  -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 15);
  -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "fileExistsAtPath:", v14))
  {
    v23 = 0;
    v15 = objc_msgSend(v4, "removeItemAtPath:error:", v14, &v23);
    v16 = v23;
    PLBackendGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = v17;
    if (v15)
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v26 = v14;
        v19 = "Removed pathForPenultimateFullsizeRenderVideoFile %@";
        v20 = v18;
        v21 = OS_LOG_TYPE_INFO;
        v22 = 12;
LABEL_17:
        _os_log_impl(&dword_199541000, v20, v21, v19, buf, v22);
      }
    }
    else if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v26 = v14;
      v27 = 2112;
      v28 = v16;
      v19 = "Failed to remove pathForPenultimateFullsizeRenderVideoFile %@: %@";
      v20 = v18;
      v21 = OS_LOG_TYPE_ERROR;
      v22 = 22;
      goto LABEL_17;
    }

  }
  -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 20);
  -[PLManagedAsset markAsUnavailableCloudResourceOfType:](self, "markAsUnavailableCloudResourceOfType:", 25);

}

- (void)synchronouslyFetchAdjustmentDataWithCompletionHandler:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  int v20;
  NSObject *v21;
  void *v22;
  void *v23;
  unsigned int v24;
  void *v25;
  void *v26;
  void *v27;
  uint8_t buf[16];

  v4 = a3;
  if (v4)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "unmanagedAdjustment");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6 && -[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    {
      objc_msgSend(v6, "adjustmentFormatIdentifier");
      v7 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "adjustmentFormatVersion");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "editorBundleID");
      v27 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v6, "adjustmentBaseImageFormat");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "integerValue");

      -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "adjustmentTimestamp");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedObject pathManager](self, "pathManager");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "isUBF");

      v26 = (void *)v7;
      if (v14)
      {
        objc_msgSend(v12, "stringByDeletingPathExtension");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "stringByAppendingPathExtension:", CFSTR("in_flight"));
      }
      else
      {
        -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "stringByAppendingPathComponent:", CFSTR("in_flight"));
      }
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v12;

      v24 = objc_msgSend(v6, "adjustmentRenderTypes");
    }
    else
    {
      v16 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v17 = 0;
      v11 = 0;
      v27 = 0;
      v8 = 0;
    }
    v18 = objc_alloc_init(MEMORY[0x1E0CB3620]);
    objc_opt_class();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_sync_enter(v19);
    v20 = objc_msgSend(v18, "fileExistsAtPath:isDirectory:", v16, 0);
    objc_sync_exit(v19);

    if (v20)
    {
      PLBackendGetLog();
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = v17;
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "pathForMarkerFileExists. resetting adjustment", buf, 2u);
      }

      objc_msgSend(v18, "removeItemAtPath:error:", v16, 0);
      -[PLManagedAsset revertToOriginal](self, "revertToOriginal");
      v11 = 0;
      v8 = 0;
      v23 = 0;
    }
    else
    {
      v22 = v17;
      v23 = v26;
    }
    (*((void (**)(id, void *, void *, void *, uint64_t, void *, _QWORD, void *, _QWORD))v4 + 2))(v4, v23, v8, v27, v11, v22, v24, v25, 0);

  }
}

- (BOOL)setCurrentAdjustmentAsOriginalAdjustment
{
  void *v3;
  void *v4;
  NSObject *v5;
  char v6;
  id v7;
  NSObject *v8;
  BOOL v9;
  void *v10;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v4, "fileExistsAtPath:", v3) & 1) != 0)
  {
    -[PLManagedAsset pathForOriginalAdjustmentFile](self, "pathForOriginalAdjustmentFile");
    v5 = objc_claimAutoreleasedReturnValue();
    v12 = 0;
    v6 = objc_msgSend(v4, "copyItemAtPath:toPath:error:", v3, v5, &v12);
    v7 = v12;
    if ((v6 & 1) != 0)
    {
      +[PLResourceInstaller onDemand_installOriginalAdjustmentResourceIfPresentForAsset:](PLResourceInstaller, "onDemand_installOriginalAdjustmentResourceIfPresentForAsset:", self);
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = v8 != 0;
    }
    else
    {
      PLBackendGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Error copying adjustment to original adjustment with error: %@", buf, 0xCu);
      }
      v9 = 0;
    }

  }
  else
  {
    PLBackendGetLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v14 = v10;
      _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_ERROR, "Tried to set original adjustment for an asset without an adjustment: %{public}@", buf, 0xCu);

    }
    v9 = 0;
  }

  return v9;
}

- (BOOL)setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  char v7;
  BOOL v8;

  v4 = a3;
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "fileExistsAtPath:", v5);

  v8 = (v7 & 1) == 0
    && -[PLManagedAsset kindSubtype](self, "kindSubtype") == 101
    && -[PLManagedAsset _setDefaultSlowMotionAdjustmentsWithMainFileMetadata:](self, "_setDefaultSlowMotionAdjustmentsWithMainFileMetadata:", v4);

  return v8;
}

- (BOOL)_setDefaultSlowMotionAdjustmentsWithMainFileMetadata:(id)a3
{
  id v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  int v11;
  void *v12;
  void *v13;
  int v14;
  BOOL v15;
  double v16;
  unsigned int v17;
  unsigned int v18;
  id v19;
  void *v20;
  void *v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (objc_msgSend(v4, "isSyndicationOriginated"))
  {
    if (v4)
    {
      objc_msgSend(v4, "duration");
      v5 = HIDWORD(v26);
      v6 = v27;
    }
    else
    {
      v6 = 0;
      v5 = 0;
      v26 = 0uLL;
      *(_QWORD *)&v27 = 0;
    }
    v29 = v26;
    v30 = DWORD2(v26);
    objc_msgSend(v4, "nominalFrameRate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "floatValue");
    v11 = v10;
  }
  else
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C8B3C0], "assetWithURL:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      objc_msgSend(v8, "duration");
      v5 = HIDWORD(v26);
      v6 = v27;
    }
    else
    {
      v6 = 0;
      v5 = 0;
      v26 = 0uLL;
      *(_QWORD *)&v27 = 0;
    }
    v29 = v26;
    v30 = DWORD2(v26);
    objc_msgSend(MEMORY[0x1E0D75130], "tracksWithMediaType:forAsset:", *MEMORY[0x1E0C8A808], v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "firstObject");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "nominalFrameRate");
    v11 = v14;

  }
  if ((v5 & 1) != 0)
  {
    v27 = 0u;
    v28 = 0u;
    v26 = 0u;
    *(_QWORD *)&v23 = v29;
    *((_QWORD *)&v23 + 1) = __PAIR64__(v5, v30);
    *(_QWORD *)&v24 = v6;
    objc_msgSend(MEMORY[0x1E0D75308], "defaultSlowMotionTimeRangeForDuration:", &v23);
    LODWORD(v16) = v11;
    objc_msgSend(MEMORY[0x1E0D75308], "defaultSlowMotionRateForNominalFrameRate:", v16);
    v18 = v17;
    v19 = objc_alloc(MEMORY[0x1E0D75308]);
    v23 = v26;
    v24 = v27;
    v25 = v28;
    v20 = (void *)objc_msgSend(v19, "initWithSlowMotionTimeRange:rate:", &v23, COERCE_DOUBLE(__PAIR64__(DWORD1(v28), v18)));
    v15 = v20 != 0;
    if (v20)
    {
      +[PLAssetAdjustmentOptions assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:](PLAssetAdjustmentOptions, "assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:", v4);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setAdjustments:options:](self, "setAdjustments:options:", v20, v21);

    }
  }
  else
  {
    v15 = 0;
  }

  return v15;
}

- (BOOL)migrateLegacyVideoAdjustments
{
  BOOL v3;
  void *v5;
  void *v6;
  char v7;
  BOOL v8;

  if (-[PLManagedAsset kind](self, "kind") != 1)
    return 0;
  if (-[PLManagedAsset kindSubtype](self, "kindSubtype") != 101)
    return 0;
  objc_msgSend(MEMORY[0x1E0D73310], "maskForMigrateLegacyVideoAdjustmentsExclusions");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  if ((PLValidatedSavedAssetTypeApplies() & 1) != 0)
    return 0;
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "fileExistsAtPath:", v5);

  if ((v7 & 1) != 0)
    v8 = -[PLManagedAsset _migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat](self, "_migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat");
  else
    v8 = -[PLManagedAsset _migrateLegacySLMAdjustments](self, "_migrateLegacySLMAdjustments");
  v3 = v8;

  return v3;
}

- (BOOL)_migrateLegacySLMAdjustments
{
  void *v3;
  void *v4;
  int v5;
  id v6;
  void *v7;
  void *v8;
  BOOL v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  id v15;
  NSObject *v16;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset pathForLegacySlalomRegionsArchive](self, "pathForLegacySlalomRegionsArchive");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "fileExistsAtPath:", v3);

  if (v5)
  {
    v6 = objc_alloc(MEMORY[0x1E0D75308]);
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v3, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v6, "initWithURL:", v7);

    v9 = v8 != 0;
    if (v8)
    {
      objc_msgSend(v8, "adjustmentTimestamp");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v10)
      {
        -[PLManagedAsset dateCreated](self, "dateCreated");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setAdjustmentTimestamp:", v11);

      }
      +[PLAssetAdjustmentOptions assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:](PLAssetAdjustmentOptions, "assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:", 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setAdjustments:options:](self, "setAdjustments:options:", v8, v12);

    }
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 0;
    v14 = objc_msgSend(v13, "removeItemAtPath:error:", v3, &v18);
    v15 = v18;

    if (!v14 || v15)
    {
      PLMigrationGetLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v20 = v3;
        v21 = 2112;
        v22 = v15;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "_migrateLegacySLMAdjustments failed to remove %@: %@", buf, 0x16u);
      }

    }
  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  BOOL v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v20;
  _OWORD v21[3];

  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_alloc(MEMORY[0x1E0D75308]);
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v3, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithURL:", v5);

  v7 = 0;
  if (objc_msgSend(v6, "isRecognizedFormat"))
  {
    v8 = objc_alloc(MEMORY[0x1E0D75308]);
    if (v6)
      objc_msgSend(v6, "slowMotionTimeRange");
    else
      memset(v21, 0, sizeof(v21));
    objc_msgSend(v6, "slowMotionRate");
    v9 = (void *)objc_msgSend(v8, "initWithSlowMotionTimeRange:rate:", v21);
    objc_msgSend(v9, "adjustmentFormatIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "adjustmentFormatIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "isEqualToString:", v11))
    {
      objc_msgSend(v9, "adjustmentFormatVersion");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "adjustmentFormatVersion");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v12, "isEqualToString:", v13))
      {
        objc_msgSend(v9, "adjustmentData");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "adjustmentData");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = objc_msgSend(v14, "isEqualToData:", v15);

        if ((v20 & 1) != 0)
        {
          v7 = 0;
LABEL_14:

          goto LABEL_15;
        }
LABEL_11:
        objc_msgSend(v9, "adjustmentTimestamp");
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v16)
        {
          -[PLManagedAsset dateCreated](self, "dateCreated");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "setAdjustmentTimestamp:", v17);

        }
        +[PLAssetAdjustmentOptions assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:](PLAssetAdjustmentOptions, "assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:", 0);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setAdjustments:options:](self, "setAdjustments:options:", v9, v18);

        v7 = 1;
        goto LABEL_14;
      }

    }
    goto LABEL_11;
  }
LABEL_15:

  return v7;
}

- (NSString)pathForFullsizeRenderImageFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_724);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fileURL");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "path");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedAsset fileTypeForFullsizeRenderImage](self, "fileTypeForFullsizeRenderImage");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset pathForFullsizeRenderImageFileWithUTI:](self, "pathForFullsizeRenderImageFileWithUTI:", v7);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return (NSString *)v6;
}

- (id)fileTypeForFullsizeRenderImage
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  id *v8;
  BOOL v9;
  uint64_t v10;

  if (-[PLManagedAsset isPhoto](self, "isPhoto")
    && (-[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier"),
        (v3 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    v4 = (void *)v3;
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  if (!objc_msgSend((id)objc_opt_class(), "isPrimaryImageFormatForUTI:", v5))
  {
    v9 = -[PLManagedAsset isRAW](self, "isRAW");
    v8 = (id *)MEMORY[0x1E0CEC530];
    if (!v9 && -[PLManagedAsset hdrType](self, "hdrType") == 11)
      v8 = (id *)MEMORY[0x1E0CEC508];
    goto LABEL_11;
  }
  objc_msgSend((id)*MEMORY[0x1E0CEC510], "identifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "isEqualToString:", v6);

  if ((v7 & 1) != 0)
  {
    v8 = (id *)MEMORY[0x1E0CEC508];
LABEL_11:
    objc_msgSend(*v8, "identifier");
    v10 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v10;
  }
  return v5;
}

- (id)pathForFullsizeRenderImageFileWithUTI:(id)a3
{
  id v4;
  void *v5;
  int v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v4 = a3;
  if (!v4)
  {
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  -[PLManagedObject pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isUBF");

  if (v6)
  {
    v7 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v7, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v8, -[PLManagedAsset bundleScope](self, "bundleScope"), v4, 2, 65938);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
  }
  else
  {
    objc_msgSend((id)objc_opt_class(), "preferredFileExtensionForType:", v4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "lowercaseString");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", CFSTR("FullSizeRender"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByAppendingPathExtension:", v9);
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

- (id)pathForSubstandardFullsizeRenderImageFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 65937);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("SubstandardFullSizeRender.jpg"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForBestAvailableFullsizeRenderImageFileOutIsSubstandard:(BOOL *)a3
{
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  objc_msgSend(MEMORY[0x1E0D73208], "fileManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "fileExistsAtPath:", v6))
    goto LABEL_22;
  v7 = v6;
  v8 = v7;
  if (a3)
    *a3 = 0;
  v9 = v7;
  if (!v7)
  {
LABEL_22:
    objc_msgSend((id)*MEMORY[0x1E0CEC508], "identifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset pathForFullsizeRenderImageFileWithUTI:](self, "pathForFullsizeRenderImageFileWithUTI:", v10);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!objc_msgSend(v5, "fileExistsAtPath:", v8))
      goto LABEL_9;
    v11 = v8;
    v8 = v11;
    if (a3)
      *a3 = 0;
    v9 = v11;
    if (!v11)
    {
LABEL_9:
      -[PLManagedAsset pathForSubstandardFullsizeRenderImageFile](self, "pathForSubstandardFullsizeRenderImageFile");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (!objc_msgSend(v5, "fileExistsAtPath:", v12))
        goto LABEL_14;
      v13 = v12;
      v8 = v13;
      if (a3)
        *a3 = 1;
      v9 = v13;
      if (!v13)
      {
        v12 = 0;
LABEL_14:
        -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](self, "pathForAsyncAdjustedRenderPreviewImageFile");
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v5, "fileExistsAtPath:", v9))
        {
          v14 = v9;
          v8 = v14;
          if (a3)
            *a3 = 1;
          v9 = v14;
        }
        else
        {
          v8 = 0;
        }
      }
    }
  }

  return v8;
}

- (id)pathForTransientVideoPosterFramePreview
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 65948);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("VideoPosterFramePreview.jpg"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForLocalVideoKeyFrame
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 3, 65749);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedAsset thumbnailIdentifier](self, "thumbnailIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      v13 = objc_alloc(MEMORY[0x1E0CB3998]);
      -[PLManagedAsset thumbnailIdentifier](self, "thumbnailIdentifier");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = (void *)objc_msgSend(v13, "initWithString:", v14);

      objc_msgSend(v15, "path");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

    }
    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "photoDirectoryWithType:createIfNeeded:error:", 30, 1, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByAppendingPathComponent:", v9);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "stringByAppendingPathComponent:", CFSTR("LocalVideoKeyFrame.jpg"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v12;
}

- (NSString)pathForFullsizeRenderVideoFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
      v9 = 131272;
    else
      v9 = 0x20000;
    v10 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, v9);

    -[PLManagedObject pathManager](self, "pathManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "readOnlyUrlWithIdentifier:", v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", CFSTR("FullSizeRender.mov"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return (NSString *)v13;
}

- (NSString)pathForPenultimateFullsizeRenderImageFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset penultimateImageResource](self, "penultimateImageResource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "uniformTypeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  -[PLManagedAsset pathForPenultimateFullsizeRenderImageFileWithUTI:](self, "pathForPenultimateFullsizeRenderImageFileWithUTI:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v7;
}

- (id)pathForPenultimateFullsizeRenderImageFileWithUTI:(id)a3
{
  id v4;
  void *v5;
  int v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v4 = a3;
  if (!v4)
  {
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  -[PLManagedObject pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isUBF");

  if (v6)
  {
    v7 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v7, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v8, -[PLManagedAsset bundleScope](self, "bundleScope"), v4, 1, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
  }
  else
  {
    objc_msgSend((id)objc_opt_class(), "preferredFileExtensionForType:", v4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "lowercaseString");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", CFSTR("PenultimateFullSizeRender"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByAppendingPathExtension:", v9);
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

- (NSString)pathForPenultimateFullsizeRenderVideoFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 1, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("PenultimateFullSizeRender.mov"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return (NSString *)v12;
}

- (NSString)pathForAdjustmentFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5A8], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("Adjustments.plist"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return (NSString *)v12;
}

- (NSString)pathForOriginalAdjustmentFile
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isUBF"))
  {
    v4 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(MEMORY[0x1E0D752F0], "supplementalResourceAAEType");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v4, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v5, v6, v8, 0, 5);

    objc_msgSend(v3, "readOnlyUrlWithIdentifier:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "path");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend((id)*MEMORY[0x1E0D75A68], "uppercaseString");
    v9 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    objc_msgSend(v9, "UTF8String");
    -[PLManagedAsset filename](self, "filename");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset directory](self, "directory");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    PLDCIMURLForResourcePropertiesAndPathManager();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "path");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return (NSString *)v11;
}

- (id)pathForAdjustmentDataFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("Adjustments.data"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (NSString)pathForAdjustmentSecondaryDataFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v6, v7, v8, 2, 7);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("AdjustmentsSecondary.data"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return (NSString *)v12;
}

- (id)pathForCameraMetadataFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "pathManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "privateDirectoryWithSubType:createIfNeeded:error:", 9, 1, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset originalFilename](self, "originalFilename");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stringByDeletingPathExtension");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringByAppendingPathExtension:", *MEMORY[0x1E0D74A68]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "stringByAppendingPathComponent:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)pathForMediaMetadataFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 0, 327683);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("media.dat"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v12;
}

- (id)pathForVideoMetadataFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v6, v7, v8, 0, 13);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
  }
  else
  {
    v12 = *MEMORY[0x1E0D74958];
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", *MEMORY[0x1E0D74958]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByDeletingPathExtension");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingString:", *MEMORY[0x1E0D74960]);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathExtension:", v12);
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

- (id)pathForAdjustedMediaMetadataFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 327683);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByDeletingPathExtension");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringByAppendingPathExtension:", CFSTR("media.dat"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForVideoComplementFile
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v3, "shouldUseFileIdentifierForBundleScope:", -[PLManagedAsset bundleScope](self, "bundleScope"))|| -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
  {
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringByDeletingPathExtension");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "stringByAppendingPathExtension:", CFSTR("MOV"));
    v6 = objc_claimAutoreleasedReturnValue();
LABEL_4:
    v7 = (void *)v6;

    goto LABEL_5;
  }
  if (!-[PLManagedAsset isReferencedAsset](self, "isReferencedAsset"))
    goto LABEL_8;
  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 18);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fileSystemBookmark");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "fileSystemURL");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "path");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v7)
  {
LABEL_8:
    v12 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(v12, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v13, v14, v15, 0, 3);

    objc_msgSend(v3, "readOnlyUrlWithIdentifier:", v5);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "path");
    v6 = objc_claimAutoreleasedReturnValue();
    goto LABEL_4;
  }
LABEL_5:

  return v7;
}

- (id)pathForDeferredVideoComplementFile
{
  void *v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if ((v4 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "pathExtension");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *MEMORY[0x1E0D74030];
    objc_msgSend(v6, "stringByDeletingPathExtension");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingString:", v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathExtension:", v7);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v5;
}

- (id)pathForDeferredProcessingPreviewFile
{
  void *v3;
  char v4;
  __CFString *v5;
  void *v6;
  void *v7;
  int v8;
  id *v9;
  id v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if ((v4 & 1) != 0)
  {
    v5 = &stru_1E36789C0;
  }
  else
  {
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "pathExtension");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
    v9 = (id *)MEMORY[0x1E0D73E10];
    if (v8 == 10)
      v9 = (id *)MEMORY[0x1E0D74710];
    v10 = *v9;
    objc_msgSend(v6, "stringByDeletingPathExtension");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByAppendingString:", v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "stringByAppendingPathExtension:", v7);
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  return v5;
}

- (NSString)pathForSpatialOverCaptureContentFile
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (!v4)
  {
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "pathExtension");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "stringByDeletingPathExtension");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringByAppendingString:", *MEMORY[0x1E0D747B0]);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stringByAppendingPathExtension:", v13);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    goto LABEL_5;
  }
  v5 = (void *)MEMORY[0x1E0D73278];
  -[PLManagedAsset uuid](self, "uuid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset originalUniformTypeIdentifier](self, "originalUniformTypeIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v5) = objc_msgSend(v5, "isValidFileIdentifierParametersForUUID:utiString:originalFilename:", v6, v7, 0);

  v8 = 0;
  if ((_DWORD)v5)
  {
    v9 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLManagedAsset bundleScope](self, "bundleScope");
    -[PLManagedAsset originalUniformTypeIdentifier](self, "originalUniformTypeIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v9, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v10, v11, v12, 0, 10);

    -[PLManagedObject pathManager](self, "pathManager");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "readOnlyUrlWithIdentifier:", v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "path");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_5:

  }
  return (NSString *)v8;
}

- (NSString)pathForVideoComplementSpatialOverCaptureContentFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v6, v7, v8, 0, 11);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "pathExtension");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByDeletingPathExtension");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingString:", *MEMORY[0x1E0D747B0]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByAppendingPathExtension:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return (NSString *)v12;
}

- (id)pathForFullsizeImageFile
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    -[PLManagedAsset pathForAdjustedFullsizeImageFile](self, "pathForAdjustedFullsizeImageFile");
  else
    -[PLManagedAsset pathForNonAdjustedFullsizeImageFile](self, "pathForNonAdjustedFullsizeImageFile");
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)pathForNonAdjustedFullsizeImageFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 0, 65737);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("full.JPG"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v12;
}

- (id)pathForAsyncAdjustedRenderPreviewImageFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 65941);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("AsyncRenderPreview.JPG"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForLargeSizeImageFile
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    -[PLManagedAsset pathForAdjustedLargeSizeImageFile](self, "pathForAdjustedLargeSizeImageFile");
  else
    -[PLManagedAsset pathForNonAdjustedLargeSizeImageFile](self, "pathForNonAdjustedLargeSizeImageFile");
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)pathForNonAdjustedLargeSizeImageFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 0, 65739);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("large.JPG"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v12;
}

- (id)pathForAdjustedLargeSizeImageFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 65739);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByDeletingPathExtension");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringByAppendingPathExtension:", CFSTR("large.JPG"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (NSString)pathForLargeThumbnailFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset fileURLForLargeThumbnailFile](self, "fileURLForLargeThumbnailFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (id)pathForNonAdjustedLargeThumbnailFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset fileURLForNonAdjustedLargeThumbnailFile](self, "fileURLForNonAdjustedLargeThumbnailFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)pathForAdjustedLargeThumbnailFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset fileURLForAdjustedLargeThumbnailFile](self, "fileURLForAdjustedLargeThumbnailFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)pathForWallpaperComputeResourcesFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v6, v7, v8, 3, 14, 327687, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForComputeDirectory](self, "pathForComputeDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("WallpaperComputeResources.dat"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForGenerativePlaygroundFaceResourcesFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v6, v7, v8, 3, 14, 327693, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForComputeDirectory](self, "pathForComputeDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("GenerativePlaygroundFaceResources.dat"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForAlchemistImage
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = (void *)objc_opt_class();
  -[PLManagedAsset uuid](self, "uuid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[PLManagedAsset bundleScope](self, "bundleScope");
  -[PLManagedAsset directory](self, "directory");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset filename](self, "filename");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pathManager](self, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "pathForAlchemistImageWithUUID:bundleScope:directory:filename:pathManager:", v4, v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (NSURL)fileURLForLargeThumbnailFile
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    -[PLManagedAsset fileURLForAdjustedLargeThumbnailFile](self, "fileURLForAdjustedLargeThumbnailFile");
  else
    -[PLManagedAsset fileURLForNonAdjustedLargeThumbnailFile](self, "fileURLForNonAdjustedLargeThumbnailFile");
  return (NSURL *)(id)objc_claimAutoreleasedReturnValue();
}

- (id)fileURLForNonAdjustedLargeThumbnailFile
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "shouldUseFileIdentifierForBundleScope:", -[PLManagedAsset bundleScope](self, "bundleScope")))
  {
    v4 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v4, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v5, v6, v7, 0, 65741);

    objc_msgSend(v3, "readOnlyUrlWithIdentifier:", v8);
  }
  else
  {
    objc_msgSend((id)objc_opt_class(), "extensionForLargeThumbnailFile");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset fileURLForMetadataWithExtension:](self, "fileURLForMetadataWithExtension:", v8);
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)fileURLForAdjustedLargeThumbnailFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 65741);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "stringByDeletingPathExtension");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend((id)objc_opt_class(), "extensionForLargeThumbnailFile");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByAppendingPathExtension:", v14);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = (void *)MEMORY[0x1E0C99E98];
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", v9);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "fileURLWithPath:isDirectory:", v16, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v11;
}

- (id)fileURLForOriginalVideoComplement
{
  void *v2;
  void *v3;

  -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v2, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

- (id)fileURLForFullsizeRenderVideo
{
  void *v2;
  void *v3;

  -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v2, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

- (id)fileURLForAsyncAdjustedRenderPreviewImage
{
  void *v2;
  void *v3;

  -[PLManagedAsset pathForAsyncAdjustedRenderPreviewImageFile](self, "pathForAsyncAdjustedRenderPreviewImageFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v2, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

- (id)fileURLForCurrentDeferredProcessingPreviewFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset pathForDeferredProcessingPreviewFile](self, "pathForDeferredProcessingPreviewFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v2, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

- (NSString)pathForMediumThumbnailFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset fileURLForMediumThumbnailFile](self, "fileURLForMediumThumbnailFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (id)pathForNonAdjustedMediumThumbnailFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset fileURLForNonAdjustedMediumThumbnailFile](self, "fileURLForNonAdjustedMediumThumbnailFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)pathForAdjustedMediumThumbnailFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset fileURLForAdjustedMediumThumbnailFile](self, "fileURLForAdjustedMediumThumbnailFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)fileURLForMediumThumbnailFile
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    -[PLManagedAsset fileURLForAdjustedMediumThumbnailFile](self, "fileURLForAdjustedMediumThumbnailFile");
  else
    -[PLManagedAsset fileURLForNonAdjustedMediumThumbnailFile](self, "fileURLForNonAdjustedMediumThumbnailFile");
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)pathForMediumVideoFile
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    -[PLManagedAsset pathForAdjustedMediumVideoFile](self, "pathForAdjustedMediumVideoFile");
  else
    -[PLManagedAsset pathForNonAdjustedMediumVideoFile](self, "pathForNonAdjustedMediumVideoFile");
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)fileURLForNonAdjustedMediumThumbnailFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 0, 65743);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend((id)objc_opt_class(), "extensionForMediumThumbnailFile");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset fileURLForMetadataWithExtension:](self, "fileURLForMetadataWithExtension:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v11;
}

- (id)fileURLForAdjustedMediumThumbnailFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 65743);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "stringByDeletingPathExtension");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend((id)objc_opt_class(), "extensionForMediumThumbnailFile");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByAppendingPathExtension:", v14);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = (void *)MEMORY[0x1E0C99E98];
    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", v9);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "fileURLWithPath:isDirectory:", v16, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v11;
}

- (id)pathForNonAdjustedMediumVideoFile
{
  void *v3;
  int v4;
  _BOOL4 v5;
  id *v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  const __CFString *v18;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  v5 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  if (v4)
  {
    v6 = (id *)MEMORY[0x1E0CEC5B0];
    if (!v5)
      v6 = (id *)MEMORY[0x1E0CEC558];
    v7 = (objc_class *)MEMORY[0x1E0D73278];
    v8 = *v6;
    v9 = [v7 alloc];
    -[PLManagedAsset uuid](self, "uuid");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(v8, "identifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
      v13 = 131275;
    else
      v13 = 131079;
    v14 = (void *)objc_msgSend(v9, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v10, v11, v12, 0, v13);

    -[PLManagedObject pathManager](self, "pathManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "readOnlyUrlWithIdentifier:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    if (v5)
      v18 = CFSTR("medium.MOV");
    else
      v18 = CFSTR("medium.MP4");
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", v18);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v17;
}

- (id)pathForNonAdjustedMediumHDRVideoFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 0, 131475);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("medium-hdr.MOV"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v12;
}

- (id)pathForNonAdjustedLargeVideoFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 0, 131077);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("large.MOV"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v12;
}

- (id)pathForAdjustedMediumVideoFile
{
  void *v3;
  int v4;
  _BOOL4 v5;
  id *v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  __CFString *v19;
  void *v20;
  void *v21;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  v5 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  if (v4)
  {
    v6 = (id *)MEMORY[0x1E0CEC5B0];
    if (!v5)
      v6 = (id *)MEMORY[0x1E0CEC558];
    v7 = (objc_class *)MEMORY[0x1E0D73278];
    v8 = *v6;
    v9 = [v7 alloc];
    -[PLManagedAsset uuid](self, "uuid");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(v8, "identifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
      v13 = 131275;
    else
      v13 = 131079;
    v14 = (void *)objc_msgSend(v9, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v10, v11, v12, 2, v13);

    -[PLManagedObject pathManager](self, "pathManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "readOnlyUrlWithIdentifier:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v18 = CFSTR("medium.MP4");
    if (v5)
      v18 = CFSTR("medium.MOV");
    v19 = v18;
    -[PLManagedAsset filename](self, "filename");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "stringByDeletingPathExtension");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "stringByAppendingPathExtension:", v19);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stringByAppendingPathComponent:", v14);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v17;
}

- (id)pathForAdjustedMediumHDRVideoFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 131475);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByDeletingPathExtension");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringByAppendingPathExtension:", CFSTR("medium-hdr.MOV"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForAdjustedLargeVideoFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC5B0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v6, v7, v8, 2, 131077);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringByDeletingPathExtension");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringByAppendingPathExtension:", CFSTR("large.MOV"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingPathComponent:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

- (id)pathForNonAdjustedSmallVideoFile
{
  void *v3;
  int v4;
  _BOOL4 v5;
  id *v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  const __CFString *v18;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  v5 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  if (v4)
  {
    v6 = (id *)MEMORY[0x1E0CEC5B0];
    if (!v5)
      v6 = (id *)MEMORY[0x1E0CEC558];
    v7 = (objc_class *)MEMORY[0x1E0D73278];
    v8 = *v6;
    v9 = [v7 alloc];
    -[PLManagedAsset uuid](self, "uuid");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(v8, "identifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
      v13 = 131277;
    else
      v13 = 131081;
    v14 = (void *)objc_msgSend(v9, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v10, v11, v12, 0, v13);

    -[PLManagedObject pathManager](self, "pathManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "readOnlyUrlWithIdentifier:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    if (v5)
      v18 = CFSTR("small.MOV");
    else
      v18 = CFSTR("small.MP4");
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", v18);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v17;
}

- (id)pathForAdjustedSmallVideoFile
{
  void *v3;
  int v4;
  _BOOL4 v5;
  id *v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  __CFString *v19;
  void *v20;
  void *v21;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  v5 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  if (v4)
  {
    v6 = (id *)MEMORY[0x1E0CEC5B0];
    if (!v5)
      v6 = (id *)MEMORY[0x1E0CEC558];
    v7 = (objc_class *)MEMORY[0x1E0D73278];
    v8 = *v6;
    v9 = [v7 alloc];
    -[PLManagedAsset uuid](self, "uuid");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(v8, "identifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
      v13 = 131277;
    else
      v13 = 131081;
    v14 = (void *)objc_msgSend(v9, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v10, v11, v12, 2, v13);

    -[PLManagedObject pathManager](self, "pathManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "readOnlyUrlWithIdentifier:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v18 = CFSTR("small.MP4");
    if (v5)
      v18 = CFSTR("small.MOV");
    v19 = v18;
    -[PLManagedAsset filename](self, "filename");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "stringByDeletingPathExtension");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "stringByAppendingPathExtension:", v19);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset pathForAdjustmentDirectory](self, "pathForAdjustmentDirectory");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stringByAppendingPathComponent:", v14);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v17;
}

- (NSString)pathForComputeSyncWrapperFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v6, v7, v8, 3, 14, 327689, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForComputeDirectory](self, "pathForComputeDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("ComputeSyncWrapper.dat"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return (NSString *)v12;
}

- (NSString)pathForComputeSyncMediaAnalysisPayloadFile
{
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isUBF");

  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v5, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v6, v7, v8, 3, 14, 327691, 0);

    -[PLManagedObject pathManager](self, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "readOnlyUrlWithIdentifier:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForComputeDirectory](self, "pathForComputeDirectory");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAppendingPathComponent:", CFSTR("ComputeSyncMediaAnalysisPayload.dat"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return (NSString *)v12;
}

- (NSURL)mainFileURL
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  if (!-[PLManagedAsset isReferencedAsset](self, "isReferencedAsset"))
    goto LABEL_3;
  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fileSystemBookmark");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fileSystemURL");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
LABEL_3:
    -[PLManagedAsset directory](self, "directory");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      v6 = (void *)MEMORY[0x1E0C99E98];
      -[PLManagedObject pathManager](self, "pathManager");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset directory](self, "directory");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset filename](self, "filename");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "assetMainFilePathWithDirectory:filename:bundleScope:", v8, v9, -[PLManagedAsset bundleScope](self, "bundleScope"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "fileURLWithPath:isDirectory:", v10, 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  return (NSURL *)v5;
}

- (NSURL)persistedFileSystemAttributesFileURL
{
  void *v3;

  if (-[PLManagedAsset hasDeferredProcessingPreviewFile](self, "hasDeferredProcessingPreviewFile")
    && !-[PLManagedAsset hasOriginalFile](self, "hasOriginalFile"))
  {
    -[PLManagedAsset fileURLForCurrentDeferredProcessingPreviewFile](self, "fileURLForCurrentDeferredProcessingPreviewFile");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return (NSURL *)v3;
}

- (NSString)pathForOriginalFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)getFileURL:(id *)a3 originalFilename:(id *)a4 uti:(id *)a5 fileSize:(unint64_t *)a6 forSidecarMatchingUTI:(id)a7 requireExactMatch:(BOOL)a8
{
  void *v13;
  void *v14;
  void *v15;
  id v16;

  objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", a7);
  v16 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset sidecarFileMatchingContentType:requireExactMatch:requireSort:](self, "sidecarFileMatchingContentType:requireExactMatch:requireSort:");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (a3)
  {
    objc_msgSend(v13, "fileURL");
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }
  if (a6)
  {
    objc_msgSend(v14, "compressedSize");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *a6 = objc_msgSend(v15, "unsignedLongLongValue");

  }
  if (a4)
  {
    objc_msgSend(v14, "originalFilename");
    *a4 = (id)objc_claimAutoreleasedReturnValue();
  }
  if (a5)
  {
    objc_msgSend(v14, "uniformTypeIdentifier");
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }

}

- (id)allFileExtensions
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;

  v3 = (void *)MEMORY[0x1E0C99DE8];
  -[PLManagedAsset sidecars](self, "sidecars");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "arrayWithCapacity:", objc_msgSend(v4, "count") + 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "pathExtension");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v7, "length"))
    objc_msgSend(v5, "addObject:", v7);
  -[PLManagedAsset sidecars](self, "sidecars");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __35__PLManagedAsset_allFileExtensions__block_invoke;
  v11[3] = &unk_1E3663B70;
  v9 = v5;
  v12 = v9;
  objc_msgSend(v8, "enumerateObjectsUsingBlock:", v11);

  return v9;
}

- (NSArray)allUniformTypeIdentifiers
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[4];
  id v13;

  v3 = (void *)MEMORY[0x1E0C99DE8];
  -[PLManagedAsset sidecars](self, "sidecars");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "arrayWithCapacity:", objc_msgSend(v4, "count") + 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "addObject:", v7);

  }
  else
  {
    objc_msgSend(v5, "addObject:", &stru_1E36789C0);
  }

  -[PLManagedAsset sidecars](self, "sidecars");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "count");

  if (v9)
  {
    -[PLManagedAsset sortedSidecarFiles](self, "sortedSidecarFiles");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __43__PLManagedAsset_allUniformTypeIdentifiers__block_invoke;
    v12[3] = &unk_1E36775E8;
    v13 = v5;
    objc_msgSend(v10, "enumerateObjectsUsingBlock:", v12);

  }
  return (NSArray *)v5;
}

- (NSString)fileExtension
{
  void *v2;
  void *v3;

  -[PLManagedAsset filename](self, "filename");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "pathExtension");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (NSString)pathForMetadataDirectory
{
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  -[PLManagedAsset directory](self, "directory");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isUBF");

    v6 = (void *)MEMORY[0x1E0C99E98];
    -[PLManagedObject pathManager](self, "pathManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v5)
    {
      objc_msgSend(v7, "photoDirectoryWithType:", 10);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "stringByAppendingPathComponent:", v3);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "fileURLWithPath:isDirectory:", v10, 1);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      objc_msgSend(v7, "photoMetadataDirectoryForMediaInMainDirectory:", v3);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "fileURLWithPath:isDirectory:", v9, 1);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
    }

  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v11, "path");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v12;
}

- (id)pathForMetadataWithExtension:(id)a3
{
  void *v3;
  void *v4;

  -[PLManagedAsset fileURLForMetadataWithExtension:](self, "fileURLForMetadataWithExtension:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "path");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)fileURLForMetadataWithExtension:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = a3;
  -[PLManagedAsset directory](self, "directory");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset filename](self, "filename");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "URLForMetadataWithExtension:forMediaInMainDirectory:withFilename:", v4, v5, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (NSURL)fileURLForThumbnailFile
{
  return (NSURL *)-[PLManagedAsset fileURLForMetadataWithExtension:](self, "fileURLForMetadataWithExtension:", CFSTR("THM"));
}

- (id)fileURLForFullsizeRenderImage
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0C99E98];
  -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fileURLWithPath:isDirectory:", v3, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (NSString)pathForTrimmedVideoFile
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  -[PLManagedAsset pathForVideoFile](self, "pathForVideoFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "stringByDeletingPathExtension");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringByAppendingPathExtension:", CFSTR("TRIM.MOV"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return (NSString *)v5;
}

- (NSString)pathForVideoPreviewFile
{
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    -[PLManagedAsset pathForAdjustedLargeThumbnailFile](self, "pathForAdjustedLargeThumbnailFile");
  else
    -[PLManagedAsset pathForNonAdjustedLargeThumbnailFile](self, "pathForNonAdjustedLargeThumbnailFile");
  return (NSString *)(id)objc_claimAutoreleasedReturnValue();
}

- (NSString)pathForVideoFile
{
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;

  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_opt_new();
    v5 = objc_msgSend(v4, "fileExistsAtPath:isDirectory:", v3, 0);

    if ((v5 & 1) == 0)
    {
      if (-[PLManagedAsset hasNonSlomoAdjustments](self, "hasNonSlomoAdjustments"))
      {
        v6 = 0;
      }
      else
      {
        -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
        v6 = objc_claimAutoreleasedReturnValue();
      }

      v3 = (void *)v6;
    }
  }
  else
  {
    v3 = 0;
  }
  return (NSString *)v3;
}

- (NSString)pathForLargeDisplayableImageFile
{
  id v2;
  id v4;

  v4 = 0;
  v2 = +[PLResourceChooser fileReservationForLargeDisplayableImageFileForAsset:format:allowMetadataSnapshot:forceLarge:outFilePath:outImageType:](PLResourceChooser, "fileReservationForLargeDisplayableImageFileForAsset:format:allowMetadataSnapshot:forceLarge:outFilePath:outImageType:", self, 0, 0, 0, &v4, 0);
  return (NSString *)v4;
}

- (void)generateLargeThumbnailFileIfNecessary
{
  void *v3;
  id v4;
  void *v5;
  const __CFData *v6;
  void *v7;
  void *v8;
  const __CFDictionary *v9;
  CGImageSourceRef v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  v4 = objc_alloc(MEMORY[0x1E0C99D50]);
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (const __CFData *)objc_msgSend(v4, "initWithContentsOfFile:options:error:", v5, 8, 0);

  if (-[__CFData length](v6, "length"))
  {
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v12 = *MEMORY[0x1E0CBD2A8];
      -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v13[0] = v8;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, &v12, 1);
      v9 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v9 = 0;
    }

    v10 = CGImageSourceCreateWithData(v6, v9);
    LOBYTE(v11) = 0;
    -[PLManagedAsset generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:](self, "generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:", v10, v6, 0, 0, 0, 0, 0, v11);
    if (v10)
      CFRelease(v10);

  }
  objc_autoreleasePoolPop(v3);
}

- (void)_asyncGenerateRenderImageFileWithSize:(CGSize)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 adjustmentDataBlob:(id)a6 originalImageFilePath:(id)a7 originalImageEXIFOrientation:(int64_t)a8 renderedImageFilePath:(id)a9 completionHandler:(id)a10
{
  id v17;
  id v18;
  id v19;
  PLPhotoEditPersistenceManager *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  PLPhotoEditSource *v31;
  void *v32;
  PLPhotoEditPersistenceManager *v33;
  PLPhotoEditRenderer *v34;
  void *v35;
  void *v36;
  NSObject *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD v43[4];
  id v44;
  id v45;
  id v46;
  id v47;
  CMTime time;
  uint8_t buf[4];
  void *v50;
  __int16 v51;
  id v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v42 = a7;
  v41 = a9;
  v40 = a10;
  v17 = a6;
  v18 = a5;
  v19 = a4;
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v38, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 10536, CFSTR("_asyncGenerateRenderImageFileWithSize is only safe from inside of assetsd!"));

  }
  v20 = objc_alloc_init(PLPhotoEditPersistenceManager);
  -[PLManagedAsset photoIrisVideoDuration](self, "photoIrisVideoDuration");
  +[PLPhotoEditImportProperties importPropertiesWithEXIFOrientation:duration:](PLPhotoEditImportProperties, "importPropertiesWithEXIFOrientation:duration:", a8, CMTimeGetSeconds(&time));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = (void *)MEMORY[0x1E0CB3940];
  v23 = objc_opt_class();
  -[PLManagedAsset uuid](self, "uuid");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "stringWithFormat:", CFSTR("<%@:%p uuid=%@, path=%@>"), v23, self, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  v47 = 0;
  -[PLPhotoEditPersistenceManager loadPhotoEditData:formatIdentifier:formatVersion:importProperties:error:](v20, "loadPhotoEditData:formatIdentifier:formatVersion:importProperties:error:", v17, v19, v18, v21, &v47);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  v28 = v47;
  if (v27)
  {
    v29 = v42;
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v42, 0);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = -[PLPhotoEditSource initWithURL:type:image:useEmbeddedPreview:]([PLPhotoEditSource alloc], "initWithURL:type:image:useEmbeddedPreview:", v30, 0, 0, 0);
    v39 = v28;
    v32 = v21;
    v33 = v20;
    v34 = -[PLPhotoEditRenderer initWithEditSource:]([PLPhotoEditRenderer alloc], "initWithEditSource:", v31);
    -[PLPhotoEditRenderer setCompositionController:](v34, "setCompositionController:", v27);
    v43[0] = MEMORY[0x1E0C809B0];
    v43[1] = 3221225472;
    v43[2] = __197__PLManagedAsset__asyncGenerateRenderImageFileWithSize_formatIdentifier_formatVersion_adjustmentDataBlob_originalImageFilePath_originalImageEXIFOrientation_renderedImageFilePath_completionHandler___block_invoke;
    v43[3] = &unk_1E3663B98;
    v35 = v41;
    v44 = v41;
    v45 = v26;
    v36 = v40;
    v46 = v40;
    -[PLPhotoEditRenderer generateJPEGImageDataWithCompressionQuality:livePhotoPairingIdentifier:completionHandler:](v34, "generateJPEGImageDataWithCompressionQuality:livePhotoPairingIdentifier:completionHandler:", 0, v43, 0.899999976);

    v20 = v33;
    v21 = v32;
    v28 = v39;

  }
  else
  {
    PLBackendGetLog();
    v37 = objc_claimAutoreleasedReturnValue();
    v35 = v41;
    v29 = v42;
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v50 = v26;
      v51 = 2112;
      v52 = v28;
      _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_ERROR, "Could not upgrade substandard render for %@ ([PLPhotoEditPersistenceManager loadPhotoEditData:] failed. Error: %@)", buf, 0x16u);
    }

    v36 = v40;
    (*((void (**)(id, _QWORD, double, double))v40 + 2))(v40, 0, *MEMORY[0x1E0C9D820], *(double *)(MEMORY[0x1E0C9D820] + 8));
  }

}

- (void)synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:(id)a3 withCompletionHandler:(id)a4
{
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v14;
  void *v15;
  _QWORD v16[5];
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint8_t buf[16];

  v7 = a3;
  v8 = a4;
  v9 = (void *)MEMORY[0x19AEC1554]();
  if ((PLIsAssetsd() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset.m"), 10567, CFSTR("synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath is only safe from inside of assetsd!"));

  }
  v10 = objc_alloc_init(MEMORY[0x1E0CB3620]);
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForSubstandardFullsizeRenderImageFile](self, "pathForSubstandardFullsizeRenderImageFile");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v10, "fileExistsAtPath:", v12) & 1) == 0)
  {
    PLBackendGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Synchronously generating full size render for a modern async render. This should never happen.", buf, 2u);
    }

  }
  if (!v7)
  {
    -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
    v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  if ((objc_msgSend(v10, "fileExistsAtPath:", v7) & 1) == 0
    && objc_msgSend(v10, "fileExistsAtPath:", v11)
    && objc_msgSend(v10, "fileExistsAtPath:", v12))
  {
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke;
    v16[3] = &unk_1E3663BE8;
    v16[4] = self;
    v17 = v11;
    v18 = v7;
    v19 = v10;
    v20 = v12;
    v21 = v8;
    -[PLManagedAsset synchronouslyFetchAdjustmentBlobWithCompletionHandler:](self, "synchronouslyFetchAdjustmentBlobWithCompletionHandler:", v16);

  }
  else
  {
    v14 = +[PLResourceInstaller onDemand_installAdjustedFullSizeRenderResourceAtFilePath:forAsset:](PLResourceInstaller, "onDemand_installAdjustedFullSizeRenderResourceAtFilePath:forAsset:", v7, self);
    if (v8)
      (*((void (**)(id, id))v8 + 2))(v8, v7);
  }

  objc_autoreleasePoolPop(v9);
}

- (id)_sourceURLForAsyncEditWithBaseVersion:(int64_t)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  if (a3)
  {
    if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    {
      v4 = (void *)MEMORY[0x1E0C99E98];
      -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
      v5 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!-[PLManagedAsset isVideo](self, "isVideo"))
      {
        v7 = 0;
        return v7;
      }
      v4 = (void *)MEMORY[0x1E0C99E98];
      -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
      v5 = objc_claimAutoreleasedReturnValue();
    }
    v6 = (void *)v5;
    objc_msgSend(v4, "fileURLWithPath:isDirectory:", v5, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    if (-[PLManagedAsset isRAWPlusJPEGWithRAWOnTop](self, "isRAWPlusJPEGWithRAWOnTop"))
      -[PLManagedAsset urlForSideCarImageFile](self, "urlForSideCarImageFile");
    else
      -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v7;
}

- (BOOL)_shouldSetupVideoComplementForAsyncEditWithBaseVersion:(int64_t)a3
{
  _BOOL4 v5;
  _BOOL4 v6;
  void *v7;
  void *v8;

  v5 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  v6 = v5;
  if (a3 && v5)
    v6 = -[PLManagedAsset canPlayPhotoIris](self, "canPlayPhotoIris");
  if (a3 == 1 && v6)
  {
    -[PLManagedAsset modernResources](self, "modernResources");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectsPassingTest:", &__block_literal_global_807);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v6) = objc_msgSend(v8, "count") != 0;

  }
  return v6;
}

- (unint64_t)deferredProcessingHash
{
  void *v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;

  -[PLManagedAsset adjustmentTimestamp](self, "adjustmentTimestamp");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hash");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedShort:", -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "hash") ^ v4;

  return v6;
}

- (void)_setupMediaConversionSourceURLCollection:(id)a3 destinationURLCollection:(id)a4 baseVersion:(int64_t)a5
{
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  int v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;

  v30 = a3;
  v8 = a4;
  -[PLManagedAsset _sourceURLForAsyncEditWithBaseVersion:](self, "_sourceURLForAsyncEditWithBaseVersion:", a5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = *MEMORY[0x1E0D47C68];
  objc_msgSend(v30, "setResourceURL:forRole:", v9, *MEMORY[0x1E0D47C68]);
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    -[PLManagedAsset fileTypeForFullsizeRenderImage](self, "fileTypeForFullsizeRenderImage");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)MEMORY[0x1E0D752F0];
    objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "preferredOrFallbackFilenameExtensionForType:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedObject pathManager](self, "pathManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "temporaryRenderContentURLForInternalRendersWithExtension:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "setResourceURL:forRole:deleteOnDeallocation:", v16, v10, 1);
    if (-[PLManagedAsset _shouldSetupVideoComplementForAsyncEditWithBaseVersion:](self, "_shouldSetupVideoComplementForAsyncEditWithBaseVersion:", a5))
    {
      v29 = v8;
      if (a5)
        -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
      else
        -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v28, 0);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = *MEMORY[0x1E0D47C70];
      objc_msgSend(v30, "setResourceURL:forRole:", v19, *MEMORY[0x1E0D47C70]);
      -[PLManagedObject pathManager](self, "pathManager");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D73148], "defaultFileExtensionForAssetType:", 1);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "temporaryRenderContentURLForInternalRendersWithExtension:", v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      v8 = v29;
      objc_msgSend(v29, "setResourceURL:forRole:deleteOnDeallocation:", v23, v20, 1);

    }
    goto LABEL_10;
  }
  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D73148], "defaultFileExtensionForAssetType:", 1);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "temporaryRenderContentURLForInternalRendersWithExtension:", v18);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "setResourceURL:forRole:deleteOnDeallocation:", v11, v10, 1);
LABEL_10:

  }
  -[PLManagedAsset pathForAdjustmentSecondaryDataFile](self, "pathForAdjustmentSecondaryDataFile");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  if (v24)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend(v25, "fileExistsAtPath:", v24);

    if (v26)
    {
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v24);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "setResourceURL:forRole:", v27, *MEMORY[0x1E0D47C60]);

    }
  }

}

- (id)_generateDeferredAdjustmentWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 retryNumber:(unint64_t)a6 canUseMegaMoc:(BOOL)a7 allowCancellationByService:(BOOL)a8 completion:(id)a9
{
  _BOOL4 v9;
  void *v13;
  void *v14;
  NSObject *v15;
  os_signpost_id_t v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  BOOL v28;
  void *v29;
  NSObject *v30;
  _BOOL4 v31;
  const char *v32;
  NSObject *v33;
  uint32_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  _BOOL4 v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  const __CFString *v68;
  void *v69;
  void *v70;
  id v72;
  id v75;
  void *v76;
  id v77;
  id v78;
  NSObject *v79;
  void *v80;
  unint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  void *v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  _QWORD v89[4];
  id v90;
  id v91;
  _QWORD v92[5];
  _QWORD v93[4];
  id v94;
  id v95;
  unint64_t v96;
  _QWORD v97[4];
  id v98;
  id v99;
  id v100;
  unint64_t v101;
  _QWORD v102[4];
  NSObject *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  _BYTE *v113;
  os_signpost_id_t v114;
  unint64_t v115;
  BOOL v116;
  _QWORD v117[4];
  id v118;
  id v119;
  id v120;
  id v121;
  _BYTE buf[24];
  uint64_t (*v123)(uint64_t, uint64_t);
  _BYTE v124[20];
  uint64_t v125;
  id v126;
  _QWORD v127[3];
  _QWORD v128[6];

  v9 = a8;
  v128[3] = *MEMORY[0x1E0C80C00];
  v77 = a3;
  v78 = a4;
  v86 = a5;
  v87 = a9;
  v81 = -[PLManagedAsset deferredProcessingHash](self, "deferredProcessingHash");
  v13 = (void *)MEMORY[0x1E0CB3940];
  -[PLManagedAsset uuid](self, "uuid");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "stringWithFormat:", CFSTR("uuid: %@, initial hash: %tu"), v14, v81);
  v88 = (void *)objc_claimAutoreleasedReturnValue();

  PLPhotoEditGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_signpost_id_generate(v15);
  v17 = v15;
  v18 = v17;
  if (v16 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    *(_QWORD *)&buf[4] = v19;
    _os_signpost_emit_with_name_impl(&dword_199541000, v18, OS_SIGNPOST_INTERVAL_BEGIN, v16, "generateDeferredAdjustment", "uuid: %{public}@", buf, 0xCu);

  }
  v79 = v18;

  PLPhotoEditGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138543362;
    *(_QWORD *)&buf[4] = v88;
    _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_INFO, "[%{public}@] Generating deferred adjustment", buf, 0xCu);
  }

  v120 = 0;
  v121 = 0;
  v21 = -[PLManagedAsset renderableAdjustmentDictionary:error:](self, "renderableAdjustmentDictionary:error:", &v121, &v120);
  v22 = v121;
  v85 = v120;
  objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73370]);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73388]);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73380]);
  v82 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
  if (!v21)
  {
    v25 = v85;
    if (v85)
    {
      v125 = *MEMORY[0x1E0CB3388];
      v126 = v85;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v126, &v125, 1);
      v26 = objc_claimAutoreleasedReturnValue();
      v25 = v85;
      v27 = (void *)v26;
    }
    else
    {
      v27 = 0;
    }
    v28 = v25 == 0;
    v80 = v27;
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47016);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    PLPhotoEditGetLog();
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);
    if (v28)
    {
      if (v31)
      {
        v68 = CFSTR("no");
        *(_DWORD *)buf = 138544386;
        *(_QWORD *)&buf[4] = v88;
        if (!v84)
          v68 = CFSTR("yes");
        *(_WORD *)&buf[12] = 2114;
        *(_QWORD *)&buf[14] = v68;
        *(_WORD *)&buf[22] = 2114;
        v123 = v82;
        *(_WORD *)v124 = 2114;
        *(_QWORD *)&v124[2] = v83;
        *(_WORD *)&v124[10] = 2112;
        *(_QWORD *)&v124[12] = v29;
        v32 = "[%{public}@] Unknown error, missing adjustmentDataBlob: %{public}@, formatIdentifier: %{public}@, formatVe"
              "rsion: %{public}@, for async edit: %@";
        v33 = v30;
        v34 = 52;
        goto LABEL_31;
      }
    }
    else if (v31)
    {
      *(_DWORD *)buf = 138543618;
      *(_QWORD *)&buf[4] = v88;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v29;
      v32 = "[%{public}@] Unable to use adjustment data for async edit: %@";
      v33 = v30;
      v34 = 22;
LABEL_31:
      _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, v32, buf, v34);
    }

    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    v92[0] = MEMORY[0x1E0C809B0];
    v92[1] = 3221225472;
    v92[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_849;
    v92[3] = &unk_1E3677AA0;
    v92[4] = self;
    v89[0] = MEMORY[0x1E0C809B0];
    v89[1] = 3221225472;
    v89[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_850;
    v89[3] = &unk_1E3675C58;
    v90 = v29;
    v91 = v87;
    v35 = v29;
    objc_msgSend(v69, "performTransaction:completionHandler:", v92, v89);

    v66 = 0;
    goto LABEL_36;
  }
  objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73368]);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v80 = v23;
  if (v23)
    v24 = objc_msgSend(v23, "integerValue");
  else
    v24 = 0;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v35 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "setObject:forKeyedSubscript:", v86, *MEMORY[0x1E0D47D78]);
  if (v9)
    v36 = 3;
  else
    v36 = 4;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "setObject:forKeyedSubscript:", v37, *MEMORY[0x1E0D47D30]);

  v38 = *MEMORY[0x1E0D47C80];
  v127[0] = *MEMORY[0x1E0D47C78];
  v127[1] = v38;
  v128[0] = v84;
  v128[1] = v82;
  v127[2] = *MEMORY[0x1E0D47C88];
  v128[2] = v83;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v128, v127, 3);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "setObject:forKeyedSubscript:", v39, *MEMORY[0x1E0D47CD0]);

  v76 = (void *)objc_opt_new();
  v40 = (void *)objc_opt_new();
  -[PLManagedAsset _setupMediaConversionSourceURLCollection:destinationURLCollection:baseVersion:](self, "_setupMediaConversionSourceURLCollection:destinationURLCollection:baseVersion:", v76, v40, v24);
  PLPhotoEditGetLog();
  v41 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
  {
    v42 = objc_msgSend(v76, "urlCount");
    v43 = objc_msgSend(v40, "urlCount");
    *(_DWORD *)buf = 138543874;
    *(_QWORD *)&buf[4] = v88;
    *(_WORD *)&buf[12] = 2048;
    *(_QWORD *)&buf[14] = v42;
    *(_WORD *)&buf[22] = 2048;
    v123 = (uint64_t (*)(uint64_t, uint64_t))v43;
    _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment with number of source URLs: %ld destination URLs: %ld", buf, 0x20u);
  }

  PLPhotoEditGetLog();
  v44 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
  {
    objc_msgSend(v76, "resourceURLForRole:", *MEMORY[0x1E0D47C68]);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    *(_QWORD *)&buf[4] = v88;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v45;
    _os_log_impl(&dword_199541000, v44, OS_LOG_TYPE_DEBUG, "[%{public}@] Main source URL: %@", buf, 0x16u);

  }
  v117[0] = MEMORY[0x1E0C809B0];
  v117[1] = 3221225472;
  v117[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke;
  v117[3] = &unk_1E3676398;
  v46 = v87;
  v119 = v46;
  v75 = v40;
  v118 = v75;
  v47 = (void *)MEMORY[0x19AEC174C](v117);
  -[PLManagedAsset objectID](self, "objectID");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "pathManager");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "capabilities");
  v51 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v123 = __Block_byref_object_copy__14262;
  *(_QWORD *)v124 = __Block_byref_object_dispose__14263;
  objc_msgSend(MEMORY[0x1E0C99D68], "now");
  *(_QWORD *)&v124[8] = objc_claimAutoreleasedReturnValue();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "shortLivedLibraryCopyByAppendingName:", "-[PLManagedAsset _generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:]");
  v53 = (void *)objc_claimAutoreleasedReturnValue();

  v102[0] = MEMORY[0x1E0C809B0];
  v102[1] = 3221225472;
  v102[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2;
  v102[3] = &unk_1E3663CE0;
  v103 = v79;
  v114 = v16;
  v54 = v53;
  v104 = v54;
  v105 = v88;
  v55 = v48;
  v106 = v55;
  v72 = v51;
  v107 = v72;
  v113 = buf;
  v116 = a7;
  v115 = a6;
  v56 = v77;
  v108 = v56;
  v57 = v78;
  v109 = v57;
  v110 = v86;
  v111 = v46;
  v58 = v47;
  v112 = v58;
  v59 = (void *)MEMORY[0x19AEC174C](v102);
  v60 = -[PLManagedAsset isPhoto](self, "isPhoto");
  v61 = *MEMORY[0x1E0D47C68];
  if (v60)
  {
    objc_msgSend(v75, "resourceURLForRole:", v61);
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
    {
      objc_msgSend(v75, "resourceURLForRole:", *MEMORY[0x1E0D47C70]);
      v63 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v63 = 0;
    }
    objc_msgSend(v35, "setObject:forKeyedSubscript:", &unk_1E375DBC0, *MEMORY[0x1E0D47D88]);
    objc_msgSend(MEMORY[0x1E0D47C08], "standardPolicy");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "setObject:forKeyedSubscript:", v70, *MEMORY[0x1E0D47D48]);

    objc_msgSend(v35, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0D47CE0]);
    v97[0] = MEMORY[0x1E0C809B0];
    v97[1] = 3221225472;
    v97[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_842;
    v97[3] = &unk_1E3663D08;
    v100 = v59;
    v65 = v62;
    v98 = v65;
    v67 = v63;
    v99 = v67;
    v101 = v81;
    objc_msgSend(v56, "convertImageAtSourceURLCollection:toDestinationURLCollection:options:completionHandler:", v76, v75, v35, v97);

    v66 = 0;
  }
  else
  {
    objc_msgSend(v75, "resourceURLForRole:", v61);
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    v93[0] = MEMORY[0x1E0C809B0];
    v93[1] = 3221225472;
    v93[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_844;
    v93[3] = &unk_1E3663D30;
    v95 = v59;
    v65 = v64;
    v94 = v65;
    v96 = v81;
    objc_msgSend(v57, "convertVideoAtSourceURLCollection:toDestinationURLCollection:options:completionHandler:", v76, v75, v35, v93);
    v66 = (void *)objc_claimAutoreleasedReturnValue();

    v67 = v95;
  }

  _Block_object_dispose(buf, 8);
LABEL_36:

  return v66;
}

- (id)generateDeferredAdjustmentForCMMPlaceholderWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 completion:(id)a6
{
  return -[PLManagedAsset _generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:](self, "_generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:", a3, a4, a5, 0, 0, 0, a6);
}

- (id)generateDeferredAdjustmentWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 allowCancellationByService:(BOOL)a6 completion:(id)a7
{
  return -[PLManagedAsset _generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:](self, "_generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:", a3, a4, a5, 0, 1, a6, a7);
}

- (BOOL)renderableAdjustmentDictionary:(id *)a3 error:(id *)a4
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  id v20;
  id v21;
  id v22;
  id v23;

  v6 = (void *)MEMORY[0x1E0C99D50];
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0;
  objc_msgSend(v6, "dataWithContentsOfFile:options:error:", v7, 0, &v23);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v23;

  if (v8)
  {
    v22 = 0;
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v8, 0, 0, &v22);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v22;

    v9 = v11;
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v10, "objectForKeyedSubscript:", *MEMORY[0x1E0D73370]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "objectForKeyedSubscript:", *MEMORY[0x1E0D73388]);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "objectForKeyedSubscript:", *MEMORY[0x1E0D73380]);
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = (void *)v14;
  if (v12)
    v16 = v13 == 0;
  else
    v16 = 1;
  v17 = v16 || v14 == 0;
  if (v17
    || (objc_msgSend(MEMORY[0x1E0D75308], "isRecognizedSlowMotionFormatWithIdentifier:version:", v14, v13) & 1) != 0)
  {
    v18 = 0;
    if (!a4)
      goto LABEL_14;
    goto LABEL_13;
  }
  v21 = v9;
  v18 = +[PLPhotoEditPersistenceManager validateAdjustmentData:formatIdentifier:formatVersion:error:](PLPhotoEditPersistenceManager, "validateAdjustmentData:formatIdentifier:formatVersion:error:", v12, v15, v13, &v21);
  v20 = v21;

  v9 = v20;
  if (a4)
LABEL_13:
    *a4 = objc_retainAutorelease(v9);
LABEL_14:
  if (a3)
    *a3 = objc_retainAutorelease(v10);

  return v18;
}

- (unsigned)expectedDeferredProcessingNeededOnAssetCreation
{
  int v3;
  void *v4;
  void *v5;

  v3 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
  if (!v3)
  {
    if (-[PLManagedAsset kind](self, "kind"))
    {
      LOWORD(v3) = 0;
    }
    else
    {
      +[PLResourceGenerator expectedLocalResourceRecipesForAsset:versions:](PLResourceGenerator, "expectedLocalResourceRecipesForAsset:versions:", self, &unk_1E37633F8);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 65737);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v4, "containsObject:", v5))
        LOWORD(v3) = 4;
      else
        LOWORD(v3) = 0;

    }
  }
  return v3;
}

- (unsigned)expectedBundleScopeBasedOnAssetLockingProperties
{
  unsigned __int16 v3;

  v3 = -[PLManagedAsset bundleScope](self, "bundleScope");
  if (!-[PLManagedAsset bundleScope](self, "bundleScope")
    || -[PLManagedAsset bundleScope](self, "bundleScope") == 4)
  {
    v3 = 4;
    if (!-[PLManagedAsset isHidden](self, "isHidden"))
    {
      if (-[PLManagedAsset isTrashed](self, "isTrashed"))
        return 4;
      else
        return 0;
    }
  }
  return v3;
}

- (NSString)pathForPrebakedLandscapeScrubberThumbnails
{
  void *v3;

  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("THL"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }
  return (NSString *)v3;
}

- (NSString)pathForPrebakedPortraitScrubberThumbnails
{
  void *v3;

  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedAsset pathForMetadataWithExtension:](self, "pathForMetadataWithExtension:", CFSTR("THP"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }
  return (NSString *)v3;
}

- (NSString)pathForXMPFile
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  -[PLManagedObject pathManager](self, "pathManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isUBF"))
  {
    v4 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(MEMORY[0x1E0D752F0], "supplementalResourceXMPType");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v4, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v5, v6, v8, 0, 5);

    objc_msgSend(v3, "readOnlyUrlWithIdentifier:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "path");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend((id)*MEMORY[0x1E0D75A70], "uppercaseString");
    v9 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    objc_msgSend(v9, "UTF8String");
    -[PLManagedAsset filename](self, "filename");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset directory](self, "directory");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    PLDCIMURLForResourcePropertiesAndPathManager();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "path");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return (NSString *)v11;
}

- (BOOL)isMogul
{
  _BOOL4 v3;

  v3 = -[PLManagedAsset isVideo](self, "isVideo");
  if (v3)
    LOBYTE(v3) = -[PLManagedAsset kindSubtype](self, "kindSubtype") == 101;
  return v3;
}

- (BOOL)isDefaultAdjustedSlomo
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  BOOL v9;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "unmanagedAdjustment");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "adjustmentFormatIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqualToString:", CFSTR("com.apple.video.slomo"));

  objc_msgSend(v4, "adjustmentFormatVersion");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v6)
  {
    if ((objc_msgSend(v7, "isEqualToString:", CFSTR("1.1")) & 1) != 0)
      LOBYTE(v6) = 1;
    else
      LOBYTE(v6) = objc_msgSend(v8, "isEqualToString:", CFSTR("1.0"));
  }
  v9 = -[PLManagedAsset isVideo](self, "isVideo") & v6;

  return v9;
}

- (NSString)pathForLegacySlalomRegionsArchive
{
  void *v3;
  void *v4;
  void *v5;

  if (-[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo"))
  {
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "stringByDeletingPathExtension");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringByAppendingPathExtension:", CFSTR("SLM"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }
  return (NSString *)v5;
}

- (NSString)pathForDiagnosticFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "lastPathComponent");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)objc_opt_class();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "diagnosticFilePathForLibrary:mainFilename:createIfNeeded:", v6, v4, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v7;
}

- (id)pathForSpatialOverCaptureDiagnosticFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset pathForSpatialOverCaptureContentFile](self, "pathForSpatialOverCaptureContentFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "lastPathComponent");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)objc_opt_class();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "diagnosticFilePathForLibrary:mainFilename:createIfNeeded:", v6, v4, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)pathForReframeDiagnosticDirectory
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "lastPathComponent");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByDeletingPathExtension");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "pathManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "privateDirectoryWithSubType:createIfNeeded:error:", 8, 0, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "stringByAppendingPathComponent:", v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)pathForReframeDiagnosticFile
{
  void *v2;
  void *v3;
  void *v4;

  -[PLManagedAsset pathForReframeDiagnosticDirectory](self, "pathForReframeDiagnosticDirectory");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByAppendingPathComponent:", *MEMORY[0x1E0D74A90]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringByAppendingPathExtension:", *MEMORY[0x1E0D74A70]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)pathForCameraMetadataDiagnosticFile
{
  void *v2;
  void *v3;
  void *v4;

  -[PLManagedAsset pathForDiagnosticFile](self, "pathForDiagnosticFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByDeletingPathExtension");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringByAppendingPathExtension:", *MEMORY[0x1E0D74A68]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)pathForCameraSpatialOverCaptureMetadataDiagnosticFile
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  -[PLManagedAsset pathForDiagnosticFile](self, "pathForDiagnosticFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByDeletingPathExtension");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringByAppendingPathExtension:", *MEMORY[0x1E0D74A98]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByAppendingPathExtension:", *MEMORY[0x1E0D74A68]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)pathForOriginalVideoComplementDiagnosticFile
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset pathForDiagnosticFile](self, "pathForDiagnosticFile");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringByDeletingPathExtension");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pathExtension");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByAppendingPathExtension:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)imageWithFormat:(unsigned __int16)a3
{
  uint64_t v3;
  id v5;

  v3 = a3;
  if (-[PLManagedAsset isInFlight](self, "isInFlight"))
  {
    if (-[PLManagedAsset isVideo](self, "isVideo"))
    {
      v5 = 0;
    }
    else
    {
      -[PLManagedAsset inflightImage](self, "inflightImage");
      v5 = (id)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    v5 = +[PLImageLoadingUtilities newSynchronousImageForAsset:withFormat:allowPlaceholder:outImageProperties:outDeliveredPlaceholder:](PLImageLoadingUtilities, "newSynchronousImageForAsset:withFormat:allowPlaceholder:outImageProperties:outDeliveredPlaceholder:", self, v3, 1, 0, 0);
  }
  return v5;
}

- (void)_getLargestAvailableDataRepresentation:(id *)a3 type:(id *)a4
{
  void *v7;
  _BOOL4 v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;

  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    objc_msgSend(0, "pathExtension");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = +[PLPhotoLibrary isRawImageFileExtension:](PLPhotoLibrary, "isRawImageFileExtension:", v7);

    v9 = 0;
    if (v8)
    {
      v18 = 0;
      v10 = +[PLResourceChooser fileReservationForLargeDisplayableImageFileForAsset:format:allowMetadataSnapshot:forceLarge:outFilePath:outImageType:](PLResourceChooser, "fileReservationForLargeDisplayableImageFileForAsset:format:allowMetadataSnapshot:forceLarge:outFilePath:outImageType:", self, 0, 0, 1, &v18, 0);
      v9 = v18;
    }
  }
  else
  {
    v9 = 0;
  }
  if (-[PLManagedAsset isVideo](self, "isVideo"))
  {
    -[PLManagedAsset pathForVideoFile](self, "pathForVideoFile");
    v11 = objc_claimAutoreleasedReturnValue();

    v9 = (id)v11;
  }
  if (!v9)
  {
    -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    if (!v9)
    {
      v17 = 0;
      v12 = +[PLResourceChooser fileReservationForLargeDisplayableImageFileForAsset:format:allowMetadataSnapshot:forceLarge:outFilePath:outImageType:](PLResourceChooser, "fileReservationForLargeDisplayableImageFileForAsset:format:allowMetadataSnapshot:forceLarge:outFilePath:outImageType:", self, 0, 0, 1, &v17, 0);
      v9 = v17;
      if (!v9)
      {
        v13 = 0;
        goto LABEL_15;
      }
    }
  }
  if (a3)
  {
    v13 = objc_retainAutorelease((id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithContentsOfFile:options:error:", v9, 1, 0));
    *a3 = v13;
    if (!a4)
      goto LABEL_15;
    goto LABEL_14;
  }
  v13 = 0;
  if (a4)
  {
LABEL_14:
    v14 = (void *)MEMORY[0x1E0CEC3F8];
    objc_msgSend(v9, "pathExtension");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "typeWithFilenameExtension:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "identifier");
    *a4 = (id)objc_claimAutoreleasedReturnValue();

  }
LABEL_15:

}

- (id)largestAvailableDataRepresentationAndType:(id *)a3
{
  id v4;

  v4 = 0;
  -[PLManagedAsset _getLargestAvailableDataRepresentation:type:](self, "_getLargestAvailableDataRepresentation:type:", &v4, a3);
  return v4;
}

- (id)pasteBoardRepresentation
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  BOOL v11;
  id v13;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset objectID](self, "objectID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "URIRepresentation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "absoluteString");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "dataUsingEncoding:", 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v8, CFSTR("com.apple.mobileslideshow.asset-object-id-uri"));

  }
  v13 = 0;
  -[PLManagedAsset largestAvailableDataRepresentationAndType:](self, "largestAvailableDataRepresentationAndType:", &v13);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v13;
  if (v10)
    v11 = v9 == 0;
  else
    v11 = 1;
  if (!v11)
    objc_msgSend(v3, "setObject:forKey:", v9, v10);

  return v3;
}

- (NSString)textBadgeString
{
  void *v3;
  void *v4;
  void *v6;
  id v7;
  __CFString *v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  -[PLManagedAsset allFileExtensions](self, "allFileExtensions");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "count") == 1
    && (-[PLManagedAsset isPhoto](self, "isPhoto")
     || -[PLManagedAsset isVideo](self, "isVideo")
     || -[PLManagedAsset isAudio](self, "isAudio")
     || -[PLManagedAsset kind](self, "kind") == 3))
  {

    objc_autoreleasePoolPop(v3);
    return (NSString *)0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v4, "count"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = 0;
    v29 = &v28;
    v30 = 0x2020000000;
    v31 = 0;
    v24 = 0;
    v25 = &v24;
    v26 = 0x2020000000;
    v27 = 0;
    v20 = 0;
    v21 = &v20;
    v22 = 0x2020000000;
    v23 = 0;
    v16 = 0;
    v17 = &v16;
    v18 = 0x2020000000;
    v19 = 0;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __33__PLManagedAsset_textBadgeString__block_invoke;
    v10[3] = &unk_1E3663D58;
    v12 = &v28;
    v7 = v6;
    v11 = v7;
    v13 = &v24;
    v14 = &v20;
    v15 = &v16;
    objc_msgSend(v4, "enumerateObjectsUsingBlock:", v10);
    if (objc_msgSend(v7, "count") == 2 && *((_BYTE *)v29 + 24) && *((_BYTE *)v25 + 24))
    {
      v8 = CFSTR("RAW+JPG");
    }
    else if (objc_msgSend(v7, "count") == 2 && *((_BYTE *)v21 + 24) && *((_BYTE *)v17 + 24))
    {
      v8 = 0;
    }
    else
    {
      objc_msgSend(v7, "componentsJoinedByString:", CFSTR("+"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "uppercaseString");
      v8 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
    _Block_object_dispose(&v16, 8);
    _Block_object_dispose(&v20, 8);
    _Block_object_dispose(&v24, 8);
    _Block_object_dispose(&v28, 8);

    objc_autoreleasePoolPop(v3);
    return (NSString *)v8;
  }
}

- (id)assetURLWithExtension:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  -[PLManagedAsset sidecars](self, "sidecars", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v18;
    while (2)
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v18 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
        objc_msgSend(v10, "originalFilename");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "pathExtension");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "compare:options:", v4, 1);

        if (!v13)
        {
          -[PLManagedAsset assetURLForSidecarFile:](self, "assetURLForSidecarFile:", v10);
          v14 = objc_claimAutoreleasedReturnValue();
          goto LABEL_11;
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      if (v7)
        continue;
      break;
    }
  }

  -[PLManagedAsset uuid](self, "uuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset assetsLibraryURLWithUUID:extension:](PLManagedAsset, "assetsLibraryURLWithUUID:extension:", v5, v4);
  v14 = objc_claimAutoreleasedReturnValue();
LABEL_11:
  v15 = (void *)v14;

  return v15;
}

- (id)assetURLForSidecarFile:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  v4 = a3;
  v5 = v4;
  if (v4)
  {
    v6 = (void *)MEMORY[0x1E0CEC3F8];
    objc_msgSend(v4, "uniformTypeIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "typeWithIdentifier:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "preferredFilenameExtension");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = (void *)MEMORY[0x1E0C99E98];
    v11 = (void *)MEMORY[0x1E0CB3940];
    -[PLManagedAsset uuid](self, "uuid");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "index");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringWithFormat:", CFSTR("%@://%@/%@.%@?%@=%@&%@=%@"), CFSTR("assets-library"), CFSTR("asset"), CFSTR("asset"), v9, CFSTR("id"), v12, CFSTR("sci"), v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "URLWithString:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v16 = (void *)MEMORY[0x1E0C99E98];
    v17 = (void *)MEMORY[0x1E0CB3940];
    -[PLManagedAsset fileExtension](self, "fileExtension");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset uuid](self, "uuid");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "stringWithFormat:", CFSTR("%@://%@/%@.%@?%@=%@"), CFSTR("assets-library"), CFSTR("asset"), CFSTR("asset"), v9, CFSTR("id"), v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "URLWithString:", v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v15;
}

- (NSURL)assetURL
{
  void *v3;
  void *v4;

  -[PLManagedAsset fileExtension](self, "fileExtension");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset assetURLWithExtension:](self, "assetURLWithExtension:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSURL *)v4;
}

- (BOOL)isPlayableVideo:(id *)a3
{
  _BOOL4 v5;
  id v6;
  BOOL v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  uint64_t v32;
  id v34;

  v5 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  if (!-[PLManagedAsset isVideo](self, "isVideo") && !v5)
  {
    v6 = 0;
    if (!a3)
    {
      v7 = 0;
      goto LABEL_40;
    }
LABEL_39:
    v7 = 0;
    *a3 = v6;
    goto LABEL_40;
  }
  v8 = (void *)MEMORY[0x19AEC1554]();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isCloudPhotoLibraryEnabled");

  if (!v10)
  {
    if (v5)
      -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    else
      -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = 0;
    v7 = 1;
    if (!v19)
      goto LABEL_36;
    goto LABEL_30;
  }
  if (v5)
    v11 = 18;
  else
    v11 = 1;
  v34 = 0;
  v12 = -[PLManagedAsset _isResourceAvailableForResourceType:outResource:](self, "_isResourceAvailableForResourceType:outResource:", v11, &v34);
  v13 = v34;
  v14 = v13;
  if (v12)
  {
    objc_msgSend(v13, "uniformTypeIdentifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "identifier");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "cplFileURL");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "path");
    v18 = (id)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend((id)objc_opt_class(), "_isPlayableVideoUTI:", v16))
    {
      if (v5)
      {
        v18 = v18;
        v6 = 0;
        v7 = 1;
        v19 = v18;
      }
      else
      {
        -[PLManagedAsset master](self, "master");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "mediaMetadata");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "valueForKey:", CFSTR("data"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();

        if (v22)
        {
          v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVProxyData:timeZoneLookup:", v22, 0);
          v24 = v23;
          if (v23)
          {
            v25 = objc_msgSend(v23, "isPlayable");
            v7 = v25;
            v6 = 0;
            if (a3 && (v25 & 1) == 0)
            {
              objc_msgSend(v24, "videoCodecName");
              v6 = (id)objc_claimAutoreleasedReturnValue();
              v7 = 0;
            }
          }
          else
          {
            v6 = 0;
            v7 = 1;
          }

        }
        else
        {
          v6 = 0;
          v7 = 1;
        }

        v19 = 0;
      }
    }
    else
    {
      v19 = 0;
      v6 = 0;
      v7 = 0;
    }
  }
  else
  {
    v18 = 0;
    v16 = 0;
    v19 = 0;
    v6 = 0;
    v7 = 1;
  }

  if (v19)
  {
LABEL_30:
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "fileExistsAtPath:", v19);

    if (v27)
    {
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v19, 0);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVURL:timeZoneLookup:", v28, 0);
      v30 = v29;
      if (v29)
      {
        v31 = objc_msgSend(v29, "isPlayable");
        v7 = v31;
        if (a3)
        {
          if ((v31 & 1) == 0)
          {
            objc_msgSend(v30, "videoCodecName");
            v32 = objc_claimAutoreleasedReturnValue();

            v7 = 0;
            v6 = (id)v32;
          }
        }
      }

    }
  }
LABEL_36:

  objc_autoreleasePoolPop(v8);
  if (a3 && !v7)
  {
    v6 = objc_retainAutorelease(v6);
    goto LABEL_39;
  }
LABEL_40:

  return v7;
}

- (id)shortenedFilePath
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;

  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "rangeOfString:", CFSTR("/Media/"));
  if (v4)
  {
    objc_msgSend(v2, "substringWithRange:", v3, objc_msgSend(v2, "length") - v3);
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = v2;
  }
  v6 = v5;

  return v6;
}

- (id)descriptionForSidecarFiles
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[PLManagedAsset sidecars](self, "sidecars");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v2);
        v8 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * i);
        if (!v5)
        {
          objc_msgSend(MEMORY[0x1E0CB37A0], "string");
          v5 = (void *)objc_claimAutoreleasedReturnValue();
        }
        objc_msgSend(v5, "appendFormat:", CFSTR("SIDECAR: %@"), v8);
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (id)descriptionForAnalysisStates
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset analysisStates](self, "analysisStates");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * v8);
        if (objc_msgSend(v3, "length"))
          objc_msgSend(v3, "appendFormat:", CFSTR("\n"));
        objc_msgSend(v9, "debugLogDescription");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "appendFormat:", CFSTR("%@"), v10);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  return v3;
}

- (id)descriptionForSceneAnalysis
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  double width;
  double v20;
  double height;
  double v22;
  double v23;
  double v24;
  void *v25;
  CGSize v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  uint64_t v33;
  NSRect v34;
  NSRect v35;

  v33 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sceneClassifications");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0CB37A0];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (int)objc_msgSend(v6, "sceneAnalysisVersion");
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "sceneAnalysisTimestamp");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringWithFormat:", CFSTR("version: %ld\ntimestamp: %@\n%lu total"), v7, v9, objc_msgSend(v4, "count"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v11 = v4;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v29;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v29 != v14)
          objc_enumerationMutation(v11);
        objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * i), "debugLogDescription");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "appendFormat:", CFSTR("\n%@"), v16);

      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
    }
    while (v13);
  }

  -[PLManagedAsset packedPreferredCropRect](self, "packedPreferredCropRect");
  -[PLManagedAsset packedAcceptableCropRect](self, "packedAcceptableCropRect");
  PLSplitToCGRectFromInt64();
  PLSplitToCGRectFromInt64();
  v27.width = 0.0 * (double)self->_width;
  v27.height = 0.0 * (double)self->_height;
  v34.origin.x = v27.width;
  v34.origin.y = v27.height;
  v34.size.width = v27.width;
  v34.size.height = v27.height;
  NSStringFromRect(v34);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v35.origin = (CGPoint)v27;
  v35.size = v27;
  NSStringFromRect(v35);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "appendFormat:", CFSTR("\nPreferred Crop Rect: %@\nAcceptable Crop Rect: %@"), v17, v18);

  if (-[PLManagedAsset faceAreaPoints](self, "faceAreaPoints") < 0)
  {
    v23 = *MEMORY[0x1E0C9D648];
    v24 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v20 = *(double *)(MEMORY[0x1E0C9D648] + 16);
    v22 = *(double *)(MEMORY[0x1E0C9D648] + 24);
  }
  else
  {
    PLSplitToDoubleFromInt64();
    width = (double)self->_width;
    v20 = (0.0 - 0.0) * width;
    height = (double)self->_height;
    v22 = (0.0 - 0.0) * height;
    v23 = 0.0 * width;
    v24 = 0.0 * height;
  }
  NSStringFromRect(*(NSRect *)&v23);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "appendFormat:", CFSTR("\nFace Area Rect: %@"), v25);

  return v10;
}

- (id)descriptionForNonCloudResources
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendString:", CFSTR("CPL not enabled, resource list may not be complete\n"));
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(CFSTR("Original"), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendString:", v5);

  -[PLManagedAsset pathForFullsizeImageFile](self, "pathForFullsizeImageFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(CFSTR("FullSize"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendString:", v7);

  -[PLManagedAsset pathForLargeThumbnailFile](self, "pathForLargeThumbnailFile");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(CFSTR("Medium (3MP)"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendString:", v9);

  -[PLManagedAsset pathForMediumThumbnailFile](self, "pathForMediumThumbnailFile");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(CFSTR("Thumb"), v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendString:", v11);

  -[PLManagedAsset pathForSubstandardFullsizeRenderImageFile](self, "pathForSubstandardFullsizeRenderImageFile");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(CFSTR("Substandard"), v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendString:", v13);

  return v3;
}

- (id)faceDescription
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  +[PLDescriptionBuilder plainMultiLineDescriptionBuilder](PLDescriptionBuilder, "plainMultiLineDescriptionBuilder");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset faceAdjustmentVersion](self, "faceAdjustmentVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:object:", CFSTR("adjustmentVersion"), v4);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:integerValue:", CFSTR("analysisVersion"), (int)objc_msgSend(v5, "faceAnalysisVersion"));

  -[PLManagedAsset detectedFaces](self, "detectedFaces");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v10), "debugLogDescription");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "appendName:object:", CFSTR("face"), v11);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }
  objc_msgSend(v3, "build");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

- (id)descriptionForModernResources
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[2];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("qualitySortValue"), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("version"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  -[PLManagedAsset resourcesSortedByQuality](self, "resourcesSortedByQuality");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v4;
  v19[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "sortedArrayUsingDescriptors:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v16;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v16 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v12), "debugDescription");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "appendFormat:", CFSTR("resource: %@\n"), v13);

        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v10);
  }

  return v3;
}

- (BOOL)visibilityStateIsEqualToState:(signed __int16)a3
{
  if (!a3)
  {
    if (-[PLManagedAsset visibilityState](self, "visibilityState"))
      return 0;
    goto LABEL_10;
  }
  if (a3 == 1)
  {
    if (-[PLManagedAsset visibilityState](self, "visibilityState") != 1)
      return 0;
LABEL_10:
    if ((-[PLManagedAsset hidden](self, "hidden") & 1) == 0)
      return !-[PLManagedAsset isInTrash](self, "isInTrash");
    return 0;
  }
  if (a3 != 2)
    return 0;
  return -[PLManagedAsset visibilityState](self, "visibilityState") == 2
      || (-[PLManagedAsset hidden](self, "hidden") & 1) != 0
      || -[PLManagedAsset isInTrash](self, "isInTrash");
}

- (BOOL)isInterestingForAvalanche
{
  return (-[PLManagedAsset avalanchePickType](self, "avalanchePickType") >> 3) & 1;
}

- (id)assetComparisonSortDescriptors
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[4];

  v7[3] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("dateCreated"), 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("addedDate"), 1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[1] = v3;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("filename"), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v7[2] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (int64_t)compareToAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v4 = a3;
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dateCreated");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "compare:", v6);

  if (!v7)
  {
    -[PLManagedAsset addedDate](self, "addedDate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "addedDate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v8, "compare:", v9);

    if (!v7)
    {
      -[PLManagedAsset filename](self, "filename");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "filename");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = objc_msgSend(v10, "compare:", v11);

    }
  }

  return v7;
}

- (NSDate)localDateCreated
{
  NSDate *cachedLocalDateCreated;
  void *v4;
  NSDate *v5;
  NSDate *v6;

  cachedLocalDateCreated = self->_cachedLocalDateCreated;
  if (!cachedLocalDateCreated)
  {
    -[PLManagedAsset pl_date](self, "pl_date");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dateByAddingTimeInterval:", (double)-[PLManagedAsset inferredTimeZoneOffset](self, "inferredTimeZoneOffset"));
    v5 = (NSDate *)objc_claimAutoreleasedReturnValue();
    v6 = self->_cachedLocalDateCreated;
    self->_cachedLocalDateCreated = v5;

    cachedLocalDateCreated = self->_cachedLocalDateCreated;
  }
  return cachedLocalDateCreated;
}

- (double)gpsHorizontalAccuracy
{
  void *v2;
  double v3;
  double v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "gpsHorizontalAccuracy");
  v4 = v3;

  return v4;
}

- (id)localDateAndCreateIfNeededWithLocalDateCreator:(id)a3
{
  id v4;
  NSDate *v5;
  NSDate *v6;
  NSDate *v7;
  void *v8;
  void *v9;
  void *v10;

  v4 = a3;
  v5 = self->_cachedLocalDateCreated;
  v6 = v5;
  if (v5)
  {
    v7 = v5;
  }
  else
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "inferredTimeZoneOffset");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v9)
    {
      objc_msgSend(v4, "generateInferredTimeZoneOffsetForAsset:", self);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setInferredTimeZoneOffset:", v10);

    }
    -[PLManagedAsset localDateCreated](self, "localDateCreated");
    v7 = (NSDate *)objc_claimAutoreleasedReturnValue();

  }
  return v7;
}

- (NSString)rawTimeZoneName
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "timeZoneName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (NSNumber)rawTimeZoneOffsetValue
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "timeZoneOffset");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSNumber *)v3;
}

- (int)inferredTimeZoneOffset
{
  void *v2;
  void *v3;
  int v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "inferredTimeZoneOffset");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "integerValue");

  return v4;
}

- (id)activityViewController:(id)a3 itemForActivityType:(id)a4
{
  if (objc_msgSend(a4, "isEqualToString:", CFSTR("com.apple.UIKit.activity.CopyToPasteboard")))
    -[PLManagedAsset pasteBoardRepresentation](self, "pasteBoardRepresentation");
  else
    -[PLManagedAsset assetURL](self, "assetURL");
  return (id)objc_claimAutoreleasedReturnValue();
}

- (CLLocationCoordinate2D)pl_coordinate
{
  double v3;
  CLLocationDegrees v4;
  CLLocationDegrees v5;
  CLLocationCoordinate2D v6;
  BOOL v7;
  CLLocationCoordinate2D *p_cachedCoordinate;
  double latitude;
  double longitude;
  CLLocationCoordinate2D result;

  if (!self->_isCoordinateCached)
  {
    -[PLManagedAsset latitude](self, "latitude");
    v4 = v3;
    -[PLManagedAsset longitude](self, "longitude");
    v6 = CLLocationCoordinate2DMake(v4, v5);
    v7 = +[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:");
    p_cachedCoordinate = &self->_cachedCoordinate;
    if (v7)
    {
      p_cachedCoordinate->latitude = v6.latitude;
      self->_cachedCoordinate.longitude = v6.longitude;
    }
    else
    {
      *p_cachedCoordinate = *(CLLocationCoordinate2D *)MEMORY[0x1E0C9E500];
    }
    self->_isCoordinateCached = 1;
  }
  latitude = self->_cachedCoordinate.latitude;
  longitude = self->_cachedCoordinate.longitude;
  result.longitude = longitude;
  result.latitude = latitude;
  return result;
}

- (NSDate)pl_date
{
  NSDate *cachedDateCreated;
  NSDate *v4;
  NSDate *v5;

  cachedDateCreated = self->_cachedDateCreated;
  if (!cachedDateCreated)
  {
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v4 = (NSDate *)objc_claimAutoreleasedReturnValue();
    v5 = self->_cachedDateCreated;
    self->_cachedDateCreated = v4;

    cachedDateCreated = self->_cachedDateCreated;
  }
  return cachedDateCreated;
}

- (double)pl_gpsHorizontalAccuracy
{
  void *v2;
  double v3;
  double v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "gpsHorizontalAccuracy");
  v4 = v3;

  return v4;
}

- (CLLocation)cachedLocation
{
  return self->_cachedLocation;
}

- (void)setCachedLocation:(id)a3
{
  objc_storeStrong((id *)&self->_cachedLocation, a3);
}

- (BOOL)isLocalOnlyDelete
{
  return self->localOnlyDelete;
}

- (void)setLocalOnlyDelete:(BOOL)a3
{
  self->localOnlyDelete = a3;
}

- (void)setAssetID:(id)a3
{
  objc_storeStrong((id *)&self->_assetID, a3);
}

- (void)setCachedNonPersistedVideoPlaybackURL:(id)a3
{
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURL, a3);
}

- (NSDate)cachedNonPersistedVideoPlaybackURLExpiration
{
  return self->cachedNonPersistedVideoPlaybackURLExpiration;
}

- (void)setCachedNonPersistedVideoPlaybackURLExpiration:(id)a3
{
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURLExpiration, a3);
}

- (NSError)cachedNonPersistedVideoPlaybackURLError
{
  return self->cachedNonPersistedVideoPlaybackURLError;
}

- (void)setCachedNonPersistedVideoPlaybackURLError:(id)a3
{
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURLError, a3);
}

- (NSObject)inflightImageInMemory
{
  return self->inflightImageInMemory;
}

- (void)setInflightImageInMemory:(id)a3
{
  objc_storeStrong((id *)&self->inflightImageInMemory, a3);
}

- (NSString)inflightImagePath
{
  return self->inflightImagePath;
}

- (void)setInflightImagePath:(id)a3
{
  objc_storeStrong((id *)&self->inflightImagePath, a3);
}

- (NSObject)inflightIndexSheetImage
{
  return self->inflightIndexSheetImage;
}

- (void)setInflightIndexSheetImage:(id)a3
{
  objc_storeStrong((id *)&self->inflightIndexSheetImage, a3);
}

- (NSDictionary)inflightMetadata
{
  return self->inflightMetadata;
}

- (void)setInflightMetadata:(id)a3
{
  objc_storeStrong((id *)&self->inflightMetadata, a3);
}

- (BOOL)needsMomentUpdate
{
  return self->_needsMomentUpdate;
}

- (void)setNeedsMomentUpdate:(BOOL)a3
{
  self->_needsMomentUpdate = a3;
}

- (BOOL)disableFileSystemPersistency
{
  return self->_disableFileSystemPersistency;
}

- (void)setDisableFileSystemPersistency:(BOOL)a3
{
  self->_disableFileSystemPersistency = a3;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->inflightMetadata, 0);
  objc_storeStrong((id *)&self->inflightIndexSheetImage, 0);
  objc_storeStrong((id *)&self->inflightImagePath, 0);
  objc_storeStrong((id *)&self->inflightImageInMemory, 0);
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURLError, 0);
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURLExpiration, 0);
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURL, 0);
  objc_storeStrong((id *)&self->_assetID, 0);
  objc_storeStrong((id *)&self->_cachedLocation, 0);
  objc_storeStrong((id *)&self->_cachedLocalDateCreated, 0);
  objc_storeStrong((id *)&self->_cachedDateCreated, 0);
  objc_storeStrong((id *)&self->_reverseGeoDescription, 0);
}

id __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  int v7;
  const __CFString *v8;
  void *v9;

  v3 = (void *)MEMORY[0x1E0CB3620];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "fileExistsAtPath:", v4);

  v8 = CFSTR("N");
  if (v7)
    v8 = CFSTR("Y");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ : %@ : %@\n"), v5, v4, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

void __33__PLManagedAsset_textBadgeString__block_invoke(_QWORD *a1, void *a2)
{
  void *v3;
  __CFString *v4;
  void *v5;
  const __CFString *v6;
  uint64_t v7;
  id v8;

  v3 = (void *)MEMORY[0x1E0CEC3F8];
  v4 = a2;
  objc_msgSend(v3, "typeWithFilenameExtension:", v4);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "conformsToType:", *MEMORY[0x1E0CEC5B8]))
  {
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = 1;
    v5 = (void *)a1[4];
    v6 = CFSTR("RAW");
  }
  else if (objc_msgSend(v8, "conformsToType:", *MEMORY[0x1E0CEC530]))
  {
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
    v5 = (void *)a1[4];
    v6 = CFSTR("JPG");
  }
  else if (objc_msgSend(v8, "conformsToType:", *MEMORY[0x1E0CEC580]))
  {
    *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
    v5 = (void *)a1[4];
    v6 = CFSTR("PNG");
  }
  else
  {
    v5 = (void *)a1[4];
    v6 = v4;
  }
  objc_msgSend(v5, "addObject:", v6);
  v7 = -[__CFString caseInsensitiveCompare:](v4, "caseInsensitiveCompare:", *MEMORY[0x1E0D75A70]);

  if (!v7)
    *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;

}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2(uint64_t a1, int a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  id v14;
  NSObject *v15;
  NSObject *v16;
  os_signpost_id_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  char v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t *v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  void *v65;
  NSObject *v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  NSObject *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  void *v83;
  id v85;
  id v86;
  id v87;
  _QWORD v88[4];
  id v89;
  id v90;
  _QWORD v91[4];
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[4];
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  __int128 *v105;
  uint64_t *v106;
  uint64_t *v107;
  uint64_t v108;
  char v109;
  _QWORD v110[4];
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  _QWORD v115[4];
  id v116;
  id v117;
  _QWORD v118[4];
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  uint64_t *v126;
  uint64_t *v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint8_t buf[8];
  uint8_t *v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, uint64_t);
  void (*v139)(uint64_t);
  id v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  const __CFString *v150;
  uint8_t v151[4];
  uint64_t v152;
  __int16 v153;
  uint64_t v154;
  __int16 v155;
  id v156;
  __int128 v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  void *v163;
  _QWORD v164[2];
  _QWORD v165[2];
  uint64_t v166;
  id v167;
  uint64_t v168;
  _QWORD v169[4];

  v169[1] = *MEMORY[0x1E0C80C00];
  v86 = a3;
  v87 = a4;
  v85 = a7;
  v14 = a8;
  v15 = *(id *)(a1 + 32);
  v16 = v15;
  v17 = *(_QWORD *)(a1 + 120);
  if (v17 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v15))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_199541000, v16, OS_SIGNPOST_INTERVAL_END, v17, "generateDeferredAdjustment", ", buf, 2u);
  }

  v145 = 0;
  v146 = &v145;
  v147 = 0x2020000000;
  v148 = 0;
  v141 = 0;
  v142 = &v141;
  v143 = 0x2020000000;
  v144 = 0;
  *(_QWORD *)buf = 0;
  v136 = buf;
  v137 = 0x3032000000;
  v138 = __Block_byref_object_copy__14262;
  v139 = __Block_byref_object_dispose__14263;
  v140 = 0;
  if (a6 == 1)
    goto LABEL_13;
  if (PAMediaConversionIsCancellationError())
  {
    v146[3] = 1;
    v18 = (void *)MEMORY[0x1E0CB35C8];
    v168 = *MEMORY[0x1E0CB3388];
    v169[0] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v169, &v168, 1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47002, v19);
    v20 = objc_claimAutoreleasedReturnValue();
LABEL_9:
    v23 = (void *)*((_QWORD *)v136 + 5);
    *((_QWORD *)v136 + 5) = v20;
    goto LABEL_11;
  }
  v21 = PLIsErrorOrUnderlyingErrorFileNotFound();
  v146[3] = 2;
  if (v21)
  {
    v22 = (void *)MEMORY[0x1E0CB35C8];
    v166 = *MEMORY[0x1E0CB3388];
    v167 = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v167, &v166, 1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47021, v19);
    v20 = objc_claimAutoreleasedReturnValue();
    goto LABEL_9;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("media conversion failed with status: %ld"), a6);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = (void *)MEMORY[0x1E0CB35C8];
  v25 = *MEMORY[0x1E0CB3388];
  v164[0] = *MEMORY[0x1E0CB2938];
  v164[1] = v25;
  v165[0] = v19;
  v165[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v165, v164, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47007, v23);
  v26 = objc_claimAutoreleasedReturnValue();
  v27 = (void *)*((_QWORD *)v136 + 5);
  *((_QWORD *)v136 + 5) = v26;

LABEL_11:
  if (v146[3])
  {
    v28 = 0;
    goto LABEL_26;
  }
LABEL_13:
  v29 = v86;
  if (!a2)
    v29 = v87;
  v30 = v29;
  v31 = objc_alloc(MEMORY[0x1E0D75140]);
  objc_msgSend(*(id *)(a1 + 40), "libraryBundle");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "timeZoneLookup");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = (void *)objc_msgSend(v31, "initWithMediaURL:options:timeZoneLookup:shouldCache:", v30, 12, v33, 0);

  if (!v28)
  {
    v146[3] = 3;
    v34 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v30, "path");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "stringWithFormat:", CFSTR("unable to load metadata from file at path: %@"), v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    v37 = (void *)MEMORY[0x1E0CB35C8];
    v162 = *MEMORY[0x1E0CB2938];
    v163 = v36;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v163, &v162, 1);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47007, v38);
    v39 = objc_claimAutoreleasedReturnValue();
    v40 = (void *)*((_QWORD *)v136 + 5);
    *((_QWORD *)v136 + 5) = v39;

  }
  if (!v146[3] && a2)
  {
    objc_msgSend(v28, "contentType");
    v41 = (id)objc_claimAutoreleasedReturnValue();
    if (v41)
    {
      v42 = v41;
      if ((objc_msgSend(v41, "conformsToType:", *MEMORY[0x1E0CEC530]) & 1) != 0
        || (objc_msgSend(v42, "conformsToType:", *MEMORY[0x1E0CEC508]) & 1) != 0)
      {
        v43 = v42;
LABEL_25:

        goto LABEL_26;
      }
      v44 = objc_msgSend(v42, "conformsToType:", *MEMORY[0x1E0CEC510]);

      if ((v44 & 1) != 0)
        goto LABEL_26;
    }
    v146[3] = 3;
    v45 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v28, "contentType");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "identifier");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "stringWithFormat:", CFSTR("rendered image type (%@) is not primary format"), v47);
    v43 = (void *)objc_claimAutoreleasedReturnValue();

    v48 = (void *)MEMORY[0x1E0CB35C8];
    v160 = *MEMORY[0x1E0CB2938];
    v161 = v43;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v161, &v160, 1);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v48, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47007, v42);
    v49 = objc_claimAutoreleasedReturnValue();
    v50 = (void *)*((_QWORD *)v136 + 5);
    *((_QWORD *)v136 + 5) = v49;

    goto LABEL_25;
  }
LABEL_26:
  objc_msgSend(*(id *)(a1 + 40), "managedObjectContext");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v131 = 0;
  v132 = &v131;
  v133 = 0x2020000000;
  v134 = 0;
  v52 = v146;
  if (!v146[3])
  {
    PLPhotoEditGetLog();
    v53 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEBUG))
    {
      v54 = *(_QWORD *)(a1 + 48);
      LODWORD(v157) = 138543362;
      *(_QWORD *)((char *)&v157 + 4) = v54;
      _os_log_impl(&dword_199541000, v53, OS_LOG_TYPE_DEBUG, "[%{public}@] Media conversion success for deferred adjustment", (uint8_t *)&v157, 0xCu);
    }

    v55 = MEMORY[0x1E0C809B0];
    v118[0] = MEMORY[0x1E0C809B0];
    v118[1] = 3221225472;
    v118[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_819;
    v118[3] = &unk_1E3663C90;
    v56 = v51;
    v119 = v56;
    v120 = *(id *)(a1 + 56);
    v126 = &v145;
    v121 = *(id *)(a1 + 48);
    v127 = &v131;
    v130 = a5;
    v122 = *(id *)(a1 + 40);
    v123 = *(id *)(a1 + 64);
    v124 = v86;
    v125 = v87;
    v128 = buf;
    v129 = *(_QWORD *)(a1 + 112);
    v57 = (void *)MEMORY[0x19AEC174C](v118);
    if (*(_BYTE *)(a1 + 136))
    {
      objc_msgSend(*(id *)(a1 + 40), "performBlockAndWait:", v57);
    }
    else
    {
      v115[0] = v55;
      v115[1] = 3221225472;
      v115[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_826;
      v115[3] = &unk_1E3675C58;
      v116 = v56;
      v117 = v57;
      +[PLManagedObjectContext _pl_megamoc_runWithPerformWarningsSuppressed:](PLManagedObjectContext, "_pl_megamoc_runWithPerformWarningsSuppressed:", v115);

    }
    v52 = v146;
  }
  *(_QWORD *)&v157 = 0;
  *((_QWORD *)&v157 + 1) = &v157;
  v158 = 0x2020000000;
  v159 = 0;
  switch(v52[3])
  {
    case 0:
    case 9:
      PLPhotoEditGetLog();
      v66 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v66, OS_LOG_TYPE_DEBUG))
      {
        v67 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)v151 = 138543362;
        v152 = v67;
        _os_log_impl(&dword_199541000, v66, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment succeeded", v151, 0xCu);
      }
      goto LABEL_51;
    case 1:
      PLPhotoEditGetLog();
      v68 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_INFO))
      {
        v69 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)v151 = 138543874;
        v152 = v69;
        v153 = 2048;
        v154 = a6;
        v155 = 2112;
        v156 = v14;
        _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_INFO, "[%{public}@] Media conversion cancelled adjustment, status: %ld, error: %@", v151, 0x20u);
      }

      v110[0] = MEMORY[0x1E0C809B0];
      v110[1] = 3221225472;
      v110[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_827;
      v110[3] = &unk_1E3676EC8;
      v111 = v51;
      v112 = *(id *)(a1 + 56);
      v70 = *(id *)(a1 + 48);
      v71 = *(_QWORD *)(a1 + 112);
      v113 = v70;
      v114 = v71;
      objc_msgSend(v111, "performBlockAndWait:", v110);

      break;
    case 2:
    case 3:
    case 7:
    case 8:
      PLPhotoEditGetLog();
      v58 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
      {
        v59 = *(_QWORD *)(a1 + 48);
        v60 = *((_QWORD *)v136 + 5);
        *(_DWORD *)v151 = 138543618;
        v152 = v59;
        v153 = 2112;
        v154 = v60;
        _os_log_impl(&dword_199541000, v58, OS_LOG_TYPE_ERROR, "[%{public}@] Failed to generate deferred adjustment with error: %@", v151, 0x16u);
      }

      v61 = MEMORY[0x1E0C809B0];
      v91[0] = MEMORY[0x1E0C809B0];
      v91[1] = 3221225472;
      v91[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_831;
      v91[3] = &unk_1E3675D28;
      v62 = v51;
      v92 = v62;
      v93 = *(id *)(a1 + 56);
      v63 = *(id *)(a1 + 48);
      v64 = *(_QWORD *)(a1 + 112);
      v94 = v63;
      v95 = v64;
      v96 = a5;
      v65 = (void *)MEMORY[0x19AEC174C](v91);
      if (*(_BYTE *)(a1 + 136))
      {
        objc_msgSend(*(id *)(a1 + 40), "performBlockAndWait:", v65);
      }
      else
      {
        v88[0] = v61;
        v88[1] = 3221225472;
        v88[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_838;
        v88[3] = &unk_1E3675C58;
        v89 = v62;
        v90 = v65;
        +[PLManagedObjectContext _pl_megamoc_runWithPerformWarningsSuppressed:](PLManagedObjectContext, "_pl_megamoc_runWithPerformWarningsSuppressed:", v88);

      }
      break;
    case 4:
      PLPhotoEditGetLog();
      v66 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v66, OS_LOG_TYPE_DEBUG))
      {
        v72 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)v151 = 138543362;
        v152 = v72;
        _os_log_impl(&dword_199541000, v66, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished but asset has been deleted, dropping renders", v151, 0xCu);
      }
      goto LABEL_51;
    case 5:
      if (*(_QWORD *)(a1 + 128) > 2uLL)
      {
        PLPhotoEditGetLog();
        v78 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR))
        {
          v79 = *(_QWORD *)(a1 + 48);
          *(_DWORD *)v151 = 138543362;
          v152 = v79;
          _os_log_impl(&dword_199541000, v78, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment reached max stale retry count, bailing out", v151, 0xCu);
        }

        v80 = (void *)MEMORY[0x1E0CB35C8];
        v149 = *MEMORY[0x1E0CB2D50];
        v150 = CFSTR("Generate deferred adjustment reached max stale retry count, bailing out");
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v150, &v149, 1);
        v81 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v80, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 46512, v81);
        v82 = objc_claimAutoreleasedReturnValue();
        v83 = (void *)*((_QWORD *)v136 + 5);
        *((_QWORD *)v136 + 5) = v82;

      }
      else
      {
        v97[0] = MEMORY[0x1E0C809B0];
        v97[1] = 3221225472;
        v97[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_828;
        v97[3] = &unk_1E3663CB8;
        v98 = v51;
        v99 = *(id *)(a1 + 56);
        v105 = &v157;
        v100 = *(id *)(a1 + 48);
        v106 = &v131;
        v101 = *(id *)(a1 + 72);
        v102 = *(id *)(a1 + 80);
        v76 = *(id *)(a1 + 88);
        v77 = *(_QWORD *)(a1 + 128);
        v103 = v76;
        v108 = v77;
        v109 = *(_BYTE *)(a1 + 136);
        v104 = *(id *)(a1 + 96);
        v107 = &v141;
        objc_msgSend(v98, "performBlockAndWait:", v97);

      }
      break;
    case 6:
      PLPhotoEditGetLog();
      v66 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v66, OS_LOG_TYPE_DEBUG))
      {
        v73 = *(_QWORD *)(a1 + 48);
        v74 = v132[3];
        *(_DWORD *)v151 = 138543618;
        v152 = v73;
        v153 = 2048;
        v154 = v74;
        _os_log_impl(&dword_199541000, v66, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished with stale request (new hash = %tu) but deferred processing state no longer needs adjustment, dropping renders and not restarting", v151, 0x16u);
      }
LABEL_51:

      *((_BYTE *)v142 + 24) = 1;
      break;
    default:
      break;
  }
  if (!*(_BYTE *)(*((_QWORD *)&v157 + 1) + 24))
  {
    if (*((_BYTE *)v142 + 24))
      v75 = 0;
    else
      v75 = *((_QWORD *)v136 + 5);
    (*(void (**)(_QWORD, BOOL, uint64_t))(*(_QWORD *)(a1 + 104) + 16))(*(_QWORD *)(a1 + 104), *((_BYTE *)v142 + 24) != 0, v75);
  }
  _Block_object_dispose(&v157, 8);
  _Block_object_dispose(&v131, 8);

  _Block_object_dispose(buf, 8);
  _Block_object_dispose(&v141, 8);
  _Block_object_dispose(&v145, 8);

}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_842(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a1[6] + 16))(a1[6], 1, a1[4], a1[5], a1[7], a2, a3, a4);
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_844(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a1[5] + 16))(a1[5], 0, 0, a1[4], a1[6], a2, a3, a4);
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_849(uint64_t a1)
{
  uint64_t result;

  if (objc_msgSend(*(id *)(a1 + 32), "deferredProcessingNeeded") == 2)
    return objc_msgSend(*(id *)(a1 + 32), "setDeferredProcessingNeeded:", 0);
  result = objc_msgSend(*(id *)(a1 + 32), "deferredProcessingNeeded");
  if ((_DWORD)result == 9)
    return objc_msgSend(*(id *)(a1 + 32), "setDeferredProcessingNeeded:", 0);
  return result;
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_850(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 32));
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_819(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char v21;
  id v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char v35;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id obj;
  id v44;
  id v45;
  uint8_t buf[4];
  uint64_t v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  id v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v45 = 0;
  objc_msgSend(v2, "existingObjectWithID:error:", v3, &v45);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v45;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24))
  {
    if (v4)
    {
      if (!objc_msgSend(v4, "isDeleted"))
        goto LABEL_9;
    }
    else
    {
      PLPhotoEditGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        v8 = *(void **)(a1 + 40);
        v7 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)buf = 138543874;
        v47 = v7;
        v48 = 2112;
        v49 = v8;
        v50 = 2112;
        v51 = v5;
        _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "[%{public}@] Asset with object ID %@ not found: %@", buf, 0x20u);
      }

    }
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 4;
  }
LABEL_9:
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24))
  {
    objc_msgSend(v4, "additionalAttributes");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setDeferredProcessingCandidateOptions:", 0);

    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24))
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24) = objc_msgSend(v4, "deferredProcessingHash");
      if (*(_QWORD *)(a1 + 120) != *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24))
      {
        v10 = objc_msgSend(v4, "deferredProcessingNeeded");
        v11 = 5;
        if (v10 != 2)
          v11 = 6;
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = v11;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) || !objc_msgSend(v4, "isVideo"))
  {
    v16 = 0;
  }
  else
  {
    objc_msgSend(v4, "persistedResourcesMatching:", &__block_literal_global_821);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "anyObject");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      objc_msgSend(*(id *)(a1 + 56), "pathManager");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D73148], "defaultFileExtensionForAssetType:", 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "temporaryRenderContentURLForInternalRendersWithExtension:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      v17 = (void *)MEMORY[0x1E0C99E98];
      objc_msgSend(v4, "pathForTransientVideoPosterFramePreview");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "fileURLWithPath:", v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      v20 = *(_QWORD *)(a1 + 64);
      v44 = 0;
      v21 = objc_msgSend(MEMORY[0x1E0D73208], "ingestItemAtURL:toURL:type:options:capabilities:error:", v19, v16, 3, 6, v20, &v44);
      v22 = v44;
      if ((v21 & 1) == 0)
      {
        PLPhotoEditGetLog();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          v24 = *(_QWORD *)(a1 + 48);
          *(_DWORD *)buf = 138543874;
          v47 = v24;
          v48 = 2112;
          v49 = v19;
          v50 = 2112;
          v51 = v22;
          _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "[%{public}@] Nonfatal - failed to ingest video poster to temporary URL from existing URL: %@, error: %@", buf, 0x20u);
        }

        v16 = 0;
      }

    }
    else
    {
      v16 = 0;
    }

  }
  v25 = *(_QWORD *)(a1 + 88);
  if (!*(_QWORD *)(*(_QWORD *)(v25 + 8) + 24))
  {
    v26 = *(_QWORD *)(a1 + 72);
    v27 = *(_QWORD *)(a1 + 80);
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8);
    obj = *(id *)(v28 + 40);
    v29 = objc_msgSend(v4, "updateDeferredAdjustmentWithFullSizeRenderImageURL:videoURL:videoPosterURL:error:", v26, v27, v16, &obj);
    objc_storeStrong((id *)(v28 + 40), obj);
    v25 = *(_QWORD *)(a1 + 88);
    if ((v29 & 1) == 0)
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 8) + 24) = 7;
      v25 = *(_QWORD *)(a1 + 88);
    }
  }
  if (*(_QWORD *)(*(_QWORD *)(v25 + 8) + 24))
    goto LABEL_28;
  if ((objc_msgSend(v4, "isPhoto") & 1) != 0)
  {
    v31 = &__block_literal_global_823;
  }
  else
  {
    if (!objc_msgSend(v4, "isVideo"))
    {
LABEL_28:
      v30 = 0;
      goto LABEL_34;
    }
    v31 = &__block_literal_global_825;
  }
  objc_msgSend(v4, "persistedResourcesMatching:", v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "anyObject");
  v30 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_34:
  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v33 = *(void **)(a1 + 32);
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24))
    {
      objc_msgSend(v33, "rollback");
    }
    else
    {
      v34 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8);
      v42 = *(id *)(v34 + 40);
      v35 = objc_msgSend(v33, "save:", &v42);
      objc_storeStrong((id *)(v34 + 40), v42);
      if ((v35 & 1) == 0)
      {
        PLPhotoEditGetLog();
        v36 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
        {
          v37 = *(_QWORD *)(a1 + 48);
          v38 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40);
          *(_DWORD *)buf = 138543618;
          v47 = v37;
          v48 = 2112;
          v49 = v38;
          _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment save failed %@", buf, 0x16u);
        }

        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 8;
      }
    }
  }
  v39 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
  v40 = *(_QWORD *)(v39 + 24);
  if (!v40)
  {
    *(_QWORD *)(v39 + 24) = 9;
    v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24);
  }
  if (v40 == 9)
    v41 = 1;
  else
    v41 = 3;
  PLSendDeferredProcessingAnalytics(v4, v30, *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 40), v41);

}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_826(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performBlockAndWait:", *(_QWORD *)(a1 + 40));
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_827(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = (void *)a1[4];
  v3 = a1[5];
  v9 = 0;
  objc_msgSend(v2, "existingObjectWithID:error:", v3, &v9);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v9;
  if (v4)
  {
    PLSendDeferredProcessingAnalytics(v4, 0, *(void **)(*(_QWORD *)(a1[7] + 8) + 40), 2);
  }
  else
  {
    PLPhotoEditGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = a1[5];
      v7 = a1[6];
      *(_DWORD *)buf = 138543874;
      v11 = v7;
      v12 = 2112;
      v13 = v8;
      v14 = 2112;
      v15 = v5;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "[%{public}@] Asset with object ID %@ not found: %@", buf, 0x20u);
    }

  }
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_828(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint8_t buf[4];
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "existingObjectWithID:error:", *(_QWORD *)(a1 + 40), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2 && (objc_msgSend(v2, "isDeleted") & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 1;
    PLPhotoEditGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      v8 = *(_QWORD *)(a1 + 48);
      v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24);
      *(_DWORD *)buf = 138543618;
      v12 = v8;
      v13 = 2048;
      v14 = v9;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished but edit is stale with new hash: %tu, restarting", buf, 0x16u);
    }

    v10 = (id)objc_msgSend(v3, "_generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 112) + 1, *(unsigned __int8 *)(a1 + 120), 0, *(_QWORD *)(a1 + 80));
  }
  else
  {
    PLPhotoEditGetLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      v5 = *(_QWORD *)(a1 + 48);
      v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24);
      *(_DWORD *)buf = 138543618;
      v12 = v5;
      v13 = 2048;
      v14 = v6;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished with stale request (new hash = %tu) but asset was deleted, dropping renders and not restarting", buf, 0x16u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 24) = 1;
  }

}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_831(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  NSObject *v9;
  uint64_t v10;
  __CFString *v11;
  unsigned int v12;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  int v18;
  __CFString *v19;
  void *v20;
  unsigned int v21;
  __CFString *v22;
  void *v23;
  char v24;
  __CFString *v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  __CFString *v33;
  __int16 v34;
  id v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v29 = 0;
  objc_msgSend(v2, "existingObjectWithID:error:", v3, &v29);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v29;
  if (v4)
  {
    v6 = objc_msgSend(v4, "isDeleted");
    v7 = objc_msgSend(v4, "deferredProcessingHash");
    if ((v6 & 1) == 0)
    {
      v8 = 1;
      if (*(_QWORD *)(a1 + 64) != v7)
      {
LABEL_15:
        PLPhotoEditGetLog();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          v17 = *(_QWORD *)(a1 + 48);
          if ((v6 & 1) != 0)
          {
            v18 = 0;
            v19 = CFSTR("asset deleted");
          }
          else if ((v8 & 1) != 0)
          {
            v18 = 0;
            v19 = CFSTR("stale");
          }
          else
          {
            v20 = (void *)MEMORY[0x1E0CB3940];
            v21 = objc_msgSend(v4, "deferredProcessingNeeded");
            v22 = v21 > 0xB ? 0 : off_1E3663E30[v21];
            v6 = v22;
            objc_msgSend(v20, "stringWithFormat:", CFSTR("cannot overwrite deferred processing state: %@"), v6);
            v19 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v18 = 1;
          }
          *(_DWORD *)buf = 138543618;
          v31 = v17;
          v32 = 2114;
          v33 = v19;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment failed, skipping repair for reason: %{public}@", buf, 0x16u);
          if (v18)
          {

          }
        }

LABEL_27:
        if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
        {
          v23 = *(void **)(a1 + 32);
          v28 = 0;
          v24 = objc_msgSend(v23, "save:", &v28);
          v25 = (__CFString *)v28;
          if ((v24 & 1) == 0)
          {
            PLPhotoEditGetLog();
            v26 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              v27 = *(_QWORD *)(a1 + 48);
              *(_DWORD *)buf = 138543618;
              v31 = v27;
              v32 = 2112;
              v33 = v25;
              _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment save failed %@", buf, 0x16u);
            }

          }
        }
        PLSendDeferredProcessingAnalytics(v4, 0, *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), 3);
        goto LABEL_34;
      }
      v12 = objc_msgSend(v4, "deferredProcessingNeeded");
      if (v12 <= 0xB && ((1 << v12) & 0xB15) != 0)
      {
        PLPhotoEditGetLog();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          v15 = *(_QWORD *)(a1 + 48);
          *(_DWORD *)buf = 138543362;
          v31 = v15;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment failed, marking asset for repair adjustment failure", buf, 0xCu);
        }

        objc_msgSend(v4, "setDeferredProcessingNeeded:", 9);
        goto LABEL_27;
      }
    }
    v8 = 0;
    goto LABEL_15;
  }
  PLPhotoEditGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    v11 = *(__CFString **)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    v31 = v10;
    v32 = 2112;
    v33 = v11;
    v34 = 2112;
    v35 = v5;
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment failed, skipping repair, asset with object ID %@ not found: %@", buf, 0x20u);
  }

LABEL_34:
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_838(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performBlockAndWait:", *(_QWORD *)(a1 + 40));
}

BOOL __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_824(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "recipeID") == 0x20000;
}

BOOL __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_822(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "recipeID") == 65938;
}

BOOL __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_820(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "recipeID") == 65948;
}

BOOL __73__PLManagedAsset__shouldSetupVideoComplementForAsyncEditWithBaseVersion___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "version") == 1 && objc_msgSend(v2, "resourceType") == 3;

  return v3;
}

void __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  int v18;
  double *v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  dispatch_time_t timeout;
  uint64_t v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char v47;

  v13 = a2;
  v14 = a4;
  v15 = a5;
  v16 = a8;
  v17 = a9;
  v18 = objc_msgSend(v14, "isEqualToString:", CFSTR("com.apple.mobileiphoto"));
  if (v18)
    LOBYTE(v18) = objc_msgSend(v15, "isEqualToString:", CFSTR("2"));
  if (!v13 || (v18 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 56), "copyItemAtPath:toPath:error:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 48), 0);
    v27 = *(_QWORD *)(a1 + 72);
    if (v27)
      (*(void (**)(uint64_t, _QWORD))(v27 + 16))(v27, *(_QWORD *)(a1 + 48));
  }
  else
  {
    v28 = v17;
    v29 = v16;
    timeout = dispatch_time(0, 60000000000);
    v31 = (int)objc_msgSend(*(id *)(a1 + 32), "originalOrientation");
    v44 = 0;
    v45 = &v44;
    v46 = 0x2020000000;
    v47 = 0;
    v39 = 0;
    v40 = (double *)&v39;
    v41 = 0x3010000000;
    v42 = &unk_199CADF31;
    v19 = (double *)MEMORY[0x1E0C9D820];
    v43 = *MEMORY[0x1E0C9D820];
    v20 = dispatch_group_create();
    dispatch_group_enter(v20);
    v22 = *(void **)(a1 + 32);
    v21 = *(_QWORD *)(a1 + 40);
    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 3221225472;
    v32[2] = __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke_2;
    v32[3] = &unk_1E3663BC0;
    v37 = &v44;
    v38 = &v39;
    v23 = *(_QWORD *)(a1 + 48);
    v33 = *(id *)(a1 + 56);
    v34 = *(id *)(a1 + 64);
    v35 = *(id *)(a1 + 48);
    v24 = v20;
    v36 = v24;
    objc_msgSend(v22, "_asyncGenerateRenderImageFileWithSize:formatIdentifier:formatVersion:adjustmentDataBlob:originalImageFilePath:originalImageEXIFOrientation:renderedImageFilePath:completionHandler:", v14, v15, v13, v21, v31, v23, *v19, v19[1], v32);
    dispatch_group_wait(v24, timeout);
    if (*((_BYTE *)v45 + 24))
    {
      objc_msgSend(*(id *)(a1 + 32), "setWidth:", (uint64_t)v40[4]);
      objc_msgSend(*(id *)(a1 + 32), "setHeight:", (uint64_t)v40[5]);
      v25 = +[PLResourceInstaller onDemand_installAdjustedFullSizeRenderResourceAtFilePath:forAsset:](PLResourceInstaller, "onDemand_installAdjustedFullSizeRenderResourceAtFilePath:forAsset:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
    }
    v26 = *(_QWORD *)(a1 + 72);
    if (v26)
      (*(void (**)(uint64_t, _QWORD))(v26 + 16))(v26, *(_QWORD *)(a1 + 48));

    _Block_object_dispose(&v39, 8);
    _Block_object_dispose(&v44, 8);
    v17 = v28;
    v16 = v29;
  }

}

void __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5;

  if (a2)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    *(double *)(v5 + 32) = a3;
    *(double *)(v5 + 40) = a4;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "copyItemAtPath:toPath:error:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

uint64_t __197__PLManagedAsset__asyncGenerateRenderImageFileWithSize_formatIdentifier_formatVersion_adjustmentDataBlob_originalImageFilePath_originalImageEXIFOrientation_renderedImageFilePath_completionHandler___block_invoke(_QWORD *a1, void *a2, double a3, double a4, double a5, double a6)
{
  int v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  int v20;
  uint64_t v21;
  __int16 v22;
  int v23;
  __int16 v24;
  int v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v9 = objc_msgSend(a2, "writeToFile:options:error:", a1[4], 1073741825, 0);
  PLBackendGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      v12 = a1[5];
      v20 = 138412802;
      v21 = v12;
      v22 = 1024;
      v23 = (int)a5;
      v24 = 1024;
      v25 = (int)a6;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEBUG, "Upgraded substandard render for %@ to %dx%d", (uint8_t *)&v20, 0x18u);
    }

    v13.n128_f64[0] = a5;
    v14.n128_f64[0] = a6;
    return (*(uint64_t (**)(__n128, __n128))(a1[6] + 16))(v13, v14);
  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      v17 = a1[4];
      v16 = a1[5];
      v20 = 138413058;
      v21 = v16;
      v22 = 1024;
      v23 = (int)a5;
      v24 = 1024;
      v25 = (int)a6;
      v26 = 2112;
      v27 = v17;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Could not upgrade substandard render for %@ to %dx%d, failed saving to %@", (uint8_t *)&v20, 0x22u);
    }

    v18.n128_u64[0] = *MEMORY[0x1E0C9D820];
    v19.n128_u64[0] = *(_QWORD *)(MEMORY[0x1E0C9D820] + 8);
    return (*(uint64_t (**)(__n128, __n128))(a1[6] + 16))(v18, v19);
  }
}

void __43__PLManagedAsset_allUniformTypeIdentifiers__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v3;
  const __CFString *v4;
  id v5;

  objc_msgSend(a2, "uniformTypeIdentifier");
  v3 = objc_claimAutoreleasedReturnValue();
  v5 = (id)v3;
  if (v3)
    v4 = (const __CFString *)v3;
  else
    v4 = &stru_1E36789C0;
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);

}

void __35__PLManagedAsset_allFileExtensions__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  objc_msgSend(a2, "filename");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "pathExtension");
  v4 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);
}

BOOL __48__PLManagedAsset_pathForFullsizeRenderImageFile__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "recipeID") == 65938 && objc_msgSend(v2, "version") == 2;

  return v3;
}

id __163__PLManagedAsset__ingestAndApplyMetadataChangesFromAdjustments_updateAdjustmentDictionary_options_fullSizeRenderURL_videoPosterRenderURL_isRevertToOriginal_error___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
    v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithImageURL:contentType:options:timeZoneLookup:cacheImageSource:cacheImageData:", *(_QWORD *)(a1 + 32), 0, 13, 0, 1, 0);
  else
    v3 = 0;

  return v3;
}

uint64_t __166__PLManagedAsset__updateDerivativesAndThumbnails_withPreviewImage_thumbnailImage_metadata_didRevertToOriginal_updateInternalResources_isSubstandardRender_isDeferred___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(a2, "recipeID"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(&unk_1E37633E0, "containsObject:", v2);

  return v3;
}

BOOL __60__PLManagedAsset__removeComputeResourceWithRecipeID_atPath___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  v4 = objc_msgSend(v3, "recipeID") == *(_DWORD *)(a1 + 32)
    && objc_msgSend(v3, "resourceType") == 14;

  return v4;
}

void __41__PLManagedAsset_setAdjustments_options___block_invoke(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  int v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (a2)
  {
    objc_msgSend(a2, "path");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringByDeletingPathExtension");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringByAppendingPathExtension:", CFSTR("in_flight"));
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(a1[5] + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = (void *)a1[4];
    v12 = *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40);
    objc_msgSend(MEMORY[0x1E0C99D50], "data");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend(v11, "createFileAtPath:contents:attributes:", v12, v13, 0);

  }
  else
  {
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      v15 = 138412290;
      v16 = v5;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Failed to obtain the adjustment marker path. Error: %@", (uint8_t *)&v15, 0xCu);
    }

  }
}

void __86__PLManagedAsset__availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate___block_invoke()
{
  void *v0;

  v0 = (void *)_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__photoTypes;
  _availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__photoTypes = (uint64_t)&unk_1E37633C8;

}

uint64_t __43__PLManagedAsset_shouldUseNonAdjustedVideo__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D75308], "isRecognizedSlowMotionFormatWithIdentifier:version:", a2, a3);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void __47__PLManagedAsset_unadjustedDerivativeImageURLs__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(v7, "length"))
  {
    v5 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v7, a3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pl_addObjectIfNotNil:", v6);

  }
}

void __34__PLManagedAsset_adjustedFileURLs__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(v7, "length"))
  {
    v5 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v7, a3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pl_addObjectIfNotNil:", v6);

  }
}

void __29__PLManagedAsset_allFileURLs__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(v7, "length"))
  {
    v5 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v7, a3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pl_addObjectIfNotNil:", v6);

  }
}

void __36__PLManagedAsset_isSavedPhotosAsset__block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB38E8]), "initWithPattern:options:error:", CFSTR("[1-9][0-9][0-9]APPLE"), 0, 0);
  v1 = (void *)isSavedPhotosAsset_savedPhotosDirectoryRegEx;
  isSavedPhotosAsset_savedPhotosDirectoryRegEx = v0;

}

void __53__PLManagedAsset_reportSharedAssetIncrementalChange___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  v6 = *(id *)(a1 + 32);
  if (v8)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "hasSuggestionChanges"))
    {
      if (objc_msgSend(*(id *)(a1 + 40), "containsObject:", v8))
      {
        v7 = (void *)objc_msgSend(*(id *)(a1 + 32), "copy");

        objc_msgSend(v7, "setSuggestionStateChange:", 0);
        v6 = v7;
      }
      else
      {
        objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);
      }
    }
    objc_msgSend(v8, "reportSharedAssetContainerIncrementalChange:forAllAssetsCountKey:", v6, v5);
  }

}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke(uint64_t result)
{
  uint64_t v1;
  BOOL v2;

  v1 = result;
  if (*(_QWORD *)(result + 48) == 8
    && (result = objc_msgSend(*(id *)(result + 32), "hasLibraryScope"), (_DWORD)result))
  {
    result = objc_msgSend((id)objc_opt_class(), "_isLibraryScopeExiting:", *(_QWORD *)(v1 + 32));
    if ((result & 1) != 0)
    {
      v2 = 0;
    }
    else
    {
      result = objc_msgSend(*(id *)(v1 + 32), "shareState");
      v2 = (_DWORD)result == 1;
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 40) + 8) + 24) = v2;
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 40) + 8) + 24) = 1;
  }
  return result;
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke_2(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 0;
  return result;
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke_3(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = *(_QWORD *)(result + 40) == 4;
  return result;
}

void __42__PLManagedAsset_canPerformEditOperation___block_invoke_4(uint64_t a1)
{
  char v2;
  void *v3;

  if (*(_QWORD *)(a1 + 48) == 4)
  {
    if ((objc_msgSend(*(id *)(a1 + 32), "cloudIsMyAsset") & 1) != 0)
    {
      v2 = 1;
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "cloudShareAlbum");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v2 = objc_msgSend(v3, "isOwnedCloudSharedAlbum");

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v2;
  }
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke_5(uint64_t result)
{
  uint64_t v1;
  BOOL v3;

  v1 = *(_QWORD *)(result + 40);
  v3 = v1 == 4 || v1 == 16;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = v3;
  return result;
}

void __42__PLManagedAsset__hasScreenshotDimensions__block_invoke()
{
  int v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 20);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v0 = 1;
  while (2)
  {
    switch(v0)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
        goto LABEL_4;
      case 10:
        DCIM_NSValueFromCGSize();
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v1);

LABEL_4:
        DCIM_NSValueFromCGSize();
        v2 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v2);

        goto LABEL_5;
      case 20:
        DCIM_NSValueFromCGSize();
        v3 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v3);

        goto LABEL_8;
      default:
LABEL_5:
        if (++v0 != 21)
          continue;
LABEL_8:
        v4 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99E60]), "initWithArray:", v6);
        v5 = (void *)_hasScreenshotDimensions_screenDimensions;
        _hasScreenshotDimensions_screenDimensions = v4;

        return;
    }
  }
}

id __93__PLManagedAsset_fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL___block_invoke(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;

  v2 = *(id *)(a1 + 32);
  if (!v2)
  {
    v3 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(*(id *)(a1 + 40), "pathForAdjustedFullsizeImageFile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "fileURLWithPath:isDirectory:", v4, 0);
    v2 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

uint64_t __63__PLManagedAsset_metadataFromMediaPropertiesOrOriginalResource__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "mainFileURL");
}

uint64_t __34__PLManagedAsset_setLibraryScope___block_invoke(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

void __62__PLManagedAsset__setAllowedForAnalysisDependentValue_forKey___block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  int v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = objc_msgSend(WeakRetained, "calculateAllowedForAnalysis");
  objc_msgSend(WeakRetained, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "allowedForAnalysis");

  if ((_DWORD)v1 != v3)
  {
    objc_msgSend(WeakRetained, "additionalAttributes");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAllowedForAnalysis:", v1);

  }
}

void __26__PLManagedAsset_setUuid___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "analysisStates", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v7++), "setAssetUUID:", *(_QWORD *)(a1 + 32));
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

void __33__PLManagedAsset_setDateCreated___block_invoke(uint64_t a1)
{
  _QWORD *WeakRetained;
  double v3;
  double v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(a1 + 32), "timeIntervalSinceReferenceDate");
    v4 = v3;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    objc_msgSend(WeakRetained, "analysisStates", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v14;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v14 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v9++), "setSortToken:", v4);
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v7);
    }

    objc_msgSend(WeakRetained, "additionalAttributes");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setInferredTimeZoneOffset:", 0);

    v11 = (void *)WeakRetained[16];
    WeakRetained[16] = 0;

    v12 = (void *)WeakRetained[17];
    WeakRetained[17] = 0;

  }
}

void __28__PLManagedAsset_setMoment___block_invoke(uint64_t a1, void *a2)
{
  PLSharedAssetsContainerIncrementalChange *v3;
  uint64_t v4;
  PLSharedAssetsContainerIncrementalChange *v5;
  uint64_t v6;
  id v7;

  v7 = a2;
  if (*(_BYTE *)(a1 + 48))
  {
    v3 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
    -[PLSharedAssetsContainerIncrementalChange setCollectionChangeType:](v3, "setCollectionChangeType:", 1);
    v4 = *(_BYTE *)(a1 + 49) ? 1 : 2;
    -[PLSharedAssetsContainerIncrementalChange setSharingChange:](v3, "setSharingChange:", v4);
    -[PLSharedAssetsContainerIncrementalChange setSuggestionStateChange:](v3, "setSuggestionStateChange:", 0);
    -[PLSharedAssetsContainerIncrementalChange setMediaType:](v3, "setMediaType:", objc_msgSend(*(id *)(a1 + 32), "kind") != 0);
    objc_msgSend(*(id *)(a1 + 40), "reportSharedAssetContainerIncrementalChange:forAllAssetsCountKey:", v3, CFSTR("assetsCount"));

    if (*(_BYTE *)(a1 + 48))
    {
      v5 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
      -[PLSharedAssetsContainerIncrementalChange setCollectionChangeType:](v5, "setCollectionChangeType:", 2);
      if (*(_BYTE *)(a1 + 49))
        v6 = 1;
      else
        v6 = 2;
      -[PLSharedAssetsContainerIncrementalChange setSharingChange:](v5, "setSharingChange:", v6);
      -[PLSharedAssetsContainerIncrementalChange setSuggestionStateChange:](v5, "setSuggestionStateChange:", 0);
      -[PLSharedAssetsContainerIncrementalChange setMediaType:](v5, "setMediaType:", objc_msgSend(*(id *)(a1 + 32), "kind") != 0);
      objc_msgSend(v7, "reportSharedAssetContainerIncrementalChange:forAllAssetsCountKey:", v5, CFSTR("assetsCount"));

    }
  }

}

void __50__PLManagedAsset_fixupMemoriesWithMissingKeyAsset__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  int v5;
  id v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  PLBackendGetLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = 138412290;
    v6 = v3;
    _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_INFO, "Deleting memory %@ due to no key asset found", (uint8_t *)&v5, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v3);
}

BOOL __59__PLManagedAsset_reevaluateCameraProcessingAdjustmentState__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  if (objc_msgSend(v2, "version"))
    v3 = 0;
  else
    v3 = objc_msgSend(v2, "resourceType") == 10 || objc_msgSend(v2, "resourceType") == 11;

  return v3;
}

BOOL __59__PLManagedAsset_expungeTrashedSpatialOverCaptureResources__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = !objc_msgSend(v2, "version")
    && (objc_msgSend(v2, "resourceType") == 10 || objc_msgSend(v2, "resourceType") == 11)
    && objc_msgSend(v2, "trashedState") != 0;

  return v3;
}

void __63__PLManagedAsset_setTrashedStateOnSpatialOverCaptureResources___block_invoke()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  setTrashedStateOnSpatialOverCaptureResources__ignoreSOCSetTrashedStateChange = objc_msgSend(v0, "BOOLForKey:", CFSTR("PLIgnoreSOCPrune"));

}

uint64_t __60__PLManagedAsset_updateKindSubtypeIfScreenshotWithMetadata___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(*(id *)(a1 + 32), "contentType");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v2, "conformsToType:", *MEMORY[0x1E0CEC580]))
  {
    if (!objc_msgSend(v2, "conformsToType:", *MEMORY[0x1E0CEC530]))
    {
      v3 = 0;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if ((objc_msgSend(*(id *)(a1 + 40), "_hasScreenshotDimensions") & 1) == 0)
  {
LABEL_5:
    v3 = objc_msgSend(*(id *)(a1 + 40), "_hasScreenshotMetadataWithMetadata:", *(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v3 = 1;
LABEL_7:

  return v3;
}

uint64_t __47__PLManagedAsset_updateKindSubtypeIfScreenshot__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = (void *)MEMORY[0x1E0D752F0];
  objc_msgSend(*(id *)(a1 + 32), "uniformTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "typeWithIdentifier:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC580]))
  {
    if (!objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC530]))
    {
      v5 = 0;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "_hasScreenshotDimensions") & 1) == 0)
  {
LABEL_5:
    v5 = objc_msgSend(*(id *)(a1 + 32), "hasScreenshotMetadata");
    goto LABEL_7;
  }
  v5 = 1;
LABEL_7:

  return v5;
}

BOOL __48__PLManagedAsset__sizeOfVideoPreviewForAVAsset___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  v4 = objc_msgSend(v3, "recipeID") == 65741
    && objc_msgSend(v3, "version") == *(_DWORD *)(a1 + 32);

  return v4;
}

uint64_t __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_sizeOfVideoPreviewForAVAsset:", a2);
}

uint64_t __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke_286(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "refreshPreviewWellImageWithContext:avoidNotificationIfLinkIsAlreadySet:", *(_QWORD *)(a1 + 40), 0);
}

void __85__PLManagedAsset__handleHighlightRelationshipChangeForKey_forAssetCountKey_newValue___block_invoke(uint64_t a1, void *a2)
{
  PLSharedAssetsContainerIncrementalChange *v3;
  uint64_t v4;
  uint64_t v5;
  PLSharedAssetsContainerIncrementalChange *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  if (*(_BYTE *)(a1 + 64))
  {
    v3 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
    -[PLSharedAssetsContainerIncrementalChange setCollectionChangeType:](v3, "setCollectionChangeType:", 1);
    if (*(_BYTE *)(a1 + 65))
      v4 = 1;
    else
      v4 = 2;
    -[PLSharedAssetsContainerIncrementalChange setSharingChange:](v3, "setSharingChange:", v4);
    if (objc_msgSend(*(id *)(a1 + 32), "isEqual:", CFSTR("highlightBeingAssets")))
    {
      if (*(_BYTE *)(a1 + 66))
        v5 = 1;
      else
        v5 = 2;
      -[PLSharedAssetsContainerIncrementalChange setSuggestionStateChange:](v3, "setSuggestionStateChange:", v5);
    }
    -[PLSharedAssetsContainerIncrementalChange setMediaType:](v3, "setMediaType:", objc_msgSend(*(id *)(a1 + 40), "kind") != 0);
    objc_msgSend(*(id *)(a1 + 48), "reportSharedAssetContainerIncrementalChange:forAllAssetsCountKey:", v3, *(_QWORD *)(a1 + 56));

    if (*(_BYTE *)(a1 + 64))
    {
      v6 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
      -[PLSharedAssetsContainerIncrementalChange setCollectionChangeType:](v6, "setCollectionChangeType:", 2);
      if (*(_BYTE *)(a1 + 65))
        v7 = 1;
      else
        v7 = 2;
      -[PLSharedAssetsContainerIncrementalChange setSharingChange:](v6, "setSharingChange:", v7);
      if (objc_msgSend(*(id *)(a1 + 32), "isEqual:", CFSTR("highlightBeingAssets")))
      {
        if (*(_BYTE *)(a1 + 66))
          v8 = 1;
        else
          v8 = 2;
        -[PLSharedAssetsContainerIncrementalChange setSuggestionStateChange:](v6, "setSuggestionStateChange:", v8);
      }
      -[PLSharedAssetsContainerIncrementalChange setMediaType:](v6, "setMediaType:", objc_msgSend(*(id *)(a1 + 40), "kind") != 0);
      objc_msgSend(v9, "reportSharedAssetContainerIncrementalChange:forAllAssetsCountKey:", v6, *(_QWORD *)(a1 + 56));

    }
  }

}

+ (BOOL)hasRequiredExtendedAttributesForPersistanceAttributes:(id)a3
{
  void *v3;
  BOOL v4;

  objc_msgSend(a3, "UUIDStringForKey:", *MEMORY[0x1E0D74010]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "length") != 0;

  return v4;
}

+ (BOOL)hasRequiredExtendedAttributesForMainFileURL:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  v5 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0D73200], "persistedAttributesForFileAtURL:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(a1) = objc_msgSend(a1, "hasRequiredExtendedAttributesForPersistanceAttributes:", v6);

  objc_autoreleasePoolPop(v5);
  return (char)a1;
}

+ (PLManagedAsset)assetWithUUID:(id)a3 inLibrary:(id)a4
{
  id v6;
  void *v7;
  void *v8;

  v6 = a3;
  objc_msgSend(a4, "managedObjectContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "assetWithUUID:inManagedObjectContext:", v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return (PLManagedAsset *)v8;
}

+ (id)assetsWithUUIDs:(id)a3 options:(unint64_t)a4 inLibrary:(id)a5
{
  id v8;
  void *v9;
  void *v10;

  v8 = a3;
  objc_msgSend(a5, "managedObjectContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "assetsWithUUIDs:options:inManagedObjectContext:", v8, a4, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (id)assetsWithUUIDs:(id)a3 options:(unint64_t)a4 inManagedObjectContext:(id)a5
{
  char v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;

  v6 = a4;
  v7 = a3;
  v8 = a5;
  if (objc_msgSend(v7, "count"))
  {
    v9 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("uuid IN %@"), v7);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "fetchRequestWithEntityName:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "setIncludesPendingChanges:", v6 & 1);
    if ((v6 & 2) != 0)
    {
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:", CFSTR("uuid"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "setPropertiesToFetch:", v14);

    }
    objc_msgSend(v13, "setPredicate:", v10);
    v17 = 0;
    objc_msgSend(v8, "executeFetchRequest:error:", v13, &v17);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_autoreleasePoolPop(v9);
  }
  else
  {
    v15 = 0;
  }

  return v15;
}

+ (unint64_t)countForAssetsWithUUIDs:(id)a3 includePendingChanges:(BOOL)a4 inManagedObjectContext:(id)a5 error:(id *)a6
{
  return objc_msgSend(a1, "countForAssetsWithUUIDs:uuidKeyPath:includePendingChanges:inManagedObjectContext:error:", a3, CFSTR("uuid"), a4, a5, a6);
}

+ (unint64_t)countForAssetsWithCloudAssetGUIDs:(id)a3 includePendingChanges:(BOOL)a4 inManagedObjectContext:(id)a5 error:(id *)a6
{
  return objc_msgSend(a1, "countForAssetsWithUUIDs:uuidKeyPath:includePendingChanges:inManagedObjectContext:error:", a3, CFSTR("cloudAssetGUID"), a4, a5, a6);
}

+ (unint64_t)countForAssetsWithUUIDs:(id)a3 uuidKeyPath:(id)a4 includePendingChanges:(BOOL)a5 inManagedObjectContext:(id)a6 error:(id *)a7
{
  _BOOL8 v9;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  id v20;
  id v22;

  v9 = a5;
  v11 = a3;
  v12 = a4;
  v13 = a6;
  if (objc_msgSend(v11, "count"))
  {
    v14 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), v12, v11);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "fetchRequestWithEntityName:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v18, "setIncludesPendingChanges:", v9);
    objc_msgSend(v18, "setPredicate:", v15);
    v22 = 0;
    v19 = objc_msgSend(v13, "countForFetchRequest:error:", v18, &v22);
    v20 = v22;

    objc_autoreleasePoolPop(v14);
    if (a7 && v19 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v20 = objc_retainAutorelease(v20);
      *a7 = v20;
      v19 = 0x7FFFFFFFFFFFFFFFLL;
    }
  }
  else
  {
    v19 = 0;
    v20 = 0;
  }

  return v19;
}

+ (PLManagedAsset)assetWithObjectID:(id)a3 inLibrary:(id)a4
{
  id v6;
  void *v7;
  void *v8;

  v6 = a3;
  objc_msgSend(a4, "managedObjectContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "assetWithObjectID:inManagedObjectContext:", v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return (PLManagedAsset *)v8;
}

+ (id)assetsWithObjectIDs:(id)a3 inLibrary:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v5 = a3;
  v6 = a4;
  if (objc_msgSend(v5, "count"))
  {
    v7 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@"), v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "setIncludesPendingChanges:", 0);
    objc_msgSend(v11, "setPredicate:", v8);
    if ((unint64_t)objc_msgSend(v5, "count") >= 0x65)
      objc_msgSend(v11, "setFetchBatchSize:", 100);
    objc_msgSend(v6, "managedObjectContext");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 0;
    objc_msgSend(v12, "executeFetchRequest:error:", v11, &v15);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_autoreleasePoolPop(v7);
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

+ (id)assetUUIDsByObjectIDs:(id)a3 withFilterPredicate:(id)a4 context:(id)a5 error:(id *)a6
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD v26[4];
  id v27;
  id v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  _QWORD v43[2];
  _QWORD v44[3];

  v44[2] = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "fetchRequestWithEntityName:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("self IN %@"), v9);
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = (void *)v15;
  if (v10)
  {
    v17 = (void *)MEMORY[0x1E0CB3528];
    v44[0] = v15;
    v44[1] = v10;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v44, 2);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "andPredicateWithSubpredicates:", v18);
    v19 = objc_claimAutoreleasedReturnValue();

    v16 = (void *)v19;
  }
  objc_msgSend(v14, "setPredicate:", v16);
  v43[0] = CFSTR("objectID");
  v43[1] = CFSTR("uuid");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v43, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setPropertiesToFetch:", v20);
  objc_msgSend(v14, "setResultType:", 2);
  v37 = 0;
  v38 = &v37;
  v39 = 0x3032000000;
  v40 = __Block_byref_object_copy__14262;
  v41 = __Block_byref_object_dispose__14263;
  v42 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__14262;
  v35 = __Block_byref_object_dispose__14263;
  v36 = 0;
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __74__PLManagedAsset_assetUUIDsByObjectIDs_withFilterPredicate_context_error___block_invoke;
  v26[3] = &unk_1E3676348;
  v21 = v11;
  v27 = v21;
  v22 = v14;
  v28 = v22;
  v29 = &v31;
  v30 = &v37;
  objc_msgSend(v21, "performBlockAndWait:", v26);
  v23 = (void *)v38[5];
  if (a6 && !v23)
  {
    *a6 = objc_retainAutorelease((id)v32[5]);
    v23 = (void *)v38[5];
  }
  v24 = v23;

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  return v24;
}

+ (id)assetsWithGroupingUUID:(id)a3 inManagedObjectContext:(id)a4
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C97B48];
  v6 = a4;
  v7 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("groupingUUID == %@"), v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v10);
  v15 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v15);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = v15;
  if (!v11)
  {
    PLBackendGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v17 = v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Fetch for grouped assets failed with error %@", buf, 0xCu);
    }

  }
  return v11;
}

+ (id)imageAssetsForMediaGroupUUID:(id)a3 moc:(id)a4
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  id v17;
  uint8_t buf[4];
  id v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C97B48];
  v6 = a4;
  v7 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@ AND noindex:(%K) = %d"), CFSTR("mediaGroupUUID"), v7, CFSTR("kind"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v10);
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("addedDate"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setSortDescriptors:", v12);

  v17 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = v17;
  if (!v13)
  {
    PLBackendGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v14;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }

  }
  return v13;
}

+ (id)videoAssetsForMediaGroupUUID:(id)a3 moc:(id)a4
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  id v17;
  uint8_t buf[4];
  id v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C97B48];
  v6 = a4;
  v7 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("mediaGroupUUID = %@ AND noindex:(kind) = %d"), v7, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v10);
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("addedDate"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setSortDescriptors:", v12);

  v17 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = v17;
  if (!v13)
  {
    PLBackendGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v14;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }

  }
  return v13;
}

+ (id)predicateToExcludeRestrictedLockedAssets
{
  pl_dispatch_once();
  return (id)predicateToExcludeRestrictedLockedAssets_pl_once_object_12;
}

+ (id)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath:(id)a3
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  pl_dispatch_once();
  v10 = CFSTR("thumbnailIndex");
  v4 = (void *)MEMORY[0x1E0CB35D0];
  v5 = (id)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath__pl_once_object_15;
  objc_msgSend(v4, "expressionForKeyPath:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v11[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "predicateWithSubstitutionVariables:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateToExcludeCameraAutoAdjustments
{
  pl_dispatch_once();
  return (id)predicateToExcludeCameraAutoAdjustments_pl_once_object_16;
}

+ (id)predicateToLimitToCaptureSessionIdentifier:(id)a3
{
  id v5;
  void *v6;
  void *v8;

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 707, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("captureSessionIdentifier != nil"));

  }
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("captureSessionIdentifier"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)_predicateForDepthType:(signed __int16)a3
{
  int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v12;
  _QWORD v13[3];

  v3 = a3;
  v13[2] = *MEMORY[0x1E0C80C00];
  if (!a3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 737, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("depthType != PLDepthTypeNone"));

  }
  v4 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K != %d)"), CFSTR("depthType"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v5;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K == %d)"), CFSTR("depthType"), v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateForDepthEffectPhotos
{
  return (id)objc_msgSend(a1, "_predicateForDepthType:", 1);
}

+ (id)predicateForCinematicVideos
{
  return (id)objc_msgSend(a1, "_predicateForDepthType:", 2);
}

+ (id)predicateForSpatialMedia
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) != %d"), CFSTR("spatialType"), 0);
}

+ (id)predicateToIncludeDuplicateAssetVisibilityStateMostRelevant
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("duplicateAssetVisibilityState"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("duplicateAssetVisibilityState"), 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "orPredicateWithSubpredicates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)predicateToExcludeDuplicateAssetVisibilityStateHidden
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) != %d"), CFSTR("duplicateAssetVisibilityState"), 100);
}

+ (id)predicateToExcludeNonVisibleStackedAssets
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[2];
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) != %d"), CFSTR("avalancheKind"), 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v3;
  v4 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("avalancheKind"), 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = v5;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("avalanchePickType"), 20);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v12, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "orPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAssets
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == YES"), CFSTR("additionalAttributes.allowedForAnalysis"));
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToLatestSceneVersion
{
  void *v3;
  void *v4;

  +[PLMediaAnalysisServiceRequestAdapter currentSceneVersion](PLMediaAnalysisServiceRequestAdapter, "currentSceneVersion");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToSceneVersion:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToSceneVersion:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  if (a3)
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %d"), CFSTR("additionalAttributes.sceneAnalysisVersion"), objc_msgSend(a3, "intValue"));
  else
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %d"), CFSTR("additionalAttributes.sceneAnalysisVersion"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(a1, "predicateToIncludeOnlyAllowedForAnalysisAssets");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v6;
  v10[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToLatestFaceVersion
{
  void *v3;
  void *v4;

  +[PLMediaAnalysisServiceRequestAdapter currentFaceVersion](PLMediaAnalysisServiceRequestAdapter, "currentFaceVersion");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToFaceVersion:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToFaceVersion:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  if (a3)
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %d"), CFSTR("additionalAttributes.faceAnalysisVersion"), objc_msgSend(a3, "intValue"));
  else
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %d"), CFSTR("additionalAttributes.faceAnalysisVersion"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(a1, "predicateToIncludeOnlyAllowedForAnalysisAssets");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v6;
  v10[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateToIncludeOnlyContentContributedByCurrentUser
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("ANY %K.%K == YES"), CFSTR("libraryScopeAssetContributors"), CFSTR("participant.isCurrentUser"));
}

+ (id)predicateToIncludeBothPrivateAssetsAndSharedContentContributedByCurrentUser
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  +[PLManagedAsset predicateToIncludeOnlyContentContributedByCurrentUser](PLManagedAsset, "predicateToIncludeOnlyContentContributedByCurrentUser");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  +[PLManagedAsset predicateForAssetSharingFilter:](PLManagedAsset, "predicateForAssetSharingFilter:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "orPredicateWithSubpredicates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)predicateForAssetSharingFilter:(signed __int16)a3 noindex:(BOOL)a4
{
  _BOOL8 v4;
  const __CFString *v5;

  v4 = a3 == 1;
  if (a4)
    v5 = CFSTR("noindex:(%K) == %d");
  else
    v5 = CFSTR("%K == %d");
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", v5, CFSTR("activeLibraryScopeParticipationState"), v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

+ (id)predicateForAssetSharingFilter:(signed __int16)a3
{
  return (id)objc_msgSend(a1, "predicateForAssetSharingFilter:noindex:", a3, 0);
}

+ (id)predicateForSpatialOverCaptureAssets
{
  pl_dispatch_once();
  return (id)predicateForSpatialOverCaptureAssets_predicate;
}

+ (id)predicateForReframedAssets
{
  pl_dispatch_once();
  return (id)predicateForReframedAssets_predicate;
}

+ (id)predicateToIncludePrivateLibraryAssetsAllowingIndexingOnParticipationState:(BOOL)a3
{
  _BOOL4 v3;
  void *v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[4];

  v3 = a3;
  v12[3] = *MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForSharedLibraryExclusions"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("visibilityState"), 0, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v6;
  if (v3)
    v7 = CFSTR("%K == %d");
  else
    v7 = CFSTR("noindex:(%K) == %d");
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", v7, CFSTR("activeLibraryScopeParticipationState"), 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v12, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (id)predicateToIncludeSharedLibraryAssetsAllowingIndexingOnParticipationState:(BOOL)a3
{
  _BOOL4 v3;
  void *v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[4];

  v3 = a3;
  v12[3] = *MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForSharedLibraryExclusions"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("visibilityState"), 0, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v6;
  if (v3)
    v7 = CFSTR("%K == %d");
  else
    v7 = CFSTR("noindex:(%K) == %d");
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", v7, CFSTR("activeLibraryScopeParticipationState"), 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v12, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (NSPredicate)predicateToIncludeSharedLibrarySharingSuggestionsAssets
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForSharedLibraryExclusions"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  PLManagedAssetPredicateToFetchAssetsSuggestedForSharing();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "andPredicateWithSubpredicates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSPredicate *)v6;
}

+ (id)predicateForRAWAndRPlusJAssets
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K > 1) AND (noindex:(%K) & %u) != %u"), CFSTR("packedBadgeAttributes"), CFSTR("packedBadgeAttributes"), 6, 0);
}

+ (id)predicateForProResAssets
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("isMagicCarpet"), 1);
}

+ (id)predicateForBurstAssetsWithBurstUUID:(id)a3
{
  return (id)objc_msgSend(a1, "_predicateForAvalancheKindAssetsWithUUID:kind:", a3, 1);
}

+ (id)_predicateForAvalancheKindAssetsWithUUID:(id)a3 kind:(unsigned __int16)a4
{
  uint64_t v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[3];

  v4 = a4;
  v12[2] = *MEMORY[0x1E0C80C00];
  v6 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("avalancheUUID"), a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = v7;
  objc_msgSend(a1, "predicateForAvalancheKindAssetsWithKind:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v12, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (id)predicateForAvalancheKindAssetsWithKind:(unsigned __int16)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("avalancheUUID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v4;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAvalancheSupportedAssets"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "andPredicateWithSubpredicates:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

+ (id)predicateForBurstStackAssets
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[5];

  v10[4] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("avalancheKind"), 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v3;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K >= %d"), CFSTR("avalanchePickType"), 16);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = v4;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K <= %d"), CFSTR("avalanchePickType"), 0x7FFFFFFFLL);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10[2] = v5;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K & %i) == %i"), CFSTR("avalanchePickType"), 16, 16);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[3] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateForAssetSubtype:(signed __int16)a3
{
  int v3;
  void *v7;

  v3 = a3;
  if (!a3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 993, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("subtype != PLAssetSubtypeNone"));

  }
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K != %d) AND (%K == %d)"), CFSTR("kindSubtype"), 0, CFSTR("kindSubtype"), v3);
}

+ (id)predicateForUnadjustedAssetsWithKeyPathToAsset:(id)a3
{
  uint64_t v4;

  if (a3)
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K.%K == %i"), a3, CFSTR("adjustmentsState"), 0);
  else
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %i"), CFSTR("adjustmentsState"), 0, v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

+ (id)predicateForAdjustedAssetsWithKeyPathToAsset:(id)a3
{
  uint64_t v4;

  if (a3)
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K.%K != %i"), a3, CFSTR("adjustmentsState"), 0);
  else
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %i"), CFSTR("adjustmentsState"), 0, v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

+ (id)predicateForStyleableAssets
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > %d"), CFSTR("currentSleetCast"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K > 0"), CFSTR("additionalAttributes.sleetIsReversible"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "andPredicateWithSubpredicates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (void)createTHMFileWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fileURLForThumbnailFile:(id)a5
{
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;

  v7 = (void *)MEMORY[0x1E0D73218];
  v8 = a5;
  v9 = a4;
  v10 = a3;
  objc_msgSend(v7, "defaultFormatChooser");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "indexSheetUnbakedFormat");
  v23 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v23, "size");
  v13 = v12;
  v15 = v14;
  DCIM_sizeFromPLImage();
  if (v13 <= v15)
    v18 = v15;
  else
    v18 = v13;
  if (v16 >= v17)
    v16 = v17;
  if (v18 >= v16)
    v19 = v10;
  else
    v19 = v9;
  v20 = v19;
  DCIM_sizeFromPLImage();
  PLSquareCropRectForSize();
  v21 = (void *)PLCreateCroppedImageFromImage();

  v22 = (void *)DCIM_newJPEGRepresentationWithPLImage();
  objc_msgSend(v22, "writeToURL:atomically:", v8, 0);

}

+ (BOOL)invalidateReverseLocationDataOnAllAssetsInManagedObjectContext:(id)a3 error:(id *)a4
{
  objc_class *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  id v20;
  uint8_t buf[4];
  void *v22;
  const __CFString *v23;
  _QWORD v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  v5 = (objc_class *)MEMORY[0x1E0C97AB0];
  v6 = a3;
  v7 = [v5 alloc];
  +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithEntityName:", v8);

  v23 = CFSTR("reverseLocationDataIsValid");
  v24[0] = MEMORY[0x1E0C9AAA0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, &v23, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToUpdate:", v10);

  objc_msgSend(v9, "setResultType:", 0);
  v20 = 0;
  objc_msgSend(v6, "executeRequest:error:", v9, &v20);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = v20;
  v13 = v12;
  if (v11)
  {
    PLMomentsGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v15 = "Location data invalidated for all assets";
      v16 = v14;
      v17 = OS_LOG_TYPE_DEFAULT;
      v18 = 2;
LABEL_8:
      _os_log_impl(&dword_199541000, v16, v17, v15, buf, v18);
    }
  }
  else
  {
    if (a4)
      *a4 = objc_retainAutorelease(v12);
    PLMomentsGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v13;
      v15 = "Failed to batch-invalidate location data for all assets: %@";
      v16 = v14;
      v17 = OS_LOG_TYPE_ERROR;
      v18 = 12;
      goto LABEL_8;
    }
  }

  return v11 != 0;
}

+ (BOOL)invalidateBehavioralScoreOnAllAssetsInManagedObjectContext:(id)a3 error:(id *)a4
{
  objc_class *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  id v20;
  uint8_t buf[4];
  void *v22;
  const __CFString *v23;
  _QWORD v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  v5 = (objc_class *)MEMORY[0x1E0C97AB0];
  v6 = a3;
  v7 = [v5 alloc];
  +[PLComputedAssetAttributes entityName](PLComputedAssetAttributes, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithEntityName:", v8);

  v23 = CFSTR("behavioralScore");
  v24[0] = &unk_1E3764770;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, &v23, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToUpdate:", v10);

  objc_msgSend(v9, "setResultType:", 0);
  v20 = 0;
  objc_msgSend(v6, "executeRequest:error:", v9, &v20);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = v20;
  v13 = v12;
  if (v11)
  {
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v15 = "Behavioral score invalidated for all assets";
      v16 = v14;
      v17 = OS_LOG_TYPE_DEFAULT;
      v18 = 2;
LABEL_8:
      _os_log_impl(&dword_199541000, v16, v17, v15, buf, v18);
    }
  }
  else
  {
    if (a4)
      *a4 = objc_retainAutorelease(v12);
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v13;
      v15 = "Failed to batch-invalidate behavioral score data for all assets: %@";
      v16 = v14;
      v17 = OS_LOG_TYPE_ERROR;
      v18 = 12;
      goto LABEL_8;
    }
  }

  return v11 != 0;
}

+ (id)_importAlbumIsolationQueue
{
  pl_dispatch_once();
  return (id)_importAlbumIsolationQueue_importAlbumQueue;
}

+ (void)clearImportSessionObjectIDCacheOnManagedObjectContext:(id)a3
{
  id v3;

  objc_msgSend(a3, "userInfo");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeObjectForKey:", CFSTR("importSessionObjectIDCache"));

}

+ (int64_t)cloudDeletionTypeForTombstone:(id)a3
{
  return 1;
}

+ (NSString)cloudUUIDKeyForDeletion
{
  return (NSString *)CFSTR("cloudAssetGUID");
}

+ (id)predicateToExcludeVideosWithVideoKeyFrameSetWithKeyPathToAsset:(id)a3
{
  id v5;
  void *v6;
  void *v8;

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 1958, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("keyPathToAsset"));

  }
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K.%K != %d || (%K.%K == %d && %K.%K == %d)"), v5, CFSTR("kind"), 1, v5, CFSTR("videoKeyFrameValue"), 0, v5, CFSTR("videoKeyFrameTimeScale"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)videoComplementVisibilityStatePlayablePredicate
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 4);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(videoCpVisibilityState & %i) != 0 AND (videoCpVisibilityState & %i) == 0"), 4, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(videoCpVisibilityState & %i) != 0 AND (videoCpVisibilityState & %i) == 0"), 8, 4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v4);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(videoCpVisibilityState & %i) != 0 AND (videoCpVisibilityState & %i) == 0 AND (videoCpVisibilityState & %i) == 0 AND (videoCpVisibilityState & %i) == 0"), 2, 1, 8, 4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v5);
  v6 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %i"), CFSTR("videoCpVisibilityState"), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v7;
  +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForUnadjustedAssetsWithKeyPathToAsset:", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "addObject:", v10);
  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (BOOL)_isLoopingVideoPlaybackVariation:(unsigned __int16)a3
{
  return (a3 - 1) < 2;
}

+ (void)deleteOldPlaceholderAssetsInManagedObjectContext:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD v30[2];
  uint8_t buf[4];
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v4 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_opt_new();
  objc_msgSend(v6, "setDay:", -7);
  objc_msgSend(MEMORY[0x1E0C99D48], "calendarWithIdentifier:", *MEMORY[0x1E0C996C8]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "dateByAddingComponents:toDate:options:", v6, v5, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  PLBackendGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138543362;
    v32 = (uint64_t)v8;
    _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_INFO, "Deleting old placeholder assets older than %{public}@", buf, 0xCu);
  }

  v10 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "fetchRequestWithEntityName:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForPlaceholderAsset"), 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = v14;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K < %@"), CFSTR("addedDate"), v8);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v30[1] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "andPredicateWithSubpredicates:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setPredicate:", v17);

  v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97A90]), "initWithFetchRequest:", v12);
  objc_msgSend(v18, "setResultType:", 2);
  v29 = 0;
  objc_msgSend(v3, "executeRequest:error:", v18, &v29);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v29;
  PLBackendGetLog();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = v21;
  if (v19)
  {
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v19, "result");
      v28 = v8;
      v23 = v5;
      v24 = v3;
      v25 = v4;
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = objc_msgSend(v26, "unsignedLongValue");
      *(_DWORD *)buf = 134217984;
      v32 = v27;
      _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_INFO, "Deleted %lu placeholder assets", buf, 0xCu);

      v4 = v25;
      v3 = v24;
      v5 = v23;
      v8 = v28;
    }
  }
  else if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v32 = (uint64_t)v20;
    _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Failed to delete old placeholder assets %@", buf, 0xCu);
  }

  objc_autoreleasePoolPop(v4);
}

+ (signed)correctedOrientation:(signed __int16)a3
{
  signed __int16 v3;

  v3 = a3;
  if ((unsigned __int16)a3 - 9 < 0xFFFFFFF8)
    return 1;
  return v3;
}

+ (BOOL)validMomentShareForPlaceholderAsset:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  BOOL v7;

  v3 = a3;
  if (objc_msgSend(v3, "isPlaceholderAsset")
    && (objc_msgSend(v3, "momentShare"), v4 = (void *)objc_claimAutoreleasedReturnValue(), v4, v4))
  {
    objc_msgSend(v3, "momentShare");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "shareURL");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6 != 0;

  }
  else
  {
    v7 = 1;
  }

  return v7;
}

+ (id)cloudMasterMediaMetadataForAssetObjectID:(id)a3 managedObjectContext:(id)a4 error:(id *)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v16;
  uint8_t buf[4];
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a3;
  objc_msgSend((id)objc_opt_class(), "fetchRequest");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudMaster.assets CONTAINS %@"), v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "setPredicate:", v10);
  v16 = 0;
  objc_msgSend(v7, "executeFetchRequest:error:", v9, &v16);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = v16;
  if (v11)
  {
    objc_msgSend(v11, "firstObject");
    v13 = objc_claimAutoreleasedReturnValue();
    -[NSObject valueForKey:](v13, "valueForKey:", CFSTR("data"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    PLBackendGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Fetch for media metadata failed: %@", buf, 0xCu);
    }
    v14 = 0;
  }

  if (a5)
    *a5 = objc_retainAutorelease(v12);

  return v14;
}

+ (id)fetchPredicateForLegacyRequiredResourcesLocallyAvailable:(BOOL)a3 photoLibrary:(id)a4
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v5 = a4;
  v6 = v5;
  if (a3 || objc_msgSend(v5, "isCloudPhotoLibraryEnabled"))
  {
    +[PLManagedAsset predicateForAssetsWithCompleteResourcesOnAsset](PLManagedAsset, "predicateForAssetsWithCompleteResourcesOnAsset");
    v7 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithValue:", 1);
    v7 = objc_claimAutoreleasedReturnValue();
  }
  v8 = (void *)v7;

  return v8;
}

+ (BOOL)isOrphanedMediaGroupUUID:(id)a3
{
  return objc_msgSend(a3, "hasPrefix:", CFSTR("failed-"));
}

+ (id)insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 mainFileMetadata:(id)a5 savedAssetType:(signed __int16)a6 bundleScope:(unsigned __int16)a7 uuid:(id)a8 replacementUUID:(id)a9 imageSource:(CGImageSource *)a10 imageData:(id *)a11 isPlaceholder:(BOOL)a12 deleteFileOnFailure:(BOOL)a13
{
  return (id)objc_msgSend(a1, "_insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", a3, a4, a5, a6, a7, a8);
}

+ (id)insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 savedAssetType:(signed __int16)a5 bundleScope:(unsigned __int16)a6 uuid:(id)a7 replacementUUID:(id)a8 imageSource:(CGImageSource *)a9 imageData:(id *)a10
{
  uint64_t v11;

  LOWORD(v11) = 256;
  return (id)objc_msgSend(a1, "_insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", a3, a4, 0, a5, a6, a7, a8, a9, a10, v11);
}

+ (id)_insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 mainFileMetadata:(id)a5 savedAssetType:(signed __int16)a6 bundleScope:(unsigned __int16)a7 uuid:(id)a8 replacementUUID:(id)a9 imageSource:(CGImageSource *)a10 imageData:(id *)a11 isPlaceholder:(BOOL)a12 deleteFileOnFailure:(BOOL)a13
{
  uint64_t v14;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  int v24;
  void *v25;
  char v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v33;
  void *v34;
  unsigned int v36;
  uint8_t buf[4];
  void *v38;
  uint64_t v39;

  v36 = a7;
  v14 = a6;
  v39 = *MEMORY[0x1E0C80C00];
  v18 = a3;
  v19 = a4;
  v20 = a5;
  v21 = a8;
  v22 = a9;
  objc_msgSend(v18, "pathManager");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = objc_msgSend(v23, "isUBF");

  if (v19)
  {
    if (v24)
    {
      objc_msgSend(MEMORY[0x1E0D73310], "maskForReferencedAsset");
      if ((PLValidatedSavedAssetTypeApplies() & 1) == 0)
      {
        if (!v21)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v33, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 5125, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("uuid"));

        }
        objc_msgSend(v19, "path");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = objc_msgSend(v25, "containsString:", v21);

        if ((v26 & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 5127, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[mainFileURL.path containsString:uuid]"));

        }
      }
    }
  }
  objc_msgSend(a1, "_createAssetModelToInsert:uuid:replacementUUID:", v18, v21, v22);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = v27;
  if (!a12
    && (objc_msgSend(v27, "setAttributesFromMainFileURL:mainFileMetadata:savedAssetType:bundleScope:isPlaceholder:placeholderFileURL:imageSource:imageData:", v19, v20, v14, v36, 0, 0, a10, a11) & 1) == 0)
  {
    PLMigrationGetLog();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v19, "path");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v38 = v30;
      _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "Failed to set attributes for asset at path %@", buf, 0xCu);

    }
    if (a13)
    {
      +[PLAssetTransactionReason transactionReason:](PLAssetTransactionReason, "transactionReason:", CFSTR("[_insertAssetIntoPhotoLibrary:mainFileURL:savedAssetType:replacementUUID:imageSource:imageData:sPlaceholder:deleteFileOnFailure:] We failed to set the asset's attributes, so we are now deleting the non-placeholder asset that was replaced."));
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "deleteWithReason:", v31);
    }
    else
    {
      +[PLAssetTransactionReason transactionReason:](PLAssetTransactionReason, "transactionReason:", CFSTR("[_insertAssetIntoPhotoLibrary:mainFileURL:savedAssetType:replacementUUID:imageSource:imageData:sPlaceholder:deleteFileOnFailure:] We failed to set the asset's attributes, so we are now deleting the non-placeholder asset that was replaced from the database only because deleteMainFileOnFailure was NO."));
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "deleteFromDatabaseOnlyWithReason:", v31);
    }

    v28 = 0;
  }

  return v28;
}

+ (id)_createAssetModelToInsert:(id)a3 uuid:(id)a4 replacementUUID:(id)a5
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = v11;
  if (v10 && v11)
  {
    if (objc_msgSend(v10, "isEqualToString:", v11))
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 5154, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("![uuid isEqualToString:replacementUUID]"));

    }
  }
  else if (!v11)
  {
    goto LABEL_10;
  }
  objc_msgSend(a1, "assetWithUUID:inLibrary:", v12, v9);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
    goto LABEL_12;
  PLBackendGetLog();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v19 = v12;
    _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Could find photo with UUID %@. This will cause duplicates.", buf, 0xCu);
  }

LABEL_10:
  objc_msgSend(v9, "managedObjectContext");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedObject insertInManagedObjectContext:](PLManagedAsset, "insertInManagedObjectContext:", v16);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
    objc_msgSend(v14, "setUuid:", v10);
LABEL_12:

  return v14;
}

+ (int64_t)totalPurgeableSizeOnDiskInLibrary:(id)a3 urgency:(int64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  int64_t v10;

  v6 = a3;
  if (objc_msgSend(v6, "isCloudPhotoLibraryEnabled"))
  {
    objc_msgSend(v6, "libraryBundle");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLCPLSettings settingsWithLibraryBundle:](PLCPLSettings, "settingsWithLibraryBundle:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v8, "isKeepOriginalsEnabled"))
      v9 = 1;
    else
      v9 = 3;

  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(a1, "totalPurgeableSizeOnDiskInLibrary:urgency:sizeOption:", v6, a4, v9);

  return v10;
}

+ (int64_t)totalPurgeableSizeOnDiskInLibrary:(id)a3 urgency:(int64_t)a4 sizeOption:(unint64_t)a5
{
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  int64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v34;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  uint8_t buf[4];
  int64_t v41;
  __int16 v42;
  uint64_t v43;
  _QWORD v44[2];

  v44[1] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  objc_msgSend(v8, "managedObjectContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (a5)
  {
    v10 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    if ((a5 & 1) != 0)
    {
      +[PLInternalResource nonOriginalCPLResourceTypes](PLInternalResource, "nonOriginalCPLResourceTypes");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "addObjectsFromArray:", v11);

    }
    if ((a5 & 2) != 0)
    {
      +[PLInternalResource originalCPLResourceTypesForMaster](PLInternalResource, "originalCPLResourceTypesForMaster");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "addObjectsFromArray:", v12);

      +[PLInternalResource originalCPLResourceTypesForAsset](PLInternalResource, "originalCPLResourceTypesForAsset");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "addObjectsFromArray:", v13);

    }
    v14 = (void *)MEMORY[0x1E0C97B48];
    +[PLInternalResource entityName](PLInternalResource, "entityName");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "fetchRequestWithEntityName:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v16, "setResultType:", 2);
    +[PLInternalResource purgeablePushedPredicateForCPLResourceTypes:urgency:](PLInternalResource, "purgeablePushedPredicateForCPLResourceTypes:urgency:", v10, a4);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setPredicate:", v17);

    v18 = objc_alloc_init(MEMORY[0x1E0C97B30]);
    objc_msgSend(v18, "setName:", CFSTR("totalFileSize"));
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionWithFormat:", CFSTR("sum:(dataLength)"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "setExpression:", v19);

    objc_msgSend(v18, "setExpressionResultType:", 300);
    v44[0] = v18;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v44, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setPropertiesToFetch:", v20);

    v39 = 0;
    objc_msgSend(v9, "executeFetchRequest:error:", v16, &v39);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v39;
    if (v21)
    {
      if (objc_msgSend(v21, "count") == 1)
      {
        objc_msgSend(v21, "objectAtIndexedSubscript:", 0);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("totalFileSize"));
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = objc_msgSend(v24, "longLongValue");

        if (v25 >= 1)
        {
          v38 = -1;
          if (PLIsAssetsd())
          {
            objc_msgSend(v8, "libraryServicesManager");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "cloudPhotoLibraryManager");
            v27 = (void *)objc_claimAutoreleasedReturnValue();

            v28 = objc_msgSend(v27, "sizeOfResourcesToUploadByCPL:", 0);
            v38 = v28;

          }
          else
          {
            objc_msgSend(v8, "assetsdClient");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v31, "libraryInternalClient");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            v37 = v22;
            objc_msgSend(v32, "synchronouslyGetSizeOfResourcesToUploadByCPL:error:", &v38, &v37);
            v36 = v37;

            v28 = v38;
            v22 = v36;
          }
          if (v25 <= v28 || v28 <= -1)
            v25 = 0;
          else
            v25 -= v28;
          PLBackendGetLog();
          v34 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 134218240;
            v41 = v25;
            v42 = 2048;
            v43 = v38;
            _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_DEFAULT, "totalPurgeableSizeOnDiskInLibrary pushedSize=%lld sizeOfResourcesToUpload=%lld", buf, 0x16u);
          }

        }
        goto LABEL_26;
      }
    }
    else
    {
      PLBackendGetLog();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        NSStringFromSelector(a2);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v41 = (int64_t)v30;
        v42 = 2112;
        v43 = (uint64_t)v22;
        _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "%@ failed to calculate size %@", buf, 0x16u);

      }
    }
    v25 = 0;
LABEL_26:

    goto LABEL_27;
  }
  v25 = 0;
LABEL_27:

  return v25;
}

+ (unint64_t)countUsedAssetsWithKind:(signed __int16)a3 excludeTrashed:(BOOL)a4 excludeInvisible:(BOOL)a5 excludeCloudShared:(BOOL)a6 excludePhotoStream:(BOOL)a7 inManagedObjectContext:(id)a8
{
  _BOOL4 v8;
  _BOOL4 v9;
  _BOOL4 v10;
  _BOOL4 v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  unint64_t v45;
  uint64_t v47;
  _BOOL4 v48;
  _BOOL4 v49;
  void *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  _QWORD v54[2];

  v8 = a7;
  v9 = a6;
  v10 = a5;
  v11 = a4;
  v12 = a3;
  v54[1] = *MEMORY[0x1E0C80C00];
  v13 = a8;
  v14 = (void *)MEMORY[0x19AEC1554]();
  v15 = objc_alloc_init(MEMORY[0x1E0C97B48]);
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  PLSafeEntityForNameInManagedObjectContext((uint64_t)v16, (uint64_t)v13, 0);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    v48 = v8;
    v49 = v9;
    v50 = v14;
    objc_msgSend(v15, "setEntity:", v17);
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (void *)MEMORY[0x1E0CB35D0];
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("complete"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v54[0] = v20;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v54, 1);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "expressionForFunction:arguments:", CFSTR("noindex:"), v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", &unk_1E375DA10);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3518], "predicateWithLeftExpression:rightExpression:modifier:type:options:", v22, v23, 0, 5, 0);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "addObject:", v24);

    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("kind"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = (void *)MEMORY[0x1E0CB35D0];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v12);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "expressionForConstantValue:", v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3518], "predicateWithLeftExpression:rightExpression:modifier:type:options:", v25, v28, 0, 4, 0);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "addObject:", v29);

    if (v11)
    {
      v30 = (void *)MEMORY[0x1E0CB35D0];
      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("trashedState"));
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v53 = v31;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v53, 1);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "expressionForFunction:arguments:", CFSTR("noindex:"), v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", &unk_1E375DA10);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3518], "predicateWithLeftExpression:rightExpression:modifier:type:options:", v33, v34, 0, 4, 0);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "addObject:", v35);

    }
    if (v10)
    {
      v36 = (void *)MEMORY[0x1E0CB35D0];
      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("visibilityState"));
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v52 = v37;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v52, 1);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "expressionForFunction:arguments:", CFSTR("noindex:"), v38);
      v39 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", &unk_1E375DA58);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3518], "predicateWithLeftExpression:rightExpression:modifier:type:options:", v39, v40, 0, 4, 0);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "addObject:", v41);

    }
    LOWORD(v47) = 0;
    v42 = objc_msgSend(MEMORY[0x1E0D73310], "validatedSavedAssetTypeMaskUnknown:photoBooth:photoStream:camera:cloudShared:cameraConnectionKit:cloudPhotoLibrary:wallpaper_UNUSED:momentShared:placeholder:referenced:alternate:guest:companionSynced:recovered:legacyImport:", 0, 0, v48, 0, v49, 0, 0x10001010000, v47);
    objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", v42, 0);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "addObject:", v43);

    objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v18);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setPredicate:", v44);
    v51 = 0;
    v45 = objc_msgSend(v13, "countForFetchRequest:error:", v15, &v51);

    v14 = v50;
  }
  else
  {
    v45 = 0;
  }

  objc_autoreleasePoolPop(v14);
  return v45;
}

+ (id)assetsWithValidatedSavedAssetTypeMask:(unsigned __int16)a3 inManagedObjectContext:(id)a4
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v4 = a3;
  v5 = a4;
  v6 = (void *)MEMORY[0x19AEC1554]();
  v7 = objc_alloc_init(MEMORY[0x1E0C97B48]);
  objc_msgSend((id)objc_opt_class(), "entityInManagedObjectContext:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setEntity:", v8);

  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", v4, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v9);
  v12 = 0;
  objc_msgSend(v5, "executeFetchRequest:error:", v7, &v12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v6);
  return v10;
}

+ (PLManagedAsset)assetWithUUID:(id)a3 inManagedObjectContext:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v5 = a3;
  v6 = a4;
  if (v5)
  {
    v7 = (void *)MEMORY[0x19AEC1554]();
    v8 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "fetchRequestWithEntityName:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("uuid == %@"), v5);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setPredicate:", v11);
    objc_msgSend(v10, "setFetchLimit:", 1);
    v15 = 0;
    objc_msgSend(v6, "executeFetchRequest:error:", v10, &v15);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v12, "count"))
    {
      objc_msgSend(v12, "objectAtIndex:", 0);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v13 = 0;
    }

    objc_autoreleasePoolPop(v7);
  }
  else
  {
    v13 = 0;
  }

  return (PLManagedAsset *)v13;
}

+ (PLManagedAsset)assetWithObjectID:(id)a3 inManagedObjectContext:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  NSObject *v11;
  id v12;
  id v14;
  uint8_t buf[4];
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  if (v5)
  {
    v7 = (void *)MEMORY[0x19AEC1554]();
    v14 = 0;
    objc_msgSend(v6, "existingObjectWithID:error:", v5, &v14);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v14;
    if (v9)
    {
      v10 = v9;
      PLBackendGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543618;
        v16 = v5;
        v17 = 2112;
        v18 = v10;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Failed to fetch asset %{public}@: %@.", buf, 0x16u);
      }

      objc_autoreleasePoolPop(v7);
      v12 = 0;
    }
    else
    {
      objc_autoreleasePoolPop(v7);
      v12 = v8;
    }

  }
  else
  {
    v12 = 0;
  }

  return (PLManagedAsset *)v12;
}

+ (id)newImagePropertiesFromImageSource:(CGImageSource *)a3
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0D75130], "imagePropertiesFromImageSource:", a3);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)v3;
  v5 = (void *)MEMORY[0x1E0C9AA70];
  if (v3)
    v5 = (void *)v3;
  v6 = v5;

  return v6;
}

+ (id)eventInfoForPTP
{
  pl_dispatch_once();
  return (id)eventInfoForPTP_eventInfo;
}

+ (id)_ptpEventInfoIsolationQueue
{
  pl_dispatch_once();
  return (id)_ptpEventInfoIsolationQueue_ptpQueue;
}

+ (id)ptpAssetIDForEventAndFilenameKey:(id)a3
{
  id v3;
  void *v4;
  id v5;
  id v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t);
  id v13;

  v3 = a3;
  v8 = 0;
  v9 = &v8;
  v10 = 0x3032000000;
  v11 = __Block_byref_object_copy__14262;
  v12 = __Block_byref_object_dispose__14263;
  v13 = 0;
  +[PLManagedAsset _ptpEventInfoIsolationQueue](PLManagedAsset, "_ptpEventInfoIsolationQueue");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v3;
  pl_dispatch_sync();

  v5 = (id)v9[5];
  _Block_object_dispose(&v8, 8);

  return v5;
}

+ (void)ptpSetAssetIDForEventAndFilenameKey:(id)a3 value:(id)a4
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;

  v5 = a3;
  v6 = a4;
  +[PLManagedAsset _ptpEventInfoIsolationQueue](PLManagedAsset, "_ptpEventInfoIsolationQueue");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v5;
  v11 = v6;
  v8 = v6;
  v9 = v5;
  pl_dispatch_sync();

}

+ (void)ptpResetEventAndFilenameMapping
{
  id v2;

  +[PLManagedAsset _ptpEventInfoIsolationQueue](PLManagedAsset, "_ptpEventInfoIsolationQueue");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  pl_dispatch_sync();

}

+ (id)_ptpCalendar
{
  pl_dispatch_once();
  return (id)_ptpCalendar__myCalendar;
}

+ (CGSize)sizeOfImageAtURL:(id)a3 outOrientation:(signed __int16 *)a4
{
  id v6;
  double v7;
  double v8;
  void *v9;
  id v10;
  BOOL v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  const __CFDictionary *v17;
  CGImageSourceRef v18;
  CGImageSourceRef v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  double v25;
  double v26;
  void *context;
  signed __int16 *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint8_t buf[4];
  id v33;
  __int16 v34;
  id v35;
  uint64_t v36;
  CGSize result;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = *MEMORY[0x1E0C9D820];
  v8 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  v29 = 0;
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithContentsOfURL:options:error:", v6, 1, &v29);
  v10 = v29;
  if (objc_msgSend(v9, "length"))
    v11 = v10 == 0;
  else
    v11 = 0;
  if (!v11)
  {
    PLBackendGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v33 = v6;
      v34 = 2112;
      v35 = v10;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Unable to read imageData from file '%@'. Error: %@", buf, 0x16u);
    }

    goto LABEL_26;
  }
  v28 = a4;
  context = (void *)MEMORY[0x19AEC1554]();
  v13 = (void *)MEMORY[0x1E0D752F0];
  objc_msgSend(v6, "pathExtension");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "typeWithIdentifier:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    v30 = *MEMORY[0x1E0CBD2A8];
    objc_msgSend(v15, "identifier");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = v16;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
    v17 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v17 = 0;
  }
  v18 = CGImageSourceCreateWithData((CFDataRef)v9, v17);
  if (!v18)
  {

    v21 = 0;
    v22 = 0;
    v23 = 0;
LABEL_19:
    PLBackendGetLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v33 = v6;
      _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "Failed to get size of image at %@", buf, 0xCu);
    }

    goto LABEL_22;
  }
  v19 = v18;
  v20 = (void *)objc_msgSend(a1, "newImagePropertiesFromImageSource:", v18);
  if (v20)
  {
    PFGetDimensionsFromImageProperties();
    v21 = 0;
    v22 = 0;
    v23 = 0;
  }
  else
  {
    v23 = 0;
    v22 = 0;
    v21 = 0;
  }
  CFRelease(v19);

  if (!v22 || !v23)
    goto LABEL_19;
  v7 = (double)objc_msgSend(v22, "longLongValue");
  v8 = (double)objc_msgSend(v23, "longLongValue");
LABEL_22:
  if (v28 && v21)
    *v28 = objc_msgSend(v21, "shortValue");

  objc_autoreleasePoolPop(context);
LABEL_26:

  v25 = v7;
  v26 = v8;
  result.height = v26;
  result.width = v25;
  return result;
}

+ (CGSize)dimensionsForVideoAtURL:(id)a3
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGSize result;

  objc_msgSend(MEMORY[0x1E0C8AF90], "assetWithURL:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset dimensionsForAVAsset:](PLManagedAsset, "dimensionsForAVAsset:", v3);
  v5 = v4;
  v7 = v6;

  v8 = v5;
  v9 = v7;
  result.height = v9;
  result.width = v8;
  return result;
}

+ (CGSize)dimensionsForAVAsset:(id)a3
{
  CGFloat width;
  CGFloat height;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGSize result;
  CGRect v14;
  CGRect v15;

  width = *MEMORY[0x1E0C9D820];
  height = *(double *)(MEMORY[0x1E0C9D820] + 8);
  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0D75130], "tracksWithMediaType:forAsset:", *MEMORY[0x1E0C8A808], a3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v5, "count"))
    {
      objc_msgSend(v5, "objectAtIndex:", 0);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "naturalSize");
      v8 = v7;
      v10 = v9;
      if (v6)
        objc_msgSend(v6, "preferredTransform");
      v14.size.width = v10 * 0.0 + 0.0 * v8;
      v14.size.height = v14.size.width;
      v14.origin.x = 0.0;
      v14.origin.y = 0.0;
      v15 = CGRectStandardize(v14);
      width = v15.size.width;
      height = v15.size.height;

    }
  }
  v11 = width;
  v12 = height;
  result.height = v12;
  result.width = v11;
  return result;
}

+ (BOOL)isHFRVideoAVAsset:(id)a3
{
  void *v3;
  void *v4;
  float v5;
  BOOL v6;

  objc_msgSend(MEMORY[0x1E0D75130], "tracksWithMediaType:forAsset:", *MEMORY[0x1E0C8A808], a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "objectAtIndex:", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "nominalFrameRate");
    v6 = v5 >= 105.0;

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

+ (id)keyPathsForValuesAffectingImageSize
{
  return (id)objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", CFSTR("width"), CFSTR("height"), 0);
}

+ (id)keyPathsForValuesAffectingGpsCoordinate
{
  return (id)objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", CFSTR("location"));
}

+ (id)keyPathsForValuesAffectingIsPhotoStreamPhoto
{
  return (id)objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", CFSTR("savedAssetType"));
}

+ (BOOL)_isLibraryScopeExiting:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  BOOL v6;
  void *v7;
  id v8;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v3 = a3;
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 0;
  objc_msgSend(v3, "libraryScope");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = objc_msgSend(v4, "exitState") != 0;
    *((_BYTE *)v14 + 24) = v6;
  }
  else
  {
    objc_msgSend(v3, "photoLibrary");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __41__PLManagedAsset__isLibraryScopeExiting___block_invoke;
    v10[3] = &unk_1E3677C68;
    v8 = v7;
    v11 = v8;
    v12 = &v13;
    objc_msgSend(v8, "performBlockAndWait:", v10);

    v6 = *((_BYTE *)v14 + 24) != 0;
  }

  _Block_object_dispose(&v13, 8);
  return v6;
}

+ (BOOL)guaranteedFlashOffForAssetAtURL:(id)a3
{
  CGImageSource *v3;
  CGImageSource *v4;
  CFDictionaryRef v5;
  void *v6;
  void *v7;
  void *v8;
  BOOL v9;

  v3 = CGImageSourceCreateWithURL((CFURLRef)a3, 0);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = PLImageSourceCopyPropertiesAtIndexDecodingRawIfNecessary(v3, 0, 0);
  -[__CFDictionary objectForKey:](v5, "objectForKey:", *MEMORY[0x1E0CBCB50]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", *MEMORY[0x1E0CBCB88]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
    v9 = (objc_msgSend(v7, "integerValue") & 1) == 0;
  else
    v9 = 0;
  CFRelease(v4);

  return v9;
}

+ (signed)imageDepthTypeFromCustomRenderedValue:(signed __int16)a3
{
  if (a3 > 9)
    return 0;
  else
    return word_199B9B5AC[(unsigned __int16)a3];
}

+ (signed)imageHDRTypeFromCustomRenderedValue:(signed __int16)a3
{
  if ((a3 - 2) >= 3)
    return 0;
  else
    return a3;
}

+ (id)allHDRValues
{
  if (allHDRValues_onceToken != -1)
    dispatch_once(&allHDRValues_onceToken, &__block_literal_global_656);
  return (id)allHDRValues_hdrValues;
}

+ (unsigned)defaultPlaybackStyleFromAssetType:(signed __int16)a3 subtype:(signed __int16)a4 playbackVariation:(unsigned __int16)a5
{
  unint64_t v5;
  __int16 v6;
  unsigned __int16 v7;

  v5 = 0x3000500050003uLL >> (16 * a5);
  if (a5 >= 4u)
    LOWORD(v5) = 0;
  if (a4 == 2)
    v6 = v5;
  else
    v6 = 1;
  if (a3)
    v6 = 0;
  if (a3 == 1)
    v7 = 4;
  else
    v7 = v6;
  if (a3 == 2)
    return 4;
  else
    return v7;
}

+ (id)keyPathsForValuesAffectingIsJPEG
{
  return (id)objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", CFSTR("uniformTypeIdentifier"));
}

+ (BOOL)isPrimaryImageFormatForUTI:(id)a3
{
  id v3;
  void *v4;
  char v5;

  if (!a3)
    return 0;
  objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    if ((objc_msgSend(v3, "conformsToType:", *MEMORY[0x1E0CEC530]) & 1) != 0
      || (objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC508]) & 1) != 0)
    {
      v5 = 1;
    }
    else
    {
      v5 = objc_msgSend(v4, "conformsToType:", *MEMORY[0x1E0CEC510]);
    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

+ (BOOL)isScreenRecordingFileName:(id)a3
{
  id v3;
  BOOL v4;

  v3 = a3;
  v4 = (objc_msgSend(v3, "hasPrefix:", CFSTR("RPReplay")) & 1) != 0
    || objc_msgSend(v3, "hasPrefix:", CFSTR("ScreenRecording"));

  return v4;
}

+ (id)uniformTypeFromPathExtension:(id)a3 assetType:(signed __int16)a4
{
  unsigned int v4;
  id v5;
  id *v6;
  id v7;
  void *v8;
  uint64_t v9;

  v4 = a4;
  v5 = a3;
  if (v4 > 2)
    v6 = (id *)MEMORY[0x1E0CEC498];
  else
    v6 = (id *)qword_1E3663F08[(unsigned __int16)v4];
  v7 = *v6;
  objc_msgSend(MEMORY[0x1E0D752F0], "typeWithFilenameExtension:conformingToType:", v5, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "isDynamic"))
  {
    objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithFilenameExtension:", v5);
    v9 = objc_claimAutoreleasedReturnValue();

    v8 = (void *)v9;
  }

  return v8;
}

+ (id)uniformTypeIdentifierFromPathExtension:(id)a3 assetType:(signed __int16)a4
{
  void *v4;
  void *v5;

  objc_msgSend(a1, "uniformTypeFromPathExtension:assetType:", a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

+ (signed)assetTypeFromUniformTypeIdentifier:(id)a3
{
  void *v3;
  signed __int16 v4;

  objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "conformsToType:", *MEMORY[0x1E0CEC568]) & 1) != 0)
  {
    v4 = 1;
  }
  else if ((objc_msgSend(v3, "conformsToType:", *MEMORY[0x1E0CEC520]) & 1) != 0
         || (objc_msgSend(v3, "conformsToType:", *MEMORY[0x1E0CEC570]) & 1) != 0)
  {
    v4 = 0;
  }
  else if (objc_msgSend(v3, "conformsToType:", *MEMORY[0x1E0CEC450]))
  {
    v4 = 2;
  }
  else
  {
    v4 = 3;
  }

  return v4;
}

+ (id)pathForMutationsDirectoryWithDirectory:(id)a3 filename:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  BOOL v11;
  void *v12;
  void *v13;
  void *v14;

  v5 = a3;
  v6 = a4;
  v7 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0D73280], "systemLibraryPathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v5, 31, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stringByDeletingPathExtension");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9 && (objc_msgSend(v9, "length") ? (v11 = v10 == 0) : (v11 = 1), !v11 && objc_msgSend(v10, "length")))
  {
    objc_msgSend(v8, "photoDirectoryWithType:", 9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (v12)
    {
      objc_msgSend(v12, "stringByAppendingPathComponent:", v9);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v14, "stringByAppendingPathComponent:", v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v13 = 0;
  }

  objc_autoreleasePoolPop(v7);
  return v13;
}

+ (id)pathForAdjustmentDirectoryWithMutationsDirectory:(id)a3
{
  return (id)objc_msgSend(a3, "stringByAppendingPathComponent:", *MEMORY[0x1E0D74370]);
}

+ (id)pathForAdjustmentFileWithPathManager:(id)a3 uuid:(id)a4 directory:(id)a5 filename:(id)a6
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = a6;
  if (objc_msgSend(v9, "isUBF"))
  {
    v13 = objc_alloc(MEMORY[0x1E0D73278]);
    objc_msgSend((id)*MEMORY[0x1E0CEC5A8], "identifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)objc_msgSend(v13, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v10, 0, v14, 2, 0);

    objc_msgSend(v9, "readOnlyUrlWithIdentifier:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "path");
  }
  else
  {
    objc_msgSend(v9, "assetPathForMutationsDirectoryWithDirectory:filename:", v11, v12);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset pathForAdjustmentDirectoryWithMutationsDirectory:](PLManagedAsset, "pathForAdjustmentDirectoryWithMutationsDirectory:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "stringByAppendingPathComponent:", CFSTR("Adjustments.plist"));
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  return v17;
}

+ (id)pathForAdjustmentDataFileWithPathManager:(id)a3 uuid:(id)a4 directory:(id)a5 filename:(id)a6
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = a6;
  if (objc_msgSend(v9, "isUBF"))
  {
    v13 = objc_alloc(MEMORY[0x1E0D73278]);
    objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)objc_msgSend(v13, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v10, 0, v14, 2, 0);

    objc_msgSend(v9, "readOnlyUrlWithIdentifier:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "path");
  }
  else
  {
    objc_msgSend(v9, "assetPathForMutationsDirectoryWithDirectory:filename:", v11, v12);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset pathForAdjustmentDirectoryWithMutationsDirectory:](PLManagedAsset, "pathForAdjustmentDirectoryWithMutationsDirectory:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "stringByAppendingPathComponent:", CFSTR("Adjustments.data"));
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  return v17;
}

+ (id)pathForAlchemistImageWithUUID:(id)a3 bundleScope:(unsigned __int16)a4 directory:(id)a5 filename:(id)a6 pathManager:(id)a7
{
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v10 = a4;
  v11 = a3;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  if (objc_msgSend(v14, "isUBF"))
  {
    v15 = objc_alloc(MEMORY[0x1E0D73278]);
    objc_msgSend((id)*MEMORY[0x1E0CEC508], "identifier");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void *)objc_msgSend(v15, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v11, v10, v16, 3, 15, 66137, 0);

    objc_msgSend(v14, "readOnlyUrlWithIdentifier:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "path");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(v14, "assetPathForComputeDirectoryWithDirectory:filename:", v12, v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "stringByAppendingPathComponent:", CFSTR("Alchemist.heic"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v19;
}

+ (id)extensionForFullsizeThumbnailFile
{
  return CFSTR("full.JPG");
}

+ (id)extensionForLargeThumbnailFile
{
  return CFSTR("JPG");
}

+ (id)extensionForMediumThumbnailFile
{
  return CFSTR("medium.JPG");
}

+ (id)diagnosticFilePathForLibrary:(id)a3 mainFilename:(id)a4 createIfNeeded:(BOOL)a5
{
  _BOOL8 v5;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v5 = a5;
  v7 = a4;
  objc_msgSend(a3, "pathManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "privateDirectoryWithSubType:createIfNeeded:error:", 8, v5, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "stringByDeletingPathExtension");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "stringByAppendingPathExtension:", CFSTR("DBG"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "stringByAppendingPathComponent:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (BOOL)isValidFileExtensionForImport:(id)a3
{
  id v3;
  BOOL v4;

  v3 = a3;
  v4 = (objc_msgSend(v3, "isEqualToString:", CFSTR("DBG")) & 1) == 0
    && !objc_msgSend(v3, "isEqualToString:", CFSTR("SLM"));

  return v4;
}

+ (BOOL)isValidFileURLForImport:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  char v6;
  BOOL v7;
  void *v8;

  v3 = a3;
  objc_msgSend(v3, "lastPathComponent");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), *MEMORY[0x1E0D74960], *MEMORY[0x1E0D74958]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "hasSuffix:", v5);

  if ((v6 & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    objc_msgSend(v3, "pathExtension");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = +[PLManagedAsset isValidFileExtensionForImport:](PLManagedAsset, "isValidFileExtensionForImport:", v8);

  }
  return v7;
}

+ (BOOL)isKnownFileExtension:(id)a3
{
  void *v3;
  int v4;
  void *v6;
  void *v7;

  objc_msgSend(a3, "uppercaseString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TIF")) & 1) != 0
    || (objc_msgSend(v3, "isEqualToString:", CFSTR("PNG")) & 1) != 0
    || (objc_msgSend(v3, "isEqualToString:", CFSTR("GIF")) & 1) != 0
    || (objc_msgSend(v3, "isEqualToString:", CFSTR("JPG")) & 1) != 0)
  {
    LOBYTE(v4) = 1;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D752F0], "typeWithFilenameExtension:", v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
      v4 = objc_msgSend(v6, "isDynamic") ^ 1;
    else
      LOBYTE(v4) = 0;

  }
  return v4;
}

+ (id)preferredFileExtensionForType:(id)a3
{
  void *v3;
  void *v4;
  __CFString *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint8_t v10[16];

  objc_msgSend(MEMORY[0x1E0D752F0], "typeWithIdentifier:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (!v3)
  {
    PLBackendGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Empty utiType. Default to JPG extension.", v10, 2u);
    }

    goto LABEL_7;
  }
  if ((objc_msgSend(v3, "isEqual:", *MEMORY[0x1E0CEC600]) & 1) != 0)
  {
    v5 = CFSTR("TIF");
    goto LABEL_17;
  }
  if ((objc_msgSend(v4, "isEqual:", *MEMORY[0x1E0CEC580]) & 1) != 0)
  {
    v5 = CFSTR("PNG");
    goto LABEL_17;
  }
  if ((objc_msgSend(v4, "isEqual:", *MEMORY[0x1E0CEC4F8]) & 1) != 0)
  {
    v5 = CFSTR("GIF");
    goto LABEL_17;
  }
  if ((objc_msgSend(v4, "isEqual:", *MEMORY[0x1E0CEC530]) & 1) != 0)
  {
LABEL_7:
    v5 = CFSTR("JPG");
    goto LABEL_17;
  }
  objc_msgSend(MEMORY[0x1E0D752F0], "preferredOrFallbackFilenameExtensionForType:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "uppercaseString");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
    v5 = v8;
  else
    v5 = CFSTR("JPG");

LABEL_17:
  return v5;
}

+ (id)assetsLibraryURLWithUUID:(id)a3 extension:(id)a4
{
  void *v4;
  void *v5;
  void *v6;

  v4 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@://%@/%@.%@?%@=%@&%@=%@"), CFSTR("assets-library"), CFSTR("asset"), CFSTR("asset"), a4, CFSTR("id"), a3, CFSTR("ext"), a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "URLWithString:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)photoFromAssetURL:(id)a3 photoLibrary:(id)a4
{
  return (id)objc_msgSend(a1, "photoFromAssetURL:photoLibrary:sidecar:", a3, a4, 0);
}

+ (id)photoFromAssetURL:(id)a3 photoLibrary:(id)a4 sidecar:(id *)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  NSObject *v18;
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(v8, "scheme");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v11, "isEqualToString:", CFSTR("assets-library")) & 1) == 0)
  {

    goto LABEL_11;
  }
  objc_msgSend(v8, "host");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "isEqualToString:", CFSTR("asset"));

  if (!v13)
  {
LABEL_11:
    objc_autoreleasePoolPop(v10);
    v17 = 0;
    goto LABEL_12;
  }
  v20 = 0;
  v21 = 0;
  objc_msgSend(a1, "uuidFromAssetURL:fileExtension:sidecarIndex:", v8, &v21, &v20);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v21;
  v16 = v20;
  if (!objc_msgSend(v14, "length")
    || (objc_msgSend((id)objc_opt_class(), "assetWithUUID:inLibrary:", v14, v9),
        (v17 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    PLBackendGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v23 = v14;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Could not find asset with UUID %{public}@", buf, 0xCu);
    }

    v17 = 0;
  }

  objc_autoreleasePoolPop(v10);
  if (a5)
    *a5 = 0;
LABEL_12:

  return v17;
}

+ (id)fileURLFromAssetURL:(id)a3 photoLibrary:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v14;

  v6 = a3;
  v7 = a4;
  v8 = (void *)MEMORY[0x19AEC1554]();
  v14 = 0;
  objc_msgSend(a1, "photoFromAssetURL:photoLibrary:sidecar:", v6, v7, &v14);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v14;
  v11 = v10;
  if (v10)
    objc_msgSend(v10, "fileURL");
  else
    objc_msgSend(v9, "mainFileURL");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v8);
  return v12;
}

+ (id)uuidFromAssetURL:(id)a3 fileExtension:(id *)a4 sidecarIndex:(id *)a5
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v30;
  void *v31;
  id *v32;
  id *v33;
  id v34;
  void *v35;
  void *v36;
  unsigned int v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(v7, "scheme");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v9, "isEqualToString:", CFSTR("assets-library")) & 1) != 0)
  {
    objc_msgSend(v7, "host");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isEqualToString:", CFSTR("asset"));

    if (!v11)
      goto LABEL_25;
    objc_msgSend(v7, "query");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v9, "length") >= 0x65)
    {

      objc_autoreleasePoolPop(v8);
      v28 = 0;
      goto LABEL_31;
    }
    objc_msgSend(v9, "componentsSeparatedByString:", CFSTR("&"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v38, v42, 16);
    if (v13)
    {
      v14 = v13;
      v30 = v9;
      v31 = v8;
      v32 = a4;
      v33 = a5;
      v34 = v7;
      v35 = v12;
      v36 = 0;
      v15 = 0;
      v16 = 0;
      v17 = *(_QWORD *)v39;
      while (1)
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v39 != v17)
            objc_enumerationMutation(v12);
          objc_msgSend(*(id *)(*((_QWORD *)&v38 + 1) + 8 * i), "componentsSeparatedByString:", CFSTR("="), v30);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          if ((unint64_t)objc_msgSend(v19, "count") >= 2)
          {
            objc_msgSend(v19, "objectAtIndex:", 0);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "objectAtIndex:", 1);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v20, "isEqualToString:", CFSTR("id")))
            {
              v22 = v16;
              v16 = v21;
              goto LABEL_17;
            }
            if (objc_msgSend(v20, "isEqualToString:", CFSTR("ext")))
            {
              v22 = v15;
              v15 = v21;
              goto LABEL_17;
            }
            if (objc_msgSend(v20, "isEqualToString:", CFSTR("sci")))
            {
              objc_msgSend(MEMORY[0x1E0CB3900], "scannerWithString:", v21);
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              v37 = 0;
              if (objc_msgSend(v22, "scanInt:", &v37))
              {
                objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v37);
                v23 = v16;
                v24 = v15;
                v25 = objc_claimAutoreleasedReturnValue();

                v36 = (void *)v25;
                v15 = v24;
                v16 = v23;
                v12 = v35;
              }
LABEL_17:

            }
          }

        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v38, v42, 16);
        if (!v14)
        {
          v26 = v15;

          a5 = v33;
          v7 = v34;
          v8 = v31;
          a4 = v32;
          v27 = v36;
          goto LABEL_26;
        }
      }
    }

  }
LABEL_25:
  v27 = 0;
  v26 = 0;
  v16 = 0;
LABEL_26:
  objc_autoreleasePoolPop(v8);
  if (a4)
    *a4 = objc_retainAutorelease(v26);
  if (a5)
    *a5 = objc_retainAutorelease(v27);
  v28 = v16;

LABEL_31:
  return v28;
}

+ (id)uuidFromAssetURL:(id)a3
{
  return (id)objc_msgSend(a1, "uuidFromAssetURL:fileExtension:sidecarIndex:", a3, 0, 0);
}

+ (BOOL)_isPlayableVideoUTI:(__CFString *)a3
{
  return +[PLUniformTypeIdentifier isPlayableVideoTypeIdentifierString:](PLUniformTypeIdentifier, "isPlayableVideoTypeIdentifierString:", a3);
}

+ (void)batchFetchAssetsByFaceUUIDWithFaceUUIDs:(id)a3 library:(id)a4 completion:(id)a5
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  if (!v11)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset.m"), 11975, CFSTR("Completion handler is mandatory"));

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke;
  v16[3] = &unk_1E3676290;
  v17 = v10;
  v18 = v9;
  v19 = v11;
  v12 = v11;
  v13 = v9;
  v15 = v10;
  objc_msgSend(v15, "performBlockAndWait:", v16);

}

+ (id)attributeValidationRules
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  _QWORD v78[2];
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[4];

  v84[2] = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(5, CFSTR("addedDate"), 0, 0, v71, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("addedDate"));

  _PLPropertyValidationRuleMake(3, CFSTR("adjustmentsState"), &unk_1E375DBC0, 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(9, CFSTR("adjustmentTimestamp"), 0, 0, 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v4;
  v70 = v4;
  objc_msgSend(v4, "reverseRule");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v84[0] = v7;
  v84[1] = v5;
  v69 = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v84, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v8);
  v68 = (void *)objc_claimAutoreleasedReturnValue();

  v83[0] = v6;
  objc_msgSend(v5, "reverseRule");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v83[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v83, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v10);
  v67 = (void *)objc_claimAutoreleasedReturnValue();

  v82[0] = v68;
  v82[1] = v67;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v82, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "orCompoundPropertyValidationRuleWithRules:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v12, CFSTR("adjustmentTimestamp"));

  _PLPropertyValidationRuleMake(3, CFSTR("complete"), MEMORY[0x1E0C9AAB0], 0, 0, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v13, CFSTR("complete"));

  _PLPropertyValidationRuleMake(5, CFSTR("dateCreated"), 0, 0, v71, 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v14, CFSTR("dateCreated"));

  _PLPropertyValidationRuleMake(2, CFSTR("directory"), 0, 0, 0, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v15, CFSTR("directory"));

  _PLPropertyValidationRuleMake(2, CFSTR("filename"), 0, 0, 0, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v16, CFSTR("filename"));

  _PLPropertyValidationRuleMake(6, CFSTR("kind"), 0, 0, 0, &unk_1E3763410);
  v17 = objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(4, CFSTR("height"), &unk_1E375DA10, 0, 0, 0);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(4, CFSTR("width"), &unk_1E375DA10, 0, 0, 0);
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  v81[0] = v17;
  v81[1] = v66;
  v18 = (void *)v17;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v81, 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v19);
  v64 = (void *)objc_claimAutoreleasedReturnValue();

  v80[0] = v18;
  v80[1] = v65;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v80, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v20);
  v62 = (void *)objc_claimAutoreleasedReturnValue();

  v79[0] = v64;
  v21 = v18;
  v63 = v18;
  objc_msgSend(v18, "reverseRule");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v79[1] = v22;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v79, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "orCompoundPropertyValidationRuleWithRules:", v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v24, CFSTR("height"));

  v78[0] = v62;
  objc_msgSend(v21, "reverseRule");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v78[1] = v25;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v78, 2);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "orCompoundPropertyValidationRuleWithRules:", v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v27, CFSTR("width"));

  _PLPropertyValidationRuleMake(6, CFSTR("kind"), 0, 0, 0, &unk_1E3763428);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v28, CFSTR("kind"));

  _PLPropertyValidationRuleMake(6, CFSTR("kindSubtype"), 0, 0, 0, &unk_1E3763440);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v29, CFSTR("kindSubtype"));

  _PLPropertyValidationRuleMake(12, CFSTR("lastSharedDate"), 0, 0, v71, 0);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v30, CFSTR("lastSharedDate"));

  _PLPropertyValidationRuleMake(12, CFSTR("modificationDate"), 0, 0, v71, 0);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v31, CFSTR("modificationDate"));

  _PLPropertyValidationRuleMake(5, CFSTR("orientation"), 0, &unk_1E375DBC0, &unk_1E375DC50, 0);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v32, CFSTR("orientation"));

  _PLPropertyValidationRuleMake(6, CFSTR("playbackStyle"), 0, 0, 0, &unk_1E3763458);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v33, CFSTR("playbackStyle"));

  _PLPropertyValidationRuleMake(6, CFSTR("playbackVariation"), 0, 0, 0, &unk_1E3763470);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v34, CFSTR("playbackVariation"));

  objc_msgSend(MEMORY[0x1E0D73310], "predicateArrayArgumentForMask:", objc_msgSend(MEMORY[0x1E0D73310], "maskForValidSavedAssetTypes"));
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(6, CFSTR("savedAssetType"), 0, 0, 0, v61);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v35, CFSTR("savedAssetType"));

  _PLPropertyValidationRuleMake(3, CFSTR("trashedState"), &unk_1E375DA58, 0, 0, 0);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(9, CFSTR("trashedDate"), 0, 0, 0, 0);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v77[0] = v36;
  v77[1] = v37;
  v60 = v36;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v77, 2);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v38);
  v59 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v36, "reverseRule");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v76[0] = v39;
  objc_msgSend(v37, "reverseRule");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v76[1] = v40;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v76, 2);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v41);
  v58 = (void *)objc_claimAutoreleasedReturnValue();

  v75[0] = v59;
  v75[1] = v58;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v75, 2);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "orCompoundPropertyValidationRuleWithRules:", v42);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v43, CFSTR("trashedDate"));

  _PLPropertyValidationRuleMake(6, CFSTR("trashedState"), 0, 0, 0, &unk_1E3763488);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v44, CFSTR("trashedState"));

  _PLPropertyValidationRuleMake(2, CFSTR("uniformTypeIdentifier"), 0, 0, 0, 0);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v45, CFSTR("uniformTypeIdentifier"));

  _PLPropertyValidationRuleMake(2, CFSTR("uuid"), 0, 0, 0, 0);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v46, CFSTR("uuid"));

  _PLPropertyValidationRuleMake(3, CFSTR("kindSubtype"), &unk_1E375DA28, 0, 0, 0);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  _PLPropertyValidationRuleMake(3, CFSTR("videoCpDurationValue"), &unk_1E375DA10, 0, 0, 0);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v74[0] = v47;
  objc_msgSend(v48, "reverseRule");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v74[1] = v49;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v74, 2);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v47, "reverseRule");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v73[0] = v52;
  v73[1] = v48;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v73, 2);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "andCompoundPropertyValidationRuleWithRules:", v53);
  v54 = (void *)objc_claimAutoreleasedReturnValue();

  v72[0] = v51;
  v72[1] = v54;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v72, 2);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:](PLCompoundPropertyValidationRule, "orCompoundPropertyValidationRuleWithRules:", v55);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v56, CFSTR("videoCpDurationValue"));

  return v2;
}

+ (unsigned)masterThumbnailFormat
{
  void *v2;
  void *v3;
  unsigned __int16 v4;

  objc_msgSend(MEMORY[0x1E0D73218], "defaultFormatChooser");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "masterThumbnailFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "formatID");

  return v4;
}

+ (unsigned)landscapeScrubberThumbnailFormat
{
  void *v2;
  void *v3;
  unsigned __int16 v4;

  objc_msgSend(MEMORY[0x1E0D73218], "defaultFormatChooser");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "landscapeScrubberThumbnailFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "formatID");

  return v4;
}

+ (unsigned)portraitScrubberThumbnailFormat
{
  void *v2;
  void *v3;
  unsigned __int16 v4;

  objc_msgSend(MEMORY[0x1E0D73218], "defaultFormatChooser");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "portraitScrubberThumbnailFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "formatID");

  return v4;
}

void __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("uuid"), *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)MEMORY[0x1E0C97B48];
  +[PLDetectedFace entityName](PLDetectedFace, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v14[0] = CFSTR("assetForFace");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setRelationshipKeyPathsForPrefetching:", v7);

  objc_msgSend(v6, "setPredicate:", v3);
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke_2;
  v12[3] = &unk_1E3676458;
  v9 = v8;
  v13 = v9;
  objc_msgSend(v2, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v6, 0, v12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D80]), "initWithDictionary:", v9);
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

  }
}

void __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "associatedAssetForFaceOrTorso:orTemporal:", 1, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(v5, "uuid");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v3, v4);

  }
}

void __30__PLManagedAsset_allHDRValues__block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99E60]), "initWithObjects:", &unk_1E375DA28, &unk_1E375DA70, &unk_1E375DA88, &unk_1E375DAA0, &unk_1E375DAB8, 0);
  v1 = (void *)allHDRValues_hdrValues;
  allHDRValues_hdrValues = v0;

}

void __41__PLManagedAsset__isLibraryScopeExiting___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  id v10;
  uint8_t buf[4];
  const char *v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLLibraryScope entityName](PLLibraryScope, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("exitState"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v5);

  objc_msgSend(v4, "setResultType:", 4);
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0;
  v7 = objc_msgSend(v6, "countForFetchRequest:error:", v4, &v10);
  v8 = v10;

  if (v7 == 1)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
  else if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    PLPhotoKitGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v12 = "+[PLManagedAsset _isLibraryScopeExiting:]_block_invoke";
      v13 = 2112;
      v14 = v8;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "Failed to fetch exit library scope for %s: %@", buf, 0x16u);
    }

  }
}

void __30__PLManagedAsset__ptpCalendar__block_invoke()
{
  id v0;
  uint64_t v1;
  void *v2;

  v0 = objc_alloc(MEMORY[0x1E0C99D48]);
  v1 = objc_msgSend(v0, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8]);
  v2 = (void *)_ptpCalendar__myCalendar;
  _ptpCalendar__myCalendar = v1;

}

void __49__PLManagedAsset_ptpResetEventAndFilenameMapping__block_invoke()
{
  id v0;

  +[PLManagedAsset eventInfoForPTP](PLManagedAsset, "eventInfoForPTP");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "removeAllObjects");

}

void __60__PLManagedAsset_ptpSetAssetIDForEventAndFilenameKey_value___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  +[PLManagedAsset eventInfoForPTP](PLManagedAsset, "eventInfoForPTP");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    +[PLManagedAsset eventInfoForPTP](PLManagedAsset, "eventInfoForPTP");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setValue:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));

  }
}

void __51__PLManagedAsset_ptpAssetIDForEventAndFilenameKey___block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  +[PLManagedAsset eventInfoForPTP](PLManagedAsset, "eventInfoForPTP");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void __45__PLManagedAsset__ptpEventInfoIsolationQueue__block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.assetsd.ptpeventinfoisolationqueue", 0);
  v1 = (void *)_ptpEventInfoIsolationQueue_ptpQueue;
  _ptpEventInfoIsolationQueue_ptpQueue = (uint64_t)v0;

}

void __33__PLManagedAsset_eventInfoForPTP__block_invoke()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v1 = (void *)eventInfoForPTP_eventInfo;
  eventInfoForPTP_eventInfo = (uint64_t)v0;

}

void __44__PLManagedAsset__importAlbumIsolationQueue__block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.assetsd.importalbumisolationqueue", 0);
  v1 = (void *)_importAlbumIsolationQueue_importAlbumQueue;
  _importAlbumIsolationQueue_importAlbumQueue = (uint64_t)v0;

}

void __44__PLManagedAsset_predicateForReframedAssets__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 4);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v0);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 5);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v1);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 13);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v2);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 12);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v3);

  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v6);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)predicateForReframedAssets_predicate;
  predicateForReframedAssets_predicate = v4;

}

void __54__PLManagedAsset_predicateForSpatialOverCaptureAssets__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v0);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 5);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v1);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 13);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v2);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("cameraProcessingAdjustmentState"), 9);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObject:", v3);

  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v6);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)predicateForSpatialOverCaptureAssets_predicate;
  predicateForSpatialOverCaptureAssets_predicate = v4;

}

void __57__PLManagedAsset_predicateToExcludeCameraAutoAdjustments__block_invoke()
{
  uint64_t v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) IN %@"), CFSTR("adjustmentsState"), &unk_1E3763398);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v0 = objc_msgSend(v2, "copy");
  v1 = (void *)predicateToExcludeCameraAutoAdjustments_pl_once_object_16;
  predicateToExcludeCameraAutoAdjustments_pl_once_object_16 = v0;

}

void __91__PLManagedAsset_predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath___block_invoke()
{
  uint64_t v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:($thumbnailIndex) == %d OR noindex:($thumbnailIndex) >= %d"), 4294967294, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v0 = objc_msgSend(v2, "copy");
  v1 = (void *)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath__pl_once_object_15;
  predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath__pl_once_object_15 = v0;

}

void __58__PLManagedAsset_predicateToExcludeRestrictedLockedAssets__block_invoke()
{
  uint64_t v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d AND noindex:(%K) == NO"), CFSTR("trashedState"), 0, CFSTR("hidden"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v0 = objc_msgSend(v2, "copy");
  v1 = (void *)predicateToExcludeRestrictedLockedAssets_pl_once_object_12;
  predicateToExcludeRestrictedLockedAssets_pl_once_object_12 = v0;

}

void __74__PLManagedAsset_assetUUIDsByObjectIDs_withFilterPredicate_context_error___block_invoke(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26[3];
  _BYTE v27[128];
  uint64_t v28;
  _QWORD v29[3];

  v29[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)a1[4];
  v3 = a1[5];
  v26[0] = 0;
  objc_msgSend(v2, "executeFetchRequest:error:", v3, v26);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v26[0];
  v21 = v5;
  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(a1[7] + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    v9 = v4;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
    if (v10)
    {
      v11 = *(_QWORD *)v23;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v23 != v11)
            objc_enumerationMutation(v9);
          v13 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * i);
          objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("uuid"));
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("objectID"));
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(*(_QWORD *)(a1[7] + 8) + 40), "setObject:forKey:", v14, v15);

        }
        v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
      }
      while (v10);
    }
  }
  else
  {
    v16 = (void *)MEMORY[0x1E0CB35C8];
    v28 = *MEMORY[0x1E0CB2938];
    objc_msgSend(v5, "debugDescription");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    v29[0] = v9;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, &v28, 1);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 46301, v17);
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = *(_QWORD *)(a1[6] + 8);
    v20 = *(void **)(v19 + 40);
    *(_QWORD *)(v19 + 40) = v18;

  }
}

- (void)copyAuxiliaryImagesFromImageSource:(CGImageSource *)a3 toDestination:(CGImageDestination *)a4 fromImageAtIndex:(unint64_t)a5 imageProperties:(id)a6 applyingOrientation:(signed __int16)a7 scalingToLongSideLength:(int64_t)a8
{
  uint64_t v9;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  _QWORD v25[5];

  v9 = a7;
  v13 = (void *)MEMORY[0x1E0D75130];
  v14 = a6;
  objc_msgSend(v13, "auxiliaryImagesToPreserveForDerivativesFromImageSource:imageIndex:", a3, a5);
  v24 = (id)objc_claimAutoreleasedReturnValue();
  v15 = *MEMORY[0x1E0CBD048];
  objc_msgSend(v14, "objectForKeyedSubscript:", *MEMORY[0x1E0CBD048]);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "integerValue");
  v18 = *MEMORY[0x1E0CBD040];
  objc_msgSend(v14, "objectForKeyedSubscript:", *MEMORY[0x1E0CBD040]);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (v17 <= objc_msgSend(v19, "integerValue"))
    v20 = v18;
  else
    v20 = v15;
  objc_msgSend(v14, "objectForKeyedSubscript:", v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  v22 = objc_msgSend(v21, "integerValue");
  objc_msgSend(MEMORY[0x1E0D75130], "transformAuxiliaryImages:scaleFactor:applyingOrientation:", v24, v9, (double)a8 / (double)v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __165__PLManagedAsset_ThumbnailGeneration__copyAuxiliaryImagesFromImageSource_toDestination_fromImageAtIndex_imageProperties_applyingOrientation_scalingToLongSideLength___block_invoke;
  v25[3] = &__block_descriptor_40_e39_v32__0__NSString_8__NSDictionary_16_B24l;
  v25[4] = a4;
  objc_msgSend(v23, "enumerateKeysAndObjectsUsingBlock:", v25);

}

- (void)generateThumbnailsWithImageSource:(CGImageSource *)a3 imageData:(id)a4 metadata:(id)a5 allowMediumPreview:(BOOL)a6 forceSRGBConversion:(BOOL)a7 outSmallThumbnailData:(id *)a8 isPreviewSource:(BOOL)a9
{
  uint64_t v9;

  LOBYTE(v9) = a9;
  -[PLManagedAsset generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:](self, "generateThumbnailsWithImageSource:imageData:metadata:allowMediumPreview:forceSRGBConversion:forFinalCameraImage:outSmallThumbnailData:isPreviewSource:", a3, a4, a5, a6, a7, 0, a8, v9);
}

- (void)generateThumbnailsWithImageSource:(CGImageSource *)a3 imageData:(id)a4 metadata:(id)a5 allowMediumPreview:(BOOL)a6 forceSRGBConversion:(BOOL)a7 forFinalCameraImage:(BOOL)a8 outSmallThumbnailData:(id *)a9 isPreviewSource:(BOOL)a10
{
  uint64_t v14;
  uint64_t v15;
  __CFData *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  int v24;
  void *v25;
  double v26;
  void *v27;
  void *v28;
  char v29;
  int v30;
  void *v31;
  char v32;
  const __CFData *v33;
  void *v34;
  char v35;
  const __CFDictionary *v36;
  NSObject *v37;
  void *v38;
  const __CFURL *v39;
  void *v40;
  void *v41;
  CGImageSourceRef v42;
  uint64_t v43;
  CGImageSource *v44;
  NSObject *v45;
  id *v46;
  NSObject *v47;
  void *v48;
  __CFString *v49;
  CGImageDestination *v50;
  void *v51;
  os_signpost_id_t v52;
  NSObject *v53;
  NSObject *v54;
  unint64_t v55;
  void *v56;
  double v57;
  void *v58;
  const __CFString *v59;
  size_t PrimaryImageIndex;
  NSObject *v61;
  void *v62;
  NSObject *v63;
  NSObject *v64;
  __CFString *v65;
  CGImageDestination *v66;
  void *v67;
  double v68;
  void *v69;
  const __CFString *v70;
  os_signpost_id_t v71;
  NSObject *v72;
  NSObject *v73;
  void *v74;
  size_t v75;
  NSObject *v76;
  void *v77;
  NSObject *v78;
  NSObject *v79;
  os_signpost_id_t spid;
  int v81;
  _BOOL4 v82;
  void *context;
  _BOOL4 v84;
  void *v85;
  void *v86;
  uint64_t (**v87)(void);
  CFURLRef url;
  id v89;
  id v90;
  id v91;
  id v92;
  _QWORD v93[5];
  CFURLRef v94;
  id v95;
  uint64_t *v96;
  uint64_t *v97;
  double v98;
  double v99;
  char v100;
  BOOL v101;
  BOOL v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  char v110;
  _QWORD v111[2];
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  uint8_t buf[4];
  uint64_t v119;
  __int16 v120;
  CGImageSource *v121;
  __int16 v122;
  void *v123;
  uint64_t v124;
  _QWORD v125[4];

  v82 = a8;
  v84 = a7;
  v125[1] = *MEMORY[0x1E0C80C00];
  v90 = a4;
  v89 = a5;
  if (!a3)
  {
    v16 = 0;
    goto LABEL_87;
  }
  context = (void *)MEMORY[0x19AEC1554]();
  -[PLManagedAsset orientation](self, "orientation");
  if (PLIsRotatedExifOrientation())
  {
    v14 = -[PLManagedAsset height](self, "height");
    v15 = -[PLManagedAsset width](self, "width");
  }
  else
  {
    v14 = -[PLManagedAsset width](self, "width");
    v15 = -[PLManagedAsset height](self, "height");
  }
  v17 = (double)v15;
  v18 = (double)v14;
  -[PLManagedAsset imageSize](self, "imageSize");
  v20 = v19;
  v22 = v21;
  v116 = 0.0;
  v117 = 0.0;
  v114 = 0.0;
  v115 = 0.0;
  objc_msgSend((id)objc_opt_class(), "computePreCropThumbnailSize:andPostCropSize:forOrientedOriginalSize:andCroppedSize:isLargeThumbnail:", &v116, &v114, 1, (double)v14, v17, v19, v21);
  v112 = 0.0;
  v113 = 0.0;
  v111[0] = 0;
  v111[1] = 0;
  objc_msgSend((id)objc_opt_class(), "computePreCropThumbnailSize:andPostCropSize:forOrientedOriginalSize:andCroppedSize:isLargeThumbnail:", &v112, v111, 0, (double)v14, v17, v20, v22);
  if (v112 <= v113)
    v23 = v113;
  else
    v23 = v112;
  v24 = -[PLManagedAsset embeddedThumbnailWidth](self, "embeddedThumbnailWidth");
  if (v24 <= -[PLManagedAsset embeddedThumbnailHeight](self, "embeddedThumbnailHeight"))
    v81 = -[PLManagedAsset embeddedThumbnailHeight](self, "embeddedThumbnailHeight");
  else
    v81 = -[PLManagedAsset embeddedThumbnailWidth](self, "embeddedThumbnailWidth");
  -[PLManagedAsset fileURLForLargeThumbnailFile](self, "fileURLForLargeThumbnailFile");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v107 = 0;
  v108 = &v107;
  v109 = 0x2020000000;
  v110 = 0;
  v103 = 0;
  v104 = &v103;
  v105 = 0x2020000000;
  v106 = 0;
  if (v18 > v17)
    v17 = v18;
  if (v114 <= v115)
    v26 = v115;
  else
    v26 = v114;
  v27 = (void *)MEMORY[0x1E0D752F0];
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "typeWithIdentifier:", v28);
  v85 = (void *)objc_claimAutoreleasedReturnValue();

  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    v29 = objc_msgSend(v85, "conformsToType:", *MEMORY[0x1E0CEC5B8]);
  else
    v29 = 0;
  v93[0] = MEMORY[0x1E0C809B0];
  v93[1] = 3221225472;
  v93[2] = __189__PLManagedAsset_ThumbnailGeneration__generateThumbnailsWithImageSource_imageData_metadata_allowMediumPreview_forceSRGBConversion_forFinalCameraImage_outSmallThumbnailData_isPreviewSource___block_invoke;
  v93[3] = &unk_1E3663DA8;
  v93[4] = self;
  v96 = &v107;
  url = v25;
  v94 = url;
  v98 = v17;
  v99 = v26;
  v100 = v29;
  v101 = a10;
  v102 = a6;
  v95 = v90;
  v97 = &v103;
  v87 = (uint64_t (**)(void))MEMORY[0x19AEC174C](v93);
  v30 = v87[2]();
  if (v30)
  {
    -[__CFURL URLByDeletingLastPathComponent](url, "URLByDeletingLastPathComponent");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v92 = 0;
    v32 = objc_msgSend(v31, "getResourceValue:forKey:error:", &v92, *MEMORY[0x1E0C99968], 0);
    v33 = (const __CFData *)v92;
    if ((v32 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v91 = 0;
      v35 = objc_msgSend(v34, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v31, 1, 0, &v91);
      v36 = (const __CFDictionary *)v91;

      if ((v35 & 1) == 0)
      {
        PLThumbnailsGetLog();
        v37 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v31, "path");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v119 = (uint64_t)v38;
          v120 = 2112;
          v121 = v36;
          _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_ERROR, "Unable to create directory '%@': %@", buf, 0x16u);

        }
LABEL_40:

        goto LABEL_41;
      }
      goto LABEL_41;
    }
    goto LABEL_42;
  }
  if (a9)
  {
    if (*((_BYTE *)v108 + 24))
    {
      if (!*((_BYTE *)v104 + 24))
      {
        v39 = url;
        goto LABEL_31;
      }
LABEL_30:
      -[PLManagedAsset fileURLForMediumThumbnailFile](self, "fileURLForMediumThumbnailFile");
      v39 = (const __CFURL *)objc_claimAutoreleasedReturnValue();
LABEL_31:
      v31 = v39;
      if (!v39)
      {
LABEL_43:

        goto LABEL_44;
      }
      objc_msgSend(MEMORY[0x1E0C99D50], "dataWithContentsOfURL:options:error:", v39, 1, 0);
      v33 = (const __CFData *)objc_claimAutoreleasedReturnValue();
      if (-[__CFData length](v33, "length"))
      {
        -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        if (v40)
        {
          v124 = *MEMORY[0x1E0CBD2A8];
          -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
          v41 = (void *)objc_claimAutoreleasedReturnValue();
          v125[0] = v41;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v125, &v124, 1);
          v36 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          v36 = 0;
        }

        v42 = CGImageSourceCreateWithData(v33, v36);
        CFAutorelease(v42);
        if (!v42)
        {
          PLThumbnailsGetLog();
          v37 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            v43 = -[__CFData length](v33, "length");
            -[PLManagedAsset _compactDebugDescription](self, "_compactDebugDescription");
            v44 = (CGImageSource *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 134218242;
            v119 = v43;
            v120 = 2114;
            v121 = v44;
            _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_ERROR, "Unable to generate image source from data (length %lu) for asset %{public}@", buf, 0x16u);

          }
          goto LABEL_40;
        }
        a3 = v42;
LABEL_41:

      }
LABEL_42:

      goto LABEL_43;
    }
    if (*((_BYTE *)v104 + 24))
      goto LABEL_30;
  }
LABEL_44:
  PLThumbnailsGetLog();
  v45 = objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _imagePropertiesFromMetadata:](self, "_imagePropertiesFromMetadata:", v89);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v46 = (id *)MEMORY[0x1E0CEC530];
  if (v30)
  {
    PLThumbnailsGetLog();
    v47 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset _compactDebugDescription](self, "_compactDebugDescription");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v119 = (uint64_t)v48;
      _os_log_impl(&dword_199541000, v47, OS_LOG_TYPE_INFO, "Unable to generate thumbnails via hardware decoder, falling back to software for %{public}@", buf, 0xCu);

    }
    objc_msgSend(*v46, "identifier");
    v49 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v50 = CGImageDestinationCreateWithURL(url, v49, 1uLL, 0);

    if (v50)
    {
      MetadataForPreviewJPGFromOriginalMetadata(v86);
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0D09558]);
      v52 = os_signpost_id_generate(v45);
      v53 = v45;
      v54 = v53;
      spid = v52;
      v55 = v52 - 1;
      if (v52 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v53))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v119 = (uint64_t)v56;
        _os_signpost_emit_with_name_impl(&dword_199541000, v54, OS_SIGNPOST_INTERVAL_BEGIN, spid, "generateThumbnailsWithImageSource_SW_Lg1", "uuid: %{public}@", buf, 0xCu);

      }
      v57 = v116;
      if (v116 <= v117)
        v57 = v117;
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (int)v57);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "setObject:forKeyedSubscript:", v58, *MEMORY[0x1E0CBC778]);

      objc_msgSend(v51, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBD190]);
      objc_msgSend(v51, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBC7B0]);
      objc_msgSend(v51, "setObject:forKeyedSubscript:", *MEMORY[0x1E0CBD1B8], *MEMORY[0x1E0CBD1A0]);
      objc_msgSend(v51, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBC760]);
      if (v84)
        v59 = CFSTR("sRGB");
      else
        v59 = 0;
      objc_msgSend(v51, "setObject:forKeyedSubscript:", v59, *MEMORY[0x1E0CBC7A0]);
      PrimaryImageIndex = CGImageSourceGetPrimaryImageIndex(a3);
      CGImageDestinationAddImageFromSource(v50, a3, PrimaryImageIndex, (CFDictionaryRef)v51);
      if (!CGImageDestinationFinalize(v50))
      {
        PLThumbnailsGetLog();
        v61 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        {
          -[PLManagedAsset _compactDebugDescription](self, "_compactDebugDescription");
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v119 = (uint64_t)v62;
          v120 = 2114;
          v121 = a3;
          v122 = 2114;
          v123 = v51;
          _os_log_impl(&dword_199541000, v61, OS_LOG_TYPE_ERROR, "Failed to generate large thumbnail for %{public}@ from image source %{public}@ with options %{public}@", buf, 0x20u);

        }
      }
      CFRelease(v50);
      v63 = v54;
      v64 = v63;
      if (v55 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v63))
      {
        *(_WORD *)buf = 0;
        _os_signpost_emit_with_name_impl(&dword_199541000, v64, OS_SIGNPOST_INTERVAL_END, spid, "generateThumbnailsWithImageSource_SW_Lg1", ", buf, 2u);
      }

    }
  }
  if (a9)
  {
    v16 = (__CFData *)objc_alloc_init(MEMORY[0x1E0C99DF0]);
    objc_msgSend(*v46, "identifier");
    v65 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v66 = CGImageDestinationCreateWithData(v16, v65, 1uLL, 0);

    if (v66)
    {
      MetadataForSmallPreviewJPGFromOriginalMetadata(v86);
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      v68 = (double)v81;
      if (v23 >= (double)v81)
        v68 = v23;
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v68);
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v67, "setObject:forKeyedSubscript:", v69, *MEMORY[0x1E0CBC778]);

      objc_msgSend(v67, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBD190]);
      objc_msgSend(v67, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0D09558]);
      objc_msgSend(v67, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("kCGImageSourceKeepOriginalProfile"));
      objc_msgSend(v67, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBC7B0]);
      objc_msgSend(v67, "setObject:forKeyedSubscript:", *MEMORY[0x1E0CBD1B8], *MEMORY[0x1E0CBD1A0]);
      objc_msgSend(v67, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBC760]);
      if (v84)
        v70 = CFSTR("sRGB");
      else
        v70 = 0;
      objc_msgSend(v67, "setObject:forKeyedSubscript:", v70, *MEMORY[0x1E0CBC7A0]);
      if (v82)
        objc_msgSend(v67, "setObject:forKeyedSubscript:", &unk_1E375DA10, CFSTR("kCGImageSourceTiledDownsamplingMode"));
      v71 = os_signpost_id_generate(v45);
      v72 = v45;
      v73 = v72;
      if (v71 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v72))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v119 = (uint64_t)v74;
        _os_signpost_emit_with_name_impl(&dword_199541000, v73, OS_SIGNPOST_INTERVAL_BEGIN, v71, "generateThumbnailsWithImageSource_SW_Sm2", "uuid: %{public}@", buf, 0xCu);

      }
      v75 = CGImageSourceGetPrimaryImageIndex(a3);
      CGImageDestinationAddImageFromSource(v66, a3, v75, (CFDictionaryRef)v67);
      if (!CGImageDestinationFinalize(v66))
      {
        PLThumbnailsGetLog();
        v76 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR))
        {
          -[PLManagedAsset _compactDebugDescription](self, "_compactDebugDescription");
          v77 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v119 = (uint64_t)v77;
          v120 = 2114;
          v121 = a3;
          v122 = 2114;
          v123 = v67;
          _os_log_impl(&dword_199541000, v76, OS_LOG_TYPE_ERROR, "Failed to generate small thumbnail for %{public}@ from image source %{public}@ with options %{public}@", buf, 0x20u);

        }
        v16 = 0;
      }
      CFRelease(v66);
      v78 = v73;
      v79 = v78;
      if (v71 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v78))
      {
        *(_WORD *)buf = 0;
        _os_signpost_emit_with_name_impl(&dword_199541000, v79, OS_SIGNPOST_INTERVAL_END, v71, "generateThumbnailsWithImageSource_SW_Sm2", ", buf, 2u);
      }

    }
  }
  else
  {
    v16 = 0;
  }

  _Block_object_dispose(&v103, 8);
  _Block_object_dispose(&v107, 8);

  objc_autoreleasePoolPop(context);
  if (a9)
  {
    v16 = objc_retainAutorelease(v16);
    *a9 = v16;
  }
LABEL_87:

}

- (id)generatePortraitAdjustment:(id *)a3
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  dispatch_block_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *, uint64_t, void *, void *);
  void *v19;
  id v20;
  uint64_t *v21;
  _QWORD *v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  _QWORD v31[3];
  _QWORD v32[4];

  v32[3] = *MEMORY[0x1E0C80C00];
  if (-[PLManagedAsset depthType](self, "depthType", a3) != 1
    || -[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    return 0;
  }
  v25 = 0;
  v26 = &v25;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__14262;
  v29 = __Block_byref_object_dispose__14263;
  v30 = 0;
  v23[0] = 0;
  v23[1] = v23;
  v23[2] = 0x3032000000;
  v23[3] = __Block_byref_object_copy__14262;
  v23[4] = __Block_byref_object_dispose__14263;
  v24 = 0;
  v5 = *MEMORY[0x1E0D47D20];
  v32[0] = MEMORY[0x1E0C9AAB0];
  v6 = *MEMORY[0x1E0D47CB0];
  v31[0] = v5;
  v31[1] = v6;
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v32[1] = v7;
  v31[2] = *MEMORY[0x1E0D47D50];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", -[PLManagedAsset originalOrientation](self, "originalOrientation"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v32[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v32, v31, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = dispatch_block_create(DISPATCH_BLOCK_INHERIT_QOS_CLASS, &__block_literal_global_2317);
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "imageConversionServiceClient");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = MEMORY[0x1E0C809B0];
  v17 = 3221225472;
  v18 = __66__PLManagedAsset_ThumbnailGeneration__generatePortraitAdjustment___block_invoke_2;
  v19 = &unk_1E3663DF0;
  v21 = &v25;
  v22 = v23;
  v14 = v10;
  v20 = v14;
  objc_msgSend(v12, "convertImageAtSourceURL:options:completionHandler:", v13, v9, &v16);

  dispatch_block_wait(v14, 0xFFFFFFFFFFFFFFFFLL);
  objc_msgSend((id)v26[5], "objectForKeyedSubscript:", *MEMORY[0x1E0D47CA0], v16, v17, v18, v19);
  v15 = (id)objc_claimAutoreleasedReturnValue();

  _Block_object_dispose(v23, 8);
  _Block_object_dispose(&v25, 8);

  return v15;
}

- (id)_imagePropertiesFromMetadata:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v4 = a3;
  objc_msgSend(v4, "cgImageProperties");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(v4, "cgImageProperties");
    v6 = objc_claimAutoreleasedReturnValue();
LABEL_6:
    v7 = (void *)v6;
    goto LABEL_7;
  }
  if (!-[PLManagedAsset isBundleScopeSyndication](self, "isBundleScopeSyndication"))
  {
    -[PLManagedAsset imageProperties](self, "imageProperties");
    v6 = objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  v7 = 0;
LABEL_7:

  return v7;
}

void __66__PLManagedAsset_ThumbnailGeneration__generatePortraitAdjustment___block_invoke_2(_QWORD *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  v6 = a3;
  v7 = a4;
  v8 = *(_QWORD *)(a1[5] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v6;
  v13 = v6;

  v10 = *(_QWORD *)(a1[6] + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v7;
  v12 = v7;

  (*(void (**)(void))(a1[4] + 16))();
}

uint64_t __189__PLManagedAsset_ThumbnailGeneration__generateThumbnailsWithImageSource_imageData_metadata_allowMediumPreview_forceSRGBConversion_forFinalCameraImage_outSmallThumbnailData_isPreviewSource___block_invoke(uint64_t a1)
{
  void *v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  id v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v15;
  char v16;
  id v17;
  int v18;
  id v19;
  id v20;

  objc_msgSend(*(id *)(a1 + 32), "photoLibrary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v2, "isCloudPhotoLibraryEnabled") & 1) == 0)
  {
    v3 = objc_msgSend(*(id *)(a1 + 32), "isMomentSharedAsset");

    if ((v3 & 1) != 0)
      return 0;
    v5 = *(void **)(a1 + 40);
    v20 = 0;
    v6 = *MEMORY[0x1E0C99968];
    v7 = objc_msgSend(v5, "getResourceValue:forKey:error:", &v20, *MEMORY[0x1E0C99968], 0);
    v8 = v20;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v7;
    v9 = *(double *)(a1 + 72);
    v10 = *(double *)(a1 + 80);
    v11 = objc_msgSend(*(id *)(a1 + 32), "width");
    v12 = objc_msgSend(*(id *)(a1 + 32), "height");
    v13 = objc_msgSend(*(id *)(a1 + 32), "isSavedPhotosAsset");
    if ((*(_QWORD *)(a1 + 48) || !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
      && (*(_BYTE *)(a1 + 88) || ((v9 / v10 > 1.22474487) & ~v13) != 0 || v12 * v11 >= 25000000)
      && !*(_BYTE *)(a1 + 89))
    {
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) && *(_BYTE *)(a1 + 90))
      {
        objc_msgSend(*(id *)(a1 + 32), "fileURLForMediumThumbnailFile");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = 0;
        v16 = objc_msgSend(v15, "getResourceValue:forKey:error:", &v19, v6, 0);
        v17 = v19;

        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v16;
        v18 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);

        if (v18)
        {
          v4 = 0;
          v8 = v17;
          goto LABEL_15;
        }
        v8 = v17;
      }
      v4 = objc_msgSend(*(id *)(a1 + 32), "avalanchePickTypeIsVisible");
    }
    else
    {
      v4 = 0;
    }
LABEL_15:

    return v4;
  }

  return 0;
}

void __165__PLManagedAsset_ThumbnailGeneration__copyAuxiliaryImagesFromImageSource_toDestination_fromImageAtIndex_imageProperties_applyingOrientation_scalingToLongSideLength___block_invoke(uint64_t a1, const __CFString *a2, const __CFDictionary *a3)
{
  CGImageDestinationAddAuxiliaryDataInfo(*(CGImageDestinationRef *)(a1 + 32), a2, a3);
}

- (BOOL)cloudPhotoLibraryEnabled
{
  void *v2;
  char v3;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isCloudPhotoLibraryEnabled");

  return v3;
}

- (PLPTPTransferableSidecarFile)ptpPhotoIrisSidecar
{
  return (PLPTPTransferableSidecarFile *)-[PLManagedAsset photoIrisSidecarIgnoringSubtype:](self, "photoIrisSidecarIgnoringSubtype:", 0);
}

- (unint64_t)ptpCloudMasterOriginalFileSize
{
  void *v2;
  unint64_t v3;

  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "dataLength");

  return v3;
}

- (CGSize)spatialOverCaptureSize
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;
  CGSize result;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v7, "resourceType") == 10)
        {
          v8 = (double)objc_msgSend(v7, "unorientedWidth");
          v9 = (double)objc_msgSend(v7, "unorientedHeight");

          goto LABEL_11;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v4)
        continue;
      break;
    }
  }

  v8 = *MEMORY[0x1E0C9D820];
  v9 = *(double *)(MEMORY[0x1E0C9D820] + 8);
LABEL_11:
  v10 = v8;
  v11 = v9;
  result.height = v11;
  result.width = v10;
  return result;
}

- (CGSize)videoComplementSpatialOverCaptureSize
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;
  CGSize result;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v7, "resourceType") == 24)
        {
          v8 = (double)objc_msgSend(v7, "unorientedWidth");
          v9 = (double)objc_msgSend(v7, "unorientedHeight");

          goto LABEL_11;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v4)
        continue;
      break;
    }
  }

  v8 = *MEMORY[0x1E0C9D820];
  v9 = *(double *)(MEMORY[0x1E0C9D820] + 8);
LABEL_11:
  v10 = v8;
  v11 = v9;
  result.height = v11;
  result.width = v10;
  return result;
}

- (int64_t)cameraProcessingAdjustmentTrashedState
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    v6 = 1;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v11 != v5)
        objc_enumerationMutation(v2);
      v8 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * v7);
      if (objc_msgSend(v8, "supportsTrashedState"))
      {
        if ((objc_msgSend(v8, "isTrashedOrExpunged") & 1) != 0)
          break;
      }
      if (v4 == ++v7)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
        if (v4)
          goto LABEL_3;
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    v6 = 0;
  }

  return v6;
}

- (NSString)importedByDisplayName
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "importedByDisplayName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setImportedByDisplayName:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setImportedByDisplayName:", v4);

}

- (NSString)editorBundleID
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "editorBundleID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setEditorBundleID:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setEditorBundleID:", v4);

}

- (NSString)originalAssetsUUID
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalAssetsUUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setOriginalAssetsUUID:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalAssetsUUID:", v4);

}

- (int64_t)originalHeight
{
  void *v2;
  void *v3;
  int64_t v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalHeight");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "longLongValue");

  return v4;
}

- (void)setOriginalHeight:(int64_t)a3
{
  void *v4;
  id v5;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalHeight:", v4);

}

- (int64_t)originalWidth
{
  void *v2;
  void *v3;
  int64_t v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalWidth");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "longLongValue");

  return v4;
}

- (void)setOriginalWidth:(int64_t)a3
{
  void *v4;
  id v5;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalWidth:", v4);

}

- (NSData)originalHash
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalHash");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSData *)v3;
}

- (void)setOriginalHash:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalHash:", v4);

}

- (NSString)publicGlobalUUID
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "publicGlobalUUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setPublicGlobalUUID:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPublicGlobalUUID:", v4);

}

- (void)setOriginalFilename:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalFilename:", v4);

}

- (signed)originalOrientation
{
  void *v2;
  void *v3;
  signed __int16 v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalOrientation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "shortValue");

  return v4;
}

- (void)setOriginalOrientation:(signed __int16)a3
{
  uint64_t v4;
  void *v5;
  id v6;

  v4 = +[PLManagedAsset correctedOrientation:](PLManagedAsset, "correctedOrientation:", a3);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setOriginalOrientation:", v5);

}

- (unint64_t)originalFilesize
{
  void *v2;
  void *v3;
  unint64_t v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalFilesize");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "unsignedLongLongValue");

  return v4;
}

- (void)setOriginalFilesize:(unint64_t)a3
{
  void *v4;
  id v5;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalFilesize:", v4);

}

- (NSData)embeddedThumbnailData
{
  void *v3;
  int v4;
  int v5;
  int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v3 = (void *)MEMORY[0x19AEC1554](self, a2);
  v4 = -[PLManagedAsset embeddedThumbnailOffset](self, "embeddedThumbnailOffset");
  v5 = -[PLManagedAsset embeddedThumbnailLength](self, "embeddedThumbnailLength");
  if (!v5)
    goto LABEL_6;
  v6 = v5;
  v7 = (void *)MEMORY[0x1E0CB3608];
  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  objc_msgSend(v7, "fileHandleForReadingFromURL:error:", v8, &v12);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_msgSend(v9, "seekToFileOffset:", v4);
    objc_msgSend(v9, "readDataOfLength:", v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "closeFile");
    if (objc_msgSend(v10, "length") != v6)
    {

      v10 = 0;
    }

    objc_autoreleasePoolPop(v3);
  }
  else
  {
LABEL_6:
    objc_autoreleasePoolPop(v3);
    v10 = 0;
  }
  return (NSData *)v10;
}

- (int)embeddedThumbnailOffset
{
  void *v2;
  void *v3;
  int v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "embeddedThumbnailOffset");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "intValue");

  return v4;
}

- (void)setEmbeddedThumbnailOffset:(int)a3
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)&a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setEmbeddedThumbnailOffset:", v4);

}

- (int)embeddedThumbnailLength
{
  void *v2;
  void *v3;
  int v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "embeddedThumbnailLength");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "intValue");

  return v4;
}

- (void)setEmbeddedThumbnailLength:(int)a3
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)&a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setEmbeddedThumbnailLength:", v4);

}

- (signed)embeddedThumbnailWidth
{
  void *v2;
  void *v3;
  signed __int16 v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "embeddedThumbnailWidth");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "shortValue");

  return v4;
}

- (void)setEmbeddedThumbnailWidth:(signed __int16)a3
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setEmbeddedThumbnailWidth:", v4);

}

- (signed)embeddedThumbnailHeight
{
  void *v2;
  void *v3;
  signed __int16 v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "embeddedThumbnailHeight");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "shortValue");

  return v4;
}

- (void)setEmbeddedThumbnailHeight:(signed __int16)a3
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setEmbeddedThumbnailHeight:", v4);

}

- (int)locationHash
{
  void *v2;
  void *v3;
  int v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "locationHash");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "intValue");

  return v4;
}

- (void)setLocationHash:(int)a3
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)&a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setLocationHash:", v4);

}

- (NSString)longDescription
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "longDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setLongDescription:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setLongDescription:", v4);

}

- (NSString)title
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "title");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setTitle:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setTitle:", v4);

}

- (NSString)accessibilityDescription
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "accessibilityDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v3;
}

- (void)setAccessibilityDescription:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setAccessibilityDescription:", v4);

}

- (void)setFaceRegions:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setFaceRegions:", v4);

}

- (NSData)faceRegions
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "faceRegions");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSData *)v3;
}

+ (void)createThumbnailImage:(id *)a3 previewImage:(id *)a4 withToBeReleasedImageSource:(CGImageSource *)a5
{
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  CGImage *ThumbnailAtIndex;
  void *v15;
  CGImage *v16;
  void *v17;
  CFDictionaryRef options;

  options = (CFDictionaryRef)objc_alloc_init(MEMORY[0x1E0C99E08]);
  v8 = MEMORY[0x1E0C9AAB0];
  -[__CFDictionary setObject:forKeyedSubscript:](options, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0CBD190]);
  -[__CFDictionary setObject:forKeyedSubscript:](options, "setObject:forKeyedSubscript:", v8, *MEMORY[0x1E0CBD178]);
  v9 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(MEMORY[0x1E0D73218], "defaultFormatChooser");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "masterThumbnailFormat");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "dimension");
  objc_msgSend(v9, "numberWithDouble:");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = *MEMORY[0x1E0CBD2A0];
  -[__CFDictionary setObject:forKeyedSubscript:](options, "setObject:forKeyedSubscript:", v12, *MEMORY[0x1E0CBD2A0]);

  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(a5, 0, options);
  v15 = (void *)DCIM_newPLImageWithCGImage();
  CGImageRelease(ThumbnailAtIndex);
  -[__CFDictionary setObject:forKeyedSubscript:](options, "setObject:forKeyedSubscript:", &unk_1E375DCC8, v13);
  v16 = CGImageSourceCreateThumbnailAtIndex(a5, 0, options);
  v17 = (void *)DCIM_newPLImageWithCGImage();
  CGImageRelease(v16);
  CFRelease(a5);
  if (a3)
    *a3 = objc_retainAutorelease(v15);
  if (a4)
    *a4 = objc_retainAutorelease(v17);

}

+ (void)computePreCropThumbnailSize:(CGSize *)a3 andPostCropSize:(CGSize *)a4 forOrientedOriginalSize:(CGSize)a5 andCroppedSize:(CGSize)a6 isLargeThumbnail:(BOOL)a7
{
  _BOOL4 v7;
  double height;
  double width;
  double v10;
  double v11;
  unint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  _BOOL4 v28;

  v7 = a7;
  height = a6.height;
  width = a6.width;
  v10 = a5.height;
  v11 = a5.width;
  if (PLMaxIOSurfaceDimension_onceToken != -1)
    dispatch_once(&PLMaxIOSurfaceDimension_onceToken, &__block_literal_global_13301);
  v14 = PLMaxIOSurfaceDimension_maxDimension;
  objc_msgSend(MEMORY[0x1E0D73218], "defaultFormatChooser");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v7)
  {
    objc_msgSend(v15, "fullScreenFormatForCurrentDevice");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v18 = MEMORY[0x19AEC0AA4](objc_msgSend(v17, "fullSizeDesiredLongSide"), objc_msgSend(v17, "fullSizeMinShortSide"), objc_msgSend(v17, "fullSizeMaxLongSide"), 2, (uint64_t)width, (uint64_t)height);
    v20 = v19;
    v16 = v17;
  }
  else
  {
    objc_msgSend(v15, "masterThumbnailFormat");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "scaledSizeForSourceSize:capLength:", 1, width, height);
    v18 = v22;
    v20 = v23;

  }
  v24 = ceil(v11 * (v18 / width));
  v25 = ceil(v10 * (v18 / width));
  v26 = (double)v14;
  if (v24 > (double)v14 || v25 > v26)
  {
    if (v24 > v26)
    {
      v24 = (double)v14;
      v25 = v10 * v26 / v11;
    }
    if (v25 > v26)
    {
      v25 = (double)v14;
      v24 = v11 * v26 / v10;
    }
    v28 = v18 != (double)(uint64_t)(width * v24 / v11);
    if (v20 != (double)(uint64_t)(height * v25 / v10))
      v28 = 1;
    if (v28)
    {
      v20 = (double)(uint64_t)(height * v25 / v10);
      v18 = (double)(uint64_t)(width * v24 / v11);
    }
  }
  if (v24 >= 2.0)
    v24 = (double)(uint64_t)(((uint64_t)v24 + ((uint64_t)v24 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  if (v25 >= 2.0)
    v25 = (double)(uint64_t)(((uint64_t)v25 + ((uint64_t)v25 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  if (v18 >= 2.0)
    v18 = (double)(uint64_t)(((uint64_t)v18 + ((uint64_t)v18 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  if (v20 >= 2.0)
    v20 = (double)(uint64_t)(((uint64_t)v20 + ((uint64_t)v20 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  if (a4)
  {
    a4->width = v18;
    a4->height = v20;
  }
  if (a3)
  {
    a3->width = v24;
    a3->height = v25;
  }
}

+ (id)pathAndDateDictionariesForAllIncompleteAssetsInManagedObjectContext:(id)a3
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v24;
  void *context;
  id v27;
  uint8_t buf[4];
  void *v29;
  __int16 v30;
  id v31;
  _QWORD v32[2];
  _QWORD v33[5];

  v33[4] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  context = (void *)MEMORY[0x19AEC1554]();
  v5 = objc_alloc_init(MEMORY[0x1E0C97B48]);
  objc_msgSend((id)objc_opt_class(), "entityInManagedObjectContext:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setEntity:", v6);
  objc_msgSend(v5, "setResultType:", 2);
  v33[0] = CFSTR("uuid");
  v33[1] = CFSTR("directory");
  v33[2] = CFSTR("filename");
  v33[3] = CFSTR("dateCreated");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v33, 4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setPropertiesToFetch:", v7);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("complete == 0"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForPLSyncClientIncompleteAssetExclusions"), 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)MEMORY[0x1E0CB3528];
  v32[0] = v8;
  v32[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v32, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v10;
  v13 = v4;
  objc_msgSend(v12, "andPredicateWithSubpredicates:", v11);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "setPredicate:", v14);
  v27 = 0;
  objc_msgSend(v13, "executeFetchRequest:error:", v5, &v27);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v27;
  if (!v15)
  {
    v24 = v13;
    PLBackendGetLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(a2);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v29 = v18;
      v30 = 2112;
      v31 = v16;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "%@ failed to fetch incomplete assets %@", buf, 0x16u);

    }
    v13 = v24;
  }
  objc_msgSend(v13, "photoLibrary", v24);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(a1, "_newPathAndDateDictionariesByAssetUUIDFromFetchResults:photoLibrary:", v15, v19);
  v21 = v13;
  v22 = (void *)v20;

  objc_autoreleasePoolPop(context);
  return v22;
}

+ (id)_newPathAndDateDictionariesByAssetUUIDFromFetchResults:(id)a3 photoLibrary:(id)a4
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  const __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  const __CFString *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void **v22;
  const __CFString **v23;
  uint64_t v24;
  void *v25;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id obj;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  const __CFString *v36;
  void *v37;
  _QWORD v38[2];
  _QWORD v39[2];
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v27 = a4;
  v28 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(v5, "count"));
  objc_msgSend(v27, "pathManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "photoDirectoryWithType:", 1);
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  obj = v5;
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
  if (v7)
  {
    v8 = v7;
    v9 = CFSTR("filename");
    v10 = *(_QWORD *)v33;
    do
    {
      v11 = 0;
      v30 = v8;
      do
      {
        if (*(_QWORD *)v33 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * v11);
        objc_msgSend(v12, "objectForKey:", CFSTR("directory"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectForKey:", v9);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v13, "length") && objc_msgSend(v14, "length"))
        {
          v15 = v9;
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@/%@"), v13, v14);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "stringByAppendingPathComponent:", v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v12, "objectForKey:", CFSTR("uuid"));
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v18, "length"))
          {
            objc_msgSend(v12, "objectForKey:", CFSTR("dateCreated"));
            v19 = objc_claimAutoreleasedReturnValue();
            v20 = (void *)v19;
            if (v19)
            {
              v38[0] = CFSTR("date");
              v38[1] = CFSTR("path");
              v39[0] = v19;
              v39[1] = v17;
              v21 = (void *)MEMORY[0x1E0C99D80];
              v22 = (void **)v39;
              v23 = (const __CFString **)v38;
              v24 = 2;
            }
            else
            {
              v36 = CFSTR("path");
              v37 = v17;
              v21 = (void *)MEMORY[0x1E0C99D80];
              v22 = &v37;
              v23 = &v36;
              v24 = 1;
            }
            objc_msgSend(v21, "dictionaryWithObjects:forKeys:count:", v22, v23, v24);
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "setObject:forKey:", v25, v18);

          }
          v9 = v15;
          v8 = v30;
        }

        ++v11;
      }
      while (v8 != v11);
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
    }
    while (v8);
  }

  return v28;
}

- (BOOL)shouldSimulateQuarantineOriginalImageResourceOnPush
{
  if (shouldSimulateQuarantineOriginalImageResourceOnPush_onceToken != -1)
    dispatch_once(&shouldSimulateQuarantineOriginalImageResourceOnPush_onceToken, &__block_literal_global_15363);
  return shouldSimulateQuarantineOriginalImageResourceOnPush_simulateQuarantine;
}

- (void)simulateQuarantineOriginalImageResourceOnPush:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v18;
  id v19;
  CGColorSpaceRef v20;
  uint64_t v21;
  char v22;
  CGColorSpaceRef v23;
  NSObject *v24;
  void *v25;
  id v26;
  id v27;
  uint8_t buf[4];
  const char *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    v5 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v4, "identity");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "fileURL");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = (void *)MEMORY[0x1E0D752F0];
    objc_msgSend(v4, "identity");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "fileUTI");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "typeWithIdentifier:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = *MEMORY[0x1E0CEC530];
    if ((objc_msgSend(v11, "conformsToType:", *MEMORY[0x1E0CEC530]) & 1) == 0
      && !objc_msgSend(v11, "conformsToType:", *MEMORY[0x1E0CEC580]))
    {
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_20:

        objc_autoreleasePoolPop(v5);
        goto LABEL_21;
      }
      __CPLAssetsdOSLogDomain();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        v29 = "-[PLManagedAsset(CPLSimulateQuarantine) simulateQuarantineOriginalImageResourceOnPush:]";
        v30 = 2112;
        v31 = v11;
        v32 = 2112;
        v33 = v7;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "%s: unsupported uti: %@ for url: %@", buf, 0x20u);
      }
LABEL_19:

      goto LABEL_20;
    }
    objc_msgSend(MEMORY[0x1E0C9DDB8], "filterWithName:", CFSTR("CISepiaTone"));
    v13 = objc_claimAutoreleasedReturnValue();
    -[NSObject setValue:forKey:](v13, "setValue:forKey:", &unk_1E3764338, *MEMORY[0x1E0C9E200]);
    objc_msgSend(MEMORY[0x1E0C9DDC8], "imageWithContentsOfURL:", v7);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject setValue:forKey:](v13, "setValue:forKey:", v14, *MEMORY[0x1E0C9E1F8]);
    -[NSObject outputImage](v13, "outputImage");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C9DD90], "context");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v11, "conformsToType:", v12))
    {
      v17 = objc_msgSend(v14, "colorSpace");
      v27 = 0;
      v18 = objc_msgSend(v16, "writeJPEGRepresentationOfImage:toURL:colorSpace:options:error:", v15, v7, v17, MEMORY[0x1E0C9AA70], &v27);
      v19 = v27;
      if ((v18 & 1) != 0)
      {
LABEL_18:

        goto LABEL_19;
      }
    }
    else if (objc_msgSend(v11, "conformsToType:", *MEMORY[0x1E0CEC580]))
    {
      v25 = v5;
      v20 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]);
      v21 = *MEMORY[0x1E0C9E080];
      v26 = 0;
      v22 = objc_msgSend(v16, "writePNGRepresentationOfImage:toURL:format:colorSpace:options:error:", v15, v7, v21, v20, MEMORY[0x1E0C9AA70], &v26);
      v19 = v26;
      v23 = v20;
      v5 = v25;
      CFRelease(v23);
      if ((v22 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      v19 = 0;
    }
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v29 = "-[PLManagedAsset(CPLSimulateQuarantine) simulateQuarantineOriginalImageResourceOnPush:]";
        v30 = 2112;
        v31 = v7;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "%s: failed to write output: %@", buf, 0x16u);
      }

    }
    goto LABEL_18;
  }
LABEL_21:

}

void __92__PLManagedAsset_CPLSimulateQuarantine__shouldSimulateQuarantineOriginalImageResourceOnPush__block_invoke()
{
  id v0;

  if (MEMORY[0x19AEC04BC]())
  {
    objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
    v0 = (id)objc_claimAutoreleasedReturnValue();
    shouldSimulateQuarantineOriginalImageResourceOnPush_simulateQuarantine = objc_msgSend(v0, "BOOLForKey:", CFSTR("PLSimulateQuarantineMasterImageOnPush"));

  }
}

- (void)_deleteDeferredIntermediatesForDeferredPhotoIdentifier:(id)a3 withFinalizer:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  _BOOL4 v13;
  void *v14;
  const char *v15;
  int v16;
  void *v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C8B088]), "initWithDeferredPhotoIdentifier:", v6);
  PLBackendGetLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (!v7 || !v8)
  {
    v13 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v13)
      {
        -[PLManagedAsset uuid](self, "uuid");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = 138412546;
        v17 = v14;
        v18 = 2112;
        v19 = v6;
        v15 = "Requested deletion of intermediates for asset: %@, deferredUUID: %@ but that deferredUUID is not recognized";
LABEL_11:
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, v15, (uint8_t *)&v16, 0x16u);

      }
    }
    else if (v13)
    {
      -[PLManagedAsset uuid](self, "uuid");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = 138412546;
      v17 = v14;
      v18 = 2112;
      v19 = v6;
      v15 = "Requested deletion of intermediates for asset: %@, deferredUUID: %@ but the shared finalizer was nil";
      goto LABEL_11;
    }

    goto LABEL_13;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "deferredPhotoIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = 138412546;
    v17 = v11;
    v18 = 2112;
    v19 = v12;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEFAULT, "Requesting deletion of intermediates for asset: %@, deferredUUID: %@", (uint8_t *)&v16, 0x16u);

  }
  objc_msgSend(v7, "deletePersistentStorageForPhotoProxy:", v8);
LABEL_13:

}

- (void)requestDeletionOfDeferredPhotoProcessingIntermediates
{
  PLCaptureDeferredPhotoProcessor *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(PLCaptureDeferredPhotoProcessor);
  if (!v3)
  {
    PLBackendGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138543362;
      v10 = v8;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Couldn't get a shared finalizer, unable to request intermediate deletions for asset: %{public}@", (uint8_t *)&v9, 0xCu);

    }
    goto LABEL_6;
  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deferredPhotoIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v6 = objc_claimAutoreleasedReturnValue();
    -[NSObject deferredPhotoIdentifier](v6, "deferredPhotoIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset _deleteDeferredIntermediatesForDeferredPhotoIdentifier:withFinalizer:](self, "_deleteDeferredIntermediatesForDeferredPhotoIdentifier:withFinalizer:", v7, v3);

LABEL_6:
  }

}

- (BOOL)installFinalImageAndRemoveDeferredFilesWithFinalImageURL:(id)a3 outError:(id *)a4
{
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  id v14;
  BOOL v15;
  NSObject *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  PLBackendGetLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v23 = v6;
    v24 = 2112;
    v25 = v8;
    _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEBUG, "Installing final image and removing deferred files for url %@, uuid %@", buf, 0x16u);

  }
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[PLManagedAsset savedAssetType](self, "savedAssetType");
  -[PLManagedAsset uuid](self, "uuid");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v20) = 1;
  LOBYTE(v19) = 0;
  objc_msgSend(v9, "addDCIMEntryAtFileURL:mainFileMetadata:previewImage:thumbnailImage:savedAssetType:replacementUUID:publicGlobalUUID:extendedInfo:withUUID:isPlaceholder:placeholderFileURL:forFinalCameraImage:", v6, 0, 0, 0, v10, v11, 0, 0, 0, v19, 0, v20);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    v21 = 0;
    v13 = objc_msgSend((id)objc_opt_class(), "installResourcesForAssetAndRemoveDeferredProcessingPreviewFile:error:", v12, &v21);
    v14 = v21;
    if ((v13 & 1) != 0)
    {
      v15 = 1;
      goto LABEL_12;
    }
  }
  else
  {
    v14 = 0;
  }
  PLDeferredProcessingGetLog();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543874;
    v23 = v17;
    v24 = 2112;
    v25 = v6;
    v26 = 2112;
    v27 = v14;
    _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Failed to install resources for asset %{public}@, at path %@, error: %@", buf, 0x20u);

  }
  if (a4)
  {
    v14 = objc_retainAutorelease(v14);
    v15 = 0;
    *a4 = v14;
  }
  else
  {
    v15 = 0;
  }
LABEL_12:

  return v15;
}

- (BOOL)_updateAndStoreFinalPhotoResourceForResourceType:(unsigned int)a3 version:(unsigned int)a4 error:(id *)a5
{
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void *v10;
  int64_t v11;
  int64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  id v28;
  id v29;
  uint8_t buf[4];
  void *v31;
  uint64_t v32;

  v6 = *(_QWORD *)&a4;
  v7 = *(_QWORD *)&a3;
  v32 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "path");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[PLManagedAsset width](self, "width");
  v12 = -[PLManagedAsset height](self, "height");
  LOWORD(v27) = -[PLManagedAsset kind](self, "kind");
  +[PLResourceInstaller generateValidatedExternalImageResourceOfType:forFilePath:requireFileToBePresent:version:basedOnFullSizeWidth:andHeight:recipe:assetKind:error:](PLResourceInstaller, "generateValidatedExternalImageResourceOfType:forFilePath:requireFileToBePresent:version:basedOnFullSizeWidth:andHeight:recipe:assetKind:error:", v7, v10, 1, v6, v11, v12, 0, v27, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    -[PLManagedAsset assetID](self, "assetID");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "libraryID");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    PLDataStoreForClassIDAndLibraryID(0, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    v28 = 0;
    v29 = 0;
    LODWORD(v16) = objc_msgSend(v15, "storeExternalResource:forAsset:options:error:resultingResource:", v13, self, 0, &v29, &v28);
    v17 = v29;
    v18 = v28;
    if ((_DWORD)v16)
    {
      -[PLManagedAsset recalculateImageRequestHints](self, "recalculateImageRequestHints");
      v19 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "code");
      NSStringFromPLErrorCode();
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "setObject:forKeyedSubscript:", v24, *MEMORY[0x1E0CB2938]);

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", v6);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "setObject:forKeyedSubscript:", v25, CFSTR("version"));

      objc_msgSend(v23, "setObject:forKeyedSubscript:", v17, *MEMORY[0x1E0CB3388]);
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], objc_msgSend(v17, "code"), v23);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    PLBackendGetLog();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v31 = v21;
      _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Failed to install deferred photo processing resources for asset %@", buf, 0xCu);

    }
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromPLErrorCode();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setObject:forKeyedSubscript:", v16, *MEMORY[0x1E0CB2938]);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", v6);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setObject:forKeyedSubscript:", v22, CFSTR("version"));

    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47010, v15);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v16) = 0;
  }

  if (a5)
    *a5 = objc_retainAutorelease(v19);

  return (char)v16;
}

- (BOOL)promoteDeferredPreviewToFinalImageWithOutError:(id *)a3
{
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  int v9;
  BOOL v10;
  _QWORD v12[5];
  id v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;
  uint8_t buf[4];
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v21 = &v20;
  v22 = 0x3032000000;
  v23 = __Block_byref_object_copy__16141;
  v24 = __Block_byref_object_dispose__16142;
  v25 = 0;
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v19 = 0;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __90__PLManagedAsset_DeferredPhotoProcessing__promoteDeferredPreviewToFinalImageWithOutError___block_invoke;
    v12[3] = &unk_1E3676348;
    v12[4] = self;
    v13 = v5;
    v14 = &v20;
    v15 = &v16;
    objc_msgSend(v6, "performTransactionAndWait:", v12);

  }
  else
  {
    PLBackendGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset objectID](self, "objectID");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v27 = v8;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "photolibrary was nil for asset: %{public}@", buf, 0xCu);

    }
  }
  v9 = *((unsigned __int8 *)v17 + 24);
  if (a3 && !*((_BYTE *)v17 + 24))
  {
    *a3 = objc_retainAutorelease((id)v21[5]);
    v9 = *((unsigned __int8 *)v17 + 24);
  }
  v10 = v9 != 0;

  _Block_object_dispose(&v16, 8);
  _Block_object_dispose(&v20, 8);

  return v10;
}

- (BOOL)transitionToDeferredProcessingNeededAdjustmentWithOriginalWidth:(unint64_t)a3 originalHeight:(unint64_t)a4 shouldSignalBackgroundProcessingNeeded:(BOOL)a5 reason:(id)a6
{
  _BOOL4 v6;
  id v10;
  BOOL v11;
  NSObject *v12;
  void *v13;
  char v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  int v21;
  id v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v6 = a5;
  v25 = *MEMORY[0x1E0C80C00];
  v10 = a6;
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    v11 = -[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder");
    if (!v11)
    {
      -[PLManagedAsset setHeight:](self, "setHeight:", a4);
      -[PLManagedAsset setWidth:](self, "setWidth:", a3);
      -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 2);
      PLDeferredProcessingGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138543618;
        v22 = v10;
        v23 = 2114;
        v24 = v16;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEBUG, "%{public}@ finished, transitioning asset (%{public}@) to deferred processing needed adjustment", (uint8_t *)&v21, 0x16u);

      }
      if (!v6)
      {
        v14 = 1;
        goto LABEL_13;
      }
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v12 = objc_claimAutoreleasedReturnValue();
      -[NSObject libraryServicesManager](v12, "libraryServicesManager");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "backgroundJobService");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "signalBackgroundProcessingNeededOnLibrary:", v19);

      goto LABEL_11;
    }
    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
    {
      PLDeferredProcessingGetLog();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138543618;
        v22 = v10;
        v23 = 2114;
        v24 = v13;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "%{public}@, but adjusted live photo (%{public}@) is still a placeholder, skipping deferred adjustment", (uint8_t *)&v21, 0x16u);

      }
LABEL_11:
      v14 = !v11;

      goto LABEL_13;
    }
  }
  v14 = 0;
LABEL_13:

  return v14;
}

- (BOOL)_updateAndStoreFinalVideoComplementResourceWithOutError:(id *)a3
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  id v12;
  id v13;
  id v15;
  id v16;

  -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceInstaller validatedExternalResourceForLocalVideoIfPresentAtPath:context:](PLResourceInstaller, "validatedExternalResourceForLocalVideoIfPresentAtPath:context:", v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v7)
  {
    LOBYTE(v11) = 0;
    if (!a3)
      goto LABEL_6;
    goto LABEL_5;
  }
  objc_msgSend(v7, "setRecipeID:", 0);
  objc_msgSend(v7, "setResourceType:", 3);
  objc_msgSend(v7, "setVersion:", 0);
  -[PLManagedAsset assetID](self, "assetID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "libraryID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  PLDataStoreForClassIDAndLibraryID(0, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = 0;
  v16 = 0;
  v11 = objc_msgSend(v10, "storeExternalResource:forAsset:options:error:resultingResource:", v7, self, 0, &v16, &v15);
  v12 = v16;
  v13 = v15;
  if (v11)
    -[PLManagedAsset deleteResourcesWithRecipeID:andVersion:](self, "deleteResourcesWithRecipeID:andVersion:", 131280, 0);

  if (a3)
LABEL_5:
    *a3 = 0;
LABEL_6:

  return v11;
}

- (BOOL)promoteProxyToFinalVideoComplementWithOutError:(id *)a3
{
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  id v10;
  PLManagedAsset *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t);
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;

  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0;
  v15 = &v14;
  v16 = 0x3032000000;
  v17 = __Block_byref_object_copy__16141;
  v18 = __Block_byref_object_dispose__16142;
  v19 = 0;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __90__PLManagedAsset_DeferredPhotoProcessing__promoteProxyToFinalVideoComplementWithOutError___block_invoke;
  v9[3] = &unk_1E3676348;
  v7 = v5;
  v10 = v7;
  v11 = self;
  v12 = &v14;
  v13 = &v20;
  objc_msgSend(v6, "performTransactionAndWait:", v9);

  if (*((_BYTE *)v21 + 24))
  {
    LOBYTE(a3) = 1;
  }
  else if (a3)
  {
    *a3 = objc_retainAutorelease((id)v15[5]);
    LOBYTE(a3) = *((_BYTE *)v21 + 24) != 0;
  }

  _Block_object_dispose(&v14, 8);
  _Block_object_dispose(&v20, 8);
  return (char)a3;
}

- (BOOL)installFinalVideoComplementAndRemoveDeferredFilesWithOutError:(id *)a3
{
  void *v5;
  void *v6;
  char v7;
  id v8;
  char v9;
  BOOL v10;
  id v11;
  BOOL v12;
  NSObject *v13;
  void *v14;
  id v16;
  id v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForDeferredVideoComplementFile](self, "pathForDeferredVideoComplementFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = 0;
  v7 = objc_msgSend(v5, "removeItemAtPath:error:", v6, &v17);
  v8 = v17;
  if ((v7 & 1) != 0)
  {

  }
  else
  {
    v9 = PLIsErrorFileNotFound();

    if ((v9 & 1) == 0)
    {
      PLBackendGetLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset pathForDeferredVideoComplementFile](self, "pathForDeferredVideoComplementFile");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v19 = v14;
        v20 = 2112;
        v21 = v8;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to remove item at path %@: %@", buf, 0x16u);

      }
      goto LABEL_11;
    }
  }
  v16 = v8;
  v10 = -[PLManagedAsset _updateAndStoreFinalVideoComplementResourceWithOutError:](self, "_updateAndStoreFinalVideoComplementResourceWithOutError:", &v16);
  v11 = v16;

  if (v10)
  {
    -[PLManagedAsset deleteResourcesWithRecipeID:andVersion:](self, "deleteResourcesWithRecipeID:andVersion:", 131279, 0);
    v12 = 1;
    goto LABEL_14;
  }
  PLBackendGetLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v19 = v11;
    _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to update and store video complement resource with error: %@", buf, 0xCu);
  }
  v8 = v11;
LABEL_11:

  if (a3)
  {
    v11 = objc_retainAutorelease(v8);
    v12 = 0;
    *a3 = v11;
  }
  else
  {
    v12 = 0;
    v11 = v8;
  }
LABEL_14:

  return v12;
}

- (BOOL)promoteSemanticEnhancePreviewToFinalImage:(id *)a3
{
  BOOL v5;
  id v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v15 = 0;
  v5 = -[PLManagedAsset promoteDeferredPreviewToFinalImageWithOutError:](self, "promoteDeferredPreviewToFinalImageWithOutError:", &v15);
  v6 = v15;
  if (!v5)
  {
    PLDeferredProcessingGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v17 = v6;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "[SemDev] Error promoting deferred preview to final image: %@", buf, 0xCu);
    }

  }
  -[PLManagedAsset cleanUpMetadataPath](self, "cleanUpMetadataPath");
  -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 0);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setDeferredProcessingCandidateOptions:", 0);

  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    if (!-[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder"))
    {
      -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:", 2);
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v9 = objc_claimAutoreleasedReturnValue();
      -[NSObject libraryServicesManager](v9, "libraryServicesManager");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "backgroundJobService");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "signalBackgroundProcessingNeededOnLibrary:", v13);

LABEL_11:
      goto LABEL_12;
    }
    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
    {
      PLDeferredProcessingGetLog();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v17 = v10;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Promoted semantic enhance preview to final image for adjusted live photo (%{public}@) which is still a placeholder, skipping deferred adjustment", buf, 0xCu);

      }
      goto LABEL_11;
    }
  }
LABEL_12:
  if (a3 && v6)
    *a3 = objc_retainAutorelease(v6);

  return v6 == 0;
}

- (BOOL)cleanUpMetadataPath
{
  void *v3;
  void *v4;
  char v5;
  id v6;
  NSObject *v7;
  void *v8;
  id v10;
  uint8_t buf[4];
  void *v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForCameraMetadataFile](self, "pathForCameraMetadataFile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0;
  v5 = objc_msgSend(v3, "removeItemAtPath:error:", v4, &v10);
  v6 = v10;

  if ((v5 & 1) == 0)
  {
    PLBackendGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset pathForCameraMetadataFile](self, "pathForCameraMetadataFile");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v12 = v8;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "[SemDev] Unable to remove MDATA file at path %@: %@", buf, 0x16u);

    }
  }

  return 1;
}

void __90__PLManagedAsset_DeferredPhotoProcessing__promoteProxyToFinalVideoComplementWithOutError___block_invoke(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  const char *v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  id obj;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "pathForDeferredVideoComplementFile");
  v3 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "pathForVideoComplementFile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v5 + 40);
  LOBYTE(v2) = objc_msgSend(v2, "copyItemAtPath:toPath:error:", v3, v4, &obj);
  objc_storeStrong((id *)(v5 + 40), obj);
  if ((v2 & 1) != 0
    || (objc_msgSend(MEMORY[0x1E0D73208], "isFileExistsError:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)) & 1) != 0)
  {
    goto LABEL_6;
  }
  v6 = PLIsErrorFileNotFound();

  if ((v6 & 1) != 0)
    goto LABEL_8;
  PLBackendGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(*(id *)(a1 + 40), "pathForDeferredVideoComplementFile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    *(_DWORD *)buf = 138412546;
    v24 = v4;
    v25 = 2112;
    v26 = v7;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_ERROR, "[FDR] Error copying video complement proxy file %@, error: %@", buf, 0x16u);
LABEL_6:

  }
LABEL_8:
  v8 = *(void **)(a1 + 40);
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v21 = *(id *)(v9 + 40);
  v10 = objc_msgSend(v8, "_updateAndStoreFinalVideoComplementResourceWithOutError:", &v21);
  objc_storeStrong((id *)(v9 + 40), v21);
  if ((v10 & 1) != 0)
  {
    v11 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "pathForDeferredVideoComplementFile");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v20 = *(id *)(v13 + 40);
    LOBYTE(v11) = objc_msgSend(v11, "removeItemAtPath:error:", v12, &v20);
    objc_storeStrong((id *)(v13 + 40), v20);
    if ((v11 & 1) != 0)
    {

LABEL_14:
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
      objc_msgSend(*(id *)(a1 + 40), "deleteResourcesWithRecipeID:andVersion:", 131279, 0);
      return;
    }
    v18 = PLIsErrorFileNotFound();

    if ((v18 & 1) != 0)
      goto LABEL_14;
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(*(id *)(a1 + 40), "pathForDeferredVideoComplementFile");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138412546;
      v24 = v15;
      v25 = 2112;
      v26 = v19;
      v17 = "Failed to remove item at path %@: %@";
      goto LABEL_17;
    }
  }
  else
  {
    PLBackendGetLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(*(id *)(a1 + 40), "uuid");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138543618;
      v24 = v15;
      v25 = 2112;
      v26 = v16;
      v17 = "Failed to install resources for asset %{public}@: %@";
LABEL_17:
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, v17, buf, 0x16u);

    }
  }

}

void __90__PLManagedAsset_DeferredPhotoProcessing__promoteDeferredPreviewToFinalImageWithOutError___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int v10;
  void *v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char v16;
  NSObject *v17;
  void *v18;
  id v19;
  id obj;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "mainFileURL");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(*(id *)(a1 + 32), "height");
  v4 = objc_msgSend(*(id *)(a1 + 32), "width");
  v5 = *(void **)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "fileURLForCurrentDeferredProcessingPreviewFile");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v7 + 40);
  LODWORD(v5) = objc_msgSend(v5, "copyItemAtURL:toURL:error:", v6, v2, &obj);
  objc_storeStrong((id *)(v7 + 40), obj);

  if ((_DWORD)v5)
  {
    v8 = *(void **)(a1 + 32);
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v19 = *(id *)(v9 + 40);
    v10 = objc_msgSend(v8, "installFinalImageAndRemoveDeferredFilesWithFinalImageURL:outError:", v2, &v19);
    objc_storeStrong((id *)(v9 + 40), v19);
    if (v10)
    {
      objc_msgSend(*(id *)(a1 + 32), "setSpatialType:", 0);
      objc_msgSend(*(id *)(a1 + 32), "additionalAttributes");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "setSleetIsReversible:", 0);

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
    }
    else if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)
           && objc_msgSend(MEMORY[0x1E0D73208], "isFileExistsError:"))
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
      PLDeferredProcessingGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(a1 + 32), "mainFileURL");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v22 = v18;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Asset has already been finalized into slot, skipping promoting final image: %@", buf, 0xCu);

      }
    }
  }
  else
  {
    PLDeferredProcessingGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(*(id *)(a1 + 32), "fileURLForCurrentDeferredProcessingPreviewFile");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138412802;
      v22 = v13;
      v23 = 2112;
      v24 = v2;
      v25 = 2112;
      v26 = v14;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Failed to copy deferred preview: %@ into original slot: %@ with error: %@", buf, 0x20u);

    }
    objc_msgSend(*(id *)(a1 + 32), "requestDeletionOfDeferredPhotoProcessingIntermediates");
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "transitionToDeferredProcessingNeededAdjustmentWithOriginalWidth:originalHeight:shouldSignalBackgroundProcessingNeeded:reason:", v4, v3, 0, CFSTR("Promoted deferred preview to final image")) & 1) == 0&& objc_msgSend(*(id *)(a1 + 32), "deferredProcessingNeeded") != 7)
  {
    objc_msgSend(*(id *)(a1 + 32), "setDeferredProcessingNeeded:", 0);
  }
  objc_msgSend(*(id *)(a1 + 32), "additionalAttributes");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "deferredProcessingCandidateOptions");

  if ((v16 & 8) != 0)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "cleanUpMetadataPath");

}

+ (id)listOfStatesWithOutstandingDeferredPhotoProcessingWork
{
  return &unk_1E37634B8;
}

+ (BOOL)installResourcesForAssetAndRemoveDeferredProcessingPreviewFile:(id)a3 error:(id *)a4
{
  id v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  char v10;
  id v11;
  char v12;
  id v13;
  BOOL v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pathForDeferredProcessingPreviewFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  PLBackendGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v5, "uuid");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v23 = v7;
    v24 = 2114;
    v25 = v9;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Deleting deferred preview at path: %@ for asset %{public}@", buf, 0x16u);

  }
  v21 = 0;
  v10 = objc_msgSend(v6, "removeItemAtPath:error:", v7, &v21);
  v11 = v21;
  if ((v10 & 1) != 0 || (PLIsErrorFileNotFound() & 1) != 0)
  {
    v20 = v11;
    v12 = objc_msgSend(v5, "_updateAndStoreFinalPhotoResourceForResourceType:version:error:", 0, 0, &v20);
    v13 = v20;

    if ((v12 & 1) != 0)
    {
      objc_msgSend(v5, "deleteResourcesWithRecipeID:andVersion:", 65943, 0);
      objc_msgSend(v5, "deleteResourcesWithRecipeID:andVersion:", 65951, 0);
      v14 = 1;
      goto LABEL_15;
    }
    PLDeferredProcessingGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v5, "uuid");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v23 = v16;
      v24 = 2112;
      v25 = v13;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Error updating and storing final resource for asset %{public}@ with error %@", buf, 0x16u);

    }
    v11 = v13;
  }
  else
  {
    PLBackendGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(MEMORY[0x1E0D731F0], "descriptionWithPath:", v7);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "uuid");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v23 = v17;
      v24 = 2114;
      v25 = v18;
      v26 = 2112;
      v27 = v11;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Unable to delete deferred preview file: %@ for asset: %{public}@, with error: %@", buf, 0x20u);

    }
  }

  if (a4)
  {
    v13 = objc_retainAutorelease(v11);
    v14 = 0;
    *a4 = v13;
  }
  else
  {
    v14 = 0;
    v13 = v11;
  }
LABEL_15:

  return v14;
}

- (BOOL)isEligibleForSearchIndexing
{
  void *v4;
  void *v5;
  void *v6;
  char v7;

  if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) != 0)
    return 0;
  v4 = (void *)objc_opt_class();
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "isEligibleForSearchIndexingPredicateForLibraryIdentifier:", +[PLSpotlightDonationUtilities wellKnownPhotoLibraryIdentifierFromPLPhotoLibrary:](PLSpotlightDonationUtilities, "wellKnownPhotoLibraryIdentifierFromPLPhotoLibrary:", v5));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "evaluateWithObject:", self);

  return v7;
}

+ (id)isEligibleForSearchIndexingPredicateForLibraryIdentifier:(int64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  pl_dispatch_once();
  if (a3 != 3)
    return (id)isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_37569;
  v4 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "predicateWithFormat:", CFSTR("noindex:(%K) != %@"), CFSTR("dateCreated"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)MEMORY[0x1E0CB3528];
  v11[0] = isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_37569;
  v11[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "andPredicateWithSubpredicates:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)propertiesToFetch
{
  return 0;
}

+ (id)relationshipKeyPathsToPrefetch
{
  _QWORD v3[9];

  v3[8] = *MEMORY[0x1E0C80C00];
  v3[0] = CFSTR("additionalAttributes");
  v3[1] = CFSTR("additionalAttributes.keywords");
  v3[2] = CFSTR("additionalAttributes.assetDescription");
  v3[3] = CFSTR("extendedAttributes");
  v3[4] = CFSTR("mediaAnalysisAttributes.characterRecognitionAttributes");
  v3[5] = CFSTR("mediaAnalysisAttributes.visualSearchAttributes");
  v3[6] = CFSTR("dayGroupHighlightBeingAssets");
  v3[7] = CFSTR("moment");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v3, 8);
  return (id)objc_claimAutoreleasedReturnValue();
}

+ (id)fetchAssetsWithUUIDs:(id)a3 managedObjectContext:(id)a4
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v17;

  v6 = a3;
  v7 = (void *)MEMORY[0x1E0C97B48];
  v8 = a4;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setIncludesPendingChanges:", 0);
  objc_msgSend(a1, "relationshipKeyPathsToPrefetch");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setRelationshipKeyPathsForPrefetching:", v11);

  if ((unint64_t)objc_msgSend(v6, "count") >= 0x65)
    objc_msgSend(v10, "setFetchBatchSize:", 100);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("uuid IN %@"), v6);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setPredicate:", v12);

  objc_msgSend(v10, "setFetchLimit:", objc_msgSend(v6, "count"));
  v17 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v10, &v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = v17;
  if (v13)
    objc_msgSend(MEMORY[0x1E0D732B8], "successWithResult:", v13);
  else
    objc_msgSend(MEMORY[0x1E0D732B8], "failureWithError:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

void __91__PLManagedAsset_SearchIndexing__isEligibleForSearchIndexingPredicateForLibraryIdentifier___block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];

  v8[4] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("visibilityState"), 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v1;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForSearchIndexExclusions"), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v2;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == NO"), CFSTR("hidden"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[2] = v3;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("trashedState"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[3] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "andPredicateWithSubpredicates:", v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_37569;
  isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_37569 = v6;

}

- (id)duplicateSortPropertyNames
{
  _QWORD v3[7];

  v3[6] = *MEMORY[0x1E0C80C00];
  v3[0] = CFSTR("favorite");
  v3[1] = CFSTR("latitude");
  v3[2] = CFSTR("longitude");
  v3[3] = CFSTR("dateCreated");
  v3[4] = CFSTR("playbackStyle");
  v3[5] = CFSTR("libraryScopeShareState");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v3, 6);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)duplicateSortPropertyNamesSkip
{
  _QWORD v3[2];

  v3[1] = *MEMORY[0x1E0C80C00];
  v3[0] = CFSTR("duplicateAssetVisibilityState");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v3, 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (BOOL)isValidForPerceptualProcessing
{
  return !-[PLManagedAsset isVideo](self, "isVideo")
      && -[PLManagedAsset kindSubtype](self, "kindSubtype") != 10;
}

+ (int64_t)adjustmentBaseVersionFromPFAdjustmentsBaseVersion:(int64_t)a3
{
  if (a3 == 1)
    return 1;
  else
    return 2 * (a3 == 2);
}

+ (int64_t)pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:(int64_t)a3
{
  if (a3 == 1)
    return 1;
  else
    return 2 * (a3 == 2);
}

- (unint64_t)originalResourceChoice
{
  void *v2;
  void *v3;
  unint64_t v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "originalResourceChoice");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (int)objc_msgSend(v3, "shortValue");

  return v4;
}

- (void)setOriginalResourceChoice:(unint64_t)a3
{
  void *v4;
  id v5;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalResourceChoice:", v4);

}

- (id)lastUploadAttemptDate
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "lastUploadAttemptDate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (void)setLastUploadAttemptDate:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setLastUploadAttemptDate:", v4);

}

- (signed)uploadAttempts
{
  void *v2;
  void *v3;
  signed __int16 v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "uploadAttempts");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "shortValue");

  return v4;
}

- (void)setUploadAttempts:(signed __int16)a3
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setUploadAttempts:", v4);

}

- (void)incrementUploadAttempts
{
  -[PLManagedAsset setUploadAttempts:](self, "setUploadAttempts:", (__int16)(-[PLManagedAsset uploadAttempts](self, "uploadAttempts") + 1));
}

- (id)existingCloudMasterNeedsRepush:(BOOL *)a3
{
  uint64_t v5;
  void *v6;
  BOOL v7;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  BOOL v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  char v27;
  int v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  char v34;
  void *v35;
  NSObject *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  PLManagedAsset *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset master](self, "master");
  v5 = objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = 0;
    if (a3)
LABEL_3:
      *a3 = v7;
  }
  else
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D11398], "fingerprintSchemeForNewMasterAsset");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = 0;
    objc_msgSend(v10, "fingerPrintForFileAtURL:error:", v9, &v40);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v40;

    if (v11)
      v13 = v12 == 0;
    else
      v13 = 0;
    if (v13)
    {
      -[PLManagedAsset momentShare](self, "momentShare");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLCloudMaster cloudMasterWithGUID:inMomentShare:prefetchResources:inManagedObjectContext:](PLCloudMaster, "cloudMasterWithGUID:inMomentShare:prefetchResources:inManagedObjectContext:", v11, v14, 0, v15);
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      if (v6)
      {
        -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset rm_createNewResourcesIn:inManagedObjectContext:](self, "rm_createNewResourcesIn:inManagedObjectContext:", v6, v16);

        -[PLManagedAsset setMaster:](self, "setMaster:", v6);
        objc_msgSend(v6, "originalFilename");
        v17 = objc_claimAutoreleasedReturnValue();
        if (v17)
        {
          v18 = (void *)v17;
          -[PLManagedAsset originalFilename](self, "originalFilename");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "originalFilename");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = objc_msgSend(v19, "isEqualToString:", v20);

          if ((v21 & 1) == 0)
          {
            objc_msgSend(v6, "originalFilename");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset setOriginalFilename:](self, "setOriginalFilename:", v22);

          }
        }
        -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
        v23 = objc_claimAutoreleasedReturnValue();
        v38 = v9;
        if (!v23)
          goto LABEL_16;
        v24 = (void *)v23;
        objc_msgSend(v6, "importedByBundleIdentifier");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = objc_msgSend(v25, "isEqualToString:", v26);

        if ((v27 & 1) == 0)
        {
          -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "updateImportedByBundleIdentifier:", v29);

          v28 = 1;
        }
        else
        {
LABEL_16:
          v28 = 0;
        }
        -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName", v38);
        v30 = objc_claimAutoreleasedReturnValue();
        if (v30)
        {
          v31 = (void *)v30;
          objc_msgSend(v6, "importedByDisplayName");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v34 = objc_msgSend(v32, "isEqualToString:", v33);

          if ((v34 & 1) == 0)
          {
            -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "updateImportedByDisplayName:", v35);

            v28 = 1;
          }
        }
        v7 = v28 != 0;
        if (*MEMORY[0x1E0D115D0])
        {
          v9 = v39;
        }
        else
        {
          __CPLAssetsdOSLogDomain();
          v36 = objc_claimAutoreleasedReturnValue();
          v9 = v39;
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            v42 = v6;
            v43 = 2112;
            v44 = self;
            _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_DEFAULT, "Found an existing cloud master %@ for %@", buf, 0x16u);
          }

        }
      }
      else
      {
        v7 = 0;
      }
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "setOriginalStableHash:", v11);

    }
    else
    {
      v6 = 0;
      v7 = 0;
    }

    if (a3)
      goto LABEL_3;
  }
  return v6;
}

- (void)createMasterIfNecessaryInLibrary:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  PLManagedAsset *v7;
  PLManagedAsset *v8;
  void *v9;
  void *v10;
  PLManagedAsset *v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint8_t buf[4];
  PLManagedAsset *v27;
  __int16 v28;
  NSObject *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset master](self, "master");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5
    && !-[PLManagedAsset isTimelapsePlaceholder](self, "isTimelapsePlaceholder")
    && -[PLManagedAsset complete](self, "complete")
    && !-[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder")
    && !-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
  {
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v8 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
    if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
      -[PLManagedAsset nonDynamicOriginalUTI](self, "nonDynamicOriginalUTI");
    else
      -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D11398], "fingerprintSchemeForNewMasterAsset");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = 0;
    objc_msgSend(v10, "fingerPrintForFileAtURL:error:", v8, &v25);
    v11 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
    v12 = v25;
    v6 = v12;
    if (!v11 || v12)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412546;
          v27 = v8;
          v28 = 2112;
          v29 = v6;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "CreateMaster: Failed to generate finger print for %@. Error: %@", buf, 0x16u);
        }

      }
      -[PLManagedAsset setCloudLocalState:](self, "setCloudLocalState:", 2);
      v5 = 0;
    }
    else
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v27 = v11;
          _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEBUG, "Master asset finger print %@", buf, 0xCu);
        }

      }
      v24 = v9;
      -[PLManagedAsset momentShare](self, "momentShare");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLCloudMaster cloudMasterWithGUID:inMomentShare:prefetchResources:inManagedObjectContext:](PLCloudMaster, "cloudMasterWithGUID:inMomentShare:prefetchResources:inManagedObjectContext:", v11, v14, 0, v15);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      if (v5)
      {
        -[PLManagedAsset setupPropertiesOnExistingMaster:](self, "setupPropertiesOnExistingMaster:", v5);
      }
      else
      {
        -[PLManagedAsset momentShare](self, "momentShare");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLCloudMaster insertIntoPhotoLibrary:withCloudMasterGUID:inMomentShare:](PLCloudMaster, "insertIntoPhotoLibrary:withCloudMasterGUID:inMomentShare:", v4, v11);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setupPropertiesOnNewCloudMaster:withPlaceholderSourceAsset:uniformTypeIdentifier:](self, "setupPropertiesOnNewCloudMaster:withPlaceholderSourceAsset:uniformTypeIdentifier:", v5, 0, v9);
        -[PLManagedAsset setMaster:](self, "setMaster:", v5);
        -[PLManagedAsset path](v8, "path");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "scopedIdentifier");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v17, 1, v24, v18, v10);
        v19 = (void *)objc_claimAutoreleasedReturnValue();

        if (v19)
        {
          v20 = -[PLManagedAsset storedResourceForCPLResource:asset:adjusted:](self, "storedResourceForCPLResource:asset:adjusted:", v19, self, 0);
          v9 = v24;
          if (-[PLManagedAsset shouldSimulateQuarantineOriginalImageResourceOnPush](self, "shouldSimulateQuarantineOriginalImageResourceOnPush"))
          {
            -[PLManagedAsset simulateQuarantineOriginalImageResourceOnPush:](self, "simulateQuarantineOriginalImageResourceOnPush:", v19);
          }
        }
        else
        {
          v9 = v24;
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v27 = self;
              _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "CreateMaster: Can't create CPLResource for originalResource for asset %@", buf, 0xCu);
            }

          }
          -[PLManagedAsset setCloudLocalState:](self, "setCloudLocalState:", 2);
        }

      }
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "setOriginalStableHash:", v11);

    }
    goto LABEL_9;
  }
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v7 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v27 = v7;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Skipping creating master for asset: %@", buf, 0xCu);

    }
LABEL_9:

  }
}

- (void)setupPropertiesOnExistingMaster:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  NSObject *v24;
  int v25;
  id v26;
  __int16 v27;
  PLManagedAsset *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset rm_createNewResourcesIn:inManagedObjectContext:](self, "rm_createNewResourcesIn:inManagedObjectContext:", v4, v5);

  -[PLManagedAsset setMaster:](self, "setMaster:", v4);
  objc_msgSend(v4, "originalFilename");
  v6 = objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = (void *)v6;
    -[PLManagedAsset originalFilename](self, "originalFilename");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "originalFilename");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v8, "isEqualToString:", v9);

    if ((v10 & 1) == 0)
    {
      objc_msgSend(v4, "originalFilename");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setOriginalFilename:](self, "setOriginalFilename:", v11);

    }
  }
  -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
  v12 = objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    v13 = (void *)v12;
    objc_msgSend(v4, "importedByBundleIdentifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v14, "isEqualToString:", v15);

    if ((v16 & 1) == 0)
    {
      -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "updateImportedByBundleIdentifier:", v17);

    }
  }
  -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
  v18 = objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    v19 = (void *)v18;
    objc_msgSend(v4, "importedByDisplayName");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v20, "isEqualToString:", v21);

    if ((v22 & 1) == 0)
    {
      -[PLManagedAsset importedByDisplayName](self, "importedByDisplayName");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "updateImportedByDisplayName:", v23);

    }
  }
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      v25 = 138412546;
      v26 = v4;
      v27 = 2112;
      v28 = self;
      _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "Found an existing cloud master %@ for %@", (uint8_t *)&v25, 0x16u);
    }

  }
}

- (void)setupPropertiesOnNewCloudMaster:(id)a3 withPlaceholderSourceAsset:(id)a4 uniformTypeIdentifier:(id)a5
{
  PLManagedAsset *v8;
  id v9;
  PLManagedAsset *v10;
  PLManagedAsset *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;

  v23 = a3;
  v8 = (PLManagedAsset *)a4;
  v9 = a5;
  if (v8)
    v10 = v8;
  else
    v10 = self;
  v11 = v10;
  -[PLManagedAsset dateCreated](v11, "dateCreated");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setCreationDate:", v12);

  -[PLManagedAsset addedDate](v11, "addedDate");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setImportDate:", v13);

  if (v9)
    objc_msgSend(v23, "setUniformTypeIdentifier:", v9);
  objc_msgSend(v23, "setOriginalOrientation:", -[PLManagedAsset originalOrientation](v11, "originalOrientation"));
  -[PLManagedAsset originalFilename](v11, "originalFilename");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    -[PLManagedAsset originalFilename](v11, "originalFilename");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "setOriginalFilename:", v15);

  }
  -[PLManagedAsset additionalAttributes](v11, "additionalAttributes");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "originatingAssetIdentifier");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setOriginatingAssetIdentifier:", v17);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setImportedBy:", objc_msgSend(v18, "importedBy"));

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "importedByBundleIdentifier");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setImportedByBundleIdentifier:", v20);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "importedByDisplayName");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setImportedByDisplayName:", v22);

}

- (void)_createPhotoResourcesForMaster:(id)a3 withOriginalResource:(id)a4 intoMasterResources:(id)a5 shouldGenerateDerivatives:(BOOL)a6 inPhotoLibrary:(id)a7
{
  id v10;
  void *v11;
  void *v12;
  dispatch_semaphore_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  char v24;
  id v25;
  char v26;
  NSObject *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  char v34;
  id v35;
  char v36;
  NSObject *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  id v47;
  void *v48;
  NSObject *v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  NSObject *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  NSObject *v56;
  NSObject *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  int v63;
  void *v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  unint64_t v69;
  _BYTE *v70;
  NSObject *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  id v77;
  void *v78;
  int v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  void *v81;
  NSObject *v82;
  const char *v83;
  NSObject *v84;
  uint32_t v85;
  void *v86;
  id v87;
  void *v88;
  void *v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  void *v94;
  _BOOL4 v95;
  int v96;
  id v98;
  id obj;
  id obja;
  void *v101;
  id v102;
  id v103;
  id v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  id v109;
  id v110;
  _QWORD v111[4];
  id v112;
  NSObject *v113;
  _BYTE *v114;
  uint8_t v115[128];
  uint8_t buf[4];
  void *v117;
  __int16 v118;
  id v119;
  __int16 v120;
  id v121;
  _BYTE v122[24];
  uint64_t (*v123)(uint64_t, uint64_t);
  void (*v124)(uint64_t);
  id v125;
  uint64_t v126;

  v95 = a6;
  v126 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v91 = a4;
  v98 = a5;
  v87 = a7;
  v93 = v10;
  objc_msgSend(v10, "scopedIdentifier");
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v91, "identity");
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v92, "fileUTI");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v92, "imageDimensions");
  objc_msgSend(v10, "setFullSizeJPEGSource:", (__int16)+[PLCloudMaster fullSizeJPEGSourceForUTI:andImageDimensions:](PLCloudMaster, "fullSizeJPEGSourceForUTI:andImageDimensions:", v11));

  objc_msgSend(v10, "fingerprintScheme");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v95)
    goto LABEL_37;
  *(_QWORD *)v122 = 0;
  *(_QWORD *)&v122[8] = v122;
  *(_QWORD *)&v122[16] = 0x3032000000;
  v123 = __Block_byref_object_copy__44479;
  v124 = __Block_byref_object_dispose__44480;
  v125 = 0;
  objc_msgSend(v90, "path");
  obj = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithArray:", &unk_1E3763AE8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = dispatch_semaphore_create(0);
  v14 = (void *)MEMORY[0x1E0D11618];
  v15 = (void *)MEMORY[0x1E0C99E98];
  NSTemporaryDirectory();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "fileURLWithPath:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v111[0] = MEMORY[0x1E0C809B0];
  v111[1] = 3221225472;
  v111[2] = __136__PLManagedAsset_CPL___createPhotoResourcesForMaster_withOriginalResource_intoMasterResources_shouldGenerateDerivatives_inPhotoLibrary___block_invoke;
  v111[3] = &unk_1E366A540;
  v112 = v91;
  v114 = v122;
  v18 = v13;
  v113 = v18;
  objc_msgSend(v14, "generateFullSizeJPEGIfNecessaryFromInputResource:destinationDirectory:fingerprintScheme:completionHandler:", v112, v17, v101, v111);

  dispatch_semaphore_wait(v18, 0xFFFFFFFFFFFFFFFFLL);
  v19 = *(void **)(*(_QWORD *)&v122[8] + 40);
  if (v19)
  {
    v20 = objc_msgSend(v19, "resourceType");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "removeObject:", v21);

    if (v20 == 4)
    {
      v22 = &unk_1E375EDA8;
    }
    else
    {
      if (v20 != 5)
      {
LABEL_9:
        -[PLManagedAsset pathForCPLResourceType:adjusted:](self, "pathForCPLResourceType:adjusted:", v20, 0);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v89, "fileExistsAtPath:", v23) & 1) == 0)
        {
          objc_msgSend(v23, "stringByDeletingLastPathComponent");
          v94 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v89, "fileExistsAtPath:", v94) & 1) == 0)
          {
            v110 = 0;
            v24 = objc_msgSend(MEMORY[0x1E0D73208], "createDirectoryAtPath:error:usingFileManager:", v94, &v110, v89);
            v25 = v110;
            if (*MEMORY[0x1E0D115D0])
              v26 = 1;
            else
              v26 = v24;
            if ((v26 & 1) == 0)
            {
              __CPLAssetsdOSLogDomain();
              v27 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412546;
                v117 = v23;
                v118 = 2112;
                v119 = v25;
                _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "Unable to create parent directory of fullsize derivative %@.Error: %@", buf, 0x16u);
              }

            }
          }
          objc_msgSend(*(id *)(*(_QWORD *)&v122[8] + 40), "identity");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "fileURL");
          v29 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v87, "pathManager");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "capabilities");
          v31 = (void *)objc_claimAutoreleasedReturnValue();

          v32 = (void *)MEMORY[0x1E0D73208];
          objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v23, 0);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v109 = 0;
          v34 = objc_msgSend(v32, "secureMoveItemAtURL:toURL:capabilities:error:", v29, v33, v31, &v109);
          v35 = v109;

          if (*MEMORY[0x1E0D115D0])
            v36 = 1;
          else
            v36 = v34;
          if ((v36 & 1) == 0)
          {
            __CPLAssetsdOSLogDomain();
            v37 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412802;
              v117 = v29;
              v118 = 2112;
              v119 = v23;
              v120 = 2112;
              v121 = v35;
              _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_ERROR, "Failed to secure move fullsize derivative from %@ to %@.Error: %@", buf, 0x20u);
            }

          }
        }
        if (objc_msgSend(v89, "fileExistsAtPath:", v23))
        {
          objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v23, v20, v38, v88, v101);
          v39 = (void *)objc_claimAutoreleasedReturnValue();

          if (v39)
          {
            objc_msgSend(v39, "setDeleteAfterUpload:", 1);
            objc_msgSend(v98, "addObject:", v39);
          }
          else if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v40 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v117 = v23;
              _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_ERROR, "Unable to create CPL resource from %@", buf, 0xCu);
            }

          }
        }

        goto LABEL_36;
      }
      objc_msgSend(v12, "removeObject:", &unk_1E375EDA8);
      v22 = &unk_1E375EDC0;
    }
    objc_msgSend(v12, "removeObject:", v22);
    goto LABEL_9;
  }
  v23 = obj;
LABEL_36:
  -[PLManagedAsset _createJPEGResourcesFromFullSizePath:withScopedIdentifier:forMaster:forResourceTypes:fingerprintScheme:](self, "_createJPEGResourcesFromFullSizePath:withScopedIdentifier:forMaster:forResourceTypes:fingerprintScheme:", v23, v88, 1, v12, v101);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v98, "addObjectsFromArray:", v41);

  _Block_object_dispose(v122, 8);
LABEL_37:
  -[PLManagedAsset allMasterCPLResources](self, "allMasterCPLResources");
  obja = (id)objc_claimAutoreleasedReturnValue();
  v107 = 0u;
  v108 = 0u;
  v105 = 0u;
  v106 = 0u;
  v42 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v105, v115, 16);
  if (!v42)
    goto LABEL_75;
  v43 = *(_QWORD *)v106;
  v96 = !v95;
  do
  {
    v44 = 0;
    do
    {
      if (*(_QWORD *)v106 != v43)
        objc_enumerationMutation(obja);
      v45 = *(void **)(*((_QWORD *)&v105 + 1) + 8 * v44);
      v46 = objc_msgSend(v45, "cplType");
      if (v46 <= 0x18)
      {
        if (((1 << v46) & 0x1860104) != 0)
          goto LABEL_44;
        if (v46 == 22)
        {
          objc_msgSend(v45, "uniformTypeIdentifier");
          v59 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v59, "identifier");
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0D752F0], "supplementalResourceAAEType");
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v61, "identifier");
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          v63 = objc_msgSend(v60, "isEqualToString:", v62);

          if (v63)
          {
LABEL_44:
            v47 = v45;
            objc_msgSend(v47, "cplFileURL");
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            v104 = 0;
            objc_msgSend(v101, "fingerPrintForFileAtURL:error:", v48, &v104);
            v49 = objc_claimAutoreleasedReturnValue();
            v50 = (uint64_t (*)(uint64_t, uint64_t))v104;

            if (v49)
            {
              objc_msgSend(v47, "setFingerprint:", v49);
              goto LABEL_51;
            }
            if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v51 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
              {
                objc_msgSend(v47, "fileURL");
                v52 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v52, "path");
                v53 = (void *)objc_claimAutoreleasedReturnValue();
                -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)v122 = 138412802;
                *(_QWORD *)&v122[4] = v53;
                *(_WORD *)&v122[12] = 2112;
                *(_QWORD *)&v122[14] = v54;
                *(_WORD *)&v122[22] = 2112;
                v123 = v50;
                _os_log_impl(&dword_199541000, v51, OS_LOG_TYPE_ERROR, "Failed to generate fingerprint for path %@ uuid %@. Error: %@", v122, 0x20u);

              }
            }
            if ((objc_msgSend(v47, "isCPLOriginalResourceAssetHasAdjustments:", 0) & 1) != 0)
            {
LABEL_51:
              objc_msgSend(v47, "cplResourceIncludeFile:", 1);
              v55 = (void *)objc_claimAutoreleasedReturnValue();
              if (v55)
              {
                if (!*MEMORY[0x1E0D115D0])
                {
                  __CPLAssetsdOSLogDomain();
                  v56 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v56, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)v122 = 138412290;
                    *(_QWORD *)&v122[4] = v55;
                    _os_log_impl(&dword_199541000, v56, OS_LOG_TYPE_DEBUG, "Created master resource %@", v122, 0xCu);
                  }

                }
                objc_msgSend(v47, "setRemoteAvailability:", 1);
                objc_msgSend(v98, "addObject:", v55);
                if (objc_msgSend(v47, "cplType") == 18 && ((PLIsEDUMode() | v96) & 1) == 0)
                {
                  -[PLManagedAsset _videoComplementDerivativeResourcesForMaster:](self, "_videoComplementDerivativeResourcesForMaster:", v93);
                  v57 = objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v98, "addObjectsFromArray:", v57);
                  goto LABEL_62;
                }
              }
              else if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v57 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
                {
                  -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
                  v58 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)v122 = 138412546;
                  *(_QWORD *)&v122[4] = v47;
                  *(_WORD *)&v122[12] = 2112;
                  *(_QWORD *)&v122[14] = v58;
                  _os_log_impl(&dword_199541000, v57, OS_LOG_TYPE_ERROR, "Unable to create CPLResource from %@ with itemIdentifier %@", v122, 0x16u);

                }
LABEL_62:

              }
LABEL_64:

            }
            else if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v49 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
              {
                objc_msgSend(MEMORY[0x1E0D11440], "shortDescriptionForResourceType:", objc_msgSend(v47, "cplType"));
                v64 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v93, "scopedIdentifier");
                v65 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)v122 = 138543618;
                *(_QWORD *)&v122[4] = v64;
                *(_WORD *)&v122[12] = 2112;
                *(_QWORD *)&v122[14] = v65;
                _os_log_impl(&dword_199541000, v49, OS_LOG_TYPE_ERROR, "Not adding resource of type: %{public}@ to master change identifier %@", v122, 0x16u);

              }
              goto LABEL_64;
            }

          }
        }
      }
      ++v44;
    }
    while (v42 != v44);
    v66 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v105, v115, 16);
    v42 = v66;
  }
  while (v66);
LABEL_75:
  -[PLManagedAsset imageMediaMetadataForURL:](self, "imageMediaMetadataForURL:", v90);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v68 = v67;
  if (v67)
  {
    v69 = objc_msgSend(v67, "length");
    if (v69 > objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize"))
    {
      v70 = (_BYTE *)MEMORY[0x1E0D115D0];
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v71 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
        {
          -[NSManagedObject pl_shortDescription](self, "pl_shortDescription");
          v72 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)v122 = 138412290;
          *(_QWORD *)&v122[4] = v72;
          _os_log_impl(&dword_199541000, v71, OS_LOG_TYPE_DEFAULT, "Creating overflow image properties resource for asset %@", v122, 0xCu);

        }
      }
      -[PLManagedAsset pathForMediaMetadataFile](self, "pathForMediaMetadataFile");
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      v103 = 0;
      objc_msgSend(v73, "stringByDeletingLastPathComponent");
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      v75 = (void *)MEMORY[0x1E0D73208];
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v75) = objc_msgSend(v75, "createDirectoryAtPath:error:usingFileManager:", v74, &v103, v76);

      v77 = v103;
      v78 = v77;
      if ((_DWORD)v75)
      {
        v102 = v77;
        v79 = objc_msgSend(v68, "writeToFile:options:error:", v73, 1, &v102);
        v80 = (uint64_t (*)(uint64_t, uint64_t))v102;

        if (v79)
        {
          objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
          v81 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v73, 10, v81, v88, v101);
          v82 = objc_claimAutoreleasedReturnValue();

          if (v82)
          {
            -[NSObject setDeleteAfterUpload:](v82, "setDeleteAfterUpload:", 1);
            objc_msgSend(v98, "addObject:", v82);
            goto LABEL_96;
          }
          if (!*v70)
          {
            __CPLAssetsdOSLogDomain();
            v82 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)v122 = 138412290;
              *(_QWORD *)&v122[4] = v88;
              v83 = "Unable to create CPL resource for image properties data for asset %@";
              v84 = v82;
              v85 = 12;
LABEL_95:
              _os_log_impl(&dword_199541000, v84, OS_LOG_TYPE_ERROR, v83, v122, v85);
            }
            goto LABEL_96;
          }
        }
        else if (!*v70)
        {
          __CPLAssetsdOSLogDomain();
          v82 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)v122 = 138412802;
            *(_QWORD *)&v122[4] = v68;
            *(_WORD *)&v122[12] = 2112;
            *(_QWORD *)&v122[14] = v73;
            *(_WORD *)&v122[22] = 2112;
            v123 = v80;
            v83 = "Failed to save image properties data %@ to %@. Error: %@";
            v84 = v82;
            v85 = 32;
            goto LABEL_95;
          }
LABEL_96:

        }
      }
      else
      {
        if (!*v70)
        {
          __CPLAssetsdOSLogDomain();
          v82 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)v122 = 138412546;
            *(_QWORD *)&v122[4] = v73;
            *(_WORD *)&v122[12] = 2112;
            *(_QWORD *)&v122[14] = v78;
            _os_log_impl(&dword_199541000, v82, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", v122, 0x16u);
          }
          v80 = (uint64_t (*)(uint64_t, uint64_t))v78;
          goto LABEL_96;
        }
        v80 = (uint64_t (*)(uint64_t, uint64_t))v77;
      }

    }
    objc_msgSend(v93, "mediaMetadata");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v86, "setValue:forKey:", v68, CFSTR("data"));

    objc_msgSend(v93, "setMediaMetadataType:", CFSTR("CGImageProperties"));
  }

}

- (void)_createVideoResourcesForMaster:(id)a3 intoMasterResources:(id)a4 shouldGenerateDerivatives:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t i;
  void *v22;
  void *v23;
  _BYTE *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  NSObject *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  int v47;
  id v48;
  void *v49;
  NSObject *v50;
  const char *v51;
  NSObject *v52;
  uint32_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  PLManagedAsset *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint8_t buf[4];
  void *v73;
  __int16 v74;
  void *v75;
  __int16 v76;
  id v77;
  _BYTE v78[128];
  uint64_t v79;

  v5 = a5;
  v79 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v64 = a4;
  v62 = self;
  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "scopedIdentifier");
  v11 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fingerprintScheme");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    objc_msgSend(v9, "path");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v10, "fileExistsAtPath:", v12);

    if (v13)
    {
      if (v5)
      {
        -[PLManagedAsset _generatePosterFrameResourcesFromVideoURL:withScopedIdentifier:forMaster:fingerprintScheme:](v62, "_generatePosterFrameResourcesFromVideoURL:withScopedIdentifier:forMaster:fingerprintScheme:", v9, v11, 1, v63);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v64, "addObjectsFromArray:", v14);
        if (!-[PLManagedAsset isDefaultAdjustedSlomo](v62, "isDefaultAdjustedSlomo"))
        {
          -[PLManagedAsset _generateVideoResourcesFromURL:withScopedIdentifier:forMaster:](v62, "_generateVideoResourcesFromURL:withScopedIdentifier:forMaster:", v9, v11, 1);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v64, "addObjectsFromArray:", v15);

        }
      }
    }
  }
  v57 = (void *)v11;
  v58 = v9;
  v56 = v8;
  -[PLManagedAsset allMasterCPLResources](v62, "allMasterCPLResources", v10);
  v68 = 0u;
  v69 = 0u;
  v70 = 0u;
  v71 = 0u;
  v16 = (id)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v68, v78, 16);
  v61 = v16;
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v69;
    v20 = (_BYTE *)MEMORY[0x1E0D115D0];
    do
    {
      for (i = 0; i != v18; ++i)
      {
        if (*(_QWORD *)v69 != v19)
          objc_enumerationMutation(v16);
        v22 = *(void **)(*((_QWORD *)&v68 + 1) + 8 * i);
        if (objc_msgSend(v22, "cplType") == 23 || objc_msgSend(v22, "cplType") == 22)
        {
          objc_msgSend(v22, "fingerprint");
          v23 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v23)
          {
            v24 = v20;
            v25 = v22;
            objc_msgSend(v25, "fileURL");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            v67 = 0;
            objc_msgSend(v63, "fingerPrintForFileAtURL:error:", v26, &v67);
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            v28 = v67;

            if (v27)
            {
              objc_msgSend(v25, "setFingerprint:", v27);
            }
            else if (!*v24)
            {
              __CPLAssetsdOSLogDomain();
              v29 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              {
                objc_msgSend(v25, "fileURL");
                v60 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v60, "path");
                v30 = (void *)objc_claimAutoreleasedReturnValue();
                -[PLManagedAsset scopedIdentifier](v62, "scopedIdentifier");
                v59 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412802;
                v73 = v30;
                v74 = 2112;
                v75 = v59;
                v76 = 2112;
                v77 = v28;
                _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "Failed to generate fingerprint for path %@ uuid %@. Error: %@", buf, 0x20u);

                v16 = v61;
              }

            }
            v20 = v24;
          }
          objc_msgSend(v22, "cplResourceIncludeFile:", 1);
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          if (v31)
          {
            if (!*v20)
            {
              __CPLAssetsdOSLogDomain();
              v32 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)buf = 138412290;
                v73 = v31;
                _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEBUG, "Created original adjustment master resource %@", buf, 0xCu);
              }

            }
            objc_msgSend(v64, "addObject:", v31);
          }
          else if (!*v20)
          {
            __CPLAssetsdOSLogDomain();
            v33 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
            {
              -[PLManagedAsset scopedIdentifier](v62, "scopedIdentifier");
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412290;
              v73 = v34;
              _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "Unable to create original adjustment CPLResource with itemIdentifier %@", buf, 0xCu);

              v16 = v61;
            }

          }
        }
      }
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v68, v78, 16);
    }
    while (v18);
  }

  objc_msgSend(MEMORY[0x1E0C8B3C0], "URLAssetWithURL:options:", v58, 0);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  if (v35)
  {
    v36 = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v35, "propertyListForProxy");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v37, 200, 0, 0);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = objc_msgSend(v38, "length");
    if (v39 <= objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize"))
    {
LABEL_56:
      objc_msgSend(v56, "mediaMetadata");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v54, "setValue:forKey:", v38, CFSTR("data"));

      objc_msgSend(v56, "setMediaMetadataType:", CFSTR("AVAssetProxy"));
      objc_autoreleasePoolPop(v36);
      goto LABEL_57;
    }
    -[PLManagedAsset pathForMediaMetadataFile](v62, "pathForMediaMetadataFile");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v66 = 0;
    objc_msgSend(v40, "stringByDeletingLastPathComponent");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = (void *)MEMORY[0x1E0D73208];
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v42) = objc_msgSend(v42, "createDirectoryAtPath:error:usingFileManager:", v41, &v66, v43);

    v44 = v66;
    v45 = v44;
    if (!(_DWORD)v42)
    {
      if (*MEMORY[0x1E0D115D0])
      {
        v16 = v61;
        goto LABEL_55;
      }
      v46 = v36;
      __CPLAssetsdOSLogDomain();
      v50 = objc_claimAutoreleasedReturnValue();
      v16 = v61;
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v73 = v40;
        v74 = 2112;
        v75 = v45;
        _os_log_impl(&dword_199541000, v50, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", buf, 0x16u);
      }
      v48 = v45;
      goto LABEL_52;
    }
    v46 = v36;
    v65 = v44;
    v47 = objc_msgSend(v38, "writeToFile:options:error:", v40, 1, &v65);
    v48 = v65;

    if (v47)
    {
      objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](v62, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v40, 10, v49, v57, v63);
      v50 = objc_claimAutoreleasedReturnValue();

      if (v50)
      {
        -[NSObject setDeleteAfterUpload:](v50, "setDeleteAfterUpload:", 1);
        objc_msgSend(v64, "addObject:", v50);
        v16 = v61;
        goto LABEL_52;
      }
      v16 = v61;
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_53:
        v45 = v48;
LABEL_54:
        v36 = v46;
LABEL_55:

        goto LABEL_56;
      }
      __CPLAssetsdOSLogDomain();
      v50 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
LABEL_52:

        goto LABEL_53;
      }
      *(_DWORD *)buf = 138412290;
      v73 = v57;
      v51 = "Unable to create CPL resource for video properties data for asset %@";
      v52 = v50;
      v53 = 12;
    }
    else
    {
      if (*MEMORY[0x1E0D115D0])
      {
        v45 = v48;
        v16 = v61;
        goto LABEL_54;
      }
      __CPLAssetsdOSLogDomain();
      v50 = objc_claimAutoreleasedReturnValue();
      v16 = v61;
      if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
        goto LABEL_52;
      *(_DWORD *)buf = 138412802;
      v73 = v38;
      v74 = 2112;
      v75 = v40;
      v76 = 2112;
      v77 = v48;
      v51 = "Failed to save video properties data %@ to %@. Error: %@";
      v52 = v50;
      v53 = 32;
    }
    _os_log_impl(&dword_199541000, v52, OS_LOG_TYPE_ERROR, v51, buf, v53);
    goto LABEL_52;
  }
LABEL_57:

}

- (id)_videoComplementDerivativeResourcesForMaster:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset photoIrisSidecarIgnoringSubtype:](self, "photoIrisSidecarIgnoringSubtype:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "scopedIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v4;
  objc_msgSend(v4, "fingerprintScheme");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v9 = objc_msgSend(&unk_1E3763B00, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v19;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v19 != v11)
          objc_enumerationMutation(&unk_1E3763B00);
        v13 = objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v12), "unsignedIntegerValue");
        objc_msgSend(v6, "fileURL");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset _createVideoResourceFromVideoURL:withResourceType:scopedIdentifier:applyVideoAdjustments:forMaster:forPhotoIris:fingerprintScheme:](self, "_createVideoResourceFromVideoURL:withResourceType:scopedIdentifier:applyVideoAdjustments:forMaster:forPhotoIris:fingerprintScheme:", v14, v13, v7, 0, 1, 1, v8);
        v15 = (void *)objc_claimAutoreleasedReturnValue();

        if (v15)
          objc_msgSend(v5, "addObject:", v15);

        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(&unk_1E3763B00, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v10);
  }

  return v5;
}

- (id)createResourcesForMaster:(id)a3 shouldGenerateDerivatives:(BOOL)a4 inPhotoLibrary:(id)a5
{
  _BOOL8 v6;
  id v8;
  id v9;
  void *v10;
  void *v11;
  NSObject *v12;
  int v14;
  id v15;
  uint64_t v16;

  v6 = a4;
  v16 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset rm_cplMasterResourceForResourceType:](self, "rm_cplMasterResourceForResourceType:", 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend(v10, "addObject:", v11);
    if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    {
      -[PLManagedAsset _createPhotoResourcesForMaster:withOriginalResource:intoMasterResources:shouldGenerateDerivatives:inPhotoLibrary:](self, "_createPhotoResourcesForMaster:withOriginalResource:intoMasterResources:shouldGenerateDerivatives:inPhotoLibrary:", v8, v11, v10, v6, v9);
    }
    else if (-[PLManagedAsset isVideo](self, "isVideo"))
    {
      -[PLManagedAsset _createVideoResourcesForMaster:intoMasterResources:shouldGenerateDerivatives:](self, "_createVideoResourcesForMaster:intoMasterResources:shouldGenerateDerivatives:", v8, v10, v6);
    }
    -[PLManagedAsset rm_createMasterResourcesForCPLResources:master:inLibrary:](self, "rm_createMasterResourcesForCPLResources:master:inLibrary:", v10, v8, v9);
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v14 = 138412290;
      v15 = v8;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Unable to find original resource from master %@", (uint8_t *)&v14, 0xCu);
    }

  }
  return v10;
}

- (id)cplMasterChangeInLibrary:(id)a3 shouldGenerateDerivatives:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  _BYTE *v7;
  NSObject *v8;
  PLManagedAsset *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _BOOL8 v15;
  int v16;
  _BOOL4 v17;
  NSObject *v18;
  void *v19;
  id v20;
  PLManagedAsset *v21;
  int v22;
  void *v23;
  void *v24;
  int v25;
  NSObject *v26;
  PLManagedAsset *v27;
  id v28;
  PLManagedAsset *v29;
  PLManagedAsset *v30;
  BOOL v31;
  NSObject *v32;
  const char *v33;
  NSObject *v34;
  NSObject *v35;
  id v37;
  void *v38;
  _BOOL4 v39;
  void *v40;
  void *v41;
  uint8_t buf[4];
  PLManagedAsset *v43;
  __int16 v44;
  PLManagedAsset *v45;
  uint64_t v46;

  v4 = a4;
  v46 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v43 = self;
      _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEBUG, "CPLMasterChange for %@", buf, 0xCu);
    }

  }
  -[PLManagedAsset master](self, "master");
  v9 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
  if (v9
    || (-[PLManagedAsset createMasterIfNecessaryInLibrary:](self, "createMasterIfNecessaryInLibrary:", v6),
        -[PLManagedAsset master](self, "master"),
        (v9 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    v39 = v4;
    -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 1);
    v10 = objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 18);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 5);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 17);
    v12 = objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 23);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 24);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v13 && !objc_msgSend(v13, "cloudLocalState")
       || v14 && !objc_msgSend(v14, "cloudLocalState");
    v41 = (void *)v12;
    if (!v10)
    {
      if (*v7)
      {
        v30 = 0;
        goto LABEL_57;
      }
      __CPLAssetsdOSLogDomain();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v19 = v11;
        v20 = v6;
        v21 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v43 = v9;
        v44 = 2112;
        v45 = v21;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Can't find original resource in master %@ for asset %@", buf, 0x16u);

        v6 = v20;
        v11 = v19;
      }
      goto LABEL_55;
    }
    v16 = -[NSObject isLocallyAvailable](v10, "isLocallyAvailable");
    v38 = v11;
    if (v11)
      v17 = objc_msgSend(v11, "cloudLocalState") == 0;
    else
      v17 = 1;
    v22 = v16 & v17;
    if (!-[PLManagedAsset isPhotoIris](self, "isPhotoIris")
      || v40 && objc_msgSend(v40, "cloudLocalState"))
    {
      goto LABEL_67;
    }
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    v37 = v6;
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend(v23, "fileExistsAtPath:", v24);

    v6 = v37;
    if (!v25)
    {
LABEL_67:
      if (!v41
        || objc_msgSend(v41, "cloudLocalState")
        || !objc_msgSend(v41, "isLocallyAvailable"))
      {
LABEL_35:
        if (v22)
        {
          -[PLManagedAsset createResourcesForMaster:shouldGenerateDerivatives:inPhotoLibrary:](self, "createResourcesForMaster:shouldGenerateDerivatives:inPhotoLibrary:", v9, v39, v6);
          v18 = objc_claimAutoreleasedReturnValue();
          v11 = v38;
          if (-[NSObject count](v18, "count"))
          {
            -[PLManagedAsset cplMasterPropertyChangeForAsset:](v9, "cplMasterPropertyChangeForAsset:", self);
            v30 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset setResources:](v30, "setResources:", v18);
            v7 = (_BYTE *)MEMORY[0x1E0D115D0];
LABEL_56:

LABEL_57:
            goto LABEL_58;
          }
          v7 = (_BYTE *)MEMORY[0x1E0D115D0];
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v34 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v43 = 0;
              _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_ERROR, "Unable to generate any resources for masterChange %@. Skipping upload", buf, 0xCu);
            }

          }
LABEL_55:
          v30 = 0;
          goto LABEL_56;
        }
        -[PLManagedAsset cplMasterPropertyChangeForAsset:](v9, "cplMasterPropertyChangeForAsset:", self);
        v30 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset rm_cplMasterResourcesFromCloudMaster:addOriginalResourceMode:](self, "rm_cplMasterResourcesFromCloudMaster:addOriginalResourceMode:", v9, v15);
        v18 = objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setResources:](v30, "setResources:", v18);
        v31 = -[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset");
        v7 = (_BYTE *)MEMORY[0x1E0D115D0];
        v11 = v38;
        if (v31)
        {
          if (*MEMORY[0x1E0D115D0])
            goto LABEL_56;
          __CPLAssetsdOSLogDomain();
          v32 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            v43 = v30;
            v44 = 2112;
            v45 = v9;
            v33 = "Created CPLMaster %@ from placeholder master %@ for server side copy";
LABEL_49:
            _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEFAULT, v33, buf, 0x16u);
          }
        }
        else
        {
          if (*MEMORY[0x1E0D115D0])
            goto LABEL_56;
          __CPLAssetsdOSLogDomain();
          v32 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            v43 = v30;
            v44 = 2112;
            v45 = v9;
            v33 = "Created optimistic CPLMaster %@ from %@, assuming reset sync";
            goto LABEL_49;
          }
        }

        goto LABEL_56;
      }
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v28 = v6;
          v29 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v43 = v29;
          _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Asset %@ now has original alternate resource, will include it now", buf, 0xCu);

          v6 = v28;
        }
        goto LABEL_33;
      }
    }
    else if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v27 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v43 = v27;
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Asset %@ now has video complement resource, will include it now", buf, 0xCu);

        v6 = v37;
      }
LABEL_33:

    }
    v15 = 1;
    goto LABEL_35;
  }
  if (*v7)
  {
    v30 = 0;
    v9 = 0;
    goto LABEL_62;
  }
  __CPLAssetsdOSLogDomain();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v43 = self;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Asset %@ doesn't have a master.", buf, 0xCu);
  }
  v9 = 0;
  v30 = 0;
LABEL_58:

  if (!*v7)
  {
    __CPLAssetsdOSLogDomain();
    v35 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v43 = v30;
      _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_DEBUG, "CPLMasterChange %@", buf, 0xCu);
    }

  }
LABEL_62:

  return v30;
}

- (id)_generatePosterFrameForVideoAtURL:(id)a3 withResourceType:(unint64_t)a4 scopedIdentifier:(id)a5 forMaster:(BOOL)a6 fingerprintScheme:(id)a7
{
  _BOOL4 v8;
  id v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  unsigned __int8 *v18;
  NSObject *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  __CFString *v27;
  void *v28;
  char v29;
  PLManagedAsset *v30;
  NSObject *v31;
  int v32;
  unsigned __int8 *v33;
  int v34;
  int v35;
  NSObject *v36;
  NSObject *v37;
  void *v38;
  PLManagedAsset *v39;
  CGImage *v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  void *v44;
  void *v45;
  NSObject *v46;
  id v48;
  void *v49;
  __CFString *v50;
  PLManagedAsset *v51;
  id v52;
  uint8_t buf[4];
  PLManagedAsset *v54;
  __int16 v55;
  double v56;
  __int16 v57;
  __CFString *v58;
  __int16 v59;
  PLManagedAsset *v60;
  uint64_t v61;

  v8 = a6;
  v61 = *MEMORY[0x1E0C80C00];
  v50 = (__CFString *)a3;
  v48 = a5;
  v12 = a7;
  v13 = objc_msgSend(MEMORY[0x1E0D11440], "maxPixelSizeForResourceType:", a4);
  -[PLManagedAsset imageSize](self, "imageSize");
  v16 = v15;
  v17 = v14;
  v18 = (unsigned __int8 *)MEMORY[0x1E0D115D0];
  if (v15 == 0.0 || v14 == 0.0)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218498;
        v54 = *(PLManagedAsset **)&v16;
        v55 = 2048;
        v56 = v17;
        v57 = 2112;
        v58 = v50;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Original size (width: %f height: %f) is invalid. Getting the size from the video file %@ directly", buf, 0x20u);
      }

    }
    +[PLManagedAsset dimensionsForVideoAtURL:](PLManagedAsset, "dimensionsForVideoAtURL:", v50, v48);
    v16 = v20;
    v17 = v21;
  }
  -[PLManagedAsset _targetSizeForInputSize:maxPixelSize:](self, "_targetSizeForInputSize:maxPixelSize:", v13, v16, v17, v48);
  v23 = v22;
  v25 = v24;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForCPLResourceType:adjusted:](self, "pathForCPLResourceType:adjusted:", a4, !v8);
  v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
  -[__CFString stringByDeletingLastPathComponent](v27, "stringByDeletingLastPathComponent");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v52 = 0;
  v29 = objc_msgSend(v26, "createDirectoryIfNeededAtPath:error:", v28, &v52);
  v30 = (PLManagedAsset *)v52;
  if ((v29 & 1) == 0 && !*v18)
  {
    __CPLAssetsdOSLogDomain();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v54 = v30;
      _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "Unable to create directory for video posterframe image: %@", buf, 0xCu);
    }

  }
  v32 = objc_msgSend(v26, "fileExistsAtPath:", v27);
  v33 = v18;
  v34 = v32;
  v35 = *v33;
  if (v32)
  {
    if (!v35)
    {
      __CPLAssetsdOSLogDomain();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v54 = (PLManagedAsset *)v27;
        _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_DEBUG, "Poster frame exists at %@, removing", buf, 0xCu);
      }

    }
    objc_msgSend(v26, "removeItemAtPath:error:", v27, 0);
  }
  else if (!v35)
  {
    __CPLAssetsdOSLogDomain();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v54 = (PLManagedAsset *)v27;
      _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_DEBUG, "Poster frame at %@ will be removed after sending to CPL", buf, 0xCu);
    }

  }
  v51 = v30;
  +[PLVideoTranscoder generatePosterFrameForVideoAtURL:maxSize:error:](PLVideoTranscoder, "generatePosterFrameForVideoAtURL:maxSize:error:", v50, &v51, v23, v25);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = v51;

  if (!v39 && v38)
  {
    v40 = (CGImage *)DCIM_CGImageRefFromPLImage();
    writeCGImageToPath(v40, v27, 0);
  }
  if (objc_msgSend(v26, "fileExistsAtPath:", v27))
  {
    v41 = v34 ^ 1u;
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    v43 = a4;
    v44 = v49;
    -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v27, v43, v42, v49, v12);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v45, "setDeleteAfterUpload:", v41);
  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138413058;
        v54 = self;
        v55 = 2112;
        v56 = *(double *)&v50;
        v57 = 2112;
        v58 = v27;
        v59 = 2112;
        v60 = v39;
        _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_ERROR, "Failed to write poster image for %@. Original file path: %@ Derivative path: %@ Error: %@", buf, 0x2Au);
      }

    }
    v45 = 0;
    v44 = v49;
  }

  return v45;
}

- (id)scopeIdentifier
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset momentShare](self, "momentShare");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "scopeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "mainScopeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v5;
}

- (id)scopedIdentifier
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    -[PLManagedAsset uuid](self, "uuid");
    v4 = objc_claimAutoreleasedReturnValue();
    if (!v4)
    {
      -[PLManagedAsset _promptForNilScopeIdentifierRadar](self, "_promptForNilScopeIdentifierRadar");
      v6 = 0;
      return v6;
    }
    v3 = (void *)v4;
    -[PLManagedAsset setCloudAssetGUID:](self, "setCloudAssetGUID:", v4);
  }
  -[PLManagedAsset scopeIdentifier](self, "scopeIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D11468]), "initWithScopeIdentifier:identifier:", v5, v3);

  return v6;
}

- (id)fingerprintScheme
{
  void *v2;
  void *v3;

  -[PLManagedAsset master](self, "master");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fingerprintScheme");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (void)_promptForNilScopeIdentifierRadar
{
  void *v3;
  void *v4;
  int v5;
  __CFString *v6;
  __CFString *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint8_t buf[4];
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3940];
  -[PLManagedAsset objectID](self, "objectID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[PLManagedAsset isDeleted](self, "isDeleted");
  v6 = CFSTR("NO");
  if (v5)
    v6 = CFSTR("YES");
  v7 = v6;
  -[PLManagedAsset syncDescription](self, "syncDescription");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringWithFormat:", CFSTR("Found asset with nil scope identifier %@ (isDeleted=%@) %@.\n\nSee rdar://problem/40112514"), v4, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v12 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
    }

  }
  +[PLDiagnostics fileRadarUserNotificationWithHeader:message:radarTitle:radarDescription:](PLDiagnostics, "fileRadarUserNotificationWithHeader:message:radarTitle:radarDescription:", CFSTR("Unexpected Photo Library state"), CFSTR("Please file a Radar against Photos"), CFSTR("TTR: asset with nil scope identifier"), v9);

}

- (id)_createImageResourceForResourceType:(unint64_t)a3 withPreviewImagePath:(id)a4 scopedIdentifier:(id)a5 forMaster:(BOOL)a6 fingerprintScheme:(id)a7
{
  _BOOL4 v8;
  id v11;
  void *v12;
  id v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  NSObject *v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  char v31;
  char v32;
  NSObject *v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  const char *v42;
  NSObject *v43;
  void *v44;
  NSObject *v46;
  NSObject *v47;
  dispatch_semaphore_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  NSObject *v55;
  void *v56;
  NSObject *v57;
  id v58;
  int v59;
  uint64_t v60;
  void *v61;
  id v63;
  id v64;
  _QWORD v65[4];
  id v66;
  id v67;
  NSObject *v68;
  _BYTE *v69;
  id v70;
  uint8_t v71[4];
  PLManagedAsset *v72;
  __int16 v73;
  void *v74;
  __int16 v75;
  void *v76;
  _BYTE buf[24];
  void *v78;
  uint64_t v79;

  v8 = a6;
  v79 = *MEMORY[0x1E0C80C00];
  v11 = a4;
  v64 = a5;
  v63 = a7;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v11;
  if (!v13 || (v14 = v13, (objc_msgSend(v12, "fileExistsAtPath:", v13) & 1) == 0))
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset mainFileURL](self, "mainFileURL");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v13;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v16;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Input file to resize does not exist at %@, use main file %@ instead", buf, 0x16u);

      }
    }
    -[PLManagedAsset mainFileURL](self, "mainFileURL");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "path");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v14)
      goto LABEL_72;
  }
  if (!objc_msgSend(v12, "fileExistsAtPath:", v14))
  {
LABEL_72:
    if (*MEMORY[0x1E0D115D0])
      goto LABEL_69;
    __CPLAssetsdOSLogDomain();
    v41 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      goto LABEL_37;
    *(_DWORD *)buf = 138412546;
    *(_QWORD *)&buf[4] = v14;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v64;
    v42 = "Failed to find image to resize at %@. Skipping derivative generation for %@";
    goto LABEL_36;
  }
  -[PLManagedAsset imageSize](self, "imageSize");
  v20 = v19;
  v21 = v18;
  if (v19 == 0.0 && v18 == 0.0)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218498;
        *(double *)&buf[4] = v20;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v21;
        *(_WORD *)&buf[22] = 2112;
        v78 = v14;
        _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Original size (width: %f height: %f) is invalid. Getting the size from the image file %@ directly", buf, 0x20u);
      }

    }
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v14, 0);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset sizeOfImageAtURL:outOrientation:](PLManagedAsset, "sizeOfImageAtURL:outOrientation:", v23, 0);
    v20 = v24;
    v21 = v25;

  }
  -[PLManagedAsset pathForCPLResourceType:adjusted:](self, "pathForCPLResourceType:adjusted:", a3, !v8);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v26)
  {
    if (*MEMORY[0x1E0D115D0])
      goto LABEL_69;
    __CPLAssetsdOSLogDomain();
    v41 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      goto LABEL_37;
    *(_DWORD *)buf = 134218242;
    *(_QWORD *)&buf[4] = a3;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    v42 = "No destination path found to write the derivative of type %lu for %@";
LABEL_36:
    _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, v42, buf, 0x16u);
LABEL_37:

    goto LABEL_38;
  }
  v60 = objc_msgSend(MEMORY[0x1E0D11440], "maxPixelSizeForResourceType:", a3);
  -[PLManagedAsset _targetSizeForInputSize:maxPixelSize:](self, "_targetSizeForInputSize:maxPixelSize:", v60, v20, v21);
  v28 = v27;
  v30 = v29;
  objc_msgSend(v26, "stringByDeletingLastPathComponent");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v70 = 0;
  v31 = objc_msgSend(v12, "createDirectoryIfNeededAtPath:error:", v61, &v70);
  v58 = v70;
  if (*MEMORY[0x1E0D115D0])
    v32 = 1;
  else
    v32 = v31;
  if ((v32 & 1) == 0)
  {
    __CPLAssetsdOSLogDomain();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v58;
      _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "Unable to create directory for image resource: %@", buf, 0xCu);
    }

  }
  v59 = objc_msgSend(v12, "fileExistsAtPath:", v26);
  if (v59)
  {
    *(_WORD *)v71 = 1;
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v26, 0);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset sizeOfImageAtURL:outOrientation:](PLManagedAsset, "sizeOfImageAtURL:outOrientation:", v34, v71);
    v36 = v35;
    v38 = v37;

    if (*(unsigned __int16 *)v71 == 1 && v28 == v36 && v30 == v38)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v39 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          *(_QWORD *)&buf[4] = v26;
          _os_log_impl(&dword_199541000, v39, OS_LOG_TYPE_DEBUG, "Derivative already exists at %@, using it", buf, 0xCu);
        }

      }
      v40 = 0;
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x2020000000;
      LOBYTE(v78) = 0;
      goto LABEL_58;
    }
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v47 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v26;
        _os_log_impl(&dword_199541000, v47, OS_LOG_TYPE_DEBUG, "Derivative exists at %@, but size doesn't match, removing", buf, 0xCu);
      }

    }
    objc_msgSend(v12, "removeItemAtPath:error:", v26, 0);
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v26;
      _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_DEBUG, "Derivative at %@ will be removed after sending to CPL", buf, 0xCu);
    }

  }
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x2020000000;
  LOBYTE(v78) = 0;
  v48 = dispatch_semaphore_create(0);
  v49 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", a3);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "stringWithFormat:", CFSTR("Managed asset image generation for resource type %@"), v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();

  v52 = (void *)MEMORY[0x1E0D11618];
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v14, 0);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v26, 0);
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v65[0] = MEMORY[0x1E0C809B0];
  v65[1] = 3221225472;
  v65[2] = __125__PLManagedAsset_CPL___createImageResourceForResourceType_withPreviewImagePath_scopedIdentifier_forMaster_fingerprintScheme___block_invoke;
  v65[3] = &unk_1E366F758;
  v66 = v14;
  v67 = v26;
  v69 = buf;
  v55 = v48;
  v68 = v55;
  objc_msgSend(v52, "resizeImageAtURL:destinationURL:maximumPixelCount:bakeInOrientation:colorOutput:reason:completionHandler:", v53, v54, v60, 1, 0, v51, v65);

  dispatch_semaphore_wait(v55, 0xFFFFFFFFFFFFFFFFLL);
  if (!*(_BYTE *)(*(_QWORD *)&buf[8] + 24))
    goto LABEL_60;
  v40 = v59 ^ 1u;
LABEL_58:
  if (objc_msgSend(v12, "fileExistsAtPath:", v26))
  {
    objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v26, a3, v56, v64, v63);
    v44 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v44, "setDeleteAfterUpload:", v40);
    goto LABEL_65;
  }
LABEL_60:
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v57 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v71 = 138412802;
      v72 = self;
      v73 = 2112;
      v74 = v14;
      v75 = 2112;
      v76 = v26;
      _os_log_impl(&dword_199541000, v57, OS_LOG_TYPE_ERROR, "Failed to generate derivative for %@. Original file path: %@ Derivative path: %@", v71, 0x20u);
    }

  }
  v44 = 0;
LABEL_65:
  _Block_object_dispose(buf, 8);

  if (!v44)
  {
LABEL_38:
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v64;
        _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_ERROR, "Failed to create image resource for %@", buf, 0xCu);
      }
      v44 = 0;
      goto LABEL_42;
    }
LABEL_69:
    v44 = 0;
    goto LABEL_43;
  }
  if (*MEMORY[0x1E0D115D0])
    goto LABEL_43;
  __CPLAssetsdOSLogDomain();
  v43 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412290;
    *(_QWORD *)&buf[4] = v44;
    _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_DEBUG, "Generated image resource %@", buf, 0xCu);
  }
LABEL_42:

LABEL_43:
  return v44;
}

- (id)_createCPLResourceFromResourcePath:(id)a3 withResourceType:(unint64_t)a4 uniformTypeIdentifier:(id)a5 scopedIdentifier:(id)a6 fingerprintScheme:(id)a7
{
  id v12;
  id v13;
  id v14;
  objc_class *v15;
  id v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  NSObject *v24;
  const char *v25;
  double v26;
  double v27;
  uint64_t v28;
  int v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  NSObject *v34;
  void *v35;
  NSObject *v36;
  id v38;
  id v39;
  id v40;
  id v41;
  uint8_t buf[4];
  double v43;
  __int16 v44;
  double v45;
  __int16 v46;
  id v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a5;
  v14 = a7;
  v15 = (objc_class *)MEMORY[0x1E0C99E98];
  v16 = a6;
  v17 = (void *)objc_msgSend([v15 alloc], "initFileURLWithPath:isDirectory:", v12, 0);
  v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D11448]), "initWithFileURL:", v17);
  objc_msgSend(v18, "setAvailable:", 1);
  v38 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0D11440]), "initWithResourceIdentity:itemScopedIdentifier:resourceType:", v18, v16, a4);

  objc_msgSend(v18, "setFileUTI:", v13);
  if (a4 == 1)
  {
    v19 = (double)-[PLManagedAsset originalWidth](self, "originalWidth");
    v20 = (double)-[PLManagedAsset originalHeight](self, "originalHeight");
    if (!v13)
      goto LABEL_18;
  }
  else
  {
    v19 = *MEMORY[0x1E0C9D820];
    v20 = *(double *)(MEMORY[0x1E0C9D820] + 8);
    if (!v13)
      goto LABEL_18;
  }
  if (v19 == 0.0 || v20 == 0.0)
  {
    objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", v13);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v21, "conformsToType:", *MEMORY[0x1E0CEC520]))
    {
      +[PLManagedAsset sizeOfImageAtURL:outOrientation:](PLManagedAsset, "sizeOfImageAtURL:outOrientation:", v17, 0);
      v19 = v22;
      v20 = v23;
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_17:

        goto LABEL_18;
      }
      __CPLAssetsdOSLogDomain();
      v24 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
      {
LABEL_16:

        goto LABEL_17;
      }
      *(_DWORD *)buf = 134218498;
      v43 = v19;
      v44 = 2048;
      v45 = v20;
      v46 = 2112;
      v47 = v12;
      v25 = "Read image size %lf.%lf from resource file %@.";
    }
    else
    {
      if (!objc_msgSend(v21, "conformsToType:", *MEMORY[0x1E0CEC568]))
        goto LABEL_17;
      +[PLManagedAsset dimensionsForVideoAtURL:](PLManagedAsset, "dimensionsForVideoAtURL:", v17);
      v19 = v26;
      v20 = v27;
      if (*MEMORY[0x1E0D115D0])
        goto LABEL_17;
      __CPLAssetsdOSLogDomain();
      v24 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
        goto LABEL_16;
      *(_DWORD *)buf = 134218498;
      v43 = v19;
      v44 = 2048;
      v45 = v20;
      v46 = 2112;
      v47 = v12;
      v25 = "Read video size %lf.%lf from resource file %@.";
    }
    _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEBUG, v25, buf, 0x20u);
    goto LABEL_16;
  }
LABEL_18:
  objc_msgSend(v18, "setImageDimensions:", v19, v20);
  v41 = 0;
  v28 = *MEMORY[0x1E0C99998];
  v40 = 0;
  v29 = objc_msgSend(v17, "getResourceValue:forKey:error:", &v41, v28, &v40);
  v30 = v41;
  v31 = v40;
  if (v29)
    objc_msgSend(v18, "setFileSize:", objc_msgSend(v30, "unsignedIntegerValue"));
  v39 = v31;
  objc_msgSend(v14, "fingerPrintForFileAtURL:error:", v17, &v39);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = v39;

  if (!v32 || v33)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Failed to generate finger print for %@. Error: %@"), v12, v33, v38);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v43 = *(double *)&v35;
        _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }

    }
    PLSimulateCrash();

  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412546;
        v43 = *(double *)&v32;
        v44 = 2112;
        v45 = *(double *)&v12;
        _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_DEBUG, "Setting finger print %@ to %@", buf, 0x16u);
      }

    }
    objc_msgSend(v18, "setFingerPrint:", v32);
  }

  return v38;
}

- (id)_createVideoResourceFromVideoURL:(id)a3 withResourceType:(unint64_t)a4 scopedIdentifier:(id)a5 applyVideoAdjustments:(BOOL)a6 forMaster:(BOOL)a7 forPhotoIris:(BOOL)a8 fingerprintScheme:(id)a9
{
  _BOOL4 v9;
  _BOOL4 v10;
  _BOOL4 v11;
  id v16;
  void **v17;
  id *v18;
  void *v19;
  void *v20;
  id v21;
  id *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  NSObject *v29;
  int v30;
  NSObject *v31;
  NSObject *v32;
  void *v33;
  uint64_t v34;
  PLManagedAsset *v35;
  id v36;
  uint64_t v37;
  char v38;
  dispatch_semaphore_t v39;
  id v40;
  id v41;
  id v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  NSObject *v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  _QWORD v68[4];
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  NSObject *v75;
  uint64_t *v76;
  unint64_t v77;
  char v78;
  id v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  void (*v84)(uint64_t);
  id v85;
  uint8_t buf[16];
  uint64_t v87;
  uint64_t v88;

  v9 = a8;
  v10 = a7;
  v11 = a6;
  v88 = *MEMORY[0x1E0C80C00];
  v64 = a3;
  v60 = a5;
  v59 = a9;
  if (PLIsEDUMode())
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+CPL.m"), 884, CFSTR("Should not be generating video derivatives in EDU mode"));

  }
  v80 = 0;
  v81 = &v80;
  v82 = 0x3032000000;
  v83 = __Block_byref_object_copy__44479;
  v84 = __Block_byref_object_dispose__44480;
  v85 = 0;
  if ((uint64_t)a4 > 20)
  {
    if (a4 == 21)
    {
      v18 = (id *)MEMORY[0x1E0C89E58];
    }
    else
    {
      if (a4 != 28)
        goto LABEL_18;
      v18 = (id *)MEMORY[0x1E0C89E50];
    }
    v16 = *v18;
LABEL_24:
    v22 = (id *)MEMORY[0x1E0C8A2E8];
    goto LABEL_25;
  }
  if (a4 == 6)
  {
    v16 = (id)*MEMORY[0x1E0C89E40];
    v17 = (void **)MEMORY[0x1E0C89E48];
LABEL_11:
    v19 = *v17;
    if (v9)
      v20 = v16;
    else
      v20 = *v17;
    v21 = v20;
    if (!v9)
    {
      v22 = (id *)MEMORY[0x1E0C8A2E0];
      v16 = v19;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (a4 == 7)
  {
    v16 = (id)*MEMORY[0x1E0C89E38];
    v17 = (void **)MEMORY[0x1E0C89E30];
    goto LABEL_11;
  }
LABEL_18:
  if (!*MEMORY[0x1E0D115D0])
  {
    if (__CPLCloudPhotoServicesOSLogDomain_onceToken != -1)
      dispatch_once(&__CPLCloudPhotoServicesOSLogDomain_onceToken, &__block_literal_global_699);
    v23 = __CPLCloudPhotoServicesOSLogDomain_result;
    if (os_log_type_enabled((os_log_t)__CPLCloudPhotoServicesOSLogDomain_result, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      *(_QWORD *)&buf[4] = a4;
      _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "Unhandled CPL resource type: %ld, Unable to set preset for video derivatives.", buf, 0xCu);
    }
  }
  v16 = 0;
  if (v9)
    goto LABEL_24;
  v22 = (id *)MEMORY[0x1E0C8A2E0];
LABEL_25:
  v58 = *v22;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset pathForCPLResourceType:adjusted:](self, "pathForCPLResourceType:adjusted:", a4, !v10);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "stringByDeletingLastPathComponent");
  v26 = objc_claimAutoreleasedReturnValue();
  v79 = 0;
  v27 = objc_msgSend(v24, "createDirectoryIfNeededAtPath:error:", v26, &v79);
  v62 = v79;
  if (*MEMORY[0x1E0D115D0])
    v28 = 1;
  else
    v28 = v27;
  if ((v28 & 1) == 0)
  {
    __CPLAssetsdOSLogDomain();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v62;
      _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "Unable to create directory for video resource: %@", buf, 0xCu);
    }

  }
  v30 = objc_msgSend(v24, "fileExistsAtPath:", v25);
  if (v30)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v25;
        _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_DEFAULT, "Derivative already exists at %@, removing", buf, 0xCu);
      }

    }
    objc_msgSend(v24, "removeItemAtPath:error:", v25, 0);
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v32 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v25;
      _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEBUG, "Derivative at %@ will be removed after sending to CPL", buf, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v25, 0);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = v25;
  if (v11)
  {
    +[PLSlalomUtilities synchronouslyFetchVideoAdjustmentsFromManagedAsset:](PLSlalomUtilities, "synchronouslyFetchVideoAdjustmentsFromManagedAsset:", self);
    v34 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v34 = 0;
  }
  v56 = (void *)v26;
  objc_msgSend(MEMORY[0x1E0C8B3C0], "assetWithURL:", v64);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = self;
  v36 = v16;
  v37 = objc_msgSend(objc_alloc(MEMORY[0x1E0D752F8]), "initWithVideoAsset:videoAdjustments:", v63, v34);
  v55 = (void *)v34;
  v38 = v30 ^ 1;
  v39 = dispatch_semaphore_create(0);
  v68[0] = MEMORY[0x1E0C809B0];
  v68[1] = 3221225472;
  v68[2] = __153__PLManagedAsset_CPL___createVideoResourceFromVideoURL_withResourceType_scopedIdentifier_applyVideoAdjustments_forMaster_forPhotoIris_fingerprintScheme___block_invoke;
  v68[3] = &unk_1E366A568;
  v77 = a4;
  v54 = v64;
  v69 = v54;
  v40 = v33;
  v70 = v40;
  v41 = v24;
  v71 = v41;
  v65 = v59;
  v72 = v65;
  v42 = v58;
  v73 = v42;
  v76 = &v80;
  v61 = v60;
  v74 = v61;
  v78 = v38;
  v43 = v39;
  v75 = v43;
  *(_OWORD *)buf = *MEMORY[0x1E0CA2E68];
  v87 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
  v66 = *(_OWORD *)buf;
  v67 = v87;
  v44 = v36;
  +[PLVideoTranscoder transcodeVideoWithObjectBuilder:outputURL:startTime:endTime:presetName:outputFileType:metadata:completionHandler:](PLVideoTranscoder, "transcodeVideoWithObjectBuilder:outputURL:startTime:endTime:presetName:outputFileType:metadata:completionHandler:", v37, v40, buf, &v66, v36, v42, 0, v68);
  dispatch_semaphore_wait(v43, 0xFFFFFFFFFFFFFFFFLL);
  v45 = (void *)v81[5];
  v46 = (void *)v37;
  if (!v45)
  {
    v47 = v57;
    if (*MEMORY[0x1E0D115D0])
    {
      v45 = 0;
      goto LABEL_53;
    }
    __CPLAssetsdOSLogDomain();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset scopedIdentifier](v35, "scopedIdentifier");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v50;
      _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_ERROR, "Failed to create video resource for %@", buf, 0xCu);

    }
    goto LABEL_52;
  }
  v47 = v57;
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
    {
      v49 = v81[5];
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v49;
      _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_DEBUG, "Generated video resource %@", buf, 0xCu);
    }
LABEL_52:

    v45 = (void *)v81[5];
  }
LABEL_53:
  v51 = v45;

  _Block_object_dispose(&v80, 8);
  return v51;
}

- (void)_applyPropertiesChangeToCPLAssetChange:(id)a3 withMasterScopedIdentifier:(id)a4 inLibrary:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  _BOOL8 v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  int v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  PLManagedAsset *v64;
  void *v65;
  void *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _BYTE v71[128];
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  objc_msgSend(a4, "identifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setMasterIdentifier:", v10);

  objc_msgSend(v8, "setFavorite:", -[PLManagedAsset isFavorite](self, "isFavorite"));
  -[PLManagedAsset _updateBurstFlagsForCPLAssetChange:photoLibrary:](self, "_updateBurstFlagsForCPLAssetChange:photoLibrary:", v8, v9);
  -[PLManagedAsset lastSharedDate](self, "lastSharedDate");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setLastSharedDate:", v11);

  -[PLManagedAsset addedDate](self, "addedDate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAddedDate:", v12);

  -[PLManagedAsset dateCreated](self, "dateCreated");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v13)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v14);

  }
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAssetDate:", v15);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "timeZoneName");
  v17 = objc_claimAutoreleasedReturnValue();
  if (v17)
    objc_msgSend(v8, "setTimeZoneName:", v17);
  v63 = (void *)v17;
  objc_msgSend(v16, "timeZoneOffset");
  v18 = objc_claimAutoreleasedReturnValue();
  if (v18)
    objc_msgSend(v8, "setTimeZoneOffset:", v18);
  v62 = (void *)v18;
  -[PLManagedAsset location](self, "location");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setLocation:", v19);

  v20 = (void *)objc_opt_class();
  objc_msgSend(v16, "placeAnnotationData");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "_placeAnnotationFromAnnotationData:", v21);
  v22 = objc_claimAutoreleasedReturnValue();

  v61 = (void *)v22;
  objc_msgSend(v8, "setPlaceAnnotation:", v22);
  +[PLKeywordManager keywordsForAsset:](PLKeywordManager, "keywordsForAsset:", self);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v60, "allObjects");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = (id)objc_msgSend(v23, "sortedArrayWithOptions:usingComparator:", 1, &__block_literal_global_44603);
  v59 = v23;
  objc_msgSend(v8, "setKeywords:", v23);
  objc_msgSend(v8, "setHidden:", -[PLManagedAsset hidden](self, "hidden"));
  -[PLManagedAsset title](self, "title");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setCaption:", v25);

  -[PLManagedAsset longDescription](self, "longDescription");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setExtendedDescription:", v26);

  -[PLManagedAsset accessibilityDescription](self, "accessibilityDescription");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAccessibilityDescription:", v27);

  -[PLManagedAsset _updateAssetSubtypeForCPLAssetChange:](self, "_updateAssetSubtypeForCPLAssetChange:", v8);
  objc_msgSend(v8, "setAssetHDRType:", +[PLManagedAsset CPLAssetHDRTypeFromPLAssetHDRType:](PLManagedAsset, "CPLAssetHDRTypeFromPLAssetHDRType:", -[PLManagedAsset hdrType](self, "hdrType")));
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    objc_msgSend(v8, "setCustomRenderedValue:", (int)-[PLManagedAsset hdrType](self, "hdrType"));
  v28 = -[PLManagedAsset trashedState](self, "trashedState");
  v65 = v9;
  v29 = v28 == 2 || -[PLManagedAsset trashedState](self, "trashedState") == 1;
  objc_msgSend(v8, "setInTrash:", v29);
  objc_msgSend(v8, "setInExpunged:", v28 == 2);
  -[PLManagedAsset trashedDate](self, "trashedDate");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setDateDeleted:", v30);

  v64 = self;
  v66 = v8;
  objc_msgSend(v8, "setTrashedReason:", -[PLManagedAsset trashedReason](self, "trashedReason"));
  objc_msgSend(v16, "personReferences");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v31, "count"));
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = 0u;
  v68 = 0u;
  v69 = 0u;
  v70 = 0u;
  v33 = v31;
  v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v67, v71, 16);
  if (v34)
  {
    v35 = v34;
    v36 = *(_QWORD *)v68;
    do
    {
      for (i = 0; i != v35; ++i)
      {
        if (*(_QWORD *)v68 != v36)
          objc_enumerationMutation(v33);
        v38 = *(void **)(*((_QWORD *)&v67 + 1) + 8 * i);
        v39 = objc_alloc_init(MEMORY[0x1E0D113F8]);
        objc_msgSend(v38, "personUUID");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v39, "setPersonIdentifier:", v40);

        objc_msgSend(v38, "personData");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        if (v41)
        {
          objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v41, 0, 0, 0);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v39, "setExtraProperties:", v42);

        }
        objc_msgSend(v32, "addObject:", v39);

      }
      v35 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v67, v71, 16);
    }
    while (v35);
  }

  objc_msgSend(v66, "setPeople:", v32);
  objc_msgSend(v66, "setPlayCount:", objc_msgSend(v16, "playCount"));
  objc_msgSend(v66, "setShareCount:", objc_msgSend(v16, "shareCount"));
  objc_msgSend(v66, "setViewCount:", objc_msgSend(v16, "viewCount"));
  if (objc_msgSend(MEMORY[0x1E0D11348], "serverSupportsLastViewedDate"))
  {
    objc_msgSend(v16, "lastViewedDate");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "setLastViewedDate:", v43);

  }
  -[PLManagedAsset mediaGroupUUID](v64, "mediaGroupUUID");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v66, "setMediaGroupIdentifier:", v44);
  -[PLManagedAsset photoIrisVideoDuration](v64, "photoIrisVideoDuration");
  -[PLManagedAsset photoIrisStillDisplayTime](v64, "photoIrisStillDisplayTime");
  objc_msgSend(v66, "setVideoComplementDurationValue:", 0);
  objc_msgSend(v66, "setVideoComplementDurationTimescale:", 0);
  objc_msgSend(v66, "setVideoComplementImageDisplayValue:", 0);
  objc_msgSend(v66, "setVideoComplementImageDisplayTimescale:", 0);
  objc_msgSend(v66, "setVideoComplementVisibilityState:", -[PLManagedAsset videoCpVisibilityState](v64, "videoCpVisibilityState"));
  objc_msgSend(v16, "syndicationIdentifier");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v66, "setSyndicationIdentifier:", v45);

  objc_msgSend(v66, "setViewPresentation:", objc_msgSend(v16, "viewPresentation"));
  if ((_os_feature_enabled_impl() & 1) == 0)
  {
    objc_msgSend(v66, "setSharedLibrarySharingState:", PLLibraryScopeAssetGetSyncableSharingStateValueFromLocalShareStateValue(-[PLManagedAsset libraryScopeShareState](v64, "libraryScopeShareState")));
    if (objc_msgSend(MEMORY[0x1E0D11348], "serverSupportsDeletedByUserIdentifier"))
    {
      -[PLManagedAsset trashedByParticipant](v64, "trashedByParticipant");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v46, "userIdentifier");
      v47 = (void *)objc_claimAutoreleasedReturnValue();

      if (v47)
      {
        -[PLManagedAsset trashedByParticipant](v64, "trashedByParticipant");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v48, "userIdentifier");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v66, "setDeletedByUserIdentifier:", v49);

      }
    }
  }
  -[PLManagedAsset computeSyncAttributes](v64, "computeSyncAttributes");
  v50 = objc_claimAutoreleasedReturnValue();
  if (v50)
  {
    v51 = (void *)v50;
    v52 = objc_msgSend((id)objc_opt_class(), "isComputeSyncEnabledForDirection:library:", 0, v9);

    if (v52)
    {
      -[PLManagedAsset computeSyncAttributes](v64, "computeSyncAttributes");
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v53, "cloudComputeStateVersion");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v66, "setComputeStateVersion:", v54);

      -[PLManagedAsset computeSyncAttributes](v64, "computeSyncAttributes");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v55, "cloudComputeStateAdjustmentFingerprint");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v66, "setComputeStateAdjustmentFingerprint:", v56);

      -[PLManagedAsset computeSyncAttributes](v64, "computeSyncAttributes");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v57, "cloudComputeStateLastUpdatedDate");
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v66, "setComputeStateLastUpdatedDate:", v58);

    }
  }

}

- (void)_applySharingChangeToCPLAssetChange:(id)a3 inLibrary:(id)a4
{
  id v5;
  int v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  id v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState");
  if ((v6 & 0x800000) != 0 && -[PLManagedAsset hasLibraryScope](self, "hasLibraryScope"))
  {
    -[PLManagedAsset libraryScope](self, "libraryScope");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "scopeIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setSharingScopeIdentifier:", v8);

    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset libraryScope](self, "libraryScope");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "scopeIdentifier");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = 138543618;
        v25 = v11;
        v26 = 2114;
        v27 = v5;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Setting libraryScopeIdentifier %{public}@ on CPLAssetChange %{public}@", (uint8_t *)&v24, 0x16u);

      }
    }
  }
  else
  {
    objc_msgSend(v5, "setSharingScopeIdentifier:", 0);
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      {
        v24 = 138543362;
        v25 = v5;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEBUG, "Setting nil libraryScopeIdentifier on CPLAssetChange %{public}@", (uint8_t *)&v24, 0xCu);
      }

    }
    if ((v6 & 0x800000) == 0)
      goto LABEL_14;
  }
  -[PLManagedAsset libraryScopeContributors](self, "libraryScopeContributors");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "count");

  if (v14)
  {
    -[PLManagedAsset libraryScopeContributors](self, "libraryScopeContributors");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_pl_map:", &__block_literal_global_95_44601);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "allObjects");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setSharingContributorUserIdentifiers:", v17);

    goto LABEL_15;
  }
LABEL_14:
  objc_msgSend(v5, "setSharingContributorUserIdentifiers:", 0);
LABEL_15:
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "libraryScopeAssetContributorsToUpdate");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(v19, "count");

  if (v20)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "libraryScopeAssetContributorsToUpdate");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "allObjects");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setUpdateSharingContributorUserIdentifiers:", v23);

  }
}

- (void)_applyFaceChangeToCPLAssetChange:(id)a3 inLibrary:(id)a4
{
  +[PLCPLFacePushSupport applyFaceChangesFromAsset:toAssetChange:inPhotoLibrary:](PLCPLFacePushSupport, "applyFaceChangesFromAsset:toAssetChange:inPhotoLibrary:", self, a3, a4);
}

- (void)invalidateThumbnailIfNeededAfterMasterResourceChangeInLibrary:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (!-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = 138412546;
        v13 = v6;
        v14 = 2112;
        v15 = v7;
        _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "Detecting a master resource change on an unadjusted asset, invalidate the thumbnail for this asset with uuid: %@ guid: %@", (uint8_t *)&v12, 0x16u);

      }
    }
    objc_msgSend(v4, "thumbnailManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset thumbnailIdentifier](self, "thumbnailIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = -[PLManagedAsset effectiveThumbnailIndex](self, "effectiveThumbnailIndex");
    -[PLManagedAsset uuid](self, "uuid");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "deleteThumbnailsWithIdentifier:orIndex:uuid:", v9, v10, v11);

    -[PLManagedAsset setEffectiveThumbnailIndex:](self, "setEffectiveThumbnailIndex:", 0x7FFFFFFFFFFFFFFFLL);
  }

}

- (id)bestAvaliableAdjustedResource
{
  _BOOL4 v3;
  uint64_t *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (bestAvaliableAdjustedResource_onceToken != -1)
    dispatch_once(&bestAvaliableAdjustedResource_onceToken, &__block_literal_global_107);
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    v3 = -[PLManagedAsset isLoopingVideo](self, "isLoopingVideo");
    v4 = &bestAvaliableAdjustedResource_photoResourceTypePriority;
    if (v3)
      v4 = &bestAvaliableAdjustedResource_loopingPhotoResourceTypePriority;
  }
  else
  {
    if (!-[PLManagedAsset isVideo](self, "isVideo"))
    {
LABEL_19:
      v6 = 0;
      v12 = 0;
      goto LABEL_22;
    }
    v4 = &bestAvaliableAdjustedResource_videoResourceTypePriority;
  }
  v5 = (id)*v4;
  if (!v5)
    goto LABEL_19;
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v6 = v5;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", (int)objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * i), "intValue", (_QWORD)v14));
        v11 = objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          v12 = (void *)v11;
          goto LABEL_21;
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v8)
        continue;
      break;
    }
  }
  v12 = 0;
LABEL_21:

LABEL_22:
  return v12;
}

- (BOOL)shouldIncludeInCPLCounts
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForIncludeInCPLCounts");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (id)imageMediaMetadataForURL:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  BOOL v16;
  NSObject *v17;
  void *v18;
  int v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_opt_class();
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  v8 = (void *)MEMORY[0x1E0D752F0];
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "typeWithIdentifier:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = objc_alloc(MEMORY[0x1E0D75140]);
  objc_msgSend(v7, "pl_libraryBundle");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "timeZoneLookup");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)objc_msgSend(v11, "initWithImageURL:contentType:options:timeZoneLookup:cacheImageSource:cacheImageData:", v4, v10, 13, v13, 1, 0);

  objc_msgSend(v14, "imageSourceProxyData");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (v15)
    v16 = 0;
  else
    v16 = *MEMORY[0x1E0D115D0] == 0;
  if (v16)
  {
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      -[NSManagedObject pl_shortDescription](self, "pl_shortDescription");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138412290;
      v21 = v18;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Failed to get image source proxy data for asset %@", (uint8_t *)&v20, 0xCu);

    }
  }

  return v15;
}

- (id)createResourcesForAssetInPhotoLibrary:(id)a3 shouldGenerateDerivatives:(BOOL)a4
{
  _BOOL4 v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _BOOL4 v20;
  _BOOL4 v21;
  uint64_t v22;
  void *v23;
  const __CFURL *v24;
  CGImageSource *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  char v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  unint64_t v35;
  int v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t (*v38)(uint64_t, uint64_t);
  int v39;
  void *v40;
  NSObject *v41;
  NSObject *v42;
  int v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  NSObject *v49;
  NSObject *v50;
  void *v51;
  PLManagedAsset *v52;
  unint64_t v53;
  PLManagedAsset *v54;
  int v55;
  PLManagedAsset *v56;
  PLManagedAsset *v57;
  int v58;
  PLManagedAsset *v59;
  void *v60;
  void *v61;
  PLManagedAsset *v62;
  NSObject *v63;
  const char *v64;
  NSObject *v65;
  uint32_t v66;
  const char *v67;
  NSObject *v68;
  uint32_t v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  int v100;
  void *v101;
  void *v102;
  void *v103;
  NSObject *v104;
  NSObject *v105;
  void *v106;
  uint64_t (*v108)(uint64_t, uint64_t);
  void *context;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  id v114;
  void *v115;
  void *v116;
  _BOOL4 v117;
  void *v118;
  void *v119;
  id v120;
  void *v121;
  PLManagedAsset *v122;
  id v123;
  id v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  id v126;
  PLManagedAsset *v127;
  id v128;
  _QWORD v129[5];
  id v130;
  uint8_t v131[4];
  PLManagedAsset *v132;
  __int16 v133;
  PLManagedAsset *v134;
  __int16 v135;
  PLManagedAsset *v136;
  _BYTE buf[24];
  uint64_t (*v138)(uint64_t, uint64_t);
  void (*v139)(uint64_t);
  id v140;
  uint64_t v141;

  v117 = a4;
  v141 = *MEMORY[0x1E0C80C00];
  v123 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 5);
  v124 = (id)objc_claimAutoreleasedReturnValue();
  v5 = -[PLManagedAsset hasAdjustments](self, "hasAdjustments");
  -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
  v122 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[PLManagedAsset fingerprintScheme](self, "fingerprintScheme");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v7)
    {
      v9 = v7;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0D11398], "invalidFingerprintScheme");
      v9 = objc_claimAutoreleasedReturnValue();
    }
    v12 = v9;

    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "pathManager");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v130 = 0;
    objc_msgSend(v14, "photoDirectoryWithType:leafType:createIfNeeded:error:", 13, 2, 1, &v130);
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    v120 = v130;

    if (v120 && !*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v120;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Unable to create directory for asset: %@", buf, 0xCu);
      }

    }
    -[PLManagedAsset pathForAdjustmentSecondaryDataFile](self, "pathForAdjustmentSecondaryDataFile");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "fileExistsAtPath:", v121))
    {
      objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v121, 14, v16, v122, v12);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      if (v17)
        objc_msgSend(v124, "addObject:", v17);

    }
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v118 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset penultimateImageResource](self, "penultimateImageResource");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v119 = v18;
    if (v18)
    {
      objc_msgSend(v18, "uniformTypeIdentifier");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "identifier");
      v114 = (id)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v114 = v118;
    }
    if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    {
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      v138 = __Block_byref_object_copy__44479;
      v139 = __Block_byref_object_dispose__44480;
      v140 = 0;
      -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
      v115 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = -[PLManagedAsset isPartOfBurst](self, "isPartOfBurst");
      if (v115)
        v21 = v20;
      else
        v21 = 0;
      if (v21 && (objc_msgSend(v6, "fileExistsAtPath:") & 1) == 0)
      {
        v44 = (void *)MEMORY[0x1E0CB3940];
        -[PLManagedAsset identifier](v122, "identifier");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v45, "stringByReplacingOccurrencesOfString:withString:", CFSTR("/"), CFSTR("_"));
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v44, "stringWithFormat:", CFSTR("%@_render.JPG"), v46);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v113, "stringByAppendingPathComponent:", v47);
        v48 = objc_claimAutoreleasedReturnValue();

        v22 = 1;
        v115 = (void *)v48;
      }
      else
      {
        v22 = 0;
      }
      v129[0] = MEMORY[0x1E0C809B0];
      v129[1] = 3221225472;
      v129[2] = __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke;
      v129[3] = &unk_1E366A630;
      v129[4] = buf;
      -[PLManagedAsset synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:withCompletionHandler:](self, "synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:withCompletionHandler:", v115, v129);
      if (!*(_QWORD *)(*(_QWORD *)&buf[8] + 40) || !objc_msgSend(v6, "fileExistsAtPath:"))
      {
        if (*MEMORY[0x1E0D115D0])
        {
LABEL_85:
          -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v6, "fileExistsAtPath:", v73))
          {
            -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v73, 15, v114, v122, v12);
            v74 = (void *)objc_claimAutoreleasedReturnValue();
            if (v74)
              objc_msgSend(v124, "addObject:", v74);

          }
          if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
          {
            -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
            v75 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v6, "fileExistsAtPath:", v75))
            {
              objc_msgSend(v75, "pathExtension");
              v76 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0D752F0], "typeWithFilenameExtension:conformingToType:", v76, *MEMORY[0x1E0CEC568]);
              v77 = objc_claimAutoreleasedReturnValue();
              v78 = (void *)v77;
              v79 = (void *)*MEMORY[0x1E0CEC5B0];
              if (v77)
                v79 = (void *)v77;
              v80 = v79;

              objc_msgSend(v80, "identifier");
              v81 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v75, 19, v81, v122, v12);
              v82 = (void *)objc_claimAutoreleasedReturnValue();

              if (v82)
                objc_msgSend(v124, "addObject:", v82);
              if (v117)
              {
                objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v75, 0);
                v83 = (void *)objc_claimAutoreleasedReturnValue();
                -[PLManagedAsset _generateVideoResourcesFromURL:withScopedIdentifier:forMaster:](self, "_generateVideoResourcesFromURL:withScopedIdentifier:forMaster:", v83, v122, 0);
                v84 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v124, "addObjectsFromArray:", v84);
              }

            }
            -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
            v85 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v6, "fileExistsAtPath:", v85))
            {
              objc_msgSend(v85, "pathExtension");
              v86 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0D752F0], "typeWithFilenameExtension:conformingToType:", v86, *MEMORY[0x1E0CEC568]);
              v87 = objc_claimAutoreleasedReturnValue();
              v88 = (void *)v87;
              v89 = (void *)*MEMORY[0x1E0CEC5B0];
              if (v87)
                v89 = (void *)v87;
              v90 = v89;

              objc_msgSend(v90, "identifier");
              v91 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v85, 20, v91, v122, v12);
              v92 = (void *)objc_claimAutoreleasedReturnValue();

              if (v92)
                objc_msgSend(v124, "addObject:", v92);

            }
          }

          _Block_object_dispose(buf, 8);
          goto LABEL_140;
        }
        __CPLAssetsdOSLogDomain();
        v50 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
        {
          v62 = *(PLManagedAsset **)(*(_QWORD *)&buf[8] + 40);
          *(_DWORD *)v131 = 138412546;
          v132 = v62;
          v133 = 2112;
          v134 = self;
          _os_log_impl(&dword_199541000, v50, OS_LOG_TYPE_ERROR, "Unable to find a full size render image at %@ to generate asset resources for asset %@", v131, 0x16u);
        }
LABEL_84:

        goto LABEL_85;
      }
      -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", *(_QWORD *)(*(_QWORD *)&buf[8] + 40), 2, v118, v122, v12);
      v49 = objc_claimAutoreleasedReturnValue();
      v50 = v49;
      if (!v49)
      {
LABEL_82:
        if (v117)
        {
          -[PLManagedAsset _createJPEGResourcesFromFullSizePath:withScopedIdentifier:forMaster:fingerprintScheme:](self, "_createJPEGResourcesFromFullSizePath:withScopedIdentifier:forMaster:fingerprintScheme:", *(_QWORD *)(*(_QWORD *)&buf[8] + 40), v122, 0, v12);
          v72 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v124, "addObjectsFromArray:", v72);

        }
        goto LABEL_84;
      }
      -[NSObject setDeleteAfterUpload:](v49, "setDeleteAfterUpload:", v22);
      objc_msgSend(v124, "addObject:", v50);
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", *(_QWORD *)(*(_QWORD *)&buf[8] + 40));
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset imageMediaMetadataForURL:](self, "imageMediaMetadataForURL:", v51);
      v52 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();

      if (!v52)
      {
LABEL_81:

        goto LABEL_82;
      }
      v53 = -[PLManagedAsset length](v52, "length");
      if (v53 <= objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize"))
      {
LABEL_80:
        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v70 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v70, "setMediaMetadataData:", v52);

        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v71 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v71, "setMediaMetadataType:", CFSTR("CGImageProperties"));

        goto LABEL_81;
      }
      -[PLManagedAsset pathForAdjustedMediaMetadataFile](self, "pathForAdjustedMediaMetadataFile");
      v54 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
      v128 = 0;
      v55 = _PLEnsureIntermediateDirectoriesExistForFilePath(v54, (uint64_t)&v128);
      v56 = (PLManagedAsset *)v128;
      v57 = v56;
      if (!v55)
      {
        if (*MEMORY[0x1E0D115D0])
        {
          v61 = 0;
          v59 = v56;
          goto LABEL_79;
        }
        __CPLAssetsdOSLogDomain();
        v63 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v131 = 138412546;
          v132 = v54;
          v133 = 2112;
          v134 = v57;
          _os_log_impl(&dword_199541000, v63, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", v131, 0x16u);
        }
        v59 = v57;
        goto LABEL_77;
      }
      v127 = v56;
      v58 = -[PLManagedAsset writeToFile:options:error:](v52, "writeToFile:options:error:", v54, 1, &v127);
      v59 = v127;

      if (v58)
      {
        objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v54, 27, v60, v122, v12);
        v61 = (void *)objc_claimAutoreleasedReturnValue();

        if (v61)
        {
          objc_msgSend(v61, "setDeleteAfterUpload:", 1);
          objc_msgSend(v124, "addObject:", v61);
LABEL_79:

          goto LABEL_80;
        }
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v63 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)v131 = 138412290;
            v132 = v122;
            v64 = "Unable to create CPL resource for image properties data for asset %@";
            v65 = v63;
            v66 = 12;
            goto LABEL_76;
          }
          goto LABEL_77;
        }
      }
      else if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v63 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v131 = 138412802;
          v132 = v52;
          v133 = 2112;
          v134 = v54;
          v135 = 2112;
          v136 = v59;
          v64 = "Failed to save image properties data %@ to %@. Error: %@";
          v65 = v63;
          v66 = 32;
LABEL_76:
          _os_log_impl(&dword_199541000, v65, OS_LOG_TYPE_ERROR, v64, v131, v66);
        }
LABEL_77:

      }
      v61 = 0;
      goto LABEL_79;
    }
    if (!-[PLManagedAsset isVideo](self, "isVideo"))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v42 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
        {
          v43 = -[PLManagedAsset kind](self, "kind");
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v43;
          _os_log_impl(&dword_199541000, v42, OS_LOG_TYPE_DEFAULT, "Unsupported asset type %d", buf, 8u);
        }

      }
      goto LABEL_140;
    }
    -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "fileExistsAtPath:", v116))
    {
      objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v116);
      v24 = (const __CFURL *)objc_claimAutoreleasedReturnValue();
      v25 = CGImageSourceCreateWithURL(v24, 0);

      if (v25)
      {
        CGImageSourceGetType(v25);
        v26 = objc_claimAutoreleasedReturnValue();

        CFRelease(v25);
        v23 = (void *)v26;
      }
      -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v116, 2, v23, v122, v12);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      if (v27)
        objc_msgSend(v124, "addObject:", v27);

    }
    -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend(v6, "fileExistsAtPath:", v28);
    v30 = v29;
    if (!v29)
    {
LABEL_115:
      -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
      v95 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v6, "fileExistsAtPath:", v95))
      {
        -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v95, 25, v118, v122, v12);
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        if (v96)
          objc_msgSend(v124, "addObject:", v96);

      }
      if ((v30 & 1) != 0)
        objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v28, 0);
      else
        -[PLManagedAsset mainFileURL](self, "mainFileURL");
      v97 = (void *)objc_claimAutoreleasedReturnValue();
      v98 = v97;
      if (!v97)
        goto LABEL_139;
      objc_msgSend(v97, "path");
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      v100 = objc_msgSend(v6, "fileExistsAtPath:", v99);

      if (!v100)
        goto LABEL_139;
      if (v117)
      {
        -[PLManagedAsset _generatePosterFrameResourcesFromVideoURL:withScopedIdentifier:forMaster:fingerprintScheme:](self, "_generatePosterFrameResourcesFromVideoURL:withScopedIdentifier:forMaster:fingerprintScheme:", v98, v122, 0, v12);
        v101 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v124, "addObjectsFromArray:", v101);
        -[PLManagedAsset _generateVideoResourcesFromURL:withScopedIdentifier:forMaster:](self, "_generateVideoResourcesFromURL:withScopedIdentifier:forMaster:", v98, v122, 0);
        v102 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v124, "addObjectsFromArray:", v102);

      }
      else
      {
        if (!-[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo"))
        {
LABEL_139:

LABEL_140:
          goto LABEL_141;
        }
        objc_msgSend(v98, "path");
        v103 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v103, 1000, v118, v122, v12);
        v101 = (void *)objc_claimAutoreleasedReturnValue();

        if (v101)
        {
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v104 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              *(_QWORD *)&buf[4] = v101;
              _os_log_impl(&dword_199541000, v104, OS_LOG_TYPE_DEFAULT, "Adding adjustment original resource %@", buf, 0xCu);
            }

          }
          objc_msgSend(v124, "addObject:", v101);
        }
        else
        {
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v105 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              *(_QWORD *)&buf[4] = self;
              _os_log_impl(&dword_199541000, v105, OS_LOG_TYPE_ERROR, "Failed to create adjustment original resource for %@", buf, 0xCu);
            }

          }
          v101 = 0;
        }
      }

      goto LABEL_139;
    }
    -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v28, 16, v118, v122, v12);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v31)
    {
LABEL_114:

      goto LABEL_115;
    }
    objc_msgSend(v124, "addObject:", v31);
    v32 = (void *)MEMORY[0x1E0C8B3C0];
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v28);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "URLAssetWithURL:options:", v33, 0);
    v34 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v34)
    {
LABEL_113:

      goto LABEL_114;
    }
    context = (void *)MEMORY[0x19AEC1554]();
    objc_msgSend(v34, "propertyListForProxy");
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v111, 200, 0, 0);
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    v35 = objc_msgSend(v112, "length");
    if (v35 <= objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize"))
    {
LABEL_112:
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v93 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v93, "setMediaMetadataData:", v112);

      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v94, "setMediaMetadataType:", CFSTR("AVAssetProxy"));

      objc_autoreleasePoolPop(context);
      goto LABEL_113;
    }
    -[PLManagedAsset pathForAdjustedMediaMetadataFile](self, "pathForAdjustedMediaMetadataFile");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    v126 = 0;
    v36 = _PLEnsureIntermediateDirectoriesExistForFilePath(v110, (uint64_t)&v126);
    v37 = (uint64_t (*)(uint64_t, uint64_t))v126;
    v38 = v37;
    if (!v36)
    {
      if (*MEMORY[0x1E0D115D0])
      {
        v108 = v37;
        goto LABEL_111;
      }
      __CPLAssetsdOSLogDomain();
      v41 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v110;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v38;
        _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", buf, 0x16u);
      }
      v108 = v38;
      goto LABEL_110;
    }
    v125 = v37;
    v39 = objc_msgSend(v112, "writeToFile:options:error:", v110, 1, &v125);
    v108 = v125;

    if (v39)
    {
      objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](self, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v110, 27, v40, v122, v12);
      v41 = objc_claimAutoreleasedReturnValue();

      if (v41)
      {
        -[NSObject setDeleteAfterUpload:](v41, "setDeleteAfterUpload:", 1);
        objc_msgSend(v124, "addObject:", v41);
LABEL_110:

        goto LABEL_111;
      }
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v41 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
          goto LABEL_110;
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v122;
        v67 = "Unable to create CPL resource for video properties data for asset %@";
        v68 = v41;
        v69 = 12;
        goto LABEL_109;
      }
    }
    else if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v41 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
        goto LABEL_110;
      *(_DWORD *)buf = 138412802;
      *(_QWORD *)&buf[4] = v112;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v110;
      *(_WORD *)&buf[22] = 2112;
      v138 = v108;
      v67 = "Failed to save video properties data %@ to %@. Error: %@";
      v68 = v41;
      v69 = 32;
LABEL_109:
      _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_ERROR, v67, buf, v69);
      goto LABEL_110;
    }
LABEL_111:

    goto LABEL_112;
  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setMediaMetadataType:", 0);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setMediaMetadata:", 0);

  if (*MEMORY[0x1E0D115D0])
    goto LABEL_142;
  __CPLAssetsdOSLogDomain();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412290;
    *(_QWORD *)&buf[4] = self;
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEBUG, "Clear out resources for %@", buf, 0xCu);
  }
LABEL_141:

LABEL_142:
  if (createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_onceToken != -1)
    dispatch_once(&createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_onceToken, &__block_literal_global_151);
  objc_msgSend(v124, "filteredArrayUsingPredicate:", createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_filterPredicate);
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset rm_createAssetResourcesForCPLResources:inLibrary:](self, "rm_createAssetResourcesForCPLResources:inLibrary:", v106, v123);

  return v124;
}

- (void)synchronouslyFetchAdjustmentBlobWithCompletionHandler:(id)a3
{
  id v4;
  BOOL v5;
  id v6;
  _QWORD v7[5];
  id v8;
  BOOL v9;

  v4 = a3;
  v5 = -[PLManagedAsset hasAdjustments](self, "hasAdjustments");
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __77__PLManagedAsset_CPL__synchronouslyFetchAdjustmentBlobWithCompletionHandler___block_invoke;
  v7[3] = &unk_1E366A678;
  v9 = v5;
  v7[4] = self;
  v8 = v4;
  v6 = v4;
  -[PLManagedAsset synchronouslyFetchAdjustmentDataWithCompletionHandler:](self, "synchronouslyFetchAdjustmentDataWithCompletionHandler:", v7);

}

- (id)_calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources
{
  id v2;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t);
  id v10;

  v5 = 0;
  v6 = &v5;
  v7 = 0x3032000000;
  v8 = __Block_byref_object_copy__44479;
  v9 = __Block_byref_object_dispose__44480;
  v10 = 0;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __93__PLManagedAsset_CPL___calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources__block_invoke;
  v4[3] = &unk_1E366A6A0;
  v4[4] = self;
  v4[5] = &v5;
  -[PLManagedAsset synchronouslyFetchAdjustmentBlobWithCompletionHandler:](self, "synchronouslyFetchAdjustmentBlobWithCompletionHandler:", v4);
  v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

- (void)_applyResourceChangeToCPLAsset:(id)a3 forChangeType:(unint64_t)a4 shouldGenerateDerivatives:(BOOL)a5 inLibrary:(id)a6
{
  _BOOL8 v7;
  char v8;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  PLManagedAsset *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t k;
  void *v23;
  void *v24;
  void *v25;
  id *v26;
  void *v27;
  void *v28;
  id v29;
  BOOL v30;
  void *v31;
  void *v32;
  PLManagedAsset *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  NSObject *v42;
  __CFString *v43;
  void *v44;
  void *v45;
  char v46;
  void *v48;
  NSObject *v49;
  void *v50;
  void *v51;
  char v52;
  uint64_t v53;
  void *v54;
  unsigned int v55;
  NSObject *v56;
  uint64_t v57;
  void *v58;
  const __CFString *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t j;
  void *v65;
  BOOL v66;
  void *v67;
  void *v68;
  NSObject *v69;
  __CFString *v70;
  NSObject *v71;
  int v72;
  double v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  unint64_t v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  PLManagedAsset *v83;
  unsigned int v84;
  void *v85;
  id obj;
  _QWORD v87[5];
  id v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD v93[5];
  void *v94;
  id v95;
  id v96;
  char v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _BYTE v106[128];
  uint8_t v107[128];
  uint8_t buf[4];
  uint64_t v109;
  __int16 v110;
  const __CFString *v111;
  _BYTE v112[128];
  uint64_t v113;

  v7 = a5;
  v8 = a4;
  v113 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a6;
  v12 = (void *)MEMORY[0x1E0C99DE8];
  -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "arrayWithCapacity:", objc_msgSend(v13, "count"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (!-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
  {
    -[PLManagedAsset fingerprintScheme](self, "fingerprintScheme");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = v27;
    if (v27)
    {
      v29 = v27;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0D11398], "invalidFingerprintScheme");
      v29 = (id)objc_claimAutoreleasedReturnValue();
    }
    v82 = v29;

    v30 = -[PLManagedAsset hasAdjustedCPLThumbResource](self, "hasAdjustedCPLThumbResource");
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "sourceAssetForDuplicationCPLScopedIdentifier");
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    if (v32)
    {
      v80 = v10;
      v33 = self;
      -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
      v102 = 0u;
      v103 = 0u;
      v104 = 0u;
      v105 = 0u;
      obj = (id)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v102, v112, 16);
      if (v34)
      {
        v35 = v34;
        v36 = *(_QWORD *)v103;
        do
        {
          for (i = 0; i != v35; ++i)
          {
            if (*(_QWORD *)v103 != v36)
              objc_enumerationMutation(obj);
            v38 = *(void **)(*((_QWORD *)&v102 + 1) + 8 * i);
            objc_msgSend(v38, "cplResourceIncludeFile:", 0);
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            v40 = v39;
            if (v39)
            {
              objc_msgSend(v39, "setCanGenerateDerivative:", 0);
              objc_msgSend(v40, "identity");
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v41, "setFileURL:", 0);

              objc_msgSend(v40, "setSourceResourceType:", objc_msgSend(v38, "cplType"));
              objc_msgSend(v14, "addObject:", v40);
            }
            else if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v42 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
              {
                -[PLManagedAsset scopedIdentifier](v33, "scopedIdentifier");
                v43 = (__CFString *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412546;
                v109 = (uint64_t)v38;
                v110 = 2112;
                v111 = v43;
                _os_log_impl(&dword_199541000, v42, OS_LOG_TYPE_ERROR, "Dedupe merge resource copy: Unable to create CPLResource from %@ with itemIdentifier %@", buf, 0x16u);

              }
            }

          }
          v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v102, v112, 16);
        }
        while (v35);
      }
      if (objc_msgSend(v14, "count"))
      {
        -[PLManagedAsset additionalAttributes](v33, "additionalAttributes");
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v44, "sourceAssetForDuplicationCPLScopedIdentifier");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = v80;
        objc_msgSend(v80, "setResourceCopyFromScopedIdentifier:", v45);

        v46 = 0;
      }
      else
      {
        v46 = 0;
        v10 = v80;
      }
LABEL_74:

      v93[0] = MEMORY[0x1E0C809B0];
      v93[1] = 3221225472;
      v93[2] = __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke;
      v93[3] = &unk_1E366A6C8;
      v97 = v46 & 1;
      v26 = &v94;
      v93[4] = v33;
      v94 = v82;
      v95 = v14;
      v96 = v10;
      v18 = v82;
      -[PLManagedAsset synchronouslyFetchAdjustmentBlobWithCompletionHandler:](v33, "synchronouslyFetchAdjustmentBlobWithCompletionHandler:", v93);

      self = v33;
LABEL_75:

      goto LABEL_76;
    }
    if ((v8 & 8) != 0 || !v30)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v49 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
        {
          objc_msgSend(v10, "scopedIdentifier");
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v109 = (uint64_t)v50;
          _os_log_impl(&dword_199541000, v49, OS_LOG_TYPE_DEBUG, "Generating derivatives for assetChange with identifier %@", buf, 0xCu);

        }
      }
      -[PLManagedAsset createResourcesForAssetInPhotoLibrary:shouldGenerateDerivatives:](self, "createResourcesForAssetInPhotoLibrary:shouldGenerateDerivatives:", v11, v7);
      obj = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "addObjectsFromArray:");
      v33 = self;
      v46 = 0;
      goto LABEL_74;
    }
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    obj = (id)objc_claimAutoreleasedReturnValue();
    if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    {
      -[PLManagedAsset fileURLForFullsizeRenderImage](self, "fileURLForFullsizeRenderImage");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!-[PLManagedAsset isVideo](self, "isVideo"))
        goto LABEL_51;
      -[PLManagedAsset fileURLForFullsizeRenderVideo](self, "fileURLForFullsizeRenderVideo");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      if (-[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo"))
      {
        objc_msgSend(v48, "path");
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        v52 = objc_msgSend(obj, "fileExistsAtPath:", v51);

        if ((v52 & 1) == 0)
        {
          -[PLManagedAsset mainFileURL](self, "mainFileURL");
          v53 = objc_claimAutoreleasedReturnValue();

          v48 = (void *)v53;
        }
      }
    }
    if (v48)
    {
      objc_msgSend(v48, "path");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      v55 = objc_msgSend(obj, "fileExistsAtPath:", v54);

LABEL_52:
      v84 = v55;
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v56 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset resources](self, "resources");
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = (void *)v57;
          v59 = CFSTR("NO");
          if (v55)
            v59 = CFSTR("YES");
          *(_DWORD *)buf = 138412546;
          v109 = v57;
          v110 = 2112;
          v111 = v59;
          _os_log_impl(&dword_199541000, v56, OS_LOG_TYPE_DEFAULT, "Reusing existing cloud resources %@. canGenerateDerivative: %@", buf, 0x16u);

        }
      }
      v79 = v11;
      v81 = v10;
      v83 = self;
      -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
      v98 = 0u;
      v99 = 0u;
      v100 = 0u;
      v101 = 0u;
      v85 = (void *)objc_claimAutoreleasedReturnValue();
      v60 = objc_msgSend(v85, "countByEnumeratingWithState:objects:count:", &v98, v107, 16);
      v61 = v55;
      if (v60)
      {
        v62 = v60;
        v46 = 0;
        v63 = *(_QWORD *)v99;
        do
        {
          for (j = 0; j != v62; ++j)
          {
            if (*(_QWORD *)v99 != v63)
              objc_enumerationMutation(v85);
            v65 = *(void **)(*((_QWORD *)&v98 + 1) + 8 * j);
            v66 = objc_msgSend(v65, "cplType") == 13;
            objc_msgSend(v65, "cplResourceIncludeFile:", 0);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            v68 = v67;
            if (v67)
            {
              objc_msgSend(v67, "setCanGenerateDerivative:", v61);
              objc_msgSend(v14, "addObject:", v68);
            }
            else if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v69 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
              {
                -[PLManagedAsset scopedIdentifier](v83, "scopedIdentifier");
                v70 = (__CFString *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412546;
                v109 = (uint64_t)v65;
                v110 = 2112;
                v111 = v70;
                _os_log_impl(&dword_199541000, v69, OS_LOG_TYPE_ERROR, "Unable to create CPLResource from %@ with itemIdentifier %@", buf, 0x16u);

                v61 = v84;
              }

            }
            v46 |= v66;

          }
          v62 = objc_msgSend(v85, "countByEnumeratingWithState:objects:count:", &v98, v107, 16);
        }
        while (v62);
      }
      else
      {
        v46 = 0;
      }

      v11 = v79;
      v10 = v81;
      v33 = v83;
      goto LABEL_74;
    }
LABEL_51:
    v55 = 0;
    goto LABEL_52;
  }
  if (-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "sourceAssetForDuplicationCPLScopedIdentifier");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setResourceCopyFromScopedIdentifier:", v16);

    if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    {
      v17 = self;
      -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
      v18 = (id)objc_claimAutoreleasedReturnValue();
      v89 = 0u;
      v90 = 0u;
      v91 = 0u;
      v92 = 0u;
      v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v89, v106, 16);
      if (v19)
      {
        v20 = v19;
        v21 = *(_QWORD *)v90;
        do
        {
          for (k = 0; k != v20; ++k)
          {
            if (*(_QWORD *)v90 != v21)
              objc_enumerationMutation(v18);
            v23 = *(void **)(*((_QWORD *)&v89 + 1) + 8 * k);
            objc_msgSend(v23, "cplResourceIncludeFile:", 0);
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            if (v24)
            {
              objc_msgSend(v24, "setSourceResourceType:", objc_msgSend(v23, "cplType"));
              objc_msgSend(v24, "identity");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v25, "setFileURL:", 0);

              objc_msgSend(v24, "setCanGenerateDerivative:", 0);
              objc_msgSend(v14, "addObject:", v24);
            }

          }
          v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v89, v106, 16);
        }
        while (v20);
      }
      v87[0] = MEMORY[0x1E0C809B0];
      v87[1] = 3221225472;
      v87[2] = __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke_182;
      v87[3] = &unk_1E366A6F0;
      self = v17;
      v87[4] = v17;
      v26 = &v88;
      v88 = v10;
      -[PLManagedAsset synchronouslyFetchAdjustmentBlobWithCompletionHandler:](v17, "synchronouslyFetchAdjustmentBlobWithCompletionHandler:", v87);
      goto LABEL_75;
    }
  }
LABEL_76:
  objc_msgSend(v10, "setResources:", v14);
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v71 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEBUG))
    {
      v72 = -[PLManagedAsset orientation](self, "orientation");
      *(_DWORD *)buf = 67109120;
      LODWORD(v109) = v72;
      _os_log_impl(&dword_199541000, v71, OS_LOG_TYPE_DEBUG, "Setting orientation %d to assetChange", buf, 8u);
    }

  }
  objc_msgSend(v10, "setOrientation:", (int)-[PLManagedAsset orientation](self, "orientation"));
  -[PLManagedAsset duration](self, "duration");
  objc_msgSend(v10, "setDuration:", llround(v73 * 1000.0));
  objc_msgSend(v10, "setOriginalChoice:", -[PLManagedAsset originalResourceChoice](self, "originalResourceChoice"));
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v74, "mediaMetadataType");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setAdjustedMediaMetaDataType:", v75);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v76, "mediaMetadataData");
  v77 = (void *)objc_claimAutoreleasedReturnValue();

  v78 = objc_msgSend(v77, "length");
  if (v78 <= objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize"))
    objc_msgSend(v10, "setAdjustedMediaMetaData:", v77);

}

- (void)_debugPrintAdjustmentState
{
  void *v3;
  _BYTE *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  int v9;
  const __CFString *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  int v15;
  NSObject *v16;
  __int16 v17;
  const __CFString *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "unmanagedAdjustment");
      v7 = objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v3, "fileExistsAtPath:", v8);
      v10 = CFSTR("missing");
      if (v9)
        v10 = CFSTR("exists");
      v15 = 138412546;
      v16 = v7;
      v17 = 2112;
      v18 = v10;
      _os_log_impl(&dword_199541000, v5, OS_LOG_TYPE_DEFAULT, "UnmanagedAdjustment: %@ \nFull size render %@", (uint8_t *)&v15, 0x16u);

    }
  }
  -[PLManagedAsset pathForAdjustmentFile](self, "pathForAdjustmentFile");
  v11 = objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "fileExistsAtPath:", v11))
  {
    objc_msgSend(MEMORY[0x1E0C99D50], "dataWithContentsOfFile:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v12, 0, 0, 0);
      v13 = objc_claimAutoreleasedReturnValue();
      if (!*v4)
      {
        __CPLAssetsdOSLogDomain();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          v15 = 138412290;
          v16 = v13;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Adjustment dictionary: %@", (uint8_t *)&v15, 0xCu);
        }

      }
    }
    else
    {
      if (*v4)
      {
LABEL_17:

        goto LABEL_18;
      }
      __CPLAssetsdOSLogDomain();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        v15 = 138412290;
        v16 = v11;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Failed to load adjustment data from %@", (uint8_t *)&v15, 0xCu);
      }
    }

    goto LABEL_17;
  }
LABEL_18:

}

- (id)_createJPEGResourcesFromFullSizePath:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 fingerprintScheme:(id)a6
{
  return -[PLManagedAsset _createJPEGResourcesFromFullSizePath:withScopedIdentifier:forMaster:forResourceTypes:fingerprintScheme:](self, "_createJPEGResourcesFromFullSizePath:withScopedIdentifier:forMaster:forResourceTypes:fingerprintScheme:", a3, a4, a5, &unk_1E3763B90, a6);
}

- (id)_createJPEGResourcesFromFullSizePath:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 forResourceTypes:(id)a6 fingerprintScheme:(id)a7
{
  id v10;
  id v11;
  id v12;
  void *v13;
  int v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  float v20;
  float v21;
  id v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  uint64_t i;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  NSObject *v32;
  void *v33;
  id v35;
  _BOOL4 v36;
  id v37;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint8_t buf[4];
  void *v45;
  __int16 v46;
  id v47;
  __int16 v48;
  id v49;
  _BYTE v50[128];
  uint64_t v51;

  v36 = a5;
  v51 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  v39 = a7;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 3);
  v37 = (id)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "fileExistsAtPath:", v10);

    if (v14)
    {
      objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v10, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLManagedAsset sizeOfImageAtURL:outOrientation:](PLManagedAsset, "sizeOfImageAtURL:outOrientation:", v15, 0);
      v17 = v16;
      v19 = v18;

      objc_msgSend(MEMORY[0x1E0D11440], "derivativeGenerationThreshold");
      v21 = v20;
      v40 = 0u;
      v41 = 0u;
      v42 = 0u;
      v43 = 0u;
      v35 = v12;
      v22 = v12;
      v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v40, v50, 16);
      v24 = v36;
      if (v23)
      {
        v25 = v23;
        v26 = *(_QWORD *)v41;
        v27 = (float)(unint64_t)(v17 * v19);
        do
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v41 != v26)
              objc_enumerationMutation(v22);
            v29 = objc_msgSend(*(id *)(*((_QWORD *)&v40 + 1) + 8 * i), "unsignedIntegerValue");
            v30 = objc_msgSend(MEMORY[0x1E0D11440], "maxPixelSizeForResourceType:", v29);
            if (v29 == 5 || (float)(v21 * (float)v30) <= v27)
            {
              -[PLManagedAsset _createImageResourceForResourceType:withPreviewImagePath:scopedIdentifier:forMaster:fingerprintScheme:](self, "_createImageResourceForResourceType:withPreviewImagePath:scopedIdentifier:forMaster:fingerprintScheme:", v29, v10, v11, v24, v39);
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              if (v31)
              {
                objc_msgSend(v37, "addObject:", v31);
              }
              else if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v32 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
                {
                  objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", v29);
                  v33 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412802;
                  v45 = v33;
                  v46 = 2112;
                  v47 = v10;
                  v48 = 2112;
                  v49 = v11;
                  _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_ERROR, "Failed to generate image resource type %@ from fullsize image %@ for asset %@.", buf, 0x20u);

                }
                v24 = v36;
              }

            }
          }
          v25 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v40, v50, 16);
        }
        while (v25);
      }

      v12 = v35;
    }
  }

  return v37;
}

- (id)_generatePosterFrameResourcesFromVideoURL:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 fingerprintScheme:(id)a6
{
  _BOOL8 v7;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  int v19;
  id v20;
  uint64_t v21;

  v7 = a5;
  v21 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _generatePosterFrameForVideoAtURL:withResourceType:scopedIdentifier:forMaster:fingerprintScheme:](self, "_generatePosterFrameForVideoAtURL:withResourceType:scopedIdentifier:forMaster:fingerprintScheme:", v10, 4, v11, v7, v12);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    objc_msgSend(v13, "addObject:", v14);
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      v19 = 138412290;
      v20 = v10;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Failed to generate medium poster image for %@", (uint8_t *)&v19, 0xCu);
    }

  }
  -[PLManagedAsset _generatePosterFrameForVideoAtURL:withResourceType:scopedIdentifier:forMaster:fingerprintScheme:](self, "_generatePosterFrameForVideoAtURL:withResourceType:scopedIdentifier:forMaster:fingerprintScheme:", v10, 5, v11, v7, v12);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (v16)
  {
    objc_msgSend(v13, "addObject:", v16);
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      v19 = 138412290;
      v20 = v10;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Failed to generate thumbnail poster image for %@", (uint8_t *)&v19, 0xCu);
    }

  }
  return v13;
}

- (id)_generateVideoResourcesFromURL:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _BOOL4 v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  unint64_t v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  int v36;
  id v37;
  void *v38;
  int v39;
  NSObject *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  id v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  PLManagedAsset *v54;
  uint64_t v55;
  _BOOL4 v56;
  _BOOL4 v57;
  void *v58;
  id v59;
  id obj;
  id v61;
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint8_t buf[4];
  uint64_t v68;
  __int16 v69;
  unint64_t v70;
  __int16 v71;
  void *v72;
  __int16 v73;
  id v74;
  _BYTE v75[128];
  _QWORD v76[5];

  v57 = a5;
  v76[3] = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v59 = a4;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((PLIsEDUMode() & 1) == 0)
  {
    -[PLManagedAsset fingerprintScheme](self, "fingerprintScheme");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if (v9)
    {
      v11 = v9;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0D11398], "invalidFingerprintScheme");
      v11 = (id)objc_claimAutoreleasedReturnValue();
    }
    v58 = v11;

    v12 = -[PLManagedAsset isPhotoIris](self, "isPhotoIris");
    v13 = (void *)MEMORY[0x1E0C99DE8];
    v76[0] = &unk_1E375EE80;
    v76[1] = &unk_1E375EDF0;
    v76[2] = &unk_1E375EE08;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v76, 3);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "arrayWithArray:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0C8AF90], "assetWithURL:", v7);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithAVAsset:timeZoneLookup:", v16, 0);
    v56 = v12;
    if (!v12 && objc_msgSend(v52, "isHDR"))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v7, "lastPathComponent");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v68 = (uint64_t)v18;
          _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Video resource %@ is HDR, requesting additional HDR medium derivative", buf, 0xCu);

        }
      }
      objc_msgSend(v15, "addObject:", &unk_1E375EEB0);
    }
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    obj = v15;
    v19 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v75, 16);
    if (v19)
    {
      v20 = v19;
      v21 = !v57;
      v22 = *(_QWORD *)v64;
      v50 = v8;
      v51 = v7;
      v54 = self;
      v55 = *(_QWORD *)v64;
      v53 = v16;
      do
      {
        v23 = 0;
        do
        {
          if (*(_QWORD *)v64 != v22)
            objc_enumerationMutation(obj);
          v24 = objc_msgSend(*(id *)(*((_QWORD *)&v63 + 1) + 8 * v23), "unsignedIntegerValue");
          if (objc_msgSend(MEMORY[0x1E0D11618], "shouldGenerateVideoDerivativeForAVAsset:forResourceType:adjusted:", v16, v24, v21))
          {
            -[PLManagedAsset _createVideoResourceFromVideoURL:withResourceType:scopedIdentifier:applyVideoAdjustments:forMaster:forPhotoIris:fingerprintScheme:](self, "_createVideoResourceFromVideoURL:withResourceType:scopedIdentifier:applyVideoAdjustments:forMaster:forPhotoIris:fingerprintScheme:", v7, v24, v59, 1, v57, v56, v58);
            v25 = objc_claimAutoreleasedReturnValue();
            if (v25)
            {
              v26 = v25;
              objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v7, "path");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "attributesOfItemAtPath:error:", v28, 0);
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              v30 = objc_msgSend(v29, "fileSize");

              -[NSObject identity](v26, "identity");
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v31, "fileSize") < v30
                || objc_msgSend(v52, "firstVideoTrackCodec") != 1635148593)
              {
                goto LABEL_41;
              }
              if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v32 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
                {
                  v33 = objc_msgSend(v31, "fileSize");
                  objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", v24);
                  v34 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 134218498;
                  v68 = v33;
                  v8 = v50;
                  v69 = 2048;
                  v70 = v30;
                  v71 = 2112;
                  v72 = v34;
                  _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEFAULT, "Generated derivative size %llu is larger than input size %llu for %@, will attempt to use the input resource instead.", buf, 0x20u);

                }
              }
              objc_msgSend(v31, "fileURL");
              v35 = (void *)objc_claimAutoreleasedReturnValue();
              v62 = 0;
              v36 = objc_msgSend(v27, "removeItemAtURL:error:", v35, &v62);
              v37 = v62;
              v38 = v37;
              if (v36)
              {
                v61 = v37;
                v39 = objc_msgSend(v27, "copyItemAtURL:toURL:error:", v51, v35, &v61);
                v49 = v61;

                if (v39)
                {
                  objc_msgSend(v35, "removeAllCachedResourceValues");
                  objc_msgSend(v35, "path");
                  v40 = objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v31, "fileUTI");
                  v41 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PLManagedAsset _createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:](v54, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v40, v24, v41, v59, v58);
                  v42 = objc_claimAutoreleasedReturnValue();

                  v26 = v42;
                  v7 = v51;
                  goto LABEL_38;
                }
                if (!*MEMORY[0x1E0D115D0])
                {
                  __CPLAssetsdOSLogDomain();
                  v40 = objc_claimAutoreleasedReturnValue();
                  v7 = v51;
                  if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                  {
                    objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", v24);
                    v46 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138413058;
                    v68 = (uint64_t)v46;
                    v69 = 2112;
                    v70 = (unint64_t)v51;
                    v71 = 2112;
                    v72 = v35;
                    v73 = 2112;
                    v45 = v49;
                    v74 = v49;
                    _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_ERROR, "Failed to copy the input video to be use for %@ from %@ to %@, fallback and use the generated video. Error: %@", buf, 0x2Au);

                  }
                  else
                  {
LABEL_38:
                    v45 = v49;
                  }
LABEL_39:

                  v38 = v45;
                  v8 = v50;
LABEL_40:

LABEL_41:
                  self = v54;
                  objc_msgSend(v8, "addObject:", v26);

                  v16 = v53;
                  v21 = !v57;
LABEL_42:
                  v22 = v55;
                  goto LABEL_43;
                }
                v38 = v49;
              }
              else if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v40 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                {
                  objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", v24);
                  v44 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412802;
                  v68 = (uint64_t)v44;
                  v69 = 2112;
                  v70 = (unint64_t)v35;
                  v71 = 2112;
                  v72 = v38;
                  _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_ERROR, "Failed to delete the oversized generated video derivative for %@ from %@, fallback and use the generated video. Error: %@", buf, 0x20u);

                }
                v45 = v38;
                v7 = v51;
                goto LABEL_39;
              }
              v7 = v51;
              goto LABEL_40;
            }
            if (*MEMORY[0x1E0D115D0])
              goto LABEL_44;
            __CPLAssetsdOSLogDomain();
            v26 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", v24);
              v43 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v68 = (uint64_t)v43;
              v69 = 2112;
              v70 = (unint64_t)v7;
              _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "Failed to generate video derivative for %@ from %@.", buf, 0x16u);

              goto LABEL_42;
            }
LABEL_43:

          }
LABEL_44:
          ++v23;
        }
        while (v20 != v23);
        v47 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v75, 16);
        v20 = v47;
      }
      while (v47);
    }

  }
  return v8;
}

- (id)cplFullRecord
{
  PLManagedAsset *v3;
  PLManagedAsset *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  int v11;
  PLManagedAsset *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset master](self, "master");
  v3 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (!v3)
  {
    if (*MEMORY[0x1E0D115D0])
    {
      v8 = 0;
      goto LABEL_14;
    }
    __CPLAssetsdOSLogDomain();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v11 = 138412290;
      v12 = self;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Can't find master for asset %@.", (uint8_t *)&v11, 0xCu);
    }
    goto LABEL_12;
  }
  -[PLManagedAsset scopedIdentifier](v3, "scopedIdentifier");
  v5 = objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        v11 = 138412290;
        v12 = v4;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "No masterScopedIdentifier found in master %@.", (uint8_t *)&v11, 0xCu);
      }

    }
    v6 = 0;
LABEL_12:
    v8 = 0;
    goto LABEL_13;
  }
  v6 = v5;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cplAssetChangeWithMasterScopedIdentifier:withChangeType:shouldGenerateDerivatives:inLibrary:](self, "cplAssetChangeWithMasterScopedIdentifier:withChangeType:shouldGenerateDerivatives:inLibrary:", v6, 0, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_13:
LABEL_14:

  return v8;
}

- (id)cplAssetChangeWithMasterScopedIdentifier:(id)a3 withChangeType:(unint64_t)a4 shouldGenerateDerivatives:(BOOL)a5 inLibrary:(id)a6
{
  _BOOL8 v7;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  int v18;
  void *v19;
  uint64_t v20;

  v7 = a5;
  v20 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a6;
  -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(MEMORY[0x1E0D11348], "newChangeWithScopedIdentifier:changeType:", v12, a4);
  if (objc_msgSend(v13, "hasChangeType:", 2))
    -[PLManagedAsset _applyPropertiesChangeToCPLAssetChange:withMasterScopedIdentifier:inLibrary:](self, "_applyPropertiesChangeToCPLAssetChange:withMasterScopedIdentifier:inLibrary:", v13, v10, v11);
  if ((_os_feature_enabled_impl() & 1) == 0 && objc_msgSend(v13, "hasChangeType:", 64))
    -[PLManagedAsset _applySharingChangeToCPLAssetChange:inLibrary:](self, "_applySharingChangeToCPLAssetChange:inLibrary:", v13, v11);
  if (objc_msgSend(v13, "hasChangeType:", 32))
    -[PLManagedAsset _applyFaceChangeToCPLAssetChange:inLibrary:](self, "_applyFaceChangeToCPLAssetChange:inLibrary:", v13, v11);
  if (objc_msgSend(v13, "hasChangeType:", 8))
    -[PLManagedAsset _applyResourceChangeToCPLAsset:forChangeType:shouldGenerateDerivatives:inLibrary:](self, "_applyResourceChangeToCPLAsset:forChangeType:shouldGenerateDerivatives:inLibrary:", v13, a4, v7, v11);
  if (objc_msgSend(v13, "hasChangeType:", 16))
  {
    -[PLManagedAsset _cplRelationsForAssetInLibrary:](self, "_cplRelationsForAssetInLibrary:", v11);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setContainerRelations:", v14);

  }
  -[PLManagedAsset modificationDate](self, "modificationDate");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setRecordModificationDate:", v15);

  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      v18 = 138412290;
      v19 = v13;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEBUG, "CPLAssetChange %@", (uint8_t *)&v18, 0xCu);
    }

  }
  return v13;
}

- (void)_updateBurstFlagsForCPLAssetChange:(id)a3 photoLibrary:(id)a4
{
  void *v5;
  void *v6;
  int v7;
  void *v8;
  id v9;

  v9 = a3;
  if (-[PLManagedAsset avalancheKind](self, "avalancheKind") == 1)
  {
    -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = objc_msgSend(v6, "cloudAvalanchePickType");

      objc_msgSend(v9, "setBurstFlags:", -[PLManagedAsset cplBurstFlagsFromPLAvalancheType:](self, "cplBurstFlagsFromPLAvalancheType:", -[PLManagedAsset avalanchePickType](self, "avalanchePickType")) | (int)(v7 & 0xFFFFFFC0));
      -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setBurstIdentifier:", v8);

    }
  }

}

- (unint64_t)cplBurstFlagsFromPLAvalancheType:(int)a3
{
  return a3 & 0x3F;
}

- (int)_avalancheTypeFromCplBurstFlags:(unint64_t)a3
{
  return a3 & 0x3F;
}

- (void)_updateAvalanchePropertiesFromAssetChange:(id)a3
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  NSObject *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  id v20;
  __int16 v21;
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "burstFlags");
  objc_msgSend(v6, "setCloudAvalanchePickType:", v7);
  v8 = -[PLManagedAsset _avalancheTypeFromCplBurstFlags:](self, "_avalancheTypeFromCplBurstFlags:", v7);
  if (-[PLManagedAsset avalanchePickType](self, "avalanchePickType") != (_DWORD)v8)
  {
    -[PLManagedAsset setAvalanchePickType:](self, "setAvalanchePickType:", v8);
    if (+[PLAvalanche shouldOnlyShowAvalanchePicks](PLAvalanche, "shouldOnlyShowAvalanchePicks")
      && !-[PLManagedAsset avalanchePickTypeIsVisible](self, "avalanchePickTypeIsVisible"))
    {
      -[PLManagedAsset setVisibilityState:](self, "setVisibilityState:", 2);
      -[PLManagedAsset setAlbums:](self, "setAlbums:", 0);
    }
    else if (-[PLManagedAsset avalanchePickTypeIsVisible](self, "avalanchePickTypeIsVisible")
           && -[PLManagedAsset visibilityState](self, "visibilityState"))
    {
      -[PLManagedAsset setVisibilityState:](self, "setVisibilityState:", 0);
    }
  }
  objc_msgSend(v5, "burstIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset avalancheUUID](self, "avalancheUUID");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isEqualToString:", v9);

  if ((v11 & 1) == 0)
  {
    -[PLManagedAsset setAvalancheUUID:](self, "setAvalancheUUID:", v9);
    if (v9)
    {
      -[PLManagedAsset setAvalancheKind:](self, "setAvalancheKind:", 1);
    }
    else if (-[PLManagedAsset avalanchePickType](self, "avalanchePickType"))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          NSStringFromSelector(a2);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset uuid](self, "uuid");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = 138413058;
          v16 = v13;
          v17 = 2112;
          v18 = v14;
          v19 = 2112;
          v20 = v5;
          v21 = 1024;
          v22 = -[PLManagedAsset avalanchePickType](self, "avalanchePickType");
          _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "%@: No burst identifier for asset %@ from assetChange %@ with pick type %d", (uint8_t *)&v15, 0x26u);

        }
      }
      -[PLManagedAsset setAvalanchePickType:](self, "setAvalanchePickType:", 0);
      -[PLManagedAsset setAvalancheKind:](self, "setAvalancheKind:", 0);
      -[PLManagedAsset setVisibilityState:](self, "setVisibilityState:", 0);
    }
  }

}

- (void)_updateAssetSubtypeFromCPLAssetSubtype:(unint64_t)a3
{
  void *v5;
  int v6;
  unsigned __int16 v7;
  uint64_t v8;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setCloudKindSubtype:", (__int16)a3);

  v6 = -[PLManagedAsset highFrameRateState](self, "highFrameRateState");
  v7 = v6;
  switch(a3)
  {
    case 0uLL:
      if ((v6 & 1) != 0)
        v7 = v6 & 0xFFFD;
      else
        v7 = v6;
      v8 = (v6 << 31 >> 31) & 0x65;
      break;
    case 1uLL:
      v8 = 1;
      break;
    case 2uLL:
      v8 = 2;
      break;
    case 3uLL:
      v8 = 10;
      break;
    default:
      switch(a3)
      {
        case 'd':
          v7 = (2 * (v6 & 1)) | v6;
          v8 = 101;
          break;
        case 'e':
          v8 = 102;
          break;
        case 'f':
          v8 = 103;
          break;
        case 'g':
          v8 = 104;
          break;
        default:
          v8 = 0;
          break;
      }
      break;
  }
  if (-[PLManagedAsset kindSubtype](self, "kindSubtype") != (_DWORD)v8)
    -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", v8);
  if (-[PLManagedAsset highFrameRateState](self, "highFrameRateState") != v7)
    -[PLManagedAsset setHighFrameRateState:](self, "setHighFrameRateState:", v7);
}

- (unint64_t)cplAssetSubtypeFromPLAssetSubtype:(signed __int16)a3
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  unint64_t v6;
  uint64_t v7;

  if (a3 <= 100)
  {
    v6 = 2;
    v7 = 3;
    if (a3 != 10)
      v7 = 0;
    if (a3 != 2)
      v6 = v7;
    if (a3 == 1)
      return 1;
    else
      return v6;
  }
  else
  {
    switch(a3)
    {
      case 'e':
        if ((-[PLManagedAsset highFrameRateState](self, "highFrameRateState", v3, v4) & 2) != 0)
          result = 100;
        else
          result = 0;
        break;
      case 'f':
        result = 101;
        break;
      case 'g':
        result = 102;
        break;
      case 'h':
        result = 103;
        break;
      default:
        result = 0;
        break;
    }
  }
  return result;
}

- (void)_updateAssetSubtypeForCPLAssetChange:(id)a3
{
  void *v4;
  unint64_t v5;
  id v7;

  v7 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (int)objc_msgSend(v4, "cloudKindSubtype");

  if (v5 - 100 < 4 || v5 <= 3)
    v5 = -[PLManagedAsset cplAssetSubtypeFromPLAssetSubtype:](self, "cplAssetSubtypeFromPLAssetSubtype:", -[PLManagedAsset kindSubtype](self, "kindSubtype"));
  if (!v5)
  {
    if (-[PLManagedAsset spatialType](self, "spatialType"))
    {
      if (-[PLManagedAsset isVideo](self, "isVideo"))
        v5 = 104;
      else
        v5 = 4;
    }
    else
    {
      v5 = 0;
    }
  }
  objc_msgSend(v7, "setAssetSubtype:", v5);

}

- (id)_cplRelationsForAssetInLibrary:(id)a3
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  PLRelationshipOrderKeyManager *v8;
  void *v9;
  PLRelationshipOrderKeyManager *v10;
  id v11;
  PLRelationshipOrderKeyManager *v12;
  void *v13;
  __int128 v14;
  unint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  NSObject *v20;
  PLManagedAsset *v21;
  void *v22;
  void *v23;
  int v24;
  NSObject *v25;
  void *v26;
  int v27;
  const __CFString *v28;
  void *v29;
  __int128 v31;
  id v32;
  PLRelationshipOrderKeyManager *v33;
  void *v34;
  const __CFString *v35;
  void *v36;
  PLManagedAsset *v37;
  _QWORD v38[4];
  id v39;
  uint8_t buf[4];
  id v41;
  __int16 v42;
  PLManagedAsset *v43;
  __int16 v44;
  const __CFString *v45;
  __int16 v46;
  void *v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v4, "managedObjectContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryServicesManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "relationshipOrderKeyManager");
  v8 = (PLRelationshipOrderKeyManager *)objc_claimAutoreleasedReturnValue();

  v36 = v6;
  if (!v8)
  {
    objc_msgSend(v4, "libraryServicesManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = [PLRelationshipOrderKeyManager alloc];
    v38[0] = MEMORY[0x1E0C809B0];
    v38[1] = 3221225472;
    v38[2] = __54__PLManagedAsset_CPL___cplRelationsForAssetInLibrary___block_invoke;
    v38[3] = &unk_1E3670BD0;
    v39 = v9;
    v11 = v9;
    v12 = v10;
    v6 = v36;
    v8 = -[PLRelationshipOrderKeyManager initWithGenerateContextBlock:](v12, "initWithGenerateContextBlock:", v38);

  }
  v33 = v8;
  v34 = v4;
  v37 = self;
  -[PLRelationshipOrderKeyManager albumsAndOrderValuesForAsset:inManagedObjectContext:](v8, "albumsAndOrderValuesForAsset:inManagedObjectContext:", self, v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if ((unint64_t)objc_msgSend(v13, "count") >= 2)
  {
    v15 = 1;
    *(_QWORD *)&v14 = 138412546;
    v31 = v14;
    v32 = v5;
    while (1)
    {
      objc_msgSend(v13, "objectAtIndex:", v15 - 1, v31);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "existingObjectWithID:error:", v16, 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        break;
LABEL_22:

      v15 += 2;
      if (v15 >= objc_msgSend(v13, "count"))
        goto LABEL_27;
    }
    v18 = v17;
    if ((objc_msgSend(v18, "isCameraAlbum") & 1) == 0)
    {
      objc_msgSend(v18, "cloudGUID");
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      if (v19)
      {
        if (objc_msgSend(v18, "kindValue") == 2
          || objc_msgSend(v18, "kindValue") == 4000
          || objc_msgSend(v18, "isProjectAlbumSupportingCloudUpload"))
        {
          v20 = objc_alloc_init(MEMORY[0x1E0D11360]);
          objc_msgSend(v13, "objectAtIndex:", v15);
          v21 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "cloudGUID");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject setContainerIdentifier:](v20, "setContainerIdentifier:", v22);

          -[NSObject setPosition:](v20, "setPosition:", -[PLManagedAsset integerValue](v21, "integerValue"));
          objc_msgSend(v18, "customKeyAsset");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = objc_msgSend(v23, "isEqual:", v37);

          if (v24)
            -[NSObject setKeyAsset:](v20, "setKeyAsset:", 1);
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v25 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
            {
              -[PLManagedAsset cloudAssetGUID](v37, "cloudAssetGUID");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              v27 = -[NSObject isKeyAsset](v20, "isKeyAsset");
              v28 = &stru_1E36789C0;
              if (v27)
                v28 = CFSTR("(keyAsset)");
              v35 = v28;
              objc_msgSend(v18, "cloudGUID");
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138413058;
              v41 = v26;
              v42 = 2112;
              v43 = v21;
              v44 = 2112;
              v45 = v35;
              v46 = 2112;
              v47 = v29;
              _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEBUG, "Sending asset %@ with position: %@ %@ album: %@", buf, 0x2Au);

              v5 = v32;
            }

          }
          objc_msgSend(v5, "addObject:", v20);

        }
        else
        {
          if (*MEMORY[0x1E0D115D0])
            goto LABEL_21;
          __CPLAssetsdOSLogDomain();
          v20 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v31;
            v41 = v18;
            v42 = 2112;
            v43 = v37;
            _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Trying to send non-user created album/folder relation, or album type is unsupported for relation change. album: %@, asset: %@", buf, 0x16u);
          }
        }

        v6 = v36;
      }
    }
LABEL_21:

    goto LABEL_22;
  }
LABEL_27:

  return v5;
}

- (CGSize)_targetSizeForInputSize:(CGSize)a3 maxPixelSize:(unint64_t)a4
{
  double v4;
  float v5;
  double v6;
  float v7;
  double v8;
  CGSize result;

  v4 = 1.0;
  if (a3.height * a3.width > (double)a4)
    v4 = sqrt((double)a4 / (a3.height * a3.width));
  v5 = a3.width * v4;
  v6 = roundf(v5);
  v7 = a3.height * v4;
  v8 = roundf(v7);
  result.height = v8;
  result.width = v6;
  return result;
}

- (id)localResourcePathForMasterResource:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = a3;
  v5 = objc_msgSend(v4, "cplType");
  objc_msgSend(v4, "uniformTypeIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "identifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset localResourcePathForMasterResourceWithCPLType:andUTI:](self, "localResourcePathForMasterResourceWithCPLType:andUTI:", v5, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (id)localResourcePathForMasterResourceWithCPLType:(unint64_t)a3 andUTI:(id)a4
{
  id v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v6 = a4;
  if (a3 <= 0x16 && ((1 << a3) & 0x420100) != 0)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isUBF");

    if (v8)
    {
      -[PLManagedObject pathManager](self, "pathManager");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = +[PLResourceInstaller resourceTypeFromCPLType:assetType:](PLResourceInstaller, "resourceTypeFromCPLType:assetType:", a3, -[PLManagedAsset kind](self, "kind"));
      v11 = objc_alloc(MEMORY[0x1E0D73278]);
      -[PLManagedAsset uuid](self, "uuid");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)objc_msgSend(v11, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v12, -[PLManagedAsset bundleScope](self, "bundleScope"), v6, 0, v10);

      objc_msgSend(v9, "readOnlyUrlWithIdentifier:", v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "path");
    }
    else
    {
      +[PLManagedAsset preferredFileExtensionForType:](PLManagedAsset, "preferredFileExtensionForType:", v6);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "stringByDeletingPathExtension");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "stringByAppendingPathExtension:", v9);
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[PLManagedAsset pathForCPLResourceType:adjusted:](self, "pathForCPLResourceType:adjusted:", a3, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v15;
}

- (void)_applyPropertiesFromCloudMaster:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _BYTE *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  char v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  int v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  uint8_t buf[4];
  id v59;
  __int16 v60;
  uint64_t v61;
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset setMaster:](self, "setMaster:", v4);
  objc_msgSend(v4, "creationDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    if (!v6)
      -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v5);
  }
  else if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v7);

  }
  objc_msgSend(v4, "uniformTypeIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "length"))
  {
    if (!v8)
      goto LABEL_32;
  }
  else
  {
    v9 = (_BYTE *)MEMORY[0x1E0D115D0];
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v59 = v4;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "Missing UTI from cloudMaster %@, attempting to get it from resources", buf, 0xCu);
      }

    }
    objc_msgSend(v4, "rm_cloudResourcesForResourceType:", 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "firstObject");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v12)
    {
      objc_msgSend(v12, "uniformTypeIdentifier");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "identifier");
      v14 = objc_claimAutoreleasedReturnValue();

      if (v14)
      {
        if (!*v9)
        {
          __CPLAssetsdOSLogDomain();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            v59 = v4;
            v60 = 2112;
            v61 = v14;
            _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Setting UTI for cloudMaster %@ to %@", buf, 0x16u);
          }

        }
        objc_msgSend(v4, "setUniformTypeIdentifier:", v14);
      }
      else
      {
        if (!*v9)
        {
          __CPLAssetsdOSLogDomain();
          v17 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            v59 = v12;
            _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Missing UTI from original resource %@", buf, 0xCu);
          }

        }
        v14 = 0;
      }
    }
    else
    {
      if (!*v9)
      {
        __CPLAssetsdOSLogDomain();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v59 = v4;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Missing original resource from %@", buf, 0xCu);
        }

      }
      v14 = (uint64_t)v8;
    }

    v8 = (void *)v14;
    if (!v14)
      goto LABEL_32;
  }
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isEqualToString:", v8);

  if ((v19 & 1) != 0)
  {
LABEL_32:
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v20 = objc_claimAutoreleasedReturnValue();

    v8 = (void *)v20;
    goto LABEL_34;
  }
  -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v8);
  -[PLManagedAsset updateAssetKindFromUniformTypeIdentifier](self, "updateAssetKindFromUniformTypeIdentifier");
LABEL_34:
  if (-[PLManagedAsset kind](self, "kind") == 3)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v59 = v22;
        v60 = 2112;
        v61 = (uint64_t)v8;
        _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "Unknown kind for asset %@ with UTI %@, attempting to promote from cloud master", buf, 0x16u);

      }
    }
    -[PLManagedAsset attemptPromoteFromUnknownKindUsingCloudMaster](self, "attemptPromoteFromUnknownKindUsingCloudMaster");
  }
  objc_msgSend(v4, "originalFilename");
  v23 = objc_claimAutoreleasedReturnValue();
  if (v23)
  {
    v24 = (void *)v23;
    objc_msgSend(v4, "originalFilename");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset originalFilename](self, "originalFilename");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v25, "isEqualToString:", v26);

    if ((v27 & 1) == 0)
    {
      objc_msgSend(v4, "originalFilename");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setOriginalFilename:](self, "setOriginalFilename:", v28);

    }
  }
  v29 = -[PLManagedAsset originalOrientation](self, "originalOrientation");
  if (v29 != objc_msgSend(v4, "originalOrientation"))
    -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", objc_msgSend(v4, "originalOrientation"));
  -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pathManager](self, "pathManager");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = objc_msgSend(v31, "isUBF");

  if (v32)
  {
    -[PLManagedAsset originalFilename](self, "originalFilename");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:originalFilename:](self, "setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:originalFilename:", v8, v33);
LABEL_55:

    goto LABEL_56;
  }
  -[PLManagedAsset directory](self, "directory");
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v34)
  {
    -[PLManagedAsset photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:](self, "photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:", v30);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedObject pathManager](self, "pathManager");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v35, 31, -[PLManagedAsset bundleScope](self, "bundleScope"));
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setDirectory:](self, "setDirectory:", v37);

  }
  -[PLManagedAsset filename](self, "filename");
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v38)
  {
    -[PLManagedAsset originalFilename](self, "originalFilename");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "pathExtension");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "uppercaseString");
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    if (+[PLManagedAsset isKnownFileExtension:](PLManagedAsset, "isKnownFileExtension:", v33)
      || !objc_msgSend(v33, "length"))
    {
      +[PLManagedAsset preferredFileExtensionForType:](PLManagedAsset, "preferredFileExtensionForType:", v8);
      v41 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v41 = v33;
    }
    v42 = v41;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), v30, v41);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setFilename:](self, "setFilename:", v43);

    goto LABEL_55;
  }
LABEL_56:
  objc_msgSend(v4, "rm_cloudResourcesForResourceType:", 18);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v45 = objc_msgSend(v44, "count");

  if (v45)
    -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 2);
  objc_msgSend(v4, "rm_cloudResourcesForResourceType:", 23);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = objc_msgSend(v46, "count");

  if (v47)
    -[PLManagedAsset setCameraProcessingAdjustmentState:](self, "setCameraProcessingAdjustmentState:", -[PLManagedAsset cameraProcessingAdjustmentState](self, "cameraProcessingAdjustmentState") | 1);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "setImportedBy:", objc_msgSend(v4, "importedBy"));

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "importedByBundleIdentifier");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "setImportedByBundleIdentifier:", v50);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "importedByDisplayName");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "setImportedByDisplayName:", v52);

  objc_msgSend((id)objc_opt_class(), "processMediaMetadataForAsset:withCloudMaster:", self, v4);
  objc_msgSend((id)objc_opt_class(), "fixMissingOriginalDateCreatedIfNeededForAsset:withCloudMaster:", self, v4);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "scopedIdentifier");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "identifier");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "setOriginalStableHash:", v55);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "originatingAssetIdentifier");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "setOriginatingAssetIdentifier:", v57);

}

- (void)setVideoInfoOnMasterFromAVAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  float v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset master](self, "master");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(v4, "plVideoCodecName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset master](self, "master");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setCodecName:", v6);

    objc_msgSend(MEMORY[0x1E0D75130], "tracksWithMediaType:forAsset:", *MEMORY[0x1E0C8A808], v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "count"))
    {
      objc_msgSend(v8, "objectAtIndex:", 0);
      v9 = objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset master](self, "master");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject nominalFrameRate](v9, "nominalFrameRate");
      LODWORD(v12) = llroundf(v11);
      objc_msgSend(v10, "setVideoFrameRate:", v12);

    }
    else
    {
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_8:

        goto LABEL_9;
      }
      __CPLAssetsdOSLogDomain();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset master](self, "master");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "scopedIdentifier");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 138543362;
        v16 = v14;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "setVideoInfoFromAVAsset: videoTrack doesn't have a track of type AVMediaTypeVideo for %{public}@", (uint8_t *)&v15, 0xCu);

      }
    }

    goto LABEL_8;
  }
LABEL_9:

}

- (BOOL)_location:(id)a3 isEqualToLocationForUpdating:(id)a4
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  char v28;

  v5 = a3;
  v6 = a4;
  v7 = v6;
  if (v5 == v6)
  {
    v28 = 1;
  }
  else if ((v5 == 0) == (v6 != 0))
  {
    v28 = 0;
  }
  else
  {
    objc_msgSend(v5, "timestamp");
    v8 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "timestamp");
    v9 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "coordinate");
    v11 = v10;
    objc_msgSend(v7, "coordinate");
    if (v11 != v12)
      goto LABEL_15;
    objc_msgSend(v5, "coordinate");
    v14 = v13;
    objc_msgSend(v7, "coordinate");
    if (v14 != v15)
      goto LABEL_15;
    objc_msgSend(v5, "altitude");
    v17 = v16;
    objc_msgSend(v7, "altitude");
    if (v17 != v18)
      goto LABEL_15;
    objc_msgSend(v5, "horizontalAccuracy");
    v20 = v19;
    objc_msgSend(v7, "horizontalAccuracy");
    if (v20 != v21)
      goto LABEL_15;
    objc_msgSend(v5, "verticalAccuracy");
    v23 = v22;
    objc_msgSend(v7, "verticalAccuracy");
    if (v23 == v24 && (objc_msgSend(v5, "course"), v26 = v25, objc_msgSend(v7, "course"), v26 == v27))
    {
      if (v8 | v9)
      {
        v28 = 0;
        if (v8 && v9)
          v28 = objc_msgSend((id)v8, "isEqual:", v9);
      }
      else
      {
        v28 = 1;
      }
    }
    else
    {
LABEL_15:
      v28 = 0;
    }

  }
  return v28;
}

- (void)applyPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  id v6;
  int v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  char v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  char v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char v44;
  void *v45;
  void *v46;
  BOOL v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  int v59;
  void *v60;
  int v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  char v68;
  void *v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  char v74;
  void *v75;
  uint64_t v76;
  void *v77;
  void *v78;
  void *v79;
  char v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  void *v88;
  void *v89;
  NSObject *v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void *v99;
  void *v100;
  void *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  void *v105;
  char v106;
  void *v107;
  void *v108;
  uint64_t v109;
  void *v110;
  char v111;
  int v112;
  uint64_t v113;
  int v114;
  int v115;
  void *v116;
  uint64_t v117;
  void *v118;
  char v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  _BOOL4 v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  PLManagedAsset *v136;
  _BOOL4 v137;
  id obj;
  id v139;
  CMTime v140;
  CMTime v141;
  CMTime v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  CMTime buf;
  void *v148;
  _BYTE v149[128];
  uint64_t v150;

  v150 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v139 = a4;
  v7 = -[PLManagedAsset isFavorite](self, "isFavorite");
  if (v7 != objc_msgSend(v6, "isFavorite"))
    -[PLManagedAsset setFavorite:](self, "setFavorite:", objc_msgSend(v6, "isFavorite"));
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "scopedIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "identifier");
  v10 = objc_claimAutoreleasedReturnValue();

  if (!v10 && !*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.value) = 138412290;
      *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v6;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "No identifier for assetChange %@", (uint8_t *)&buf, 0xCu);
    }

  }
  objc_msgSend(v6, "timeZoneName");
  v12 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "timeZoneName");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isEqualToString:", v12);

  if ((v14 & 1) == 0)
    objc_msgSend(v8, "setTimeZoneName:", v12);
  objc_msgSend(v6, "timeZoneOffset");
  v15 = objc_claimAutoreleasedReturnValue();
  v132 = (void *)v12;
  if (v15)
  {
    objc_msgSend(v8, "timeZoneOffset");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16 != (void *)v15)
    {
      objc_msgSend(v8, "setTimeZoneOffset:", v15);
LABEL_14:
      objc_msgSend((id)objc_opt_class(), "fixMissingOriginalTimezoneIfNeededForAsset:", self);
      goto LABEL_15;
    }
  }
  if ((v14 & 1) == 0)
    goto LABEL_14;
LABEL_15:
  v131 = (void *)v15;
  if (v10)
  {
    -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
    v17 = objc_claimAutoreleasedReturnValue();
    if (!v17
      || (v18 = (void *)v17,
          -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID"),
          v19 = (void *)objc_claimAutoreleasedReturnValue(),
          v20 = objc_msgSend(v19, "isEqualToString:", v10),
          v19,
          v18,
          (v20 & 1) == 0))
    {
      -[PLManagedAsset setCloudAssetGUID:](self, "setCloudAssetGUID:", v10);
    }
  }
  v133 = (void *)v10;
  objc_msgSend(v6, "recordModificationDate");
  v21 = objc_claimAutoreleasedReturnValue();
  if (v21)
  {
    v22 = (void *)v21;
    -[PLManagedAsset modificationDate](self, "modificationDate");
    v23 = objc_claimAutoreleasedReturnValue();
    if (v23)
    {
      v24 = (void *)v23;
      -[PLManagedAsset modificationDate](self, "modificationDate");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "recordModificationDate");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = objc_msgSend(v25, "isEqualToDate:", v26);

      if ((v27 & 1) != 0)
        goto LABEL_25;
    }
    else
    {

    }
    objc_msgSend(v6, "recordModificationDate");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setModificationDate:](self, "setModificationDate:", v28);

  }
LABEL_25:
  objc_msgSend(v6, "lastSharedDate");
  v29 = objc_claimAutoreleasedReturnValue();
  if (!v29)
    goto LABEL_31;
  v30 = (void *)v29;
  -[PLManagedAsset lastSharedDate](self, "lastSharedDate");
  v31 = objc_claimAutoreleasedReturnValue();
  if (!v31)
  {

    goto LABEL_30;
  }
  v32 = (void *)v31;
  -[PLManagedAsset lastSharedDate](self, "lastSharedDate");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "lastSharedDate");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = objc_msgSend(v33, "compare:", v34);

  if (v35 == 1)
  {
LABEL_30:
    objc_msgSend(v6, "lastSharedDate");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setLastSharedDate:](self, "setLastSharedDate:", v36);

  }
LABEL_31:
  objc_msgSend(v6, "assetDate");
  v37 = objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (v37)
  {
    if (!v38)
    {
LABEL_35:
      -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v37);
      goto LABEL_38;
    }
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = objc_msgSend(v39, "isEqualToDate:", v37);

    if ((v40 & 1) == 0)
    {
      -[PLManagedAsset didSetCustomDateCreated](self, "didSetCustomDateCreated");
      goto LABEL_35;
    }
  }
  else if (!v38)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v41);

  }
LABEL_38:
  v130 = (void *)v37;
  objc_msgSend(v6, "addedDate");
  v42 = objc_claimAutoreleasedReturnValue();
  if (v42)
  {
    -[PLManagedAsset addedDate](self, "addedDate");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = objc_msgSend(v43, "isEqualToDate:", v42);

    if ((v44 & 1) == 0)
      -[PLManagedAsset setAddedDate:](self, "setAddedDate:", v42);
  }
  v129 = (void *)v42;
  -[PLManagedAsset location](self, "location");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "location");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = -[PLManagedAsset _location:isEqualToLocationForUpdating:](self, "_location:isEqualToLocationForUpdating:", v45, v46);

  if (!v47)
  {
    objc_msgSend(v6, "location");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setLocation:](self, "setLocation:", v48);

  }
  v49 = (void *)objc_opt_class();
  objc_msgSend(v6, "placeAnnotation");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "_dataFromCPLPlaceAnnotation:", v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "placeAnnotationData");
  v52 = objc_claimAutoreleasedReturnValue();
  if (v51 != (void *)v52 && (objc_msgSend(v51, "isEqualToData:", v52) & 1) == 0)
    objc_msgSend(v8, "setPlaceAnnotationData:", v51);
  v128 = v51;
  objc_msgSend(v6, "keywords");
  v53 = (void *)objc_claimAutoreleasedReturnValue();

  if (v53)
  {
    +[PLKeywordManager keywordsForAsset:](PLKeywordManager, "keywordsForAsset:", self);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v55 = (void *)MEMORY[0x1E0C99E60];
    objc_msgSend(v6, "keywords");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "setWithArray:", v56);
    v57 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(v54, "isEqualToSet:", v57) & 1) == 0)
    {
      objc_msgSend(v139, "keywordManager");
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v58, "setKeywords:forAsset:", v57, self);

    }
  }
  v59 = objc_msgSend(v6, "isHidden");
  if (v59 != -[PLManagedAsset hidden](self, "hidden"))
    -[PLManagedAsset setHidden:](self, "setHidden:", objc_msgSend(v6, "isHidden"));
  if (_os_feature_enabled_impl())
  {
    if (-[PLManagedAsset isInserted](self, "isInserted"))
    {
      if (-[PLManagedAsset expectedBundleScopeBasedOnAssetLockingProperties](self, "expectedBundleScopeBasedOnAssetLockingProperties") == 4&& !-[PLManagedAsset bundleScope](self, "bundleScope")&& !-[PLManagedAsset anyInternalResourceIsLocal](self, "anyInternalResourceIsLocal"))
      {
        -[PLManagedAsset setBundleScope:](self, "setBundleScope:", 4);
        -[PLManagedObject pathManager](self, "pathManager");
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        v61 = objc_msgSend(v60, "isDCIM");

        if (v61)
        {
          -[PLManagedObject pathManager](self, "pathManager");
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLLockedResourceTransferRecovery assetDirectoryForAsset:bundleScope:pathManager:](PLLockedResourceTransferRecovery, "assetDirectoryForAsset:bundleScope:pathManager:", self, 4, v62);
          v63 = (void *)objc_claimAutoreleasedReturnValue();

          -[PLManagedAsset setDirectory:](self, "setDirectory:", v63);
        }
      }
    }
  }
  -[PLManagedAsset longDescription](self, "longDescription");
  v64 = objc_claimAutoreleasedReturnValue();
  if (!v64)
    goto LABEL_61;
  v65 = (void *)v64;
  -[PLManagedAsset longDescription](self, "longDescription");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "extendedDescription");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v68 = objc_msgSend(v66, "isEqualToString:", v67);

  if ((v68 & 1) == 0)
  {
LABEL_61:
    objc_msgSend(v6, "extendedDescription");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setLongDescription:](self, "setLongDescription:", v69);

  }
  v134 = v8;
  -[PLManagedAsset accessibilityDescription](self, "accessibilityDescription");
  v70 = objc_claimAutoreleasedReturnValue();
  if (!v70)
    goto LABEL_64;
  v71 = (void *)v70;
  -[PLManagedAsset accessibilityDescription](self, "accessibilityDescription");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "accessibilityDescription");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  v74 = objc_msgSend(v72, "isEqualToString:", v73);

  if ((v74 & 1) == 0)
  {
LABEL_64:
    objc_msgSend(v6, "accessibilityDescription");
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setAccessibilityDescription:](self, "setAccessibilityDescription:", v75);

  }
  v127 = (void *)v52;
  -[PLManagedAsset title](self, "title");
  v76 = objc_claimAutoreleasedReturnValue();
  if (!v76)
    goto LABEL_67;
  v77 = (void *)v76;
  -[PLManagedAsset title](self, "title");
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "caption");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v80 = objc_msgSend(v78, "isEqualToString:", v79);

  if ((v80 & 1) == 0)
  {
LABEL_67:
    objc_msgSend(v6, "caption");
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setTitle:](self, "setTitle:", v81);

  }
  -[PLManagedAsset _updateAvalanchePropertiesFromAssetChange:](self, "_updateAvalanchePropertiesFromAssetChange:", v6);
  -[PLManagedAsset _updateAssetSubtypeFromCPLAssetSubtype:](self, "_updateAssetSubtypeFromCPLAssetSubtype:", objc_msgSend(v6, "assetSubtype"));
  -[PLManagedAsset updateKindSubtypeIfScreenshot](self, "updateKindSubtypeIfScreenshot");
  v136 = self;
  -[PLManagedAsset updatePanoramosityWithMetadata:](self, "updatePanoramosityWithMetadata:", 0);
  v135 = v6;
  objc_msgSend(v6, "people");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v82, "count"));
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v143 = 0u;
  v144 = 0u;
  v145 = 0u;
  v146 = 0u;
  obj = v82;
  v84 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v143, v149, 16);
  if (v84)
  {
    v85 = v84;
    v86 = *(_QWORD *)v144;
    do
    {
      for (i = 0; i != v85; ++i)
      {
        if (*(_QWORD *)v144 != v86)
          objc_enumerationMutation(obj);
        v88 = *(void **)(*((_QWORD *)&v143 + 1) + 8 * i);
        objc_msgSend(v88, "personIdentifier");
        v89 = (void *)objc_claimAutoreleasedReturnValue();
        if (v89)
        {
          objc_msgSend(v88, "extraProperties");
          v90 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v90, 200, 0, 0);
          v91 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLPersonReference insertIntoPhotoLibrary:personUUID:personData:](PLPersonReference, "insertIntoPhotoLibrary:personUUID:personData:", v139, v89, v91);
          v92 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v83, "addObject:", v92);

        }
        else
        {
          if (*MEMORY[0x1E0D115D0])
            goto LABEL_79;
          __CPLAssetsdOSLogDomain();
          v90 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf.value) = 138412290;
            *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v88;
            _os_log_impl(&dword_199541000, v90, OS_LOG_TYPE_ERROR, "Found a person reference %@ without personUUID, skipping update", (uint8_t *)&buf, 0xCu);
          }
        }

LABEL_79:
      }
      v85 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v143, v149, 16);
    }
    while (v85);
  }

  objc_msgSend(v134, "setPersonReferences:", v83);
  v93 = objc_msgSend(v135, "playCount");
  if (v93 >= 1)
    objc_msgSend(v134, "setPlayCount:", v93);
  v94 = objc_msgSend(v135, "shareCount");
  if (v94)
    objc_msgSend(v134, "setShareCount:", v94);
  v95 = objc_msgSend(v135, "viewCount");
  if (v95 >= 1)
    objc_msgSend(v134, "setViewCount:", v95);
  if (objc_msgSend(MEMORY[0x1E0D11348], "serverSupportsLastViewedDate"))
  {
    objc_msgSend(v135, "lastViewedDate");
    v96 = objc_claimAutoreleasedReturnValue();
    if (v96)
    {
      v97 = (void *)v96;
      objc_msgSend(v134, "lastViewedDate");
      v98 = objc_claimAutoreleasedReturnValue();
      if (v98)
      {
        v99 = (void *)v98;
        objc_msgSend(v134, "lastViewedDate");
        v100 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v135, "lastViewedDate");
        v101 = (void *)objc_claimAutoreleasedReturnValue();
        v102 = objc_msgSend(v100, "compare:", v101);

        if (v102 != 1)
          goto LABEL_94;
      }
      else
      {

      }
      objc_msgSend(v135, "lastViewedDate");
      v103 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v134, "setLastViewedDate:", v103);

    }
  }
LABEL_94:
  objc_msgSend(v135, "syndicationIdentifier");
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  if (v104)
  {
    objc_msgSend(v134, "syndicationIdentifier");
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    v106 = objc_msgSend(v105, "isEqualToString:", v104);

    if ((v106 & 1) == 0)
    {
      if ((objc_msgSend(v134, "setSyndicationIdentifier:", v104),
            !-[PLManagedAsset isPlaceholderAsset](v136, "isPlaceholderAsset"))
        && !-[PLManagedAsset isMomentSharedAsset](v136, "isMomentSharedAsset")
        || -[PLManagedAsset isPlaceholderAsset](v136, "isPlaceholderAsset")
        && (-[PLManagedAsset momentShare](v136, "momentShare"),
            v107 = (void *)objc_claimAutoreleasedReturnValue(),
            v107,
            !v107))
      {
        -[PLManagedAsset additionalAttributes](v136, "additionalAttributes");
        v108 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v108, "syndicationIdentifier");
        v109 = objc_claimAutoreleasedReturnValue();
        if (v109)
        {
          v110 = (void *)v109;
          v111 = -[PLManagedAsset syndicationState](v136, "syndicationState");

          if ((v111 & 2) == 0)
            -[PLManagedAsset syndicatedAssetDidSaveToUserLibrary](v136, "syndicatedAssetDidSaveToUserLibrary");
        }
        else
        {

        }
      }
    }
  }
  if ((_os_feature_enabled_impl() & 1) == 0)
    PLLibraryScopeAssetSetLocalSharingStateValueFromSyncableShareStateValue(objc_msgSend(v135, "sharedLibrarySharingState"), v136);
  objc_msgSend(v134, "setViewPresentation:", objc_msgSend(v135, "viewPresentation"));
  v112 = objc_msgSend(v135, "inExpunged");
  if ((v112 & 1) != 0)
  {
    v137 = 0;
    v126 = 0;
    v113 = 2;
  }
  else
  {
    v114 = objc_msgSend(v135, "inTrash");
    v137 = v114 == 0;
    v126 = v114 != 0;
    v113 = v114 != 0;
  }
  v115 = -[PLManagedAsset trashedState](v136, "trashedState");
  -[PLManagedAsset applyTrashedState:withTrashedReason:expungeReasonFromClient:](v136, "applyTrashedState:withTrashedReason:expungeReasonFromClient:", v113, objc_msgSend(v135, "trashedReason"), 0);
  objc_msgSend(v135, "dateDeleted");
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setTrashedDate:](v136, "setTrashedDate:", v116);

  if (objc_msgSend(MEMORY[0x1E0D11348], "serverSupportsDeletedByUserIdentifier"))
  {
    objc_msgSend(v135, "deletedByUserIdentifier");
    v117 = objc_claimAutoreleasedReturnValue();
    if (v117)
    {
      v118 = (void *)v117;
      v119 = _os_feature_enabled_impl();

      if ((v119 & 1) == 0)
      {
        objc_msgSend(v135, "deletedByUserIdentifier");
        v125 = (void *)objc_claimAutoreleasedReturnValue();
        v148 = v125;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v148, 1);
        v120 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset libraryScope](v136, "libraryScope");
        v121 = (void *)objc_claimAutoreleasedReturnValue();
        +[PLShareParticipant participantsWithUserIdentifiers:inScope:inPhotoLibrary:](PLShareParticipant, "participantsWithUserIdentifiers:inScope:inPhotoLibrary:", v120, v121, v139);
        v122 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v122, "count"))
        {
          objc_msgSend(v122, "firstObject");
          v123 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset setTrashedByParticipant:](v136, "setTrashedByParticipant:", v123);

        }
      }
    }
  }
  if (v104 && v115 != (_DWORD)v113)
  {
    if (v137)
    {
      -[PLManagedAsset restoreSyndicatedAsset](v136, "restoreSyndicatedAsset");
    }
    else if ((v112 | v126) == 1)
    {
      -[PLManagedAsset rejectSyndicatedAsset](v136, "rejectSyndicatedAsset");
    }
  }
  memset(&buf, 0, sizeof(buf));
  CMTimeMake(&buf, objc_msgSend(v135, "videoComplementDurationValue"), objc_msgSend(v135, "videoComplementDurationTimescale"));
  memset(&v142, 0, sizeof(v142));
  CMTimeMake(&v142, objc_msgSend(v135, "videoComplementImageDisplayValue"), objc_msgSend(v135, "videoComplementImageDisplayTimescale"));
  objc_msgSend(v135, "mediaGroupIdentifier");
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v141 = buf;
  v140 = v142;
  -[PLManagedAsset updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:](v136, "updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:", v124, &v141, &v140);

  -[PLManagedAsset setVideoCpVisibilityState:](v136, "setVideoCpVisibilityState:", (unsigned __int16)objc_msgSend(v135, "videoComplementVisibilityState"));
}

- (void)applySharingPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  NSObject *v6;
  id v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  _BYTE *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  void *v29;
  void *v30;
  uint64_t v31;
  int v32;
  NSObject *v33;
  __int16 v34;
  NSObject *v35;
  __int16 v36;
  NSObject *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[NSObject sharingScopeIdentifier](v6, "sharingScopeIdentifier");
  v8 = objc_claimAutoreleasedReturnValue();
  if (!v8)
  {
    if (-[PLManagedAsset hasLibraryScope](self, "hasLibraryScope"))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset libraryScope](self, "libraryScope");
          v17 = objc_claimAutoreleasedReturnValue();
          v32 = 138412546;
          v33 = v17;
          v34 = 2112;
          v35 = v6;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "Clearing library scope %@ for asset change %@", (uint8_t *)&v32, 0x16u);

        }
      }
      -[PLManagedAsset removeLibraryScopeAndContributors](self, "removeLibraryScopeAndContributors");
LABEL_41:
      -[NSObject updateSharingContributorUserIdentifiers](v6, "updateSharingContributorUserIdentifiers");
      v18 = objc_claimAutoreleasedReturnValue();
      v23 = -[NSObject count](v18, "count");
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "libraryScopeAssetContributorsToUpdate");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = v25;
      if (v23)
      {
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v18);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v28 = objc_msgSend(v26, "isEqualToSet:", v27);

        if (v28)
        {
          objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v18);
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "setLibraryScopeAssetContributorsToUpdate:", v29);

LABEL_46:
        }
      }
      else
      {
        v31 = objc_msgSend(v25, "count");

        if (v31)
        {
          -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "setLibraryScopeAssetContributorsToUpdate:", 0);
          goto LABEL_46;
        }
      }
LABEL_47:

      goto LABEL_48;
    }
    if (*MEMORY[0x1E0D115D0])
      goto LABEL_41;
    __CPLAssetsdOSLogDomain();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      v32 = 138412290;
      v33 = v6;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEBUG, "Does not need to clear library scope for asset change %@", (uint8_t *)&v32, 0xCu);
    }
LABEL_40:

    goto LABEL_41;
  }
  objc_msgSend(v7, "managedObjectContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLShare shareWithScopeIdentifier:includeTrashed:inManagedObjectContext:](PLLibraryScope, "shareWithScopeIdentifier:includeTrashed:inManagedObjectContext:", v8, 1, v9);
  v10 = objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    -[NSObject sharingContributorUserIdentifiers](v6, "sharingContributorUserIdentifiers");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = -[NSObject count](v11, "count");
    v13 = (_BYTE *)MEMORY[0x1E0D115D0];
    if (v12)
    {
      +[PLShareParticipant participantsWithUserIdentifiers:inScope:inPhotoLibrary:](PLShareParticipant, "participantsWithUserIdentifiers:inScope:inPhotoLibrary:", v11, v10, v7);
      v14 = objc_claimAutoreleasedReturnValue();
      if (!-[NSObject count](v14, "count") && !*v13)
      {
        __CPLAssetsdOSLogDomain();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          v32 = 138412546;
          v33 = v11;
          v34 = 2112;
          v35 = v6;
          _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Failed to fetch a local library scope contributors for sharing contributor user identifier %@ of asset change %@", (uint8_t *)&v32, 0x16u);
        }

      }
    }
    else
    {
      v14 = 0;
    }
    if (-[NSObject count](v14, "count"))
    {
      if (!*v13)
      {
        __CPLAssetsdOSLogDomain();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          v32 = 138412802;
          v33 = v10;
          v34 = 2112;
          v35 = v14;
          v36 = 2112;
          v37 = v6;
          _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_DEFAULT, "Setting library scope %@ and originator %@ for asset change %@", (uint8_t *)&v32, 0x20u);
        }

      }
      objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v14);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset setLibraryScope:withContributors:](self, "setLibraryScope:withContributors:", v10, v20);

    }
    else if (-[NSObject count](v11, "count"))
    {
      if (!*v13)
      {
        __CPLAssetsdOSLogDomain();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          v32 = 138412546;
          v33 = v10;
          v34 = 2112;
          v35 = v6;
          _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEFAULT, "Setting library scope %@ with no originators for asset change %@", (uint8_t *)&v32, 0x16u);
        }

      }
      -[PLManagedAsset setLibraryScope:withContributors:](self, "setLibraryScope:withContributors:", v10, 0);
    }
    else
    {
      if (!*v13)
      {
        __CPLAssetsdOSLogDomain();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          v32 = 138412546;
          v33 = v8;
          v34 = 2112;
          v35 = v6;
          _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_DEFAULT, "Setting library scope %@ and originator as current user for asset change %@", (uint8_t *)&v32, 0x16u);
        }

      }
      -[PLManagedAsset setLibraryScopeWithCurrentUserAsContributor:](self, "setLibraryScopeWithCurrentUserAsContributor:", v10);
    }
    PLLibraryScopeAssetSetAddToSharedZoneState(1, self);

    goto LABEL_40;
  }
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      v32 = 138412546;
      v33 = v8;
      v34 = 2112;
      v35 = v6;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Failed to fetch a local library scope for sharing scope identifier %@ of asset change %@", (uint8_t *)&v32, 0x16u);
    }
    goto LABEL_47;
  }
LABEL_48:

}

- (void)applyFacesFromAssetChange:(id)a3 inSyncContext:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  id v9;

  v6 = a4;
  v9 = a3;
  objc_msgSend(v6, "photoLibrary");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCPLFaceRebuildSupport rebuildDeferredFacesForAsset:inManagedObjectContext:](PLCPLFaceRebuildSupport, "rebuildDeferredFacesForAsset:inManagedObjectContext:", self, v8);

  +[PLCPLFacePullSupport applyFacesChangesFromAssetChange:toAsset:inSyncContext:](PLCPLFacePullSupport, "applyFacesChangesFromAssetChange:toAsset:inSyncContext:", v9, self, v6);
}

- (int64_t)_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:(unint64_t)a3
{
  return a3 == 1;
}

- (void)markAsUnavailableCloudResourceOfType:(unint64_t)a3
{
  id v3;

  -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "markAsNotLocallyAvailable");

}

- (BOOL)_isResourceType:(unint64_t)a3 inResources:(id)a4
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  BOOL v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v5 = a4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        if (objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * i), "resourceType", (_QWORD)v12) == a3)
        {
          v10 = 1;
          goto LABEL_11;
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v7)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

- (void)_removeAdjustmentDataResources
{
  void *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t i;
  void *v10;
  NSObject *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t buf[4];
  void *v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v20, 16);
  if (v4)
  {
    v6 = v4;
    v7 = *(_QWORD *)v15;
    v8 = (_BYTE *)MEMORY[0x1E0D115D0];
    *(_QWORD *)&v5 = 138412290;
    v13 = v5;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v3);
        v10 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
        if (objc_msgSend(v10, "cplType", v13) == 13)
        {
          if (!*v8)
          {
            __CPLAssetsdOSLogDomain();
            v11 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = v13;
              v19 = v10;
              _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Deleting the CPLResourceTypeAdjustmentData: %@", buf, 0xCu);
            }

          }
          -[PLManagedAsset removeLocalFileForResource:](self, "removeLocalFileForResource:", v10);
          -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "deleteObject:", v10);

        }
      }
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v20, 16);
    }
    while (v6);
  }

}

- (void)removeLocalFileForResource:(id)a3
{
  -[PLManagedAsset removeLocalFileForResource:allowDCIMPath:](self, "removeLocalFileForResource:allowDCIMPath:", a3, 0);
}

- (void)removeLocalFileForResource:(id)a3 allowDCIMPath:(BOOL)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _BYTE *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  char v15;
  id v16;
  NSObject *v17;
  const char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint32_t v21;
  id v22;
  uint8_t buf[4];
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "pathManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "photoDirectoryWithType:", 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEBUG, "Removing local resource file for %@", buf, 0xCu);
    }

  }
  objc_msgSend(v6, "cplFileURL");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "path");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (!a4 && (objc_msgSend(v14, "hasPrefix:", v10) & 1) != 0
    || !objc_msgSend(v7, "fileExistsAtPath:", v14))
  {
    if (*v11)
    {
      v16 = 0;
      goto LABEL_21;
    }
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Skip removing local resource file for %@", buf, 0xCu);
    }
    v16 = 0;
    goto LABEL_20;
  }
  v22 = 0;
  v15 = objc_msgSend(v7, "removeItemAtPath:error:", v14, &v22);
  v16 = v22;
  if ((v15 & 1) != 0)
  {
    if (!*v11)
    {
      __CPLAssetsdOSLogDomain();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v24 = v6;
        v18 = "Removed local resource file for %@";
        v19 = v17;
        v20 = OS_LOG_TYPE_DEBUG;
        v21 = 12;
LABEL_19:
        _os_log_impl(&dword_199541000, v19, v20, v18, buf, v21);
        goto LABEL_20;
      }
      goto LABEL_20;
    }
  }
  else if (!*v11)
  {
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v24 = v6;
      v25 = 2112;
      v26 = v16;
      v18 = "Can't remove local resource file for %@. Error: %@";
      v19 = v17;
      v20 = OS_LOG_TYPE_ERROR;
      v21 = 22;
      goto LABEL_19;
    }
LABEL_20:

  }
LABEL_21:

}

- (void)postProcessResourceDependentPropertyChangesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  id v5;
  __int16 v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (objc_msgSend(v5, "hasChangeType:", 2))
  {
    v6 = objc_msgSend(v5, "videoComplementVisibilityState");
    if ((v6 & 8) != 0)
    {
      -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", 19);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if (v7)
      {

      }
      else if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments")
             || (-[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 18),
                 v10 = (void *)objc_claimAutoreleasedReturnValue(),
                 v10,
                 !v10))
      {
        -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", v6 & 0xFFF7);
LABEL_16:
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v11 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
          {
            -[PLManagedAsset uuid](self, "uuid");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            v13 = 138412290;
            v14 = v12;
            _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEBUG, "Updated full editing support for asset %@", (uint8_t *)&v13, 0xCu);

          }
        }
        goto LABEL_20;
      }
    }
  }
  if (objc_msgSend(v5, "hasChangeType:", 8))
  {
    v8 = -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState");
    if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
    {
      if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments") && (v8 & 8) == 0)
      {
        -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", 19);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        if (v9)
          -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", v8 | 8u);

        if (v9)
          goto LABEL_16;
      }
    }
  }
LABEL_20:
  if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
    -[PLManagedAsset updatePlaybackStyleWithLivePhotoPlayability:](self, "updatePlaybackStyleWithLivePhotoPlayability:", -[PLManagedAsset canPlayPhotoIris](self, "canPlayPhotoIris"));

}

- (BOOL)savedAssetTypeIsSupportedForUpload
{
  objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  return PLValidatedSavedAssetTypeApplies();
}

- (id)_pathForSidecarResource:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v4 = a3;
  -[PLManagedObject pathManager](self, "pathManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isUBF"))
  {
    if (!v4)
    {
      v14 = 0;
      goto LABEL_7;
    }
    v6 = objc_alloc(MEMORY[0x1E0D73278]);
    -[PLManagedAsset uuid](self, "uuid");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[PLManagedAsset bundleScope](self, "bundleScope");
    objc_msgSend(v4, "uniformTypeIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "identifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v6, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v7, v8, v10, 0, objc_msgSend(v4, "resourceType"));

    objc_msgSend(v5, "readOnlyUrlWithIdentifier:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v4, "sidecarRepresentation");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "fileURL");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v13 = v12;
  objc_msgSend(v12, "path");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_7:
  return v14;
}

- (id)pathForCPLResourceType:(unint64_t)a3 adjusted:(BOOL)a4
{
  _BOOL4 v4;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v4 = a4;
  switch(a3)
  {
    case 1uLL:
      -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 8uLL:
      v8 = &__block_literal_global_411;
      goto LABEL_11;
    case 9uLL:
      -[PLManagedAsset pathForXMPFile](self, "pathForXMPFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 0xEuLL:
      -[PLManagedAsset pathForAdjustmentSecondaryDataFile](self, "pathForAdjustmentSecondaryDataFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 0xFuLL:
      -[PLManagedAsset pathForPenultimateFullsizeRenderImageFile](self, "pathForPenultimateFullsizeRenderImageFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 0x10uLL:
      -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 0x11uLL:
      v8 = &__block_literal_global_410;
      goto LABEL_11;
    case 0x14uLL:
    case 0x19uLL:
      -[PLManagedAsset pathForPenultimateFullsizeRenderVideoFile](self, "pathForPenultimateFullsizeRenderVideoFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 0x16uLL:
      v8 = &__block_literal_global_412;
LABEL_11:
      -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset _pathForSidecarResource:](self, "_pathForSidecarResource:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v10)
        goto LABEL_16;
      return v10;
    case 0x17uLL:
      -[PLManagedAsset pathForSpatialOverCaptureContentFile](self, "pathForSpatialOverCaptureContentFile");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_15;
    case 0x18uLL:
      -[PLManagedAsset pathForVideoComplementSpatialOverCaptureContentFile](self, "pathForVideoComplementSpatialOverCaptureContentFile");
      v7 = objc_claimAutoreleasedReturnValue();
LABEL_15:
      v10 = (void *)v7;
      if (!v7)
        goto LABEL_16;
      return v10;
    default:
LABEL_16:
      if (v4)
        -[PLManagedAsset adjustedPathForCPLResourceType:](self, "adjustedPathForCPLResourceType:", a3);
      else
        -[PLManagedAsset nonAdjustedPathForCPLResourceType:](self, "nonAdjustedPathForCPLResourceType:", a3);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      return v10;
  }
}

- (id)nonAdjustedPathForCPLResourceType:(unint64_t)a3
{
  void *v5;
  NSObject *v6;
  void *v7;
  id result;
  int v9;
  void *v10;
  __int16 v11;
  PLManagedAsset *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  switch(a3)
  {
    case 2uLL:
      -[PLManagedAsset pathForNonAdjustedFullsizeImageFile](self, "pathForNonAdjustedFullsizeImageFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 3uLL:
      -[PLManagedAsset pathForNonAdjustedLargeSizeImageFile](self, "pathForNonAdjustedLargeSizeImageFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 4uLL:
      -[PLManagedAsset pathForNonAdjustedLargeThumbnailFile](self, "pathForNonAdjustedLargeThumbnailFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 5uLL:
      -[PLManagedAsset pathForNonAdjustedMediumThumbnailFile](self, "pathForNonAdjustedMediumThumbnailFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 6uLL:
      -[PLManagedAsset pathForNonAdjustedMediumVideoFile](self, "pathForNonAdjustedMediumVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 7uLL:
      -[PLManagedAsset pathForNonAdjustedSmallVideoFile](self, "pathForNonAdjustedSmallVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0xAuLL:
      -[PLManagedAsset pathForMediaMetadataFile](self, "pathForMediaMetadataFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x12uLL:
      -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x15uLL:
      -[PLManagedAsset pathForNonAdjustedLargeVideoFile](self, "pathForNonAdjustedLargeVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x1AuLL:
      -[PLManagedAsset pathForVideoMetadataFile](self, "pathForVideoMetadataFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x1CuLL:
      -[PLManagedAsset pathForNonAdjustedMediumHDRVideoFile](self, "pathForNonAdjustedMediumHDRVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_18:
      result = v5;
      break;
    default:
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v6 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", a3);
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = 138412546;
          v10 = v7;
          v11 = 2112;
          v12 = self;
          _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEBUG, "Unsupported resource type %@ for asset %@", (uint8_t *)&v9, 0x16u);

        }
      }
      result = 0;
      break;
  }
  return result;
}

- (id)adjustedPathForCPLResourceType:(unint64_t)a3
{
  void *v5;
  NSObject *v6;
  void *v7;
  id result;
  int v9;
  void *v10;
  __int16 v11;
  PLManagedAsset *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  switch(a3)
  {
    case 2uLL:
      -[PLManagedAsset pathForAdjustedFullsizeImageFile](self, "pathForAdjustedFullsizeImageFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 3uLL:
      -[PLManagedAsset pathForAdjustedLargeSizeImageFile](self, "pathForAdjustedLargeSizeImageFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 4uLL:
      -[PLManagedAsset pathForAdjustedLargeThumbnailFile](self, "pathForAdjustedLargeThumbnailFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 5uLL:
      -[PLManagedAsset pathForAdjustedMediumThumbnailFile](self, "pathForAdjustedMediumThumbnailFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 6uLL:
      -[PLManagedAsset pathForAdjustedMediumVideoFile](self, "pathForAdjustedMediumVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 7uLL:
      -[PLManagedAsset pathForAdjustedSmallVideoFile](self, "pathForAdjustedSmallVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0xDuLL:
      -[PLManagedAsset pathForAdjustmentDataFile](self, "pathForAdjustmentDataFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x13uLL:
      -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x15uLL:
      -[PLManagedAsset pathForAdjustedLargeVideoFile](self, "pathForAdjustedLargeVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x1BuLL:
      -[PLManagedAsset pathForAdjustedMediaMetadataFile](self, "pathForAdjustedMediaMetadataFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    case 0x1CuLL:
      -[PLManagedAsset pathForAdjustedMediumHDRVideoFile](self, "pathForAdjustedMediumHDRVideoFile");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_18:
      result = v5;
      break;
    default:
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v6 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", a3);
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = 138412546;
          v10 = v7;
          v11 = 2112;
          v12 = self;
          _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEBUG, "Unsupported resource type %@ for asset %@", (uint8_t *)&v9, 0x16u);

        }
      }
      result = 0;
      break;
  }
  return result;
}

- (BOOL)supportsCloudUpload
{
  void *v3;
  int v4;
  void *v5;
  int v6;
  void *v7;
  _BOOL4 v8;
  _BOOL4 v9;
  void *v10;
  void *v11;
  int v12;

  if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) != 0)
    goto LABEL_15;
  objc_msgSend((id)objc_opt_class(), "_syncablePredicate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "evaluateWithObject:", self);

  if (!v4)
    goto LABEL_15;
  objc_msgSend((id)objc_opt_class(), "predicateForSupportedAssetTypesForUpload");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "evaluateWithObject:", self);

  if (!v6)
    goto LABEL_15;
  if (-[PLManagedAsset isPartOfBurst](self, "isPartOfBurst"))
  {
    if (-[PLManagedAsset avalanchePickType](self, "avalanchePickType") == 1)
      goto LABEL_15;
  }
  else if (-[PLManagedAsset isTimelapsePlaceholder](self, "isTimelapsePlaceholder")
         || -[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder"))
  {
    goto LABEL_15;
  }
  if (!-[PLManagedAsset isPlaceholderAsset](self, "isPlaceholderAsset"))
    goto LABEL_21;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = +[PLManagedAsset shouldPerformServerCopyOnPlaceholderAsset:photoLibrary:](PLManagedAsset, "shouldPerformServerCopyOnPlaceholderAsset:photoLibrary:", self, v7);

  if (!v8)
  {
LABEL_15:
    LOBYTE(v9) = 0;
    return v9;
  }
  v9 = +[PLManagedAsset validMomentShareForPlaceholderAsset:](PLManagedAsset, "validMomentShareForPlaceholderAsset:", self);
  if (v9)
  {
LABEL_21:
    if (-[PLManagedAsset isMomentSharedAsset](self, "isMomentSharedAsset")
      && (-[PLManagedAsset momentShare](self, "momentShare"),
          v10 = (void *)objc_claimAutoreleasedReturnValue(),
          v10,
          v10))
    {
      -[PLManagedAsset momentShare](self, "momentShare");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "status");

      LOBYTE(v9) = v12 != 3;
    }
    else
    {
      LOBYTE(v9) = 1;
    }
  }
  return v9;
}

- (id)descriptionForResources
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _QWORD v26[3];

  v26[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("dataStoreSubtype"), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v26[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset modernResources](self, "modernResources");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "allObjects");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sortedArrayUsingDescriptors:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v8, "count"))
  {
    v20 = v5;
    objc_msgSend(v3, "appendFormat:", CFSTR("%lu resources\n"), objc_msgSend(v8, "count"));
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v19 = v8;
    v9 = v8;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v22 != v12)
            objc_enumerationMutation(v9);
          v14 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
          objc_msgSend(v3, "appendFormat:", CFSTR("\t%@\n"), v14);
          if (objc_msgSend(v14, "isLocallyAvailable"))
          {
            objc_msgSend(v14, "fileURL");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "path");
            v16 = (void *)objc_claimAutoreleasedReturnValue();

            +[PLCacheDeleteSupport purgeableStateDescriptionForFile:](PLCacheDeleteSupport, "purgeableStateDescriptionForFile:", v16);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v3, "appendFormat:", CFSTR("Purgeable: %@\n"), v17);

          }
        }
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      }
      while (v11);
    }

    v5 = v20;
    v8 = v19;
  }

  return v3;
}

- (unint64_t)bestResourceTypeForAdjustedFingerPrint
{
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
    return 2;
  if (-[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo"))
    return 0;
  return 16;
}

- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id *)a3 error:(id *)a4
{
  return -[PLManagedAsset masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:fullsizeRenderImageIfNecessary:error:](self, "masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:fullsizeRenderImageIfNecessary:error:", a3, 1, a4);
}

- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id *)a3 fullsizeRenderImageIfNecessary:(BOOL)a4 error:(id *)a5
{
  void *v7;
  uint64_t v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  id v16;
  unint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *i;
  void *v22;
  void *v23;
  void *v24;
  id *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  char v31;
  void *v33;
  _BOOL4 v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  _QWORD v40[4];
  id v41;
  __int128 *p_buf;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t);
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  id v54;
  __int128 buf;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  void (*v58)(uint64_t);
  id v59;
  _BYTE v60[128];
  uint64_t v61;

  v35 = a4;
  v61 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "originalStableHash");
  v8 = objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    objc_msgSend(MEMORY[0x1E0D11398], "fingerprintSchemeForFingerprint:", v8);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 0;
    v36 = (id)v8;
    goto LABEL_7;
  }
  -[PLManagedAsset master](self, "master");
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  v9 = v10 != 0;
  if (!v10)
  {
    objc_msgSend(MEMORY[0x1E0D11398], "fingerprintSchemeForNewMasterAsset");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_25:
    if (-[PLManagedAsset isTimelapsePlaceholder](self, "isTimelapsePlaceholder")
      || !-[PLManagedAsset complete](self, "complete")
      || -[PLManagedAsset isPhotoIrisPlaceholder](self, "isPhotoIrisPlaceholder")
      || (-[PLManagedAsset mainFileURL](self, "mainFileURL"), (v23 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
    {
      v14 = 0;
      v36 = 0;
      goto LABEL_56;
    }
    v54 = 0;
    objc_msgSend(v37, "fingerPrintForFileAtURL:error:", v23, &v54);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = v54;

    if (!v13)
    {
      if (a5 && v14)
      {
        v14 = objc_retainAutorelease(v14);
        v36 = 0;
        *a5 = v14;
      }
      else
      {
        v36 = 0;
      }
      goto LABEL_56;
    }
    goto LABEL_6;
  }
  -[NSObject scopedIdentifier](v10, "scopedIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "identifier");
  v13 = objc_claimAutoreleasedReturnValue();

  -[NSObject fingerprintScheme](v11, "fingerprintScheme");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v13)
    goto LABEL_25;
  v14 = 0;
LABEL_6:
  v36 = (id)v13;
  objc_msgSend(v7, "setOriginalStableHash:", v13);

LABEL_7:
  v15 = !-[PLManagedAsset hasAdjustments](self, "hasAdjustments");
  if (!a3)
    LOBYTE(v15) = 1;
  if ((v15 & 1) == 0)
  {
    objc_msgSend(v7, "adjustedStableHash");
    v16 = (id)objc_claimAutoreleasedReturnValue();
    *a3 = v16;
    if (!v16)
    {
      if (v9)
      {
        -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = -[PLManagedAsset bestResourceTypeForAdjustedFingerPrint](self, "bestResourceTypeForAdjustedFingerPrint");
        if (v17)
        {
          v52 = 0u;
          v53 = 0u;
          v51 = 0u;
          v50 = 0u;
          v18 = v33;
          v19 = (id)objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v50, v60, 16);
          if (v19)
          {
            v20 = *(_QWORD *)v51;
            while (2)
            {
              for (i = 0; i != v19; i = (char *)i + 1)
              {
                if (*(_QWORD *)v51 != v20)
                  objc_enumerationMutation(v18);
                v22 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)i);
                if (objc_msgSend(v22, "cplType") == v17)
                {
                  v19 = v22;
                  goto LABEL_35;
                }
              }
              v19 = (id)objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v50, v60, 16);
              if (v19)
                continue;
              break;
            }
          }
LABEL_35:

          objc_msgSend(v19, "fingerprint");
          *a3 = (id)objc_claimAutoreleasedReturnValue();

        }
        if (*a3)
          goto LABEL_52;
      }
      if (!-[PLManagedAsset isPhoto](self, "isPhoto") || !v35)
      {
        if (!-[PLManagedAsset isDefaultAdjustedSlomo](self, "isDefaultAdjustedSlomo"))
        {
          -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (v26)
          {
            v27 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E98]), "initFileURLWithPath:isDirectory:", v26, 0);
            v39 = 0;
            objc_msgSend(v37, "fingerPrintForFileAtURL:error:", v27, &v39);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            v29 = v39;
            *a3 = v28;

          }
          else
          {
            v29 = 0;
          }
          if (a5 && !*a3)
            *a5 = objc_retainAutorelease(v29);

        }
LABEL_51:
        if (!*a3)
          goto LABEL_11;
LABEL_52:
        objc_msgSend(v7, "setAdjustedStableHash:");
LABEL_53:
        -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        v38 = 0;
        v31 = objc_msgSend(v30, "save:", &v38);
        v14 = v38;

        if ((v31 & 1) != 0)
        {
LABEL_57:

          goto LABEL_58;
        }
        PLBackendGetLog();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          LODWORD(buf) = 138412290;
          *(_QWORD *)((char *)&buf + 4) = v14;
          _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "Error trying to save cached fingerprints: %@", (uint8_t *)&buf, 0xCu);
        }
LABEL_56:

        goto LABEL_57;
      }
      *(_QWORD *)&buf = 0;
      *((_QWORD *)&buf + 1) = &buf;
      v56 = 0x3032000000;
      v57 = __Block_byref_object_copy__44479;
      v58 = __Block_byref_object_dispose__44480;
      v59 = 0;
      v44 = 0;
      v45 = &v44;
      v46 = 0x3032000000;
      v47 = __Block_byref_object_copy__44479;
      v48 = __Block_byref_object_dispose__44480;
      v49 = 0;
      v40[0] = MEMORY[0x1E0C809B0];
      v40[1] = 3221225472;
      v40[2] = __116__PLManagedAsset_CPL__masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint_fullsizeRenderImageIfNecessary_error___block_invoke;
      v40[3] = &unk_1E366A8D8;
      p_buf = &buf;
      v41 = v37;
      v43 = &v44;
      -[PLManagedAsset synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:withCompletionHandler:](self, "synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:withCompletionHandler:", 0, v40);
      v24 = *(void **)(*((_QWORD *)&buf + 1) + 40);
      v25 = a3;
      if (!v24)
      {
        if (!a5)
        {
LABEL_42:

          _Block_object_dispose(&v44, 8);
          _Block_object_dispose(&buf, 8);

          goto LABEL_51;
        }
        v24 = (void *)v45[5];
        v25 = a5;
      }
      *v25 = objc_retainAutorelease(v24);
      goto LABEL_42;
    }
  }
LABEL_11:
  if (!v8)
    goto LABEL_53;
LABEL_58:

  return v36;
}

- (NSString)syncedAdjustmentFingerprint
{
  void *v3;
  void *v4;
  void *v5;

  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "unmanagedAdjustment");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "otherAdjustmentsFingerprint");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v5)
    {
      -[PLManagedAsset _calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources](self, "_calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    v5 = 0;
  }
  return (NSString *)v5;
}

- (id)syncDescription
{
  void *v3;
  void *v4;
  _QWORD v6[5];

  v6[4] = *MEMORY[0x1E0C80C00];
  v6[0] = CFSTR("cloudAssetGUID");
  v6[1] = CFSTR("uuid");
  v6[2] = CFSTR("master");
  v6[3] = CFSTR("detectedFaces");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSManagedObject truncatedDescriptionWithPropertyKeys:](self, "truncatedDescriptionWithPropertyKeys:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (BOOL)faceDetectionComplete
{
  void *v2;
  int v3;
  void *v4;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "faceAnalysisVersion");
  +[PLMediaAnalysisServiceRequestAdapter currentFaceVersion](PLMediaAnalysisServiceRequestAdapter, "currentFaceVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = objc_msgSend(v4, "intValue") == v3;

  return v3;
}

- (void)markForNeedingFaceDetection
{
  PLResetMediaProcessingStateOnAsset(3, self, 1);
}

- (id)photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  void *v14;
  void *v15;
  char v16;
  id v17;
  NSObject *v18;
  void *v20;
  id v21;
  uint8_t buf[4];
  const char *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+CPL.m"), 4225, CFSTR("Identifier must not be nil"));

  }
  -[PLManagedAsset momentShare](self, "momentShare");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "pathManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10)
    {
      objc_msgSend(MEMORY[0x1E0D73280], "systemLibraryPathManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v10, "privateDirectoryWithSubType:", 7);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringByAppendingPathComponent:", v8);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v13 = objc_msgSend(v5, "hash");
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("group%u"), v13 % 0x1F4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "pathManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "photoDirectoryWithType:", 29);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "stringByAppendingPathComponent:", v8);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  v21 = 0;
  v16 = objc_msgSend(MEMORY[0x1E0D73208], "createDirectoryAtPath:error:", v12, &v21);
  v17 = v21;
  if ((v16 & 1) == 0)
  {
    PLBackendGetLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      v23 = "-[PLManagedAsset(CPL) photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:]";
      v24 = 2112;
      v25 = v12;
      v26 = 2112;
      v27 = v17;
      _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "%s: failed to create directory: %@ with error: %@", buf, 0x20u);
    }

  }
  return v12;
}

- (BOOL)unQuarantineIfPossible
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t j;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t k;
  BOOL v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset master](self, "master");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "cloudLocalState");

  if (v4 != 4)
    return 0;
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  -[PLManagedAsset master](self, "master");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "assets");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v33, v39, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v34;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v34 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * i);
        if (objc_msgSend(v11, "cloudLocalState") != 4)
        {
          v23 = 0;
          goto LABEL_31;
        }
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        objc_msgSend(v11, "modernResources");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v29, v38, 16);
        if (v13)
        {
          v14 = v13;
          v15 = *(_QWORD *)v30;
          while (2)
          {
            for (j = 0; j != v14; ++j)
            {
              if (*(_QWORD *)v30 != v15)
                objc_enumerationMutation(v12);
              v17 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * j);
              if (objc_msgSend(v17, "isCPLResource")
                && (objc_msgSend(v17, "isDerivative") & 1) == 0
                && !objc_msgSend(v17, "isLocallyAvailable"))
              {
                v23 = 0;
                goto LABEL_30;
              }
            }
            v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v29, v38, 16);
            if (v14)
              continue;
            break;
          }
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v33, v39, 16);
      if (v8)
        continue;
      break;
    }
  }

  -[PLManagedAsset setCloudLocalState:](self, "setCloudLocalState:", 0);
  -[PLManagedAsset setUploadAttempts:](self, "setUploadAttempts:", 0);
  -[PLManagedAsset setLastUploadAttemptDate:](self, "setLastUploadAttemptDate:", 0);
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v25, v37, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v26;
    do
    {
      for (k = 0; k != v20; ++k)
      {
        if (*(_QWORD *)v26 != v21)
          objc_enumerationMutation(v18);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * k), "setCloudLocalState:", 0);
      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v25, v37, 16);
    }
    while (v20);
  }

  -[PLManagedAsset setOriginalHash:](self, "setOriginalHash:", 0);
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset master](self, "master");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "deleteObject:", v12);
  v23 = 1;
LABEL_30:

LABEL_31:
  return v23;
}

void __116__PLManagedAsset_CPL__masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint_fullsizeRenderImageIfNecessary_error___block_invoke(_QWORD *a1, void *a2)
{
  objc_class *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id obj;

  if (a2)
  {
    v3 = (objc_class *)MEMORY[0x1E0C99E98];
    v4 = a2;
    v5 = (void *)objc_msgSend([v3 alloc], "initFileURLWithPath:isDirectory:", v4, 0);

    v6 = (void *)a1[4];
    v7 = *(_QWORD *)(a1[6] + 8);
    obj = *(id *)(v7 + 40);
    objc_msgSend(v6, "fingerPrintForFileAtURL:error:", v5, &obj);
    v8 = objc_claimAutoreleasedReturnValue();
    objc_storeStrong((id *)(v7 + 40), obj);
    v9 = *(_QWORD *)(a1[5] + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
}

BOOL __55__PLManagedAsset_CPL__pathForCPLResourceType_adjusted___block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "resourceType") == 5;
}

BOOL __55__PLManagedAsset_CPL__pathForCPLResourceType_adjusted___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "resourceType") == 2;
}

BOOL __55__PLManagedAsset_CPL__pathForCPLResourceType_adjusted___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "resourceType") == 4;
}

uint64_t __54__PLManagedAsset_CPL___cplRelationsForAssetInLibrary___block_invoke(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "databaseContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (id)objc_msgSend(v3, "newShortLivedLibraryWithName:", a2);

  return objc_msgSend(v4, "managedObjectContext");
}

void __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke(uint64_t a1, void *a2, int a3, void *a4, void *a5, uint64_t a6, unsigned int a7, void *a8)
{
  NSObject *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  __CFString *v21;
  void *v22;
  void *v23;
  void *v24;
  __CFString *v25;
  __CFString *v26;
  int v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  NSObject *v33;
  id v34;
  NSObject *v35;
  NSObject *v36;
  const char *v37;
  NSObject *v38;
  os_log_type_t v39;
  const char *v40;
  NSObject *v41;
  uint32_t v42;
  void *v43;
  void *v44;
  NSObject *v45;
  NSObject *v46;
  const __CFString *v47;
  void *v48;
  void *v49;
  NSObject *v50;
  NSObject *v51;
  __CFString *v52;
  unsigned int v53;
  int v54;
  __CFString *v55;
  id v56;
  uint8_t buf[4];
  NSObject *v58;
  __int16 v59;
  const __CFString *v60;
  __int16 v61;
  __CFString *v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v15 = a2;
  v16 = a4;
  v17 = a5;
  v18 = a8;
  if (!v15)
  {
    objc_msgSend(*(id *)(a1 + 56), "setAdjustments:", 0);
    goto LABEL_41;
  }
  v19 = objc_alloc_init(MEMORY[0x1E0D11338]);
  objc_msgSend(v19, "setAdjustmentType:", v16);
  objc_msgSend(v19, "setAdjustmentCompoundVersion:", v17);
  objc_msgSend(v19, "setAdjustmentTimestamp:", v18);
  objc_msgSend(v19, "setAdjustmentSourceType:", a6 == 1);
  objc_msgSend(*(id *)(a1 + 32), "editorBundleID");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setAdjustmentCreatorCode:", v20);

  v54 = a3;
  if (a3)
  {
    v53 = a7;
    if (*(_BYTE *)(a1 + 64))
      objc_msgSend(*(id *)(a1 + 32), "_removeAdjustmentDataResources");
    objc_msgSend(*(id *)(a1 + 32), "pathForAdjustmentDataFile");
    v21 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v56 = 0;
    -[__CFString stringByDeletingLastPathComponent](v21, "stringByDeletingLastPathComponent");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)MEMORY[0x1E0D73208];
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v23) = objc_msgSend(v23, "createDirectoryAtPath:error:usingFileManager:", v22, &v56, v24);

    v25 = (__CFString *)v56;
    v26 = v25;
    if ((_DWORD)v23)
    {
      v55 = v25;
      v27 = -[NSObject writeToFile:options:error:](v15, "writeToFile:options:error:", v21, 1, &v55);
      v52 = v55;

      if (v27)
      {
        objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = *(void **)(a1 + 32);
        objc_msgSend((id)*MEMORY[0x1E0CEC4A0], "identifier");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = v29;
        v32 = v28;
        objc_msgSend(v31, "_createCPLResourceFromResourcePath:withResourceType:uniformTypeIdentifier:scopedIdentifier:fingerprintScheme:", v21, 13, v30, v28, *(_QWORD *)(a1 + 40));
        v33 = objc_claimAutoreleasedReturnValue();

        if (v33)
        {
          v34 = (id)objc_msgSend(*(id *)(a1 + 32), "storedResourceForCPLResource:asset:adjusted:", v33, *(_QWORD *)(a1 + 32), 1);
          objc_msgSend(*(id *)(a1 + 48), "addObject:", v33);
          v35 = v32;
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v36 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v58 = v33;
              v37 = "Recreated the CPLResourceTypeAdjustmentData: %@";
              v38 = v36;
              v39 = OS_LOG_TYPE_DEFAULT;
LABEL_23:
              _os_log_impl(&dword_199541000, v38, v39, v37, buf, 0xCu);
              goto LABEL_24;
            }
            goto LABEL_24;
          }
        }
        else
        {
          v35 = v32;
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v36 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v58 = v35;
              v37 = "Unable to create CPL resource for adjustment data for asset %@";
              v38 = v36;
              v39 = OS_LOG_TYPE_ERROR;
              goto LABEL_23;
            }
LABEL_24:

          }
        }

        v26 = v52;
        goto LABEL_26;
      }
      if (*MEMORY[0x1E0D115D0])
      {
        v26 = v52;
        goto LABEL_27;
      }
      __CPLAssetsdOSLogDomain();
      v33 = objc_claimAutoreleasedReturnValue();
      v26 = v52;
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        goto LABEL_26;
      *(_DWORD *)buf = 138412802;
      v58 = v15;
      v59 = 2112;
      v60 = v21;
      v61 = 2112;
      v62 = v52;
      v40 = "Failed to save adjustment data %@ to %@. Error: %@";
      v41 = v33;
      v42 = 32;
    }
    else
    {
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_27:

        a7 = v53;
        goto LABEL_28;
      }
      __CPLAssetsdOSLogDomain();
      v33 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
LABEL_26:

        goto LABEL_27;
      }
      *(_DWORD *)buf = 138412546;
      v58 = v21;
      v59 = 2112;
      v60 = v26;
      v40 = "Failed to create intermediate directory for %@. Error: %@";
      v41 = v33;
      v42 = 22;
    }
    _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_ERROR, v40, buf, v42);
    goto LABEL_26;
  }
  objc_msgSend(v19, "setSimpleAdjustmentData:", v15);
LABEL_28:
  objc_msgSend(*(id *)(a1 + 32), "additionalAttributes", v52);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "unmanagedAdjustment");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "otherAdjustmentsFingerprint");
  v45 = objc_claimAutoreleasedReturnValue();

  if (!v45)
  {
    objc_msgSend(*(id *)(a1 + 32), "_calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources");
    v45 = objc_claimAutoreleasedReturnValue();
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
      {
        v47 = CFSTR("NO");
        if (v54)
          v47 = CFSTR("YES");
        *(_DWORD *)buf = 138412546;
        v58 = v45;
        v59 = 2112;
        v60 = v47;
        _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_DEFAULT, "Calculating cloud adjustment fingerprint at push time: %@  (large? %@)", buf, 0x16u);
      }

    }
    objc_msgSend(*(id *)(a1 + 32), "additionalAttributes");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v48, "unmanagedAdjustment");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v49, "setOtherAdjustmentsFingerprint:", v45);

  }
  objc_msgSend(v19, "setOtherAdjustmentsFingerprint:", v45);
  objc_msgSend(v19, "setAdjustmentRenderTypes:", a7);
  objc_msgSend(*(id *)(a1 + 56), "setAdjustments:", v19);
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v50 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v19, "adjustmentSimpleDescription");
      v51 = objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v58 = v51;
      _os_log_impl(&dword_199541000, v50, OS_LOG_TYPE_DEFAULT, "CPLAdjustments: %@", buf, 0xCu);

    }
  }

LABEL_41:
}

void __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke_182(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, unsigned int a7, void *a8)
{
  id v14;
  objc_class *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;

  v20 = a2;
  v14 = a4;
  v15 = (objc_class *)MEMORY[0x1E0D11338];
  v16 = a8;
  v17 = a5;
  v18 = objc_alloc_init(v15);
  if (v20)
    objc_msgSend(v18, "setSimpleAdjustmentData:", v20);
  objc_msgSend(v18, "setAdjustmentType:", v14);
  objc_msgSend(v18, "setAdjustmentCompoundVersion:", v17);

  objc_msgSend(v18, "setAdjustmentSourceType:", a6 == 1);
  objc_msgSend(*(id *)(a1 + 32), "editorBundleID");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setAdjustmentCreatorCode:", v19);

  objc_msgSend(v18, "setAdjustmentRenderTypes:", a7);
  objc_msgSend(v18, "setAdjustmentTimestamp:", v16);

  objc_msgSend(*(id *)(a1 + 40), "setAdjustments:", v18);
}

void __93__PLManagedAsset_CPL___calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources__block_invoke(uint64_t a1, void *a2, int a3, void *a4, void *a5, uint64_t a6)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  BOOL v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint8_t buf[16];

  v11 = a2;
  v12 = a4;
  v13 = a5;
  if (v11)
  {
    objc_msgSend(*(id *)(a1 + 32), "assetResourceForCPLType:", 15);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "assetResourceForCPLType:", 13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "fingerprint");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "fingerprint");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (!a3 || v15)
    {
      v28 = (void *)objc_opt_class();
      v29 = a6;
      v19 = a3 == 0;
      if (a3)
        v20 = 0;
      else
        v20 = v11;
      v21 = v12;
      if (v19)
        v22 = 0;
      else
        v22 = v17;
      objc_msgSend(*(id *)(a1 + 32), "editorBundleID");
      v30 = v14;
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = v22;
      v12 = v21;
      objc_msgSend(v28, "_cloudAdjustmentFingerprintWithAdjustmentDataBlob:largeAdjustmentBlobFingerpint:formatIdentifier:formatVersion:editorBundleID:baseVersion:baseImageData:baseImageFingerprint:", v20, v24, v21, v13, v23, v29, 0, v16);
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v27 = *(void **)(v26 + 40);
      *(_QWORD *)(v26 + 40) = v25;

      v14 = v30;
    }
    else if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "Attempting to calculate adjustment fingerprint from cloud resources which are missing", buf, 2u);
      }

    }
  }

}

void __77__PLManagedAsset_CPL__synchronouslyFetchAdjustmentBlobWithCompletionHandler___block_invoke(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, unsigned int a7, void *a8, void *a9)
{
  id v13;
  id v14;
  id v15;
  id v16;
  objc_class *v17;
  id v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  unint64_t v24;
  _BOOL8 v25;
  _BYTE *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  uint8_t buf[4];
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v13 = a2;
  v14 = a3;
  v15 = a8;
  v16 = a9;
  v17 = (objc_class *)MEMORY[0x1E0C99D50];
  v18 = a6;
  v19 = (void *)objc_msgSend([v17 alloc], "initWithContentsOfFile:", v18);

  if (v19)
  {
    if (!*(_BYTE *)(a1 + 48))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          v21 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          v38 = v21;
          _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Asset %@ has adjustment data but no adjustment.", buf, 0xCu);
        }

      }
      objc_msgSend(*(id *)(a1 + 32), "_debugPrintAdjustmentState");
    }
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v19, 0, 0, 0);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73370]);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    if (v23)
    {
      if (v13)
        goto LABEL_10;
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "assetResourceForCPLType:", 13);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = v31;
      if (v31)
      {
        objc_msgSend(v31, "fileURL");
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        if (v23)
        {
          v33 = objc_alloc(MEMORY[0x1E0C99D50]);
          objc_msgSend(v32, "fileURL");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          v23 = (void *)objc_msgSend(v33, "initWithContentsOfURL:", v34);

        }
      }
      else
      {
        v23 = 0;
      }

      if (v13)
      {
LABEL_10:
        if (v14)
          goto LABEL_11;
        goto LABEL_33;
      }
    }
    objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73380]);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    if (v14)
    {
LABEL_11:
      if (v15)
      {
LABEL_12:
        v24 = objc_msgSend(v23, "length");
        v25 = v24 > objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize");

        goto LABEL_24;
      }
LABEL_34:
      objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73398]);
      v15 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    }
LABEL_33:
    objc_msgSend(v22, "objectForKeyedSubscript:", *MEMORY[0x1E0D73388]);
    v14 = (id)objc_claimAutoreleasedReturnValue();
    if (v15)
      goto LABEL_12;
    goto LABEL_34;
  }
  v26 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_DEBUG, "AdjustmentsData path does not exist", buf, 2u);
    }

  }
  if (*(_BYTE *)(a1 + 48))
  {
    if (!*v26)
    {
      __CPLAssetsdOSLogDomain();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        v29 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v38 = v29;
        _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_ERROR, "Asset %@ has adjustment but no adjustmentsData.", buf, 0xCu);
      }

    }
    objc_msgSend(*(id *)(a1 + 32), "_debugPrintAdjustmentState");
  }
  v25 = 0;
  v23 = 0;
LABEL_24:
  v30 = *(_QWORD *)(a1 + 40);
  if (v30)
    (*(void (**)(uint64_t, void *, _BOOL8, id, id, uint64_t, _QWORD, id, id))(v30 + 16))(v30, v23, v25, v13, v14, a5, a7, v15, v16);

}

void __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke_150()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithBlock:", &__block_literal_global_153);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_filterPredicate;
  createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_filterPredicate = v0;

}

BOOL __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke_2(uint64_t a1, void *a2)
{
  return +[PLResourceInstaller isValidCPLResourceTypeForPersistence:](PLResourceInstaller, "isValidCPLResourceTypeForPersistence:", objc_msgSend(a2, "resourceType"));
}

void __52__PLManagedAsset_CPL__bestAvaliableAdjustedResource__block_invoke()
{
  void *v0;
  void *v1;
  int v2;
  void *v3;
  void *v4;

  v0 = (void *)bestAvaliableAdjustedResource_photoResourceTypePriority;
  bestAvaliableAdjustedResource_photoResourceTypePriority = (uint64_t)&unk_1E3763B18;

  v1 = (void *)bestAvaliableAdjustedResource_loopingPhotoResourceTypePriority;
  bestAvaliableAdjustedResource_loopingPhotoResourceTypePriority = (uint64_t)&unk_1E3763B30;

  v2 = objc_msgSend(MEMORY[0x1E0D75128], "currentDeviceIsEligibleForHDRPlayback");
  v3 = &unk_1E3763B60;
  v4 = (void *)bestAvaliableAdjustedResource_videoResourceTypePriority;
  if (v2)
    v3 = &unk_1E3763B48;
  bestAvaliableAdjustedResource_videoResourceTypePriority = (uint64_t)v3;

}

uint64_t __69__PLManagedAsset_CPL___applySharingChangeToCPLAssetChange_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "userIdentifier");
}

uint64_t __99__PLManagedAsset_CPL___applyPropertiesChangeToCPLAssetChange_withMasterScopedIdentifier_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void __153__PLManagedAsset_CPL___createVideoResourceFromVideoURL_withResourceType_scopedIdentifier_applyVideoAdjustments_forMaster_forPhotoIris_fingerprintScheme___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  id v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    v12 = *(void **)(a1 + 48);
    objc_msgSend(*(id *)(a1 + 40), "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v12) = objc_msgSend(v12, "fileExistsAtPath:", v13);

    if ((v12 & 1) == 0)
    {
      if (*MEMORY[0x1E0D115D0])
      {
        v7 = 0;
        goto LABEL_27;
      }
      __CPLAssetsdOSLogDomain();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", *(_QWORD *)(a1 + 96));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = *(void **)(a1 + 32);
        v22 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412802;
        v34 = v20;
        v35 = 2112;
        v36 = v21;
        v37 = 2112;
        v38 = v22;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "failed to write video derivative type %@ for %@ to %@.", buf, 0x20u);

      }
      v7 = 0;
      goto LABEL_26;
    }
    v8 = objc_msgSend(objc_alloc(MEMORY[0x1E0D11448]), "initWithFileURL:", *(_QWORD *)(a1 + 40));
    v14 = *(void **)(a1 + 56);
    v15 = *(_QWORD *)(a1 + 40);
    v32 = 0;
    objc_msgSend(v14, "fingerPrintForFileAtURL:error:", v15, &v32);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = v32;
    v17 = v16;
    if (!v9 || v16)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          v24 = *(void **)(a1 + 40);
          *(_DWORD *)buf = 138412546;
          v34 = v24;
          v35 = 2112;
          v36 = v17;
          _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_ERROR, "Failed to create finger print for %@. Error: %@", buf, 0x16u);
        }

      }
    }
    else
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        {
          v19 = *(void **)(a1 + 40);
          *(_DWORD *)buf = 138412546;
          v34 = v9;
          v35 = 2112;
          v36 = v19;
          _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEBUG, "Setting finger print %@ to %@", buf, 0x16u);
        }

      }
      -[NSObject setFingerPrint:](v8, "setFingerPrint:", v9);
    }
    -[NSObject setFileUTI:](v8, "setFileUTI:", *(_QWORD *)(a1 + 64));
    v25 = *(void **)(a1 + 48);
    objc_msgSend(*(id *)(a1 + 40), "path");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = v17;
    objc_msgSend(v25, "attributesOfItemAtPath:error:", v26, &v31);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v31;

    if (!v7 && v27)
      -[NSObject setFileSize:](v8, "setFileSize:", objc_msgSend(v27, "fileSize"));
    +[PLManagedAsset dimensionsForVideoAtURL:](PLManagedAsset, "dimensionsForVideoAtURL:", *(_QWORD *)(a1 + 40));
    -[NSObject setImageDimensions:](v8, "setImageDimensions:");
    -[NSObject setAvailable:](v8, "setAvailable:", 1);
    v28 = objc_msgSend(objc_alloc(MEMORY[0x1E0D11440]), "initWithResourceIdentity:itemScopedIdentifier:resourceType:", v8, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
    v29 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v30 = *(void **)(v29 + 40);
    *(_QWORD *)(v29 + 40) = v28;

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "setDeleteAfterUpload:", *(unsigned __int8 *)(a1 + 104));
    goto LABEL_25;
  }
  v7 = v6;
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
LABEL_26:

      goto LABEL_27;
    }
    objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", *(_QWORD *)(a1 + 96));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = *(void **)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138413058;
    v34 = v9;
    v35 = 2112;
    v36 = v10;
    v37 = 2112;
    v38 = v11;
    v39 = 2112;
    v40 = v7;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "could not generate video derivative type %@ for %@ error %@, to write to %@", buf, 0x2Au);
LABEL_25:

    goto LABEL_26;
  }
LABEL_27:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 80));

}

void __125__PLManagedAsset_CPL___createImageResourceForResourceType_withPreviewImagePath_scopedIdentifier_forMaster_fingerprintScheme___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = *(_QWORD *)(a1 + 40);
        v13 = 138412802;
        v14 = v8;
        v15 = 2112;
        v16 = v9;
        v17 = 2112;
        v18 = v6;
        _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "Failed to resize image at %@ to %@: %@", (uint8_t *)&v13, 0x20u);
      }

    }
  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        v11 = *(_QWORD *)(a1 + 32);
        v12 = *(_QWORD *)(a1 + 40);
        v13 = 138412546;
        v14 = v11;
        v15 = 2112;
        v16 = v12;
        _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_DEBUG, "Resized %@ to %@", (uint8_t *)&v13, 0x16u);
      }

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));

}

void __136__PLManagedAsset_CPL___createPhotoResourcesForMaster_withOriginalResource_intoMasterResources_shouldGenerateDerivatives_inPhotoLibrary___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  if (v7)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        v9 = *(_QWORD *)(a1 + 32);
        v10 = 138412546;
        v11 = v9;
        v12 = 2112;
        v13 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Failed to generate full size JPEG from %@: %@", (uint8_t *)&v10, 0x16u);
      }

    }
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));

}

+ (void)createMastersInLibrary:(id)a3
{
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;

  v4 = a3;
  objc_msgSend(v4, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke;
  v8[3] = &unk_1E3677C40;
  v10 = v4;
  v11 = a1;
  v9 = v5;
  v6 = v4;
  v7 = v5;
  objc_msgSend(v6, "performTransactionAndWait:", v8);

}

+ (unint64_t)CPLAssetHDRTypeFromPLAssetHDRType:(signed __int16)a3
{
  uint64_t v3;

  v3 = (a3 - 2);
  if (v3 < 3)
    return v3 + 1;
  else
    return 0;
}

+ (unint64_t)_sumOfCountsInCountedSet:(id)a3
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v3);
        v6 += objc_msgSend(v3, "countForObject:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * i));
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v5);
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

+ (id)_countOfAssetsByKindWithResourcePredicate:(id)a3 inContext:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  id v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  id v29;
  uint8_t buf[4];
  id v31;
  _BYTE v32[128];
  const __CFString *v33;
  _QWORD v34[2];
  _QWORD v35[3];

  v35[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  v7 = (void *)MEMORY[0x1E0C97B48];
  +[PLInternalResource entityName](PLInternalResource, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchRequestWithEntityName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v35[0] = CFSTR("asset");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setRelationshipKeyPathsForPrefetching:", v10);

  objc_msgSend(v9, "setPredicate:", v5);
  v34[0] = CFSTR("asset");
  v34[1] = CFSTR("asset.kind");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToGroupBy:", v11);

  v33 = CFSTR("asset.kind");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v33, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPropertiesToFetch:", v12);

  objc_msgSend(v9, "setResultType:", 2);
  v29 = 0;
  objc_msgSend(v6, "executeFetchRequest:error:", v9, &v29);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v29;
  if (v13)
  {
    v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3550]), "initWithCapacity:", 4);
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v16 = v13;
    v17 = -[NSObject countByEnumeratingWithState:objects:count:](v16, "countByEnumeratingWithState:objects:count:", &v25, v32, 16);
    if (v17)
    {
      v18 = v17;
      v23 = v6;
      v24 = v5;
      v19 = *(_QWORD *)v26;
      do
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_QWORD *)v26 != v19)
            objc_enumerationMutation(v16);
          objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * i), "objectForKeyedSubscript:", CFSTR("asset.kind"), v23, v24, (_QWORD)v25);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "addObject:", v21);

        }
        v18 = -[NSObject countByEnumeratingWithState:objects:count:](v16, "countByEnumeratingWithState:objects:count:", &v25, v32, 16);
      }
      while (v18);
      v6 = v23;
      v5 = v24;
    }
  }
  else
  {
    PLBackendGetLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v31 = v14;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "failed to count assets by kind: %@", buf, 0xCu);
    }
    v15 = 0;
  }

  return v15;
}

+ (void)countOfAssetsWithRequiredResourcesNotLocallyAvailableInLibrary:(id)a3 outCount:(unint64_t *)a4 photoCount:(unint64_t *)a5 videoCount:(unint64_t *)a6
{
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[3];

  v22[2] = *MEMORY[0x1E0C80C00];
  v10 = (void *)MEMORY[0x1E0D73310];
  v11 = a3;
  objc_msgSend(v10, "predicateForIncludeMask:useIndex:keyPathPrefix:", objc_msgSend(v10, "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders"), 0, CFSTR("asset"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset _predicateForAssetsWithNotCompleteResourcesOnResource](PLManagedAsset, "_predicateForAssetsWithNotCompleteResourcesOnResource");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)MEMORY[0x1E0CB3528];
  v22[0] = v12;
  v22[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v22, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "andPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "managedObjectContext");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(a1, "_countOfAssetsByKindWithResourcePredicate:inContext:", v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18)
  {
    v19 = objc_msgSend(a1, "_sumOfCountsInCountedSet:", v18);
    v20 = objc_msgSend(v18, "countForObject:", &unk_1E375EE20);
    v21 = objc_msgSend(v18, "countForObject:", &unk_1E375EE38);
    if (!a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  v21 = 0;
  v20 = 0;
  v19 = 0;
  if (a4)
LABEL_3:
    *a4 = v19;
LABEL_4:
  if (a5)
    *a5 = v20;
  if (a6)
    *a6 = v21;

}

+ (id)predicateForAssetsWithCompleteResourcesOnAsset
{
  pl_dispatch_once();
  return (id)predicateForAssetsWithCompleteResourcesOnAsset_predicate;
}

+ (id)_predicateForAssetsWithNotCompleteResourcesOnResource
{
  pl_dispatch_once();
  return (id)_predicateForAssetsWithNotCompleteResourcesOnResource_predicate;
}

+ (id)_cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 largeAdjustmentBlobFingerpint:(id)a4 formatIdentifier:(id)a5 formatVersion:(id)a6 editorBundleID:(id)a7 baseVersion:(int64_t)a8 baseImageData:(id)a9 baseImageFingerprint:(id)a10
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _BOOL8 v22;
  unint64_t v23;
  void *v24;
  NSObject *v25;
  void *v26;
  void *v27;
  id v29;
  uint8_t buf[4];
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a7;
  v29 = a9;
  v20 = a10;
  v21 = objc_alloc_init(MEMORY[0x1E0D750A8]);
  objc_msgSend(v21, "setAdjustmentType:", v17);
  objc_msgSend(v21, "setAdjustmentCompoundVersion:", v18);
  objc_msgSend(v21, "setAdjustmentCreatorCode:", v19);
  v22 = a8 == 1;
  objc_msgSend(v21, "setAdjustmentSourceType:", v22);
  if (v16)
  {
    objc_msgSend(v21, "setLargeAdjustmentDataFingerprint:", v16);
  }
  else
  {
    v23 = objc_msgSend(v15, "length");
    if (v23 <= objc_msgSend(MEMORY[0x1E0D11410], "maxInlineDataSize"))
      objc_msgSend(v21, "setSimpleAdjustmentData:", v15);
    else
      objc_msgSend(v21, "setLargeAdjustmentData:", v15);
  }
  if (v20)
    objc_msgSend(v21, "setBaseImageFingerprint:", v20);
  else
    objc_msgSend(v21, "setBaseImage:", v29);
  +[PLDescriptionBuilder prettyMultiLineDescriptionBuilderWithObject:indent:](PLDescriptionBuilder, "prettyMultiLineDescriptionBuilderWithObject:indent:", v21, 0);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "appendName:object:", CFSTR("formatIdentifier"), v17);
  objc_msgSend(v24, "appendName:object:", CFSTR("formatVersion"), v18);
  objc_msgSend(v24, "appendName:object:", CFSTR("editorBundleID"), v19);
  objc_msgSend(v24, "appendName:integerValue:", CFSTR("sourceType"), v22);
  if (v16)
  {
    objc_msgSend(v24, "appendName:object:", CFSTR("largeAdjustmentBlobFingerprint"), v16);
    if (v20)
    {
LABEL_11:
      objc_msgSend(v24, "appendName:object:", CFSTR("baseImageFingerprint"), v20);
      goto LABEL_14;
    }
  }
  else
  {
    objc_msgSend(v24, "appendName:unsignedIntegerValue:", CFSTR("adjustmentBlobLength"), objc_msgSend(v15, "length"));
    if (v20)
      goto LABEL_11;
  }
  objc_msgSend(v24, "appendName:unsignedIntegerValue:", CFSTR("baseImageDataLength"), objc_msgSend(v29, "length"));
LABEL_14:
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v24, "build");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v31 = v26;
      _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEBUG, "Calculating cloud adjustment fingerprint with the following parts: %@", buf, 0xCu);

    }
  }
  objc_msgSend(MEMORY[0x1E0D750B0], "fingerprintWithAssetAdjustmentFingerprintData:", v21);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  return v27;
}

+ (id)cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 editorBundleID:(id)a6 baseVersion:(int64_t)a7 baseImageData:(id)a8
{
  return (id)objc_msgSend(a1, "_cloudAdjustmentFingerprintWithAdjustmentDataBlob:largeAdjustmentBlobFingerpint:formatIdentifier:formatVersion:editorBundleID:baseVersion:baseImageData:baseImageFingerprint:", a3, 0, a4, a5, a6, a7, a8, 0);
}

+ (id)cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 editorBundleID:(id)a6 baseVersion:(int64_t)a7 baseFingerprint:(id)a8
{
  return (id)objc_msgSend(a1, "_cloudAdjustmentFingerprintWithAdjustmentDataBlob:largeAdjustmentBlobFingerpint:formatIdentifier:formatVersion:editorBundleID:baseVersion:baseImageData:baseImageFingerprint:", a3, 0, a4, a5, a6, a7, 0, a8);
}

+ (id)createCloudPhotoLibraryAssetWithAssetRecord:(id)a3 withCloudMaster:(id)a4 inLibrary:(id)a5
{
  id v7;
  id v8;
  id v9;
  _BYTE *v10;
  NSObject *v11;
  void *v12;
  _BOOL4 v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  NSObject *v25;
  uint64_t v27;
  id v28;
  uint8_t buf[4];
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v9 = a5;
  v10 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v7;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEBUG, "Creating asset with CPLAssetChange %@", buf, 0xCu);
    }

  }
  objc_msgSend(v7, "scopedIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = 0;
  v13 = +[PLShare getShareIfNecessary:forCPLRecordWithClass:scopedIdentifier:inLibrary:](PLMomentShare, "getShareIfNecessary:forCPLRecordWithClass:scopedIdentifier:inLibrary:", &v28, objc_opt_class(), v12, v9);
  v14 = v28;
  v15 = 0;
  if (v13)
  {
    LOWORD(v27) = 257;
    +[PLManagedAsset insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:](PLManagedAsset, "insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", v9, 0, 0, objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForCloudPhotoLibraryAsset"), 0, 0, 0, 0, 0, v27);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "identifier");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setCloudAssetGUID:", v16);
    if (v14)
    {
      objc_msgSend(v15, "setMomentShare:", v14);
      objc_msgSend(v15, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForMomentSharedAsset"));
      objc_msgSend(v15, "setBundleScope:", 1);
      objc_msgSend(v15, "additionalAttributes");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "setShareType:", 1);

      objc_msgSend(v15, "additionalAttributes");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "owner");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "userIdentifier");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setShareOriginator:", v20);

      v10 = (_BYTE *)MEMORY[0x1E0D115D0];
    }
    else
    {
      objc_msgSend(v15, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForCloudPhotoLibraryAsset"));
    }
    objc_msgSend(v15, "setCloudPlaceholderKind:", 2);
    v21 = objc_msgSend(v15, "setCloudLocalState:", 1);
    if (v8)
    {
      v22 = (void *)MEMORY[0x19AEC1554](v21);
      objc_msgSend(v15, "_applyPropertiesFromCloudMaster:", v8);
      objc_msgSend(v9, "managedObjectContext");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "rm_createMasterResourcesIn:inManagedObjectContext:", v8, v23);

      objc_autoreleasePoolPop(v22);
    }
    else
    {
      if (*v10)
      {
LABEL_19:

        goto LABEL_20;
      }
      __CPLAssetsdOSLogDomain();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v30 = v15;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "Unable to find matching cloud master for %@", buf, 0xCu);
      }

    }
    if (!*v10)
    {
      __CPLAssetsdOSLogDomain();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v30 = v15;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEBUG, "Created asset %@", buf, 0xCu);
      }

    }
    goto LABEL_19;
  }
LABEL_20:

  return v15;
}

+ (void)fixupCloudPhotoLibraryAsset:(id)a3 withCloudMaster:(id)a4 inLibrary:(id)a5
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a3;
  v9 = a4;
  v10 = a5;
  if (!v9)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+CPL.m"), 2415, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("cloudMaster"));

  }
  if (objc_msgSend(v9, "cloudLocalState") != 3)
    objc_msgSend(v9, "setCloudLocalState:", 3);
  if (objc_msgSend(v13, "cloudLocalState") != 1)
    objc_msgSend(v13, "setCloudLocalState:", 1);
  objc_msgSend(v13, "_applyPropertiesFromCloudMaster:", v9);
  objc_msgSend(v10, "managedObjectContext");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "rm_createMasterResourcesIn:inManagedObjectContext:", v9, v11);

  objc_msgSend(v13, "setCloudPlaceholderKind:", 2);
}

+ (void)processAdjustedMediaMetadataForAsset:(id)a3
{
  void *v3;
  id v4;

  v4 = a3;
  if (!objc_msgSend(v4, "kind"))
  {
    objc_msgSend(v4, "fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
      objc_msgSend(v4, "setSpatialTypeFromMetadata:", v3);

  }
  objc_msgSend(v4, "updateAssetSleetCastIfNeededFromAdjustmentFile");

}

+ (void)processMediaMetadataForAsset:(id)a3 withCloudMaster:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  NSObject *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  NSObject *v30;
  int v31;
  NSObject *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  NSObject *v36;
  NSObject *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint8_t buf[4];
  NSObject *v43;
  __int16 v44;
  id v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  objc_msgSend(v6, "mediaMetadata");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "valueForKey:", CFSTR("data"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v41 = 0;
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v8, 0, 0, &v41);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v41;
    if (v9)
    {
      objc_opt_class();
      objc_msgSend(v5, "managedObjectContext");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v12 = v11;
      else
        v12 = 0;
      v13 = v12;

      switch(objc_msgSend(v5, "kind"))
      {
        case 0u:
          v14 = objc_alloc(MEMORY[0x1E0D75140]);
          v15 = (void *)MEMORY[0x1E0D752F0];
          objc_msgSend(v5, "uniformTypeIdentifier");
          v38 = v10;
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "typeWithIdentifier:", v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject pl_libraryBundle](v13, "pl_libraryBundle");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "timeZoneLookup");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = objc_msgSend(v14, "initWithImageSourceProxyOrEncodedImagePropertyData:contentType:timeZoneLookup:", v8, v17, v19);

          v10 = v38;
          objc_msgSend(v5, "setImageInfoFromOriginalImageMetadata:", v20);
          break;
        case 1u:
          objc_msgSend(MEMORY[0x1E0C8AF90], "assetProxyWithPropertyList:", v9);
          v21 = objc_claimAutoreleasedReturnValue();
          if (v21)
          {
            v39 = v10;
            objc_msgSend(v5, "setVideoInfoOnMasterFromAVAsset:", v21);
            v22 = objc_alloc(MEMORY[0x1E0D75140]);
            -[NSObject pl_libraryBundle](v13, "pl_libraryBundle");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "timeZoneLookup");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = objc_msgSend(v22, "initWithAVAsset:timeZoneLookup:", v21, v24);

            objc_msgSend(v5, "updateVideoAttributesFromMetadata:overwriteOriginalProperties:", v20, 1);
            if (objc_msgSend(v5, "cameraProcessingAdjustmentState"))
            {
              -[NSObject spatialOverCaptureIdentifier](v20, "spatialOverCaptureIdentifier");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              if (v25)
              {
                objc_msgSend(v5, "additionalAttributes");
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v26, "setSpatialOverCaptureGroupIdentifier:", v25);

              }
            }
            v10 = v39;
            if (PLPlatformExtendedAttributesSupported())
              objc_msgSend(v5, "updateVideoExtendedAttributesFromMetadata:", v20);
          }
          else
          {
            if (objc_msgSend(v5, "isMomentSharedAsset"))
            {
              if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v32 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
                {
                  objc_msgSend(v5, "cloudAssetGUID");
                  v33 = objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412290;
                  v43 = v33;
                  _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_ERROR, "CMM video asset with invalid mediaProperties detected, clearing mediaMetadata on CMM master with GUID %@", buf, 0xCu);

                }
              }
              objc_msgSend(v6, "mediaMetadata");
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v34, "setValue:forKey:", 0, CFSTR("data"));

            }
            else if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v36 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
              {
                objc_msgSend(v5, "cloudAssetGUID");
                v37 = objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v43 = v37;
                _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "Video asset with invalid mediaProperties detected with GUID %@", buf, 0xCu);

              }
            }
            v20 = 0;
          }
          goto LABEL_38;
        case 2u:
          if (!PLPlatformExtendedAttributesSupported())
            goto LABEL_21;
          objc_msgSend(MEMORY[0x1E0C8AF90], "assetProxyWithPropertyList:", v9);
          v20 = objc_claimAutoreleasedReturnValue();
          if (v20)
          {
            v27 = objc_alloc(MEMORY[0x1E0D75140]);
            -[NSObject pl_libraryBundle](v13, "pl_libraryBundle");
            v40 = v10;
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "timeZoneLookup");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            v21 = objc_msgSend(v27, "initWithAVAsset:timeZoneLookup:", v20, v29);

            v10 = v40;
            objc_msgSend(v5, "updateAudioExtendedAttributesFromMetadata:", v21);
LABEL_38:

            break;
          }
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(v5, "cloudAssetGUID");
              v35 = objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412290;
              v43 = v35;
              _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, "Audio asset with invalid mediaProperties detected with GUID %@", buf, 0xCu);

            }
            goto LABEL_38;
          }
          v20 = 0;
          break;
        case 3u:
LABEL_21:
          if (*MEMORY[0x1E0D115D0])
            goto LABEL_40;
          __CPLAssetsdOSLogDomain();
          v20 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v5, "cloudAssetGUID");
            v30 = objc_claimAutoreleasedReturnValue();
            v31 = objc_msgSend(v5, "kind");
            *(_DWORD *)buf = 138412546;
            v43 = v30;
            v44 = 1024;
            LODWORD(v45) = v31;
            _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Media properties on unexpected asset kind with GUID %@, kind %d", buf, 0x12u);

          }
          break;
        default:
          goto LABEL_40;
      }
    }
    else
    {
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_41:

        goto LABEL_42;
      }
      __CPLAssetsdOSLogDomain();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
LABEL_40:

        goto LABEL_41;
      }
      objc_msgSend(v5, "cloudAssetGUID");
      v20 = objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v43 = v20;
      v44 = 2112;
      v45 = v10;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Media metadata for asset asset %{public}@ failed to decode: error: %@", buf, 0x16u);
    }

    goto LABEL_40;
  }
LABEL_42:

}

+ (void)fixMissingOriginalDateCreatedIfNeededForAsset:(id)a3 withCloudMaster:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  v5 = a4;
  if (PLPlatformExtendedAttributesSupported())
  {
    objc_msgSend(v10, "extendedAttributesCreateIfNeeded:", 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "dateCreated");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v7)
    {
      objc_msgSend(v5, "creationDate");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (v8)
      {
        objc_msgSend(v6, "setDateCreated:", v8);
        objc_msgSend(v10, "additionalAttributes");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setDateCreatedSource:", 3);

      }
    }

  }
}

+ (void)fixMissingOriginalTimezoneIfNeededForAsset:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if (PLPlatformExtendedAttributesSupported())
  {
    objc_msgSend(v3, "extendedAttributesCreateIfNeeded:", 1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dateCreated");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "timezoneOffset");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {

LABEL_12:
      goto LABEL_13;
    }
    objc_msgSend(v4, "timezoneName");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
      goto LABEL_12;
    objc_msgSend(v3, "additionalAttributes");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "timeZoneName");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {

    }
    else
    {
      objc_msgSend(v3, "additionalAttributes");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "timeZoneOffset");
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v11)
      {
        if (!v5)
        {
          if (*MEMORY[0x1E0D115D0])
            goto LABEL_12;
          __CPLAssetsdOSLogDomain();
          v14 = objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
            goto LABEL_11;
          objc_msgSend(v3, "uuid");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = 138543362;
          v19 = v16;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEBUG, "Unable to set original timezone for asset: %{public}@", (uint8_t *)&v18, 0xCu);
LABEL_10:

LABEL_11:
          goto LABEL_12;
        }
        objc_msgSend(MEMORY[0x1E0C99E80], "localTimeZone");
        v14 = objc_claimAutoreleasedReturnValue();
        -[NSObject name](v14, "name");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setTimezoneName:", v17);

        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", -[NSObject secondsFromGMTForDate:](v14, "secondsFromGMTForDate:", v5));
        v15 = objc_claimAutoreleasedReturnValue();
LABEL_9:
        v16 = (void *)v15;
        objc_msgSend(v4, "setTimezoneOffset:", v15);
        goto LABEL_10;
      }
    }
    objc_msgSend(v3, "additionalAttributes");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "timeZoneName");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setTimezoneName:", v13);

    objc_msgSend(v3, "additionalAttributes");
    v14 = objc_claimAutoreleasedReturnValue();
    -[NSObject timeZoneOffset](v14, "timeZoneOffset");
    v15 = objc_claimAutoreleasedReturnValue();
    goto LABEL_9;
  }
LABEL_13:

}

+ (id)listOfSyncedProperties
{
  pl_dispatch_once();
  return (id)listOfSyncedProperties_result_44840;
}

+ (id)listOfSharingAttributesRelevantForUpload
{
  pl_dispatch_once();
  return (id)listOfSharingAttributesRelevantForUpload_result;
}

+ (id)listOfSharingRelationshipsRelevantForUpload
{
  pl_dispatch_once();
  return (id)listOfSharingRelationshipsRelevantForUpload_result;
}

+ (void)deDupCMMAssets:(id)a3
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  int v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t j;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  int v45;
  void *v46;
  int v47;
  void *v48;
  void *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t k;
  void *v56;
  void *v57;
  NSObject *v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  id obj;
  void *obja;
  void *v68;
  void *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  id v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  id v79;
  id v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _BYTE v85[128];
  uint8_t v86[128];
  uint8_t buf[4];
  _BYTE v88[18];
  const __CFString *v89;
  _QWORD v90[2];
  _BYTE v91[128];
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "firstObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "photoLibrary");
    v64 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v3, "count"));
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0u;
    v63 = v3;
    obj = v3;
    v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v81, v91, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v82;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v82 != v7)
            objc_enumerationMutation(obj);
          v9 = *(void **)(*((_QWORD *)&v81 + 1) + 8 * i);
          v10 = (void *)MEMORY[0x19AEC1554]();
          v80 = 0;
          objc_msgSend(v9, "masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:fullsizeRenderImageIfNecessary:error:", &v80, 0, 0);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = v80;
          if (v11)
          {
            if (v12)
            {
              objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), CFSTR("adjustedStableHash"), v12);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              v14 = v69;
              v15 = v9;
              v16 = v12;
            }
            else
            {
              objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), CFSTR("originalStableHash"), v11);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              v14 = v65;
              v15 = v9;
              v16 = v11;
            }
            objc_msgSend(v14, "setObject:forKeyedSubscript:", v15, v16);
            v17 = objc_msgSend(v9, "isMomentSharedAsset");
            v18 = (void *)MEMORY[0x1E0D73310];
            if (v17)
              v19 = objc_msgSend(MEMORY[0x1E0D73310], "maskForMomentShareDeDupe");
            else
              v19 = objc_msgSend(MEMORY[0x1E0D73310], "maskForMomentSharedAsset");
            objc_msgSend(v18, "predicateForIncludeMask:useIndex:keyPathPrefix:", v19, 0, CFSTR("asset"));
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            v21 = (void *)MEMORY[0x1E0CB3528];
            v90[0] = v13;
            v90[1] = v20;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v90, 2);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v21, "andPredicateWithSubpredicates:", v22);
            v23 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v68, "addObject:", v23);
          }

          objc_autoreleasePoolPop(v10);
        }
        v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v81, v91, 16);
      }
      while (v6);
    }

    objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v68);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = (void *)MEMORY[0x1E0C97B48];
    +[PLAdditionalAssetAttributes entityName](PLAdditionalAssetAttributes, "entityName");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "fetchRequestWithEntityName:", v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v27, "setPredicate:", v24);
    v89 = CFSTR("asset");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v89, 1);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setRelationshipKeyPathsForPrefetching:", v28);

    objc_msgSend(v64, "managedObjectContext");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v79 = 0;
    objc_msgSend(v29, "executeFetchRequest:error:", v27, &v79);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = v79;

    if (v30)
    {
      v59 = v31;
      v61 = v27;
      v62 = v24;
      objc_msgSend(MEMORY[0x1E0C99E20], "set");
      obja = (void *)objc_claimAutoreleasedReturnValue();
      v75 = 0u;
      v76 = 0u;
      v77 = 0u;
      v78 = 0u;
      v60 = v30;
      v32 = v30;
      v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v75, v86, 16);
      if (!v33)
        goto LABEL_35;
      v34 = v33;
      v35 = *(_QWORD *)v76;
      while (1)
      {
        for (j = 0; j != v34; ++j)
        {
          if (*(_QWORD *)v76 != v35)
            objc_enumerationMutation(v32);
          objc_msgSend(*(id *)(*((_QWORD *)&v75 + 1) + 8 * j), "asset");
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          v74 = 0;
          objc_msgSend(v37, "masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:fullsizeRenderImageIfNecessary:error:", &v74, 0, 0);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          v39 = v74;
          if (v39)
          {
            v40 = v69;
            v41 = v39;
          }
          else
          {
            v40 = v65;
            v41 = v38;
          }
          objc_msgSend(v40, "objectForKeyedSubscript:", v41);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          v43 = v42;
          if (v42)
          {
            if (objc_msgSend(v42, "isMomentSharedAsset")
              && (objc_msgSend(v43, "momentShare"),
                  v44 = (void *)objc_claimAutoreleasedReturnValue(),
                  v45 = objc_msgSend(v44, "status"),
                  v44,
                  v45 != 1))
            {
              v48 = obja;
              v49 = v43;
            }
            else
            {
              objc_msgSend(v37, "momentShare");
              v46 = (void *)objc_claimAutoreleasedReturnValue();
              v47 = objc_msgSend(v46, "status");

              if (v47 == 1)
                goto LABEL_33;
              v48 = obja;
              v49 = v37;
            }
            objc_msgSend(v48, "addObject:", v49);
          }
LABEL_33:

        }
        v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v75, v86, 16);
        if (!v34)
        {
LABEL_35:

          v72 = 0u;
          v73 = 0u;
          v70 = 0u;
          v71 = 0u;
          v50 = obja;
          v51 = -[NSObject countByEnumeratingWithState:objects:count:](v50, "countByEnumeratingWithState:objects:count:", &v70, v85, 16);
          if (v51)
          {
            v52 = v51;
            v53 = *(_QWORD *)v71;
            v54 = (_BYTE *)MEMORY[0x1E0D115D0];
            do
            {
              for (k = 0; k != v52; ++k)
              {
                if (*(_QWORD *)v71 != v53)
                  objc_enumerationMutation(v50);
                v56 = *(void **)(*((_QWORD *)&v70 + 1) + 8 * k);
                objc_msgSend(v56, "additionalAttributes");
                v57 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v57, "setDestinationAssetCopyState:", 2);

                if (!*v54)
                {
                  __CPLAssetsdOSLogDomain();
                  v58 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v58, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 67109378;
                    *(_DWORD *)v88 = 2;
                    *(_WORD *)&v88[4] = 2112;
                    *(_QWORD *)&v88[6] = v56;
                    _os_log_impl(&dword_199541000, v58, OS_LOG_TYPE_DEBUG, "Setting destinationAssetCopyState %d for asset %@", buf, 0x12u);
                  }

                }
              }
              v52 = -[NSObject countByEnumeratingWithState:objects:count:](v50, "countByEnumeratingWithState:objects:count:", &v70, v85, 16);
            }
            while (v52);
          }

          v27 = v61;
          v24 = v62;
          v31 = v59;
          v30 = v60;
          goto LABEL_50;
        }
      }
    }
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v50 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543618;
        *(_QWORD *)v88 = v24;
        *(_WORD *)&v88[8] = 2112;
        *(_QWORD *)&v88[10] = v31;
        _os_log_impl(&dword_199541000, v50, OS_LOG_TYPE_ERROR, "Failed to fetch assets with same fingerprint with predicate: %{public}@, error: %@", buf, 0x16u);
      }
LABEL_50:

    }
    v3 = v63;
  }

}

+ (id)assetsByCloudAssetUUID:(id)a3 inLibrary:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *context;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", objc_msgSend(v6, "count"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  context = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(MEMORY[0x1E0D11468], "scopedIdentifiersFromArrayOfUnknownIdentifiers:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "assetsWithScopedIdentifiers:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:", v9, 0, 0, v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v20 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * i);
        objc_msgSend(v15, "cloudAssetGUID");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKey:", v15, v16);

      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v12);
  }

  objc_autoreleasePoolPop(context);
  return v8;
}

+ (id)assetsByScopedIdentifiers:(id)a3 relationshipKeyPathsForPrefetching:(id)a4 inLibrary:(id)a5
{
  void *v5;
  void *v6;

  objc_msgSend(a1, "assetsWithScopedIdentifiers:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:", a3, 0, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_pl_indexBy:", &__block_literal_global_284);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (PLManagedAsset)assetWithScopedIdentifier:(id)a3 inLibrary:(id)a4 prefetchResources:(BOOL)a5
{
  _BOOL8 v5;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v15;
  uint64_t v16;

  v5 = a5;
  v16 = *MEMORY[0x1E0C80C00];
  v15 = a3;
  v8 = (void *)MEMORY[0x1E0C99D20];
  v9 = a4;
  v10 = a3;
  objc_msgSend(v8, "arrayWithObjects:count:", &v15, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(a1, "assetsWithScopedIdentifiers:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:", v11, v5, 0, v9, v15, v16);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v12, "firstObject");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return (PLManagedAsset *)v13;
}

+ (id)assetsWithScopedIdentifiers:(id)a3 prefetchResources:(BOOL)a4 relationshipKeyPathsForPrefetching:(id)a5 inLibrary:(id)a6
{
  _BOOL8 v7;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;

  v7 = a4;
  v10 = a6;
  v11 = a5;
  v12 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "objectsWithScopedIdentifiers:forEntityName:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:", v12, v13, v7, v11, v10);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

+ (id)objectsWithScopedIdentifiers:(id)a3 forEntityName:(id)a4 prefetchResources:(BOOL)a5 relationshipKeyPathsForPrefetching:(id)a6 inLibrary:(id)a7
{
  id v12;
  id v13;
  void *v14;
  int v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  const __CFString *v43;
  void *v44;
  id v45;
  NSObject *v46;
  id v48;
  void *v49;
  void *context;
  void *v51;
  _BOOL4 v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  _QWORD v57[4];
  id v58;
  id v59;
  id v60;
  id v61;
  _QWORD *v62;
  char v63;
  _QWORD v64[5];
  id v65;
  uint8_t buf[4];
  id v67;
  _QWORD v68[2];
  _QWORD v69[4];

  v52 = a5;
  v69[2] = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v54 = a6;
  v55 = a7;
  if (v12 && !objc_msgSend(v12, "count"))
  {
    v35 = (void *)MEMORY[0x1E0C9AA60];
  }
  else
  {
    +[PLCloudMaster entityName](PLCloudMaster, "entityName");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v13, "isEqualToString:", v14);

    if ((v15 & 1) == 0)
    {
      +[PLManagedAsset entityName](PLManagedAsset, "entityName");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v13, "isEqualToString:", v16);

      if ((v17 & 1) == 0)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+CPL.m"), 3279, CFSTR("Entity name must be either Asset or CloudMaster."));

      }
    }
    if (v12)
    {
      context = (void *)MEMORY[0x19AEC1554]();
      objc_msgSend(v55, "managedObjectContext");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "_pl_filter:", &__block_literal_global_288);
      v53 = (void *)objc_claimAutoreleasedReturnValue();

      v19 = (void *)MEMORY[0x1E0CB3928];
      NSStringFromSelector(sel_scopeIdentifier);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "sortDescriptorWithKey:ascending:", v20, 1);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v69[0] = v21;
      v22 = (void *)MEMORY[0x1E0CB3928];
      NSStringFromSelector(sel_identifier);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "sortDescriptorWithKey:ascending:", v23, 1);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v69[1] = v24;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v69, 2);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v53, "sortedArrayUsingDescriptors:", v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v64[0] = 0;
      v64[1] = v64;
      v64[2] = 0x3032000000;
      v64[3] = __Block_byref_object_copy__44479;
      v64[4] = __Block_byref_object_dispose__44480;
      v65 = 0;
      v57[0] = MEMORY[0x1E0C809B0];
      v57[1] = 3221225472;
      v57[2] = __129__PLManagedAsset_CPL__objectsWithScopedIdentifiers_forEntityName_prefetchResources_relationshipKeyPathsForPrefetching_inLibrary___block_invoke_2;
      v57[3] = &unk_1E366A798;
      v62 = v64;
      v29 = v26;
      v58 = v29;
      v48 = v27;
      v59 = v48;
      v60 = v55;
      v63 = v15;
      v30 = v28;
      v61 = v30;
      objc_msgSend(v29, "enumerateObjectsUsingBlock:", v57);
      objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = v31;
      if ((v15 & 1) != 0)
      {
        v33 = v31;
        v34 = (void *)MEMORY[0x1E0C97B48];
        +[PLCloudMaster entityName](PLCloudMaster, "entityName", v48);
      }
      else
      {
        v36 = (void *)MEMORY[0x1E0CB3528];
        v68[0] = v31;
        objc_msgSend(a1, "predicateForSupportedAssetTypesForUpload", v48);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        v68[1] = v37;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v68, 2);
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "andPredicateWithSubpredicates:", v38);
        v33 = (id)objc_claimAutoreleasedReturnValue();

        v34 = (void *)MEMORY[0x1E0C97B48];
        +[PLManagedAsset entityName](PLManagedAsset, "entityName");
      }
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "fetchRequestWithEntityName:", v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v40, "setPredicate:", v33);
      objc_msgSend(v40, "setFetchLimit:", objc_msgSend(v53, "count"));
      if ((unint64_t)objc_msgSend(v53, "count") >= 0x65)
        objc_msgSend(v40, "setFetchBatchSize:", 100);
      objc_msgSend(MEMORY[0x1E0C99E20], "setWithArray:", v54);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = v41;
      if (v52)
      {
        if (v15)
        {
          objc_msgSend(v41, "addObject:", CFSTR("assets.modernResources"));
          v43 = CFSTR("transientModernResources");
        }
        else
        {
          objc_msgSend(v41, "addObject:", CFSTR("modernResources"));
          v43 = CFSTR("master");
        }
        objc_msgSend(v42, "addObject:", v43);
      }
      objc_msgSend(v42, "allObjects");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "setRelationshipKeyPathsForPrefetching:", v44);

      v56 = 0;
      objc_msgSend(v51, "executeFetchRequest:error:", v40, &v56);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v45 = v56;
      if (!v35 && !*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v46 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v67 = v45;
          _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_ERROR, "Could not fetch objects by scoped identifier: %@", buf, 0xCu);
        }

      }
      _Block_object_dispose(v64, 8);

      objc_autoreleasePoolPop(context);
      v12 = v53;
    }
    else
    {
      v35 = 0;
    }
  }

  return v35;
}

+ (id)predicateForSupportedAssetTypesForUpload
{
  return (id)objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport"), 0);
}

+ (id)predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders
{
  return (id)objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders"), 0);
}

+ (id)predicateForUploadableAssetsWithMasterCloudLocalStateNotEqualTo:(signed __int16)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[4];

  v10[3] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d && %K != %d"), CFSTR("master.cloudLocalState"), a3, CFSTR("master.cloudLocalState"), 4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v4;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport"), 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = v5;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("$K != %d"), CFSTR("trashedState"), 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[2] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateForUploadableAssetsWithCloudLocalState:(signed __int16)a3
{
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "predicateForUploadableAssetsWithCloudLocalStates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)_predicateForCloudLocalStates:(id)a3
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("cloudLocalState"), *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v9), (_QWORD)v13);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)predicateForUploadableAssetsWithCloudLocalStates:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[4];

  v10[3] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(a1, "_predicateForCloudLocalStates:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v4;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = v5;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) != %d"), CFSTR("trashedState"), 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[2] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "andPredicateWithSubpredicates:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)predicateForUploadableAssetsWithoutCloudLocalState:(signed __int16)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[4];

  v12[3] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3528];
  v4 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "predicateWithFormat:", CFSTR("noindex:(%K) != %@"), CFSTR("cloudLocalState"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = v6;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport"), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v7;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("trashedState"), 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v12, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (id)predicateForAssetsToCheckForDeletionOnCPLDisable
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransport"), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v4;
  objc_msgSend(a1, "_syncablePredicate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "andPredicateWithSubpredicates:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

+ (id)predicateForLocallyAvailablePrimaryStoreResourcesWithCPLResourceTypes:(id)a3 version:(unsigned int)a4
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("SUBQUERY(%K, $resource, $resource.%K == %d AND ($resource.%K IN %@) AND $resource.%K >= %d AND $resource.%K == %d).@count > 0"), CFSTR("modernResources"), CFSTR("dataStoreClassID"), 0, CFSTR("dataStoreSubtype"), a3, CFSTR("localAvailability"), 1, CFSTR("version"), *(_QWORD *)&a4);
}

+ (unint64_t)totalSizeOfUnpushedOriginalsInPhotoLibrary:(id)a3 outMasterList:(id)a4 isInitialUpload:(BOOL)a5
{
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  BOOL v15;

  v8 = a3;
  v9 = a4;
  if (v9)
  {
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke;
    v11[3] = &unk_1E3674EE0;
    v15 = a5;
    v14 = a1;
    v12 = v8;
    v13 = v9;
    objc_msgSend(v12, "performBlockAndWait:", v11);

  }
  return 0;
}

+ (unint64_t)countOfDeferredAssetsToSyncInPhotoLibrary:(id)a3 outAssetList:(id)a4
{
  id v6;
  id v7;
  unint64_t v8;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a3;
  v7 = a4;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  if (v7)
  {
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke;
    v10[3] = &unk_1E3674DF8;
    v14 = a1;
    v11 = v6;
    v13 = &v15;
    v12 = v7;
    objc_msgSend(v11, "performBlockAndWait:", v10);

    v8 = v16[3];
  }
  else
  {
    v8 = 0;
  }
  _Block_object_dispose(&v15, 8);

  return v8;
}

+ (unint64_t)iCPLAssetCountInPhotoLibrary:(id)a3
{
  id v3;
  id v4;
  unint64_t v5;
  _QWORD v7[4];
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a3;
  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v13 = 0x7FFFFFFFFFFFFFFFLL;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __52__PLManagedAsset_CPL__iCPLAssetCountInPhotoLibrary___block_invoke;
  v7[3] = &unk_1E3677C68;
  v4 = v3;
  v8 = v4;
  v9 = &v10;
  objc_msgSend(v4, "performBlockAndWait:", v7);
  v5 = v11[3];

  _Block_object_dispose(&v10, 8);
  return v5;
}

+ (unint64_t)countOfNotUploadedAssetsInPhotoLibrary:(id)a3 forAssetType:(signed __int16)a4 error:(id *)a5
{
  id v7;
  id v8;
  unint64_t v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  id *v14;
  signed __int16 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v7 = a3;
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v19 = 0;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __81__PLManagedAsset_CPL__countOfNotUploadedAssetsInPhotoLibrary_forAssetType_error___block_invoke;
  v11[3] = &unk_1E366A810;
  v15 = a4;
  v13 = &v16;
  v8 = v7;
  v12 = v8;
  v14 = a5;
  objc_msgSend(v8, "performBlockAndWait:", v11);
  v9 = v17[3];

  _Block_object_dispose(&v16, 8);
  return v9;
}

+ (id)_syncablePredicate
{
  if (_syncablePredicate_onceToken_44757 != -1)
    dispatch_once(&_syncablePredicate_onceToken_44757, &__block_literal_global_359);
  return (id)_syncablePredicate_predicate_44758;
}

+ (id)predicateForUnpushedDeferredAssets
{
  if (predicateForUnpushedDeferredAssets_onceToken != -1)
    dispatch_once(&predicateForUnpushedDeferredAssets_onceToken, &__block_literal_global_364);
  return (id)predicateForUnpushedDeferredAssets_predicate;
}

+ (id)_predicateForTrashedAssetsToExcludeInInitialUpload
{
  if (_predicateForTrashedAssetsToExcludeInInitialUpload_onceToken != -1)
    dispatch_once(&_predicateForTrashedAssetsToExcludeInInitialUpload_onceToken, &__block_literal_global_373);
  return (id)_predicateForTrashedAssetsToExcludeInInitialUpload_normalOrNeverPushedAssetPredicate;
}

+ (id)assetsToUploadInitiallyInManagedObjectContext:(id)a3 limit:(unint64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[2];
  _QWORD v23[3];

  v23[2] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  objc_msgSend(a1, "predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_notPushedAssetsToUploadInitiallyInManagedObjectContext:withSavedAssetTypePredicate:shouldSort:limit:", v6, v7, 1, a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v8, "count"))
  {
    v9 = (void *)MEMORY[0x1E0CB3528];
    objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForMomentSharedAsset"), 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = v10;
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("momentShare.shareURL"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v23[1] = v11;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 2);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "andPredicateWithSubpredicates:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(a1, "_notPushedAssetsToUploadInitiallyInManagedObjectContext:withSavedAssetTypePredicate:shouldSort:limit:", v6, v13, 0, a4);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (!objc_msgSend(v14, "count"))
    {
      v15 = (void *)MEMORY[0x1E0CB3528];
      objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForPlaceholderAsset"), 1);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K == nil || %K != nil) && %K != nil"), CFSTR("momentShare"), CFSTR("momentShare.shareURL"), CFSTR("master"), v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v22[1] = v17;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v22, 2);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "andPredicateWithSubpredicates:", v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(a1, "_notPushedAssetsToUploadInitiallyInManagedObjectContext:withSavedAssetTypePredicate:shouldSort:limit:", v6, v19, 0, a4);
      v20 = objc_claimAutoreleasedReturnValue();

      v14 = (void *)v20;
    }

    v8 = v14;
  }

  return v8;
}

+ (id)_notPushedAssetsToUploadInitiallyInManagedObjectContext:(id)a3 withSavedAssetTypePredicate:(id)a4 shouldSort:(BOOL)a5 limit:(unint64_t)a6
{
  _BOOL4 v6;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *context;
  uint64_t v27;
  const __CFString *v28;
  void *v29;
  _QWORD v30[5];

  v6 = a5;
  v30[4] = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  context = (void *)MEMORY[0x19AEC1554]();
  v11 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "fetchRequestWithEntityName:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d AND additionalAttributes.uploadAttempts <= 1"), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_predicateForTrashedAssetsToExcludeInInitialUpload");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)MEMORY[0x1E0CB3528];
  v30[0] = v10;
  v30[1] = v14;
  +[PLManagedAsset _syncablePredicate](PLManagedAsset, "_syncablePredicate");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v30[2] = v17;
  v30[3] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 4);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "andPredicateWithSubpredicates:", v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("dateCreated"), 0);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = v20;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v29, 1);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setSortDescriptors:", v21);

  }
  v28 = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v28, 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setRelationshipKeyPathsForPrefetching:", v22);

  objc_msgSend(v13, "setPredicate:", v19);
  objc_msgSend(v13, "setFetchLimit:", vcvtpd_u64_f64((double)(a6 >> 1) + 0.5));
  v27 = 0;
  objc_msgSend(v9, "executeFetchRequest:error:", v13, &v27);
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(context);
  return v23;
}

+ (id)assetsToRetryInLibrary:(id)a3 limit:(unint64_t)a4
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v28;
  void *context;
  id v30;
  uint64_t v31;
  const __CFString *v32;
  _QWORD v33[2];
  _QWORD v34[4];
  _QWORD v35[3];

  v35[2] = *MEMORY[0x1E0C80C00];
  v30 = a3;
  objc_msgSend(v30, "managedObjectContext");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  context = (void *)MEMORY[0x19AEC1554]();
  v5 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchRequestWithEntityName:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "dateByAddingTimeInterval:", -86400.0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d AND additionalAttributes.lastUploadAttemptDate != nil AND additionalAttributes.lastUploadAttemptDate < %@ AND additionalAttributes.uploadAttempts > 1"), 0, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("momentShare == nil"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v35[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("momentShare.shareURL != nil"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v35[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "orPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = (void *)MEMORY[0x1E0CB3528];
  v34[0] = v10;
  +[PLManagedAsset _syncablePredicate](PLManagedAsset, "_syncablePredicate");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v34[1] = v17;
  objc_msgSend(a1, "predicateForSupportedAssetTypesForUpload");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v34[2] = v18;
  v34[3] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 4);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "andPredicateWithSubpredicates:", v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("dateCreated"), 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = v21;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("additionalAttributes.uploadAttempts"), 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v33[1] = v22;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v33, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setSortDescriptors:", v23);

  v32 = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v32, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setRelationshipKeyPathsForPrefetching:", v24);

  objc_msgSend(v7, "setPredicate:", v20);
  objc_msgSend(v7, "setFetchLimit:", vcvtpd_u64_f64((double)(a4 >> 1) + 0.5));
  v31 = 0;
  objc_msgSend(v28, "executeFetchRequest:error:", v7, &v31);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(context);
  return v25;
}

+ (void)resetAssetsCloudStateInLibrary:(id)a3
{
  id v3;
  void *v4;
  _BYTE *v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  id v27;
  id v28;
  _QWORD v29[2];
  _QWORD v30[2];
  uint8_t buf[4];
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v4 = (void *)MEMORY[0x19AEC1554]();
  v5 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_DEFAULT, "Resetting cloudLocalState of assets", buf, 2u);
    }

  }
  v7 = objc_alloc(MEMORY[0x1E0C97AB0]);
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithEntityName:", v8);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(cloudLocalState != %d)"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);
  objc_msgSend(v9, "setResultType:", 2);
  objc_msgSend(v9, "setPropertiesToUpdate:", &unk_1E3764620);
  objc_msgSend(v3, "managedObjectContext");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = 0;
  objc_msgSend(v11, "executeRequest:error:", v9, &v28);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v28;

  if (v13)
  {
    if (*v5)
      goto LABEL_13;
    __CPLAssetsdOSLogDomain();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v32 = v13;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_ERROR, "Failed to batch     assets: %@", buf, 0xCu);
    }
  }
  else
  {
    if (*v5)
      goto LABEL_13;
    __CPLAssetsdOSLogDomain();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v12, "result");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v32 = v15;
      _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Batch updated %@ assets", buf, 0xCu);

    }
  }

LABEL_13:
  objc_autoreleasePoolPop(v4);
  v16 = (void *)MEMORY[0x19AEC1554]();
  if (!*v5)
  {
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "Resetting uploadAttempts of assets", buf, 2u);
    }

  }
  v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C97AB0]), "initWithEntityName:", CFSTR("AdditionalAssetAttributes"));
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("lastUploadAttemptDate != nil OR uploadAttempts > 0"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setPredicate:", v19);
  objc_msgSend(v18, "setResultType:", 2);
  v29[0] = CFSTR("uploadAttempts");
  v29[1] = CFSTR("lastUploadAttemptDate");
  v30[0] = &unk_1E375EEF8;
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v30[1] = v20;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v30, v29, 2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setPropertiesToUpdate:", v21);

  objc_msgSend(v3, "managedObjectContext");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0;
  objc_msgSend(v22, "executeRequest:error:", v18, &v27);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v27;

  if (v24)
  {
    if (!*v5)
    {
      __CPLAssetsdOSLogDomain();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v24;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_ERROR, "Failed to batch assets: %@", buf, 0xCu);
      }
LABEL_24:

    }
  }
  else if (!*v5)
  {
    __CPLAssetsdOSLogDomain();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v23, "result");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v32 = v26;
      _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_DEFAULT, "Batch updated %@ assets", buf, 0xCu);

    }
    goto LABEL_24;
  }

  objc_autoreleasePoolPop(v16);
}

+ (id)toUploadAssetsInLibrary:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v11;

  v3 = (void *)MEMORY[0x1E0C97B48];
  v4 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset predicateForUploadableAssetsWithMasterCloudLocalStateNotEqualTo:](PLManagedAsset, "predicateForUploadableAssetsWithMasterCloudLocalStateNotEqualTo:", 3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v4, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v6, &v11);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)failedToPushAssetInLibrary:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v11;

  v3 = (void *)MEMORY[0x1E0C97B48];
  v4 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset predicateForUploadableAssetsWithCloudLocalState:](PLManagedAsset, "predicateForUploadableAssetsWithCloudLocalState:", 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v4, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v6, &v11);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)quarantinedAssetsInLibrary:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v11;

  v3 = (void *)MEMORY[0x1E0C97B48];
  v4 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchRequestWithEntityName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset predicateForUploadableAssetsWithCloudLocalState:](PLManagedAsset, "predicateForUploadableAssetsWithCloudLocalState:", 4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPredicate:", v7);

  objc_msgSend(v4, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v6, &v11);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)_dataFromCPLPlaceAnnotation:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a3;
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "placeName");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      objc_msgSend(v3, "placeName");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKey:", v6, CFSTR("name"));

    }
    objc_msgSend(v3, "placeLevel");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      objc_msgSend(v3, "placeLevel");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKey:", v8, CFSTR("level"));

    }
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v4, 200, 0, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

+ (id)_placeAnnotationFromAnnotationData:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", a3, 0, 0, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      v4 = objc_alloc_init(MEMORY[0x1E0D11400]);
      objc_msgSend(v3, "objectForKey:", CFSTR("level"));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setPlaceLevel:", v5);

      objc_msgSend(v3, "objectForKey:", CFSTR("name"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setPlaceName:", v6);

    }
    else
    {
      v4 = 0;
    }

  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void __73__PLManagedAsset_CPL___predicateForTrashedAssetsToExcludeInInitialUpload__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d OR %K == nil"), CFSTR("trashedState"), 0, CFSTR("cloudAssetGUID"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)_predicateForTrashedAssetsToExcludeInInitialUpload_normalOrNeverPushedAssetPredicate;
  _predicateForTrashedAssetsToExcludeInInitialUpload_normalOrNeverPushedAssetPredicate = v0;

}

void __57__PLManagedAsset_CPL__predicateForUnpushedDeferredAssets__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v9[5] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("cloudLocalState"), 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v1;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) != 0"), CFSTR("complete"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v9[1] = v2;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(noindex:(%K) != %d AND noindex:(%K) != %d) OR noindex:(%K) != %d"), CFSTR("deferredProcessingNeeded"), 0, CFSTR("deferredProcessingNeeded"), 11, CFSTR("videoDeferredProcessingNeeded"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[2] = v3;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) < %llu"), CFSTR("additionalAttributes.cloudRecoveryState"), 0x80000000);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[3] = v4;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) == %d"), CFSTR("trashedState"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[4] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "andPredicateWithSubpredicates:", v6);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = (void *)predicateForUnpushedDeferredAssets_predicate;
  predicateForUnpushedDeferredAssets_predicate = v7;

}

void __41__PLManagedAsset_CPL___syncablePredicate__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("noindex:(%K) != 0 AND (noindex:(%K) == %d OR noindex:(%K) == %d) AND noindex:(%K) == %d"), CFSTR("complete"), CFSTR("deferredProcessingNeeded"), 0, CFSTR("deferredProcessingNeeded"), 11, CFSTR("videoDeferredProcessingNeeded"), 0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)_syncablePredicate_predicate_44758;
  _syncablePredicate_predicate_44758 = v0;

}

void __81__PLManagedAsset_CPL__countOfNotUploadedAssetsInPhotoLibrary_forAssetType_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  const __CFString *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  id v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  id v24;
  _QWORD v25[3];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLManagedAsset predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders](PLManagedAsset, "predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (*(_WORD *)(a1 + 56))
    v6 = CFSTR("%K == %d");
  else
    v6 = CFSTR("noindex:(%K) == %d");
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", v6, CFSTR("kind"), *(__int16 *)(a1 + 56));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == nil"), CFSTR("master"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("master.cloudLocalState != %d"), 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)MEMORY[0x1E0CB3528];
  v26[0] = v8;
  v26[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "orPredicateWithSubpredicates:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = (void *)MEMORY[0x1E0CB3528];
  v25[0] = v5;
  v25[1] = v7;
  v25[2] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v15);

  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v17 = objc_msgSend(v16, "countForFetchRequest:error:", v4, &v20);
  v18 = v20;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v17;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v22 = v4;
        v23 = 2112;
        v24 = v18;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Error on fetch: %@, error: %@", buf, 0x16u);
      }

    }
    if (*(_QWORD *)(a1 + 48) && v18)
      **(_QWORD **)(a1 + 48) = objc_retainAutorelease(v18);
  }

}

void __52__PLManagedAsset_CPL__iCPLAssetCountInPhotoLibrary___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  id v10;
  uint8_t buf[4];
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v5);

  objc_msgSend(v4, "setResultType:", 4);
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0;
  v7 = objc_msgSend(v6, "countForFetchRequest:error:", v4, &v10);
  v8 = v10;

  if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v12 = v8;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "Failed to fetch asset count. Error: %@", buf, 0xCu);
      }

    }
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v7;
  }

}

void __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  _QWORD v16[4];
  const __CFString *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint8_t buf[4];
  id v23;
  const __CFString *v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 56), "predicateForUnpushedDeferredAssets");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0CB3528];
  v25[0] = v5;
  +[PLManagedAsset predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders](PLManagedAsset, "predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "andPredicateWithSubpredicates:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "setPredicate:", v9);
  v24 = CFSTR("uuid");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v24, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPropertiesToFetch:", v10);

  objc_msgSend(v4, "setResultType:", 2);
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0;
  objc_msgSend(v11, "executeFetchRequest:error:", v4, &v21);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v21;
  if (v12)
  {
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke_2;
    v16[3] = &unk_1E366A7E8;
    v14 = *(_QWORD *)(a1 + 48);
    v17 = CFSTR("uuid");
    v20 = v14;
    v18 = *(id *)(a1 + 32);
    v19 = *(id *)(a1 + 40);
    objc_msgSend(v12, "enumerateObjectsUsingBlock:", v16);

    v15 = v17;
LABEL_6:

    goto LABEL_7;
  }
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v13;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Could not fetch the UUID of deferred assets: %@", buf, 0xCu);
    }
    goto LABEL_6;
  }
LABEL_7:

}

void __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32));
  v6 = (id)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
    v3 = objc_alloc(MEMORY[0x1E0D11468]);
    objc_msgSend(*(id *)(a1 + 40), "mainScopeIdentifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(v3, "initWithScopeIdentifier:identifier:", v4, v6);

    objc_msgSend(*(id *)(a1 + 48), "addObject:", v5);
  }

}

void __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  _QWORD v17[4];
  NSObject *v18;
  id v19;
  id v20;
  uint8_t buf[4];
  id v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d AND complete != 0 AND master != nil AND master.placeholderState != %d AND master.cloudMasterGUID != nil AND master.cloudMasterGUID != ''"), 0, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders](PLManagedAsset, "predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithObjects:", v5, v6, 0);
  if (*(_BYTE *)(a1 + 56))
  {
    objc_msgSend(*(id *)(a1 + 48), "_predicateForTrashedAssetsToExcludeInInitialUpload");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "addObject:", v8);

  }
  objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPredicate:", v9);
  v10 = objc_alloc_init(MEMORY[0x1E0C97B30]);
  objc_msgSend(v10, "setName:", CFSTR("cloudMasterGUID"));
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForKeyPath:", CFSTR("master.cloudMasterGUID"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setExpression:", v11);

  objc_msgSend(v10, "setExpressionResultType:", 700);
  v23[0] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setPropertiesToFetch:", v12);

  objc_msgSend(v4, "setResultType:", 2);
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  objc_msgSend(v13, "executeFetchRequest:error:", v4, &v20);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v20;
  if (v14)
  {
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke_2;
    v17[3] = &unk_1E366A7C0;
    v18 = *(id *)(a1 + 32);
    v19 = *(id *)(a1 + 40);
    objc_msgSend(v14, "enumerateObjectsUsingBlock:", v17);

    v16 = v18;
LABEL_8:

    goto LABEL_9;
  }
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v15;
      _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Could not fetch total size of unpushed original assets: %@", buf, 0xCu);
    }
    goto LABEL_8;
  }
LABEL_9:

}

void __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(a2, "objectForKey:", CFSTR("cloudMasterGUID"));
  v6 = (id)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v3 = objc_alloc(MEMORY[0x1E0D11468]);
    objc_msgSend(*(id *)(a1 + 32), "mainScopeIdentifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(v3, "initWithScopeIdentifier:identifier:", v4, v6);

    objc_msgSend(*(id *)(a1 + 40), "addObject:", v5);
  }

}

void __129__PLManagedAsset_CPL__objectsWithScopedIdentifiers_forEntityName_prefetchResources_relationshipKeyPathsForPrefetching_inLibrary___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  int v13;
  int v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v5 = a2;
  objc_msgSend(v5, "scopeIdentifier");
  v6 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "identifier");
  v23 = (id)objc_claimAutoreleasedReturnValue();

  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
  if (v7)
    v8 = objc_msgSend(v7, "isEqualToString:", v6) ^ 1;
  else
    v8 = 0;
  v9 = objc_msgSend(*(id *)(a1 + 32), "count") - 1;
  if ((v8 & 1) != 0 || v9 == a3)
  {
    if (v9 == a3)
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v23);
    v10 = (void *)v6;
    if (v8)
      v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    v11 = v10;
    objc_msgSend(*(id *)(a1 + 48), "mainScopeIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v11, "isEqualToString:", v12);

    v14 = *(unsigned __int8 *)(a1 + 72);
    v15 = (void *)MEMORY[0x1E0CB3880];
    v16 = objc_msgSend(*(id *)(a1 + 40), "copy");
    v17 = (void *)v16;
    if (v13)
    {
      if (v14)
        objc_msgSend(v15, "predicateWithFormat:", CFSTR("cloudMasterGUID IN %@ AND noindex:(%K) == NULL"), v16, CFSTR("momentShare"), v21, v22);
      else
        objc_msgSend(v15, "predicateWithFormat:", CFSTR("%K IN %@ AND noindex:(%K) == NULL"), CFSTR("cloudAssetGUID"), v16, CFSTR("momentShare"), v22);
    }
    else if (v14)
    {
      objc_msgSend(v15, "predicateWithFormat:", CFSTR("cloudMasterGUID IN %@ AND %K == %@"), v16, CFSTR("momentShare.scopeIdentifier"), v11, v22);
    }
    else
    {
      objc_msgSend(v15, "predicateWithFormat:", CFSTR("%K IN %@ AND %K == %@"), CFSTR("cloudAssetGUID"), v16, CFSTR("momentShare.scopeIdentifier"), v11);
    }
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 56), "addObject:", v18);
    objc_msgSend(*(id *)(a1 + 40), "removeAllObjects");

  }
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v23);
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v20 = *(void **)(v19 + 40);
  *(_QWORD *)(v19 + 40) = v6;

}

uint64_t __129__PLManagedAsset_CPL__objectsWithScopedIdentifiers_forEntityName_prefetchResources_relationshipKeyPathsForPrefetching_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  char isKindOfClass;

  v2 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

uint64_t __94__PLManagedAsset_CPL__assetsByScopedIdentifiers_relationshipKeyPathsForPrefetching_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "scopedIdentifier");
}

void __66__PLManagedAsset_CPL__listOfSharingRelationshipsRelevantForUpload__block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D20]), "initWithObjects:", CFSTR("libraryScope"), CFSTR("libraryScopeAssetContributors"), 0);
  v1 = (void *)listOfSharingRelationshipsRelevantForUpload_result;
  listOfSharingRelationshipsRelevantForUpload_result = v0;

}

void __63__PLManagedAsset_CPL__listOfSharingAttributesRelevantForUpload__block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D20]), "initWithObjects:", CFSTR("libraryScopeShareState"), 0);
  v1 = (void *)listOfSharingAttributesRelevantForUpload_result;
  listOfSharingAttributesRelevantForUpload_result = v0;

}

void __45__PLManagedAsset_CPL__listOfSyncedProperties__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithObjects:", CFSTR("favorite"), CFSTR("lastSharedDate"), CFSTR("addedDate"), CFSTR("dateCreated"), CFSTR("locationData"), CFSTR("hidden"), CFSTR("title"), CFSTR("visibilityState"), CFSTR("avalancheUUID"), CFSTR("avalanchePickType"), CFSTR("kindSubtype"), CFSTR("hdrType"), CFSTR("trashedState"), CFSTR("trashedDate"), CFSTR("mediaGroupUUID"), CFSTR("videoCpDurationValue"), CFSTR("videoCpVisibilityState"),
                 CFSTR("sortToken"),
                 CFSTR("adjustmentsState"),
                 CFSTR("orientation"),
                 CFSTR("duration"),
                 CFSTR("deferredProcessingNeeded"),
                 CFSTR("cameraProcessingAdjustmentState"),
                 CFSTR("videoDeferredProcessingNeeded"),
                 CFSTR("savedAssetType"),
                 0);
  if ((_os_feature_enabled_impl() & 1) == 0)
  {
    objc_msgSend(v6, "addObject:", CFSTR("trashedByParticipant"));
    objc_msgSend(*(id *)(a1 + 32), "listOfSharingAttributesRelevantForUpload");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObjectsFromArray:", v2);

    objc_msgSend(*(id *)(a1 + 32), "listOfSharingRelationshipsRelevantForUpload");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObjectsFromArray:", v3);

  }
  v4 = objc_msgSend(v6, "copy");
  v5 = (void *)listOfSyncedProperties_result_44840;
  listOfSyncedProperties_result_44840 = v4;

}

void __76__PLManagedAsset_CPL___predicateForAssetsWithNotCompleteResourcesOnResource__block_invoke()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[3];

  v27[2] = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset.master == NULL"));
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset.master != NULL"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1E0CB3880];
  +[PLInternalResource originalCPLResourceTypesForMaster](PLInternalResource, "originalCPLResourceTypesForMaster");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "predicateWithFormat:", CFSTR("dataStoreClassID == %d AND dataStoreSubtype IN %@ AND version == %d AND localAvailability <= %d"), 0, v3, 0, 0xFFFFFFFFLL);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0CB3528];
  v27[0] = v1;
  v27[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v27, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "andPredicateWithSubpredicates:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = (void *)MEMORY[0x1E0CB3528];
  v26[0] = v23;
  v26[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "orPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObject:", v10);

  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", CFSTR("asset"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)MEMORY[0x1E0CB3880];
  +[PLInternalResource originalCPLResourceTypesForAsset](PLInternalResource, "originalCPLResourceTypesForAsset");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "predicateWithFormat:", CFSTR("dataStoreClassID == %d AND dataStoreSubtype IN %@ AND version IN %@ AND localAvailability <= %d"), 0, v13, &unk_1E3763B78, 0xFFFFFFFFLL);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = (void *)MEMORY[0x1E0CB3528];
  v25[0] = v11;
  v25[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "andPredicateWithSubpredicates:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0CB3528];
  v24 = v17;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v24, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "orPredicateWithSubpredicates:", v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObject:", v20);

  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v0);
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = (void *)_predicateForAssetsWithNotCompleteResourcesOnResource_predicate;
  _predicateForAssetsWithNotCompleteResourcesOnResource_predicate = v21;

}

void __69__PLManagedAsset_CPL__predicateForAssetsWithCompleteResourcesOnAsset__block_invoke()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[3];

  v24[2] = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("master == NULL"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("master != NULL"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLInternalResource predicateForAllOriginalResourcesLocallyAvailable](PLInternalResource, "predicateForAllOriginalResourcesLocallyAvailable");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1E0CB3528];
  v24[0] = v20;
  v24[1] = v1;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "andPredicateWithSubpredicates:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0CB3528];
  v23[0] = v19;
  v23[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "orPredicateWithSubpredicates:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObject:", v7);

  +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForUnadjustedAssetsWithKeyPathToAsset:", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:](PLManagedAsset, "predicateForAdjustedAssetsWithKeyPathToAsset:", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLInternalResource predicateForAllFullSizeResourcesLocallyAvailable](PLInternalResource, "predicateForAllFullSizeResourcesLocallyAvailable");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0CB3528];
  v22[0] = v9;
  v22[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v22, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "andPredicateWithSubpredicates:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = (void *)MEMORY[0x1E0CB3528];
  v21[0] = v8;
  v21[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v21, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "orPredicateWithSubpredicates:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObject:", v16);

  objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v0);
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = (void *)predicateForAssetsWithCompleteResourcesOnAsset_predicate;
  predicateForAssetsWithCompleteResourcesOnAsset_predicate = v17;

}

void __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  id v20;
  uint64_t v21;
  uint8_t buf[4];
  uint64_t v23;
  _QWORD v24[2];
  const __CFString *v25;
  _QWORD v26[4];

  v26[3] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchRequestWithEntityName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("cloudLocalState == %d AND master == nil"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0CB3528];
  v26[0] = v5;
  objc_msgSend(a1[6], "predicateForSupportedAssetTypesForUpload");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v26[1] = v7;
  objc_msgSend(a1[6], "_syncablePredicate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v26[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "andPredicateWithSubpredicates:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v25 = CFSTR("master");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v25, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setRelationshipKeyPathsForPrefetching:", v11);

  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("dateCreated"), 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = v12;
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("additionalAttributes.uploadAttempts"), 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v24[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setSortDescriptors:", v14);

  objc_msgSend(v4, "setPredicate:", v10);
  v21 = 0;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke_2;
  v18[3] = &unk_1E3677A78;
  v15 = a1[4];
  v19 = a1[5];
  v20 = a1[4];
  v16 = (id)objc_msgSend(v15, "enumerateObjectsFromFetchRequest:count:usingDefaultBatchSizeWithBlock:", v4, &v21, v18);
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v23 = v21;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "cloudMaster creation done: %li", buf, 0xCu);
    }

  }
}

void __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  char v6;
  id v7;
  NSObject *v8;
  id v9;
  uint8_t buf[4];
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "createMasterIfNecessaryInLibrary:", *(_QWORD *)(a1 + 32));
  if (__ROR8__(0x8F5C28F5C28F5C29 * a3, 2) <= 0x28F5C28F5C28F5CuLL
    && objc_msgSend(*(id *)(a1 + 40), "hasChanges"))
  {
    v5 = *(void **)(a1 + 40);
    v9 = 0;
    v6 = objc_msgSend(v5, "save:", &v9);
    v7 = v9;
    if ((v6 & 1) == 0 && !*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v11 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "failed to save after creating master for some assets %@", buf, 0xCu);
      }

    }
  }
}

- (id)sidecars
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v9, "canRepresentAsSidecar"))
        {
          objc_msgSend(v9, "sidecarRepresentation");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v3, "addObject:", v10);

        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  return v3;
}

- (NSArray)sortedSidecarFiles
{
  void *v3;
  void *v4;

  if (sortedSidecarFiles_s_onceToken != -1)
    dispatch_once(&sortedSidecarFiles_s_onceToken, &__block_literal_global_46238);
  -[PLManagedAsset sidecars](self, "sidecars");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sortedArrayUsingDescriptors:", sortedSidecarFiles_s_descriptors);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSArray *)v4;
}

- (id)sidecarWithResourceObjectID:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  _QWORD v10[4];
  id v11;

  v4 = a3;
  -[PLManagedAsset modernResources](self, "modernResources");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __63__PLManagedAsset_SidecarAdoption__sidecarWithResourceObjectID___block_invoke;
  v10[3] = &unk_1E366AB58;
  v11 = v4;
  v6 = v4;
  objc_msgSend(v5, "_pl_firstObjectPassingTest:", v10);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "sidecarRepresentation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (id)sidecarFileMatchingContentType:(id)a3 requireExactMatch:(BOOL)a4 requireSort:(BOOL)a5
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  if (a5)
    -[PLManagedAsset sortedSidecarFiles](self, "sortedSidecarFiles");
  else
    -[PLManagedAsset sidecars](self, "sidecars");
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v9 = (id)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v21;
    while (2)
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v21 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
        v15 = (void *)MEMORY[0x1E0D752F0];
        objc_msgSend(v14, "uniformTypeIdentifier", (_QWORD)v20);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "typeWithIdentifier:", v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();

        if (v8 && v17)
        {
          if (a4)
          {
            if ((objc_msgSend(v17, "isEqual:", v8) & 1) != 0)
              goto LABEL_18;
          }
          else if ((objc_msgSend(v17, "conformsToType:", v8) & 1) != 0)
          {
LABEL_18:
            v18 = v14;

            goto LABEL_19;
          }
        }

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v11)
        continue;
      break;
    }
  }
  v18 = 0;
LABEL_19:

  return v18;
}

- (BOOL)addSidecarFileInfo:(id)a3 pathManager:(id)a4 atIndex:(unint64_t)a5 mainFileMetadata:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v18;

  v10 = a6;
  v11 = a4;
  v12 = a3;
  objc_msgSend(v12, "objectForKey:", CFSTR("kPTPFilename"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", CFSTR("kPTPObjectCompressedSize"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", CFSTR("kPTPCaptureDate"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", CFSTR("kPTPModificationDate"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  LODWORD(v12) = objc_msgSend(v10, "orientation");
  LODWORD(v18) = (_DWORD)v12;
  LOBYTE(a5) = -[PLManagedAsset addSidecarFileAtIndex:sidecarURL:withFilename:compressedSize:captureDate:modificationDate:uniformTypeIdentifier:imageOrientation:pathManager:](self, "addSidecarFileAtIndex:sidecarURL:withFilename:compressedSize:captureDate:modificationDate:uniformTypeIdentifier:imageOrientation:pathManager:", a5, 0, v13, v14, v15, v16, 0, v18, v11);

  return a5;
}

- (BOOL)addSidecarFileAtIndex:(unint64_t)a3 sidecarURL:(id)a4 withFilename:(id)a5 compressedSize:(id)a6 captureDate:(id)a7 modificationDate:(id)a8 uniformTypeIdentifier:(id)a9 imageOrientation:(unsigned int)a10 pathManager:(id)a11
{
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  char v25;
  BOOL v26;
  void *v27;
  void *v28;
  char v29;
  void *v30;
  void *v31;
  id v32;
  NSObject *v33;
  void *v34;
  int v35;
  id v36;
  void *v37;
  id v39;
  id v40;
  id v42;
  id v43;
  id v44;
  uint8_t buf[4];
  id v46;
  __int16 v47;
  PLManagedAsset *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = a7;
  v21 = a8;
  v22 = a9;
  v23 = a11;
  if (v23)
  {
    if (v18)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLInternalResource+SidecarAdoption.m"), 263, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("pathManager"));

    if (v18)
    {
LABEL_3:
      if (v19)
        goto LABEL_4;
LABEL_17:
      v44 = 0;
      v35 = objc_msgSend(v17, "getResourceValue:forKey:error:", &v44, *MEMORY[0x1E0C99998], 0);
      v36 = v44;
      v37 = v36;
      if (v35)
        v19 = v36;

      if (v18)
        goto LABEL_5;
LABEL_20:
      v26 = 0;
      goto LABEL_21;
    }
  }
  objc_msgSend(v17, "lastPathComponent");
  v18 = (id)objc_claimAutoreleasedReturnValue();
  if (!v19)
    goto LABEL_17;
LABEL_4:
  if (!v18)
    goto LABEL_20;
LABEL_5:
  -[PLManagedAsset filename](self, "filename");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_msgSend(v18, "isEqualToString:", v24);

  v26 = 0;
  if (v17 && (v25 & 1) == 0 && v19)
  {
    v40 = v20;
    -[PLManagedAsset pathForVideoComplementFile](self, "pathForVideoComplementFile");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "lastPathComponent");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend(v18, "isEqual:", v28);

    if ((v29 & 1) != 0)
    {
      v26 = 0;
      v20 = v40;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
      v42 = v21;
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a10);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = 0;
      v26 = +[PLResourceInstaller installSupplementalResourceForExistingFileAtURL:ptpTrashedState:index:forAsset:imageOrientation:resultingResource:error:](PLResourceInstaller, "installSupplementalResourceForExistingFileAtURL:ptpTrashedState:index:forAsset:imageOrientation:resultingResource:error:", v17, 0, v30, self, v31, 0, &v43);
      v32 = v43;

      v20 = v40;
      v21 = v42;
      if (!v26)
      {
        v39 = v32;
        PLBackendGetLog();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412546;
          v46 = v39;
          v47 = 2112;
          v48 = self;
          _os_log_impl(&dword_199541000, v33, OS_LOG_TYPE_ERROR, "Error: %@, while storing supplemental resource for asset: %@", buf, 0x16u);
        }

        v32 = v39;
      }

    }
  }
LABEL_21:

  return v26;
}

- (id)urlForSideCarImageFile
{
  void *v2;
  void *v3;

  -[PLManagedAsset sidecarFileMatchingContentType:requireExactMatch:requireSort:](self, "sidecarFileMatchingContentType:requireExactMatch:requireSort:", *MEMORY[0x1E0CEC520], 0, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)fileURLForHypotheticalSidecarFileWithFilename:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  int v14;
  PLManagedAsset *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (!v5)
  {
    PLBackendGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v14 = 138412290;
      v15 = self;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Unable to get original file path for %@", (uint8_t *)&v14, 0xCu);
    }

    goto LABEL_7;
  }
  objc_msgSend(v5, "lastPathComponent");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v4, "isEqualToString:", v7);

  if ((v8 & 1) != 0)
  {
LABEL_7:
    v11 = 0;
    goto LABEL_8;
  }
  objc_msgSend(v6, "stringByDeletingLastPathComponent");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "stringByAppendingPathComponent:", v4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v10, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_8:
  return v11;
}

- (void)removeSidecar:(id)a3
{
  id v3;
  id v4;

  v3 = a3;
  objc_msgSend(v3, "asset");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deleteResourceForSidecarRepresentation:", v3);

}

uint64_t __63__PLManagedAsset_SidecarAdoption__sidecarWithResourceObjectID___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "objectID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

void __53__PLManagedAsset_SidecarAdoption__sortedSidecarFiles__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("index"), 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v3[0] = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v3, 1);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)sortedSidecarFiles_s_descriptors;
  sortedSidecarFiles_s_descriptors = v1;

}

- (void)deleteComputeSyncResourceIfExists
{
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_49281);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "singleLineDescription");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = 138543618;
        v8 = v5;
        v9 = 2112;
        v10 = v6;
        _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_DEFAULT, "[CCSS] Removing existing ComputeSync resource on asset %{public}@: %@", (uint8_t *)&v7, 0x16u);

      }
    }
    -[PLManagedAsset removeLocalFileForResource:allowDCIMPath:](self, "removeLocalFileForResource:allowDCIMPath:", v3, 1);
    objc_msgSend(v3, "deleteResource");
  }

}

- (BOOL)installComputeSyncResourceAfterAttachtoCPLWithError:(id *)a3
{
  void *v4;
  id v5;
  id v7;

  v7 = 0;
  -[PLManagedAsset installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:](self, "installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:", &v7);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v7;
  if (v4)
  {
    -[PLManagedAsset updateComputeSyncResourceAfterDownloadWithResource:onDemandDownload:](self, "updateComputeSyncResourceAfterDownloadWithResource:onDemandDownload:", v4, 0);
    objc_msgSend(v4, "setCloudPrefetchCount:", 10);
  }

  return 1;
}

- (BOOL)shouldPushComputeSync
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;

  v14 = (void *)objc_opt_class();
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v15, "localAnalysisMajorVersion");
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "localAnalysisStage");
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "cloudComputeStateVersion");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "adjustedStableHash");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "cloudComputeStateAdjustmentFingerprint");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = objc_msgSend(v14, "_shouldPushComputeSyncWithLocalMajorVersion:localAnalaysisStage:cloudComputeStateVersionStr:localAdjustmentFingerprint:cloudAdjustmentFingerprint:scopedIdentifier:", v3, v5, v7, v9, v11, v12);

  return v3;
}

- (id)_currentComputeStateVersion
{
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;

  v3 = (void *)MEMORY[0x1E0CB3940];
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "localAnalysisMajorVersion");
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringWithFormat:", CFSTR("%i.%i"), v5, (int)objc_msgSend(v6, "localAnalysisStage"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (void)applyComputeSyncPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4 didInstallComputeSyncResource:(BOOL *)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  id v16;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  if (_os_feature_enabled_impl())
  {
    objc_msgSend(v8, "computeStateVersion");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "computeStateAdjustmentFingerprint");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "computeStateLastUpdatedDate");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLComputeSyncAttributes updateCloudComputeSyncAttributesForAsset:cloudVersion:cloudAdjustmentFingerprint:cloudLastUpdatedDate:](PLComputeSyncAttributes, "updateCloudComputeSyncAttributesForAsset:cloudVersion:cloudAdjustmentFingerprint:cloudLastUpdatedDate:", self, v10, v11, v12);

    if (+[PLManagedAsset isComputeSyncEnabledForDirection:library:](PLManagedAsset, "isComputeSyncEnabledForDirection:library:", 1, v9))
    {
      if (-[PLManagedAsset _shouldInstallComputeSyncResourceFromCloudWithCPLAssetChange:](self, "_shouldInstallComputeSyncResourceFromCloudWithCPLAssetChange:", v8))
      {
        v16 = 0;
        -[PLManagedAsset installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:](self, "installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:", &v16);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v16;

        if (v13)
        {
          if (a5)
            *a5 = 1;
        }
        else if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            v18 = v14;
            v19 = 2112;
            v20 = v8;
            _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "[CCSS] Failed to install empty compute sync resource %@ from asset change %@", buf, 0x16u);
          }

        }
      }
    }
  }

}

- (BOOL)_shouldInstallComputeSyncResourceFromCloudWithCPLAssetChange:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  BOOL v8;

  v4 = a3;
  objc_msgSend(v4, "computeStateVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "computeStateLastUpdatedDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "computeStateAdjustmentFingerprint");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v5, "length"))
    v8 = -[PLManagedAsset _shouldIngestComputeSyncFromCloudWithCloudVersion:cloudAdjustmentFingerprint:cloudLastUpdatedDate:](self, "_shouldIngestComputeSyncFromCloudWithCloudVersion:cloudAdjustmentFingerprint:cloudLastUpdatedDate:", v5, v7, v6);
  else
    v8 = 0;

  return v8;
}

- (BOOL)_shouldIngestComputeSyncFromCloudWithCloudVersion:(id)a3 cloudAdjustmentFingerprint:(id)a4 cloudLastUpdatedDate:(id)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  BOOL v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  uint8_t buf[4];
  NSObject *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v9 = (void *)MEMORY[0x1E0CB37A0];
  -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "stringWithFormat:", CFSTR("[CCSS] Consumption policy for %@ with cloudVersion %@ and cloudAdjustmentFingerprint %@"), v10, v7, v8);
  v11 = objc_claimAutoreleasedReturnValue();

  if (_shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__onceToken != -1)
    dispatch_once(&_shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__onceToken, &__block_literal_global_50);
  if (!_shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__ignoreShouldIngestChecks)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "adjustedStableHash");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v15, "length"))
    {

    }
    else
    {
      v16 = objc_msgSend(v8, "length");

      if (!v16)
        goto LABEL_12;
    }
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "adjustedStableHash");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v8, "isEqualToString:", v18);

    if ((v19 & 1) == 0)
    {
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "adjustedStableHash");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", cloudAdjustmentFingerprint does not match local adjustedStableHash %@. Overall decision: NO"), v25);

      if (*MEMORY[0x1E0D115D0])
      {
        v13 = 0;
        goto LABEL_40;
      }
      __CPLAssetsdOSLogDomain();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v31 = v11;
        _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
      }
      goto LABEL_20;
    }
LABEL_12:
    v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0D11428]), "initWithString:", v7);
    if (-[NSObject majorVersion](v12, "majorVersion"))
    {
      v20 = -[NSObject majorVersion](v12, "majorVersion");
      v21 = -[NSObject stage](v12, "stage");
      -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = (int)objc_msgSend(v22, "localAnalysisStage");

      if (v20)
      {
        if (v20 != 1)
        {
          -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudVersion > Runtime(%d), VersionDecision: NO"), 1);
          goto LABEL_34;
        }
        -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudVersion == Runtime(%d), VersionDecision: YES"), 1);
        if (v21 == v23)
        {
          -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudAssetStage == Local(%zu), StageDecision: NO"), v21);
LABEL_34:
          v13 = 0;
          goto LABEL_35;
        }
        if (v21 <= v23)
        {
          -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudAssetStage < Local(%zu), StageDecision: NO"), v23);
          goto LABEL_34;
        }
        if (v21 >= 0x385)
        {
          -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudAssetStage > PLManagedAssetComputeSyncHighestAllowedStage Local(%zu), StageDecision: NO"), v23);
          goto LABEL_34;
        }
      }
      else
      {
        -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudVersion < Runtime(%d), VersionDecision: YES"), 1);
        v13 = 0;
        if ((_DWORD)v23 || v21 <= v23)
        {
LABEL_35:
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v28 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v31 = v11;
              _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
            }

          }
          goto LABEL_39;
        }
        v23 = 0;
      }
      -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", CloudAssetStage > Local(%zu), StageDecision: YES"), v23);
      -[NSObject appendFormat:](v11, "appendFormat:", CFSTR(", Overall decision: %@"), CFSTR("YES"));
      v13 = 1;
      goto LABEL_35;
    }
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v31 = v12;
        v32 = 2112;
        v33 = v27;
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "[CCSS] Failed to extract non-zero MajorVersion from cloudVersion: %@, asset: %@", buf, 0x16u);

      }
      goto LABEL_34;
    }
LABEL_20:
    v13 = 0;
    goto LABEL_39;
  }
  -[NSObject appendString:](v11, "appendString:", CFSTR(", Ignoring actual policy since PLCCSSIgnoreShouldIngestChecks is set. Overall decision override: YES"));
  if (*MEMORY[0x1E0D115D0])
  {
    v13 = 1;
    goto LABEL_40;
  }
  __CPLAssetsdOSLogDomain();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v31 = v11;
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
  }
  v13 = 1;
LABEL_39:

LABEL_40:
  return v13;
}

- (id)installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:(id *)a3
{
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  id v13;
  uint8_t buf[4];
  id v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 327689);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  +[PLResourceInstaller onDemand_installEmptyComputeResourceWithRecipe:forAsset:error:](PLResourceInstaller, "onDemand_installEmptyComputeResourceWithRecipe:forAsset:error:", v5, self, &v13);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v13;

  if (v6)
  {
    if (objc_msgSend(v6, "isLocallyAvailable"))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "singleLineDescription");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v15 = v9;
          v16 = 2112;
          v17 = v10;
          _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "[CCSS] Removing existing ComputeSync local file on asset %{public}@ since we've chosen to install another one from the cloud: %@", buf, 0x16u);

        }
      }
      -[PLManagedAsset removeLocalFileForResource:](self, "removeLocalFileForResource:", v6);
      objc_msgSend(v6, "markAsNotLocallyAvailable");
    }
    objc_msgSend(v6, "resetPrefetchState");
    objc_msgSend(v6, "setRemoteAvailability:", 1);
  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v15 = v7;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "[CCSS] Failed to install empty compute sync resource with error: %@", buf, 0xCu);
      }

    }
    if (a3)
      *a3 = objc_retainAutorelease(v7);
  }

  return v6;
}

- (BOOL)copyComputeSyncResourceFromCPLFilePath:(id)a3 error:(id *)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  id v14;
  NSObject *v15;
  void *v16;
  id v17;
  void *v18;
  char v19;
  id v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  id v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[PLManagedAsset pathForComputeSyncWrapperFile](self, "pathForComputeSyncWrapperFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0D73208];
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pathManager](self, "pathManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "capabilities");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0;
  v13 = objc_msgSend(v8, "ingestItemAtURL:toURL:type:options:capabilities:error:", v9, v10, 1, 14, v12, &v21);
  v14 = v21;

  if ((v13 & 1) == 0 && !*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v23 = v6;
      v24 = 2112;
      v25 = v7;
      v26 = 2112;
      v27 = v14;
      v28 = 2114;
      v29 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "[CCSS] Failed to copy from file %@ to file %@ with error: %@ %{public}@", buf, 0x2Au);

    }
  }
  v17 = v14;
  v18 = v17;
  if (a4)
    v19 = v13;
  else
    v19 = 1;
  if ((v19 & 1) == 0)
    *a4 = objc_retainAutorelease(v17);

  return v13;
}

- (void)updateComputeSyncResourceAfterDownloadWithResource:(id)a3 onDemandDownload:(BOOL)a4
{
  _BOOL4 v4;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  _BOOL4 v18;
  id v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  id v32;
  uint64_t v33;

  v4 = a4;
  v33 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+ComputeSync.m"), 363, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("computeSyncResource"));

  }
  -[PLManagedAsset pathForComputeSyncWrapperFile](self, "pathForComputeSyncWrapperFile");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "markAsLocallyAvailableWithFilePath:", v8);
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = 0;
  objc_msgSend(v10, "attributesOfItemAtPath:error:", v8, &v26);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v26;

  if (v11)
  {
    objc_msgSend(v7, "setDataLength:", objc_msgSend(v11, "fileSize"));
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412802;
      v28 = v8;
      v29 = 2114;
      v30 = v9;
      v31 = 2112;
      v32 = v12;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "[CCSS] Unable to extract attributes for file %@ asset %{public}@: %@", buf, 0x20u);
    }

  }
  objc_msgSend(v7, "fileURL");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14
    && (-[PLManagedObject pathManager](self, "pathManager"),
        v15 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v15, "capabilities"),
        v16 = (void *)objc_claimAutoreleasedReturnValue(),
        v17 = objc_msgSend(v16, "isCentralizedCacheDeleteCapable"),
        v16,
        v15,
        v17))
  {
    v24 = v12;
    v25 = 0;
    v18 = +[PLCacheDeleteSupport markPurgeableForFileAtURL:withUrgency:outInode:error:](PLCacheDeleteSupport, "markPurgeableForFileAtURL:withUrgency:outInode:error:", v14, v4, &v25, &v24);
    v19 = v24;

    if (v18)
    {
      if (!v25)
      {
        PLResourceCachingGetLog();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v28 = v14;
          _os_log_impl(&dword_199541000, v22, OS_LOG_TYPE_ERROR, "Unexpected inode value of 0 for %@", buf, 0xCu);
        }

        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unexpected inode value of 0 for %@"), v14);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        PLSimulateCrash();
        goto LABEL_24;
      }
      v20 = objc_msgSend(v7, "fileID");
      if (v20 != v25)
        objc_msgSend(v7, "setFileID:");
      if (v4)
      {
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "setCloudLastOnDemandDownloadDate:", v21);
LABEL_24:

      }
    }
    else if (PLIsErrorEqualToCode())
    {
      objc_msgSend(v7, "markAsNotLocallyAvailable");
    }
  }
  else
  {
    v19 = v12;
  }

}

- (BOOL)applyComputeSyncPayloadWithComputeStateRecord:(id)a3 originatedFromPrefetch:(BOOL)a4 error:(id *)a5
{
  _BOOL8 v6;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  id v16;
  NSObject *v17;
  void *v18;
  id v19;
  BOOL v20;
  NSObject *v21;
  void *v22;
  const char *v23;
  id v24;
  id v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v6 = a4;
  v31 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  objc_msgSend(v8, "fileURL");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v9)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v28 = v22;
        v23 = "[CCSS] Nil fileURL from compute state record to asset %{public}@";
LABEL_16:
        _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_ERROR, v23, buf, 0xCu);

      }
LABEL_17:

    }
LABEL_18:
    v16 = 0;
LABEL_19:
    v24 = v16;
    v19 = v24;
    if (a5)
    {
      v19 = objc_retainAutorelease(v24);
      v20 = 0;
      *a5 = v19;
    }
    else
    {
      v20 = 0;
    }
    goto LABEL_22;
  }
  v10 = (void *)MEMORY[0x1E0C99D50];
  objc_msgSend(v8, "fileURL");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "path");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "dataWithContentsOfFile:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v13)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v28 = v22;
        v23 = "[CCSS] Nil data read from compute state record to asset %{public}@";
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  v14 = (void *)objc_opt_new();
  v26 = 0;
  v15 = objc_msgSend(v14, "applyComputeSyncWrapperData:toAsset:error:", v13, self, &v26);
  v16 = v26;

  if (!v15)
    goto LABEL_19;
  if (!+[PLComputeSyncAttributes updateLocalComputeSyncAttributesForAsset:cloudRecordComputeState:originatedFromPrefetch:](PLComputeSyncAttributes, "updateLocalComputeSyncAttributesForAsset:cloudRecordComputeState:originatedFromPrefetch:", self, v8, v6)&& !*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v28 = v8;
      v29 = 2114;
      v30 = v18;
      _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "[CCSS] Failed to extract version from cloudVersion: %@, asset: %{public}@", buf, 0x16u);

    }
  }
  v19 = v16;
  v20 = 1;
LABEL_22:

  return v20;
}

- (BOOL)installFullStageComputeSyncResourceIfNeeded
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL4 v7;
  void *v8;
  id v9;
  BOOL v10;
  NSObject *v11;
  void *v12;
  id v14;
  uint8_t buf[4];
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset computeSyncAttributes](self, "computeSyncAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "cloudComputeStateVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "cloudComputeStateAdjustmentFingerprint");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "cloudComputeStateLastUpdatedDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = -[PLManagedAsset _shouldIngestComputeSyncFromCloudWithCloudVersion:cloudAdjustmentFingerprint:cloudLastUpdatedDate:](self, "_shouldIngestComputeSyncFromCloudWithCloudVersion:cloudAdjustmentFingerprint:cloudLastUpdatedDate:", v4, v5, v6);

  if (v7)
  {
    v14 = 0;
    -[PLManagedAsset installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:](self, "installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityWithError:", &v14);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v14;

    v10 = v8 != 0;
    if (!v8 && !*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset scopedIdentifier](self, "scopedIdentifier");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v16 = v9;
        v17 = 2114;
        v18 = v12;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_ERROR, "[CCSS][Migration] Failed to install empty compute sync resource %@ for asset %{public}@", buf, 0x16u);

      }
    }

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

void __129__PLManagedAsset_ComputeSync___shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate___block_invoke()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  _shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__ignoreShouldIngestChecks = objc_msgSend(v0, "BOOLForKey:", CFSTR("PLCCSSIgnoreShouldIngestChecks"));

}

BOOL __64__PLManagedAsset_ComputeSync__deleteComputeSyncResourceIfExists__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "recipeID") == 327689;
}

+ (id)createSparseComputeStateRecordsForAssets:(id)a3 inPhotoLibrary:(id)a4
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[4];
  id v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t);
  id v22;

  v5 = a3;
  v6 = a4;
  v7 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v17 = 0;
  v18 = &v17;
  v19 = 0x3032000000;
  v20 = __Block_byref_object_copy__49377;
  v21 = __Block_byref_object_dispose__49378;
  v22 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v7, "count"));
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __87__PLManagedAsset_ComputeSync__createSparseComputeStateRecordsForAssets_inPhotoLibrary___block_invoke;
  v13[3] = &unk_1E3676EA0;
  v8 = v5;
  v14 = v8;
  v9 = v6;
  v15 = v9;
  v16 = &v17;
  objc_msgSend(v9, "performBlockAndWait:", v13);
  if (objc_msgSend((id)v18[5], "count"))
    v10 = (void *)v18[5];
  else
    v10 = 0;
  v11 = v10;

  _Block_object_dispose(&v17, 8);
  return v11;
}

+ (id)generateFullComputeStateRecordForRecord:(id)a3 payloadHelper:(id)a4 destinationDirectoryURL:(id)a5 inPhotoLibrary:(id)a6
{
  NSObject *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  void *v28;
  NSObject *v29;
  NSObject *v30;
  NSObject *v31;
  NSObject *v32;
  void *v34;
  char v35;
  NSObject *v36;
  NSObject *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  NSObject *v46;
  NSObject *v47;
  NSObject *v48;
  id v49;
  NSObject *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint8_t buf[4];
  NSObject *v56;
  __int16 v57;
  NSObject *v58;
  __int16 v59;
  NSObject *v60;
  __int16 v61;
  NSObject *v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = a6;
  -[NSObject itemScopedIdentifier](v9, "itemScopedIdentifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    -[NSObject itemScopedIdentifier](v9, "itemScopedIdentifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset assetWithScopedIdentifier:inLibrary:prefetchResources:](PLManagedAsset, "assetWithScopedIdentifier:inLibrary:prefetchResources:", v14, v12, 1);
    v15 = objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      -[NSObject computeSyncAttributes](v15, "computeSyncAttributes");
      v16 = objc_claimAutoreleasedReturnValue();
      if (!v16)
      {
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v24 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          {
            -[NSObject itemScopedIdentifier](v9, "itemScopedIdentifier");
            v30 = objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v56 = v30;
            v57 = 2112;
            v58 = v9;
            _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Asset %{public}@ doesn't have a compute sync attributes relationship %@", buf, 0x16u);

          }
          goto LABEL_26;
        }
        v16 = 0;
        goto LABEL_18;
      }
      -[NSObject version](v9, "version");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject _currentComputeStateVersion](v15, "_currentComputeStateVersion");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend(v17, "isEqualToString:", v18);

      if ((v19 & 1) == 0)
      {
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v24 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          {
            -[NSObject itemScopedIdentifier](v9, "itemScopedIdentifier");
            v31 = objc_claimAutoreleasedReturnValue();
            -[NSObject _currentComputeStateVersion](v15, "_currentComputeStateVersion");
            v25 = objc_claimAutoreleasedReturnValue();
            -[NSObject version](v9, "version");
            v32 = objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138544130;
            v56 = v31;
            v57 = 2114;
            v58 = v25;
            v59 = 2114;
            v60 = v32;
            v61 = 2112;
            v62 = v9;
            _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Asset %{public}@ version %{public}@ doesn't match compute state record version %{public}@ %@", buf, 0x2Au);

            goto LABEL_25;
          }
LABEL_26:
          v28 = 0;
LABEL_27:

          goto LABEL_28;
        }
LABEL_18:
        v28 = 0;
LABEL_28:

        goto LABEL_29;
      }
      -[NSObject adjustmentFingerprint](v9, "adjustmentFingerprint");
      v20 = objc_claimAutoreleasedReturnValue();
      -[NSObject additionalAttributes](v15, "additionalAttributes");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "adjustedStableHash");
      v22 = objc_claimAutoreleasedReturnValue();

      if (v20 && v22)
      {
        v23 = objc_msgSend((id)v20, "isEqual:", v22);

        if ((v23 & 1) == 0)
          goto LABEL_8;
      }
      else
      {

        if (v20 | v22)
        {
LABEL_8:
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v24 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
            {
              -[NSObject itemScopedIdentifier](v9, "itemScopedIdentifier");
              v25 = objc_claimAutoreleasedReturnValue();
              -[NSObject additionalAttributes](v15, "additionalAttributes");
              v51 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v51, "adjustedStableHash");
              v26 = objc_claimAutoreleasedReturnValue();
              -[NSObject adjustmentFingerprint](v9, "adjustmentFingerprint");
              v27 = objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138544130;
              v56 = v25;
              v57 = 2114;
              v58 = v26;
              v59 = 2114;
              v60 = v27;
              v61 = 2112;
              v62 = v9;
              _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Asset %{public}@ adjustmentFingerprint %{public}@ doesn't match compute state record adjustmentFingerprint %{public}@ %@", buf, 0x2Au);

LABEL_25:
              goto LABEL_26;
            }
            goto LABEL_26;
          }
          goto LABEL_18;
        }
      }
      -[NSObject computeSyncAttributes](v15, "computeSyncAttributes");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "computeSyncWrapperURLForAsset:analysisStage:", v15, objc_msgSend(v34, "localAnalysisStage"));
      v24 = objc_claimAutoreleasedReturnValue();

      if (!v24)
      {
        if (*MEMORY[0x1E0D115D0])
        {
          v24 = 0;
          goto LABEL_26;
        }
        __CPLAssetsdOSLogDomain();
        v46 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          -[NSObject scopedIdentifier](v15, "scopedIdentifier");
          v47 = objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v56 = v47;
          v57 = 2112;
          v58 = v9;
          _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Nil compute sync payload URL generated for asset %{public}@ %@", buf, 0x16u);

        }
        v28 = 0;
LABEL_50:

        goto LABEL_27;
      }
      v54 = 0;
      v35 = -[NSObject installComputeSyncResourceAfterAttachtoCPLWithError:](v15, "installComputeSyncResourceAfterAttachtoCPLWithError:", &v54);
      v50 = v54;
      if ((v35 & 1) == 0 && !*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v36 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
        {
          -[NSObject scopedIdentifier](v15, "scopedIdentifier");
          v37 = objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v56 = v37;
          v57 = 2112;
          v58 = v50;
          _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_ERROR, "[CCSS] Failed to install resource for asset %@ after compute state record upload: %@", buf, 0x16u);

        }
      }
      v38 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "UUIDString");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "stringWithFormat:", CFSTR("%@.dat"), v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "URLByAppendingPathComponent:", v41);
      v52 = objc_claimAutoreleasedReturnValue();

      v42 = (void *)MEMORY[0x1E0D73208];
      objc_msgSend(v12, "pathManager");
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "capabilities");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      v53 = 0;
      LOBYTE(v42) = objc_msgSend(v42, "ingestItemAtURL:toURL:type:options:capabilities:error:", v24, v52, 1, 10, v44, &v53);
      v49 = v53;

      if ((v42 & 1) != 0)
      {
        v45 = (void *)v52;
        v28 = (void *)-[NSObject copyAddingFileURL:](v9, "copyAddingFileURL:", v52);
      }
      else
      {
        v45 = (void *)v52;
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v48 = objc_claimAutoreleasedReturnValue();
          v46 = v50;
          if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543874;
            v56 = v24;
            v57 = 2114;
            v58 = v52;
            v59 = 2112;
            v60 = v9;
            _os_log_impl(&dword_199541000, v48, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Unable to copy payload from URL %{public}@ to %{public}@ %@", buf, 0x20u);
          }

          v28 = 0;
          goto LABEL_49;
        }
        v28 = 0;
      }
      v46 = v50;
LABEL_49:

      goto LABEL_50;
    }
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        -[NSObject itemScopedIdentifier](v9, "itemScopedIdentifier");
        v29 = objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v56 = v29;
        v57 = 2112;
        v58 = v9;
        _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Unable to fetch asset with scopedIdentifier %{public}@ for compute state record %@", buf, 0x16u);

      }
      goto LABEL_18;
    }
    v15 = 0;
  }
  else
  {
    if (*MEMORY[0x1E0D115D0])
    {
      v28 = 0;
      goto LABEL_30;
    }
    __CPLAssetsdOSLogDomain();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v56 = v9;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Nil item scoped identifier in compute state record: %@", buf, 0xCu);
    }
  }
  v28 = 0;
LABEL_29:

LABEL_30:
  return v28;
}

+ (BOOL)_shouldPushComputeSyncWithLocalMajorVersion:(signed __int16)a3 localAnalaysisStage:(signed __int16)a4 cloudComputeStateVersionStr:(id)a5 localAdjustmentFingerprint:(id)a6 cloudAdjustmentFingerprint:(id)a7 scopedIdentifier:(id)a8
{
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  objc_class *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  BOOL v21;
  NSObject *v22;
  const char *v23;
  NSObject *v24;
  uint32_t v25;
  int v27;
  id v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  unint64_t v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  unint64_t v36;
  uint64_t v37;

  v11 = a4;
  v12 = a3;
  v37 = *MEMORY[0x1E0C80C00];
  v13 = (unint64_t)a6;
  v14 = (unint64_t)a7;
  v15 = a8;
  if (a5)
  {
    v16 = (objc_class *)MEMORY[0x1E0D11428];
    v17 = a5;
    v18 = (void *)objc_msgSend([v16 alloc], "initWithString:", v17);

    v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D11428]), "initWithMajorVersion:stage:", v12, v11);
    v20 = objc_msgSend(v19, "compare:", v18);
    if (v20 == -1)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          v27 = 138543874;
          v28 = v15;
          v29 = 2112;
          v30 = v18;
          v31 = 2112;
          v32 = (unint64_t)v19;
          v23 = "[CCSS] Not pushing compute sync payload for %{public}@. Cloud version %@ is higher than local version %@";
          v24 = v22;
          v25 = 32;
LABEL_16:
          _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, v23, (uint8_t *)&v27, v25);
        }
LABEL_17:

      }
    }
    else
    {
      if (v20)
      {
LABEL_7:
        v21 = 1;
LABEL_19:

        goto LABEL_20;
      }
      if (v13 && v14)
      {
        if ((objc_msgSend((id)v13, "isEqual:", v14) & 1) == 0)
          goto LABEL_7;
      }
      else if (v13 | v14)
      {
        goto LABEL_7;
      }
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          v27 = 138544386;
          v28 = v15;
          v29 = 2112;
          v30 = v19;
          v31 = 2112;
          v32 = v13;
          v33 = 2112;
          v34 = v18;
          v35 = 2112;
          v36 = v14;
          v23 = "[CCSS] Not pushing compute sync payload for %{public}@. Versions match but adjustment fingerprints diffe"
                "r, Local: %@ %@, Cloud: %@ %@";
          v24 = v22;
          v25 = 52;
          goto LABEL_16;
        }
        goto LABEL_17;
      }
    }
    v21 = 0;
    goto LABEL_19;
  }
  v21 = v11 > 0;
LABEL_20:

  return v21;
}

+ (BOOL)isComputeSyncEnabledForDirection:(int64_t)a3 library:(id)a4
{
  return objc_msgSend(a1, "isComputeSyncEnabledForDirection:library:debugMode:debugLog:", a3, a4, 0, 0);
}

+ (BOOL)isComputeSyncEnabledForDirection:(int64_t)a3 library:(id)a4 debugMode:(BOOL)a5 debugLog:(id *)a6
{
  uint64_t v7;
  id v10;
  id v11;
  const __CFString *v12;
  void *v13;
  int v14;
  NSObject *v15;
  const __CFString *v16;
  NSObject *v17;
  void *v18;
  char v19;
  const __CFString *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  char v27;
  const __CFString *v28;
  NSObject *v29;
  const __CFString *v30;
  const __CFString *v31;
  const __CFString *v32;
  const __CFString *v33;
  void *v34;
  unsigned int v35;
  uint64_t v36;
  NSObject *v37;
  __CFString *v38;
  __CFString *v39;
  const __CFString *v40;
  const __CFString *v41;
  char v42;
  id *v43;
  int v44;
  const __CFString *v45;
  id v47;
  id *v48;
  uint8_t buf[4];
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  __int16 v53;
  const __CFString *v54;
  uint64_t v55;

  v7 = a5;
  v55 = *MEMORY[0x1E0C80C00];
  v10 = a4;
  v11 = objc_alloc(MEMORY[0x1E0CB37A0]);
  v12 = CFSTR("download");
  if (!a3)
    v12 = CFSTR("upload");
  v13 = (void *)objc_msgSend(v11, "initWithFormat:", CFSTR("Compute Sync enabled check for direction: %@"), v12);
  if ((_os_feature_enabled_impl() & 1) != 0)
  {
    objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("FF"), CFSTR("YES"), &stru_1E36789C0);
    v14 = 0;
  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEBUG, "[CCSS] Feature flag is off; disabling compute sync",
          buf,
          2u);
      }

    }
    if (!(_DWORD)v7)
      goto LABEL_73;
    objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("FF"), CFSTR("NO"), &stru_1E36789C0);
    v14 = 1;
  }
  if ((PLPlatformComputeSyncSupported() & 1) != 0)
  {
    v47 = a1;
    v16 = CFSTR("YES");
  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEBUG, "[CCSS] Compute sync is currently unsupported on tvOS and watchOS; disabling compute sync",
          buf,
          2u);
      }

    }
    if (!(_DWORD)v7)
      goto LABEL_73;
    v47 = a1;
    v14 = 1;
    v16 = CFSTR("NO");
  }
  objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Platform supported"), v16, &stru_1E36789C0);
  objc_msgSend(v10, "pathManager");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isSystemPhotoLibraryPathManager");

  v20 = CFSTR("YES");
  if ((v19 & 1) != 0)
    goto LABEL_26;
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_199541000, v21, OS_LOG_TYPE_DEBUG, "[CCSS] Compute sync is only supporrted on the System Photo Library; disabling compute sync",
        buf,
        2u);
    }

  }
  if ((_DWORD)v7)
  {
    v14 = 1;
    v20 = CFSTR("NO");
LABEL_26:
    v48 = a6;
    objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Is SPL"), v20, &stru_1E36789C0);
    if (a3 == 1)
      objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Download allowed"), CFSTR("YES"), CFSTR("reason: Not DawnG"));
    objc_msgSend(v10, "libraryServicesManager");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "cloudPhotoLibraryManager");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "cplConfiguration");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v22, "cloudPhotoLibraryManager");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "cplStatus");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "isKeychainCDPEnabled");

    v28 = CFSTR("YES");
    if ((v27 & 1) == 0)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v29 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_DEBUG, "[CCSS] Account keychain CDP is disabled; disabling compute sync",
            buf,
            2u);
        }

      }
      if (!(_DWORD)v7)
        goto LABEL_72;
      v14 = 1;
      v28 = CFSTR("NO");
    }
    objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Account CDP"), v28, &stru_1E36789C0);
    v30 = CFSTR("upload");
    v31 = CFSTR("feature.version.computesync.upload");
    if (a3)
    {
      v31 = 0;
      v30 = 0;
    }
    if (a3 == 1)
      v32 = CFSTR("feature.version.computesync.download");
    else
      v32 = v31;
    if (a3 == 1)
      v33 = CFSTR("download");
    else
      v33 = v30;
    objc_msgSend(v24, "valueForKey:", v32);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v35 = objc_msgSend(v34, "unsignedIntValue");

    if (v35 <= 1)
      v36 = 1;
    else
      v36 = v35;
    if (v35 < 2)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Client version is %zd, server version is %zd"), 1, 1);
      v39 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v40 = CFSTR("YES");
    }
    else
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v37 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134218498;
          v50 = 1;
          v51 = 2048;
          v52 = v36;
          v53 = 2114;
          v54 = v33;
          _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_DEBUG, "[CCSS] Client release version is %zd and server minimum release version is %zd. Disabled compute sync %{public}@ since client release version is less than server minimum release version", buf, 0x20u);
        }

      }
      v14 = 1;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Client version is %zd, server version is %zd"), 1, v36);
      v38 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v39 = v38;
      if ((v7 & 1) == 0)
      {

        LOBYTE(v7) = 0;
        goto LABEL_72;
      }
      v40 = CFSTR("NO");
    }
    if (v39)
      v41 = v39;
    else
      v41 = &stru_1E36789C0;
    objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Server FF"), v40, v41);

    v42 = v14 != 0;
    if (a3)
    {
      v43 = v48;
      if (!v48)
      {
LABEL_70:
        LOBYTE(v7) = v42 & v7 ^ 1;
LABEL_72:

        goto LABEL_73;
      }
    }
    else
    {
      v44 = objc_msgSend(v47, "_checkComputeSyncUploadPolicyWithCPLConfiguration:library:debugMode:debugLog:", v24, v10, v7, v13);
      v43 = v48;
      if ((v44 & 1) == 0 && !(_DWORD)v7)
        goto LABEL_72;
      if (v14)
        v42 = 1;
      else
        v42 = v44 ^ 1;
      v45 = CFSTR("NO");
      if (v44)
        v45 = CFSTR("YES");
      objc_msgSend(v13, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Overall"), v45, &stru_1E36789C0);
      if (!v48)
        goto LABEL_70;
    }
    if ((_DWORD)v7)
      *v43 = (id)objc_msgSend(v13, "copy");
    goto LABEL_70;
  }
LABEL_73:

  return v7;
}

+ (BOOL)_checkComputeSyncUploadPolicyWithCPLConfiguration:(id)a3 library:(id)a4 debugMode:(BOOL)a5 debugLog:(id)a6
{
  int v7;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _BOOL4 v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  const __CFString *v22;
  void (**v23)(_QWORD, _QWORD);
  void *v24;
  unint64_t v25;
  unint64_t v26;
  __CFString *v27;
  NSObject *v28;
  const __CFString *v29;
  const __CFString *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  __CFString *v34;
  NSObject *v35;
  const __CFString *v36;
  uint64_t v37;
  void *v38;
  const __CFString *v39;
  char v40;
  int v42;
  _QWORD v43[4];
  id v44;
  char v45;
  uint8_t buf[4];
  __CFString *v47;
  uint64_t v48;

  v7 = a5;
  v48 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a6;
  v12 = (void *)MEMORY[0x1E0D73158];
  objc_msgSend(v10, "pathManager");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "libraryURL");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "appPrivateDataForLibraryURL:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v15, "valueForKey:", CFSTR("ComputeSyncUploadPolicy.cachedResult"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (_checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__onceToken != -1)
    dispatch_once(&_checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__onceToken, &__block_literal_global_125_49306);
  if (_checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__skipComputeSyncUploadPolicyChecks)
  {
    if (!v7)
      goto LABEL_10;
    objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Override policy checks (PLCCSSSkipUploadPolicyChecks)"), CFSTR("YES"), &stru_1E36789C0);
  }
  if (!v16)
  {
LABEL_13:
    v17 = 0;
    goto LABEL_24;
  }
  if (!objc_msgSend(v16, "BOOLValue"))
  {
    objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Cached result"), CFSTR("NO"), CFSTR("policyCachedResult is NO"));
LABEL_12:
    if ((objc_msgSend(v16, "BOOLValue") & 1) != 0)
      goto LABEL_13;
    objc_msgSend(v15, "valueForKey:", CFSTR("ComputeSyncUploadPolicy.lastCheckedDate"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = v18;
    if (v18)
    {
      objc_msgSend(v18, "timeIntervalSinceNow");
      v21 = fabs(v20);
      if (v21 < 86400.0 && !v7)
      {

        goto LABEL_59;
      }
      v17 = v21 < 86400.0;
      if (v21 < 86400.0)
        v22 = CFSTR("NO");
      else
        v22 = CFSTR("YES");
      objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Last checked date"), v22, v19);
    }
    else
    {
      v17 = 0;
    }

LABEL_24:
    v43[0] = MEMORY[0x1E0C809B0];
    v43[1] = 3221225472;
    v43[2] = __108__PLManagedAsset_ComputeSync___checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog___block_invoke_2;
    v43[3] = &unk_1E366B540;
    v45 = v7;
    v44 = v15;
    v23 = (void (**)(_QWORD, _QWORD))MEMORY[0x19AEC174C](v43);
    objc_msgSend(v9, "valueForKey:", CFSTR("feature.computesync.policy.minassetcount"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend(v24, "unsignedIntegerValue");

    if (!v25)
      v25 = 10000;
    v26 = +[PLManagedAsset iCPLAssetCountInPhotoLibrary:](PLManagedAsset, "iCPLAssetCountInPhotoLibrary:", v10);
    if (v26 >= v25)
    {
      v42 = v17;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Threshold: %tu, Count: %tu"), v25, v26);
      v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v29 = CFSTR("YES");
    }
    else
    {
      v23[2](v23, 0);
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Threshold: %tu, Count: %tu"), v25, v26);
      v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v47 = v27;
          _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_DEFAULT, "[CCSS] Upload policy check: Caching NO due to asset count threshold. %@", buf, 0xCu);
        }

      }
      if ((v7 & 1) == 0)
      {

        LOBYTE(v7) = 0;
        goto LABEL_58;
      }
      v42 = 1;
      v29 = CFSTR("NO");
    }
    if (v27)
      v30 = v27;
    else
      v30 = &stru_1E36789C0;
    objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Asset threshold"), v29, v30);

    objc_msgSend(v9, "valueForKey:", CFSTR("feature.computesync.policy.minstoragetier"));
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = objc_msgSend(v31, "longLongValue");

    if (v32 < 1)
      v32 = 10000000000;
    v33 = iCloudStorageSizeInBytes();
    if (v33 >= v32)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Threshold: %lld, Count: %lld"), v32, v33);
      v37 = objc_claimAutoreleasedReturnValue();
      v38 = (void *)v37;
      if (v37)
        v39 = (const __CFString *)v37;
      else
        v39 = &stru_1E36789C0;
      objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Storage tier threshold"), CFSTR("YES"), v39);

      if (!v42)
      {
        v40 = 1;
        v23[2](v23, 1);
        goto LABEL_57;
      }
LABEL_53:
      v40 = 0;
LABEL_57:
      LOBYTE(v7) = v40 | v7 ^ 1;
      goto LABEL_58;
    }
    v23[2](v23, 0);
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Threshold: %lld, Count: %lld"), v32, v33);
    v34 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v47 = v34;
        _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_DEFAULT, "[CCSS] Upload policy check: Caching NO due to iCloud storage tier threshold. %@", buf, 0xCu);
      }

    }
    if (v7)
    {
      if (v34)
        v36 = v34;
      else
        v36 = &stru_1E36789C0;
      objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Storage tier threshold"), CFSTR("NO"), v36);

      goto LABEL_53;
    }

LABEL_58:
    goto LABEL_59;
  }
  if (v7)
  {
    objc_msgSend(v11, "appendFormat:", CFSTR("%@: %@ %@\n"), CFSTR("Policy: Cached result"), CFSTR("YES"), &stru_1E36789C0);
    goto LABEL_12;
  }
LABEL_10:
  LOBYTE(v7) = 1;
LABEL_59:

  return v7;
}

+ (void)runComputeSyncBackfillMigrationOnProcessedAssets:(id)a3
{
  objc_msgSend(a1, "_runComputeSyncBackfillMigrationOnProcessedAssets:withLimit:", a3, 5000);
}

+ (void)_runComputeSyncBackfillMigrationOnProcessedAssets:(id)a3 withLimit:(unint64_t)a4
{
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  unint64_t v10;
  SEL v11;

  v6 = a3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke;
  v8[3] = &unk_1E3677C90;
  v10 = a4;
  v11 = a2;
  v9 = v6;
  v7 = v6;
  objc_msgSend(v7, "performTransactionAndWait:", v8);

}

void __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  PLEnumerateAndSaveController *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  PLEnumerateAndSaveController *v22;
  void *v23;
  PLEnumerateAndSaveController *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[4];
  PLEnumerateAndSaveController *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD v34[6];
  _QWORD v35[4];
  id v36;
  _QWORD v37[4];
  _QWORD v38[4];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[7];

  v42[5] = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc(MEMORY[0x1E0C97B48]);
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = (void *)objc_msgSend(v2, "initWithEntityName:", v3);

  v4 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders"), 0);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = v28;
  v5 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == nil"), CFSTR("computeSyncAttributes"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v41[0] = v27;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == 0 && %K == %d"), CFSTR("computeSyncAttributes.localAnalysisMajorVersion"), CFSTR("computeSyncAttributes.localAnalysisStage"), 0);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v41[1] = v26;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 2);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "orPredicateWithSubpredicates:", v25);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v42[1] = v6;
  v7 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == nil"), CFSTR("computeSyncAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v40[0] = v8;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == nil"), CFSTR("computeSyncAttributes.cloudComputeStateVersion"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v40[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v40, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "orPredicateWithSubpredicates:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[2] = v11;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("mediaAnalysisAttributes.characterRecognitionAttributes"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v42[3] = v12;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("mediaAnalysisAttributes.visualSearchAttributes"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v42[4] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v42, 5);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "andPredicateWithSubpredicates:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "setPredicate:", v15);

  objc_msgSend(v29, "setFetchLimit:", *(_QWORD *)(a1 + 40));
  v39[0] = CFSTR("mediaAnalysisAttributes");
  v39[1] = CFSTR("computeSyncAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v39, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "setRelationshipKeyPathsForPrefetching:", v16);

  v38[0] = 0;
  v38[1] = v38;
  v38[2] = 0x2020000000;
  v38[3] = 0;
  v37[0] = 0;
  v37[1] = v37;
  v37[2] = 0x2020000000;
  v37[3] = 0;
  v17 = [PLEnumerateAndSaveController alloc];
  NSStringFromSelector(*(SEL *)(a1 + 48));
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "pathManager");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = MEMORY[0x1E0C809B0];
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 3221225472;
  v35[2] = __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke_2;
  v35[3] = &unk_1E36700D0;
  v36 = *(id *)(a1 + 32);
  v34[0] = v21;
  v34[1] = 3221225472;
  v34[2] = __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke_3;
  v34[3] = &unk_1E366B568;
  v34[4] = v37;
  v34[5] = v38;
  v22 = -[PLEnumerateAndSaveController initWithName:fetchRequest:context:pathManager:concurrent:refreshAllAfterSave:generateContextBlock:didFetchObjectIDsBlock:processResultBlock:](v17, "initWithName:fetchRequest:context:pathManager:concurrent:refreshAllAfterSave:generateContextBlock:didFetchObjectIDsBlock:processResultBlock:", v18, v29, v19, v20, 0, 1, v35, 0, v34);

  +[PLConcurrencyLimiter sharedLimiter](PLConcurrencyLimiter, "sharedLimiter");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = v21;
  v30[1] = 3221225472;
  v30[2] = __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke_4;
  v30[3] = &unk_1E3677830;
  v24 = v22;
  v31 = v24;
  v32 = v38;
  v33 = v37;
  objc_msgSend(v23, "sync:identifyingBlock:library:", v30, 0, *(_QWORD *)(a1 + 32));

  _Block_object_dispose(v37, 8);
  _Block_object_dispose(v38, 8);

}

uint64_t __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
}

void __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke_3(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  int v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;
  id v16;

  v16 = a3;
  objc_msgSend(v16, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "faceAnalysisVersion");

  if (v5 != 15)
    goto LABEL_6;
  objc_msgSend(v16, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "sceneAnalysisVersion");

  if (v7 != 100)
    goto LABEL_6;
  objc_msgSend(v16, "mediaAnalysisAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "characterRecognitionAttributes");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "algorithmVersion");

  if (v10 == 8)
  {
    objc_msgSend(v16, "mediaAnalysisAttributes");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "visualSearchAttributes");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "algorithmVersion");

    v14 = v16;
    if (v13 == 316)
    {
      +[PLComputeSyncAttributes updateLocalComputeSyncStageAfterProcessingForAsset:stage:](PLComputeSyncAttributes, "updateLocalComputeSyncStageAfterProcessingForAsset:stage:", v16, 200);
      v14 = v16;
      v15 = a1 + 40;
    }
    else
    {
      v15 = a1 + 32;
    }
  }
  else
  {
LABEL_6:
    v15 = a1 + 32;
    v14 = v16;
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v15 + 8) + 24);

}

void __91__PLManagedAsset_ComputeSync___runComputeSyncBackfillMigrationOnProcessedAssets_withLimit___block_invoke_4(_QWORD *a1)
{
  void *v2;
  int v3;
  id v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint32_t v11;
  id v12;
  uint8_t buf[4];
  id v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = (void *)a1[4];
  v12 = 0;
  v3 = objc_msgSend(v2, "processObjectsWithError:", &v12);
  v4 = v12;
  if (v3)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *(void **)(*(_QWORD *)(a1[5] + 8) + 24);
        v7 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
        *(_DWORD *)buf = 134218240;
        v14 = v6;
        v15 = 2048;
        v16 = v7;
        v8 = "[CCSS] Successfully backfilled %tu assets and also found %tu non-eligible assets";
        v9 = v5;
        v10 = OS_LOG_TYPE_DEFAULT;
        v11 = 22;
LABEL_8:
        _os_log_impl(&dword_199541000, v9, v10, v8, buf, v11);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v4;
      v8 = "[CCSS] Failed to set onboarding preview assets %@";
      v9 = v5;
      v10 = OS_LOG_TYPE_ERROR;
      v11 = 12;
      goto LABEL_8;
    }
LABEL_9:

  }
}

void __108__PLManagedAsset_ComputeSync___checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog___block_invoke_2(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  id v7;
  _BYTE *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  id v14;
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (!*(_BYTE *)(a1 + 40))
  {
    v4 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 0;
    v6 = objc_msgSend(v4, "setValue:forKey:error:", v5, CFSTR("ComputeSyncUploadPolicy.lastCheckedDate"), &v15);
    v7 = v15;

    v8 = (_BYTE *)MEMORY[0x1E0D115D0];
    if ((v6 & 1) == 0 && !*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v17 = v7;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_ERROR, "[CCSS] Policy: Failed to persist date to app private data: %@", buf, 0xCu);
      }

    }
    v10 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a2);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v7;
    LOBYTE(v10) = objc_msgSend(v10, "setValue:forKey:error:", v11, CFSTR("ComputeSyncUploadPolicy.cachedResult"), &v14);
    v12 = v14;

    if ((v10 & 1) == 0 && !*v8)
    {
      __CPLAssetsdOSLogDomain();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v17 = v12;
        _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "[CCSS] Policy: Failed to persist number to app private data: %@", buf, 0xCu);
      }

    }
  }
}

void __108__PLManagedAsset_ComputeSync___checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog___block_invoke()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  _checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__skipComputeSyncUploadPolicyChecks = objc_msgSend(v0, "BOOLForKey:", CFSTR("PLCCSSSkipUploadPolicyChecks"));

}

void __87__PLManagedAsset_ComputeSync__createSparseComputeStateRecordsForAssets_inPhotoLibrary___block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(a1 + 32);
  +[PLManagedObjectJournalEntryPayload relationshipKeyPathsForPrefetching](PLAssetComputeSyncJournalEntryPayload, "relationshipKeyPathsForPrefetching");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = a1;
  +[PLManagedAsset assetsWithScopedIdentifiers:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:](PLManagedAsset, "assetsWithScopedIdentifiers:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:", v2, 0, v3, *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v23 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * i);
        if (objc_msgSend(v10, "shouldPushComputeSync"))
        {
          objc_msgSend(v10, "analysisStateModificationDate");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = v11;
          if (v11)
          {
            v13 = v11;
          }
          else
          {
            objc_msgSend(MEMORY[0x1E0C99D68], "date");
            v13 = (id)objc_claimAutoreleasedReturnValue();
          }
          v14 = v13;

          v15 = objc_alloc(MEMORY[0x1E0D11418]);
          objc_msgSend(v10, "scopedIdentifier");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "_currentComputeStateVersion");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "additionalAttributes");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "adjustedStableHash");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = (void *)objc_msgSend(v15, "initWithItemScopedIdentifier:version:fileURL:adjustmentFingerprint:lastUpdatedDate:", v16, v17, 0, v19, v14);

          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v21 + 48) + 8) + 40), "addObject:", v20);
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v7);
  }

}

- (BOOL)_analysisStateWasChangedForWorkerType:(signed __int16)a3
{
  void *v3;
  void *v4;
  BOOL v5;

  -[PLManagedAsset analysisStateForWorkerType:](self, "analysisStateForWorkerType:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "changedValues");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count") != 0;

  return v5;
}

- (id)analysisStateForWorkerType:(signed __int16)a3
{
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v3 = a3;
  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset analysisStates](self, "analysisStates", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v9, "workerType") == v3)
        {
          v10 = v9;
          goto LABEL_11;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v6)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

- (NSDate)dateForComparingAdjustmentVersions
{
  void *v3;
  void *v4;
  id v5;
  void *v6;

  -[PLManagedAsset adjustmentTimestamp](self, "adjustmentTimestamp");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v5 = v3;
  }
  else
  {
    -[PLManagedAsset dateCreated](self, "dateCreated");
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  v6 = v5;

  return (NSDate *)v6;
}

- (BOOL)calculateAllowedForAnalysis
{
  void *v3;
  void *v4;
  BOOL v5;
  void *v6;
  void *v7;
  BOOL v8;

  objc_msgSend(MEMORY[0x1E0D73310], "maskForAllowedForAnalysis");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  if (PLValidatedSavedAssetTypeApplies())
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "montage");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      v5 = 0;
    }
    else
    {
      -[PLManagedAsset extendedAttributes](self, "extendedAttributes");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "generativeAIType");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v7, "intValue") != 1;

    }
  }
  else
  {
    v5 = 0;
  }
  v8 = (-[PLManagedAsset hidden](self, "hidden") & 1) == 0
    && !-[PLManagedAsset trashedState](self, "trashedState")
    && -[PLManagedAsset avalanchePickTypeIsVisible](self, "avalanchePickTypeIsVisible");
  return v5 && v8;
}

- (void)removeSceneClassifications
{
  -[PLManagedAsset removeSceneClassificationsOfType:](self, "removeSceneClassificationsOfType:", 0);
  -[PLManagedAsset removeSceneClassificationsOfType:](self, "removeSceneClassificationsOfType:", 1);
}

- (void)removeSceneClassificationsOfType:(int64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "sceneClassifications");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v5, "copy");

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v7 = v6;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
        if ((int)objc_msgSend(v12, "classificationType", (_QWORD)v14) == a3)
        {
          objc_msgSend(v12, "managedObjectContext");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "deleteObject:", v12);

        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v9);
  }

}

- (void)removeTemporalSceneClassifications
{
  -[PLManagedAsset removeTemporalSceneClassificationsOfType:](self, "removeTemporalSceneClassificationsOfType:", 0);
  -[PLManagedAsset removeTemporalSceneClassificationsOfType:](self, "removeTemporalSceneClassificationsOfType:", 3);
}

- (void)removeTemporalSceneClassificationsOfType:(int64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "temporalSceneClassifications");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v5, "copy");

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v7 = v6;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
        if ((int)objc_msgSend(v12, "classificationType", (_QWORD)v14) == a3)
        {
          objc_msgSend(v12, "managedObjectContext");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "deleteObject:", v12);

        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v9);
  }

}

- (BOOL)sceneAnalysisWasPerformedOnLatestAdjustment
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "sceneAnalysisVersion"))
  {
    -[PLManagedAsset dateForComparingAdjustmentVersions](self, "dateForComparingAdjustmentVersions");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "sceneAnalysisTimestamp");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v4, "isEqualToDate:", v6);

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (NSString)cloudOwnerEmail
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "personInfoManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cloudOwnerHashedPersonID](self, "cloudOwnerHashedPersonID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "emailForPersonID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v6;
}

- (NSString)cloudOwnerFirstName
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "personInfoManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cloudOwnerHashedPersonID](self, "cloudOwnerHashedPersonID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstNameForPersonID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v6;
}

- (NSString)cloudOwnerLastName
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "personInfoManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cloudOwnerHashedPersonID](self, "cloudOwnerHashedPersonID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "lastNameForPersonID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v6;
}

- (NSString)cloudOwnerFullName
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "personInfoManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cloudOwnerHashedPersonID](self, "cloudOwnerHashedPersonID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fullNameForPersonID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v6;
}

- (NSString)cloudOwnerDisplayName
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset cloudOwnerFirstName](self, "cloudOwnerFirstName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cloudOwnerLastName](self, "cloudOwnerLastName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset cloudOwnerFullName](self, "cloudOwnerFullName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCloudSharedAlbum cloudOwnerDisplayNameWithFirstName:lastName:fullName:emailKey:includingEmail:allowsEmail:emailAddressManager:](PLCloudSharedAlbum, "cloudOwnerDisplayNameWithFirstName:lastName:fullName:emailKey:includingEmail:allowsEmail:emailAddressManager:", v3, v4, v5, 0, 0, 0, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSString *)v6;
}

- (unint64_t)totalCommentsCount
{
  unint64_t v3;

  v3 = -[PLManagedAsset cloudCommentsCount](self, "cloudCommentsCount");
  return -[PLManagedAsset likeCommentsCount](self, "likeCommentsCount") + v3;
}

- (id)_cloudSharedPathWithExtension:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringByDeletingPathExtension");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stringByAppendingPathExtension:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)cloudSharedAssetPathForPlaceholderKind:(signed __int16)a3
{
  int v3;
  void *v5;
  const __CFString *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;

  v3 = a3;
  -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset");
  -[PLManagedAsset pathForOriginalFile](self, "pathForOriginalFile");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = CFSTR("thumb.JPG");
  switch(v3)
  {
    case 3:
      goto LABEL_7;
    case 4:
      v7 = (void *)MEMORY[0x1E0D752F0];
      -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier", CFSTR("thumb.JPG"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "typeWithIdentifier:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isEqual:", *MEMORY[0x1E0CEC4F8]);

      if ((v10 & 1) == 0)
        return v5;
      v6 = CFSTR("GIF");
LABEL_7:
      -[PLManagedAsset _cloudSharedPathWithExtension:](self, "_cloudSharedPathWithExtension:", v6);
      v11 = objc_claimAutoreleasedReturnValue();

      v5 = (void *)v11;
      return v5;
    case 7:
      v6 = CFSTR("poster.JPG");
      goto LABEL_7;
    case 8:
      v6 = CFSTR("MOV");
      goto LABEL_7;
    case 9:
      v6 = CFSTR("medium.MP4");
      goto LABEL_7;
    default:
      return v5;
  }
}

- (void)addComment:(id)a3
{
  id v4;
  void *v5;
  int v6;
  int v7;
  void *v8;
  int v9;
  const __CFString *v10;
  void *v11;
  id v12;

  v4 = a3;
  if (!v4)
    goto LABEL_16;
  v12 = v4;
  objc_msgSend(v4, "isMyComment");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "BOOLValue");

  v7 = -[PLManagedAsset cloudHasCommentsByMe](self, "cloudHasCommentsByMe");
  if ((-[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation") & 1) != 0)
    goto LABEL_10;
  if (v7)
  {
    if ((v6 & 1) != 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  if (v6)
  {
    if (!-[PLManagedAsset cloudCommentsCount](self, "cloudCommentsCount")
      && !-[PLManagedAsset likeCommentsCount](self, "likeCommentsCount"))
    {
LABEL_10:
      if (((v6 ^ 1 | v7) & 1) == 0)
        -[PLManagedAsset setCloudHasCommentsByMe:](self, "setCloudHasCommentsByMe:", 1);
      goto LABEL_12;
    }
LABEL_9:
    -[PLManagedAsset setCloudHasCommentsConversation:](self, "setCloudHasCommentsConversation:", 1);
    goto LABEL_10;
  }
LABEL_12:
  objc_msgSend(v12, "isLike");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "BOOLValue");

  if (v9)
    v10 = CFSTR("likeComments");
  else
    v10 = CFSTR("cloudComments");
  -[PLManagedAsset mutableSetValueForKey:](self, "mutableSetValueForKey:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "addObject:", v12);

  v4 = v12;
LABEL_16:

}

- (void)deleteComment:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[128];
  _BYTE v58[128];
  _BYTE v59[128];
  _BYTE v60[128];
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "isLike");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "BOOLValue");

    if (v7)
      objc_msgSend(v5, "setLikedAsset:", 0);
    else
      objc_msgSend(v5, "setCommentedAsset:", 0);
    objc_msgSend(v5, "isMyComment");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "BOOLValue");

    -[PLManagedAsset cloudHasCommentsByMe](self, "cloudHasCommentsByMe");
    if (v9)
    {
      v55 = 0u;
      v56 = 0u;
      v53 = 0u;
      v54 = 0u;
      -[PLManagedAsset cloudComments](self, "cloudComments");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v53, v60, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v54;
LABEL_8:
        v14 = 0;
        while (1)
        {
          if (*(_QWORD *)v54 != v13)
            objc_enumerationMutation(v10);
          v15 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * v14);
          if (v15 != v5)
          {
            objc_msgSend(v15, "isMyComment");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v17 = objc_msgSend(v16, "BOOLValue");

            if ((v17 & 1) != 0)
              goto LABEL_47;
          }
          if (v12 == ++v14)
          {
            v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v53, v60, 16);
            if (v12)
              goto LABEL_8;
            break;
          }
        }
      }

      v51 = 0u;
      v52 = 0u;
      v49 = 0u;
      v50 = 0u;
      -[PLManagedAsset likeComments](self, "likeComments");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v49, v59, 16);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)v50;
LABEL_17:
        v21 = 0;
        while (1)
        {
          if (*(_QWORD *)v50 != v20)
            objc_enumerationMutation(v10);
          v22 = *(void **)(*((_QWORD *)&v49 + 1) + 8 * v21);
          if (v22 != v5)
          {
            objc_msgSend(v22, "isMyComment");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            v24 = objc_msgSend(v23, "BOOLValue");

            if ((v24 & 1) != 0)
              break;
          }
          if (v19 == ++v21)
          {
            v19 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v49, v59, 16);
            if (v19)
              goto LABEL_17;
            goto LABEL_24;
          }
        }
LABEL_47:

        -[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation");
        goto LABEL_49;
      }
LABEL_24:

      -[PLManagedAsset setCloudHasCommentsByMe:](self, "setCloudHasCommentsByMe:", 0);
      if ((-[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation") & 1) == 0)
        goto LABEL_49;
      goto LABEL_46;
    }
    if (!-[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation"))
    {
LABEL_49:
      objc_msgSend(v5, "managedObjectContext");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "deleteObject:", v5);

      goto LABEL_50;
    }
    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
    -[PLManagedAsset cloudComments](self, "cloudComments");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v45, v58, 16);
    if (v26)
    {
      v27 = v26;
      v28 = *(_QWORD *)v46;
LABEL_29:
      v29 = 0;
      while (1)
      {
        if (*(_QWORD *)v46 != v28)
          objc_enumerationMutation(v25);
        v30 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * v29);
        if (v30 != v5)
        {
          objc_msgSend(v30, "isMyComment");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v32 = objc_msgSend(v31, "BOOLValue");

          if (!v32)
            break;
        }
        if (v27 == ++v29)
        {
          v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v45, v58, 16);
          if (v27)
            goto LABEL_29;
          goto LABEL_36;
        }
      }
    }
    else
    {
LABEL_36:

      v43 = 0u;
      v44 = 0u;
      v41 = 0u;
      v42 = 0u;
      -[PLManagedAsset likeComments](self, "likeComments", 0);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v41, v57, 16);
      if (!v33)
      {
LABEL_45:

LABEL_46:
        -[PLManagedAsset setCloudHasCommentsConversation:](self, "setCloudHasCommentsConversation:", 0);
        goto LABEL_49;
      }
      v34 = v33;
      v35 = *(_QWORD *)v42;
LABEL_38:
      v36 = 0;
      while (1)
      {
        if (*(_QWORD *)v42 != v35)
          objc_enumerationMutation(v25);
        v37 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * v36);
        if (v37 != v5)
        {
          objc_msgSend(v37, "isMyComment");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          v39 = objc_msgSend(v38, "BOOLValue");

          if (!v39)
            break;
        }
        if (v34 == ++v36)
        {
          v34 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v41, v57, 16);
          if (v34)
            goto LABEL_38;
          goto LABEL_45;
        }
      }
    }

    goto LABEL_49;
  }
LABEL_50:

}

- (void)deleteAssetComment:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[128];
  _BYTE v57[128];
  _BYTE v58[128];
  _BYTE v59[128];
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "isLike");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "BOOLValue");

    if (v7)
      objc_msgSend(v5, "setLikedAsset:", 0);
    else
      objc_msgSend(v5, "setCommentedAsset:", 0);
    objc_msgSend(v5, "isMyComment");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "BOOLValue");

    -[PLManagedAsset cloudHasCommentsByMe](self, "cloudHasCommentsByMe");
    if (v9)
    {
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      -[PLManagedAsset cloudComments](self, "cloudComments");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v52, v59, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v53;
LABEL_8:
        v14 = 0;
        while (1)
        {
          if (*(_QWORD *)v53 != v13)
            objc_enumerationMutation(v10);
          v15 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * v14);
          if (v15 != v5)
          {
            objc_msgSend(v15, "isMyComment");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v17 = objc_msgSend(v16, "BOOLValue");

            if ((v17 & 1) != 0)
              goto LABEL_47;
          }
          if (v12 == ++v14)
          {
            v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v52, v59, 16);
            if (v12)
              goto LABEL_8;
            break;
          }
        }
      }

      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      -[PLManagedAsset likeComments](self, "likeComments");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v48, v58, 16);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)v49;
LABEL_17:
        v21 = 0;
        while (1)
        {
          if (*(_QWORD *)v49 != v20)
            objc_enumerationMutation(v10);
          v22 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * v21);
          if (v22 != v5)
          {
            objc_msgSend(v22, "isMyComment");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            v24 = objc_msgSend(v23, "BOOLValue");

            if ((v24 & 1) != 0)
              break;
          }
          if (v19 == ++v21)
          {
            v19 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v48, v58, 16);
            if (v19)
              goto LABEL_17;
            goto LABEL_24;
          }
        }
LABEL_47:

        -[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation");
        goto LABEL_49;
      }
LABEL_24:

      -[PLManagedAsset setCloudHasCommentsByMe:](self, "setCloudHasCommentsByMe:", 0);
      if ((-[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation") & 1) == 0)
        goto LABEL_49;
      goto LABEL_46;
    }
    if (-[PLManagedAsset cloudHasCommentsConversation](self, "cloudHasCommentsConversation"))
    {
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      -[PLManagedAsset cloudComments](self, "cloudComments");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v57, 16);
      if (v26)
      {
        v27 = v26;
        v28 = *(_QWORD *)v45;
LABEL_29:
        v29 = 0;
        while (1)
        {
          if (*(_QWORD *)v45 != v28)
            objc_enumerationMutation(v25);
          v30 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * v29);
          if (v30 != v5)
          {
            objc_msgSend(v30, "isMyComment");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            v32 = objc_msgSend(v31, "BOOLValue");

            if (!v32)
              break;
          }
          if (v27 == ++v29)
          {
            v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v57, 16);
            if (v27)
              goto LABEL_29;
            goto LABEL_36;
          }
        }
      }
      else
      {
LABEL_36:

        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        -[PLManagedAsset likeComments](self, "likeComments", 0);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v33 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v40, v56, 16);
        if (!v33)
        {
LABEL_45:

LABEL_46:
          -[PLManagedAsset setCloudHasCommentsConversation:](self, "setCloudHasCommentsConversation:", 0);
          goto LABEL_49;
        }
        v34 = v33;
        v35 = *(_QWORD *)v41;
LABEL_38:
        v36 = 0;
        while (1)
        {
          if (*(_QWORD *)v41 != v35)
            objc_enumerationMutation(v25);
          v37 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * v36);
          if (v37 != v5)
          {
            objc_msgSend(v37, "isMyComment");
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            v39 = objc_msgSend(v38, "BOOLValue");

            if (!v39)
              break;
          }
          if (v34 == ++v36)
          {
            v34 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v40, v56, 16);
            if (v34)
              goto LABEL_38;
            goto LABEL_45;
          }
        }
      }

    }
  }
LABEL_49:

}

- (int)cloudCommentsStatusForOwnedAsset:(BOOL)a3
{
  unint64_t v4;

  v4 = -[PLManagedAsset totalCommentsCount](self, "totalCommentsCount", a3);
  if (v4)
  {
    if (-[PLManagedAsset cloudHasUnseenComments](self, "cloudHasUnseenComments"))
      LODWORD(v4) = 2;
    else
      LODWORD(v4) = 1;
  }
  return v4;
}

- (BOOL)cloudHasSameOwnerAsAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  int v8;

  v4 = a3;
  if (v4)
  {
    -[PLManagedAsset cloudOwnerHashedPersonID](self, "cloudOwnerHashedPersonID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "cloudOwnerHashedPersonID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v5, "isEqual:", v6) & 1) != 0)
    {
      LOBYTE(v7) = 1;
    }
    else
    {
      v8 = -[PLManagedAsset cloudIsMyAsset](self, "cloudIsMyAsset");
      v7 = v8 & objc_msgSend(v4, "cloudIsMyAsset");
    }

  }
  else
  {
    LOBYTE(v7) = 0;
  }

  return v7;
}

- (id)userAddCloudSharedCommentWithText:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  id v10;

  v4 = a3;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLCloudSharedComment insertNewCommentIntoAsset:commentDate:withText:isLike:isMyComment:inLibrary:](PLCloudSharedComment, "insertNewCommentIntoAsset:commentDate:withText:isLike:isMyComment:inLibrary:", self, 0, v4, 0, 1, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __72__PLManagedAsset_PLCloudSharedAsset__userAddCloudSharedCommentWithText___block_invoke;
  v9[3] = &unk_1E3677AA0;
  v7 = v6;
  v10 = v7;
  objc_msgSend(v5, "addCompletionHandlerToCurrentTransaction:", v9);

  return v7;
}

- (void)userDeleteCloudSharedComment:(id)a3
{
  id v4;

  v4 = a3;
  +[PLCloudSharedCommentsJob deleteSharedCommentFromServer:](PLCloudSharedCommentsJob, "deleteSharedCommentFromServer:", v4);
  -[PLManagedAsset deleteComment:](self, "deleteComment:", v4);

}

- (BOOL)userCloudSharedLiked
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  char v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  -[PLManagedAsset likeComments](self, "likeComments", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * i), "isMyComment");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = objc_msgSend(v6, "BOOLValue");

        if ((v7 & 1) != 0)
        {
          LOBYTE(v3) = 1;
          goto LABEL_11;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_11:

  return v3;
}

- (unint64_t)_countForCommentRelationshipNamed:(id)a3 inverseRelationshipName:(id)a4
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  void *v17;
  void *v18;

  v7 = a3;
  v8 = a4;
  v9 = v8;
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLCloudSharedAsset.m"), 468, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("assetRelationshipName"));

    if (v9)
      goto LABEL_3;
LABEL_9:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLCloudSharedAsset.m"), 469, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("inverseRelationshipName"));

    goto LABEL_3;
  }
  if (!v8)
    goto LABEL_9;
LABEL_3:
  if ((-[PLManagedAsset isFault](self, "isFault") & 1) != 0
    || (-[PLManagedAsset hasFaultForRelationshipNamed:](self, "hasFaultForRelationshipNamed:", v7) & 1) != 0)
  {
    v10 = (void *)MEMORY[0x1E0C97B48];
    +[PLCloudSharedComment entityName](PLCloudSharedComment, "entityName");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "fetchRequestWithEntityName:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), v9, self);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "setPredicate:", v13);

    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "countForFetchRequest:error:", v12, 0);

  }
  else
  {
    -[PLManagedAsset valueForKey:](self, "valueForKey:", v7);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v12, "count");
  }

  return v15;
}

- (NSOrderedSet)orderedCloudComments
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset willAccessValueForKey:](self, "willAccessValueForKey:", CFSTR("cloudComments"));
  -[PLManagedAsset cloudComments](self, "cloudComments");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("commentDate"), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sortedArrayUsingDescriptors:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset didAccessValueForKey:](self, "didAccessValueForKey:", CFSTR("cloudComments"));
  objc_msgSend(MEMORY[0x1E0C99E40], "orderedSetWithArray:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSOrderedSet *)v7;
}

- (unint64_t)cloudCommentsCount
{
  return -[PLManagedAsset _countForCommentRelationshipNamed:inverseRelationshipName:](self, "_countForCommentRelationshipNamed:inverseRelationshipName:", CFSTR("cloudComments"), CFSTR("commentedAsset"));
}

- (NSOrderedSet)orderedLikeComments
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset willAccessValueForKey:](self, "willAccessValueForKey:", CFSTR("likeComments"));
  -[PLManagedAsset likeComments](self, "likeComments");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("commentDate"), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sortedArrayUsingDescriptors:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset didAccessValueForKey:](self, "didAccessValueForKey:", CFSTR("likeComments"));
  objc_msgSend(MEMORY[0x1E0C99E40], "orderedSetWithArray:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSOrderedSet *)v7;
}

- (unint64_t)likeCommentsCount
{
  return -[PLManagedAsset _countForCommentRelationshipNamed:inverseRelationshipName:](self, "_countForCommentRelationshipNamed:inverseRelationshipName:", CFSTR("likeComments"), CFSTR("likedAsset"));
}

- (void)userReadAllCloudSharedComments
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _BOOL4 v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  -[PLManagedAsset orderedCloudComments](self, "orderedCloudComments");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "lastObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commentDate");
  v12 = (id)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset orderedLikeComments](self, "orderedLikeComments");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "lastObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commentDate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = v12 != 0;
  if (v12 && v7)
    v8 = objc_msgSend(v12, "compare:", v7) == 1;
  if (v8)
    v9 = v12;
  else
    v9 = v7;
  v10 = v9;
  -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLPhotoSharingHelper markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:](PLPhotoSharingHelper, "markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:", v11, v10);

}

- (void)setUserCloudSharedLiked:(BOOL)a3
{
  _BOOL4 v3;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[4];
  id v19;
  _BYTE v20[128];
  uint64_t v21;

  v3 = a3;
  v21 = *MEMORY[0x1E0C80C00];
  if (-[PLManagedAsset userCloudSharedLiked](self, "userCloudSharedLiked") != a3)
  {
    if (v3)
    {
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v5 = (id)objc_claimAutoreleasedReturnValue();
      +[PLCloudSharedComment insertNewCommentIntoAsset:commentDate:withText:isLike:isMyComment:inLibrary:](PLCloudSharedComment, "insertNewCommentIntoAsset:commentDate:withText:isLike:isMyComment:inLibrary:", self, 0, 0, 1, 1, v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v18[0] = MEMORY[0x1E0C809B0];
      v18[1] = 3221225472;
      v18[2] = __62__PLManagedAsset_PLCloudSharedAsset__setUserCloudSharedLiked___block_invoke;
      v18[3] = &unk_1E3677AA0;
      v19 = v6;
      v7 = v6;
      objc_msgSend(v5, "addCompletionHandlerToCurrentTransaction:", v18);

    }
    else
    {
      v16 = 0u;
      v17 = 0u;
      v14 = 0u;
      v15 = 0u;
      -[PLManagedAsset likeComments](self, "likeComments", 0);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (id)objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v20, 16);
      if (v5)
      {
        v9 = *(_QWORD *)v15;
        while (2)
        {
          for (i = 0; i != v5; i = (char *)i + 1)
          {
            if (*(_QWORD *)v15 != v9)
              objc_enumerationMutation(v8);
            v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
            objc_msgSend(v11, "isMyComment");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            v13 = objc_msgSend(v12, "BOOLValue");

            if (v13)
            {
              v5 = v11;
              goto LABEL_14;
            }
          }
          v5 = (id)objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v20, 16);
          if (v5)
            continue;
          break;
        }
      }
LABEL_14:

      +[PLCloudSharedCommentsJob deleteSharedCommentFromServer:](PLCloudSharedCommentsJob, "deleteSharedCommentFromServer:", v5);
      -[PLManagedAsset deleteComment:](self, "deleteComment:", v5);
    }

  }
}

uint64_t __62__PLManagedAsset_PLCloudSharedAsset__setUserCloudSharedLiked___block_invoke(uint64_t a1)
{
  return +[PLCloudSharedCommentsJob publishCommentToServer:](PLCloudSharedCommentsJob, "publishCommentToServer:", *(_QWORD *)(a1 + 32));
}

uint64_t __72__PLManagedAsset_PLCloudSharedAsset__userAddCloudSharedCommentWithText___block_invoke(uint64_t a1)
{
  return +[PLCloudSharedCommentsJob publishCommentToServer:](PLCloudSharedCommentsJob, "publishCommentToServer:", *(_QWORD *)(a1 + 32));
}

+ (id)allCloudSharedAssetsInLibrary:(id)a3
{
  void *v4;
  void *v5;

  objc_msgSend(a3, "managedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

+ (id)cloudSharedAssetsWithGUIDs:(id)a3 inLibrary:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  v7 = (void *)MEMORY[0x19AEC1554]();
  objc_msgSend(v6, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("cloudAssetGUID"), v5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = v10;
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v20[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "andPredicateWithSubpredicates:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "fetchRequestWithEntityName:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if ((unint64_t)objc_msgSend(v5, "count") >= 0x65)
    objc_msgSend(v16, "setFetchBatchSize:", 100);
  objc_msgSend(v16, "setPredicate:", v13);
  v19 = 0;
  objc_msgSend(v8, "executeFetchRequest:error:", v16, &v19);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v7);
  return v17;
}

+ (id)fetchRequestForSortedCloudSharedAssetsWithPlaceholderKinds:(id)a3 additionalPredicate:(id)a4 ascending:(BOOL)a5
{
  _BOOL8 v5;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v5 = a5;
  v7 = a4;
  v8 = (void *)MEMORY[0x1E0C97B48];
  v9 = a3;
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fetchRequestWithEntityName:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForCloudSharedAsset"), 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "addObject:", v13);

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("cloudPlaceholderKind"), v9);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v12, "addObject:", v14);
  if (v7)
    objc_msgSend(v12, "addObject:", v7);
  objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v12);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setPredicate:", v15);
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("cloudServerPublishDate"), v5);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("cloudBatchPublishDate"), v5);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("dateCreated"), v5);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:", v16, v17, v18, 0);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setSortDescriptors:", v19);

  objc_msgSend(v11, "setFetchBatchSize:", 100);
  return v11;
}

+ (id)recentlyUsedGUIDsPathWithPathManager:(id)a3
{
  return (id)objc_msgSend(a3, "photoDirectoryWithType:additionalPathComponents:", 22, CFSTR("recentlyUsedGUIDS"));
}

+ (id)persistedRecentlyUsedGUIDSWithPathManager:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0C99D50];
  objc_msgSend(a1, "recentlyUsedGUIDsPathWithPathManager:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dataWithContentsOfFile:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v5, 0, 0, 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E10]), "initWithArray:", v6);
    }
    else
    {
      PLPhotoSharingGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        v10 = 138412290;
        v11 = 0;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR failed to de-serialize recently used list: %@", (uint8_t *)&v10, 0xCu);
      }

      v7 = 0;
    }

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

+ (void)markAssetAsRecentlyUsed:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v5 = a3;
  objc_msgSend(v5, "cloudAssetGUID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    objc_msgSend(v5, "pathManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pathManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLCloudSharedAsset.m"), 605, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("asset.pathManager"));

    }
    pl_dispatch_once();
    v11 = v6;
    v9 = v7;
    pl_dispatch_async();

  }
}

+ (id)lightweightReimportFileNameWithGUID:(id)a3 type:(id)a4
{
  void *v4;
  const __CFString *v5;
  id v6;

  v4 = a3;
  if (a3)
  {
    if (a4)
      v5 = (const __CFString *)a4;
    else
      v5 = CFSTR("JPG");
    v6 = a4;
    objc_msgSend(v4, "stringByAppendingPathExtension:", v5);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v4;
}

void __62__PLManagedAsset_PLCloudSharedAsset__markAssetAsRecentlyUsed___block_invoke_88(uint64_t a1)
{
  NSObject *v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  char v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  char v23;
  id v24;
  NSObject *v25;
  id v26;
  id v27;
  id v28;
  uint8_t buf[4];
  unint64_t v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  PLPhotoSharingGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v30 = v3;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) markAssetAsRecentlyUsed %@", buf, 0xCu);
  }

  v4 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
  if (!markAssetAsRecentlyUsed__recentlyUsedGUIDS)
  {
    objc_msgSend((id)objc_opt_class(), "persistedRecentlyUsedGUIDSWithPathManager:", *(_QWORD *)(a1 + 40));
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
    markAssetAsRecentlyUsed__recentlyUsedGUIDS = v5;

    PLPhotoSharingGetLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "count");
      *(_DWORD *)buf = 134217984;
      v30 = v8;
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) loaded recently used list with %lu entries", buf, 0xCu);
    }

    v4 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
    if (!markAssetAsRecentlyUsed__recentlyUsedGUIDS)
    {
      v9 = objc_alloc(MEMORY[0x1E0C99E10]);
      v10 = objc_msgSend(v9, "initWithCapacity:", markAssetAsRecentlyUsed__maxListSize);
      v11 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
      markAssetAsRecentlyUsed__recentlyUsedGUIDS = v10;

      v4 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
    }
  }
  if (objc_msgSend(v4, "containsObject:", *(_QWORD *)(a1 + 32)))
    objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "removeObject:", *(_QWORD *)(a1 + 32));
  objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "addObject:", *(_QWORD *)(a1 + 32));
  ++markAssetAsRecentlyUsed__changesSinceLastSave;
  v12 = objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "count");
  if (v12 >= markAssetAsRecentlyUsed__maxListSize)
  {
    objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "removeObjectsInRange:", 0, v12 - markAssetAsRecentlyUsed__maxListSize);
    v12 = objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "count");
  }
  if (markAssetAsRecentlyUsed__changesSinceLastSave > (unint64_t)markAssetAsRecentlyUsed__maxChangesBetweenSaves)
  {
    PLPhotoSharingGetLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218496;
      v30 = v12;
      v31 = 2048;
      v32 = markAssetAsRecentlyUsed__changesSinceLastSave;
      v33 = 2048;
      v34 = markAssetAsRecentlyUsed__maxChangesBetweenSaves;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) will save recently used list with size %lu changes since last save %lu maxChangesBetweenSaves %lu", buf, 0x20u);
    }

    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend((id)objc_opt_class(), "recentlyUsedGUIDsPathWithPathManager:", *(_QWORD *)(a1 + 40));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = 0;
    v16 = objc_msgSend(v14, "removeItemAtPath:error:", v15, &v28);
    v17 = v28;
    if ((v16 & 1) == 0 && objc_msgSend(v14, "fileExistsAtPath:", v15))
    {
      PLPhotoSharingGetLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v30 = (unint64_t)v17;
        _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR deleting recently used list :%@", buf, 0xCu);
      }

    }
    v19 = (void *)MEMORY[0x1E0CB38B0];
    objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "array");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = 0;
    objc_msgSend(v19, "dataWithPropertyList:format:options:error:", v20, 200, 0, &v27);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v27;

    if (v21)
    {
      v26 = v22;
      v23 = objc_msgSend(v21, "writeToFile:options:error:", v15, 1073741825, &v26);
      v24 = v26;

      if ((v23 & 1) != 0)
      {
LABEL_28:
        markAssetAsRecentlyUsed__changesSinceLastSave = 0;

        return;
      }
      PLPhotoSharingGetLog();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v30 = (unint64_t)v24;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR failed to write recently used list: %@", buf, 0xCu);
      }
      v22 = v24;
    }
    else
    {
      PLPhotoSharingGetLog();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v30 = (unint64_t)v22;
        _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR failed to serialize recently used list: %@", buf, 0xCu);
      }
    }

    v24 = v22;
    goto LABEL_28;
  }
}

void __62__PLManagedAsset_PLCloudSharedAsset__markAssetAsRecentlyUsed___block_invoke()
{
  dispatch_queue_t v0;
  void *v1;
  CFIndex AppIntegerValue;
  BOOL v3;
  uint64_t v4;
  CFIndex v5;
  BOOL v6;
  uint64_t v7;
  NSObject *v8;
  Boolean keyExistsAndHasValidFormat;
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v0 = dispatch_queue_create("com.apple.PLCloudSharedAssetSaveJob.recentlyUsedAssetsQueue", 0);
  v1 = (void *)markAssetAsRecentlyUsed__recentlyUsedAssetsQueue;
  markAssetAsRecentlyUsed__recentlyUsedAssetsQueue = (uint64_t)v0;

  CFPreferencesAppSynchronize(CFSTR("com.apple.mobileslideshow"));
  keyExistsAndHasValidFormat = 0;
  AppIntegerValue = CFPreferencesGetAppIntegerValue(CFSTR("sharingRecentlyUsedListMax"), CFSTR("com.apple.mobileslideshow"), &keyExistsAndHasValidFormat);
  if (AppIntegerValue)
    v3 = keyExistsAndHasValidFormat == 0;
  else
    v3 = 1;
  v4 = 200;
  if (!v3)
    v4 = AppIntegerValue;
  markAssetAsRecentlyUsed__maxListSize = v4;
  v5 = CFPreferencesGetAppIntegerValue(CFSTR("sharingRecentlyUsedMaxChangesBetweenSaves"), CFSTR("com.apple.mobileslideshow"), &keyExistsAndHasValidFormat);
  if (v5)
    v6 = keyExistsAndHasValidFormat == 0;
  else
    v6 = 1;
  v7 = 10;
  if (!v6)
    v7 = v5;
  markAssetAsRecentlyUsed__maxChangesBetweenSaves = v7;
  PLPhotoSharingGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    v11 = markAssetAsRecentlyUsed__maxListSize;
    v12 = 2048;
    v13 = markAssetAsRecentlyUsed__maxChangesBetweenSaves;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) maxListSize %lu maxChangesBetweenSaves %lu", buf, 0x16u);
  }

}

- (BOOL)isValidForJournalPersistence
{
  return objc_msgSend(MEMORY[0x1E0D73280], "bundleScopeShouldBePersistedForRebuild:", -[PLManagedAsset bundleScope](self, "bundleScope"));
}

- (id)payloadID
{
  void *v2;
  void *v3;

  -[PLManagedAsset uuid](self, "uuid");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLJournalEntryPayloadIDFactory payloadIDWithUUIDString:](PLJournalEntryPayloadIDFactory, "payloadIDWithUUIDString:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)payloadIDForTombstone:(id)a3
{
  void *v3;
  void *v4;

  objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("uuid"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLJournalEntryPayloadIDFactory payloadIDWithUUIDString:](PLJournalEntryPayloadIDFactory, "payloadIDWithUUIDString:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)payloadForChangedKeys:(id)a3
{
  id v4;
  PLAssetJournalEntryPayload *v5;

  v4 = a3;
  if (-[PLManagedAsset isValidForJournalPersistence](self, "isValidForJournalPersistence"))
    v5 = -[PLManagedObjectJournalEntryPayload initWithManagedObject:changedKeys:]([PLAssetJournalEntryPayload alloc], "initWithManagedObject:changedKeys:", self, v4);
  else
    v5 = 0;

  return v5;
}

- (BOOL)validForPersistenceChangedForChangedKeys:(id)a3
{
  return objc_msgSend(a3, "containsObject:", CFSTR("bundleScope"));
}

- (BOOL)placeholder_shouldBakeInAdjustments
{
  void *v3;
  _BOOL4 v4;

  -[PLManagedAsset fetchSourceAssetForDuplicationIfExists](self, "fetchSourceAssetForDuplicationIfExists");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "hasAdjustments"))
    v4 = !-[PLManagedAsset hasAdjustments](self, "hasAdjustments");
  else
    LOBYTE(v4) = 0;

  return v4;
}

- (BOOL)placeholder_shouldFlattenLivePhoto
{
  void *v3;
  _BOOL4 v4;

  -[PLManagedAsset fetchSourceAssetForDuplicationIfExists](self, "fetchSourceAssetForDuplicationIfExists");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isPhotoIris"))
    v4 = !-[PLManagedAsset isPhotoIris](self, "isPhotoIris");
  else
    LOBYTE(v4) = 0;

  return -[PLManagedAsset playbackStyle](self, "playbackStyle") == 1 && v4;
}

- (BOOL)placeholder_shouldAllowServerCopy
{
  if (PLCloudPhotoLibraryMultiLibarySyncingEnabled_onceToken != -1)
    dispatch_once(&PLCloudPhotoLibraryMultiLibarySyncingEnabled_onceToken, &__block_literal_global_291);
  return PLCloudPhotoLibraryMultiLibarySyncingEnabled_multiLibrarySyncingEnabled == 0;
}

- (void)fixupPlaceholderAssetWithSavedAssetType:(signed __int16)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", a3);
  -[PLManagedAsset fetchSourceAssetForDuplicationIfExists](self, "fetchSourceAssetForDuplicationIfExists");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    objc_msgSend(v8, "additionalAttributes");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setDestinationAssetCopyState:", 2);

  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setSourceAssetForDuplicationCPLScopedIdentifier:", 0);

  v6 = (void *)objc_opt_class();
  -[PLManagedAsset master](self, "master");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "processMediaMetadataForAsset:withCloudMaster:", self, v7);

}

- (void)setDestinationAssetCopyStateOnSourceAsset:(signed __int16)a3
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a3;
  -[PLManagedAsset fetchSourceAssetForDuplicationIfExists](self, "fetchSourceAssetForDuplicationIfExists");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v6 = v4;
    objc_msgSend(v4, "additionalAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setDestinationAssetCopyState:", v3);

    v4 = v6;
  }

}

- (id)fetchSourceAssetForDuplicationIfExists
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sourceAssetForDuplicationCPLScopedIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    -[PLManagedObject photoLibrary](self, "photoLibrary");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset assetWithScopedIdentifier:inLibrary:prefetchResources:](PLManagedAsset, "assetWithScopedIdentifier:inLibrary:prefetchResources:", v4, v5, 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v3 = (void *)MEMORY[0x1E0CB3880];
  v4 = a3;
  objc_msgSend(v3, "predicateWithBlock:", &__block_literal_global_81_89677);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "filteredArrayUsingPredicate:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (id)sortPlaceholderCloudResourcesByOrderOfCloudReReference:(id)a3
{
  void *v3;
  _QWORD v5[4];
  id v6;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __78__PLManagedAsset_CMM__sortPlaceholderCloudResourcesByOrderOfCloudReReference___block_invoke;
  v5[3] = &unk_1E36741A8;
  v6 = &unk_1E3764070;
  objc_msgSend(a3, "sortedArrayUsingComparator:", v5);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (unint64_t)masterResourceTypeForAdjustedAssetResourceType:(unint64_t)a3 flattenLivePhoto:(BOOL)a4
{
  unint64_t result;

  if (a4)
  {
    if (a3 - 2 >= 4)
      return 0;
    else
      return qword_199B9FAC0[a3 - 2];
  }
  else
  {
    result = 0;
    switch(a3)
    {
      case 2uLL:
        if (!-[PLManagedAsset isLoopingVideo](self, "isLoopingVideo"))
        {
          LODWORD(result) = -[PLManagedAsset isPhoto](self, "isPhoto");
          goto LABEL_15;
        }
        result = 2;
        break;
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 0x11uLL:
      case 0x15uLL:
      case 0x1CuLL:
        result = a3;
        break;
      case 0x10uLL:
        LODWORD(result) = -[PLManagedAsset isVideo](self, "isVideo");
LABEL_15:
        result = result;
        break;
      case 0x13uLL:
        if (-[PLManagedAsset isLoopingVideo](self, "isLoopingVideo"))
          result = 1;
        else
          result = 18;
        break;
      default:
        return result;
    }
  }
  return result;
}

- (BOOL)setupPlaceholderAssetWithRequiredPropertiesFromSourceAsset:(id)a3 placeholderAssetUUID:(id)a4 bundleScope:(unsigned __int16)a5 momentShare:(id)a6 importSessionID:(id)a7 bakeInAdjustmentsFromSourceAsset:(BOOL)a8 flattenLivePhoto:(BOOL)a9 copyTitleDescriptionAndKeywords:(BOOL)a10 copyCameraProcessingAdjustmentResources:(BOOL)a11 library:(id)a12
{
  uint64_t v14;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  PLKeywordManager *v40;
  void *v41;
  PLKeywordManager *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  _BOOL4 v49;
  void *v50;
  int v51;
  void *v52;
  int v53;
  BOOL v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  NSObject *v81;
  void *v82;
  id v83;
  void *v84;
  NSObject *v85;
  void *v86;
  id v87;
  void *v88;
  void *v89;
  void *v91;
  id v92;
  void *v93;
  id v94;
  _BOOL4 v95;
  id v96;
  uint8_t buf[4];
  void *v98;
  __int16 v99;
  void *v100;
  uint64_t v101;

  v95 = a8;
  v14 = a5;
  v101 = *MEMORY[0x1E0C80C00];
  v17 = a3;
  v18 = a4;
  v19 = a6;
  v94 = a7;
  v96 = a12;
  -[PLManagedAsset setUuid:](self, "setUuid:", v18);
  v93 = v18;
  -[PLManagedAsset setCloudAssetGUID:](self, "setCloudAssetGUID:", v18);
  -[PLManagedAsset setMomentShare:](self, "setMomentShare:", v19);
  objc_msgSend(v17, "dateCreated");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v20);

  objc_msgSend(v17, "uniformTypeIdentifier");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v21);

  -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForPlaceholder"));
  -[PLManagedAsset setBundleScope:](self, "setBundleScope:", v14);
  -[PLManagedAsset setHeight:](self, "setHeight:", objc_msgSend(v17, "height"));
  -[PLManagedAsset setWidth:](self, "setWidth:", objc_msgSend(v17, "width"));
  -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", objc_msgSend(v17, "originalHeight"));
  -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", objc_msgSend(v17, "originalWidth"));
  -[PLManagedAsset setKind:](self, "setKind:", objc_msgSend(v17, "kind"));
  -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", objc_msgSend(v17, "kindSubtype"));
  -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", objc_msgSend(v17, "playbackStyle"));
  -[PLManagedAsset setPlaybackVariation:](self, "setPlaybackVariation:", objc_msgSend(v17, "playbackVariation"));
  -[PLManagedAsset setVideoCpDurationValue:](self, "setVideoCpDurationValue:", objc_msgSend(v17, "videoCpDurationValue"));
  -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", objc_msgSend(v17, "videoCpVisibilityState"));
  -[PLManagedAsset setOrientation:](self, "setOrientation:", objc_msgSend(v17, "orientation"));
  -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", objc_msgSend(v17, "originalOrientation"));
  objc_msgSend(v17, "duration");
  -[PLManagedAsset setDuration:](self, "setDuration:");
  -[PLManagedAsset setHdrType:](self, "setHdrType:", objc_msgSend(v17, "hdrType"));
  objc_msgSend(v17, "mediaGroupUUID");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setMediaGroupUUID:](self, "setMediaGroupUUID:", v22);

  objc_msgSend(v17, "location");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setLocation:](self, "setLocation:", v23);

  objc_msgSend(v17, "reverseLocationData");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setReverseLocationData:](self, "setReverseLocationData:", v24);

  -[PLManagedAsset setPackedPreferredCropRect:](self, "setPackedPreferredCropRect:", objc_msgSend(v17, "packedPreferredCropRect"));
  -[PLManagedAsset setPackedAcceptableCropRect:](self, "setPackedAcceptableCropRect:", objc_msgSend(v17, "packedAcceptableCropRect"));
  -[PLManagedAsset setHighFrameRateState:](self, "setHighFrameRateState:", objc_msgSend(v17, "highFrameRateState"));
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "scopedIdentifier");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "setSourceAssetForDuplicationCPLScopedIdentifier:", v26);

  if (a11)
  {
    -[PLManagedAsset setCameraProcessingAdjustmentState:](self, "setCameraProcessingAdjustmentState:", objc_msgSend(v17, "cameraProcessingAdjustmentState"));
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "additionalAttributes");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "spatialOverCaptureGroupIdentifier");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setSpatialOverCaptureGroupIdentifier:", v29);

  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "additionalAttributes");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setVideoCpDisplayTimescale:", objc_msgSend(v31, "videoCpDisplayTimescale"));
  objc_msgSend(v30, "setVideoCpDisplayValue:", objc_msgSend(v31, "videoCpDisplayValue"));
  objc_msgSend(v30, "setVideoCpDurationTimescale:", objc_msgSend(v31, "videoCpDurationTimescale"));
  objc_msgSend(v31, "originalFilename");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setOriginalFilename:", v32);

  objc_msgSend(v31, "originalFilesize");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setOriginalFilesize:", v33);

  objc_msgSend(v31, "timeZoneOffset");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setTimeZoneOffset:", v34);

  objc_msgSend(v31, "timeZoneName");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setTimeZoneName:", v35);

  if (a10)
  {
    objc_msgSend(v31, "title");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setTitle:", v36);

    objc_msgSend(v31, "accessibilityDescription");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setAccessibilityDescription:", v37);

    objc_msgSend(v31, "longDescription");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setLongDescription:", v38);

    +[PLKeywordManager keywordsForAsset:](PLKeywordManager, "keywordsForAsset:", v17);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v39, "count"))
    {
      v40 = [PLKeywordManager alloc];
      -[PLManagedObject pathManager](self, "pathManager");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = -[PLKeywordManager initWithPathManager:](v40, "initWithPathManager:", v41);

      -[PLKeywordManager setKeywords:forAsset:](v42, "setKeywords:forAsset:", v39, self);
    }

  }
  objc_msgSend(v17, "momentShare");
  v43 = (void *)objc_claimAutoreleasedReturnValue();

  if (v43)
  {
    objc_msgSend(v30, "setImportedBy:", 7);
    objc_msgSend(v30, "setShareType:", 1);
    objc_msgSend(v17, "momentShare");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "owner");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "userIdentifier");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setShareOriginator:", v46);

    objc_msgSend(v17, "additionalAttributes");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "syndicationIdentifier");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setSyndicationIdentifier:", v48);

  }
  v49 = a9;
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = objc_msgSend(v50, "isCloudPhotoLibraryEnabled");

  if (v51)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = objc_msgSend(v52, "isUBF");

    if (!v53)
    {
      v58 = v96;
      v92 = v19;
      if (v19)
      {
        objc_msgSend(v96, "pathManager");
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v59, "privateDirectoryWithSubType:", 7);
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "uuid");
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "stringByAppendingPathComponent:", v61);
        v62 = objc_claimAutoreleasedReturnValue();

        objc_msgSend(v96, "libraryServicesManager");
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v63, "imageWriter");
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "fileExtension");
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        v66 = (void *)v62;
        objc_msgSend(v64, "pathForNewAssetWithDirectoryPath:fileName:extension:", v62, v93, v65);
        v67 = objc_claimAutoreleasedReturnValue();

        v91 = (void *)v67;
        objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v67, 0);
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedObject pathManager](self, "pathManager");
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v68, "path");
        v70 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v70, "stringByDeletingLastPathComponent");
        v71 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v69, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v71, 31, -[PLManagedAsset bundleScope](self, "bundleScope"));
        v72 = (void *)objc_claimAutoreleasedReturnValue();

        v58 = v96;
        v73 = v66;

        objc_msgSend(v68, "lastPathComponent");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setDirectory:](self, "setDirectory:", v72);
        -[PLManagedAsset setFilename:](self, "setFilename:", v74);

      }
      else
      {
        -[PLManagedAsset photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:](self, "photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:", v18);
        v75 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "pathForOriginalFile");
        v76 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v76, "pathExtension");
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v77, "uppercaseString");
        v78 = objc_claimAutoreleasedReturnValue();

        v91 = (void *)v78;
        v73 = (void *)v75;
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), v93, v78);
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedObject pathManager](self, "pathManager");
        v79 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v79, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v73, 31, -[PLManagedAsset bundleScope](self, "bundleScope"));
        v80 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset setDirectory:](self, "setDirectory:", v80);

        -[PLManagedAsset setFilename:](self, "setFilename:", v68);
      }
      v57 = v94;

      v54 = -[PLManagedAsset _setupPlaceholderAdjustmentPropertiesFromSourceAsset:bakeInAdjustmentsFromSourceAsset:library:](self, "_setupPlaceholderAdjustmentPropertiesFromSourceAsset:bakeInAdjustmentsFromSourceAsset:library:", v17, v95, v58);
      v19 = v92;
      v49 = a9;
      if (!a9)
        goto LABEL_24;
      goto LABEL_19;
    }
    v54 = -[PLManagedAsset _setupPlaceholderAdjustmentPropertiesFromSourceAsset:bakeInAdjustmentsFromSourceAsset:library:](self, "_setupPlaceholderAdjustmentPropertiesFromSourceAsset:bakeInAdjustmentsFromSourceAsset:library:", v17, v95, v96);
    -[PLManagedAsset setFilename:](self, "setFilename:", 0);
    -[PLManagedAsset setDirectory:](self, "setDirectory:", 0);
    -[PLManagedAsset originalUniformTypeIdentifier](self, "originalUniformTypeIdentifier");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset originalFilename](self, "originalFilename");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:originalFilename:](self, "setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:originalFilename:", v55, v56);

  }
  else
  {
    v54 = 1;
  }
  v57 = v94;
  if (!a9)
    goto LABEL_24;
LABEL_19:
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v81 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v17, "uuid");
      v82 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset uuid](self, "uuid");
      v83 = v19;
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v98 = v82;
      v99 = 2112;
      v100 = v84;
      _os_log_impl(&dword_199541000, v81, OS_LOG_TYPE_DEFAULT, "Flattening live photo from sourceAsset: %@ to placeholderAsset: %@", buf, 0x16u);

      v19 = v83;
      v57 = v94;

    }
  }
  -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", 1);
LABEL_24:
  if (v95 && objc_msgSend(v17, "isLoopingVideo"))
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v85 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "uuid");
        v87 = v19;
        v88 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v98 = v86;
        v99 = 2112;
        v100 = v88;
        _os_log_impl(&dword_199541000, v85, OS_LOG_TYPE_DEFAULT, "Resetting kind, kindSubtype and VideoCP state on baked-in placeholder asset %@ as source asset is looping video %@", buf, 0x16u);

        v19 = v87;
        v57 = v94;

      }
    }
    -[PLManagedAsset setKind:](self, "setKind:", 1);
  }
  else if (!v49)
  {
    goto LABEL_33;
  }
  -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 0);
  -[PLManagedAsset setVideoCpDurationValue:](self, "setVideoCpDurationValue:", 0);
  -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", 0);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v89, "setVideoCpDisplayTimescale:", 0);
  objc_msgSend(v89, "setVideoCpDisplayValue:", 0);
  objc_msgSend(v89, "setVideoCpDurationTimescale:", 0);

LABEL_33:
  if (v57)
    -[PLManagedAsset setImportSessionAlbumWithImportSessionID:](self, "setImportSessionAlbumWithImportSessionID:", v57);

  return v54;
}

- (BOOL)_setupPlaceholderAdjustmentPropertiesFromSourceAsset:(id)a3 bakeInAdjustmentsFromSourceAsset:(BOOL)a4 library:(id)a5
{
  id v8;
  id v9;
  _BYTE *v10;
  NSObject *v11;
  void *v12;
  PLManagedAsset *v13;
  BOOL v14;
  NSObject *v15;
  void *v16;
  PLManagedAsset *v17;
  id v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  id v25;
  uint8_t buf[4];
  id v27;
  __int16 v28;
  PLManagedAsset *v29;
  __int16 v30;
  id v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  if (objc_msgSend(v8, "hasAdjustments"))
  {
    v10 = (_BYTE *)MEMORY[0x1E0D115D0];
    if (a4)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v8, "uuid");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset uuid](self, "uuid");
          v13 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v27 = v12;
          v28 = 2112;
          v29 = v13;
          _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_DEFAULT, "Baking in adjustments from sourceAsset: %@ into placeholderAsset: %@", buf, 0x16u);

        }
      }
      -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", objc_msgSend(v8, "height"));
      -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", objc_msgSend(v8, "width"));
      -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", objc_msgSend(v8, "orientation"));
      -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", 0);
      goto LABEL_8;
    }
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v8, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset uuid](self, "uuid");
        v17 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v27 = v16;
        v28 = 2112;
        v29 = v17;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_DEFAULT, "Copying adjustments from sourceAsset: %@ to placeholderAsset: %@", buf, 0x16u);

      }
    }
    v25 = 0;
    v18 = +[PLUnmanagedAdjustment copyUnmanagedAdjustmentFromSourceAsset:forPlaceholderAsset:inLibrary:error:](PLUnmanagedAdjustment, "copyUnmanagedAdjustmentFromSourceAsset:forPlaceholderAsset:inLibrary:error:", v8, self, v9, &v25);
    v19 = v25;
    v14 = v19 == 0;
    if (v19)
    {
      if (*v10)
      {
LABEL_19:

        goto LABEL_20;
      }
      __CPLAssetsdOSLogDomain();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        v27 = v8;
        v28 = 2112;
        v29 = self;
        v30 = 2112;
        v31 = v19;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_ERROR, "Failed to copy unmanaged adjustmnent from sourceAsset: %@ to placeholderAsset: %@, %@", buf, 0x20u);
      }
    }
    else
    {
      -[PLManagedAsset setAdjustmentsState:](self, "setAdjustmentsState:", objc_msgSend(v8, "adjustmentsState"));
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "additionalAttributes");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "adjustedStableHash");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "setAdjustedStableHash:", v23);

      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v20 = objc_claimAutoreleasedReturnValue();
      -[NSObject setUnmanagedAdjustment:](v20, "setUnmanagedAdjustment:", v18);
    }

    goto LABEL_19;
  }
LABEL_8:
  v14 = 1;
LABEL_20:

  return v14;
}

uint64_t __78__PLManagedAsset_CMM__sortPlaceholderCloudResourcesByOrderOfCloudReReference___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v5 = a3;
  v6 = objc_msgSend(a2, "cplType");
  v7 = objc_msgSend(v5, "cplType");

  v8 = (void *)MEMORY[0x1E0CB37E8];
  v9 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "numberWithUnsignedInteger:", objc_msgSend(v9, "indexOfObject:", v10));
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = (void *)MEMORY[0x1E0CB37E8];
  v13 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v7);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "numberWithUnsignedInteger:", objc_msgSend(v13, "indexOfObject:", v14));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = objc_msgSend(v11, "compare:", v15);
  return v16;
}

BOOL __94__PLManagedAsset_CMM__filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "cplType") != 23 && objc_msgSend(v2, "cplType") != 24;

  return v3;
}

+ (BOOL)shouldPerformServerCopyOnPlaceholderAsset:(id)a3 photoLibrary:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  _BOOL8 v9;

  v6 = a4;
  objc_msgSend(a3, "fetchSourceAssetForDuplicationIfExists");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "momentShare");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8 != 0;

  LOBYTE(a1) = objc_msgSend(a1, "shouldPerformServerCopyWithSourceAsset:copyingFromMomentShare:photoLibrary:", v7, v9, v6);
  return (char)a1;
}

+ (BOOL)shouldPerformServerCopyWithSourceAsset:(id)a3 copyingFromMomentShare:(BOOL)a4 photoLibrary:(id)a5
{
  _BOOL4 v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  char v24;

  v6 = a4;
  v7 = a3;
  v8 = a5;
  if (objc_msgSend(v8, "isCloudPhotoLibraryEnabled")
    && objc_msgSend(v7, "placeholder_shouldAllowServerCopy"))
  {
    if (!v6)
    {
      objc_msgSend(v7, "allMasterCPLResources");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "allAssetCPLResources");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "setByAddingObjectsFromSet:", v17);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v11, "allObjects");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend(v18, "_pl_any:", &__block_literal_global_89730);

      objc_msgSend(v7, "allAssetCPLResources");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "allObjects");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "_pl_any:", &__block_literal_global_78_89731);

      objc_msgSend(v7, "master");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if (v23)
        v24 = v19;
      else
        v24 = 1;

      v15 = (v24 | v22) - 1;
      goto LABEL_17;
    }
    objc_msgSend(v7, "master");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "mediaMetadata");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "valueForKey:", CFSTR("data"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v11)
    {
      v15 = 0;
LABEL_17:

      goto LABEL_18;
    }
    objc_msgSend(v8, "pathManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    CPLStatusFromPathManager(v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "exitDeleteTime");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (v14)
    {

    }
    else if ((objc_msgSend(v13, "isExceedingQuota") & 1) == 0)
    {
      v15 = 1;
      goto LABEL_16;
    }
    v15 = 0;
LABEL_16:

    goto LABEL_17;
  }
  v15 = 0;
LABEL_18:

  return v15 & 1;
}

+ (unint64_t)resourceTypeForUnadjustedFlattenedLivePhotoAssetResourceType:(unint64_t)a3
{
  unint64_t result;

  result = a3;
  if ((a3 + 1 > 0x1C || ((1 << (a3 + 1)) & 0x1185FE7F) == 0) && a3 - 1000 >= 2)
    return 0;
  return result;
}

+ (BOOL)shouldBakeInAdjustmentsAndFlattenLivePhoto:(BOOL *)a3 forSourceAsset:(id)a4 adjustmentBakeInOptions:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  BOOL v11;
  _QWORD v13[4];
  id v14;
  id v15;
  uint64_t *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  _BYTE buf[24];
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  if (objc_msgSend(v7, "hasAdjustments"))
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v7, "scopedIdentifier");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v10;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v8;
        _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Determining whether to bake in adjustments in source asset: %@, with adjustment bake-in options: %@", buf, 0x16u);

      }
    }
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    v23 = 0;
    v18 = 0;
    v19 = &v18;
    v20 = 0x2020000000;
    v21 = 0;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __105__PLManagedAsset_CMM__shouldBakeInAdjustmentsAndFlattenLivePhoto_forSourceAsset_adjustmentBakeInOptions___block_invoke;
    v13[3] = &unk_1E36741D0;
    v14 = v7;
    v15 = v8;
    v16 = &v18;
    v17 = buf;
    objc_msgSend(v14, "synchronouslyFetchAdjustmentBlobWithCompletionHandler:", v13);
    if (a3)
      *a3 = *((_BYTE *)v19 + 24);
    v11 = *(_BYTE *)(*(_QWORD *)&buf[8] + 24) != 0;

    _Block_object_dispose(&v18, 8);
    _Block_object_dispose(buf, 8);
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

+ (BOOL)createMomentShareAssetsForMomentShare:(id)a3 batchedSourceAssetsToCopy:(id)a4 creationRequestSourceAssetsCMMAssetsMap:(id)a5 curatedSourceAssets:(id)a6 adjustmentBakeInOptionsDictionary:(id)a7 metadataCopyOptionsDictionary:(id)a8 keySourceAssetIdentifier:(id)a9 clientConnection:(id)a10 library:(id)a11 error:(id *)a12
{
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  BOOL v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  NSObject *v34;
  NSObject *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t i;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  char v48;
  void *v49;
  int v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  NSObject *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  void *v67;
  NSObject *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  void *v78;
  id v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  char v85;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id obj;
  void *v107;
  id v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  id v120;
  _QWORD v121[4];
  id v122;
  id v123;
  uint64_t v124;
  void *v125;
  int buf;
  id v127;
  __int16 v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  _BYTE v132[128];
  uint64_t v133;
  NSObject *v134;
  _QWORD v135[4];

  v135[1] = *MEMORY[0x1E0C80C00];
  v104 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v102 = a7;
  v101 = a8;
  v100 = a9;
  v92 = a10;
  v20 = a11;
  v97 = objc_alloc_init(MEMORY[0x1E0CB3620]);
  v21 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v121[0] = MEMORY[0x1E0C809B0];
  v121[1] = 3221225472;
  v121[2] = __267__PLManagedAsset_CMM__createMomentShareAssetsForMomentShare_batchedSourceAssetsToCopy_creationRequestSourceAssetsCMMAssetsMap_curatedSourceAssets_adjustmentBakeInOptionsDictionary_metadataCopyOptionsDictionary_keySourceAssetIdentifier_clientConnection_library_error___block_invoke;
  v121[3] = &unk_1E3677AF0;
  v99 = v19;
  v122 = v99;
  v98 = v21;
  v123 = v98;
  v93 = v18;
  objc_msgSend(v18, "enumerateKeysAndObjectsUsingBlock:", v121);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@ AND noindex:(%K) == NULL"), CFSTR("uuid"), v17, CFSTR("momentShare"));
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "fetchRequestWithEntityName:", v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  v91 = (void *)v22;
  objc_msgSend(v25, "setPredicate:", v22);
  objc_msgSend(v25, "setFetchLimit:", objc_msgSend(v17, "count"));
  v135[0] = CFSTR("additionalAttributes");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v135, 1);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "setRelationshipKeyPathsForPrefetching:", v26);

  if ((unint64_t)objc_msgSend(v17, "count") >= 0x65)
    objc_msgSend(v25, "setFetchBatchSize:", 100);
  v94 = v17;
  v27 = objc_msgSend(v17, "count");
  v28 = v27 == 0;
  v90 = v25;
  if (!v27)
  {
    v32 = v104;
    v31 = a1;
    if (*MEMORY[0x1E0D115D0])
    {
      v30 = 0;
      v95 = 0;
      goto LABEL_5;
    }
    __CPLAssetsdOSLogDomain();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_DEFAULT, "Zero batchedSourceAssetsToCopy: passed in", (uint8_t *)&buf, 2u);
    }
    v95 = 0;
    v33 = 0;
LABEL_15:

    v30 = 0;
    goto LABEL_16;
  }
  objc_msgSend(v20, "managedObjectContext");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v120 = 0;
  objc_msgSend(v29, "executeFetchRequest:error:", v25, &v120);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v95 = v120;

  v32 = v104;
  v31 = a1;
  if (!v30)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        buf = 138412290;
        v127 = v95;
        _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_ERROR, "Failed to fetch assets to copy: %@", (uint8_t *)&buf, 0xCu);
      }

    }
    v36 = (void *)MEMORY[0x1E0CB35C8];
    v37 = *MEMORY[0x1E0D74498];
    v133 = *MEMORY[0x1E0CB2D50];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Failed to fetch assets to copy: %@"), v95);
    v34 = objc_claimAutoreleasedReturnValue();
    v134 = v34;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v134, &v133, 1);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "errorWithDomain:code:userInfo:", v37, -1000001, v38);
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    v31 = a1;
    goto LABEL_15;
  }
LABEL_5:
  v33 = 0;
  v28 = 1;
LABEL_16:
  v39 = v98;
  v89 = v30;
  if (!objc_msgSend(v30, "count"))
    goto LABEL_50;
  v118 = 0u;
  v119 = 0u;
  v116 = 0u;
  v117 = 0u;
  obj = v30;
  v114 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v116, v132, 16);
  if (!v114)
    goto LABEL_49;
  v113 = *(_QWORD *)v117;
  v111 = *MEMORY[0x1E0CB2D50];
  v112 = *MEMORY[0x1E0D74498];
  v103 = v20;
  do
  {
    for (i = 0; i != v114; ++i)
    {
      if (*(_QWORD *)v117 != v113)
        objc_enumerationMutation(obj);
      v41 = *(void **)(*((_QWORD *)&v116 + 1) + 8 * i);
      objc_msgSend(v41, "uuid");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      LOWORD(v88) = 257;
      +[PLManagedAsset insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:](PLManagedAsset, "insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", v20, 0, 0, objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForPlaceholder"), 1, 0, 0, 0, 0, v88, v89, v90);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "uuid");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v43)
      {
        v61 = v42;
        v62 = (void *)MEMORY[0x1E0CB35C8];
        v130 = v111;
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Failed to create placeholder asset"));
        v63 = v33;
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        v131 = v64;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v131, &v130, 1);
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v62, "errorWithDomain:code:userInfo:", v112, -1000001, v65);
        v66 = objc_claimAutoreleasedReturnValue();

        v28 = 0;
        v33 = (void *)v66;
        v42 = v61;
        goto LABEL_47;
      }
      if (!v28)
      {
        v28 = 0;
        goto LABEL_47;
      }
      v115 = 0;
      objc_msgSend(v102, "objectForKeyedSubscript:", v42);
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      v46 = objc_msgSend(v31, "shouldBakeInAdjustmentsAndFlattenLivePhoto:forSourceAsset:adjustmentBakeInOptions:", &v115, v41, v45);
      v110 = v45;
      if (objc_msgSend(v45, "flattenLivePhotoToStillIfNeeded"))
      {
        v115 = 1;
        v46 = objc_msgSend(v41, "hasAdjustments") | v46;
      }
      objc_msgSend(v101, "objectForKeyedSubscript:", v42);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v48 = objc_msgSend(v47, "shouldCopyTitleDescriptionAndKeywords");
      v109 = v47;
      BYTE2(v87) = objc_msgSend(v47, "shouldCopySpatialOverCaptureResources");
      BYTE1(v87) = v48;
      LOBYTE(v87) = v115;
      if (!objc_msgSend(v43, "setupPlaceholderAssetWithRequiredPropertiesFromSourceAsset:placeholderAssetUUID:bundleScope:momentShare:importSessionID:bakeInAdjustmentsFromSourceAsset:flattenLivePhoto:copyTitleDescriptionAndKeywords:copyCameraProcessingAdjustmentResources:library:", v41, v44, 1, v104, 0, v46, v87, v20))
      {
        v108 = objc_alloc_init(MEMORY[0x1E0C99E08]);
LABEL_41:
        v107 = v42;
        v67 = v33;
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v68 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v43, "scopedIdentifier");
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v41, "scopedIdentifier");
            v70 = (void *)objc_claimAutoreleasedReturnValue();
            buf = 138412546;
            v127 = v69;
            v128 = 2112;
            v129 = (uint64_t)v70;
            _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_ERROR, "Failed to prepare moment share asset %@ for server copy from source asset %@", (uint8_t *)&buf, 0x16u);

          }
        }
        v71 = (void *)MEMORY[0x1E0CB35C8];
        v124 = v111;
        v72 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend(v43, "scopedIdentifier");
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "scopedIdentifier");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v72, "stringWithFormat:", CFSTR("Failed to prepare moment share asset %@ for server copy from source asset %@"), v73, v74);
        v75 = (void *)objc_claimAutoreleasedReturnValue();
        v125 = v75;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v125, &v124, 1);
        v76 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v71, "errorWithDomain:code:userInfo:", v112, -1000001, v76);
        v77 = objc_claimAutoreleasedReturnValue();

        objc_msgSend(v41, "additionalAttributes");
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "setDestinationAssetCopyState:", 0xFFFFFFFFLL);
        v28 = 0;
        v33 = (void *)v77;
        v20 = v103;
        v31 = a1;
        v42 = v107;
        v56 = v110;
        goto LABEL_46;
      }
      objc_msgSend(v41, "uuid");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      v50 = objc_msgSend(v49, "isEqualToString:", v100);

      if (v50)
      {
        v51 = objc_alloc(MEMORY[0x1E0D113E0]);
        objc_msgSend(v104, "previewData");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        v53 = (void *)objc_msgSend(v51, "initWithData:", v52);

        objc_msgSend(v53, "setKeyAssetIdentifier:", v44);
        objc_msgSend(v53, "data");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = v103;
        objc_msgSend(v104, "setPreviewData:", v54);

      }
      if (objc_msgSend(v99, "containsObject:", v42))
        objc_msgSend(v98, "addObject:", v44);
      v55 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      v31 = a1;
      v108 = v55;
      if (!objc_msgSend(a1, "createMasterForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:", v43, v41, v46, v115, v55, v20)|| !objc_msgSend(a1, "createAssetResourcesForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:", v43, v41, v46, v115, v55, v20))
      {
        goto LABEL_41;
      }
      objc_msgSend(a1, "_cloneResourcesForMomentSharePlaceholderAsset:withPlaceholderResourceURLToSourceResourceURLMap:fileManager:photoLibrary:", v43, v55, v97, v20);
      v56 = v110;
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v57 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v43, "scopedIdentifier");
          v96 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v41, "scopedIdentifier");
          v58 = objc_claimAutoreleasedReturnValue();
          buf = 138412546;
          v127 = v96;
          v128 = 2112;
          v129 = v58;
          v59 = (void *)v58;
          _os_log_impl(&dword_199541000, v57, OS_LOG_TYPE_DEFAULT, "Preparing moment share asset %@ for server copy from source asset %@", (uint8_t *)&buf, 0x16u);

          v31 = a1;
        }

      }
      objc_msgSend(v41, "additionalAttributes");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      v28 = 1;
      objc_msgSend(v60, "setDestinationAssetCopyState:", 1);
LABEL_46:

LABEL_47:
    }
    v114 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v116, v132, 16);
  }
  while (v114);
LABEL_49:

  v32 = v104;
  v39 = v98;
LABEL_50:
  objc_msgSend(v32, "calculatePropertyValues");
  if (objc_msgSend(v39, "count"))
  {
    v78 = v39;
    v79 = objc_alloc(MEMORY[0x1E0D113E0]);
    objc_msgSend(v32, "previewData");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    v81 = (void *)objc_msgSend(v79, "initWithData:", v80);

    objc_msgSend(v78, "allObjects");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    v83 = (void *)objc_msgSend(v82, "mutableCopy");
    objc_msgSend(v81, "setCuratedAssetIdentifiers:", v83);

    objc_msgSend(v81, "data");
    v84 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "setPreviewData:", v84);

  }
  if (a12)
    v85 = v28;
  else
    v85 = 1;
  if ((v85 & 1) == 0)
    *a12 = objc_retainAutorelease(v33);

  return v28;
}

+ (BOOL)createMasterForPlaceholderAsset:(id)a3 withSourceAsset:(id)a4 shouldBakeInAdjustments:(BOOL)a5 shouldFlattenLivePhoto:(BOOL)a6 placeholderResourceURLToSourceResourceURLMap:(id)a7 photoLibrary:(id)a8
{
  _BOOL4 v10;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  BOOL v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  NSObject *v26;
  id v27;
  void *v28;
  void *v29;
  unsigned __int8 *v30;
  int v31;
  NSObject *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  NSObject *v40;
  void *v41;
  NSObject *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  void *v54;
  BOOL v55;
  NSObject *v56;
  void *v57;
  NSObject *v58;
  os_log_type_t v59;
  const char *v60;
  void *v61;
  int v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  int v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v106;
  void *v107;
  NSObject *v108;
  id v109;
  void *v110;
  void *v111;
  uint64_t v112;
  void *v113;
  id v114;
  id obj;
  _BOOL4 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  id v121;
  uint8_t v122[128];
  uint8_t buf[4];
  void *v124;
  __int16 v125;
  uint64_t v126;
  __int16 v127;
  const char *v128;
  uint64_t v129;

  v116 = a6;
  v10 = a5;
  v129 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a7;
  v15 = a8;
  objc_msgSend(v13, "master");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    if (objc_msgSend(v13, "hasAdjustments"))
      objc_msgSend(v13, "nonDynamicOriginalUTI");
    else
      objc_msgSend(v13, "uniformTypeIdentifier");
    v112 = objc_claimAutoreleasedReturnValue();
    v114 = v14;
    if (!v10)
    {
      v121 = 0;
      objc_msgSend(v13, "masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:error:", 0, &v121);
      v23 = objc_claimAutoreleasedReturnValue();
      v22 = v121;
      v30 = (unsigned __int8 *)MEMORY[0x1E0D115D0];
      v31 = *MEMORY[0x1E0D115D0];
      if (!v23 && !*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v12, "scopedIdentifier");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v124 = v33;
          v125 = 2112;
          v126 = (uint64_t)v22;
          _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_ERROR, "Failed to retrieve source asset fingerprint for placeholder asset %@, error: %@", buf, 0x16u);

        }
        v31 = *v30;
      }
      if (v31)
        goto LABEL_25;
      __CPLAssetsdOSLogDomain();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v12, "scopedIdentifier");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v124 = v34;
        v125 = 2112;
        v126 = v23;
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Not baking in adjustments during master creation for asset: %@, using fingerprint: %@", buf, 0x16u);

      }
      goto LABEL_24;
    }
    objc_msgSend(v13, "bestAvaliableAdjustedResource");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "fingerprint");
      v23 = objc_claimAutoreleasedReturnValue();
      if (v23)
        goto LABEL_108;
      objc_msgSend(MEMORY[0x1E0D11398], "fingerprintSchemeForNewMasterAsset");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "fileURL");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "fingerPrintForFileAtURL:error:", v25, 0);
      v23 = objc_claimAutoreleasedReturnValue();

      if (v23)
      {
LABEL_108:
        if (*MEMORY[0x1E0D115D0])
        {
LABEL_25:
          v35 = v22;
          v22 = (id)v23;

          objc_msgSend(v12, "momentShare");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "managedObjectContext");
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLCloudMaster cloudMasterWithGUID:inMomentShare:prefetchResources:inManagedObjectContext:](PLCloudMaster, "cloudMasterWithGUID:inMomentShare:prefetchResources:inManagedObjectContext:", v23, v36, 0, v37);
          v38 = v15;
          v39 = objc_claimAutoreleasedReturnValue();

          if (v39)
          {
            objc_msgSend(v12, "setupPropertiesOnExistingMaster:", v39);
            v20 = 1;
            v14 = v114;
            v40 = v39;
            v15 = v38;
LABEL_34:
            v17 = v112;
LABEL_96:

LABEL_97:
            goto LABEL_98;
          }
          objc_msgSend(v12, "momentShare");
          v41 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLCloudMaster insertIntoPhotoLibrary:withCloudMasterGUID:inMomentShare:](PLCloudMaster, "insertIntoPhotoLibrary:withCloudMasterGUID:inMomentShare:", v38, v23, v41);
          v42 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(v12, "setupPropertiesOnNewCloudMaster:withPlaceholderSourceAsset:uniformTypeIdentifier:", v42, v13, v112);
          -[NSObject setPlaceholderState:](v42, "setPlaceholderState:", 1);
          v108 = v42;
          objc_msgSend(v12, "setMaster:", v42);
          if (v10)
            objc_msgSend(v13, "allAssetCPLResources");
          else
            objc_msgSend(v13, "allMasterCPLResources");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "allObjects");
          v45 = (void *)objc_claimAutoreleasedReturnValue();

          LODWORD(v44) = objc_msgSend(v13, "cameraProcessingAdjustmentState");
          v46 = v114;
          v110 = v38;
          v111 = v13;
          v109 = v22;
          if ((_DWORD)v44 != objc_msgSend(v12, "cameraProcessingAdjustmentState"))
          {
            objc_msgSend(v12, "filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources:", v45);
            v47 = objc_claimAutoreleasedReturnValue();

            v45 = (void *)v47;
          }
          objc_msgSend(v12, "sortPlaceholderCloudResourcesByOrderOfCloudReReference:", v45, v45);
          v117 = 0u;
          v118 = 0u;
          v119 = 0u;
          v120 = 0u;
          obj = (id)objc_claimAutoreleasedReturnValue();
          v48 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v117, v122, 16);
          if (!v48)
          {
LABEL_82:
            objc_msgSend(v12, "reevaluateCameraProcessingAdjustmentState");
            if (v10)
            {
              v70 = objc_msgSend(v12, "kind");
              v13 = v111;
              v15 = v110;
              v17 = v112;
              v40 = v108;
              if (v70 == objc_msgSend(v111, "kind"))
              {
                objc_msgSend(v111, "additionalAttributes");
                v71 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v71, "mediaMetadataType");
                v72 = (void *)objc_claimAutoreleasedReturnValue();
                -[NSObject setMediaMetadataType:](v108, "setMediaMetadataType:", v72);

                objc_msgSend(v111, "additionalAttributes");
                v73 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v73, "mediaMetadataData");
                v74 = (void *)objc_claimAutoreleasedReturnValue();

                if (v74)
                {
                  -[NSObject mediaMetadata](v108, "mediaMetadata");
                  v75 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v75, "setValue:forKey:", v74, CFSTR("data"));

                }
              }
              objc_msgSend(v12, "masterResourceForCPLType:", 1);
              v76 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v76, "uniformTypeIdentifier");
              v77 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v77, "identifier");
              v78 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSObject setUniformTypeIdentifier:](v108, "setUniformTypeIdentifier:", v78);

              objc_msgSend(v76, "uniformTypeIdentifier");
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v79, "identifier");
              v80 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v12, "setUniformTypeIdentifier:", v80);

              objc_msgSend(v76, "uniformTypeIdentifier");
              v81 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v81, "identifier");
              v82 = (void *)objc_claimAutoreleasedReturnValue();
              +[PLManagedAsset preferredFileExtensionForType:](PLManagedAsset, "preferredFileExtensionForType:", v82);
              v83 = (void *)objc_claimAutoreleasedReturnValue();

              if (v83)
              {
                -[NSObject originalFilename](v108, "originalFilename");
                v84 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v84, "stringByDeletingPathExtension");
                v85 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v85, "stringByAppendingPathExtension:", v83);
                v86 = (void *)objc_claimAutoreleasedReturnValue();
                -[NSObject setOriginalFilename:](v108, "setOriginalFilename:", v86);

                objc_msgSend(v12, "filename");
                v87 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v87, "stringByDeletingPathExtension");
                v88 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v88, "stringByAppendingPathExtension:", v83);
                v89 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v12, "setFilename:", v89);

              }
              objc_msgSend(v12, "additionalAttributes");
              v90 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v12, "filename");
              v91 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v90, "setOriginalFilename:", v91);

              -[NSObject setOriginalOrientation:](v108, "setOriginalOrientation:", objc_msgSend(v12, "originalOrientation"));
              objc_msgSend(v111, "scopedIdentifier");
              v92 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSObject setSourceMasterForDuplicationCPLScopedIdentifier:](v108, "setSourceMasterForDuplicationCPLScopedIdentifier:", v92);
            }
            else
            {
              v13 = v111;
              objc_msgSend(v111, "master");
              v93 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v93, "mediaMetadataType");
              v94 = (void *)objc_claimAutoreleasedReturnValue();
              v40 = v108;
              -[NSObject setMediaMetadataType:](v108, "setMediaMetadataType:", v94);

              objc_msgSend(v111, "master");
              v95 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v95, "mediaMetadata");
              v96 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v96, "valueForKey:", CFSTR("data"));
              v76 = (void *)objc_claimAutoreleasedReturnValue();

              v15 = v110;
              v17 = v112;
              if (v76)
              {
                -[NSObject mediaMetadata](v108, "mediaMetadata");
                v97 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v97, "setValue:forKey:", v76, CFSTR("data"));

              }
              objc_msgSend(v12, "additionalAttributes");
              v98 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v111, "additionalAttributes");
              v99 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v99, "mediaMetadataType");
              v100 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v98, "setMediaMetadataType:", v100);

              objc_msgSend(v111, "additionalAttributes");
              v101 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v101, "mediaMetadataData");
              v83 = (void *)objc_claimAutoreleasedReturnValue();

              if (v83)
              {
                objc_msgSend(v12, "additionalAttributes");
                v102 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v102, "setMediaMetadataData:", v83);

              }
              objc_msgSend(v111, "master");
              v92 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v92, "scopedIdentifier");
              v103 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSObject setSourceMasterForDuplicationCPLScopedIdentifier:](v108, "setSourceMasterForDuplicationCPLScopedIdentifier:", v103);

            }
            objc_msgSend(v12, "additionalAttributes");
            v104 = (void *)objc_claimAutoreleasedReturnValue();
            v22 = v109;
            objc_msgSend(v104, "setOriginalStableHash:", v109);

            v20 = 1;
            v14 = v114;
            goto LABEL_96;
          }
          v49 = v48;
          v50 = *(_QWORD *)v118;
          v113 = (void *)*MEMORY[0x1E0CEC558];
LABEL_40:
          v51 = 0;
          while (1)
          {
            if (*(_QWORD *)v118 != v50)
              objc_enumerationMutation(obj);
            v52 = *(void **)(*((_QWORD *)&v117 + 1) + 8 * v51);
            v53 = objc_msgSend(v52, "cplType");
            objc_msgSend(v52, "fingerprint");
            v54 = (void *)objc_claimAutoreleasedReturnValue();

            if (v54)
            {
              v55 = v53 > 0x1B || ((1 << v53) & 0xC400400) == 0;
              if (v55 && (!objc_msgSend(v52, "unorientedHeight") || !objc_msgSend(v52, "unorientedWidth")))
              {
                if (*MEMORY[0x1E0D115D0])
                  goto LABEL_71;
                __CPLAssetsdOSLogDomain();
                v56 = objc_claimAutoreleasedReturnValue();
                if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
                  goto LABEL_70;
                objc_msgSend(v12, "scopedIdentifier");
                v57 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412546;
                v124 = v52;
                v125 = 2112;
                v126 = (uint64_t)v57;
                v58 = v56;
                v59 = OS_LOG_TYPE_ERROR;
                v60 = "Skipping resource from re-referencing since its height or width is nil. Resource is in a really ba"
                      "d state. Skipped resource: %@, asset: %@";
                goto LABEL_56;
              }
              if (!v10)
              {
                if (!v116
                  || (v53 = +[PLManagedAsset resourceTypeForUnadjustedFlattenedLivePhotoAssetResourceType:](PLManagedAsset, "resourceTypeForUnadjustedFlattenedLivePhotoAssetResourceType:", v53)) != 0)
                {
LABEL_59:
                  objc_msgSend(v52, "validatedExternalResourceRepresentationUsingFileURL:", 0);
                  v56 = objc_claimAutoreleasedReturnValue();
                  -[NSObject setVersion:](v56, "setVersion:", 0);
                  -[NSObject setCplType:](v56, "setCplType:", v53);
                  -[NSObject setSourceCplType:](v56, "setSourceCplType:", objc_msgSend(v52, "cplType"));
                  -[NSObject setSidecarIndex:](v56, "setSidecarIndex:", 0);
                  if (v10)
                  {
                    if (objc_msgSend(v12, "isLoopingVideo"))
                    {
                      if (v53 != 1)
                      {
                        objc_msgSend(v52, "uniformTypeIdentifier");
                        v61 = (void *)objc_claimAutoreleasedReturnValue();
                        v62 = objc_msgSend(v61, "conformsToMovie");

                        if (v62)
                        {
                          objc_msgSend(v113, "identifier");
                          v63 = (void *)objc_claimAutoreleasedReturnValue();
                          +[PLUniformTypeIdentifier utiWithIdentifier:](PLUniformTypeIdentifier, "utiWithIdentifier:", v63);
                          v64 = (void *)objc_claimAutoreleasedReturnValue();
                          -[NSObject setUniformTypeIdentifier:](v56, "setUniformTypeIdentifier:", v64);

                        }
                      }
                    }
                    -[NSObject setRecipeID:](v56, "setRecipeID:", +[PLResourceInstaller recipeIDFromCPLResourceType:assetType:fromAdjustedSet:](PLResourceInstaller, "recipeIDFromCPLResourceType:assetType:fromAdjustedSet:", v53, objc_msgSend(v12, "kind"), 0));
                    v46 = v114;
                  }
                  objc_msgSend(v12, "storedResourceForExternalResource:asset:", v56, v12);
                  v65 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v65, "resetPrefetchState");
                  objc_msgSend(v52, "fileURL");
                  v66 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v65, "cplFileURL");
                  v67 = objc_claimAutoreleasedReturnValue();
                  v68 = (void *)v67;
                  if (v46 && v66 && v67)
                    objc_msgSend(v46, "setObject:forKeyedSubscript:", v66, v67);

                  goto LABEL_70;
                }
                if (*MEMORY[0x1E0D115D0])
                  goto LABEL_71;
                __CPLAssetsdOSLogDomain();
                v56 = objc_claimAutoreleasedReturnValue();
                if (!os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
                  goto LABEL_70;
                objc_msgSend(v12, "scopedIdentifier");
                v57 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412546;
                v124 = v52;
                v125 = 2112;
                v126 = (uint64_t)v57;
                v58 = v56;
                v59 = OS_LOG_TYPE_DEFAULT;
                v60 = "Skipping resource from re-referencing since we're flattening a live photo and we don't want this r"
                      "esource for flattening. Skipped resource: %@, asset: %@";
                goto LABEL_56;
              }
              v53 = objc_msgSend(v12, "masterResourceTypeForAdjustedAssetResourceType:flattenLivePhoto:", v53, v116);
              if (v53)
                goto LABEL_59;
              if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v56 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
                {
                  objc_msgSend(v12, "scopedIdentifier");
                  v57 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412546;
                  v124 = v52;
                  v125 = 2112;
                  v126 = (uint64_t)v57;
                  v58 = v56;
                  v59 = OS_LOG_TYPE_DEFAULT;
                  v60 = "Skipping resource from re-referencing since it's a asset resource we don't want in a master when"
                        " baking-in adjustments. Skipped resource: %@, asset: %@";
                  goto LABEL_56;
                }
LABEL_70:

              }
            }
            else if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v56 = objc_claimAutoreleasedReturnValue();
              if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
                goto LABEL_70;
              objc_msgSend(v12, "scopedIdentifier");
              v57 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v124 = v52;
              v125 = 2112;
              v126 = (uint64_t)v57;
              v58 = v56;
              v59 = OS_LOG_TYPE_ERROR;
              v60 = "Skipping resource from re-referencing since its fingerprint is nil. Resource is in a really bad stat"
                    "e. Skipped resource: %@, asset: %@";
LABEL_56:
              _os_log_impl(&dword_199541000, v58, v59, v60, buf, 0x16u);

              goto LABEL_70;
            }
LABEL_71:
            if (v49 == ++v51)
            {
              v69 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v117, v122, 16);
              v49 = v69;
              if (!v69)
                goto LABEL_82;
              goto LABEL_40;
            }
          }
        }
        __CPLAssetsdOSLogDomain();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v12, "scopedIdentifier");
          v27 = v22;
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", objc_msgSend(v22, "cplType"));
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v124 = v28;
          v125 = 2112;
          v126 = (uint64_t)v29;
          v127 = 2112;
          v128 = (const char *)v23;
          _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_DEFAULT, "Baking in adjustments during master creation for asset: %@, using source's primary adjusted resource with type: %@ fingerprint: %@", buf, 0x20u);

          v22 = v27;
        }
LABEL_24:

        goto LABEL_25;
      }
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v40 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v12, "scopedIdentifier");
          v106 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v124 = v106;
          _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_ERROR, "Baking in adjustments during master creation but failed to find a source primary adjusted resource fingerprint for asset: %@", buf, 0xCu);

        }
LABEL_33:
        v20 = 0;
        goto LABEL_34;
      }
    }
    else
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v40 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v12, "scopedIdentifier");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v124 = v43;
          _os_log_impl(&dword_199541000, v40, OS_LOG_TYPE_ERROR, "Baking in adjustments during master creation but failed to find a source primary adjusted resource for asset: %@", buf, 0xCu);

        }
        v22 = 0;
        goto LABEL_33;
      }
      v22 = 0;
    }
    v20 = 0;
    v17 = v112;
    goto LABEL_97;
  }
  if (*MEMORY[0x1E0D115D0])
  {
    v20 = 0;
    goto LABEL_99;
  }
  __CPLAssetsdOSLogDomain();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend(v13, "uuid");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "uuid");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v124 = v18;
    v125 = 2112;
    v126 = (uint64_t)v19;
    v127 = 2080;
    v128 = "+[PLManagedAsset(CMM) createMasterForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLi"
           "vePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:]";
    _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Source asset %@ for placeholder asset %@ does not have a master. Bailing out of %s", buf, 0x20u);

  }
  v20 = 0;
LABEL_98:

LABEL_99:
  return v20;
}

+ (BOOL)createAssetResourcesForPlaceholderAsset:(id)a3 withSourceAsset:(id)a4 shouldBakeInAdjustments:(BOOL)a5 shouldFlattenLivePhoto:(BOOL)a6 placeholderResourceURLToSourceResourceURLMap:(id)a7 photoLibrary:(id)a8
{
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  int v22;
  NSObject *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  void *v33;
  id v34;
  id obj;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  id v44;
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v11 = a3;
  v34 = a7;
  if (a5)
    goto LABEL_30;
  objc_msgSend(a4, "allAssetCPLResources");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v12, "count"))
    goto LABEL_29;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = v12;
  objc_msgSend(v12, "allObjects");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "sortPlaceholderCloudResourcesByOrderOfCloudReReference:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  obj = v15;
  v16 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v45, 16);
  if (!v16)
    goto LABEL_28;
  v17 = v16;
  v18 = *(_QWORD *)v38;
  do
  {
    for (i = 0; i != v17; ++i)
    {
      if (*(_QWORD *)v38 != v18)
        objc_enumerationMutation(obj);
      v20 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
      objc_msgSend(v20, "fingerprint");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v13, "containsObject:", v21);

      if (v22)
      {
        if (*MEMORY[0x1E0D115D0])
          continue;
        __CPLAssetsdOSLogDomain();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v42 = v20;
          v43 = 2112;
          v44 = a1;
          _os_log_impl(&dword_199541000, v23, OS_LOG_TYPE_DEFAULT, "Skipping asset resource from re-referencing since it has the same fingerprint as another resource on this asset. Skipped resource: %@, asset: %@", buf, 0x16u);
        }
      }
      else
      {
        objc_msgSend(v11, "pathForCPLResourceType:adjusted:", objc_msgSend(v20, "cplType"), objc_msgSend(v11, "hasAdjustments"));
        v24 = objc_claimAutoreleasedReturnValue();
        v23 = v24;
        if (v24 && -[NSObject length](v24, "length"))
        {
          objc_msgSend(v20, "validatedExternalResourceRepresentationUsingFileURL:", 0);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "setSidecarIndex:", 0);
          objc_msgSend(v11, "storedResourceForExternalResource:asset:", v25, v11);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "resetPrefetchState");
          objc_msgSend(v26, "fingerprint");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "addObject:", v27);

          objc_msgSend(v20, "fileURL");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "cplFileURL");
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = (void *)v29;
          if (v34 && v28 && v29)
            objc_msgSend(v34, "setObject:forKeyedSubscript:", v28, v29);

        }
        else
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Skipping asset resource from re-referencing since it has an invalid filePath. Skipped resource: %@, asset: %@"), v20, a1);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v31 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v42 = v25;
              _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
            }

          }
          PLSimulateCrash();
        }

      }
    }
    v17 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v45, 16);
  }
  while (v17);
LABEL_28:

  v12 = v33;
LABEL_29:

LABEL_30:
  return 1;
}

+ (void)_cloneResourcesForMomentSharePlaceholderAsset:(id)a3 withPlaceholderResourceURLToSourceResourceURLMap:(id)a4 fileManager:(id)a5 photoLibrary:(id)a6
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  BOOL v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v25 = a5;
  objc_msgSend(v9, "allMasterCPLResources");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v9;
  objc_msgSend(v9, "allAssetCPLResources");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setByAddingObjectsFromSet:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v15 = v14;
  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v17; ++i)
      {
        if (*(_QWORD *)v27 != v18)
          objc_enumerationMutation(v15);
        v20 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        objc_msgSend(v20, "cplFileURL");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "objectForKeyedSubscript:", v21);
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = (void *)v22;
        if (v21)
          v24 = v22 == 0;
        else
          v24 = 1;
        if (!v24)
          objc_msgSend(a1, "cloneResourceFileFromURL:toURL:forDestinationResource:forDestinationAsset:fileManager:error:", v22, v21, v20, v12, v25, 0);

      }
      v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v17);
  }

  objc_msgSend(v12, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:forceSRGBConversion:", 0, 0, 0, 0, 0);
}

+ (BOOL)cloneResourceFileFromURL:(id)a3 toURL:(id)a4 forDestinationResource:(id)a5 forDestinationAsset:(id)a6 fileManager:(id)a7 error:(id *)a8
{
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  int v20;
  id v21;
  int v22;
  id v23;
  void *v24;
  BOOL v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint8_t buf[4];
  id v42;
  __int16 v43;
  id v44;
  __int16 v45;
  void *v46;
  uint64_t v47;
  _QWORD v48[2];

  v48[1] = *MEMORY[0x1E0C80C00];
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a6;
  v17 = a7;
  objc_msgSend(v14, "path");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "stringByDeletingLastPathComponent");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = 0;
  v20 = objc_msgSend(v17, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v19, 1, 0, &v40);
  v21 = v40;

  if (!v20)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v16, "scopedIdentifier");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v42 = v14;
        v43 = 2112;
        v44 = v13;
        v45 = 2112;
        v46 = v27;
        _os_log_impl(&dword_199541000, v26, OS_LOG_TYPE_ERROR, "Failed to create directory for resource at %@ from %@. Asset: %@", buf, 0x20u);

      }
    }
    if (a8)
      goto LABEL_22;
    goto LABEL_23;
  }
  v39 = v21;
  v22 = objc_msgSend(v17, "copyItemAtURL:toURL:error:", v13, v14, &v39);
  v23 = v39;

  if (!v22)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v16, "scopedIdentifier");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v42 = v14;
        v43 = 2112;
        v44 = v13;
        v45 = 2112;
        v46 = v29;
        _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_ERROR, "Failed to clone resource at %@ from %@. Asset: %@", buf, 0x20u);

      }
    }
    if (!a8)
    {
      v25 = 0;
      goto LABEL_25;
    }
    v21 = v23;
    goto LABEL_22;
  }
  objc_msgSend(v14, "path");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "markAsLocallyAvailableWithFilePath:", v24);

  if ((objc_msgSend(v15, "copyPurgeabilityFromFileURL:", v13) & 1) == 0)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v16, "scopedIdentifier");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v42 = v14;
        v43 = 2112;
        v44 = v31;
        _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_ERROR, "Failed to update purgeability of resource at %@. Asset: %@", buf, 0x16u);

      }
    }
    v37 = (void *)MEMORY[0x1E0CB35C8];
    v32 = *MEMORY[0x1E0D74498];
    v47 = *MEMORY[0x1E0CB2D50];
    v33 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v16, "scopedIdentifier");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "stringWithFormat:", CFSTR("Failed to update purgeability of resource at %@. Asset: %@"), v14, v38);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v48[0] = v34;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v48, &v47, 1);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "errorWithDomain:code:userInfo:", v32, 47011, v35);
    v21 = (id)objc_claimAutoreleasedReturnValue();

    if (a8)
    {
LABEL_22:
      v23 = objc_retainAutorelease(v21);
      v25 = 0;
      *a8 = v23;
      goto LABEL_25;
    }
LABEL_23:
    v25 = 0;
    v23 = v21;
    goto LABEL_25;
  }
  v25 = 1;
LABEL_25:

  return v25;
}

+ (BOOL)attemptToRecreateMasterAndAssetResourcesForPlaceholderAssetRepush:(id)a3 sourceAsset:(id)a4 library:(id)a5
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v7 = a3;
  v8 = a4;
  v9 = a5;
  v10 = objc_msgSend(v7, "placeholder_shouldBakeInAdjustments");
  v11 = objc_msgSend(v7, "placeholder_shouldFlattenLivePhoto");
  if (+[PLManagedAsset createMasterForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:](PLManagedAsset, "createMasterForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:", v7, v8, v10, v11, 0, v9))
  {
    v12 = +[PLManagedAsset createAssetResourcesForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:](PLManagedAsset, "createAssetResourcesForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:", v7, v8, v10, v11, 0, v9);
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void __267__PLManagedAsset_CMM__createMomentShareAssetsForMomentShare_batchedSourceAssetsToCopy_creationRequestSourceAssetsCMMAssetsMap_curatedSourceAssets_adjustmentBakeInOptionsDictionary_metadataCopyOptionsDictionary_keySourceAssetIdentifier_clientConnection_library_error___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = a3;
  if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2))
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v5);

}

void __105__PLManagedAsset_CMM__shouldBakeInAdjustmentsAndFlattenLivePhoto_forSourceAsset_adjustmentBakeInOptions___block_invoke(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  PLPhotoEditPersistenceManager *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  NSObject *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const __CFString *v41;
  uint64_t j;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const __CFString *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  int v53;
  uint64_t v54;
  NSObject *v55;
  void *v56;
  const char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t k;
  void *v65;
  void *v66;
  void *v67;
  NSObject *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t m;
  void *v77;
  void *v78;
  void *v79;
  NSObject *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t n;
  void *v89;
  NSObject *v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id obj;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  void *v110;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _BYTE v132[128];
  _BYTE v133[128];
  _BYTE v134[128];
  _BYTE v135[128];
  uint8_t v136[128];
  uint8_t buf[4];
  void *v138;
  uint64_t v139;

  v139 = *MEMORY[0x1E0C80C00];
  v12 = a2;
  v13 = a4;
  v14 = a5;
  v15 = a8;
  v16 = a9;
  if (v12)
  {
    v17 = objc_alloc_init(PLPhotoEditPersistenceManager);
    -[PLPhotoEditPersistenceManager debugDescriptionForAdjustmentData:](v17, "debugDescriptionForAdjustmentData:", v12);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v18 = 0;
  }
  v19 = a1;
  if (objc_msgSend(*(id *)(a1 + 32), "isPhotoIris")
    && objc_msgSend(*(id *)(a1 + 40), "shouldBakeInIfLivePhotoPlaybackDisabled")
    && (objc_msgSend(*(id *)(a1 + 32), "canPlayPhotoIris") & 1) == 0)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v138 = v21;
        _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments and flatten because Live Photo playback is disabled in source asset: %@", buf, 0xCu);

      }
    }
    v19 = a1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
  v108 = v18;
  v109 = v16;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 48) + 8) + 24)
    && objc_msgSend(*(id *)(v19 + 40), "shouldBakeInIfLivePhotoMuted"))
  {
    v96 = v15;
    v101 = v14;
    v130 = 0u;
    v131 = 0u;
    v128 = 0u;
    v129 = 0u;
    objc_msgSend(v18, "objectForKeyedSubscript:", *MEMORY[0x1E0D765A8]);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v128, v136, 16);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)v129;
      v26 = *MEMORY[0x1E0D76590];
      v27 = *MEMORY[0x1E0D765B8];
      while (2)
      {
        for (i = 0; i != v24; ++i)
        {
          if (*(_QWORD *)v129 != v25)
            objc_enumerationMutation(v22);
          v29 = *(void **)(*((_QWORD *)&v128 + 1) + 8 * i);
          objc_msgSend(v29, "objectForKeyedSubscript:", v26);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("enabled"));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v30, "isEqualToString:", v27) && objc_msgSend(v31, "BOOLValue"))
          {
            if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v32 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
                v33 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v138 = v33;
                _os_log_impl(&dword_199541000, v32, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because Live Photo is muted in source asset: %@", buf, 0xCu);

              }
            }
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;

            goto LABEL_29;
          }

        }
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v128, v136, 16);
        if (v24)
          continue;
        break;
      }
    }
LABEL_29:

    v14 = v101;
    v19 = a1;
    v15 = v96;
    v18 = v108;
    v16 = v109;
  }
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8) + 24)
    && objc_msgSend(*(id *)(v19 + 40), "shouldBakeInIfAdjustedByThirdParty")
    && (objc_msgSend(v13, "isEqualToString:", *MEMORY[0x1E0D765C0]) & 1) == 0
    && (objc_msgSend(v13, "isEqualToString:", *MEMORY[0x1E0D76600]) & 1) == 0
    && (objc_msgSend(v13, "isEqualToString:", *MEMORY[0x1E0D765F8]) & 1) == 0
    && (IPAAdjustmentsComeFromSupportedApp() & 1) == 0)
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v138 = v35;
        _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because third-party edits are applied in source asset: %@", buf, 0xCu);

      }
    }
    v19 = a1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8) + 24)
    || !objc_msgSend(*(id *)(v19 + 40), "shouldBakeInIfCropped"))
  {
    goto LABEL_70;
  }
  v126 = 0u;
  v127 = 0u;
  v124 = 0u;
  v125 = 0u;
  objc_msgSend(v18, "objectForKeyedSubscript:", *MEMORY[0x1E0D765A8]);
  obj = (id)objc_claimAutoreleasedReturnValue();
  v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v124, v135, 16);
  if (!v36)
    goto LABEL_69;
  v37 = v36;
  v38 = *(_QWORD *)v125;
  v39 = *MEMORY[0x1E0D76590];
  v40 = *MEMORY[0x1E0D765D0];
  v93 = *MEMORY[0x1E0D76628];
  v94 = *MEMORY[0x1E0D765A0];
  v41 = CFSTR("enabled");
  v92 = v12;
  v102 = v14;
  v106 = v13;
  v97 = v15;
  while (2)
  {
    for (j = 0; j != v37; ++j)
    {
      if (*(_QWORD *)v125 != v38)
        objc_enumerationMutation(obj);
      v43 = *(void **)(*((_QWORD *)&v124 + 1) + 8 * j);
      objc_msgSend(v43, "objectForKeyedSubscript:", v39);
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "objectForKeyedSubscript:", v41);
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v44, "isEqualToString:", v40)
        && (!v45 || objc_msgSend(v45, "BOOLValue")))
      {
        v54 = a1;
        if (*MEMORY[0x1E0D115D0])
        {
LABEL_68:
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v54 + 56) + 8) + 24) = 1;

          v12 = v92;
          v14 = v102;
          v13 = v106;
          v15 = v97;
          goto LABEL_69;
        }
        __CPLAssetsdOSLogDomain();
        v55 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
LABEL_67:

          goto LABEL_68;
        }
        objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v138 = v56;
        v57 = "Will bake in adjustments because of cropping edits in source asset: %@";
LABEL_66:
        _os_log_impl(&dword_199541000, v55, OS_LOG_TYPE_DEFAULT, v57, buf, 0xCu);

        goto LABEL_67;
      }
      if (objc_msgSend(v44, "isEqualToString:", v40))
      {
        v110 = v45;
        v46 = v40;
        v47 = v37;
        v48 = v39;
        v49 = v41;
        v50 = v38;
        objc_msgSend(v43, "objectForKeyedSubscript:", v94);
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v51, "objectForKeyedSubscript:", v93);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v52, "BOOLValue"))
        {
          v53 = objc_msgSend(v44, "isEqualToString:", CFSTR("VideoReframe"));

          v38 = v50;
          v41 = v49;
          v39 = v48;
          v37 = v47;
          v40 = v46;
          v45 = v110;
          if (v53)
            goto LABEL_63;
          goto LABEL_56;
        }

        v45 = v110;
LABEL_63:
        if (*MEMORY[0x1E0D115D0])
        {
          v54 = a1;
          goto LABEL_68;
        }
        __CPLAssetsdOSLogDomain();
        v55 = objc_claimAutoreleasedReturnValue();
        v54 = a1;
        if (!os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
          goto LABEL_67;
        objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v138 = v56;
        v57 = "Will bake in adjustments because of reframe edits in source asset: %@";
        goto LABEL_66;
      }
      if ((objc_msgSend(v44, "isEqualToString:", CFSTR("VideoReframe")) & 1) != 0)
        goto LABEL_63;
LABEL_56:

    }
    v37 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v124, v135, 16);
    v12 = v92;
    v14 = v102;
    v13 = v106;
    v15 = v97;
    if (v37)
      continue;
    break;
  }
LABEL_69:

  v19 = a1;
  v18 = v108;
  v16 = v109;
LABEL_70:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8) + 24)
    && objc_msgSend(*(id *)(v19 + 40), "shouldBakeInIfTimelineTrimmed"))
  {
    v98 = v15;
    v103 = v14;
    v122 = 0u;
    v123 = 0u;
    v120 = 0u;
    v121 = 0u;
    objc_msgSend(v18, "objectForKeyedSubscript:", *MEMORY[0x1E0D765A8]);
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    v59 = objc_msgSend(v58, "countByEnumeratingWithState:objects:count:", &v120, v134, 16);
    if (v59)
    {
      v60 = v59;
      v61 = *(_QWORD *)v121;
      v62 = *MEMORY[0x1E0D76590];
      v63 = *MEMORY[0x1E0D76610];
      while (2)
      {
        for (k = 0; k != v60; ++k)
        {
          if (*(_QWORD *)v121 != v61)
            objc_enumerationMutation(v58);
          v65 = *(void **)(*((_QWORD *)&v120 + 1) + 8 * k);
          objc_msgSend(v65, "objectForKeyedSubscript:", v62);
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v65, "objectForKeyedSubscript:", CFSTR("enabled"));
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v66, "isEqualToString:", v63)
            && (!v67 || objc_msgSend(v67, "BOOLValue")))
          {
            if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v68 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
                v69 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v138 = v69;
                _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because of timeline trimming edits in source asset: %@", buf, 0xCu);

              }
            }
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;

            goto LABEL_88;
          }

        }
        v60 = objc_msgSend(v58, "countByEnumeratingWithState:objects:count:", &v120, v134, 16);
        if (v60)
          continue;
        break;
      }
    }
LABEL_88:

    v14 = v103;
    v19 = a1;
    v15 = v98;
    v18 = v108;
    v16 = v109;
  }
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8) + 24)
    && objc_msgSend(*(id *)(v19 + 40), "shouldBakeInIfPortraitDepthEffectEnabled"))
  {
    v99 = v15;
    v104 = v14;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    objc_msgSend(v18, "objectForKeyedSubscript:", *MEMORY[0x1E0D765A8]);
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    v71 = objc_msgSend(v70, "countByEnumeratingWithState:objects:count:", &v116, v133, 16);
    if (v71)
    {
      v72 = v71;
      v73 = *(_QWORD *)v117;
      v74 = *MEMORY[0x1E0D76590];
      v75 = *MEMORY[0x1E0D765D8];
      while (2)
      {
        for (m = 0; m != v72; ++m)
        {
          if (*(_QWORD *)v117 != v73)
            objc_enumerationMutation(v70);
          v77 = *(void **)(*((_QWORD *)&v116 + 1) + 8 * m);
          objc_msgSend(v77, "objectForKeyedSubscript:", v74);
          v78 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v77, "objectForKeyedSubscript:", CFSTR("enabled"));
          v79 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v78, "isEqualToString:", v75)
            && (!v79 || objc_msgSend(v79, "BOOLValue")))
          {
            if (!*MEMORY[0x1E0D115D0])
            {
              __CPLAssetsdOSLogDomain();
              v80 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(*(id *)(a1 + 32), "scopedIdentifier");
                v81 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v138 = v81;
                _os_log_impl(&dword_199541000, v80, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because of portrait depth effect in source asset: %@", buf, 0xCu);

              }
            }
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;

            goto LABEL_107;
          }

        }
        v72 = objc_msgSend(v70, "countByEnumeratingWithState:objects:count:", &v116, v133, 16);
        if (v72)
          continue;
        break;
      }
    }
LABEL_107:

    v14 = v104;
    v19 = a1;
    v15 = v99;
    v18 = v108;
    v16 = v109;
  }
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8) + 24)
    && objc_msgSend(*(id *)(v19 + 40), "shouldBakeInIfContainsPenultimateResources"))
  {
    v100 = v15;
    v105 = v14;
    v107 = v13;
    v114 = 0u;
    v115 = 0u;
    v112 = 0u;
    v113 = 0u;
    objc_msgSend(*(id *)(v19 + 32), "modernResources");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    v83 = objc_msgSend(v82, "countByEnumeratingWithState:objects:count:", &v112, v132, 16);
    if (v83)
    {
      v84 = v83;
      v85 = v19;
      v86 = *(_QWORD *)v113;
      v87 = (_BYTE *)MEMORY[0x1E0D115D0];
      do
      {
        for (n = 0; n != v84; ++n)
        {
          if (*(_QWORD *)v113 != v86)
            objc_enumerationMutation(v82);
          v89 = *(void **)(*((_QWORD *)&v112 + 1) + 8 * n);
          if (objc_msgSend(v89, "version") == 1 && (objc_msgSend(v89, "isDerivative") & 1) == 0)
          {
            if (!*v87)
            {
              __CPLAssetsdOSLogDomain();
              v90 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v90, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(*(id *)(v85 + 32), "scopedIdentifier");
                v91 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v138 = v91;
                _os_log_impl(&dword_199541000, v90, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because penultimate resources exist in source asset: %@", buf, 0xCu);

                v85 = a1;
              }

            }
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v85 + 56) + 8) + 24) = 1;
          }
        }
        v84 = objc_msgSend(v82, "countByEnumeratingWithState:objects:count:", &v112, v132, 16);
      }
      while (v84);
    }

    v14 = v105;
    v13 = v107;
    v15 = v100;
    v18 = v108;
    v16 = v109;
  }

}

BOOL __98__PLManagedAsset_CMM__shouldPerformServerCopyWithSourceAsset_copyingFromMomentShare_photoLibrary___block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  _BOOL8 v4;

  v2 = a2;
  if (objc_msgSend(v2, "cloudLocalState") == 1)
  {
    objc_msgSend(v2, "fingerprint");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v3 == 0;

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

BOOL __98__PLManagedAsset_CMM__shouldPerformServerCopyWithSourceAsset_copyingFromMomentShare_photoLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "cloudLocalState") != 3;
}

- (BOOL)isBundleScopeSyndication
{
  return -[PLManagedAsset bundleScope](self, "bundleScope") == 3;
}

- (NSDate)confirmedSpotlightSyncDate
{
  void *v2;
  void *v3;

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "lastUploadAttemptDate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (NSDate *)v3;
}

- (void)setConfirmedSpotlightSyncDate:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setLastUploadAttemptDate:", v4);

}

- (void)_populateSyndicationAssetWithAssetType:(signed __int16)a3 subtype:(signed __int16)a4 contentType:(id)a5 videoComplementContentType:(id)a6 originalFilename:(id)a7
{
  uint64_t v9;
  uint64_t v10;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v9 = a4;
  v10 = a3;
  v26 = *MEMORY[0x1E0C80C00];
  v12 = a6;
  v13 = a7;
  v14 = a5;
  -[PLManagedAsset updateAssetKindAndPlaybackStyleIfNeededWithKind:](self, "updateAssetKindAndPlaybackStyleIfNeededWithKind:", v10);
  objc_msgSend(v14, "identifier");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset setUniformTypeIdentifier:](self, "setUniformTypeIdentifier:", v15);
  if (v13)
    -[PLManagedAsset setSyndicationFilenameAndDirectoryWithOriginalFilename:](self, "setSyndicationFilenameAndDirectoryWithOriginalFilename:", v13);
  v16 = +[PLResourceInstaller onDemand_installOriginalResourceForSyndicationAsset:](PLResourceInstaller, "onDemand_installOriginalResourceForSyndicationAsset:", self);
  if ((_DWORD)v9 == 2)
  {
    if (!-[PLManagedAsset becomeSyndicationLivePhotoWithVideoComplementContentType:](self, "becomeSyndicationLivePhotoWithVideoComplementContentType:", v12))
    {
      PLSyndicationGetLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "identifier");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = 138543618;
        v23 = v18;
        v24 = 2114;
        v25 = v19;
        _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "[sync] failed to promote asset to live photo: %{public}@, content type: %{public}@", (uint8_t *)&v22, 0x16u);

      }
    }
  }
  else
  {
    -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", v9);
  }
  +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 65741);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceInstaller onDemand_installPrimaryImageResourceWithRecipe:version:forAsset:requireFileToBePresent:](PLResourceInstaller, "onDemand_installPrimaryImageResourceWithRecipe:version:forAsset:requireFileToBePresent:", v20, 0, self, 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "setDataStoreClassID:", 3);
  objc_msgSend(v21, "setDataStoreSubtype:", 4);
  objc_msgSend(v21, "setLocalAvailability:", 4294934528);
  objc_msgSend(v21, "setSyndicationLocalAvailabilityWithAvailable:additionalFlags:", 0, 2);

}

- (void)_setSyndicationStateFromContentsOfSearchableItem:(id)a3
{
  id v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = -[PLManagedAsset syndicationState](self, "syndicationState");
  v6 = v5 & 0xFFF6 | PLSearchableItemMessageIsFromMe(v4);
  if (PLSearchableItemMessagesIsSyndicatableMedia(v4))
    v7 = 0;
  else
    v7 = 8;
  v8 = v6 | v7;
  if (v5 != (_DWORD)v8)
  {
    PLSyndicationGetLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "uniqueIdentifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      PLManagedAssetSyndicationStateDescription(v5);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      PLManagedAssetSyndicationStateDescription(v8);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543874;
      v14 = v10;
      v15 = 2114;
      v16 = v11;
      v17 = 2114;
      v18 = v12;
      _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "[sync] setting syndication state from spotlight item %{public}@, %{public}@ -> %{public}@", (uint8_t *)&v13, 0x20u);

    }
    -[PLManagedAsset setSyndicationState:](self, "setSyndicationState:", v8);
    -[PLManagedAsset _updateModificationDateForSyndication](self, "_updateModificationDateForSyndication");
  }

}

- (void)_updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;

  v8 = a3;
  objc_msgSend(MEMORY[0x1E0C99D68], "now");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset confirmedSpotlightSyncDate](self, "confirmedSpotlightSyncDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
    goto LABEL_6;
  if (v8)
  {
    -[PLManagedAsset confirmedSpotlightSyncDate](self, "confirmedSpotlightSyncDate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "compare:", v8) != -1)
    {

      goto LABEL_7;
    }
    v7 = objc_msgSend(v8, "compare:", v4);

    if (v7 != -1)
      goto LABEL_7;
LABEL_6:
    -[PLManagedAsset setConfirmedSpotlightSyncDate:](self, "setConfirmedSpotlightSyncDate:", v4);
  }
LABEL_7:

}

- (void)_fixDistantPastContentCreationDateWithItem:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "attributeSet");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "contentCreationDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    -[PLManagedAsset addedDate](self, "addedDate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "isEqualToDate:", v6);

    if ((v7 & 1) == 0)
    {
      PLSyndicationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "syndicationIdentifier");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset addedDate](self, "addedDate");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138544130;
        v22 = v9;
        v23 = 2114;
        v24 = v11;
        v25 = 2114;
        v26 = v12;
        v27 = 2114;
        v28 = v5;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "[sync] asset (%{public}@ / %{public}@) addedDate (%{public}@ does not match Spotlight content creation date: %{public}@, repairing date", (uint8_t *)&v21, 0x2Au);

      }
      -[PLManagedAsset setAddedDate:](self, "setAddedDate:", v5);
      -[PLManagedAsset dateCreated](self, "dateCreated");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v13, "isEqualToDate:", v14) & 1) != 0)
      {
        -[PLManagedAsset dateCreated](self, "dateCreated");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v5, "isEqualToDate:", v15);

        if ((v16 & 1) == 0)
        {
          PLSyndicationGetLog();
          v17 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            -[PLManagedAsset uuid](self, "uuid");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "syndicationIdentifier");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            v21 = 138543618;
            v22 = v18;
            v23 = 2114;
            v24 = v20;
            _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_DEFAULT, "[sync] asset (%{public}@ / %{public}@) dateCreated is distantPast, repairing date", (uint8_t *)&v21, 0x16u);

          }
          -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v5);
        }
      }
      else
      {

      }
      -[PLManagedAsset _updateModificationDateForSyndication](self, "_updateModificationDateForSyndication");
    }
  }

}

- (void)_updateModificationDateForSyndication
{
  id v3;

  objc_msgSend(MEMORY[0x1E0C99D68], "now");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setModificationDate:](self, "setModificationDate:", v3);

}

- (void)setSyndicationAttributesFromMainFileURL:(id)a3 metadata:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  uint8_t buf[4];
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  v7 = a3;
  -[PLManagedAsset setDateCreated:](self, "setDateCreated:", 0);
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "originalFilename");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset directory](self, "directory");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset filename](self, "filename");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset setAttributesFromMainFileURL:mainFileMetadata:savedAssetType:bundleScope:isPlaceholder:placeholderFileURL:imageSource:imageData:](self, "setAttributesFromMainFileURL:mainFileMetadata:savedAssetType:bundleScope:isPlaceholder:placeholderFileURL:imageSource:imageData:", v7, v6, -[PLManagedAsset savedAssetType](self, "savedAssetType"), 3, 0, 0, 0, 0);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setOriginalFilename:", v9);

  -[PLManagedAsset setDirectory:](self, "setDirectory:", v10);
  -[PLManagedAsset setFilename:](self, "setFilename:", v11);
  -[PLManagedAsset dateCreated](self, "dateCreated");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v13)
  {
    -[PLManagedAsset addedDate](self, "addedDate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:", v14);

    PLSyndicationGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset addedDate](self, "addedDate");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v18 = v16;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_INFO, "dateCreated is nil, falling back to addedDate %@", buf, 0xCu);

    }
  }
  -[PLManagedAsset persistMetadataToFilesystem](self, "persistMetadataToFilesystem");

}

- (void)setSyndicationLivePhotoAttributesFromMainFileURL:(id)a3 metadata:(id)a4 videoComplementFileURL:(id)a5
{
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  void *v23;
  void *v24;
  void *v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = v11;
  if (v9)
  {
    if (v11)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+Syndication.m"), 457, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("fileURL"));

    if (v12)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+Syndication.m"), 458, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("videoComplementFileURL"));

LABEL_3:
  if (!objc_msgSend(v10, "isSyndicationOriginated"))
  {
    v15 = objc_alloc(MEMORY[0x1E0D75318]);
    objc_msgSend(v12, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v15, "initWithPathToVideo:pathToImage:", v16, v17);

    objc_msgSend(v14, "pairingIdentifier");
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = (void *)v18;
    v32 = 0uLL;
    v33 = 0;
    if (v14)
    {
      objc_msgSend(v14, "imageDisplayTime");
      v30 = 0uLL;
      v31 = 0;
      objc_msgSend(v14, "originalVideoDuration");
      if (!v19)
        goto LABEL_19;
    }
    else
    {
      v30 = 0uLL;
      v31 = 0;
      if (!v18)
      {
LABEL_19:

        goto LABEL_20;
      }
    }
    if ((BYTE12(v30) & 1) != 0)
    {
      v28 = v30;
      v29 = v31;
      v26 = v32;
      v27 = v33;
      -[PLManagedAsset becomePhotoIrisWithMediaGroupUUID:mainFileMetadata:videoURL:videoDuration:stillDisplayTime:options:](self, "becomePhotoIrisWithMediaGroupUUID:mainFileMetadata:videoURL:videoDuration:stillDisplayTime:options:", v19, v10, v12, &v28, &v26, 0);
    }
    goto LABEL_19;
  }
  objc_msgSend(v10, "livePhotoPairingIdentifier");
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = (void *)v13;
  v32 = 0uLL;
  v33 = 0;
  if (v10)
  {
    objc_msgSend(v10, "stillImageDisplayTime");
    v30 = 0uLL;
    v31 = 0;
    objc_msgSend(v10, "duration");
    if (!v14)
      goto LABEL_20;
  }
  else
  {
    v30 = 0uLL;
    v31 = 0;
    if (!v13)
      goto LABEL_20;
  }
  if ((BYTE12(v32) & 1) != 0 && (BYTE12(v30) & 1) != 0)
  {
    -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 2);
    v28 = v30;
    v29 = v31;
    v26 = v32;
    v27 = v33;
    -[PLManagedAsset updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:](self, "updatePhotoIrisMetadataWithMediaGroupUUID:videoDuration:stillDisplayTime:", v14, &v28, &v26);
    if (-[PLManagedAsset canPlayPhotoIris](self, "canPlayPhotoIris"))
    {
      -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", 3);
      -[PLManagedAsset updatePlaybackVariationAndStyleFromOriginalMetadata:](self, "updatePlaybackVariationAndStyleFromOriginalMetadata:", v10);
    }
    -[PLManagedAsset syndicationOriginalVideoComplementResource](self, "syndicationOriginalVideoComplementResource");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "exifPixelSize");
    objc_msgSend(v20, "setUnorientedWidth:", (uint64_t)v21);
    objc_msgSend(v10, "exifPixelSize");
    objc_msgSend(v20, "setUnorientedHeight:", (uint64_t)v22);
    objc_msgSend(v10, "firstVideoTrackCodecString");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "setCodecFourCharCodeName:", v23);

    objc_msgSend(v20, "setLocalAvailability:", 1);
    objc_msgSend(v20, "setDataLength:", objc_msgSend(v10, "fileSize"));

  }
LABEL_20:

}

- (void)setSyndicationFilenameAndDirectoryWithOriginalFilename:(id)a3
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a3;
  if (!v9)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+Syndication.m"), 489, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("originalFilename"));

  }
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setOriginalFilename:", v9);

  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:originalFilename:](self, "setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:originalFilename:", v7, v9);

  }
}

- (BOOL)becomeSyndicationLivePhotoWithVideoComplementContentType:(id)a3
{
  void *v4;

  +[PLResourceInstaller onDemand_installOriginalVideoComplementForSyndicationAsset:contentType:](PLResourceInstaller, "onDemand_installOriginalVideoComplementForSyndicationAsset:contentType:", self, a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", 2);

  return v4 != 0;
}

- (id)syndicationResourcesDescription
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  __CFString *v11;
  __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  id obj;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v19;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v19 != v6)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * v7);
        +[PLDescriptionBuilder plainDescriptionBuilder](PLDescriptionBuilder, "plainDescriptionBuilder");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v8, "resourceType");
        v11 = CFSTR("invalid");
        if (v10 <= 0x1F)
          v11 = off_1E3662240[v10];
        v12 = v11;
        objc_msgSend(v9, "appendName:object:", CFSTR("type"), v12);

        objc_msgSend(v8, "dataStore");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "descriptionForSubtype:", objc_msgSend(v8, "dataStoreSubtype"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "appendName:object:", CFSTR("dataStoreSubtype"), v14);

        objc_msgSend(v9, "build");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "appendFormat:", CFSTR("<%@>"), v15);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v5);
  }

  return v3;
}

- (id)syndicationDescription
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  +[PLDescriptionBuilder plainDescriptionBuilder](PLDescriptionBuilder, "plainDescriptionBuilder");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset uuid](self, "uuid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:object:", CFSTR("uuid"), v4);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "syndicationIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:object:", CFSTR("syndicationIdentifier"), v6);

  objc_msgSend(v3, "appendName:unsignedIntegerValue:", CFSTR("kind"), (int)-[PLManagedAsset kind](self, "kind"));
  -[PLManagedAsset uniformTypeIdentifier](self, "uniformTypeIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:object:", CFSTR("uti"), v7);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "importedByBundleIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:object:", CFSTR("importedBy"), v9);

  -[PLManagedAsset syndicationResourcesDescription](self, "syndicationResourcesDescription");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appendName:object:", CFSTR("resources"), v10);

  objc_msgSend(v3, "build");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

- (id)syndicationFileIdentifierForResourceType:(unsigned int)a3 version:(unsigned int)a4 recipeID:(unsigned int)a5 utiString:(id)a6
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v6 = *(_QWORD *)&a5;
  v7 = *(_QWORD *)&a4;
  v8 = *(_QWORD *)&a3;
  v10 = (objc_class *)MEMORY[0x1E0D73278];
  v11 = a6;
  v12 = [v10 alloc];
  -[PLManagedAsset uuid](self, "uuid");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset originalFilename](self, "originalFilename");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (void *)objc_msgSend(v12, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v13, 3, v11, v7, v8, v6, v14);

  return v15;
}

- (id)syndicationResourceURLForResourceType:(unsigned int)a3 version:(unsigned int)a4 recipeID:(unsigned int)a5 utiString:(id)a6 error:(id *)a7
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  const __CFString **v22;
  uint64_t *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  const __CFString *v28;
  uint64_t v29;
  _QWORD v30[2];

  v8 = *(_QWORD *)&a5;
  v9 = *(_QWORD *)&a4;
  v10 = *(_QWORD *)&a3;
  v30[1] = *MEMORY[0x1E0C80C00];
  v12 = a6;
  v13 = (void *)MEMORY[0x1E0D73278];
  -[PLManagedAsset uuid](self, "uuid");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset originalFilename](self, "originalFilename");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v13) = objc_msgSend(v13, "isValidFileIdentifierParametersForUUID:utiString:originalFilename:", v14, v12, v15);

  if ((_DWORD)v13)
  {
    -[PLManagedObject pathManager](self, "pathManager");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset syndicationFileIdentifierForResourceType:version:recipeID:utiString:](self, "syndicationFileIdentifierForResourceType:version:recipeID:utiString:", v10, v9, v8, v12);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "readOnlyUrlWithIdentifier:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (v18)
      goto LABEL_8;
    v19 = (void *)MEMORY[0x1E0CB35C8];
    v20 = *MEMORY[0x1E0D74498];
    v29 = *MEMORY[0x1E0CB2D50];
    v30[0] = CFSTR("Failed to create url from identifier");
    v21 = (void *)MEMORY[0x1E0C99D80];
    v22 = (const __CFString **)v30;
    v23 = &v29;
  }
  else
  {
    v19 = (void *)MEMORY[0x1E0CB35C8];
    v20 = *MEMORY[0x1E0D74498];
    v27 = *MEMORY[0x1E0CB2D50];
    v28 = CFSTR("Invalid file identifier parameters");
    v21 = (void *)MEMORY[0x1E0C99D80];
    v22 = &v28;
    v23 = &v27;
  }
  objc_msgSend(v21, "dictionaryWithObjects:forKeys:count:", v22, v23, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "errorWithDomain:code:userInfo:", v20, 46801, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  if (a7)
    *a7 = objc_retainAutorelease(v25);

  v18 = 0;
LABEL_8:

  return v18;
}

- (id)syndicationOriginalResource
{
  unsigned int v3;
  int v4;
  void *v5;
  NSObject *v6;
  void *v7;
  unsigned int v8;
  __CFString *v9;
  __CFString *v10;
  _QWORD v12[4];
  int v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  __CFString *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = -[PLManagedAsset kind](self, "kind");
  if (v3 >= 3)
    v4 = 31;
  else
    v4 = v3;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __58__PLManagedAsset_Syndication__syndicationOriginalResource__block_invoke;
  v12[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  v13 = v4;
  -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", v12);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_90446);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      PLSyndicationGetLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      {
        -[PLManagedAsset syndicationDescription](self, "syndicationDescription");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v5, "resourceType");
        if (v8 > 0x1F)
          v9 = CFSTR("invalid");
        else
          v9 = off_1E3662240[v8];
        v10 = v9;
        *(_DWORD *)buf = 138543618;
        v15 = v7;
        v16 = 2114;
        v17 = v10;
        _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_FAULT, "Syndication asset (%{public}@) has possibly inconsistent original resource with type: %{public}@", buf, 0x16u);

      }
    }
  }
  return v5;
}

- (id)syndicationOriginalVideoComplementResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_89_90445);
}

- (BOOL)syndicationOriginalResourcesAreLocal
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  BOOL v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  char v26;

  -[PLManagedAsset syndicationOriginalResource](self, "syndicationOriginalResource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, "resourceType");
    v6 = objc_msgSend(v4, "version");
    v7 = objc_msgSend(v4, "recipeID");
    objc_msgSend(v4, "uniformTypeIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "identifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset syndicationResourceURLForResourceType:version:recipeID:utiString:error:](self, "syndicationResourceURLForResourceType:version:recipeID:utiString:error:", v5, v6, v7, v9, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "path");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v11, "fileExistsAtPath:", v12);

    }
    else
    {
      v13 = 0;
    }

  }
  else
  {
    v13 = 0;
  }

  if (-[PLManagedAsset isPhotoIris](self, "isPhotoIris"))
  {
    v14 = 0;
    if (!v13)
      return v13;
  }
  else
  {
    -[PLManagedAsset filename](self, "filename");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v15 != 0;

    if (!v13)
      return v13;
  }
  if (!v14)
  {
    -[PLManagedAsset syndicationOriginalVideoComplementResource](self, "syndicationOriginalVideoComplementResource");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v16;
    if (v16)
    {
      v18 = objc_msgSend(v16, "resourceType");
      v19 = objc_msgSend(v17, "version");
      v20 = objc_msgSend(v17, "recipeID");
      objc_msgSend(v17, "uniformTypeIdentifier");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "identifier");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset syndicationResourceURLForResourceType:version:recipeID:utiString:error:](self, "syndicationResourceURLForResourceType:version:recipeID:utiString:error:", v18, v19, v20, v22, 0);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v23
        || (objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager"),
            v24 = (void *)objc_claimAutoreleasedReturnValue(),
            objc_msgSend(v23, "path"),
            v25 = (void *)objc_claimAutoreleasedReturnValue(),
            v26 = objc_msgSend(v24, "fileExistsAtPath:", v25),
            v25,
            v24,
            (v26 & 1) == 0))
      {
        LOBYTE(v13) = 0;
      }

    }
    else
    {
      LOBYTE(v13) = 0;
    }

  }
  return v13;
}

- (BOOL)promoteToGuestAsset:(id *)a3
{
  int v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  int v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if ((-[PLManagedAsset syndicationState](self, "syndicationState") & 1) != 0)
  {
    PLSyndicationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138543362;
      v16 = v11;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "promotion to guest asset %{public}@ is forbidden for self shared asset", (uint8_t *)&v15, 0xCu);

    }
    return 0;
  }
  objc_msgSend(MEMORY[0x1E0D73310], "maskForAllowedToPromoteToGuestAsset");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  v5 = PLValidatedSavedAssetTypeApplies();
  PLSyndicationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (!v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138543618;
      v16 = v12;
      v17 = 1024;
      v18 = -[PLManagedAsset savedAssetType](self, "savedAssetType");
      _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_ERROR, "promotion to guest asset %{public}@ is forbidden for savedAssetType %hd", (uint8_t *)&v15, 0x12u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 41005, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (a3)
      *a3 = objc_retainAutorelease(v13);

    return 0;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 138543362;
    v16 = v8;
    _os_log_impl(&dword_199541000, v7, OS_LOG_TYPE_INFO, "promoting asset %{public}@ to guest", (uint8_t *)&v15, 0xCu);

  }
  -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForPromoteToGuestAsset"));
  return 1;
}

- (BOOL)resetGuestAssetPromotion:(id *)a3
{
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int v9;
  _BOOL4 v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  int v20;
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "libraryBundle");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "libraryServicesManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "wellKnownPhotoLibraryIdentifier");

  objc_msgSend(MEMORY[0x1E0D73310], "maskForAllowedToResetGuestAssetPromotion");
  -[PLManagedAsset savedAssetType](self, "savedAssetType");
  v9 = PLValidatedSavedAssetTypeApplies();
  if (v8 == 3)
    v10 = v9;
  else
    v10 = 0;
  PLSyndicationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138543362;
      v21 = v13;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_INFO, "resetting guest asset promotion for asset %{public}@", (uint8_t *)&v20, 0xCu);

    }
    -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForInsertIntoSyndicationLibrary"));
  }
  else
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset savedAssetType](self, "savedAssetType");
      PLValidatedSavedAssetTypeDescription();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      PLStringFromWellKnownPhotoLibraryIdentifier();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138543874;
      v21 = v14;
      v22 = 2114;
      v23 = v15;
      v24 = 2114;
      v25 = v16;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "reset guest asset promotion is forbidden for asset %{public}@ %{public}@ in %{public}@", (uint8_t *)&v20, 0x20u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 41005, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = v17;
    if (a3)
      *a3 = objc_retainAutorelease(v17);

  }
  return v10;
}

- (BOOL)eligibleForGuestAssetPromotion
{
  double v3;
  BOOL v4;
  void *v5;

  -[PLManagedAsset curationScore](self, "curationScore");
  if (v3 < 0.5)
    return 0;
  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (objc_msgSend(v5, "syndicationProcessingValue") & 0x7EF0) != 0;

  return v4;
}

- (void)syndicatedAssetDidSaveToUserLibrary
{
  void *v3;
  void *v4;
  int v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  NSObject *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  int v38;
  void *v39;
  id v40;
  uint64_t v41;
  _QWORD v42[2];
  uint8_t buf[4];
  void *v44;
  __int16 v45;
  uint64_t v46;
  __int16 v47;
  const __CFString *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "libraryServicesManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isSystemPhotoLibrary");

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "syndicationIdentifier");
  v7 = objc_claimAutoreleasedReturnValue();

  PLSyndicationGetLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v9 = v3;
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = CFSTR("other");
    *(_DWORD *)buf = 138543874;
    v44 = v10;
    v45 = 2114;
    if (v5)
      v11 = CFSTR("SPL");
    v46 = v7;
    v47 = 2114;
    v48 = v11;
    _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEFAULT, "Syndicated asset %{public}@ / %{public}@ did save to user library (%{public}@)", buf, 0x20u);

    v3 = v9;
  }
  v38 = v5;

  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForGuestAsset"), 1);
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)MEMORY[0x1E0CB3528];
  v39 = (void *)v7;
  v41 = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v41, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForSyndicatedAssetIdentifiers:includeRejected:](PLManagedAsset, "predicateForSyndicatedAssetIdentifiers:includeRejected:", v14, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = v15;
  v42[1] = v12;
  v37 = (void *)v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v42, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "andPredicateWithSubpredicates:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "fetchRequestWithEntityName:", v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v20, "setPredicate:", v17);
  objc_msgSend(v20, "setFetchLimit:", 1);
  objc_msgSend(v3, "managedObjectContext");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = 0;
  objc_msgSend(v21, "executeFetchRequest:error:", v20, &v40);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v40;

  objc_msgSend(v22, "firstObject");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  if (v24)
  {
    PLSyndicationGetLog();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v24, "uuid");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "additionalAttributes");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "syndicationIdentifier");
      v36 = v17;
      v28 = v23;
      v29 = v3;
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v44 = v26;
      v45 = 2114;
      v46 = (uint64_t)v30;
      _os_log_impl(&dword_199541000, v25, OS_LOG_TYPE_INFO, "Found existing guest asset %{public}@ with syndication identifier %{public}@", buf, 0x16u);

      v3 = v29;
      v23 = v28;
      v17 = v36;

    }
    -[PLManagedAsset _preserveRelationshipsOfDeletedGuestAsset:](self, "_preserveRelationshipsOfDeletedGuestAsset:", v24);
    v31 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v24, "uuid");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset uuid](self, "uuid");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "stringWithFormat:", CFSTR("Deleting guest asset (uuid: %@) because we just ingested it as a full asset (uuid: %@)"), v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();

    +[PLAssetTransactionReason transactionReason:](PLAssetTransactionReason, "transactionReason:", v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "deleteWithReason:", v35);

    -[PLManagedAsset setWasGuestAsset:](self, "setWasGuestAsset:", 1);
  }
  else
  {
    -[PLManagedAsset setWasGuestAsset:](self, "setWasGuestAsset:", 0);
  }
  if (v38)
    -[PLManagedAsset updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary:](self, "updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary:", 1);
  -[PLManagedAsset _updateDestinationAssetCopyStateOnCMMAsset](self, "_updateDestinationAssetCopyStateOnCMMAsset");

}

- (void)_preserveRelationshipsOfDeletedGuestAsset:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  PLManagedAsset *v10;

  v4 = a3;
  objc_msgSend(v4, "entity");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "relationshipsByName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __73__PLManagedAsset_Syndication___preserveRelationshipsOfDeletedGuestAsset___block_invoke;
  v8[3] = &unk_1E3674260;
  v9 = v4;
  v10 = self;
  v7 = v4;
  objc_msgSend(v6, "enumerateKeysAndObjectsUsingBlock:", v8);

}

- (BOOL)shouldSyncToSPL
{
  return objc_msgSend((id)objc_opt_class(), "shouldSyncAssetToSPLWithSavedAssetType:syndicationState:", -[PLManagedAsset savedAssetType](self, "savedAssetType"), -[PLManagedAsset syndicationState](self, "syndicationState"));
}

- (void)updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary:(BOOL)a3
{
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  BOOL v9;

  v5 = (void *)objc_opt_class();
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "syndicationIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __91__PLManagedAsset_Syndication__updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary___block_invoke;
  v8[3] = &__block_descriptor_33_e24_v16__0__PLManagedAsset_8l;
  v9 = a3;
  objc_msgSend(v5, "performTransactionOnSyndicationLibraryWithSyndicationIdentifier:block:", v7, v8);

}

- (void)updateSyndicationStateWithSyndicationProcessingValue:(unsigned __int16)a3
{
  if ((a3 & 0x1000) != 0)
    -[PLManagedAsset updateSyndicationStateWithSavedToLibrary:](self, "updateSyndicationStateWithSavedToLibrary:", 1);
}

- (void)updateSyndicationStateWithSavedToLibrary:(BOOL)a3
{
  _BOOL4 v3;
  int v5;
  unsigned int v6;
  int v7;
  unsigned __int16 v8;
  int v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v3 = a3;
  v24 = *MEMORY[0x1E0C80C00];
  v5 = -[PLManagedAsset syndicationState](self, "syndicationState");
  v6 = v5 & 0xFFFFFFFD;
  if (v3)
    v7 = 2;
  else
    v7 = 0;
  v8 = v6 | v7;
  if ((v6 | v7) != v5)
  {
    v9 = v5;
    PLSyndicationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "syndicationIdentifier");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      PLManagedAssetSyndicationStateDescription(v9);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      PLManagedAssetSyndicationStateDescription(v8);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = 138544130;
      v17 = v11;
      v18 = 2114;
      v19 = v13;
      v20 = 2114;
      v21 = v14;
      v22 = 2114;
      v23 = v15;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_INFO, "Updating syndication state on asset %{public}@ / %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v16, 0x2Au);

    }
    -[PLManagedAsset setSyndicationState:](self, "setSyndicationState:", v8);
  }
}

- (void)_updateDestinationAssetCopyStateOnCMMAsset
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  id v25;
  void *v26;
  _QWORD v27[3];

  v27[2] = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "syndicationIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForMomentSharedAsset"), 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0CB3528];
  v26 = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v26, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset predicateForSyndicatedAssetIdentifiers:includeRejected:](PLManagedAsset, "predicateForSyndicatedAssetIdentifiers:includeRejected:", v8, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v9;
  v27[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v27, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "andPredicateWithSubpredicates:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "fetchRequestWithEntityName:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "setPredicate:", v11);
  objc_msgSend(v14, "setFetchLimit:", 1);
  objc_msgSend(v5, "managedObjectContext");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0;
  objc_msgSend(v15, "executeFetchRequest:error:", v14, &v21);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v21;

  if (v16)
  {
    objc_msgSend(v16, "firstObject");
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = v18;
    if (v18)
    {
      -[NSObject additionalAttributes](v18, "additionalAttributes");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "setDestinationAssetCopyState:", 2);

    }
  }
  else
  {
    PLSyndicationGetLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543618;
      v23 = v4;
      v24 = 2112;
      v25 = v17;
      _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Fetching syndication CMM asset for %{public}@ failed: %@", buf, 0x16u);
    }
  }

}

- (void)rejectSyndicatedAsset
{
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD v16[4];
  id v17;
  void *v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  NSStringFromSelector(a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _updateSyndicationState:enabled:logPrefix:](self, "_updateSyndicationState:enabled:logPrefix:", 8, 1, v3);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "syndicationIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  PLSyndicationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v20 = v7;
    v21 = 2114;
    v22 = v5;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: %{public}@ / %{public}@", buf, 0x16u);

  }
  -[PLManagedAsset _updateIMCoreSyndicationForIdentifier:hide:](self, "_updateIMCoreSyndicationForIdentifier:hide:", v5, 1);
  objc_msgSend(MEMORY[0x1E0D73280], "wellKnownPhotoLibraryURLForIdentifier:", 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLLibraryServicesManager libraryServicesManagerForLibraryURL:](PLLibraryServicesManager, "libraryServicesManagerForLibraryURL:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  PLSyndicationGetLog();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v20 = v5;
    v21 = 2114;
    v22 = v11;
    _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: calling SPL syndicationDeleteManager to delete %{public}@ for bundleID %{public}@", buf, 0x16u);

  }
  objc_msgSend(v9, "syndicationDeleteManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset importedByBundleIdentifier](self, "importedByBundleIdentifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v18, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __52__PLManagedAsset_Syndication__rejectSyndicatedAsset__block_invoke;
  v16[3] = &unk_1E3677AA0;
  v17 = v5;
  v15 = v5;
  objc_msgSend(v12, "processDeletesForBundleID:identifiers:completion:", v13, v14, v16);

}

- (void)restoreSyndicatedAsset
{
  void *v3;
  void *v4;
  id v5;

  NSStringFromSelector(a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _updateSyndicationState:enabled:logPrefix:](self, "_updateSyndicationState:enabled:logPrefix:", 8, 0, v3);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "syndicationIdentifier");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset _updateIMCoreSyndicationForIdentifier:hide:](self, "_updateIMCoreSyndicationForIdentifier:hide:", v5, 0);
}

- (void)unsaveSyndicatedAsset
{
  void *v3;
  void *v4;
  id v5;

  NSStringFromSelector(a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset _updateSyndicationState:enabled:logPrefix:](self, "_updateSyndicationState:enabled:logPrefix:", 10, 0, v3);

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "syndicationIdentifier");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset _updateIMCoreSyndicationForIdentifier:hide:](self, "_updateIMCoreSyndicationForIdentifier:hide:", v5, 0);
}

- (void)_updateSyndicationState:(unsigned __int16)a3 enabled:(BOOL)a4 logPrefix:(id)a5
{
  _BOOL4 v5;
  unsigned int v6;
  id v8;
  int v9;
  uint64_t v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  int v21;
  id v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v5 = a4;
  v6 = a3;
  v29 = *MEMORY[0x1E0C80C00];
  v8 = a5;
  v9 = -[PLManagedAsset syndicationState](self, "syndicationState");
  if (v5)
    v10 = v9 | v6;
  else
    v10 = v9 & ~v6;
  PLSyndicationGetLog();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
  if ((_DWORD)v10 == v9)
  {
    if (v12)
    {
      -[PLManagedAsset uuid](self, "uuid");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "syndicationIdentifier");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      PLManagedAssetSyndicationStateDescription(v9);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 138544130;
      v22 = v8;
      v23 = 2114;
      v24 = v13;
      v25 = 2114;
      v26 = v15;
      v27 = 2114;
      v28 = v16;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_INFO, "%{public}@ %{public}@ / %{public}@ syndicationState unchanged %{public}@", (uint8_t *)&v21, 0x2Au);

    }
  }
  else
  {
    if (v12)
    {
      -[PLManagedAsset uuid](self, "uuid");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "syndicationIdentifier");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      PLManagedAssetSyndicationStateDescription(v10);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 138544130;
      v22 = v8;
      v23 = 2114;
      v24 = v17;
      v25 = 2114;
      v26 = v19;
      v27 = 2114;
      v28 = v20;
      _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_INFO, "%{public}@ %{public}@ / %{public}@ set syndicationState to %{public}@", (uint8_t *)&v21, 0x2Au);

    }
    -[PLManagedAsset setSyndicationState:](self, "setSyndicationState:", v10);
  }

}

- (void)_updateIMCoreSyndicationForIdentifier:(id)a3 hide:(BOOL)a4
{
  id v5;
  NSObject *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  BOOL v10;

  v5 = a3;
  if (_updateIMCoreSyndicationForIdentifier_hide__onceToken != -1)
    dispatch_once(&_updateIMCoreSyndicationForIdentifier_hide__onceToken, &__block_literal_global_121_90393);
  v6 = _updateIMCoreSyndicationForIdentifier_hide__queue;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __74__PLManagedAsset_Syndication___updateIMCoreSyndicationForIdentifier_hide___block_invoke_2;
  v8[3] = &unk_1E36762F8;
  v10 = a4;
  v9 = v5;
  v7 = v5;
  dispatch_async(v6, v8);

}

- (void)setConversationAlbumWithConversationID:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  const char *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  unsigned __int16 v22;
  int v23;
  _BYTE v24[24];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    -[PLManagedAsset conversation](self, "conversation");
    v6 = objc_claimAutoreleasedReturnValue();
    -[NSObject importSessionID](v6, "importSessionID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqualToString:", v4);

    if ((v8 & 1) != 0)
      goto LABEL_26;
    objc_msgSend(v5, "userInfo");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("conversationObjectIDCache"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "userInfo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "setObject:forKeyedSubscript:", v10, CFSTR("conversationObjectIDCache"));

    }
    objc_msgSend(v10, "objectForKeyedSubscript:", v4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12
      && (objc_msgSend(v5, "objectRegisteredForID:", v12), (v13 = (void *)objc_claimAutoreleasedReturnValue()) != 0)
      || (-[PLManagedObject photoLibrary](self, "photoLibrary"),
          v14 = (void *)objc_claimAutoreleasedReturnValue(),
          +[PLConversation albumWithConversationID:inLibrary:](PLConversation, "albumWithConversationID:inLibrary:", v4, v14), v13 = (void *)objc_claimAutoreleasedReturnValue(), v14, v13))
    {
      PLSyndicationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v24 = 138412546;
        *(_QWORD *)&v24[4] = v4;
        *(_WORD *)&v24[12] = 2112;
        *(_QWORD *)&v24[14] = v16;
        v17 = "Found conversationAlbum (%@) for asset uuid %@";
LABEL_14:
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_INFO, v17, v24, 0x16u);

      }
    }
    else
    {
      +[PLConversation insertNewConversationAlbumWithConversationID:inManagedObjectContext:](PLConversation, "insertNewConversationAlbumWithConversationID:inManagedObjectContext:", v4, v5);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      PLSyndicationGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v24 = 138412546;
        *(_QWORD *)&v24[4] = v4;
        *(_WORD *)&v24[12] = 2112;
        *(_QWORD *)&v24[14] = v16;
        v17 = "Created conversationAlbum (%@) for asset uuid %@";
        goto LABEL_14;
      }
    }

    if (v6)
    {
      PLSyndicationGetLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v24 = 138412802;
        *(_QWORD *)&v24[4] = v6;
        *(_WORD *)&v24[12] = 2112;
        *(_QWORD *)&v24[14] = v4;
        *(_WORD *)&v24[22] = 2112;
        v25 = v20;
        _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_INFO, "Changed conversationAlbum (%@) to (%@) for asset uuid %@", v24, 0x20u);

      }
    }
    -[PLManagedAsset setConversation:](self, "setConversation:", v13, *(_OWORD *)v24, *(_QWORD *)&v24[16]);
    objc_msgSend(v13, "updateConversationDatesFromAddedAsset:", self);
    objc_msgSend(v13, "objectID");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setObject:forKeyedSubscript:", v21, v4);

    v22 = -[PLManagedAsset syndicationState](self, "syndicationState");
    v23 = objc_msgSend(v13, "syndicate");
    if (v23 == 1)
    {
      v22 &= ~4u;
    }
    else if (!v23)
    {
      v22 |= 4u;
    }
    if (-[PLManagedAsset syndicationState](self, "syndicationState") != v22)
      -[PLManagedAsset setSyndicationState:](self, "setSyndicationState:", v22);

    goto LABEL_26;
  }
  PLSyndicationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)v24 = 138412290;
    *(_QWORD *)&v24[4] = v18;
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_ERROR, "Unable to create conversationAlbum with nil conversationID for asset uuid %@", v24, 0xCu);

  }
LABEL_26:

}

- (BOOL)shouldPurgeSyndicationResourcesWithChangedValues:(id)a3
{
  void *v4;

  objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("faceAdjustmentVersion"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4 && -[PLManagedAsset isReadyForPurgeSyndicationResources](self, "isReadyForPurgeSyndicationResources");
}

- (BOOL)isReadyForPurgeSyndicationResources
{
  void *v3;
  void *v4;
  BOOL v5;

  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "libraryServicesManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "wellKnownPhotoLibraryIdentifier") == 3
    && -[PLManagedAsset faceDetectionComplete](self, "faceDetectionComplete")
    && -[PLManagedAsset ocrDetectionComplete](self, "ocrDetectionComplete")
    && -[PLManagedAsset fullAnalysisComplete](self, "fullAnalysisComplete");

  return v5;
}

- (BOOL)ocrDetectionComplete
{
  void *v2;
  void *v3;
  BOOL v4;

  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "characterRecognitionAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 != 0;

  return v4;
}

- (BOOL)fullAnalysisComplete
{
  void *v2;
  uint64_t v3;
  void *v4;

  -[PLManagedAsset mediaAnalysisAttributes](self, "mediaAnalysisAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "mediaAnalysisVersion");
  +[PLMediaAnalysisServiceRequestAdapter currentMediaAnalysisVersion](PLMediaAnalysisServiceRequestAdapter, "currentMediaAnalysisVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = v3 == (int)objc_msgSend(v4, "intValue");

  return v3;
}

- (void)purgeSyndicationResourcesAfterMediaAnalysisProcessing
{
  -[PLManagedAsset purgeSyndicationResourcesOriginalsOnly:](self, "purgeSyndicationResourcesOriginalsOnly:", 1);
}

- (void)purgeSyndicationResourcesOriginalsOnly:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  _BOOL4 v17;
  id v18;
  NSObject *v19;
  void *v20;
  int v21;
  id v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  const char *v26;
  NSObject *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  uint64_t v31;
  id v32;
  _BOOL4 v33;
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  id v43;
  _BYTE v44[128];
  uint64_t v45;

  v3 = a3;
  v45 = *MEMORY[0x1E0C80C00];
  v32 = objc_alloc_init(MEMORY[0x1E0CB3620]);
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v37;
    v33 = v3;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v37 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * v9);
        if (objc_msgSend(v10, "dataStoreClassID") == 3)
        {
          if ((objc_msgSend(v10, "isLocallyAvailable") & 1) != 0)
          {
            if (v3 && (objc_msgSend(v10, "isOriginalResource") & 1) == 0)
            {
              PLSyndicationGetLog();
              v15 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
              {
                -[PLManagedAsset uuid](self, "uuid");
                v23 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v41 = v23;
                v42 = 2112;
                v43 = v10;
                v24 = v15;
                v25 = OS_LOG_TYPE_INFO;
                v26 = "Skipping purge of syndication asset %{public}@ resource that is not an original %@";
                goto LABEL_24;
              }
            }
            else
            {
              -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
              v11 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v11, "importedByBundleIdentifier");
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              v13 = objc_msgSend(v12, "isEqualToString:", CFSTR("com.apple.MobileSMS"));

              if (!v13)
                goto LABEL_26;
              objc_msgSend(v10, "fileURL");
              v14 = objc_claimAutoreleasedReturnValue();
              v15 = v14;
              if (v14)
              {
                -[NSObject path](v14, "path");
                v16 = (void *)objc_claimAutoreleasedReturnValue();
                v35 = 0;
                v17 = +[PLCacheDeleteSupport isPurgeableFile:outIsPhotoType:outUrgencyLevel:error:](PLCacheDeleteSupport, "isPurgeableFile:outIsPhotoType:outUrgencyLevel:error:", v16, 0, 0, &v35);
                v18 = v35;

                if (v17)
                {
                  PLSyndicationGetLog();
                  v19 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
                  {
                    -[PLManagedAsset uuid](self, "uuid");
                    v20 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138543618;
                    v41 = v20;
                    v42 = 2112;
                    v43 = v10;
                    _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_INFO, "Purge syndication asset %{public}@ resource %@", buf, 0x16u);

                  }
                  v34 = 0;
                  v21 = objc_msgSend(v32, "removeItemAtURL:error:", v15, &v34);
                  v22 = v34;
                  if (v21 || PLIsErrorFileNotFound())
                  {
                    objc_msgSend(v10, "markAsNotLocallyAvailableAfterPurge");
                  }
                  else
                  {
                    PLSyndicationGetLog();
                    v29 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
                    {
                      objc_msgSend(MEMORY[0x1E0D73208], "redactedDescriptionForFileURL:", v15);
                      v30 = (void *)objc_claimAutoreleasedReturnValue();
                      *(_DWORD *)buf = 138543618;
                      v41 = v30;
                      v42 = 2112;
                      v43 = v22;
                      _os_log_impl(&dword_199541000, v29, OS_LOG_TYPE_ERROR, "purgeSyndicationResources: removeItemAtURL:%{public}@ failed: %@", buf, 0x16u);

                    }
                  }
                  v3 = v33;

                }
                else if (PLIsErrorFileNotFound())
                {
                  objc_msgSend(v10, "markAsNotLocallyAvailableAfterPurge");
                  v3 = v33;
                }
                else
                {
                  PLSyndicationGetLog();
                  v27 = objc_claimAutoreleasedReturnValue();
                  v3 = v33;
                  if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
                  {
                    objc_msgSend(MEMORY[0x1E0D73208], "redactedDescriptionForFileURL:", v15);
                    v28 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138543618;
                    v41 = v28;
                    v42 = 2112;
                    v43 = v18;
                    _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_INFO, "File is not purgeable at %{public}@ error %@", buf, 0x16u);

                  }
                }

              }
            }
          }
          else
          {
            PLSyndicationGetLog();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              -[PLManagedAsset uuid](self, "uuid");
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543618;
              v41 = v23;
              v42 = 2112;
              v43 = v10;
              v24 = v15;
              v25 = OS_LOG_TYPE_INFO;
              v26 = "Skipping purge of syndication asset %{public}@ resource that is already not locally available %@";
              goto LABEL_24;
            }
          }
        }
        else
        {
          PLSyndicationGetLog();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            -[PLManagedAsset uuid](self, "uuid");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v41 = v23;
            v42 = 2112;
            v43 = v10;
            v24 = v15;
            v25 = OS_LOG_TYPE_ERROR;
            v26 = "Skipping non-syndication resource found during asset %{public}@ purgeSyndicationResources %@";
LABEL_24:
            _os_log_impl(&dword_199541000, v24, v25, v26, buf, 0x16u);

          }
        }

LABEL_26:
        ++v9;
      }
      while (v7 != v9);
      v31 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
      v7 = v31;
    }
    while (v31);
  }

}

- (void)setWasGuestAsset:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  int v6;
  int v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  int v11;
  void *v12;
  uint64_t v13;

  v3 = a3;
  v13 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "syndicationHistory");
  if (v3)
    v7 = 1;
  else
    v7 = 2;
  if (v7 != v6)
  {
    if (v6 == 1)
    {
      PLSyndicationGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        -[PLManagedAsset uuid](self, "uuid");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = 138543362;
        v12 = v9;
        v10 = "GuestAssetSync: leaving asset %{public}@ marked as wasGuestAsset";
LABEL_13:
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_INFO, v10, (uint8_t *)&v11, 0xCu);

      }
    }
    else
    {
      objc_msgSend(v5, "setSyndicationHistory:", (unsigned __int16)v7);
      if (v7 == 2)
      {
        PLSyndicationGetLog();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = 138543362;
          v12 = v9;
          v10 = "GuestAssetSync: marked asset %{public}@ as wasNotGuestAsset";
          goto LABEL_13;
        }
      }
      else
      {
        PLSyndicationGetLog();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = 138543362;
          v12 = v9;
          v10 = "GuestAssetSync: marked asset %{public}@ as wasGuestAsset";
          goto LABEL_13;
        }
      }
    }

  }
}

void __74__PLManagedAsset_Syndication___updateIMCoreSyndicationForIdentifier_hide___block_invoke_2(uint64_t a1)
{
  int v2;
  NSObject *v3;
  _BOOL4 v4;
  uint64_t v5;
  NSObject *v6;
  void (*IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc);
  void *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint8_t buf[16];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 *)(a1 + 40);
  PLSyndicationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (!v2)
  {
    if (v4)
    {
      v11 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v11;
      _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_INFO, "calling IMCore to un-hide %{public}@ from syndication", buf, 0xCu);
    }

    if (!IMCoreLibraryCore_frameworkLibrary)
    {
      *(_OWORD *)buf = xmmword_1E36742C0;
      v13 = 0;
      IMCoreLibraryCore_frameworkLibrary = _sl_dlopen();
    }
    if (IMCoreLibraryCore_frameworkLibrary && getIMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc())
    {
      v6 = *(id *)(a1 + 32);
      IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc = (void (*))getIMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc();
      if (!IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void softlink_IMSPIUnhideSyndicationForAttachmentGUID(NSString *__strong)");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("PLManagedAsset+Syndication.m"), 73, CFSTR("%s"), dlerror());
LABEL_25:

        __break(1u);
      }
      goto LABEL_19;
    }
    PLSyndicationGetLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      goto LABEL_23;
    *(_WORD *)buf = 0;
    v10 = "IMCore SPI for un-hiding attachment is not available";
LABEL_22:
    _os_log_impl(&dword_199541000, v6, OS_LOG_TYPE_INFO, v10, buf, 2u);
    goto LABEL_23;
  }
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    *(_QWORD *)&buf[4] = v5;
    _os_log_impl(&dword_199541000, v3, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: calling IMCore to remove %{public}@ from syndication", buf, 0xCu);
  }

  if (!IMCoreLibraryCore_frameworkLibrary)
  {
    *(_OWORD *)buf = xmmword_1E36742C0;
    v13 = 0;
    IMCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (IMCoreLibraryCore_frameworkLibrary && getIMSPIRemoveAttachmentGUIDFromSyndicationSymbolLoc())
  {
    v6 = *(id *)(a1 + 32);
    IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc = (void (*))getIMSPIRemoveAttachmentGUIDFromSyndicationSymbolLoc();
    if (!IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void softlink_IMSPIRemoveAttachmentGUIDFromSyndication(NSString *__strong)");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("PLManagedAsset+Syndication.m"), 72, CFSTR("%s"), dlerror());
      goto LABEL_25;
    }
LABEL_19:
    IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc(v6);
    goto LABEL_23;
  }
  PLSyndicationGetLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    v10 = "IMCore SPI for removing attachment is not available";
    goto LABEL_22;
  }
LABEL_23:

}

void __74__PLManagedAsset_Syndication___updateIMCoreSyndicationForIdentifier_hide___block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("updateIMCoreSyndicationForIdentifier", 0);
  v1 = (void *)_updateIMCoreSyndicationForIdentifier_hide__queue;
  _updateIMCoreSyndicationForIdentifier_hide__queue = (uint64_t)v0;

}

void __52__PLManagedAsset_Syndication__rejectSyndicatedAsset__block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  PLSyndicationGetLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138543362;
    v5 = v3;
    _os_log_impl(&dword_199541000, v2, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: done deleting %{public}@ from SPL", (uint8_t *)&v4, 0xCu);
  }

}

uint64_t __91__PLManagedAsset_Syndication__updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "updateSyndicationStateWithSavedToLibrary:", *(unsigned __int8 *)(a1 + 32));
}

void __73__PLManagedAsset_Syndication___preserveRelationshipsOfDeletedGuestAsset___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _BOOL4 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  void *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if ((objc_msgSend(v5, "hasPrefix:", CFSTR("memoriesBeing")) & 1) != 0
    || (objc_msgSend(v5, "hasPrefix:", CFSTR("suggestionsBeing")) & 1) != 0
    || (objc_msgSend(v5, "hasPrefix:", CFSTR("dayGroupHighlightBeing")) & 1) != 0
    || (objc_msgSend(v5, "hasPrefix:", CFSTR("highlightBeing")) & 1) != 0
    || (objc_msgSend(v5, "hasPrefix:", CFSTR("monthHighlightBeing")) & 1) != 0
    || (objc_msgSend(v5, "hasPrefix:", CFSTR("yearHighlightBeing")) & 1) != 0
    || objc_msgSend(v5, "isEqualToString:", CFSTR("moment")))
  {
    v7 = objc_msgSend(v6, "isToMany");
    v8 = *(void **)(a1 + 32);
    objc_msgSend(v6, "name");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "valueForKey:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      if (objc_msgSend(v10, "count"))
      {
        v11 = objc_msgSend(v10, "copy");
        PLSyndicationGetLog();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v6, "name");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 32), "uuid");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 40), "uuid");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = 138543874;
          v26 = v13;
          v27 = 2114;
          v28 = v14;
          v29 = 2114;
          v30 = v15;
          _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_INFO, "Preserve relationships: copying %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v25, 0x20u);

        }
        v16 = *(void **)(a1 + 40);
        objc_msgSend(v6, "name");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "setValue:forKey:", v11, v17);

        goto LABEL_21;
      }
      PLSyndicationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        goto LABEL_20;
    }
    else
    {
      PLSyndicationGetLog();
      v11 = objc_claimAutoreleasedReturnValue();
      v18 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
      if (v10)
      {
        if (v18)
        {
          objc_msgSend(v6, "name");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 32), "uuid");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 40), "uuid");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = 138543874;
          v26 = v19;
          v27 = 2114;
          v28 = v20;
          v29 = 2114;
          v30 = v21;
          _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_INFO, "Preserve relationships: setting %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v25, 0x20u);

        }
        v22 = *(void **)(a1 + 40);
        objc_msgSend(v6, "name");
        v11 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "setValue:forKey:", v10, v11);
        goto LABEL_21;
      }
      if (v18)
      {
LABEL_20:
        objc_msgSend(*(id *)(a1 + 32), "uuid");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "name");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = 138543618;
        v26 = v23;
        v27 = 2114;
        v28 = v24;
        _os_log_impl(&dword_199541000, v11, OS_LOG_TYPE_INFO, "Preserve relationships: guest asset %{public}@ has no %{public}@", (uint8_t *)&v25, 0x16u);

      }
    }
LABEL_21:

  }
}

BOOL __73__PLManagedAsset_Syndication__syndicationOriginalVideoComplementResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "resourceType") == 3
    && !objc_msgSend(v2, "version")
    && (objc_msgSend(v2, "recipeID") & 1) == 0;

  return v3;
}

BOOL __58__PLManagedAsset_Syndication__syndicationOriginalResource__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  id v5;
  _BOOL8 v6;

  v3 = a2;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = v3;
  v6 = objc_msgSend(v5, "resourceType") == v4
    && !objc_msgSend(v5, "version")
    && (objc_msgSend(v5, "recipeID") & 1) == 0;

  return v6;
}

BOOL __58__PLManagedAsset_Syndication__syndicationOriginalResource__block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "dataStoreSubtype") == 1;
}

+ (id)_insertSyndicationAssetIntoPhotoLibrary:(id)a3 uuid:(id)a4 syndicationIdentifier:(id)a5 bundleID:(id)a6 addedDate:(id)a7
{
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v22;

  v11 = (void *)MEMORY[0x1E0D73310];
  v12 = a7;
  v13 = a6;
  v14 = a5;
  v15 = a4;
  v16 = a3;
  LOWORD(v22) = 1;
  +[PLManagedAsset insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:](PLManagedAsset, "insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", v16, 0, 0, objc_msgSend(v11, "savedAssetTypeForInsertIntoSyndicationLibrary"), 3, v15, 0, 0, 0, v22);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v17, "additionalAttributes");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setSyndicationIdentifier:", v14);

  objc_msgSend(v17, "setBundleScope:", 3);
  objc_msgSend(v17, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E0D73310], "savedAssetTypeForInsertIntoSyndicationLibrary"));
  objc_msgSend(v17, "setImportedBy:", 12);
  objc_msgSend(v17, "additionalAttributes");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setImportedByBundleIdentifier:", v13);

  objc_msgSend(v17, "setAddedDate:", v12);
  objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setDateCreated:", v20);

  return v17;
}

+ (id)_syndicationAssetForSearchableItem:(id)a3 inLibrary:(id)a4 createIfNeeded:(BOOL)a5 didCreate:(BOOL *)a6 error:(id *)a7
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  _BOOL4 v33;
  void *v35;
  id v36;
  void *v37;
  _QWORD v38[3];

  v33 = a5;
  v38[2] = *MEMORY[0x1E0C80C00];
  v9 = a4;
  v10 = a3;
  objc_msgSend(v10, "uniqueIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "attributeSet");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "bundleID");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "attributeSet");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "contentCreationDate");
  v35 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = (void *)MEMORY[0x1E0C97B48];
  +[PLManagedAsset entityName](PLManagedAsset, "entityName");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "fetchRequestWithEntityName:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0CB3528];
  v37 = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v37, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "predicateForSyndicatedAssetIdentifiers:includeRejected:", v19, 1);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v38[0] = v20;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("additionalAttributes.importedByBundleIdentifier"), v13);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v38[1] = v21;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v38, 2);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "andPredicateWithSubpredicates:", v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setPredicate:", v23);

  objc_msgSend(v9, "managedObjectContext");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = 0;
  objc_msgSend(v24, "executeFetchRequest:error:", v17, &v36);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = v36;

  objc_msgSend(v25, "firstObject");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v27 && v33)
  {
    objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "UUIDString");
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(a1, "_insertSyndicationAssetIntoPhotoLibrary:uuid:syndicationIdentifier:bundleID:addedDate:", v9, v29, v11, v13, v35);
    v30 = objc_claimAutoreleasedReturnValue();
    v27 = (void *)v30;
    if (a6 && v30)
      *a6 = 1;

  }
  if (a7)
    *a7 = objc_retainAutorelease(v26);

  return v27;
}

+ (PLManagedAsset)assetWithSyndicationIdentifier:(id)a3 inLibrary:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  id v26;
  uint8_t buf[4];
  id v28;
  id v29;
  _QWORD v30[3];

  v30[2] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if (v6)
  {
    v8 = (void *)MEMORY[0x19AEC1554]();
    v9 = (void *)MEMORY[0x1E0C97B48];
    +[PLManagedAsset entityName](PLManagedAsset, "entityName");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "fetchRequestWithEntityName:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = (void *)MEMORY[0x1E0CB3528];
    v29 = v6;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v29, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "predicateForSyndicatedAssetIdentifiers:includeRejected:", v13, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v30[0] = v14;
    objc_msgSend(MEMORY[0x1E0D73310], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForSyndicationIdentifierFetchExclusions"), 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v30[1] = v15;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 2);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "andPredicateWithSubpredicates:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "setPredicate:", v17);
    objc_msgSend(v7, "managedObjectContext");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = 0;
    objc_msgSend(v18, "executeFetchRequest:error:", v11, &v26);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v26;

    v21 = objc_msgSend(v19, "count");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v19, "objectAtIndex:", 0);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if (v22 != 1)
      {
        PLSyndicationGetLog();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138543362;
          v28 = v6;
          _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "Found more than one asset with syndication identifier %{public}@", buf, 0xCu);
        }

      }
    }
    else
    {
      v23 = 0;
    }

    objc_autoreleasePoolPop(v8);
  }
  else
  {
    v23 = 0;
  }

  return (PLManagedAsset *)v23;
}

+ (id)filterPredicateToIncludeOnlyReceivedSyndicatedAssets
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K & %i) != %i"), CFSTR("syndicationState"), 1, 1);
}

+ (id)filterPredicateToExcludeNoSyndicationAssets
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K < %d"), CFSTR("syndicationState"), 4);
}

+ (id)predicateForSyndicatedAssetIdentifiers:(id)a3 includeRejected:(BOOL)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD v17[2];
  _QWORD v18[3];

  v18[2] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("additionalAttributes.syndicationIdentifier"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("additionalAttributes.syndicationIdentifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = v8;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("additionalAttributes.syndicationIdentifier"), v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v18[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v18, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "andPredicateWithSubpredicates:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!a4)
  {
LABEL_3:
    v12 = (void *)MEMORY[0x1E0CB3528];
    v17[0] = v11;
    objc_msgSend(a1, "filterPredicateToExcludeNoSyndicationAssets");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17[1] = v13;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v17, 2);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "andPredicateWithSubpredicates:", v14);
    v15 = objc_claimAutoreleasedReturnValue();

    v11 = (void *)v15;
  }
LABEL_4:

  return v11;
}

+ (id)predicateForSyndicatedAssetIdentifiersSuffix:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != nil"), CFSTR("additionalAttributes.syndicationIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", v5);

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v7 = v3;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v17;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v17 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K ENDSWITH %@"), CFSTR("additionalAttributes.syndicationIdentifier"), *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v11), (_QWORD)v16);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v12);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v9);
  }

  objc_msgSend(MEMORY[0x1E0CB3528], "orPredicateWithSubpredicates:", v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", v13);
  objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v4);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

+ (id)createOrUpdateObjectFromSearchableItem:(id)a3 library:(id)a4 fullIndexSyncStartDate:(id)a5 createIfNeeded:(BOOL)a6 didCreate:(BOOL *)a7 isSyndicatable:(BOOL *)a8 error:(id *)a9
{
  _BOOL8 v9;
  id *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  int IsHidden;
  int v19;
  NSObject *v20;
  void *v21;
  const __CFString *v22;
  uint64_t v23;
  id v24;
  __CFString *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  __CFString *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  int v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  void *v38;
  __CFString *v39;
  void *v40;
  void *v41;
  void *v42;
  NSObject *v43;
  id v44;
  id v45;
  id *v46;
  void *v47;
  const char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint32_t v51;
  void *v52;
  void *v53;
  int v54;
  NSObject *v55;
  void *v56;
  id v57;
  id v58;
  __CFString *v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  __CFString *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  __CFString *v76;
  id v79;
  __CFString *v80;
  id v81;
  id v82;
  BOOL v83;
  uint8_t buf[4];
  void *v85;
  __int16 v86;
  const __CFString *v87;
  __int16 v88;
  void *v89;
  __int16 v90;
  void *v91;
  uint64_t v92;

  v9 = a6;
  v12 = a9;
  v92 = *MEMORY[0x1E0C80C00];
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v83 = 0;
  objc_msgSend(v13, "attributeSet");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "contentURL");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  IsHidden = PLSearchableItemMessagesIsHidden(v13);
  v19 = PLSearchableItemMessagesIsSyndicatableMedia(v13) & (IsHidden ^ 1);
  PLSyndicationGetLog();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v13, "uniqueIdentifier");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = CFSTR("not syndicatable");
    *(_DWORD *)buf = 138543874;
    v85 = v21;
    if (v19)
      v22 = CFSTR("syndicatable");
    v86 = 2114;
    v87 = v22;
    v88 = 2112;
    v89 = v17;
    _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "[sync] considering spotlight item with ID: %{public}@ (%{public}@) for syndication asset with content URL: %@", buf, 0x20u);

  }
  if (v19)
  {
    v81 = 0;
    v82 = 0;
    v23 = PLAssetTypeForSearchableItem(v13, &v82, &v81);
    v24 = v82;
    v25 = (__CFString *)v81;
    if (v23 < 2)
    {
      v80 = v25;
      +[PLManagedAsset _syndicationAssetForSearchableItem:inLibrary:createIfNeeded:didCreate:error:](PLManagedAsset, "_syndicationAssetForSearchableItem:inLibrary:createIfNeeded:didCreate:error:", v13, v14, v9, &v83, &v80);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v76 = v80;

      if (!v83)
      {
        objc_msgSend(v26, "_fixDistantPastContentCreationDateWithItem:", v13);
        objc_msgSend(v13, "attributeSet");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v52, "photosDonationState");
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v53, "integerValue"))
        {
          v54 = objc_msgSend(v26, "isEligibleForSearchIndexing");

          if (!v54)
          {
LABEL_44:
            objc_msgSend(v26, "_setSyndicationStateFromContentsOfSearchableItem:", v13);
            objc_msgSend(v26, "_updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:", v15);
            v25 = v76;
            v12 = a9;
            goto LABEL_45;
          }
          PLSyndicationGetLog();
          v55 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v13, "uniqueIdentifier");
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "uuid");
            v57 = v24;
            v58 = v15;
            v59 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v85 = v56;
            v86 = 2114;
            v87 = v59;
            _os_log_impl(&dword_199541000, v55, OS_LOG_TYPE_DEFAULT, "[sync] Spotlight record (id: %{public}@) matches existing asset in library but photos donation is missing, scheduling asset (%{public}@) for indexing", buf, 0x16u);

            v15 = v58;
            v24 = v57;

          }
          objc_msgSend(v26, "uuid");
          v52 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "managedObjectContext");
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          v60 = +[PLBackgroundJobWorkItem insertSearchIndexWorkItemIfNeededWithIdentifier:flags:managedObjectContext:](PLBackgroundJobWorkItem, "insertSearchIndexWorkItemIfNeededWithIdentifier:flags:managedObjectContext:", v52, 14, v53);
        }
LABEL_43:

        goto LABEL_44;
      }
      v73 = v24;
      v75 = v15;
      PLSyndicationGetLog();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v26, "uuid");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "additionalAttributes");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "syndicationIdentifier");
        v30 = (__CFString *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v85 = v28;
        v86 = 2114;
        v87 = v30;
        _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_DEFAULT, "[sync] created asset with uuid: %{public}@, syndication ID: %{public}@", buf, 0x16u);

      }
      v71 = v17;

      PLSearchableItemMessagesChatUniqueIdentifier(v13);
      v31 = objc_claimAutoreleasedReturnValue();
      if (v31)
        objc_msgSend(v26, "setConversationAlbumWithConversationID:", v31);
      v72 = (void *)v31;
      PLSearchableItemMessagesLivePhotoVideoURL(v13);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "bundleID");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend(v33, "isEqualToString:", CFSTR("com.apple.MobileSMS"));

      v35 = 0;
      v36 = 0;
      v74 = v32;
      if (v34)
      {
        v15 = v75;
        if (!v32)
        {
LABEL_42:
          v17 = v71;
          objc_msgSend(v71, "lastPathComponent");
          v65 = (void *)objc_claimAutoreleasedReturnValue();
          v66 = v36;
          v24 = v73;
          objc_msgSend(v26, "_populateSyndicationAssetWithAssetType:subtype:contentType:videoComplementContentType:originalFilename:", v23, v66, v73, v35, v65);

          v52 = v72;
          v53 = v74;
          goto LABEL_43;
        }
        if ((_DWORD)v23)
        {
          PLSyndicationGetLog();
          v37 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v26, "uuid");
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "bundleID");
            v39 = (__CFString *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "additionalAttributes");
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v40, "syndicationIdentifier");
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543874;
            v85 = v38;
            v86 = 2114;
            v87 = v39;
            v88 = 2114;
            v89 = v41;
            _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_ERROR, "[sync] ignoring video complement key for non-image asset: %{public}@, bundle ID: %{public}@, syndication ID: %{public}@", buf, 0x20u);

            v15 = v75;
          }
          v35 = 0;
LABEL_39:

          v36 = 0;
          goto LABEL_42;
        }
        v61 = (void *)MEMORY[0x1E0CEC3F8];
        objc_msgSend(v32, "pathExtension");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v61, "typeWithFilenameExtension:conformingToType:", v62, *MEMORY[0x1E0CEC568]);
        v35 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v35 || objc_msgSend(v35, "isDynamic"))
        {
          PLSyndicationGetLog();
          v37 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v74, "pathExtension");
            v70 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "uuid");
            v68 = (__CFString *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "bundleID");
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "additionalAttributes");
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v69, "syndicationIdentifier");
            v64 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138544130;
            v85 = v70;
            v86 = 2114;
            v87 = v68;
            v88 = 2114;
            v89 = v63;
            v90 = 2114;
            v91 = v64;
            _os_log_impl(&dword_199541000, v37, OS_LOG_TYPE_ERROR, "[sync] unexpected video complement uti for file extension: %{public}@, storing as image only, asset: %{public}@, bundle ID: %{public}@, syndication ID: %{public}@", buf, 0x2Au);

          }
          v15 = v75;
          goto LABEL_39;
        }
        v36 = 2;
      }
      v15 = v75;
      goto LABEL_42;
    }
    if ((unsigned __int16)v23 == 2)
    {
      PLSyndicationGetLog();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend(v13, "uniqueIdentifier");
        v44 = v24;
        v45 = v15;
        v46 = a9;
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v85 = v47;
        v48 = "[sync] skipping audio spotlight item with ID: %{public}@";
        v49 = v43;
        v50 = OS_LOG_TYPE_DEBUG;
        v51 = 12;
LABEL_27:
        _os_log_impl(&dword_199541000, v49, v50, v48, buf, v51);

        v12 = v46;
        v15 = v45;
        v24 = v44;
      }
    }
    else
    {
      PLSyndicationGetLog();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v13, "uniqueIdentifier");
        v44 = v24;
        v45 = v15;
        v46 = a9;
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v85 = v47;
        v86 = 2112;
        v87 = v25;
        v48 = "[sync] unable to sync spotlight item (unknown asset type) with ID: %{public}@, error: %@";
        v49 = v43;
        v50 = OS_LOG_TYPE_ERROR;
        v51 = 22;
        goto LABEL_27;
      }
    }

    v26 = 0;
LABEL_45:

    goto LABEL_46;
  }
  v79 = 0;
  +[PLManagedAsset _syndicationAssetForSearchableItem:inLibrary:createIfNeeded:didCreate:error:](PLManagedAsset, "_syndicationAssetForSearchableItem:inLibrary:createIfNeeded:didCreate:error:", v13, v14, 0, 0, &v79);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = (__CFString *)v79;
  if (v26)
  {
    if (IsHidden)
    {
      objc_msgSend(v14, "managedObjectContext");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v42, "deleteObject:", v26);

      v12 = a9;
    }
    else
    {
      objc_msgSend(v26, "_setSyndicationStateFromContentsOfSearchableItem:", v13);
      objc_msgSend(v26, "_updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:", v15);
    }
  }
LABEL_46:
  if (a7)
    *a7 = v83;
  if (a8)
    *a8 = v19;
  if (v12)
    *v12 = objc_retainAutorelease(v25);

  return v26;
}

+ (BOOL)shouldSyncAssetToSPLWithSavedAssetType:(signed __int16)a3 syndicationState:(unsigned __int16)a4
{
  int v4;
  BOOL result;

  v4 = a4;
  objc_msgSend(MEMORY[0x1E0D73310], "maskForGuestAsset");
  result = PLValidatedSavedAssetTypeApplies();
  if (v4)
    return 0;
  return result;
}

+ (id)predicateForShouldSyncToSPL
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0D73310], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E0D73310], "maskForGuestAsset"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d"), CFSTR("syndicationState"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "andPredicateWithSubpredicates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (void)performTransactionOnSyndicationLibraryWithSyndicationIdentifier:(id)a3 block:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  _QWORD v11[4];
  NSObject *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint8_t buf[4];
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  v16 = 0;
  v8 = (void *)PLCreateShortLivedWellKnownPhotoLibrary(3, (uint64_t)"+[PLManagedAsset(Syndication) performTransactionOnSyndicationLibraryWithSyndicationIdentifier:block:]", &v16);
  v9 = v16;
  if (v8)
  {
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __101__PLManagedAsset_Syndication__performTransactionOnSyndicationLibraryWithSyndicationIdentifier_block___block_invoke;
    v11[3] = &unk_1E3674E68;
    v15 = a1;
    v12 = v6;
    v13 = v8;
    v14 = v7;
    objc_msgSend(v13, "performTransaction:", v11);

    v10 = v12;
  }
  else
  {
    PLSyndicationGetLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v9;
      _os_log_impl(&dword_199541000, v10, OS_LOG_TYPE_ERROR, "matchingAssetFromSyndicationLibrary: Unable to open syndication photo library: %@", buf, 0xCu);
    }
  }

}

void __101__PLManagedAsset_Syndication__performTransactionOnSyndicationLibraryWithSyndicationIdentifier_block___block_invoke(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 56), "assetWithSyndicationIdentifier:inLibrary:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  PLSyndicationGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v2, "uuid");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = *(_QWORD *)(a1 + 32);
      v8 = 138543618;
      v9 = v5;
      v10 = 2114;
      v11 = v6;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_INFO, "found matching asset %{public}@ in syndication library for %{public}@", (uint8_t *)&v8, 0x16u);

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      v7 = *(void **)(a1 + 32);
      v8 = 138543362;
      v9 = v7;
      _os_log_impl(&dword_199541000, v4, OS_LOG_TYPE_ERROR, "unable to find matching asset in syndication library for %{public}@", (uint8_t *)&v8, 0xCu);
    }

  }
}

- (id)resourceForCPLType:(unint64_t)a3 version:(unsigned int)a4
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
        if (objc_msgSend(v11, "cplType") == a3 && objc_msgSend(v11, "version") == a4)
        {
          v12 = v11;
          goto LABEL_12;
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v8)
        continue;
      break;
    }
  }
  v12 = 0;
LABEL_12:

  return v12;
}

- (id)masterResourceForCPLType:(unint64_t)a3
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v9, "cplType") == a3 && objc_msgSend(v9, "isCPLMasterResource"))
        {
          v10 = v9;
          goto LABEL_12;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v6)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_12:

  return v10;
}

- (id)assetResourceForCPLType:(unint64_t)a3
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v9, "cplType") == a3 && objc_msgSend(v9, "isCPLAssetResource"))
        {
          v10 = v9;
          goto LABEL_12;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v6)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_12:

  return v10;
}

- (id)allAssetCPLResources
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v9, "isCPLAssetResource"))
          objc_msgSend(v3, "addObject:", v9);
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

  return v3;
}

- (id)allMasterCPLResources
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v9, "isCPLMasterResource"))
          objc_msgSend(v3, "addObject:", v9);
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

  return v3;
}

- (id)allCPLResourcesForPruning
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (((objc_msgSend(v9, "isCPLAssetResource") & 1) != 0 || objc_msgSend(v9, "isCPLMasterResource"))
          && ((objc_msgSend(v9, "isLocallyAvailable") & 1) != 0 || objc_msgSend(v9, "cplType") == 5))
        {
          objc_msgSend(v3, "addObject:", v9);
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  objc_msgSend(v3, "allObjects");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

- (BOOL)hasAdjustedCPLThumbResource
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v2);
        v6 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * i);
        if (objc_msgSend(v6, "cplType") == 5 && (objc_msgSend(v6, "isAdjustedResource") & 1) != 0)
        {
          LOBYTE(v3) = 1;
          goto LABEL_12;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_12:

  return v3;
}

- (id)storedResourceForCPLResource:(id)a3 asset:(id)a4 adjusted:(BOOL)a5
{
  _BOOL8 v5;
  id v8;
  void *v9;
  void *v10;

  v5 = a5;
  v8 = a4;
  +[PLResourceInstaller generateExternalResourceFromCPLResource:asset:fromAdjustedSet:](PLResourceInstaller, "generateExternalResourceFromCPLResource:asset:fromAdjustedSet:", a3, v8, v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset storedResourceForExternalResource:asset:](self, "storedResourceForExternalResource:asset:", v9, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

- (id)storedResourceForExternalResource:(id)a3 asset:(id)a4
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  id v14;
  id v15;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  objc_msgSend(v6, "assetID");
  v7 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v7, "libraryID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceDataStoreManager storeForExternalResource:inLibraryWithID:](PLResourceDataStoreManager, "storeForExternalResource:inLibraryWithID:", v5, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = 0;
  v15 = 0;
  LOBYTE(v7) = objc_msgSend(v9, "storeExternalResource:forAsset:options:error:resultingResource:", v5, v6, 0, &v15, &v14);

  v10 = v15;
  v11 = v14;
  if ((v7 & 1) == 0 && !*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v17 = v5;
      v18 = 2112;
      v19 = v10;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_ERROR, "Failed to store external resource %@, reason: %@", buf, 0x16u);
    }

  }
  return v11;
}

- (BOOL)rm_createNewResourcesIn:(id)a3 inManagedObjectContext:(id)a4
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t k;
  BOOL v23;
  void *v24;
  id v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  NSObject *v44;
  void *v45;
  BOOL v47;
  NSObject *v48;
  void *v49;
  void *v50;
  void *v51;
  NSObject *obj;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint8_t buf[4];
  id v66;
  __int16 v67;
  PLManagedAsset *v68;
  _BYTE v69[128];
  _BYTE v70[128];
  _BYTE v71[128];
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(v5, "transientModernResources");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v6, "count"))
  {
    -[PLManagedAsset uuid](self, "uuid");
    v18 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "rm_assetUUIDToCloudResources");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v24, "count"))
    {
      if (*MEMORY[0x1E0D115D0])
      {
        v23 = 0;
        goto LABEL_43;
      }
      __CPLAssetsdOSLogDomain();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v66 = v5;
        v67 = 2112;
        v68 = self;
        _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "No resources at all for cloudMaster %@, unable to create master resources for asset %@", buf, 0x16u);
      }
      v23 = 0;
LABEL_42:

LABEL_43:
      goto LABEL_44;
    }
    v25 = objc_alloc(MEMORY[0x1E0C99E20]);
    objc_msgSend(v24, "allKeys");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v25, "initWithArray:", v26);

    -[NSObject removeObject:](v27, "removeObject:", v18);
    -[NSObject anyObject](v27, "anyObject");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "objectForKey:", v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = objc_msgSend(v29, "count");
    v23 = v30 != 0;
    if (v30)
    {
      v50 = v28;
      v51 = v24;
      v31 = v29;
      v32 = v5;
      objc_msgSend(v24, "objectForKeyedSubscript:", v18);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend(v33, "count");
      v35 = objc_msgSend(v31, "count");

      if (v34 < v35)
      {
        v55 = 0u;
        v56 = 0u;
        v53 = 0u;
        v54 = 0u;
        v49 = v31;
        obj = v31;
        v36 = -[NSObject countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v53, v69, 16);
        if (v36)
        {
          v37 = v36;
          v47 = v23;
          v48 = v27;
          v38 = *(_QWORD *)v54;
          do
          {
            for (i = 0; i != v37; ++i)
            {
              if (*(_QWORD *)v54 != v38)
                objc_enumerationMutation(obj);
              v40 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * i);
              -[PLManagedAsset _rm_localResourceURLForResource:](self, "_rm_localResourceURLForResource:", v40);
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v40, "validatedExternalResourceRepresentationUsingFileURL:", v41);
              v42 = (void *)objc_claimAutoreleasedReturnValue();
              +[PLManagedAsset _rm_copyResourceFileFrom:to:forCloudMaster:andAsset:](PLManagedAsset, "_rm_copyResourceFileFrom:to:forCloudMaster:andAsset:", v40, v42, v32, self);
              v43 = -[PLManagedAsset storedResourceForExternalResource:asset:](self, "storedResourceForExternalResource:asset:", v42, self);

            }
            v37 = -[NSObject countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v53, v69, 16);
          }
          while (v37);
          v5 = v32;
          v27 = v48;
          v24 = v51;
          v23 = v47;
        }
        else
        {
          v5 = v32;
          v24 = v51;
        }
        v29 = v49;
        v28 = v50;
        v44 = obj;
LABEL_40:

        goto LABEL_41;
      }
      v5 = v32;
      v28 = v50;
      v24 = v51;
      v29 = v31;
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v66 = v45;
          _os_log_impl(&dword_199541000, v44, OS_LOG_TYPE_DEFAULT, "Already have master resources for asset %@", buf, 0xCu);

        }
        goto LABEL_40;
      }
    }
    else if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v44 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v66 = v5;
        v67 = 2112;
        v68 = self;
        _os_log_impl(&dword_199541000, v44, OS_LOG_TYPE_ERROR, "No resources on other assets for cloudMaster %@, unable to create master resources for asset %@", buf, 0x16u);
      }
      goto LABEL_40;
    }
LABEL_41:

    goto LABEL_42;
  }
  v63 = 0u;
  v64 = 0u;
  v61 = 0u;
  v62 = 0u;
  v7 = v6;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v61, v71, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v62;
    do
    {
      for (j = 0; j != v9; ++j)
      {
        if (*(_QWORD *)v62 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v61 + 1) + 8 * j);
        -[PLManagedAsset _rm_localResourceURLForResource:](self, "_rm_localResourceURLForResource:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "validatedExternalResourceRepresentationUsingFileURL:", v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = -[PLManagedAsset storedResourceForExternalResource:asset:](self, "storedResourceForExternalResource:asset:", v14, self);

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v61, v71, 16);
    }
    while (v9);
  }

  objc_msgSend(v5, "transientModernResources");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = (void *)objc_msgSend(v16, "copy");

  v59 = 0u;
  v60 = 0u;
  v57 = 0u;
  v58 = 0u;
  v18 = v17;
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v57, v70, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v58;
    do
    {
      for (k = 0; k != v20; ++k)
      {
        if (*(_QWORD *)v58 != v21)
          objc_enumerationMutation(v18);
        objc_msgSend(*(id *)(*((_QWORD *)&v57 + 1) + 8 * k), "deleteResource");
      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v57, v70, 16);
    }
    while (v20);
  }
  v23 = 1;
  v6 = v18;
LABEL_44:

  return v23;
}

- (void)rm_createMasterResourcesIn:(id)a3 inManagedObjectContext:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  unint64_t v11;
  double v12;
  NSObject *v13;
  int v14;
  id v15;
  __int16 v16;
  PLManagedAsset *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[PLManagedAsset rm_createNewResourcesIn:inManagedObjectContext:](self, "rm_createNewResourcesIn:inManagedObjectContext:", v6, a4);
  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    v9 = (double)objc_msgSend(v7, "unorientedWidth");
    v10 = (double)objc_msgSend(v8, "unorientedHeight");
    -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", (uint64_t)v9);
    -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", (uint64_t)v10);
    if (!-[PLManagedAsset hasAdjustments](self, "hasAdjustments")
      || !-[PLManagedAsset width](self, "width") && !-[PLManagedAsset height](self, "height"))
    {
      v11 = -[PLManagedAsset originalOrientation](self, "originalOrientation") - 5;
      if (v11 >= 4)
        v12 = v9;
      else
        v12 = v10;
      if (v11 >= 4)
        v9 = v10;
      if (v12 != (double)-[PLManagedAsset width](self, "width"))
        -[PLManagedAsset setWidth:](self, "setWidth:", (uint64_t)v12);
      if (v9 != (double)-[PLManagedAsset height](self, "height"))
        -[PLManagedAsset setHeight:](self, "setHeight:", (uint64_t)v9);
    }
    -[PLManagedAsset setOriginalFilesize:](self, "setOriginalFilesize:", objc_msgSend(v8, "dataLength"));
  }
  else if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      v14 = 138412546;
      v15 = v6;
      v16 = 2112;
      v17 = self;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Unable to find original resource in cloudMaster %@ for asset %@", (uint8_t *)&v14, 0x16u);
    }

  }
}

- (void)rm_createMasterResourcesForCPLResources:(id)a3 master:(id)a4 inLibrary:(id)a5
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id obj;
  _QWORD v34[4];
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v29 = a5;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  obj = v7;
  v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v45, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v41;
    v30 = *(_QWORD *)v41;
    v31 = v8;
    do
    {
      v12 = 0;
      v32 = v10;
      do
      {
        if (*(_QWORD *)v41 != v11)
          objc_enumerationMutation(obj);
        v13 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * v12);
        v14 = (void *)MEMORY[0x19AEC1554]();
        objc_msgSend(v8, "rm_cloudResourcesForResourceType:", objc_msgSend(v13, "resourceType"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v15, "count"))
        {
          v38 = 0u;
          v39 = 0u;
          v36 = 0u;
          v37 = 0u;
          v16 = v15;
          v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
          if (v17)
          {
            v18 = v17;
            v19 = *(_QWORD *)v37;
            do
            {
              for (i = 0; i != v18; ++i)
              {
                if (*(_QWORD *)v37 != v19)
                  objc_enumerationMutation(v16);
                v21 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
                objc_msgSend(v21, "asset");
                v22 = (void *)objc_claimAutoreleasedReturnValue();

                if (v22)
                {
                  objc_msgSend(v21, "asset");
                  v23 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v21, "asset");
                  v24 = (void *)objc_claimAutoreleasedReturnValue();
                  v25 = (id)objc_msgSend(v23, "storedResourceForCPLResource:asset:adjusted:", v13, v24, 0);

                }
              }
              v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
            }
            while (v18);
            v11 = v30;
            v8 = v31;
            v10 = v32;
          }
        }
        else
        {
          -[PLManagedAsset storedResourceForCPLResource:asset:adjusted:](self, "storedResourceForCPLResource:asset:adjusted:", v13, self, 0);
          v16 = (id)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset _rm_insertResource:forOtherDuplicatedAssetInMaster:inPhotoLibrary:](self, "_rm_insertResource:forOtherDuplicatedAssetInMaster:inPhotoLibrary:", v16, v8, v29);
        }

        objc_autoreleasePoolPop(v14);
        ++v12;
      }
      while (v12 != v10);
      v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v45, 16);
    }
    while (v10);
  }

  objc_msgSend(v8, "rm_assetUUIDToCloudResources");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v34[0] = MEMORY[0x1E0C809B0];
  v34[1] = 3221225472;
  v34[2] = __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke;
  v34[3] = &unk_1E36758D0;
  v35 = v29;
  v27 = v29;
  objc_msgSend(v26, "enumerateKeysAndObjectsUsingBlock:", v34);

}

- (id)_rm_localResourceURLForResource:(id)a3
{
  void *v3;
  void *v4;

  -[PLManagedAsset localResourcePathForMasterResource:](self, "localResourcePathForMasterResource:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v3, 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (void)_rm_insertResource:(id)a3 forOtherDuplicatedAssetInMaster:(id)a4 inPhotoLibrary:(id)a5
{
  id v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  __int128 v22;
  id obj;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  id v32;
  __int16 v33;
  void *v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v24 = a4;
  objc_msgSend(v24, "assets");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v35, 16);
  if (v8)
  {
    v10 = v8;
    v11 = *(_QWORD *)v26;
    *(_QWORD *)&v9 = 138412802;
    v22 = v9;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v26 != v11)
          objc_enumerationMutation(obj);
        v13 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        objc_msgSend(v13, "uuid", v22);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLManagedAsset uuid](self, "uuid");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v14, "isEqualToString:", v15);

        if ((v16 & 1) == 0)
        {
          objc_msgSend(v13, "_rm_localResourceURLForResource:", v7);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "validatedExternalResourceRepresentationUsingFileURL:", v17);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          +[PLManagedAsset _rm_copyResourceFileFrom:to:forCloudMaster:andAsset:](PLManagedAsset, "_rm_copyResourceFileFrom:to:forCloudMaster:andAsset:", v7, v18, v24, v13);
          -[PLManagedAsset storedResourceForExternalResource:asset:](self, "storedResourceForExternalResource:asset:", v18, v13);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v20 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              objc_msgSend(v13, "uuid");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = v22;
              v30 = v19;
              v31 = 2112;
              v32 = v24;
              v33 = 2112;
              v34 = v21;
              _os_log_impl(&dword_199541000, v20, OS_LOG_TYPE_DEFAULT, "Creating new internalResource %@ for master %@ (asset: %@)", buf, 0x20u);

            }
          }

        }
      }
      v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v35, 16);
    }
    while (v10);
  }

}

- (id)rm_cplResourceForResourceType:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;

  -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "cplResourceIncludeFile:", 1);
  else
    -[PLManagedAsset rm_cplMasterResourceForResourceType:](self, "rm_cplMasterResourceForResourceType:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)rm_cplMasterResourceForResourceType:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  int v11;
  void *v12;
  __int16 v13;
  PLManagedAsset *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "cplResourceIncludeFile:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend(MEMORY[0x1E0D11440], "descriptionForResourceType:", a3);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = 138412546;
        v12 = v9;
        v13 = 2112;
        v14 = self;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_DEBUG, "Unable to find master resource %@ in asset %@", (uint8_t *)&v11, 0x16u);

      }
    }
    v7 = 0;
  }

  return v7;
}

- (id)rm_cplMasterResourcesFromCloudMaster:(id)a3 addOriginalResourceMode:(BOOL)a4
{
  _BOOL8 v4;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  const __CFString *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  NSObject *v31;
  void *v32;
  _BYTE *v33;
  _BOOL8 v34;
  uint64_t v35;
  id v36;
  __CFString *v37;
  NSObject *v38;
  void *v39;
  uint64_t v40;
  __int128 v42;
  void *v43;
  void *v44;
  __CFString *v45;
  void *v46;
  PLManagedAsset *v47;
  NSObject *log;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint8_t buf[4];
  uint64_t v62;
  __int16 v63;
  const __CFString *v64;
  __int16 v65;
  id v66;
  _BYTE v67[128];
  uint64_t v68;

  v4 = a4;
  v68 = *MEMORY[0x1E0C80C00];
  v52 = a3;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[PLManagedAsset mainFileURL](self, "mainFileURL");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = self;
  -[PLManagedAsset master](self, "master");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "placeholderState");

  v44 = v6;
  if ((_DWORD)v10 == 1)
  {
    v54 = 0;
  }
  else
  {
    objc_msgSend(v8, "path");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v54 = objc_msgSend(v6, "fileExistsAtPath:", v11);

  }
  v43 = v8;
  v12 = (_BYTE *)MEMORY[0x1E0D115D0];
  if (!*MEMORY[0x1E0D115D0])
  {
    __CPLAssetsdOSLogDomain();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v52, "allMasterResources");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = (void *)v14;
      v16 = CFSTR("NO");
      if (v54)
        v16 = CFSTR("YES");
      *(_DWORD *)buf = 138412546;
      v62 = v14;
      v63 = 2112;
      v64 = v16;
      _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "Reusing existing cloud resources %@. canGenerateDerivative: %@", buf, 0x16u);

    }
  }
  objc_msgSend(v52, "fingerprintScheme");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = 0u;
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  -[PLManagedAsset modernResources](v47, "modernResources");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v57, v67, 16);
  if (v18)
  {
    v20 = v18;
    v21 = *(_QWORD *)v58;
    v53 = v54 & ~v4;
    *(_QWORD *)&v19 = 138412802;
    v42 = v19;
    v51 = *(_QWORD *)v58;
    do
    {
      v22 = 0;
      v55 = v20;
      do
      {
        if (*(_QWORD *)v58 != v21)
          objc_enumerationMutation(v17);
        v23 = *(void **)(*((_QWORD *)&v57 + 1) + 8 * v22);
        if (objc_msgSend(v23, "isCPLMasterResource", v42))
        {
          if (v4
            && !objc_msgSend(v23, "cloudLocalState")
            && objc_msgSend(v23, "isCPLOriginalResource")
            && objc_msgSend(v23, "isLocallyAvailable"))
          {
            if (!*v12)
            {
              __CPLAssetsdOSLogDomain();
              v24 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                v62 = (uint64_t)v23;
                _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_DEFAULT, "addOriginalResourceMode, including file for cplResource: %@", buf, 0xCu);
              }

            }
            objc_msgSend(v23, "fingerprint");
            v25 = (void *)objc_claimAutoreleasedReturnValue();

            if (!v25)
            {
              objc_msgSend(v23, "fileURL");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              v56 = 0;
              objc_msgSend(v49, "fingerPrintForFileAtURL:error:", v26, &v56);
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              v50 = v56;

              if (v27)
              {
                objc_msgSend(v23, "setFingerprint:", v27);
              }
              else if (!*v12)
              {
                __CPLAssetsdOSLogDomain();
                v38 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                {
                  objc_msgSend(v23, "fileURL");
                  v46 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v46, "path");
                  log = v38;
                  v39 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PLManagedAsset scopedIdentifier](v47, "scopedIdentifier");
                  v45 = (__CFString *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = v42;
                  v62 = (uint64_t)v39;
                  v63 = 2112;
                  v64 = v45;
                  v65 = 2112;
                  v66 = v50;
                  _os_log_impl(&dword_199541000, log, OS_LOG_TYPE_ERROR, "Failed to generate fingerprint for path %@ uuid %@. Error: %@", buf, 0x20u);

                  v38 = log;
                }

              }
            }
            v28 = 1;
          }
          else
          {
            v28 = 0;
          }
          objc_msgSend(v23, "cplResourceIncludeFile:", v28);
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          v30 = v29;
          if (v29)
          {
            if ((_DWORD)v28)
            {
              objc_msgSend(v29, "setCanGenerateDerivative:", v54);
              objc_msgSend(v23, "setRemoteAvailability:", 1);
            }
            else
            {
              objc_msgSend(v29, "setCanGenerateDerivative:", v53);
            }
            if ((_DWORD)v10 == 1)
              objc_msgSend(v30, "setSourceResourceType:", (int)objc_msgSend(v23, "cloudSourceType"));
            objc_msgSend(v7, "addObject:", v30);
          }
          else if (!*v12)
          {
            __CPLAssetsdOSLogDomain();
            v31 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
            {
              objc_msgSend(v52, "scopedIdentifier");
              v32 = v17;
              v33 = v12;
              v34 = v4;
              v35 = v10;
              v36 = v7;
              v37 = (__CFString *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v62 = (uint64_t)v23;
              v63 = 2112;
              v64 = v37;
              _os_log_impl(&dword_199541000, v31, OS_LOG_TYPE_ERROR, "Unable to create CPLResource from %@ with scopedIdentifier %@", buf, 0x16u);

              v7 = v36;
              v10 = v35;
              v4 = v34;
              v12 = v33;
              v17 = v32;
              v21 = v51;
            }

          }
          v20 = v55;
        }
        ++v22;
      }
      while (v20 != v22);
      v40 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v57, v67, 16);
      v20 = v40;
    }
    while (v40);
  }

  return v7;
}

- (id)rm_cplExpungeableMasterResourceStates
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset allMasterCPLResources](self, "allMasterCPLResources");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v2);
        v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v8, "supportsTrashedState"))
        {
          objc_msgSend(v8, "expungeableResourceStateRepresentation");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          if (!v5)
          {
            objc_msgSend(MEMORY[0x1E0C99DE8], "array");
            v5 = (void *)objc_claimAutoreleasedReturnValue();
          }
          objc_msgSend(v5, "addObject:", v9);

        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }
  else
  {
    v5 = 0;
  }
  v10 = (void *)objc_msgSend(v5, "copy");

  return v10;
}

- (void)rm_createAssetResourcesForCPLResources:(id)a3 inLibrary:(id)a4
{
  id v6;
  unint64_t v7;
  void *v8;
  _BYTE *v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id obj;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  void *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v23 = a4;
  v7 = -[PLManagedAsset bestResourceTypeForAdjustedFingerPrint](self, "bestResourceTypeForAdjustedFingerPrint");
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  obj = v6;
  v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v37, 16);
  v8 = 0;
  if (v26)
  {
    v9 = (_BYTE *)MEMORY[0x1E0D115D0];
    v25 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v26; ++i)
      {
        if (*(_QWORD *)v28 != v25)
          objc_enumerationMutation(obj);
        v11 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        v12 = objc_msgSend(v11, "resourceType");
        -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (v13)
        {
          if (*v9)
            goto LABEL_15;
          __CPLAssetsdOSLogDomain();
          v14 = objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
            goto LABEL_14;
          objc_msgSend(v13, "singleLineDescription");
          v15 = v8;
          v16 = v7;
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v32 = v11;
          v33 = 2112;
          v34 = v17;
          v35 = 2112;
          v36 = v18;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Applying properties from CPLResource %@ to local cloudResource %@ for asset %@", buf, 0x20u);

          v7 = v16;
          v8 = v15;
          v9 = (_BYTE *)MEMORY[0x1E0D115D0];
          goto LABEL_13;
        }
        if (*v9)
          goto LABEL_15;
        __CPLAssetsdOSLogDomain();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        {
          -[PLManagedAsset cloudAssetGUID](self, "cloudAssetGUID");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v32 = 0;
          v33 = 2112;
          v34 = v18;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEBUG, "Created new cloudResource %@ for asset %@", buf, 0x16u);
LABEL_13:

        }
LABEL_14:

LABEL_15:
        v19 = -[PLManagedAsset storedResourceForCPLResource:asset:adjusted:](self, "storedResourceForCPLResource:asset:adjusted:", v11, self, 1);
        if (v12 == v7)
        {
          objc_msgSend(v11, "identity");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "fingerPrint");
          v21 = objc_claimAutoreleasedReturnValue();

          v8 = (void *)v21;
        }

      }
      v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v37, 16);
    }
    while (v26);
  }

  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "setAdjustedStableHash:", v8);

}

- (id)rm_applyResourcesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  id v6;
  id v7;
  unsigned int v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  unsigned int v13;
  __CFString *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t j;
  void *v27;
  NSObject *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  int v34;
  void *v35;
  NSObject *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t k;
  void *v45;
  NSObject *v46;
  NSObject *v47;
  int v48;
  uint64_t v49;
  int v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  const __CFString *v69;
  int v70;
  NSObject *v71;
  void *v72;
  void *v73;
  int v74;
  void *v75;
  void *v76;
  uint64_t v77;
  void *v78;
  PLManagedAsset *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  NSObject *v88;
  NSObject *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  unint64_t v94;
  double v95;
  void *v96;
  void *v97;
  NSObject *v98;
  void *v99;
  void *v100;
  const char *v101;
  NSObject *v102;
  os_log_type_t v103;
  NSObject *v104;
  void *v105;
  uint64_t v106;
  PLManagedAsset *v107;
  NSObject *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  NSObject *v113;
  void *v114;
  const char *v115;
  NSObject *v116;
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  void *v122;
  void *v123;
  void *v124;
  NSObject *v125;
  __CFString *v127;
  void *v128;
  void *v129;
  void *v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id obj;
  id obja;
  void *v137;
  unint64_t v138;
  __CFString *v139;
  void *v140;
  PLManagedAsset *v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _BYTE v154[128];
  _BYTE v155[128];
  uint8_t v156[128];
  uint8_t buf[4];
  _BYTE v158[18];
  __int16 v159;
  void *v160;
  __int16 v161;
  void *v162;
  uint64_t v163;

  v163 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  v8 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
  if (v8 > 0xA
    || ((0x5F6u >> v8) & 1) == 0
    || !-[PLManagedAsset hasAdjustments](self, "hasAdjustments")
    || (-[PLManagedAsset adjustmentTimestamp](self, "adjustmentTimestamp"),
        v9 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v6, "recordModificationDate"),
        v10 = (void *)objc_claimAutoreleasedReturnValue(),
        v11 = objc_msgSend(v9, "compare:", v10),
        v10,
        v9,
        v11 != 1))
  {
    v131 = v7;
    v133 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    v150 = 0u;
    v151 = 0u;
    v152 = 0u;
    v153 = 0u;
    -[PLManagedAsset allAssetCPLResources](self, "allAssetCPLResources");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v150, v156, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v151;
      do
      {
        for (i = 0; i != v17; ++i)
        {
          if (*(_QWORD *)v151 != v18)
            objc_enumerationMutation(v15);
          v20 = *(void **)(*((_QWORD *)&v150 + 1) + 8 * i);
          v21 = objc_msgSend(v20, "cplType");
          objc_msgSend(v6, "resources");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          LOBYTE(v21) = -[PLManagedAsset _isResourceType:inResources:](self, "_isResourceType:inResources:", v21, v22);

          if ((v21 & 1) == 0)
          {
            -[PLManagedAsset removeLocalFileForResource:](self, "removeLocalFileForResource:", v20);
            objc_msgSend(v20, "deleteResource");
          }
        }
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v150, v156, 16);
      }
      while (v17);
    }

    v138 = -[PLManagedAsset bestResourceTypeForAdjustedFingerPrint](self, "bestResourceTypeForAdjustedFingerPrint");
    v146 = 0u;
    v147 = 0u;
    v148 = 0u;
    v149 = 0u;
    objc_msgSend(v6, "resources");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v146, v155, 16);
    v137 = v6;
    v141 = self;
    if (v23)
    {
      v24 = v23;
      v140 = 0;
      v25 = *(_QWORD *)v147;
      do
      {
        for (j = 0; j != v24; ++j)
        {
          if (*(_QWORD *)v147 != v25)
            objc_enumerationMutation(obj);
          v27 = *(void **)(*((_QWORD *)&v146 + 1) + 8 * j);
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v28 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              *(_QWORD *)v158 = v27;
              _os_log_impl(&dword_199541000, v28, OS_LOG_TYPE_DEBUG, "Asset resource: %@", buf, 0xCu);
            }

          }
          v29 = objc_msgSend(v27, "resourceType");
          -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          if (v30)
          {
            objc_msgSend(v27, "identity");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v31, "fingerPrint");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "fingerprint");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            v34 = objc_msgSend(v32, "isEqualToString:", v33) ^ 1;

            self = v141;
            v6 = v137;

          }
          else
          {
            v34 = 0;
          }
          -[PLManagedAsset storedResourceForCPLResource:asset:adjusted:](self, "storedResourceForCPLResource:asset:adjusted:", v27, self, 1);
          v35 = (void *)objc_claimAutoreleasedReturnValue();

          if (v35 && objc_msgSend(v35, "isLocallyAvailable"))
          {
            if (v34)
            {
              if (!*MEMORY[0x1E0D115D0])
              {
                __CPLAssetsdOSLogDomain();
                v36 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
                {
                  objc_msgSend(v35, "singleLineDescription");
                  v37 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412546;
                  *(_QWORD *)v158 = v37;
                  *(_WORD *)&v158[8] = 2112;
                  *(_QWORD *)&v158[10] = v27;
                  _os_log_impl(&dword_199541000, v36, OS_LOG_TYPE_DEFAULT, "Removing local resource %@ that does not match cloud resource %@", buf, 0x16u);

                  self = v141;
                }

              }
              -[PLManagedAsset removeLocalFileForResource:](self, "removeLocalFileForResource:", v35);
              objc_msgSend(v35, "markAsNotLocallyAvailable");
            }
            else
            {
              objc_msgSend(v133, "addObject:", v35);
            }
          }
          if (objc_msgSend(v35, "cloudLocalState") != 3)
            objc_msgSend(v35, "setCloudLocalState:", 3);
          if (v29 == v138)
          {
            objc_msgSend(v27, "identity");
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v38, "fingerPrint");
            v39 = objc_claimAutoreleasedReturnValue();

            v140 = (void *)v39;
          }

        }
        v24 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v146, v155, 16);
      }
      while (v24);
    }
    else
    {
      v140 = 0;
    }

    -[PLManagedAsset persistedResourcesWithRecipeID:andVersion:](self, "persistedResourcesWithRecipeID:andVersion:", 65937, 2);
    v142 = 0u;
    v143 = 0u;
    v144 = 0u;
    v145 = 0u;
    v40 = (id)objc_claimAutoreleasedReturnValue();
    v41 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v142, v154, 16);
    if (v41)
    {
      v42 = v41;
      v43 = *(_QWORD *)v143;
      do
      {
        for (k = 0; k != v42; ++k)
        {
          if (*(_QWORD *)v143 != v43)
            objc_enumerationMutation(v40);
          v45 = *(void **)(*((_QWORD *)&v142 + 1) + 8 * k);
          if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v46 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              *(_QWORD *)v158 = v45;
              _os_log_impl(&dword_199541000, v46, OS_LOG_TYPE_DEFAULT, "Removing substandard resource %@", buf, 0xCu);
            }

          }
          -[PLManagedAsset removeLocalFileForResource:](v141, "removeLocalFileForResource:", v45);
          objc_msgSend(v45, "deleteResource");
        }
        v42 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v142, v154, 16);
      }
      while (v42);
    }

    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v47 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
      {
        v48 = -[PLManagedAsset orientation](v141, "orientation");
        v49 = objc_msgSend(v6, "orientation");
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)v158 = v48;
        *(_WORD *)&v158[4] = 2048;
        *(_QWORD *)&v158[6] = v49;
        _os_log_impl(&dword_199541000, v47, OS_LOG_TYPE_DEBUG, "Current orientation: %d. AssetChange orientation: %ld", buf, 0x12u);
      }

    }
    v50 = -[PLManagedAsset orientation](v141, "orientation");
    if (objc_msgSend(v6, "orientation") != v50)
      -[PLManagedAsset setOrientation:](v141, "setOrientation:", (__int16)objc_msgSend(v6, "orientation"));
    -[PLManagedAsset duration](v141, "duration");
    v52 = (uint64_t)(v51 * 1000.0);
    v53 = objc_msgSend(v6, "duration");
    if (v53 != v52)
    {
      v54 = v53;
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v55 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134218240;
          *(_QWORD *)v158 = v52;
          *(_WORD *)&v158[8] = 2048;
          *(_QWORD *)&v158[10] = v54;
          _os_log_impl(&dword_199541000, v55, OS_LOG_TYPE_DEBUG, "Current duration: %ld. AssetChange duration: %ld", buf, 0x16u);
        }

      }
      -[PLManagedAsset setDuration:](v141, "setDuration:", (double)v54 / 1000.0);
    }
    v56 = objc_msgSend(v6, "originalChoice");
    if (v56 != -[PLManagedAsset originalResourceChoice](v141, "originalResourceChoice"))
      -[PLManagedAsset setOriginalResourceChoice:](v141, "setOriginalResourceChoice:", v56);
    objc_msgSend(v6, "adjustedMediaMetaDataType");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "adjustedMediaMetaData");
    v58 = objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset additionalAttributes](v141, "additionalAttributes");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v59, "setMediaMetadataType:", v57);

    -[PLManagedAsset additionalAttributes](v141, "additionalAttributes");
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    obja = (id)v58;
    objc_msgSend(v60, "setMediaMetadataData:", v58);

    objc_msgSend(v6, "adjustments");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v62 = v61;
    if (v61)
    {
      objc_msgSend(v61, "adjustmentType");
      v63 = (id)objc_claimAutoreleasedReturnValue();

      if (v63)
      {
        objc_msgSend(v62, "simpleAdjustmentData");
        v64 = (id)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v62, "adjustmentCompoundVersion");
        v139 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v62, "adjustmentCreatorCode");
        v134 = (id)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v62, "adjustmentTimestamp");
        v132 = (id)objc_claimAutoreleasedReturnValue();

        v65 = -[PLManagedAsset _plAdjustmentBaseVersionFromCPLAdjustmentSourceType:](v141, "_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:", objc_msgSend(v62, "adjustmentSourceType"));
        v66 = objc_msgSend(v62, "adjustmentRenderTypes");
        v67 = 1;
        goto LABEL_78;
      }
      v65 = 0;
      v134 = 0;
      v64 = 0;
    }
    else
    {
      v65 = 0;
      v134 = 0;
      v64 = 0;
      v63 = 0;
    }
    v67 = 0;
    v132 = 0;
    v66 = 0;
    v139 = CFSTR("0");
LABEL_78:
    -[PLManagedAsset updateSpatialTypeFromAdjustmentRenderTypes:hasAdjustment:adjustedMediaMetadata:](v141, "updateSpatialTypeFromAdjustmentRenderTypes:hasAdjustment:adjustedMediaMetadata:", v66, v67, obja);
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v68 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_DEBUG))
      {
        v69 = CFSTR("NO");
        if ((_DWORD)v67)
          v69 = CFSTR("YES");
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v158 = v69;
        _os_log_impl(&dword_199541000, v68, OS_LOG_TYPE_DEBUG, "has adjustment: %@", buf, 0xCu);
      }

      if (*MEMORY[0x1E0D115D0])
        v70 = 0;
      else
        v70 = v67;
      if (v70 == 1)
      {
        __CPLAssetsdOSLogDomain();
        v71 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset uuid](v141, "uuid");
          v72 = v57;
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          *(_QWORD *)v158 = v63;
          *(_WORD *)&v158[8] = 2114;
          *(_QWORD *)&v158[10] = v139;
          v159 = 2114;
          v160 = v73;
          _os_log_impl(&dword_199541000, v71, OS_LOG_TYPE_DEFAULT, "Setting adjustment type: %{public}@ version: %{public}@ to asset %{public}@", buf, 0x20u);

          v57 = v72;
        }

      }
    }
    if (v64)
      v74 = 0;
    else
      v74 = v67;
    if (v74 == 1)
    {
      -[PLManagedAsset assetResourceForCPLType:](v141, "assetResourceForCPLType:", 13);
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v75, "cplFileURL");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      if (v76 && objc_msgSend(v75, "isLocallyAvailable"))
        v64 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithContentsOfURL:", v76);
      else
        v64 = 0;

    }
    v77 = objc_msgSend(objc_alloc(MEMORY[0x1E0D750B0]), "initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:", v63, v139, v64, +[PLManagedAsset pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:](PLManagedAsset, "pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:", v65), v134, v66);
    +[PLAssetAdjustmentOptions assetAdjustmentOptionsForApplyingResourcesFromCPL](PLAssetAdjustmentOptions, "assetAdjustmentOptionsForApplyingResourcesFromCPL");
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    v79 = v141;
    v130 = (void *)v77;
    -[PLManagedAsset setAdjustments:options:](v141, "setAdjustments:options:", v77, v78);

    -[PLManagedAsset additionalAttributes](v141, "additionalAttributes");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v80, "unmanagedAdjustment");
    v81 = (void *)objc_claimAutoreleasedReturnValue();

    if (v81)
    {
      if (v132)
        objc_msgSend(v81, "setAdjustmentTimestamp:");
      v79 = v141;
      if (-[PLManagedAsset isVideo](v141, "isVideo") || -[PLManagedAsset isPhotoIris](v141, "isPhotoIris"))
        -[PLManagedAsset setPlaybackVariationAndLoopingStyleFromAdjustmentRenderTypes:](v141, "setPlaybackVariationAndLoopingStyleFromAdjustmentRenderTypes:", v66);
      if (-[PLManagedAsset isPhoto](v141, "isPhoto"))
        -[PLManagedAsset setDepthTypeFromAdjustmentRenderTypes:](v141, "setDepthTypeFromAdjustmentRenderTypes:", v66);
      -[PLManagedAsset setCameraProcessingAdjustmentStateFromAdjustmentRenderTypes:](v141, "setCameraProcessingAdjustmentStateFromAdjustmentRenderTypes:", v66);
    }
    if (-[PLManagedAsset hasAdjustments](v79, "hasAdjustments"))
    {
      -[PLManagedAsset additionalAttributes](v79, "additionalAttributes");
      v82 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v82, "mediaMetadata");
      v83 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v83)
      {
        -[PLManagedAsset additionalAttributes](v79, "additionalAttributes");
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v84, "setMediaMetadataData:", obja);

      }
    }
    -[PLManagedAsset additionalAttributes](v79, "additionalAttributes");
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v85, "setAdjustedStableHash:", v140);

    objc_msgSend(v137, "recordModificationDate");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset setModificationDate:](v79, "setModificationDate:", v86);

    if (-[PLManagedAsset effectiveThumbnailIndex](v79, "effectiveThumbnailIndex") == 0x7FFFFFFFFFFFFFFFLL)
      -[PLManagedAsset setCloudPlaceholderKind:](v79, "setCloudPlaceholderKind:", 2);
    if (!-[PLManagedAsset hasNonSlomoAdjustments](v79, "hasNonSlomoAdjustments"))
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v89 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG))
        {
          -[PLManagedAsset _compactDebugDescription](v79, "_compactDebugDescription");
          v90 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          *(_QWORD *)v158 = v90;
          _os_log_impl(&dword_199541000, v89, OS_LOG_TYPE_DEBUG, "Setting original size for asset %@", buf, 0xCu);

        }
      }
      v91 = -[PLManagedAsset originalWidth](v79, "originalWidth");
      v92 = -[PLManagedAsset originalHeight](v79, "originalHeight");
      if (v91 >= 1 && v92 >= 1)
      {
        v93 = (double)v92;
        v94 = -[PLManagedAsset originalOrientation](v79, "originalOrientation") - 5;
        if (v94 >= 4)
          v95 = (double)v91;
        else
          v95 = v93;
        if (v94 < 4)
          v93 = (double)v91;
        if (v95 != (double)-[PLManagedAsset width](v79, "width"))
          -[PLManagedAsset setWidth:](v79, "setWidth:", (uint64_t)v95);
        if (v93 != (double)-[PLManagedAsset height](v79, "height"))
          -[PLManagedAsset setHeight:](v79, "setHeight:", (uint64_t)v93);
      }
      -[PLManagedAsset masterResourceForCPLType:](v79, "masterResourceForCPLType:", 1);
      v88 = objc_claimAutoreleasedReturnValue();
      -[NSObject uniformTypeIdentifier](v88, "uniformTypeIdentifier");
      v96 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v96, "identifier");
      v97 = (void *)objc_claimAutoreleasedReturnValue();

      if (v97)
      {
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v98 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v98, OS_LOG_TYPE_DEBUG))
          {
            -[NSObject singleLineDescription](v88, "singleLineDescription");
            v99 = v57;
            v100 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412546;
            *(_QWORD *)v158 = v97;
            *(_WORD *)&v158[8] = 2112;
            *(_QWORD *)&v158[10] = v100;
            v101 = "Setting uti to %@ from %@";
            v102 = v98;
            v103 = OS_LOG_TYPE_DEBUG;
LABEL_173:
            _os_log_impl(&dword_199541000, v102, v103, v101, buf, 0x16u);

            v57 = v99;
          }
LABEL_174:

        }
LABEL_175:
        -[PLManagedAsset setUniformTypeIdentifier:](v141, "setUniformTypeIdentifier:", v97);
        goto LABEL_181;
      }
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_181:

        goto LABEL_182;
      }
      __CPLAssetsdOSLogDomain();
      v113 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v113, OS_LOG_TYPE_ERROR))
      {
        -[NSObject singleLineDescription](v88, "singleLineDescription");
        v114 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v158 = v114;
        v115 = "Original resource %@ is missing uti";
LABEL_179:
        _os_log_impl(&dword_199541000, v113, OS_LOG_TYPE_ERROR, v115, buf, 0xCu);

      }
LABEL_180:

      goto LABEL_181;
    }
    if (-[PLManagedAsset isVideo](v79, "isVideo"))
    {
      v87 = 16;
    }
    else
    {
      -[PLManagedAsset assetResourceForCPLType:](v79, "assetResourceForCPLType:", 2);
      v88 = objc_claimAutoreleasedReturnValue();
      if (v88)
        goto LABEL_141;
      -[PLManagedAsset assetResourceForCPLType:](v141, "assetResourceForCPLType:", 4);
      v88 = objc_claimAutoreleasedReturnValue();
      if (v88)
        goto LABEL_141;
      v87 = 5;
      v79 = v141;
    }
    -[PLManagedAsset assetResourceForCPLType:](v79, "assetResourceForCPLType:", v87);
    v88 = objc_claimAutoreleasedReturnValue();
    if (!v88)
    {
      if (*MEMORY[0x1E0D115D0])
      {
LABEL_183:
        v12 = v133;

        v125 = v12;
        v6 = v137;
        v7 = v131;
        goto LABEL_184;
      }
      __CPLAssetsdOSLogDomain();
      v88 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v88, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v88, OS_LOG_TYPE_ERROR, "Did not find derivative resource to update asset size with, asset dimensions may be incorrect", buf, 2u);
      }
LABEL_182:

      goto LABEL_183;
    }
LABEL_141:
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v104 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v104, OS_LOG_TYPE_DEBUG))
      {
        -[NSObject singleLineDescription](v88, "singleLineDescription");
        v105 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v158 = v105;
        _os_log_impl(&dword_199541000, v104, OS_LOG_TYPE_DEBUG, "Updating asset width/height from resource %@", buf, 0xCu);

      }
    }
    v106 = -[NSObject unorientedWidth](v88, "unorientedWidth");
    if (v106 < 1)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v116 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR))
        {
          -[NSObject singleLineDescription](v88, "singleLineDescription");
          v117 = v57;
          v118 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 134218242;
          *(_QWORD *)v158 = v106;
          *(_WORD *)&v158[8] = 2112;
          *(_QWORD *)&v158[10] = v118;
          _os_log_impl(&dword_199541000, v116, OS_LOG_TYPE_ERROR, "Invalid width %lld from resource %@", buf, 0x16u);

          v57 = v117;
        }

      }
      v119 = -[NSObject unorientedHeight](v88, "unorientedHeight");
      if (!*MEMORY[0x1E0D115D0])
      {
        v120 = v119;
        __CPLAssetsdOSLogDomain();
        v121 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v121, OS_LOG_TYPE_ERROR))
        {
          -[NSObject singleLineDescription](v88, "singleLineDescription");
          v122 = v57;
          v123 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 134218242;
          *(_QWORD *)v158 = v120;
          *(_WORD *)&v158[8] = 2112;
          *(_QWORD *)&v158[10] = v123;
          _os_log_impl(&dword_199541000, v121, OS_LOG_TYPE_ERROR, "Invalid height %lld from resource %@", buf, 0x16u);

          v57 = v122;
        }

      }
    }
    else
    {
      v107 = v141;
      if (-[PLManagedAsset width](v141, "width") != v106)
      {
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v108 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v108, OS_LOG_TYPE_DEBUG))
          {
            v109 = -[PLManagedAsset width](v141, "width");
            *(_DWORD *)buf = 134218240;
            *(_QWORD *)v158 = v109;
            *(_WORD *)&v158[8] = 2048;
            *(_QWORD *)&v158[10] = v106;
            _os_log_impl(&dword_199541000, v108, OS_LOG_TYPE_DEBUG, "Setting asset width from %lld to %lld", buf, 0x16u);
          }

        }
        v107 = v141;
        -[PLManagedAsset setWidth:](v141, "setWidth:", v106);
      }
      v110 = -[NSObject unorientedHeight](v88, "unorientedHeight");
      if (-[PLManagedAsset height](v107, "height") != v110)
      {
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v111 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v111, OS_LOG_TYPE_DEBUG))
          {
            v112 = -[PLManagedAsset height](v141, "height");
            *(_DWORD *)buf = 134218240;
            *(_QWORD *)v158 = v112;
            *(_WORD *)&v158[8] = 2048;
            *(_QWORD *)&v158[10] = v110;
            _os_log_impl(&dword_199541000, v111, OS_LOG_TYPE_DEBUG, "Setting asset height from %lld to %lld", buf, 0x16u);
          }

        }
        -[PLManagedAsset setHeight:](v141, "setHeight:", v110);
      }
    }
    -[NSObject uniformTypeIdentifier](v88, "uniformTypeIdentifier");
    v124 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v124, "identifier");
    v97 = (void *)objc_claimAutoreleasedReturnValue();

    if (v97)
    {
      if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v98 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
        {
          -[NSObject singleLineDescription](v88, "singleLineDescription");
          v99 = v57;
          v100 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)v158 = v97;
          *(_WORD *)&v158[8] = 2112;
          *(_QWORD *)&v158[10] = v100;
          v101 = "Setting uti to %@ from %@ due to adjustment";
          v102 = v98;
          v103 = OS_LOG_TYPE_DEFAULT;
          goto LABEL_173;
        }
        goto LABEL_174;
      }
      goto LABEL_175;
    }
    if (*MEMORY[0x1E0D115D0])
      goto LABEL_181;
    __CPLAssetsdOSLogDomain();
    v113 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v113, OS_LOG_TYPE_ERROR))
    {
      -[NSObject singleLineDescription](v88, "singleLineDescription");
      v114 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)v158 = v114;
      v115 = "Resource %@ is missing uti";
      goto LABEL_179;
    }
    goto LABEL_180;
  }
  if (*MEMORY[0x1E0D115D0])
  {
    v125 = 0;
    goto LABEL_185;
  }
  __CPLAssetsdOSLogDomain();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    v13 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
    if (v13 > 0xB)
      v14 = 0;
    else
      v14 = off_1E3663E30[v13];
    v127 = v14;
    -[PLManagedAsset adjustmentTimestamp](self, "adjustmentTimestamp");
    v128 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "recordModificationDate");
    v129 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    *(_QWORD *)v158 = v6;
    *(_WORD *)&v158[8] = 2112;
    *(_QWORD *)&v158[10] = v127;
    v159 = 2112;
    v160 = v128;
    v161 = 2112;
    v162 = v129;
    _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEFAULT, "Skipping resources change for record %@ because deferred processing is %@, asset adj time %@, record modification time %@", buf, 0x2Au);

  }
  v125 = 0;
LABEL_184:

LABEL_185:
  return v125;
}

- (void)updateSpatialTypeFromAdjustmentRenderTypes:(unsigned int)a3 hasAdjustment:(BOOL)a4 adjustedMediaMetadata:(id)a5
{
  _BOOL4 v5;
  __int16 v6;
  PLManagedAsset *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v5 = a4;
  v6 = a3;
  v12 = a5;
  if (-[PLManagedAsset isPhoto](self, "isPhoto"))
  {
    if (v5)
    {
      if ((v6 & 0x1000) == 0)
      {
        v8 = self;
        v9 = 0;
LABEL_11:
        -[PLManagedAsset setSpatialType:](v8, "setSpatialType:", v9);
        goto LABEL_12;
      }
      if (!v12)
      {
        v8 = self;
        v9 = 1;
        goto LABEL_11;
      }
      v10 = objc_msgSend(objc_alloc(MEMORY[0x1E0D75140]), "initWithImageSourceProxyOrEncodedImagePropertyData:contentType:timeZoneLookup:", v12, 0, 0);
      goto LABEL_9;
    }
    if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
    {
      -[PLManagedAsset metadataFromMediaPropertiesOrOriginalResource](self, "metadataFromMediaPropertiesOrOriginalResource");
      v10 = objc_claimAutoreleasedReturnValue();
LABEL_9:
      v11 = (void *)v10;
      -[PLManagedAsset setSpatialTypeFromMetadata:](self, "setSpatialTypeFromMetadata:", v10);

    }
  }
LABEL_12:

}

- (BOOL)checkAllResourcesRequiredForCPLDisableWithReachableBlock:(id)a3
{
  void (**v4)(id, void *, void *);
  void *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  int v22;
  void *v23;
  NSObject *v24;
  BOOL v25;
  __int128 v27;
  void (**v28)(id, void *, void *);
  char v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint8_t buf[4];
  _BYTE v36[18];
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v4 = (void (**)(id, void *, void *))a3;
  -[PLManagedAsset allRequiredResourcesForCPLDisable](self, "allRequiredResourcesForCPLDisable");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v31, v37, 16);
  if (!v6)
  {
    v9 = 0;
    goto LABEL_31;
  }
  v8 = v6;
  v9 = 0;
  v10 = *(_QWORD *)v32;
  v29 = 1;
  *(_QWORD *)&v7 = 67109378;
  v27 = v7;
  v28 = v4;
  do
  {
    for (i = 0; i != v8; ++i)
    {
      if (*(_QWORD *)v32 != v10)
        objc_enumerationMutation(v5);
      v12 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * i);
      objc_msgSend(v12, "cplFileURL", v27);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = v13;
      if (v13)
      {
        v30 = 0;
        v15 = objc_msgSend(v13, "checkResourceIsReachableAndReturnError:", &v30);
        v16 = v30;
        if ((v15 & 1) != 0)
        {
          if (v4)
            v4[2](v4, v14, v12);
          goto LABEL_25;
        }
        if ((PLIsErrorFileNotFound() & 1) != 0)
        {
          if (objc_msgSend(v12, "cloudLocalState") == 3)
          {
            v29 = 0;
          }
          else if (!*MEMORY[0x1E0D115D0])
          {
            __CPLAssetsdOSLogDomain();
            v19 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              v20 = v5;
              v21 = v9;
              v22 = objc_msgSend(v12, "cloudLocalState");
              objc_msgSend(v12, "objectID");
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = v27;
              *(_DWORD *)v36 = v22;
              v9 = v21;
              v5 = v20;
              v4 = v28;
              *(_WORD *)&v36[4] = 2114;
              *(_QWORD *)&v36[6] = v23;
              _os_log_impl(&dword_199541000, v19, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: unreachable resource with cloudLocalState %d, skipping: %{public}@", buf, 0x12u);

            }
          }
          ++v9;
          goto LABEL_25;
        }
        if (!*MEMORY[0x1E0D115D0])
        {
          __CPLAssetsdOSLogDomain();
          v17 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v12, "objectID");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            *(_QWORD *)v36 = v18;
            *(_WORD *)&v36[8] = 2112;
            *(_QWORD *)&v36[10] = v16;
            _os_log_impl(&dword_199541000, v17, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: failed for resource: %{public}@, error: %@", buf, 0x16u);

          }
          goto LABEL_19;
        }
      }
      else
      {
        if (*MEMORY[0x1E0D115D0])
          goto LABEL_26;
        __CPLAssetsdOSLogDomain();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v12, "objectID");
          v17 = objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          *(_QWORD *)v36 = v17;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: nil fileURL for CPL original resource: %{public}@", buf, 0xCu);
LABEL_19:

        }
      }
LABEL_25:

LABEL_26:
    }
    v8 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v31, v37, 16);
  }
  while (v8);
  if ((v29 & 1) == 0)
    goto LABEL_36;
LABEL_31:
  if (v9 == objc_msgSend(v5, "count"))
  {
    if (!*MEMORY[0x1E0D115D0])
    {
      __CPLAssetsdOSLogDomain();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_199541000, v24, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: all original resources unavailable, returning NO", buf, 2u);
      }

    }
LABEL_36:
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }

  return v25;
}

- (id)allRequiredResourcesForCPLDisable
{
  BOOL v3;
  _QWORD v5[4];
  BOOL v6;

  v3 = -[PLManagedAsset hasAdjustments](self, "hasAdjustments");
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __59__PLManagedAsset_RM_CPL__allRequiredResourcesForCPLDisable__block_invoke;
  v5[3] = &__block_descriptor_33_e28_B16__0__PLInternalResource_8l;
  v6 = v3;
  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", v5);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (BOOL)anyInternalResourceIsLocal
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v2);
        if ((objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * i), "isLocallyAvailable") & 1) != 0)
        {
          LOBYTE(v3) = 1;
          goto LABEL_11;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_11:

  return v3;
}

uint64_t __59__PLManagedAsset_RM_CPL__allRequiredResourcesForCPLDisable__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isCPLOriginalResourceAssetHasAdjustments:", *(unsigned __int8 *)(a1 + 32));
}

void __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _BYTE *v10;
  void *v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  id v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_msgSend(v4, "indexOfObjectPassingTest:", &__block_literal_global_94134);
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v4, "objectAtIndexedSubscript:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setRemoteAvailability:", 1);
    v7 = objc_msgSend(v4, "indexOfObjectPassingTest:", &__block_literal_global_23);
    if (v7 != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v4, "objectAtIndexedSubscript:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "fileURL");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = (_BYTE *)MEMORY[0x1E0D115D0];
      if (v9)
      {
        objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = 0;
        objc_msgSend(v11, "removeItemAtURL:error:", v9, &v16);
        v12 = v16;

        if (!*v10)
        {
          __CPLAssetsdOSLogDomain();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            v18 = v9;
            v19 = 2112;
            v20 = v12;
            _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_ERROR, "Removing %@ error: %@", buf, 0x16u);
          }

        }
      }
      if (!*v10)
      {
        __CPLAssetsdOSLogDomain();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v18 = v8;
          _os_log_impl(&dword_199541000, v14, OS_LOG_TYPE_DEFAULT, "Deleting %@", buf, 0xCu);
        }

      }
      objc_msgSend(*(id *)(a1 + 32), "managedObjectContext");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "deleteObject:", v8);

    }
  }

}

BOOL __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "resourceType") == 8;
}

BOOL __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "resourceType") == 5;
}

+ (void)_rm_copyResourceFileFrom:(id)a3 to:(id)a4 forCloudMaster:(id)a5 andAsset:(id)a6
{
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  NSObject *v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  unsigned int v31;
  void *v32;
  id v33;
  void *v34;
  int v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint8_t buf[4];
  void *v43;
  __int16 v44;
  id v45;
  __int16 v46;
  NSObject *v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v9 = a4;
  v10 = a5;
  v11 = a6;
  v12 = (void *)MEMORY[0x1E0CB3620];
  v13 = a3;
  objc_msgSend(v12, "defaultManager");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "fileURL");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v15, "path");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "fileURL");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "path");
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16
    && v18
    && objc_msgSend(v14, "fileExistsAtPath:", v16)
    && (objc_msgSend(v14, "fileExistsAtPath:", v18) & 1) == 0)
  {
    objc_msgSend(v11, "pathManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v35 = objc_msgSend(v19, "isUBF");
    if (v35)
    {
      objc_msgSend(v11, "assetID");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "originalFilenameForResourceType:filePath:", objc_msgSend(v9, "cplTypeWithAssetID:", v20), v18);
      v38 = (void *)objc_claimAutoreleasedReturnValue();

      v33 = objc_alloc(MEMORY[0x1E0D73278]);
      objc_msgSend(v11, "uuid");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = objc_msgSend(v11, "bundleScope");
      objc_msgSend(v9, "uniformTypeIdentifier");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "identifier");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = (void *)objc_msgSend(v33, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v21, v31, v22, 0, objc_msgSend(v9, "resourceType"), objc_msgSend(v9, "recipeID"), v38);

    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(v18, "stringByDeletingLastPathComponent");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v41 = 0;
    v25 = objc_msgSend(v14, "createDirectoryIfNeededAtPath:error:", v24, &v41);
    v39 = v41;
    if (v25)
    {
      v34 = v23;
      v40 = 0;
      v26 = objc_msgSend(v14, "copyItemAtPath:toPath:error:", v16, v18, &v40);
      v27 = v40;
      if (v26)
      {
        v37 = v19;
        objc_msgSend(v11, "assetID");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = objc_msgSend(v9, "cplTypeWithAssetID:", v28);

        if (v29 == 1)
          objc_msgSend(v11, "persistMetadataToFilesystem");
        v19 = v37;
        if (v35)
        {
          objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v18, 0);
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          v23 = v34;
          objc_msgSend(v37, "setExtendedAttributesWithIdentifier:andURL:", v34, v36);

          goto LABEL_24;
        }
        if (PLResourceIsOriginalNonDerivativeWithType(v9))
          objc_msgSend(v9, "persistResourceTypeToFileURL");
      }
      else if (!*MEMORY[0x1E0D115D0])
      {
        __CPLAssetsdOSLogDomain();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412802;
          v43 = v16;
          v44 = 2112;
          v45 = v18;
          v46 = 2112;
          v47 = v27;
          _os_log_impl(&dword_199541000, v30, OS_LOG_TYPE_ERROR, "Failed to copy master resource file from %@ to duplicated asset %@. Error: %@", buf, 0x20u);
        }

      }
      v23 = v34;
      goto LABEL_24;
    }
    if (*MEMORY[0x1E0D115D0])
    {
LABEL_25:

      goto LABEL_26;
    }
    __CPLAssetsdOSLogDomain();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v43 = v24;
      v44 = 2112;
      v45 = v39;
      _os_log_impl(&dword_199541000, v27, OS_LOG_TYPE_ERROR, "Failed to create directory for resource file at %@. Error: %@", buf, 0x16u);
    }
LABEL_24:

    goto LABEL_25;
  }
LABEL_26:

}

+ (void)rm_cplResourceWasUploaded:(id)a3 photoLibrary:(id)a4
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v5, "itemScopedIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLManagedAsset assetWithScopedIdentifier:inLibrary:prefetchResources:](PLManagedAsset, "assetWithScopedIdentifier:inLibrary:prefetchResources:", v8, v6, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v5, "resourceType");
  if (v9)
  {
    objc_msgSend(v9, "assetResourceForCPLType:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
      objc_msgSend(v7, "addObject:", v11);
  }
  else
  {
    +[PLCloudMaster cloudMasterWithScopedIdentifier:prefetchResources:inLibrary:](PLCloudMaster, "cloudMasterWithScopedIdentifier:prefetchResources:inLibrary:", v8, 1, v6);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v12;
    if (v12)
    {
      objc_msgSend(v12, "rm_cloudResourcesForResourceType:", v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "addObjectsFromArray:", v13);

    }
  }

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v14 = v7;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v21 != v17)
          objc_enumerationMutation(v14);
        v19 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
        if (objc_msgSend(v19, "cloudLocalState", (_QWORD)v20) != 3)
          objc_msgSend(v19, "setCloudLocalState:", 3);
        if (objc_msgSend(v19, "remoteAvailability") != 1)
          objc_msgSend(v19, "setRemoteAvailability:", 1);
      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v16);
  }

}

- (id)_persistedResourceForResourceIdentity:(id)a3 error:(id *)a4
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void (**v19)(_QWORD);
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v32;
  void *v33;
  id *v34;
  id v35;
  _QWORD v36[4];
  id v37;
  id v38;
  PLManagedAsset *v39;
  _QWORD v40[5];
  _QWORD v41[7];

  v41[5] = *MEMORY[0x1E0C80C00];
  v7 = a3;
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+RM.m"), 143, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("identity"));

  }
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (_persistedResourceForResourceIdentity_error__s_onceToken != -1)
    dispatch_once(&_persistedResourceForResourceIdentity_error__s_onceToken, &__block_literal_global_53);
  objc_msgSend(v7, "uniformTypeIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "identifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = PLFileTypeFromIdentifier(v10);

  v12 = (void *)MEMORY[0x1E0C99DE8];
  objc_msgSend(v9, "compactRepresentation");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "arrayWithObject:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    objc_msgSend(v9, "identifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(CFSTR("_"), "stringByAppendingString:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "addObject:", v16);
  }
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = __66__PLManagedAsset_RM___persistedResourceForResourceIdentity_error___block_invoke_2;
  v36[3] = &unk_1E3676FE8;
  v17 = v7;
  v37 = v17;
  v18 = v14;
  v38 = v18;
  v39 = self;
  v19 = (void (**)(_QWORD))MEMORY[0x19AEC174C](v36);
  if (-[PLManagedAsset isInserted](self, "isInserted"))
  {
    v19[2](v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else if ((-[PLManagedAsset hasFaultForRelationshipNamed:](self, "hasFaultForRelationshipNamed:", CFSTR("modernResources")) & 1) != 0|| (v19[2](v19), (v20 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    v21 = (void *)_persistedResourceForResourceIdentity_error__s_fetchPredicateTemplate;
    v40[0] = CFSTR("ASSET");
    -[PLManagedAsset objectID](self, "objectID");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v41[0] = v33;
    v40[1] = CFSTR("RESOURCE_TYPE");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(v17, "resourceType"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v41[1] = v22;
    v40[2] = CFSTR("VERSION");
    v34 = a4;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(v17, "version"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v41[2] = v23;
    v40[3] = CFSTR("RECIPEID");
    v24 = v8;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(v17, "recipeID"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v40[4] = CFSTR("UTIS");
    v41[3] = v25;
    v41[4] = v18;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v41, v40, 5);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "predicateWithSubstitutionVariables:", v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = v24;
    +[PLInternalResource fetchRequest](PLInternalResource, "fetchRequest");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setPredicate:", v27);
    v35 = 0;
    objc_msgSend(v8, "executeFetchRequest:error:", v28, &v35);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = v35;
    objc_msgSend(v29, "firstObject");
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    if (v34 && v30)
      *v34 = objc_retainAutorelease(v30);

  }
  return v20;
}

- (id)_anyOriginalNonDerivativeAlternateImageResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_76_98762);
}

- (id)virtualResourcesThatReplaceMissingPersistedResources:(id)a3
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  PLFullSizeRenderImageVirtualResource *v15;
  PLFullSizeRenderVideoComplementVirtualResource *v16;
  PLFullSizeRenderVideoVirtualResource *v17;
  PLManagedAsset *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    objc_msgSend(MEMORY[0x1E0D73310], "maskForAssetsAllowingVirtualFullSizeRender");
    -[PLManagedAsset savedAssetType](self, "savedAssetType");
    if (PLValidatedSavedAssetTypeApplies())
    {
      v19 = self;
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v6 = v4;
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v7)
      {
        v8 = v7;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = *(_QWORD *)v21;
        do
        {
          for (i = 0; i != v8; ++i)
          {
            if (*(_QWORD *)v21 != v12)
              objc_enumerationMutation(v6);
            v14 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
            if (objc_msgSend(v14, "recipeID") == 65938)
            {
              v11 = 1;
            }
            else if (objc_msgSend(v14, "recipeID") == 131272)
            {
              v10 = 1;
            }
            else
            {
              v9 |= objc_msgSend(v14, "recipeID") == 0x20000;
            }
          }
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
        }
        while (v8);
      }
      else
      {
        v9 = 0;
        v10 = 0;
        v11 = 0;
      }

      if (-[PLManagedAsset isPhoto](v19, "isPhoto") && (v11 & 1) == 0)
      {
        v15 = -[PLFullSizeRenderImageVirtualResource initWithAsset:]([PLFullSizeRenderImageVirtualResource alloc], "initWithAsset:", v19);
        objc_msgSend(v5, "addObject:", v15);

      }
      if (-[PLManagedAsset isPhotoIris](v19, "isPhotoIris")
        && !((-[PLManagedAsset playbackStyle](v19, "playbackStyle") == 1) | v10 & 1)
        && !+[PLManagedAsset isPhotoIrisPlaceholderWithPhotoIris:videoCpDuration:isCloudShared:videoCpFilePath:](PLManagedAsset, "isPhotoIrisPlaceholderWithPhotoIris:videoCpDuration:isCloudShared:videoCpFilePath:", 1, -[PLManagedAsset videoCpDurationValue](v19, "videoCpDurationValue"), -[PLManagedAsset isCloudSharedAsset](v19, "isCloudSharedAsset"), 0))
      {
        v16 = -[PLFullSizeRenderVideoComplementVirtualResource initWithAsset:]([PLFullSizeRenderVideoComplementVirtualResource alloc], "initWithAsset:", v19);
        objc_msgSend(v5, "addObject:", v16);

      }
      if (-[PLManagedAsset isVideo](v19, "isVideo")
        && !(v9 & 1 | !-[PLManagedAsset hasNonSlomoAdjustments](v19, "hasNonSlomoAdjustments")))
      {
        v17 = -[PLFullSizeRenderVideoVirtualResource initWithAsset:]([PLFullSizeRenderVideoVirtualResource alloc], "initWithAsset:", v19);
        objc_msgSend(v5, "addObject:", v17);

      }
    }
  }

  return v5;
}

- (id)validateForAssetID:(id)a3 resourceIdentity:(id)a4
{
  void *v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t i;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  int v26;
  _BOOL4 v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t k;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _BOOL4 v56;
  BOOL v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  id v75;
  int v76;
  uint64_t v77;
  char obj;
  id obja;
  uint64_t v80;
  uint64_t v81;
  char v82;
  id v83;
  _BOOL4 v84;
  PLManagedAsset *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  id v106;
  _BYTE v107[128];
  _BYTE v108[128];
  _QWORD v109[2];
  _QWORD v110[2];
  _BYTE v111[128];
  _BYTE v112[128];
  _BYTE v113[128];
  uint64_t v114;

  v114 = *MEMORY[0x1E0C80C00];
  v73 = a3;
  v72 = a4;
  v106 = 0;
  -[PLManagedAsset fetchResourcesForAssetVersions:allowDerivatives:additionalPredicate:relationshipKeyPathsForPrefetching:error:](self, "fetchResourcesForAssetVersions:allowDerivatives:additionalPredicate:relationshipKeyPathsForPrefetching:error:", 0, 1, 0, 0, &v106);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = v106;
  v75 = objc_alloc_init(MEMORY[0x1E0CB3550]);
  v84 = -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset");
  v102 = 0u;
  v103 = 0u;
  v104 = 0u;
  v105 = 0u;
  v7 = v6;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v102, v113, 16);
  if (v8)
  {
    v9 = 0;
    v76 = 0;
    obj = 0;
    v82 = 0;
    v10 = 0;
    v11 = *(_QWORD *)v103;
    v12 = (void *)MEMORY[0x1E0C9AA60];
    while (1)
    {
      v13 = v7;
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v103 != v11)
          objc_enumerationMutation(v13);
        v15 = *(void **)(*((_QWORD *)&v102 + 1) + 8 * i);
        if (v84)
        {
          if (-[PLManagedAsset isVideo](self, "isVideo") && objc_msgSend(v15, "dataStoreSubtype") == 5
            || !-[PLManagedAsset isVideo](self, "isVideo", v71) && objc_msgSend(v15, "dataStoreSubtype") == 3)
          {
            v10 = 1;
          }
        }
        else
        {
          v10 |= objc_msgSend(v15, "cplType", v71) == 1;
        }
        if (!objc_msgSend(v15, "resourceType", v71)
          && (!objc_msgSend(v15, "isDerivative") || -[PLManagedAsset kind](self, "kind")))
        {
          if (objc_msgSend(v15, "version") == 2 && !objc_msgSend(v15, "isDerivative"))
          {
            obj = 1;
          }
          else if (!objc_msgSend(v15, "version")
                 && (objc_msgSend(v15, "recipeID") == 65943
                  || objc_msgSend(v15, "recipeID") == 65951))
          {
            v16 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
            if (v16 == 10 || v16 == 1)
            {
              +[PLResourceModelValidationError unexpectedLocalResourceError:](PLResourceModelValidationError, "unexpectedLocalResourceError:", v15);
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v12, "arrayByAddingObject:", v17);
              v80 = objc_claimAutoreleasedReturnValue();

              v76 = 1;
              v82 = 1;
              v12 = (void *)v80;
              goto LABEL_28;
            }
            v76 = 1;
          }
          v82 = 1;
        }
LABEL_28:
        v9 |= objc_msgSend(v15, "resourceType") == 3;
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v15, "cplType"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v75, "addObject:", v18);

      }
      v7 = v13;
      v8 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v102, v113, 16);
      if (!v8)
      {

        LODWORD(v8) = v76;
        v19 = v82;
        if ((v10 & 1) != 0)
          goto LABEL_34;
        goto LABEL_33;
      }
    }
  }

  v19 = 0;
  obj = 0;
  v9 = 0;
  v12 = (void *)MEMORY[0x1E0C9AA60];
LABEL_33:
  +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:message:](PLResourceModelValidationError, "missingRequiredResourcesErrorForAsset:message:", self, CFSTR("Missing original resource."), v71);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "arrayByAddingObject:", v20);
  v21 = objc_claimAutoreleasedReturnValue();

  v12 = (void *)v21;
LABEL_34:
  if (-[PLManagedAsset kind](self, "kind") == 1
    && !((-[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded") != 0) | v19 & 1))
  {
    +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:message:](PLResourceModelValidationError, "missingRequiredResourcesErrorForAsset:message:", self, CFSTR("Video asset missing its image resource."));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "arrayByAddingObject:", v22);
    v23 = objc_claimAutoreleasedReturnValue();

    v12 = (void *)v23;
  }
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments")
    && !-[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded")
    && !((-[PLManagedAsset kind](self, "kind") != 0) | obj & 1))
  {
    +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:message:](PLResourceModelValidationError, "missingRequiredResourcesErrorForAsset:message:", self, CFSTR("Adjusted image asset missing its full size render resource."));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "arrayByAddingObject:", v24);
    v25 = objc_claimAutoreleasedReturnValue();

    v12 = (void *)v25;
  }
  v26 = -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded");
  v28 = v26 != 10 && v26 != 1;
  if (((v28 | v8) & 1) == 0)
  {
    +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:message:](PLResourceModelValidationError, "missingRequiredResourcesErrorForAsset:message:", self, CFSTR("Asset in deferred processing via capture pipline state missing its preview image resource."));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "arrayByAddingObject:", v29);
    v30 = objc_claimAutoreleasedReturnValue();

    v12 = (void *)v30;
  }
  if (!(v9 & 1 | !-[PLManagedAsset isPhotoIris](self, "isPhotoIris")))
  {
    +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:message:](PLResourceModelValidationError, "missingRequiredResourcesErrorForAsset:message:", self, CFSTR("Live photo with missing video complement resource."));
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "arrayByAddingObject:", v31);
    v32 = objc_claimAutoreleasedReturnValue();

    v12 = (void *)v32;
  }
  v100 = 0u;
  v101 = 0u;
  v98 = 0u;
  v99 = 0u;
  obja = v7;
  v85 = self;
  v77 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v98, v112, 16);
  if (v77)
  {
    v74 = *(_QWORD *)v99;
    v33 = (void *)MEMORY[0x1E0C9AA60];
    do
    {
      v34 = 0;
      do
      {
        if (*(_QWORD *)v99 != v74)
          objc_enumerationMutation(obja);
        v81 = v34;
        v35 = *(void **)(*((_QWORD *)&v98 + 1) + 8 * v34);
        v94 = 0u;
        v95 = 0u;
        v96 = 0u;
        v97 = 0u;
        v36 = obja;
        v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v94, v111, 16);
        if (v37)
        {
          v38 = v37;
          v39 = *(_QWORD *)v95;
          v83 = v36;
          do
          {
            for (j = 0; j != v38; ++j)
            {
              if (*(_QWORD *)v95 != v39)
                objc_enumerationMutation(v36);
              v41 = *(void **)(*((_QWORD *)&v94 + 1) + 8 * j);
              if (v35 != v41
                && (objc_msgSend(v33, "containsObject:", *(_QWORD *)(*((_QWORD *)&v94 + 1) + 8 * j)) & 1) == 0
                && PLResourceIdentityIsEqual(v35, v41))
              {
                v110[0] = v35;
                v110[1] = v41;
                objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v110, 2);
                v42 = (void *)objc_claimAutoreleasedReturnValue();
                +[PLResourceModelValidationError duplicateResourceErrorAmongResources:forAsset:](PLResourceModelValidationError, "duplicateResourceErrorAmongResources:forAsset:", v42, v85);
                v43 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v12, "arrayByAddingObject:", v43);
                v44 = objc_claimAutoreleasedReturnValue();

                v109[0] = v35;
                v109[1] = v41;
                objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v109, 2);
                v45 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v33, "arrayByAddingObjectsFromArray:", v45);
                v46 = objc_claimAutoreleasedReturnValue();

                v36 = v83;
                v33 = (void *)v46;
                v12 = (void *)v44;
              }
            }
            v38 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v94, v111, 16);
          }
          while (v38);
        }

        v34 = v81 + 1;
      }
      while (v81 + 1 != v77);
      v77 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v98, v112, 16);
    }
    while (v77);
  }
  else
  {
    v33 = (void *)MEMORY[0x1E0C9AA60];
  }

  v92 = 0u;
  v93 = 0u;
  v90 = 0u;
  v91 = 0u;
  v47 = v75;
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v90, v108, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v91;
    do
    {
      for (k = 0; k != v49; ++k)
      {
        if (*(_QWORD *)v91 != v50)
          objc_enumerationMutation(v47);
        v52 = *(void **)(*((_QWORD *)&v90 + 1) + 8 * k);
        v53 = objc_msgSend(v52, "integerValue");
        if (v53)
        {
          v54 = v53;
          v55 = objc_msgSend(v47, "countForObject:", v52);
          v56 = -[PLManagedAsset hasAdjustments](v85, "hasAdjustments");
          v57 = v54 > 0x1C || ((1 << v54) & 0x102104FC) == 0;
          v58 = 2;
          if (v57)
            v58 = 1;
          if (!v56)
            v58 = 1;
          if (v55 > v58)
          {
            +[PLResourceModelValidationError duplicatedCPLTypeAssetErrorForAsset:cplType:](PLResourceModelValidationError, "duplicatedCPLTypeAssetErrorForAsset:cplType:", v85, v54);
            v59 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "arrayByAddingObject:", v59);
            v60 = objc_claimAutoreleasedReturnValue();

            v12 = (void *)v60;
          }
        }
      }
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v90, v108, 16);
    }
    while (v49);
  }

  v88 = 0u;
  v89 = 0u;
  v86 = 0u;
  v87 = 0u;
  v61 = obja;
  v62 = objc_msgSend(v61, "countByEnumeratingWithState:objects:count:", &v86, v107, 16);
  if (v62)
  {
    v63 = v62;
    v64 = *(_QWORD *)v87;
    v65 = v73;
    do
    {
      v66 = 0;
      v67 = v12;
      do
      {
        if (*(_QWORD *)v87 != v64)
          objc_enumerationMutation(v61);
        objc_msgSend(*(id *)(*((_QWORD *)&v86 + 1) + 8 * v66), "validateForAssetID:resourceIdentity:", v73, *(_QWORD *)(*((_QWORD *)&v86 + 1) + 8 * v66));
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v67, "arrayByAddingObjectsFromArray:", v68);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        ++v66;
        v67 = v12;
      }
      while (v63 != v66);
      v63 = objc_msgSend(v61, "countByEnumeratingWithState:objects:count:", &v86, v107, 16);
    }
    while (v63);
  }
  else
  {
    v65 = v73;
  }

  v69 = v12;
  return v69;
}

- (BOOL)imageRequestHintsContainsResource:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int64_t v7;
  int64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v14[5];
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;

  v4 = a3;
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 0;
  v5 = (void *)objc_opt_class();
  -[PLManagedAsset imageRequestHints](self, "imageRequestHints");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = -[PLManagedAsset width](self, "width");
  v8 = -[PLManagedAsset height](self, "height");
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "libraryID");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset assetID](self, "assetID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __56__PLManagedAsset_RM__imageRequestHintsContainsResource___block_invoke;
  v14[3] = &unk_1E36770A0;
  v14[4] = self;
  v12 = v4;
  v15 = v12;
  v16 = &v17;
  objc_msgSend(v5, "enumerateImageRequestHintData:assetWidth:assetHeight:libraryID:startingOffset:assetID:block:", v6, v7, v8, v10, 0, v11, v14);

  LOBYTE(v6) = *((_BYTE *)v18 + 24);
  _Block_object_dispose(&v17, 8);

  return (char)v6;
}

- (void)recalculateImageRequestHints
{
  NSObject *v3;
  os_signpost_id_t v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  int v17;
  void *v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  PLImageManagerGetLog();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_signpost_id_make_with_pointer(v3, self);
  v5 = v3;
  v6 = v5;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    LOWORD(v17) = 0;
    _os_signpost_emit_with_name_impl(&dword_199541000, v6, OS_SIGNPOST_INTERVAL_BEGIN, v4, "ResourceModel", "RecalulateImageRequestHints", (uint8_t *)&v17, 2u);
  }

  v7 = (void *)objc_opt_class();
  -[PLManagedAsset resourcesSortedByQuality](self, "resourcesSortedByQuality");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "calculateImageRequestHintsFromSortedResources:asset:", v8, self);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLManagedAsset imageRequestHints](self, "imageRequestHints");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v9, "isEqualToData:", v10);

  if ((v11 & 1) == 0)
  {
    PLImageManagerGetLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      -[PLManagedAsset uuid](self, "uuid");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v9, "length");
      v17 = 138412546;
      v18 = v13;
      v19 = 2048;
      v20 = v14;
      _os_log_impl(&dword_199541000, v12, OS_LOG_TYPE_DEBUG, "[RM]: Recalculated image request hints for %@, length = %ld", (uint8_t *)&v17, 0x16u);

    }
    -[PLManagedAsset setImageRequestHints:](self, "setImageRequestHints:", v9);
  }
  v15 = v6;
  v16 = v15;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v15))
  {
    LOWORD(v17) = 0;
    _os_signpost_emit_with_name_impl(&dword_199541000, v16, OS_SIGNPOST_INTERVAL_END, v4, "ResourceModel", "RecalulateImageRequestHints", (uint8_t *)&v17, 2u);
  }

}

- (void)insertTableThumbImageRequestHints
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  -[PLManagedObject photoLibrary](self, "photoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "libraryID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  PLDataStoreForClassIDAndLibraryID(1, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "virtualResourcesForAsset:", self);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        -[PLManagedAsset recalculateImageRequestHintsForResource:afterLocalAvailabilityChangeFrom:previousDataStoreKey:](self, "recalculateImageRequestHintsForResource:afterLocalAvailabilityChangeFrom:previousDataStoreKey:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v10++), 0xFFFFFFFFLL, 0);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v8);
  }

}

- (void)recalculateImageRequestHintsForResource:(id)a3 afterLocalAvailabilityChangeFrom:(signed __int16)a4 previousDataStoreKey:(id)a5
{
  int v6;
  id v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  id v14;
  void *v15;
  void *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  float v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  int64_t v27;
  int64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  NSObject *v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  _QWORD v39[4];
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t *v44;
  float v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t buf[4];
  uint64_t v51;
  _QWORD v52[3];

  v6 = a4;
  v52[1] = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v37 = a5;
  if (!v9)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+RM.m"), 766, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("resource"));

  }
  v46 = 0;
  v47 = &v46;
  v48 = 0x2020000000;
  v49 = 0;
  v10 = objc_msgSend(v9, "localAvailability");
  if (v6 > 1 || v10 < 1)
  {
    v13 = objc_msgSend(v9, "localAvailability");
    v11 = v47;
    if (v6 < 1 || (v13 & 0x80000000) == 0)
    {
      if (!v47[3])
        goto LABEL_22;
      goto LABEL_10;
    }
    v12 = 2;
  }
  else
  {
    v11 = v47;
    v12 = 1;
  }
  v11[3] = v12;
LABEL_10:
  v14 = objc_alloc(MEMORY[0x1E0C99DF0]);
  -[PLManagedAsset imageRequestHints](self, "imageRequestHints");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend(v14, "initWithCapacity:", objc_msgSend(v15, "length"));

  v17 = -[PLManagedAsset width](self, "width");
  if (-[PLManagedAsset height](self, "height") * v17 < 1)
  {
    v21 = 0.0;
  }
  else
  {
    v18 = objc_msgSend(v9, "unorientedWidth");
    v19 = objc_msgSend(v9, "unorientedHeight");
    v20 = -[PLManagedAsset width](self, "width");
    v21 = (float)(v19 * v18) / (float)(-[PLManagedAsset height](self, "height") * v20);
  }
  v38 = v9;
  if (PLCanIncludeResourceInHints(v9, self))
  {
    v22 = (void *)objc_opt_class();
    v52[0] = v9;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v52, 1);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "calculateImageRequestHintsFromSortedResources:asset:", v23, self);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v24 = 0;
  }
  v25 = (void *)objc_opt_class();
  -[PLManagedAsset imageRequestHints](self, "imageRequestHints");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = -[PLManagedAsset width](self, "width");
  v28 = -[PLManagedAsset height](self, "height");
  -[PLManagedAsset assetID](self, "assetID");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "libraryID");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset assetID](self, "assetID");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v39[0] = MEMORY[0x1E0C809B0];
  v39[1] = 3221225472;
  v39[2] = __116__PLManagedAsset_RM__recalculateImageRequestHintsForResource_afterLocalAvailabilityChangeFrom_previousDataStoreKey___block_invoke;
  v39[3] = &unk_1E36770C8;
  v45 = v21;
  v40 = v38;
  v44 = &v46;
  v41 = v37;
  v32 = v24;
  v42 = v32;
  v33 = v16;
  v43 = v33;
  objc_msgSend(v25, "enumerateImageRequestHintData:assetWidth:assetHeight:libraryID:startingOffset:assetID:block:", v26, v27, v28, v30, 0, v31, v39);

  if (v47[3] == 1 && v32)
    objc_msgSend(v33, "appendData:", v32);
  -[PLManagedAsset setImageRequestHints:](self, "setImageRequestHints:", v33);
  PLImageManagerGetLog();
  v34 = objc_claimAutoreleasedReturnValue();
  v9 = v38;
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
  {
    v35 = objc_msgSend(v33, "length");
    *(_DWORD *)buf = 134217984;
    v51 = v35;
    _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_DEBUG, "[RM]: Inserted/removed imageRequestHint, length = %ld", buf, 0xCu);
  }

LABEL_22:
  _Block_object_dispose(&v46, 8);

}

- (id)mediaMetadataVirtualResources
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  PLMediaMetadataVirtualResource *v7;
  void *v8;
  void *v9;
  void *v10;
  PLMediaMetadataVirtualResource *v11;
  void *v12;
  void *v13;
  void *v14;
  PLMediaMetadataVirtualResource *v15;
  void *v16;
  void *v17;
  void *v18;
  PLMediaMetadataVirtualResource *v19;

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[PLManagedAsset master](self, "master");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "mediaMetadata");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    v7 = [PLMediaMetadataVirtualResource alloc];
    -[PLManagedAsset master](self, "master");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "mediaMetadata");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PLMediaMetadataVirtualResource initWithAsset:resourceType:version:recipeID:dataLength:](v7, "initWithAsset:resourceType:version:recipeID:dataLength:", self, 9, 0, 327685, objc_msgSend(v10, "length"));

    objc_msgSend(v3, "addObject:", v11);
  }
  if (-[PLManagedAsset hasAdjustments](self, "hasAdjustments"))
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "mediaMetadata");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "data");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      v15 = [PLMediaMetadataVirtualResource alloc];
      -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "mediaMetadata");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "data");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = -[PLMediaMetadataVirtualResource initWithAsset:resourceType:version:recipeID:dataLength:](v15, "initWithAsset:resourceType:version:recipeID:dataLength:", self, 9, 2, 327685, objc_msgSend(v18, "length"));

      objc_msgSend(v3, "addObject:", v19);
    }
  }
  return v3;
}

- (id)nonPersistedResources
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 5);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  -[PLManagedAsset assetID](self, "assetID", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "libraryID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceDataStoreManager storesForLibraryID:](PLResourceDataStoreManager, "storesForLibraryID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v14;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v10), "virtualResourcesForAsset:", self);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "addObjectsFromArray:", v11);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }

  return v3;
}

- (id)masterThumbnailResource
{
  void *v2;
  uint64_t v3;
  void *v4;

  -[PLManagedAsset nonPersistedResources](self, "nonPersistedResources");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "indexOfObjectPassingTest:", &__block_literal_global_113);
  if (v3 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v4 = 0;
  }
  else
  {
    objc_msgSend(v2, "objectAtIndex:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v4;
}

- (id)masterThumbnailFileURLIfLocal
{
  void *v2;
  void *v3;

  -[PLManagedAsset masterThumbnailResource](self, "masterThumbnailResource");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fileURL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)resourcesSortedByQuality
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if (resourcesSortedByQuality_s_onceToken != -1)
    dispatch_once(&resourcesSortedByQuality_s_onceToken, &__block_literal_global_115_98734);
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset modernResources](self, "modernResources");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "allObjects");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObjectsFromArray:", v5);

  -[PLManagedAsset nonPersistedResources](self, "nonPersistedResources");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObjectsFromArray:", v6);

  objc_msgSend(v3, "sortUsingDescriptors:", resourcesSortedByQuality_s_sortDescriptors);
  return v3;
}

- (id)fetchResourcesForAssetVersions:(id)a3 allowDerivatives:(BOOL)a4 additionalPredicate:(id)a5 relationshipKeyPathsForPrefetching:(id)a6 error:(id *)a7
{
  _BOOL8 v9;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v9 = a4;
  v12 = a6;
  v13 = a5;
  v14 = a3;
  v15 = (void *)objc_opt_class();
  -[PLManagedAsset objectID](self, "objectID");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "fetchResourcesForAssetWithObjectID:inContext:versions:includeVirtualResources:allowDerivatives:excludeDynamicCPLResources:additionalPredicate:relationshipKeyPathsForPrefetching:error:", v16, v17, v14, 1, v9, 0, v13, v12, a7);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

- (id)allFileBackedResources
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[PLManagedAsset modernResources](self, "modernResources");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "allObjects");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObjectsFromArray:", v5);

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[PLManagedAsset nonPersistedResources](self, "nonPersistedResources", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
        if ((~objc_msgSend(v11, "recipeID") & 0x30000) != 0)
          objc_msgSend(v3, "addObject:", v11);
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }

  return v3;
}

- (id)persistedResourcesMatching:(id)a3
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v12;
  _QWORD v13[4];
  id v14;

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+RM.m"), 1025, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("filterBlock"));

  }
  v6 = (void *)MEMORY[0x1E0CB3880];
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __49__PLManagedAsset_RM__persistedResourcesMatching___block_invoke;
  v13[3] = &unk_1E3677150;
  v14 = v5;
  v7 = v5;
  objc_msgSend(v6, "predicateWithBlock:", v13);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset modernResources](self, "modernResources");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "filteredSetUsingPredicate:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

- (id)firstPersistedResourceMatching:(id)a3
{
  unsigned int (**v5)(id, void *);
  void *v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = (unsigned int (**)(id, void *))a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+RM.m"), 1036, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("filterBlock"));

  }
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[PLManagedAsset modernResources](self, "modernResources");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (id)objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        if (v5[2](v5, v10))
        {
          v7 = v10;
          goto LABEL_13;
        }
      }
      v7 = (id)objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v7)
        continue;
      break;
    }
  }
LABEL_13:

  return v7;
}

- (id)persistedOriginalImageResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_130);
}

- (id)persistedOriginalVideoResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_131_98730);
}

- (id)persistedOriginalVideoComplementResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_132_98729);
}

- (id)fetchResourceWithIdentity:(id)a3 error:(id *)a4
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v12;
  id v13;

  v7 = a3;
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+RM.m"), 1070, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("identity"));

  }
  v13 = 0;
  -[PLManagedAsset _persistedResourceForResourceIdentity:error:](self, "_persistedResourceForResourceIdentity:error:", v7, &v13);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v13;
  v10 = v9;
  if (a4 && !v8 && v9)
    *a4 = objc_retainAutorelease(v9);

  return v8;
}

- (id)fetchOrCreateResourceWithIdentity:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v10;

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("PLManagedAsset+RM.m"), 1084, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("identity"));

  }
  -[PLManagedAsset fetchResourceWithIdentity:error:](self, "fetchResourceWithIdentity:error:", v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v6)
  {
    -[PLManagedAsset managedObjectContext](self, "managedObjectContext");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset objectID](self, "objectID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLInternalResource insertResourceForAssetObjectID:resourceIdentity:inManagedObjectContext:](PLInternalResource, "insertResourceForAssetObjectID:resourceIdentity:inManagedObjectContext:", v8, v5, v7);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

- (id)persistedAdjustedResources
{
  return -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", &__block_literal_global_133_98722);
}

- (id)resourcesWithVersion:(unsigned int)a3
{
  _QWORD v4[4];
  unsigned int v5;

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __43__PLManagedAsset_RM__resourcesWithVersion___block_invoke;
  v4[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  v5 = a3;
  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)persistedResourcesWithRecipeID:(unsigned int)a3 andVersion:(unsigned int)a4
{
  _QWORD v5[4];
  unsigned int v6;
  unsigned int v7;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __64__PLManagedAsset_RM__persistedResourcesWithRecipeID_andVersion___block_invoke;
  v5[3] = &__block_descriptor_40_e28_B16__0__PLInternalResource_8l;
  v6 = a3;
  v7 = a4;
  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", v5);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)primaryStoreOriginalResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_135_98721);
}

- (id)adjustmentDataResource
{
  void *v3;
  void *v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("resourceType"), &unk_1E3760F50);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedAsset fetchResourcesForAssetVersions:allowDerivatives:additionalPredicate:relationshipKeyPathsForPrefetching:error:](self, "fetchResourcesForAssetVersions:allowDerivatives:additionalPredicate:relationshipKeyPathsForPrefetching:error:", &unk_1E3764190, 0, v3, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)overflowAdjustmentDataResource
{
  return -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_142);
}

- (id)penultimateImageResource
{
  void *v2;
  void *v3;

  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", &__block_literal_global_143_98714);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "anyObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)localVideoKeyFrameResource
{
  void *v2;
  void *v3;

  -[PLManagedAsset persistedResourcesMatching:](self, "persistedResourcesMatching:", &__block_literal_global_144);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "anyObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (void)deleteAdjustedResources
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  NSObject *v9;
  void *v10;
  unsigned int v11;
  __CFString *v12;
  __CFString *v13;
  void *v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  __CFString *v24;
  __int16 v25;
  void *v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset persistedAdjustedResources](self, "persistedAdjustedResources");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "count"))
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    v15 = v2;
    v3 = v2;
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v27, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v18;
      do
      {
        for (i = 0; i != v5; ++i)
        {
          if (*(_QWORD *)v18 != v6)
            objc_enumerationMutation(v3);
          v8 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
          PLImageManagerGetLog();
          v9 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            -[PLManagedAsset uuid](self, "uuid");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            v11 = objc_msgSend(v8, "resourceType");
            v12 = CFSTR("invalid");
            if (v11 <= 0x1F)
              v12 = off_1E3662240[v11];
            v13 = v12;
            +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", objc_msgSend(v8, "recipeID"));
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412802;
            v22 = v10;
            v23 = 2114;
            v24 = v13;
            v25 = 2114;
            v26 = v14;
            _os_log_impl(&dword_199541000, v9, OS_LOG_TYPE_DEFAULT, "Deleting adjusted resource row for asset %{pubic}@, type: %{public}@, recipe: %{public}@", buf, 0x20u);

          }
          objc_msgSend(v8, "deleteResource");
        }
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v27, 16);
      }
      while (v5);
    }

    v2 = v15;
  }

}

- (void)deleteResourcesWithRecipeID:(unsigned int)a3 andVersion:(unsigned int)a4
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  -[PLManagedAsset persistedResourcesWithRecipeID:andVersion:](self, "persistedResourcesWithRecipeID:andVersion:", *(_QWORD *)&a3, *(_QWORD *)&a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v10;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * v8++), "deleteResource");
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v6);
  }

}

- (void)deleteResourceForSidecarRepresentation:(id)a3
{
  id v3;

  if (a3)
  {
    objc_msgSend(a3, "resource");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "deleteResource");

  }
}

- (BOOL)resetVideoKeyFrameTimeAndDeleteKeyFrameResource
{
  BOOL v3;
  BOOL v4;
  void *v5;
  void *v6;

  v3 = -[PLManagedAsset resetVideoKeyFrameTime](self, "resetVideoKeyFrameTime");
  v4 = -[PLManagedAsset pruneLocalVideoKeyFrameImage](self, "pruneLocalVideoKeyFrameImage");
  -[PLManagedAsset localVideoKeyFrameResource](self, "localVideoKeyFrameResource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
    return v4 || v3;
  -[PLManagedAsset localVideoKeyFrameResource](self, "localVideoKeyFrameResource");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "deleteResource");

  return 1;
}

- (BOOL)pruneLocalVideoKeyFrameImage
{
  int v3;
  void *v4;
  void *v5;
  char v6;
  id v7;
  NSObject *v8;
  void *v9;
  int v10;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = -[PLManagedAsset isVideo](self, "isVideo");
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLManagedAsset pathForLocalVideoKeyFrame](self, "pathForLocalVideoKeyFrame");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 0;
    v6 = objc_msgSend(v4, "removeItemAtPath:error:", v5, &v12);
    v7 = v12;

    if ((v6 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
    {
      PLBackendGetLog();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v7;
        _os_log_impl(&dword_199541000, v8, OS_LOG_TYPE_ERROR, "Error removing local video key frame: %@", buf, 0xCu);
      }

    }
    -[PLManagedAsset localVideoKeyFrameResource](self, "localVideoKeyFrameResource");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "isLocallyAvailable");
    if (v10)
      objc_msgSend(v9, "markAsNotLocallyAvailable");

    LOBYTE(v3) = v6 | v10;
  }
  return v3;
}

- (BOOL)isRAWOnly
{
  void *v2;
  void *v3;
  char v4;

  -[PLManagedAsset primaryStoreOriginalResource](self, "primaryStoreOriginalResource");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "uniformTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "conformsToRawImage");

  return v4;
}

- (BOOL)isRAWPlusJPEG
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;

  -[PLManagedAsset primaryStoreOriginalResource](self, "primaryStoreOriginalResource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "uniformTypeIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "isPrimaryImageFormat"))
  {
    -[PLManagedAsset _anyOriginalNonDerivativeAlternateImageResource](self, "_anyOriginalNonDerivativeAlternateImageResource");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "uniformTypeIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "conformsToRawImage");

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (BOOL)isRAWPlusJPEGWithRAWOnTop
{
  void *v3;
  void *v4;
  BOOL v5;

  if (!-[PLManagedAsset isRAWPlusJPEG](self, "isRAWPlusJPEG"))
    return 0;
  -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "originalResourceChoice");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "unsignedIntegerValue") == 1;

  return v5;
}

- (id)mediaMetadataForResourceVersion:(unsigned int)a3 mediaMetadataType:(id *)a4
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (a3 == 2)
  {
    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "mediaMetadata");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset additionalAttributes](self, "additionalAttributes");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a3)
    {
      PLImageManagerGetLog();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        v17 = 134217984;
        v18 = a3;
        _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "[RM]: Invalid resource version for media metadata: %ld", (uint8_t *)&v17, 0xCu);
      }
      v9 = 0;
      goto LABEL_12;
    }
    -[PLManagedAsset master](self, "master");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "mediaMetadata");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    -[PLManagedAsset master](self, "master");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v13 = v10;
  objc_msgSend(v10, "mediaMetadataType");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9 && !v14)
  {
    PLImageManagerGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      v17 = 134217984;
      v18 = a3;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "[RM]: Media metadata with version: %ld has no type string", (uint8_t *)&v17, 0xCu);
    }
LABEL_12:

    v14 = 0;
  }
  if (a4)
    *a4 = objc_retainAutorelease(v14);

  return v9;
}

- (BOOL)installExistingWallpaperComputeResourcesFileAtPath:(id)a3 error:(id *)a4
{
  id v6;
  void *v7;
  id v8;
  _QWORD v10[4];
  id v11;
  PLManagedAsset *v12;

  v6 = a3;
  -[PLManagedAsset pathForWallpaperComputeResourcesFile](self, "pathForWallpaperComputeResourcesFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __79__PLManagedAsset_RM__installExistingWallpaperComputeResourcesFileAtPath_error___block_invoke;
  v10[3] = &unk_1E3677258;
  v11 = v7;
  v12 = self;
  v8 = v7;
  LOBYTE(a4) = -[PLManagedAsset _installExistingPurgeableResourceAtPath:dstPath:error:installResourceHandler:](self, "_installExistingPurgeableResourceAtPath:dstPath:error:installResourceHandler:", v6, v8, a4, v10);

  return (char)a4;
}

- (BOOL)installExistingAlchemistImageAtPath:(id)a3 error:(id *)a4
{
  id v6;
  void *v7;
  id v8;
  _QWORD v10[4];
  id v11;
  PLManagedAsset *v12;

  v6 = a3;
  -[PLManagedAsset pathForAlchemistImage](self, "pathForAlchemistImage");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __64__PLManagedAsset_RM__installExistingAlchemistImageAtPath_error___block_invoke;
  v10[3] = &unk_1E3677258;
  v11 = v7;
  v12 = self;
  v8 = v7;
  LOBYTE(a4) = -[PLManagedAsset _installExistingPurgeableResourceAtPath:dstPath:error:installResourceHandler:](self, "_installExistingPurgeableResourceAtPath:dstPath:error:installResourceHandler:", v6, v8, a4, v10);

  return (char)a4;
}

- (BOOL)installExistingGenerativePlaygroundFaceResourcesFileAtPath:(id)a3 error:(id *)a4
{
  id v6;
  void *v7;
  id v8;
  _QWORD v10[4];
  id v11;
  PLManagedAsset *v12;

  v6 = a3;
  -[PLManagedAsset pathForGenerativePlaygroundFaceResourcesFile](self, "pathForGenerativePlaygroundFaceResourcesFile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __87__PLManagedAsset_RM__installExistingGenerativePlaygroundFaceResourcesFileAtPath_error___block_invoke;
  v10[3] = &unk_1E3677258;
  v11 = v7;
  v12 = self;
  v8 = v7;
  LOBYTE(a4) = -[PLManagedAsset _installExistingPurgeableResourceAtPath:dstPath:error:installResourceHandler:](self, "_installExistingPurgeableResourceAtPath:dstPath:error:installResourceHandler:", v6, v8, a4, v10);

  return (char)a4;
}

- (BOOL)_installExistingPurgeableResourceAtPath:(id)a3 dstPath:(id)a4 error:(id *)a5 installResourceHandler:(id)a6
{
  id v9;
  id v10;
  void (**v11)(_QWORD);
  void *v12;
  char v13;
  id v14;
  NSObject *v15;
  void (**v16)(_QWORD);
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL4 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  BOOL v30;
  void *v31;
  NSObject *v32;
  id v33;
  NSObject *v34;
  void *v35;
  char v36;
  id v37;
  _QWORD *v38;
  NSObject *v39;
  id v40;
  _QWORD *v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint8_t buf[4];
  id v50;
  __int16 v51;
  id v52;
  __int16 v53;
  id v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = (void (**)(_QWORD))a6;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = 0;
  v13 = objc_msgSend(v12, "removeItemAtPath:error:", v10, &v48);
  v14 = v48;

  if ((v13 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
  {
    PLBackendGetLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v50 = v10;
      v51 = 2112;
      v52 = v14;
      _os_log_impl(&dword_199541000, v15, OS_LOG_TYPE_ERROR, "Nonfatal error removing existing resource at path: '%@', error: %@", buf, 0x16u);
    }

  }
  v16 = v11;
  v17 = (void *)MEMORY[0x1E0D73208];
  v44 = v9;
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v9, a5);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v10);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLManagedObject pathManager](self, "pathManager");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "capabilities");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = 0;
  LODWORD(v17) = objc_msgSend(v17, "ingestItemAtURL:toURL:type:options:capabilities:error:", v18, v19, 4, 14, v21, &v47);
  v22 = v47;

  if ((_DWORD)v17)
  {
    v46 = 0;
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v10);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = +[PLCacheDeleteSupport markPurgeableForFileAtURL:withUrgency:outInode:](PLCacheDeleteSupport, "markPurgeableForFileAtURL:withUrgency:outInode:", v23, 0, &v46);

    if (!v24)
    {
      PLBackendGetLog();
      v34 = objc_claimAutoreleasedReturnValue();
      v25 = v16;
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v50 = v10;
        _os_log_impl(&dword_199541000, v34, OS_LOG_TYPE_ERROR, "Error marking purgeable at path: '%@'", buf, 0xCu);
      }

      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v45 = 0;
      v36 = objc_msgSend(v35, "removeItemAtPath:error:", v10, &v45);
      v37 = v45;

      v38 = v43;
      v31 = v44;
      if ((v36 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
      {
        PLBackendGetLog();
        v39 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v50 = v10;
          _os_log_impl(&dword_199541000, v39, OS_LOG_TYPE_ERROR, "Error removing file at path: '%@'", buf, 0xCu);
        }

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D74498], 47019, 0);
      v33 = (id)objc_claimAutoreleasedReturnValue();

      goto LABEL_23;
    }
    v25 = v16;
    v16[2](v16);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v26, "isSuccess") & 1) != 0)
    {
      v27 = v46;
      objc_msgSend(v26, "result");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "setFileID:", v27);

      v29 = 0;
      v30 = 1;
      v31 = v44;
      goto LABEL_26;
    }
    objc_msgSend(v26, "error");
    v33 = (id)objc_claimAutoreleasedReturnValue();

    v31 = v44;
  }
  else
  {
    PLBackendGetLog();
    v32 = objc_claimAutoreleasedReturnValue();
    v31 = v44;
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412802;
      v50 = v44;
      v51 = 2112;
      v52 = v10;
      v53 = 2112;
      v54 = v22;
    }

    v33 = v22;
    v25 = v16;
  }
  v38 = v43;
LABEL_23:
  v40 = v33;
  v29 = v40;
  if (v38)
    *v38 = objc_retainAutorelease(v40);

  v30 = 0;
LABEL_26:

  return v30;
}

- (BOOL)repairAssetScopeValidationErrors:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  void *v14;
  int v15;
  NSObject *v16;
  void *v17;
  int v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  void *v37;
  uint64_t v38;
  void *v39;
  int v40;
  NSObject *v41;
  void *v42;
  NSObject *v43;
  NSObject *v44;
  NSObject *v45;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  char v53;
  id v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint8_t buf[4];
  uint64_t v64;
  __int16 v65;
  id v66;
  __int16 v67;
  NSObject *v68;
  _BYTE v69[128];
  _BYTE v70[128];
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  +[PLResourceModelValidationError allPossibleErrorCodes](PLResourceModelValidationError, "allPossibleErrorCodes");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v4, "count"))
  {
    v6 = v5;

    v4 = v6;
  }
  v7 = (void *)objc_msgSend(v4, "mutableCopy");
  if (objc_msgSend(v7, "count"))
  {
    v53 = 0;
    v49 = v5;
    v50 = v4;
    v48 = v7;
    while (1)
    {
      objc_msgSend(v7, "anyObject");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "integerValue");
      if (v9 <= 0xB)
        break;
LABEL_18:
      objc_msgSend(v7, "removeObject:", v8, v47);

      if (!objc_msgSend(v7, "count"))
        goto LABEL_66;
    }
    if (((1 << v9) & 0xC14) != 0)
    {
      v10 = v8;
      -[PLManagedAsset imageRequestHints](self, "imageRequestHints");
      v11 = objc_claimAutoreleasedReturnValue();
      -[PLManagedAsset recalculateImageRequestHints](self, "recalculateImageRequestHints");
      -[PLManagedAsset imageRequestHints](self, "imageRequestHints");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v52 = (void *)v11;
      LOBYTE(v11) = objc_msgSend(v12, "isEqualToData:", v11);

      if ((v11 & 1) != 0)
      {
        if (-[PLManagedAsset hasMasterThumb](self, "hasMasterThumb")
          || -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex") == -3)
        {
          PLImageManagerGetLog();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            -[PLManagedAsset objectID](self, "objectID");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex");
            *(_DWORD *)buf = 138543874;
            v64 = (uint64_t)v14;
            v65 = 2114;
            v66 = v4;
            v67 = 1024;
            LODWORD(v68) = v15;
            _os_log_impl(&dword_199541000, v13, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: Attempting to correct broken thumbnailIndex by regenerating thumbnails for objectID: %{public}@ for error codes: %{public}@, current thumbnailIndex: %d...", buf, 0x1Cu);

          }
          -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:forceSRGBConversion:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:forceSRGBConversion:", 0, 0, 0, 0, 0);
          v53 = -[PLManagedAsset hasChanges](self, "hasChanges");
        }
      }
      else
      {
        PLImageManagerGetLog();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset objectID](self, "objectID");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = -[PLManagedAsset thumbnailIndex](self, "thumbnailIndex");
          *(_DWORD *)buf = 138543874;
          v64 = (uint64_t)v17;
          v65 = 2114;
          v66 = v4;
          v67 = 1024;
          LODWORD(v68) = v18;
          _os_log_impl(&dword_199541000, v16, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: Storing corrections to imageRequestHints for objectID: %{public}@ for error codes: %{public}@,  thumbnailIndex: %d...", buf, 0x1Cu);

        }
        v53 = 1;
      }
      objc_msgSend(v7, "removeObject:", &unk_1E3760F68);
      objc_msgSend(v7, "removeObject:", &unk_1E3760F80);
      objc_msgSend(v7, "removeObject:", &unk_1E3760F98);
      v8 = v10;
      goto LABEL_17;
    }
    if (v9 != 8)
      goto LABEL_18;
    +[PLResourceGenerator expectedLocalResourceRecipesForAsset:versions:](PLResourceGenerator, "expectedLocalResourceRecipesForAsset:versions:", self, &unk_1E37641A8);
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v52, "count"))
    {
      v19 = v8;
      v20 = objc_alloc_init(MEMORY[0x1E0C99E20]);
      v59 = 0u;
      v60 = 0u;
      v61 = 0u;
      v62 = 0u;
      -[PLManagedAsset modernResources](self, "modernResources");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v59, v70, 16);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v60;
        do
        {
          for (i = 0; i != v23; ++i)
          {
            if (*(_QWORD *)v60 != v24)
              objc_enumerationMutation(v21);
            +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", objc_msgSend(*(id *)(*((_QWORD *)&v59 + 1) + 8 * i), "recipeID"));
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            if (v26)
              objc_msgSend(v20, "addObject:", v26);

          }
          v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v59, v70, 16);
        }
        while (v23);
      }

      v27 = (void *)MEMORY[0x1E0C99E20];
      objc_msgSend(v52, "set");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "setWithSet:", v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v29, "minusSet:", v20);
      v5 = v49;
      v4 = v50;
      v7 = v48;
      v8 = v19;
    }
    else
    {
      v29 = 0;
    }
    v51 = v29;
    if (!objc_msgSend(v29, "count"))
    {
LABEL_64:

LABEL_17:
      goto LABEL_18;
    }
    v47 = v8;
    v57 = 0u;
    v58 = 0u;
    v55 = 0u;
    v56 = 0u;
    v30 = v29;
    v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v55, v69, 16);
    if (!v31)
      goto LABEL_63;
    v32 = v31;
    v33 = *(_QWORD *)v56;
LABEL_36:
    v34 = 0;
    while (1)
    {
      if (*(_QWORD *)v56 != v33)
        objc_enumerationMutation(v30);
      v35 = *(void **)(*((_QWORD *)&v55 + 1) + 8 * v34);
      v36 = objc_msgSend(v35, "recipeID", v47);
      if (v36 == 131272)
        break;
      if (v36 == 0x20000)
      {
        -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        v38 = 1;
        if (!v37)
          goto LABEL_55;
        goto LABEL_47;
      }
      if (v36 != 65938)
      {
        PLImageManagerGetLog();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218242;
          v64 = 8;
          v65 = 2114;
          v66 = v35;
          _os_log_impl(&dword_199541000, v44, OS_LOG_TYPE_ERROR, "[RM]: Repair: %ld failed unsupported recipe: %{public}@", buf, 0x16u);
        }

        v37 = 0;
        goto LABEL_55;
      }
      -[PLManagedAsset pathForFullsizeRenderImageFile](self, "pathForFullsizeRenderImageFile");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v38 = 0;
      if (v37)
        goto LABEL_47;
LABEL_55:
      PLImageManagerGetLog();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218242;
        v64 = 8;
        v65 = 2114;
        v66 = v35;
        _os_log_impl(&dword_199541000, v43, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: %ld failed file not found for recipeID: %{public}@", buf, 0x16u);
      }
LABEL_61:

      if (v32 == ++v34)
      {
        v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v55, v69, 16);
        if (!v32)
        {
LABEL_63:

          v5 = v49;
          v4 = v50;
          v8 = v47;
          v7 = v48;
          goto LABEL_64;
        }
        goto LABEL_36;
      }
    }
    -[PLManagedAsset pathForFullsizeRenderVideoFile](self, "pathForFullsizeRenderVideoFile");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = 3;
    if (!v37)
      goto LABEL_55;
LABEL_47:
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = objc_msgSend(v39, "fileExistsAtPath:", v37);

    if (v40)
    {
      PLImageManagerGetLog();
      v41 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218242;
        v64 = 8;
        v65 = 2114;
        v66 = v35;
        _os_log_impl(&dword_199541000, v41, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: %ld found file on disk for missing recipeID: %{public}@, attempting install", buf, 0x16u);
      }

      v54 = 0;
      +[PLResourceInstaller onDemand_installExistingAdjustedResourceAtFilePath:withType:recipe:forAsset:error:](PLResourceInstaller, "onDemand_installExistingAdjustedResourceAtFilePath:withType:recipe:forAsset:error:", v37, v38, v35, self, &v54);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = v54;
      if (v42)
      {
        v53 = -[PLManagedAsset hasChanges](self, "hasChanges");
      }
      else
      {
        PLImageManagerGetLog();
        v45 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218498;
          v64 = 8;
          v65 = 2114;
          v66 = v35;
          v67 = 2112;
          v68 = v43;
          _os_log_impl(&dword_199541000, v45, OS_LOG_TYPE_ERROR, "[RM]: Repair: %ld failed to install resource with recipeID: %{public}@, error: %@", buf, 0x20u);
        }

      }
      goto LABEL_61;
    }
    goto LABEL_55;
  }
  v53 = 0;
LABEL_66:

  return v53 & 1;
}

- (void)reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  int64_t v11;
  int64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  uint64_t v28;
  void *v29;
  PLValidatedExternalResource *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  PLValidatedExternalResource *v41;
  uint8_t buf[4];
  void *v43;
  __int16 v44;
  void *v45;
  _QWORD v46[2];

  v46[1] = *MEMORY[0x1E0C80C00];
  if ((-[PLManagedAsset isDeleted](self, "isDeleted") & 1) == 0
    && !-[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
  {
    +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 65944);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLResourceGenerator expectedLocalResourceRecipesForAsset:versions:](PLResourceGenerator, "expectedLocalResourceRecipesForAsset:versions:", self, &unk_1E37641C0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", &unk_1E3760FB0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLResourceGenerator locallyUnavailableRecipesFromRecipes:versions:asset:](PLResourceGenerator, "locallyUnavailableRecipesFromRecipes:versions:asset:", v4, v5, self);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = objc_msgSend(v6, "containsObject:", v3);
    -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_165_98687);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7 && !v8)
    {
      -[PLManagedAsset mainFileURL](self, "mainFileURL");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = -[PLManagedAsset width](self, "width");
      v12 = -[PLManagedAsset height](self, "height");
      LOWORD(v40) = -[PLManagedAsset kind](self, "kind");
      +[PLResourceInstaller generateValidatedExternalImageResourceOfType:forFilePath:requireFileToBePresent:version:basedOnFullSizeWidth:andHeight:recipe:assetKind:error:](PLResourceInstaller, "generateValidatedExternalImageResourceOfType:forFilePath:requireFileToBePresent:version:basedOnFullSizeWidth:andHeight:recipe:assetKind:error:", 0, v10, 0, 0, v11, v12, v3, v40, 0);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      v46[0] = v13;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLResourceDataStoreManager storeExternalResources:forAsset:forLifecycleEvent:error:](PLResourceDataStoreManager, "storeExternalResources:forAsset:forLifecycleEvent:error:", v14, self, 2, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "anyObject");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v16;
      if (v16)
      {
        objc_msgSend(v16, "setLocalAvailabilityTarget:", 1);
        PLImageManagerGetLog();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v43 = v3;
          v44 = 2114;
          v45 = v19;
          _os_log_impl(&dword_199541000, v18, OS_LOG_TYPE_DEFAULT, "[RM]: Scheduling generation of recipe: %{public}@ for asset uuid: %{public}@...", buf, 0x16u);

        }
      }
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "libraryServicesManager");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "backgroundJobService");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "signalBackgroundProcessingNeededOnLibrary:", v20);

    }
    +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 131280);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLResourceGenerator expectedLocalResourceRecipesForAsset:versions:](PLResourceGenerator, "expectedLocalResourceRecipesForAsset:versions:", self, &unk_1E37641D8);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", &unk_1E3760FB0);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLResourceGenerator locallyUnavailableRecipesFromRecipes:versions:asset:](PLResourceGenerator, "locallyUnavailableRecipesFromRecipes:versions:asset:", v24, v25, self);
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    v27 = objc_msgSend(v26, "containsObject:", v23);
    -[PLManagedAsset firstPersistedResourceMatching:](self, "firstPersistedResourceMatching:", &__block_literal_global_169_98689);
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = (void *)v28;
    if (v27 && !v28)
    {
      v30 = objc_alloc_init(PLValidatedExternalResource);
      -[PLValidatedExternalResource setResourceType:](v30, "setResourceType:", 3);
      -[PLValidatedExternalResource setVersion:](v30, "setVersion:", 0);
      -[PLValidatedExternalResource setRecipeID:](v30, "setRecipeID:", objc_msgSend(v23, "recipeID"));
      v41 = v30;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v41, 1);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      +[PLResourceDataStoreManager storeExternalResources:forAsset:forLifecycleEvent:error:](PLResourceDataStoreManager, "storeExternalResources:forAsset:forLifecycleEvent:error:", v31, self, 2, 0);
      v32 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v32, "anyObject");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = v33;
      if (v33)
      {
        objc_msgSend(v33, "setLocalAvailabilityTarget:", 1);
        PLImageManagerGetLog();
        v35 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          -[PLManagedAsset uuid](self, "uuid");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v43 = v23;
          v44 = 2114;
          v45 = v36;
          _os_log_impl(&dword_199541000, v35, OS_LOG_TYPE_DEFAULT, "[RM]: Scheduling generation of recipe: %{public}@ for asset uuid: %{public}@...", buf, 0x16u);

        }
      }
      -[PLManagedObject photoLibrary](self, "photoLibrary");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "libraryServicesManager");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "backgroundJobService");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "signalBackgroundProcessingNeededOnLibrary:", v37);

    }
  }
}

BOOL __98__PLManagedAsset_RM__reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker__block_invoke_168(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  if (objc_msgSend(v2, "recipeID"))
    v3 = 0;
  else
    v3 = objc_msgSend(v2, "resourceType") == 3;

  return v3;
}

BOOL __98__PLManagedAsset_RM__reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  if (objc_msgSend(v2, "recipeID"))
    v3 = 0;
  else
    v3 = objc_msgSend(v2, "resourceType") == 0;

  return v3;
}

id __87__PLManagedAsset_RM__installExistingGenerativePlaygroundFaceResourcesFileAtPath_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 327693);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceInstaller onDemand_installExistingComputeResourceAtFilePath:recipe:forAsset:](PLResourceInstaller, "onDemand_installExistingComputeResourceAtFilePath:recipe:forAsset:", *(_QWORD *)(a1 + 32), v2, *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id __64__PLManagedAsset_RM__installExistingAlchemistImageAtPath_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 66137);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceInstaller onDemand_installExistingAdjustmentSuggestionResourceAtFilePath:recipe:forAsset:](PLResourceInstaller, "onDemand_installExistingAdjustmentSuggestionResourceAtFilePath:recipe:forAsset:", *(_QWORD *)(a1 + 32), v2, *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id __79__PLManagedAsset_RM__installExistingWallpaperComputeResourcesFileAtPath_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", 327687);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLResourceInstaller onDemand_installExistingComputeResourceAtFilePath:recipe:forAsset:](PLResourceInstaller, "onDemand_installExistingComputeResourceAtFilePath:recipe:forAsset:", *(_QWORD *)(a1 + 32), v2, *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

BOOL __48__PLManagedAsset_RM__localVideoKeyFrameResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "recipeID") == 65749
    && !objc_msgSend(v2, "resourceType")
    && objc_msgSend(v2, "version") == 3;

  return v3;
}

BOOL __46__PLManagedAsset_RM__penultimateImageResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "version") == 1 && objc_msgSend(v2, "resourceType") == 0;

  return v3;
}

BOOL __52__PLManagedAsset_RM__overflowAdjustmentDataResource__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "cplType") == 13;
}

BOOL __50__PLManagedAsset_RM__primaryStoreOriginalResource__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "cplType") == 1;
}

BOOL __64__PLManagedAsset_RM__persistedResourcesWithRecipeID_andVersion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  v4 = objc_msgSend(v3, "recipeID") == *(_DWORD *)(a1 + 32)
    && objc_msgSend(v3, "version") == *(_DWORD *)(a1 + 36);

  return v4;
}

BOOL __43__PLManagedAsset_RM__resourcesWithVersion___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "version") == *(_DWORD *)(a1 + 32);
}

uint64_t __48__PLManagedAsset_RM__persistedAdjustedResources__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isAdjustedResource");
}

BOOL __62__PLManagedAsset_RM__persistedOriginalVideoComplementResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = !objc_msgSend(v2, "recipeID")
    && !objc_msgSend(v2, "version")
    && objc_msgSend(v2, "resourceType") == 3;

  return v3;
}

BOOL __52__PLManagedAsset_RM__persistedOriginalVideoResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = !objc_msgSend(v2, "recipeID")
    && !objc_msgSend(v2, "version")
    && objc_msgSend(v2, "resourceType") == 1;

  return v3;
}

BOOL __52__PLManagedAsset_RM__persistedOriginalImageResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = !objc_msgSend(v2, "recipeID")
    && !objc_msgSend(v2, "version")
    && objc_msgSend(v2, "resourceType") == 0;

  return v3;
}

uint64_t __49__PLManagedAsset_RM__persistedResourcesMatching___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __46__PLManagedAsset_RM__resourcesSortedByQuality__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("qualitySortValue"), 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v3[0] = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v3, 1);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)resourcesSortedByQuality_s_sortDescriptors;
  resourcesSortedByQuality_s_sortDescriptors = v1;

}

BOOL __45__PLManagedAsset_RM__masterThumbnailResource__block_invoke(uint64_t a1, void *a2)
{
  return +[PLResourceDataStore isMasterThumbRecipeID:](PLResourceDataStore, "isMasterThumbRecipeID:", objc_msgSend(a2, "recipeID"));
}

void __116__PLManagedAsset_RM__recalculateImageRequestHintsForResource_afterLocalAvailabilityChangeFrom_previousDataStoreKey___block_invoke(uint64_t a1, uint64_t a2, int a3, float a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  id v16;
  float v17;
  int v18;
  void *v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  char v24;
  id v25;

  v25 = a6;
  v16 = a7;
  v17 = *(float *)(a1 + 72);
  if (v17 <= a4)
  {
    if (vabds_f32(a4, v17) >= 0.00000011921 || a3 == 0)
    {
      LOBYTE(v18) = 0;
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "uniformTypeIdentifier");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v20, "isPrimaryImageFormat") ^ 1;

    }
  }
  else
  {
    LOBYTE(v18) = 1;
  }
  v21 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  if (v21 == 2)
  {
    v22 = objc_msgSend(v16, "isEqualToKey:", *(_QWORD *)(a1 + 40));
    v23 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
    if ((v22 & 1) != 0)
    {
LABEL_24:
      *v23 = 0;
      goto LABEL_25;
    }
    v21 = *v23;
  }
  if (v21 == 1)
    v24 = v18;
  else
    v24 = 1;
  if ((v24 & 1) == 0)
  {
    if (*(_QWORD *)(a1 + 48))
      objc_msgSend(*(id *)(a1 + 56), "appendData:");
    objc_msgSend(*(id *)(a1 + 56), "appendBytes:length:", a8, a9);
    goto LABEL_23;
  }
  objc_msgSend(*(id *)(a1 + 56), "appendBytes:length:", a8, a9);
  if (a2 == 0x7FFFFFFFFFFFFFFFLL && v21 == 1)
  {
    if (*(_QWORD *)(a1 + 48))
      objc_msgSend(*(id *)(a1 + 56), "appendData:");
LABEL_23:
    v23 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
    goto LABEL_24;
  }
LABEL_25:

}

void __56__PLManagedAsset_RM__imageRequestHintsContainsResource___block_invoke(uint64_t a1, float a2, uint64_t a3, int a4, int a5, void *a6, void *a7, uint64_t a8, uint64_t a9, int a10, _BYTE *a11)
{
  id v16;
  int v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  float v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  int v31;
  id v32;

  v32 = a6;
  v16 = a7;
  v17 = objc_msgSend((id)objc_opt_class(), "storeClassID");
  v18 = *(void **)(a1 + 32);
  if (v17 == 1)
  {
    v19 = objc_msgSend(v18, "width");
    if (objc_msgSend(*(id *)(a1 + 32), "height") * v19 < 1)
    {
      v23 = 0.0;
    }
    else
    {
      v20 = objc_msgSend(*(id *)(a1 + 40), "unorientedWidth");
      v21 = (float)(objc_msgSend(*(id *)(a1 + 40), "unorientedHeight") * v20);
      v22 = objc_msgSend(*(id *)(a1 + 32), "width");
      v23 = v21 / (float)(objc_msgSend(*(id *)(a1 + 32), "height") * v22);
    }
    if (vabds_f32(v23, a2) < 0.00000011921)
    {
      objc_msgSend(*(id *)(a1 + 40), "uniformTypeIdentifier");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v30, "isPrimaryImageFormat") == a4
        && objc_msgSend(*(id *)(a1 + 40), "isDefaultOrientation") == a5)
      {
        v31 = objc_msgSend(*(id *)(a1 + 40), "recipeID");

        if (v31 == a10)
        {
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
          *a11 = 1;
        }
      }
      else
      {

      }
    }
  }
  else
  {
    objc_msgSend(v18, "assetID");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "resourceURLForKey:assetID:", v16, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "dataStore");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "dataStoreKey");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "assetID");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "resourceURLForKey:assetID:", v27, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    if (v25 && objc_msgSend(v25, "isEqual:", v29))
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
      *a11 = 1;
    }

  }
}

BOOL __69__PLManagedAsset_RM___anyOriginalNonDerivativeAlternateImageResource__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "resourceType") == 4
    && !objc_msgSend(v2, "version")
    && (objc_msgSend(v2, "recipeID") & 1) == 0;

  return v3;
}

id __66__PLManagedAsset_RM___persistedResourceForResourceIdentity_error___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[4];
  _QWORD v14[5];

  v14[4] = *MEMORY[0x1E0C80C00];
  v2 = (void *)_persistedResourceForResourceIdentity_error__s_intraAssetPredicateTemplate;
  v13[0] = CFSTR("RESOURCE_TYPE");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(*(id *)(a1 + 32), "resourceType"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v3;
  v13[1] = CFSTR("VERSION");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(*(id *)(a1 + 32), "version"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v4;
  v13[2] = CFSTR("RECIPEID");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(*(id *)(a1 + 32), "recipeID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13[3] = CFSTR("UTIS");
  v6 = *(_QWORD *)(a1 + 40);
  v14[2] = v5;
  v14[3] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "predicateWithSubstitutionVariables:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 48), "modernResources");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "filteredSetUsingPredicate:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "anyObject");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void __66__PLManagedAsset_RM___persistedResourceForResourceIdentity_error___block_invoke()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset == $ASSET AND resourceType == $RESOURCE_TYPE AND version == $VERSION AND recipeID == $RECIPEID and compactUTI IN $UTIS"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)_persistedResourceForResourceIdentity_error__s_fetchPredicateTemplate;
  _persistedResourceForResourceIdentity_error__s_fetchPredicateTemplate = v0;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("resourceType == $RESOURCE_TYPE AND version == $VERSION AND recipeID == $RECIPEID and compactUTI IN $UTIS"));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)_persistedResourceForResourceIdentity_error__s_intraAssetPredicateTemplate;
  _persistedResourceForResourceIdentity_error__s_intraAssetPredicateTemplate = v2;

}

+ (id)predicateFilteringForNonDerivativeRecipeIDs
{
  if (predicateFilteringForNonDerivativeRecipeIDs_s_onceToken != -1)
    dispatch_once(&predicateFilteringForNonDerivativeRecipeIDs_s_onceToken, &__block_literal_global_98817);
  return (id)predicateFilteringForNonDerivativeRecipeIDs_s_predicate;
}

+ (id)predicateExcludingLocallyUnavailableDynamicCPLResources
{
  if (predicateExcludingLocallyUnavailableDynamicCPLResources_s_onceToken != -1)
    dispatch_once(&predicateExcludingLocallyUnavailableDynamicCPLResources_s_onceToken, &__block_literal_global_24_98804);
  return (id)predicateExcludingLocallyUnavailableDynamicCPLResources_s_predicate;
}

+ (id)predicateToFetchResourcesAwaitingLocalAvailabilityChange
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K == %d AND %K >= %d"), CFSTR("localAvailability"), 0xFFFFFFFFLL, CFSTR("localAvailabilityTarget"), 1);
}

+ (id)debugDescriptionForHintData:(id)a3 assetWidth:(int64_t)a4 assetHeight:(int64_t)a5 assetID:(id)a6
{
  id v10;
  objc_class *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  _QWORD v21[4];
  id v22;
  id v23;

  v10 = a6;
  v11 = (objc_class *)MEMORY[0x1E0CB37A0];
  v12 = a3;
  v13 = objc_alloc_init(v11);
  objc_msgSend(v10, "uuid");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "appendFormat:", CFSTR("Image request hints for %@"), v14);

  objc_msgSend(v10, "libraryID");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __81__PLManagedAsset_RM__debugDescriptionForHintData_assetWidth_assetHeight_assetID___block_invoke;
  v21[3] = &unk_1E3677050;
  v16 = v13;
  v22 = v16;
  v23 = v10;
  v17 = v10;
  objc_msgSend(a1, "enumerateImageRequestHintData:assetWidth:assetHeight:libraryID:startingOffset:assetID:block:", v12, a4, a5, v15, 0, v17, v21);

  v18 = v23;
  v19 = v16;

  return v19;
}

+ (id)calculateImageRequestHintsFromSortedResources:(id)a3 asset:(id)a4
{
  float v4;
  float v5;
  float v6;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v32;
  float v36;
  float v37;
  void *v38;
  char v39;
  char v40;
  char v41;
  id v42;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id obj;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  char v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  objc_msgSend(MEMORY[0x1E0C99DF0], "data");
  v45 = (id)objc_claimAutoreleasedReturnValue();
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  v10 = v8;
  v11 = 0x1E0C99000uLL;
  obj = v10;
  v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v48, v54, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v49;
    LOWORD(v4) = 5120;
    LOWORD(v5) = 31743;
    LOWORD(v6) = 15360;
    v44 = *(_QWORD *)v49;
    do
    {
      v15 = 0;
      v46 = v13;
      do
      {
        if (*(_QWORD *)v49 != v14)
          objc_enumerationMutation(obj);
        v16 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * v15);
        if (PLCanIncludeResourceInHints(v16, v9))
        {
          v17 = objc_msgSend(v9, "width");
          v18 = objc_msgSend(v9, "height");
          v19 = v16;
          objc_msgSend(*(id *)(v11 + 3568), "dataWithCapacity:", 3);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "dataStoreKey");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "keyData");
          v22 = (void *)objc_claimAutoreleasedReturnValue();

          if (v22)
          {
            objc_msgSend(v19, "dataStore");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            if (v23)
            {
              v24 = objc_msgSend((id)objc_opt_class(), "storeClassID");
              v25 = objc_msgSend(v19, "unorientedWidth");
              v26 = objc_msgSend(v19, "unorientedHeight");
              _S0 = v4;
              if (v18 * v17 >= 1)
              {
                _S0 = v4;
                if (v26 * v25 >= 1)
                {
                  _S0 = 1.0 / (float)((float)(v26 * v25) / (float)(v18 * v17));
                  __asm { FCVT            H0, S0 }
                }
              }
              v32 = v24 & 3;
              __asm { FCVT            S1, H0 }
              _S1 = fabsf(_S1);
              __asm
              {
                FCVT            H1, S1
                FCVT            S1, H1
              }
              if (_S1 == INFINITY)
                v36 = v5;
              else
                v36 = _S0;
              if (objc_msgSend(v19, "recipeID", v44) == 65749)
                v37 = v6;
              else
                v37 = v36;
              v52 = LOWORD(v37);
              objc_msgSend(v19, "uniformTypeIdentifier");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v38, "isPrimaryImageFormat"))
                v39 = 4;
              else
                v39 = 0;
              v40 = v39 | v32;

              if (objc_msgSend(v19, "isDefaultOrientation"))
                v41 = 8;
              else
                v41 = 0;
              v53 = v40 | v41;
              objc_msgSend(v20, "appendBytes:length:", &v52, 3);
              objc_msgSend(v20, "appendData:", v22);
              v42 = v20;
              v11 = 0x1E0C99000;
            }
            else
            {
              v42 = 0;
            }
            v13 = v46;

            v14 = v44;
          }
          else
          {
            v42 = 0;
            v13 = v46;
          }

          if (objc_msgSend(v42, "length"))
            objc_msgSend(v45, "appendData:", v42);

        }
        ++v15;
      }
      while (v13 != v15);
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v48, v54, 16);
    }
    while (v13);
  }

  return v45;
}

+ (id)fetchRequestForResourcesWithObjectID:(id)a3 versions:(id)a4 allowDerivatives:(BOOL)a5 excludeDynamicCPLResources:(BOOL)a6 additionalPredicate:(id)a7 relationshipKeyPathsForPrefetching:(id)a8
{
  _BOOL4 v10;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v10 = a6;
  v13 = a3;
  v14 = a4;
  v15 = a7;
  v16 = (void *)MEMORY[0x1E0C99DE8];
  v17 = a8;
  objc_msgSend(v16, "array");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("version IN %@"), v14);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "addObject:", v19);

  }
  if (a5)
  {
    if (!v10)
      goto LABEL_8;
    objc_msgSend((id)objc_opt_class(), "predicateExcludingLocallyUnavailableDynamicCPLResources");
    v20 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend((id)objc_opt_class(), "predicateFilteringForNonDerivativeRecipeIDs");
    v20 = objc_claimAutoreleasedReturnValue();
  }
  v21 = (void *)v20;
  objc_msgSend(v18, "addObject:", v20);

LABEL_8:
  if (v15)
    objc_msgSend(v18, "addObject:", v15);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("asset == %@"), v13);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "addObject:", v22);

  +[PLInternalResource fetchRequest](PLInternalResource, "fetchRequest");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v18);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "setPredicate:", v24);

  objc_msgSend(v23, "setRelationshipKeyPathsForPrefetching:", v17);
  objc_msgSend(v23, "setReturnsObjectsAsFaults:", 0);

  return v23;
}

+ (id)fetchResourcesForAssetWithObjectID:(id)a3 inContext:(id)a4 versions:(id)a5 includeVirtualResources:(BOOL)a6 allowDerivatives:(BOOL)a7 excludeDynamicCPLResources:(BOOL)a8 additionalPredicate:(id)a9 relationshipKeyPathsForPrefetching:(id)a10 error:(id *)a11
{
  _BOOL8 v11;
  _BOOL4 v12;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v41;
  void *v42;
  id v43;
  _BOOL4 v44;
  _BOOL4 v45;
  void *v47;
  id v48;
  _QWORD v49[2];

  v44 = a8;
  v11 = a7;
  v12 = a6;
  v49[1] = *MEMORY[0x1E0C80C00];
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = v16;
  v20 = a9;
  v48 = a10;
  if (v19)
  {
    if (v17)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+RM.m"), 954, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("assetObjectID"));

    if (v17)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "handleFailureInMethod:object:file:lineNumber:description:", a2, a1, CFSTR("PLManagedAsset+RM.m"), 955, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("context"));

LABEL_3:
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v45 = v12;
  if (v12)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("version IN %@"), v18);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "addObject:", v23);

    }
    if (!v11)
    {
      objc_msgSend((id)objc_opt_class(), "predicateFilteringForNonDerivativeRecipeIDs");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "addObject:", v24);

    }
    v25 = v17;
    v43 = v18;
    if (v20)
      objc_msgSend(v22, "addObject:", v20);
    objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v22);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLManagedAsset assetWithObjectID:inManagedObjectContext:](PLManagedAsset, "assetWithObjectID:inManagedObjectContext:", v19, v25);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "nonPersistedResources");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "filteredArrayUsingPredicate:", v26);
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v21, "addObjectsFromArray:", v29);
    v18 = v43;
  }
  else
  {
    v27 = 0;
    v25 = v17;
    v26 = 0;
  }
  v30 = a1;
  v47 = v19;
  v31 = v19;
  v32 = v18;
  objc_msgSend(v30, "fetchRequestForResourcesWithObjectID:versions:allowDerivatives:excludeDynamicCPLResources:additionalPredicate:relationshipKeyPathsForPrefetching:", v31, v18, v11, v44, v20, v48);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = v25;
  objc_msgSend(v25, "executeFetchRequest:error:", v33, a11);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "addObjectsFromArray:", v35);
  if (v45)
  {
    objc_msgSend(v27, "virtualResourcesThatReplaceMissingPersistedResources:", v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "filteredArrayUsingPredicate:", v26);
    v37 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v21, "addObjectsFromArray:", v37);
  }
  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("qualitySortValue"), 1);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v49[0] = v38;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v49, 1);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "sortUsingDescriptors:", v39);

  return v21;
}

void __81__PLManagedAsset_RM__debugDescriptionForHintData_assetWidth_assetHeight_assetID___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v7 = *(void **)(a1 + 32);
  v8 = a6;
  DCIM_NSStringFromCGSize();
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fileURLForAssetID:", *(_QWORD *)(a1 + 40));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "path");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appendFormat:", CFSTR("\n  %@ %@"), v11, v10);

}

void __77__PLManagedAsset_RM__predicateExcludingLocallyUnavailableDynamicCPLResources__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];

  v9[4] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB3528];
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %d"), CFSTR("dataStoreClassID"), 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v1;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K != %d"), CFSTR("dataStoreSubtype"), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v9[1] = v2;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K < %d"), CFSTR("localAvailability"), 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[2] = v3;
  objc_msgSend(MEMORY[0x1E0D11440], "predicateMatchingDynamicFingerprintForKey:", CFSTR("fingerprint"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[3] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "andPredicateWithSubpredicates:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "notPredicateWithSubpredicate:", v6);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = (void *)predicateExcludingLocallyUnavailableDynamicCPLResources_s_predicate;
  predicateExcludingLocallyUnavailableDynamicCPLResources_s_predicate = v7;

}

void __65__PLManagedAsset_RM__predicateFilteringForNonDerivativeRecipeIDs__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("(%K == %d) || (%K & %d) != %d"), CFSTR("recipeID"), 0, CFSTR("recipeID"), 1, 1);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)predicateFilteringForNonDerivativeRecipeIDs_s_predicate;
  predicateFilteringForNonDerivativeRecipeIDs_s_predicate = v0;

}

@end
